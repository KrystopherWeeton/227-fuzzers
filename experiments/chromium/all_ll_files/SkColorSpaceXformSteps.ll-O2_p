; ModuleID = '../../third_party/skia/src/core/SkColorSpaceXformSteps.cpp'
source_filename = "../../third_party/skia/src/core/SkColorSpaceXformSteps.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%"class.skvm::Builder" = type <{ %class.SkTHashMap, %"class.std::__1::vector", %"class.std::__1::vector.10", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.7" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.10" }
%"struct.skvm::Ptr" = type { i32 }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%class.anon.17 = type { %struct.skcms_TransferFunction*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.skvm::I32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>

$_ZN4skvm8Uniforms5pushFEf = comdat any

@_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_ = hidden unnamed_addr alias void (%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32), void (%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32)* @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #0 align 2 {
  %6 = alloca %struct.skcms_Matrix3x3, align 4
  %7 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 5, i1 false) #8
  %8 = icmp eq i32 %4, 1
  %9 = select i1 %8, i32 %2, i32 %4
  %10 = icmp eq %class.SkColorSpace* %1, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #8
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi %class.SkColorSpace* [ %1, %5 ], [ %12, %11 ]
  %15 = icmp eq %class.SkColorSpace* %3, null
  %16 = select i1 %15, %class.SkColorSpace* %14, %class.SkColorSpace* %3
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %20, %23
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %16, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %16, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %28, %31
  %33 = icmp eq i64 %24, %32
  %34 = icmp eq i32 %9, %2
  %35 = and i1 %34, %33
  br i1 %35, label %133, label %36

36:                                               ; preds = %13
  %37 = icmp eq i32 %2, 2
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %7, align 4
  %39 = tail call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* %14) #8
  %40 = xor i1 %39, true
  %41 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 1
  %42 = zext i1 %40 to i8
  store i8 %42, i8* %41, align 1
  %43 = load i32, i32* %21, align 4
  %44 = load i32, i32* %29, align 4
  %45 = icmp ne i32 %43, %44
  %46 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 2
  %47 = zext i1 %45 to i8
  store i8 %47, i8* %46, align 2
  %48 = tail call zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* %16) #8
  %49 = xor i1 %48, true
  %50 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 3
  %51 = zext i1 %49 to i8
  store i8 %51, i8* %50, align 1
  %52 = icmp ne i32 %2, 1
  %53 = icmp eq i32 %9, 2
  %54 = and i1 %52, %53
  %55 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 4
  %56 = zext i1 %54 to i8
  store i8 %56, i8* %55, align 4
  %57 = load i8, i8* %46, align 2, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %105, label %59

59:                                               ; preds = %36
  %60 = bitcast %struct.skcms_Matrix3x3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %60) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %60, i8 -1, i64 36, i1 false)
  call void @_ZNK12SkColorSpace16gamutTransformToEPKS_P15skcms_Matrix3x3(%class.SkColorSpace* %14, %class.SkColorSpace* %16, %struct.skcms_Matrix3x3* nonnull %6) #8
  %61 = bitcast %struct.skcms_Matrix3x3* %6 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3
  %64 = bitcast [9 x float]* %63 to i32*
  store i32 %62, i32* %64, align 4
  %65 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 1
  %66 = bitcast [3 x float]* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 1
  %69 = bitcast float* %68 to i32*
  store i32 %67, i32* %69, align 4
  %70 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 2
  %71 = bitcast [3 x float]* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 2
  %74 = bitcast float* %73 to i32*
  store i32 %72, i32* %74, align 4
  %75 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 0, i64 1
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 3
  %79 = bitcast float* %78 to i32*
  store i32 %77, i32* %79, align 4
  %80 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 1, i64 1
  %81 = bitcast float* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 4
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 2, i64 1
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 5
  %89 = bitcast float* %88 to i32*
  store i32 %87, i32* %89, align 4
  %90 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 0, i64 2
  %91 = bitcast float* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 6
  %94 = bitcast float* %93 to i32*
  store i32 %92, i32* %94, align 4
  %95 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 1, i64 2
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 7
  %99 = bitcast float* %98 to i32*
  store i32 %97, i32* %99, align 4
  %100 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 2, i64 2
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 8
  %104 = bitcast float* %103 to i32*
  store i32 %102, i32* %104, align 4
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %60) #8
  br label %105

105:                                              ; preds = %36, %59
  %106 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 1
  call void @_ZNK12SkColorSpace10transferFnEP22skcms_TransferFunction(%class.SkColorSpace* %14, %struct.skcms_TransferFunction* %106) #8
  %107 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 2
  call void @_ZNK12SkColorSpace13invTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* %16, %struct.skcms_TransferFunction* %107) #8
  %108 = load i8, i8* %41, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %121, label %110

110:                                              ; preds = %105
  %111 = load i8, i8* %46, align 2, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %121

113:                                              ; preds = %110
  %114 = load i8, i8* %50, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %113
  %117 = load i32, i32* %17, align 4
  %118 = load i32, i32* %25, align 4
  %119 = icmp eq i32 %117, %118
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  store i8 0, i8* %41, align 1
  store i8 0, i8* %50, align 1
  br label %121

121:                                              ; preds = %113, %110, %105, %120, %116
  %122 = phi i1 [ false, %113 ], [ false, %110 ], [ true, %105 ], [ true, %120 ], [ false, %116 ]
  %123 = load i8, i8* %7, align 4, !range !2
  %124 = icmp ne i8 %123, 0
  %125 = and i1 %124, %122
  br i1 %125, label %126, label %133

126:                                              ; preds = %121
  %127 = load i8, i8* %50, align 1, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %126
  %130 = load i8, i8* %55, align 4, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  store i8 0, i8* %7, align 4
  store i8 0, i8* %55, align 4
  br label %133

133:                                              ; preds = %121, %13, %129, %126, %132
  ret void
}

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #1

declare zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK12SkColorSpace16gamutTransformToEPKS_P15skcms_Matrix3x3(%class.SkColorSpace*, %class.SkColorSpace*, %struct.skcms_Matrix3x3*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK12SkColorSpace10transferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #1

declare void @_ZNK12SkColorSpace13invTransferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds float, float* %1, i64 3
  %8 = load float, float* %7, align 4
  %9 = fdiv float 1.000000e+00, %8
  %10 = fmul float %9, 0.000000e+00
  %11 = fcmp oeq float %10, 0.000000e+00
  %12 = select i1 %11, float %9, float 0.000000e+00
  %13 = load float, float* %1, align 4
  %14 = fmul float %13, %12
  store float %14, float* %1, align 4
  %15 = getelementptr inbounds float, float* %1, i64 1
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, %12
  store float %17, float* %15, align 4
  %18 = getelementptr inbounds float, float* %1, i64 2
  %19 = load float, float* %18, align 4
  %20 = fmul float %12, %19
  store float %20, float* %18, align 4
  br label %21

21:                                               ; preds = %2, %6
  %22 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 1
  %27 = load float, float* %1, align 4
  %28 = tail call float @skcms_TransferFunction_eval(%struct.skcms_TransferFunction* %26, float %27) #8
  store float %28, float* %1, align 4
  %29 = getelementptr inbounds float, float* %1, i64 1
  %30 = load float, float* %29, align 4
  %31 = tail call float @skcms_TransferFunction_eval(%struct.skcms_TransferFunction* %26, float %30) #8
  store float %31, float* %29, align 4
  %32 = getelementptr inbounds float, float* %1, i64 2
  %33 = load float, float* %32, align 4
  %34 = tail call float @skcms_TransferFunction_eval(%struct.skcms_TransferFunction* %26, float %33) #8
  store float %34, float* %32, align 4
  br label %35

35:                                               ; preds = %21, %25
  %36 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 2
  %37 = load i8, i8* %36, align 2, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %35
  %40 = load float, float* %1, align 4
  %41 = getelementptr inbounds float, float* %1, i64 1
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds float, float* %1, i64 2
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 0
  %46 = load float, float* %45, align 4
  %47 = fmul float %40, %46
  %48 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 3
  %49 = load float, float* %48, align 4
  %50 = fmul float %42, %49
  %51 = fadd float %47, %50
  %52 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 6
  %53 = load float, float* %52, align 4
  %54 = fmul float %44, %53
  %55 = fadd float %51, %54
  store float %55, float* %1, align 4
  %56 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 1
  %57 = load float, float* %56, align 4
  %58 = fmul float %40, %57
  %59 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 4
  %60 = load float, float* %59, align 4
  %61 = fmul float %42, %60
  %62 = fadd float %58, %61
  %63 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 7
  %64 = load float, float* %63, align 4
  %65 = fmul float %44, %64
  %66 = fadd float %62, %65
  store float %66, float* %41, align 4
  %67 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 2
  %68 = load float, float* %67, align 4
  %69 = fmul float %40, %68
  %70 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 5
  %71 = load float, float* %70, align 4
  %72 = fmul float %42, %71
  %73 = fadd float %69, %72
  %74 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3, i64 8
  %75 = load float, float* %74, align 4
  %76 = fmul float %44, %75
  %77 = fadd float %73, %76
  store float %77, float* %43, align 4
  br label %78

78:                                               ; preds = %39, %35
  %79 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 3
  %80 = load i8, i8* %79, align 1, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 2
  %84 = load float, float* %1, align 4
  %85 = tail call float @skcms_TransferFunction_eval(%struct.skcms_TransferFunction* %83, float %84) #8
  store float %85, float* %1, align 4
  %86 = getelementptr inbounds float, float* %1, i64 1
  %87 = load float, float* %86, align 4
  %88 = tail call float @skcms_TransferFunction_eval(%struct.skcms_TransferFunction* %83, float %87) #8
  store float %88, float* %86, align 4
  %89 = getelementptr inbounds float, float* %1, i64 2
  %90 = load float, float* %89, align 4
  %91 = tail call float @skcms_TransferFunction_eval(%struct.skcms_TransferFunction* %83, float %90) #8
  store float %91, float* %89, align 4
  br label %92

92:                                               ; preds = %78, %82
  %93 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 4
  %94 = load i8, i8* %93, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds float, float* %1, i64 3
  %98 = load float, float* %97, align 4
  %99 = load float, float* %1, align 4
  %100 = fmul float %98, %99
  store float %100, float* %1, align 4
  %101 = getelementptr inbounds float, float* %1, i64 1
  %102 = load float, float* %101, align 4
  %103 = fmul float %98, %102
  store float %103, float* %101, align 4
  %104 = getelementptr inbounds float, float* %1, i64 2
  %105 = load float, float* %104, align 4
  %106 = fmul float %98, %105
  store float %106, float* %104, align 4
  br label %107

107:                                              ; preds = %92, %96
  ret void
}

declare float @skcms_TransferFunction_eval(%struct.skcms_TransferFunction*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps*, %class.SkRasterPipeline*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %1, i32 7, i8* null) #8
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 1
  tail call void @_ZN16SkRasterPipeline24append_transfer_functionERK22skcms_TransferFunction(%class.SkRasterPipeline* %1, %struct.skcms_TransferFunction* dereferenceable(28) %12) #8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 2
  %15 = load i8, i8* %14, align 2, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 3
  %19 = bitcast [9 x float]* %18 to i8*
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %1, i32 128, i8* %19) #8
  br label %20

20:                                               ; preds = %13, %17
  %21 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 2
  tail call void @_ZN16SkRasterPipeline24append_transfer_functionERK22skcms_TransferFunction(%class.SkRasterPipeline* %1, %struct.skcms_TransferFunction* dereferenceable(28) %25) #8
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %0, i64 0, i32 0, i32 4
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %1, i32 8, i8* null) #8
  br label %31

31:                                               ; preds = %26, %30
  ret void
}

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #1

declare void @_ZN16SkRasterPipeline24append_transfer_functionERK22skcms_TransferFunction(%class.SkRasterPipeline*, %struct.skcms_TransferFunction* dereferenceable(28)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22sk_program_transfer_fnPN4skvm7BuilderEPNS_8UniformsERK22skcms_TransferFunctionNS_5ColorE(%"struct.skvm::Color"* noalias nocapture sret, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %struct.skcms_TransferFunction* dereferenceable(28), %"struct.skvm::Color"* nocapture readonly byval(%"struct.skvm::Color") align 8) local_unnamed_addr #0 {
  %6 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %7 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %8 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %9 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %10 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %11 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %12 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %13 = alloca %class.anon.17, align 8
  %14 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %6, i64 0, i32 0
  %16 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %6, i64 0, i32 1
  %17 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 0
  %18 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = load float, float* %17, align 4
  %20 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %19)
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %21, i32 %23) #8
  %25 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 0
  store %"class.skvm::Builder"* %25, %"class.skvm::Builder"** %15, align 8
  %26 = extractvalue { %"class.skvm::Builder"*, i32 } %24, 1
  store i32 %26, i32* %16, align 8
  %27 = bitcast { %"class.skvm::Builder"*, i32 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %7, i64 0, i32 0
  %29 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %7, i64 0, i32 1
  %30 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 1
  %31 = bitcast { %"class.skvm::Builder"*, i32 }* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  %32 = load float, float* %30, align 4
  %33 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %32)
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %34, i32 %36) #8
  %38 = extractvalue { %"class.skvm::Builder"*, i32 } %37, 0
  store %"class.skvm::Builder"* %38, %"class.skvm::Builder"** %28, align 8
  %39 = extractvalue { %"class.skvm::Builder"*, i32 } %37, 1
  store i32 %39, i32* %29, align 8
  %40 = bitcast { %"class.skvm::Builder"*, i32 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8
  %41 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %8, i64 0, i32 0
  %42 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %8, i64 0, i32 1
  %43 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 2
  %44 = bitcast { %"class.skvm::Builder"*, i32 }* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  %45 = load float, float* %43, align 4
  %46 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %45)
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %47, i32 %49) #8
  %51 = extractvalue { %"class.skvm::Builder"*, i32 } %50, 0
  store %"class.skvm::Builder"* %51, %"class.skvm::Builder"** %41, align 8
  %52 = extractvalue { %"class.skvm::Builder"*, i32 } %50, 1
  store i32 %52, i32* %42, align 8
  %53 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #8
  %54 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %9, i64 0, i32 0
  %55 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %9, i64 0, i32 1
  %56 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 3
  %57 = bitcast { %"class.skvm::Builder"*, i32 }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false)
  %58 = load float, float* %56, align 4
  %59 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %58)
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  %63 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %60, i32 %62) #8
  %64 = extractvalue { %"class.skvm::Builder"*, i32 } %63, 0
  store %"class.skvm::Builder"* %64, %"class.skvm::Builder"** %54, align 8
  %65 = extractvalue { %"class.skvm::Builder"*, i32 } %63, 1
  store i32 %65, i32* %55, align 8
  %66 = bitcast { %"class.skvm::Builder"*, i32 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #8
  %67 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %10, i64 0, i32 0
  %68 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %10, i64 0, i32 1
  %69 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 4
  %70 = bitcast { %"class.skvm::Builder"*, i32 }* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 16, i1 false)
  %71 = load float, float* %69, align 4
  %72 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %71)
  %73 = trunc i64 %72 to i32
  %74 = lshr i64 %72, 32
  %75 = trunc i64 %74 to i32
  %76 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %73, i32 %75) #8
  %77 = extractvalue { %"class.skvm::Builder"*, i32 } %76, 0
  store %"class.skvm::Builder"* %77, %"class.skvm::Builder"** %67, align 8
  %78 = extractvalue { %"class.skvm::Builder"*, i32 } %76, 1
  store i32 %78, i32* %68, align 8
  %79 = bitcast { %"class.skvm::Builder"*, i32 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #8
  %80 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %11, i64 0, i32 0
  %81 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %11, i64 0, i32 1
  %82 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 5
  %83 = bitcast { %"class.skvm::Builder"*, i32 }* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 16, i1 false)
  %84 = load float, float* %82, align 4
  %85 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %84)
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %89 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %86, i32 %88) #8
  %90 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 0
  store %"class.skvm::Builder"* %90, %"class.skvm::Builder"** %80, align 8
  %91 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 1
  store i32 %91, i32* %81, align 8
  %92 = bitcast { %"class.skvm::Builder"*, i32 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #8
  %93 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %12, i64 0, i32 0
  %94 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %12, i64 0, i32 1
  %95 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 6
  %96 = bitcast { %"class.skvm::Builder"*, i32 }* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 16, i1 false)
  %97 = load float, float* %95, align 4
  %98 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %97)
  %99 = trunc i64 %98 to i32
  %100 = lshr i64 %98, 32
  %101 = trunc i64 %100 to i32
  %102 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %99, i32 %101) #8
  %103 = extractvalue { %"class.skvm::Builder"*, i32 } %102, 0
  store %"class.skvm::Builder"* %103, %"class.skvm::Builder"** %93, align 8
  %104 = extractvalue { %"class.skvm::Builder"*, i32 } %102, 1
  store i32 %104, i32* %94, align 8
  %105 = bitcast %class.anon.17* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %105) #8
  %106 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 0
  store %struct.skcms_TransferFunction* %3, %struct.skcms_TransferFunction** %106, align 8
  %107 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 1
  %108 = bitcast %"struct.skvm::F32"** %107 to { %"class.skvm::Builder"*, i32 }**
  store { %"class.skvm::Builder"*, i32 }* %10, { %"class.skvm::Builder"*, i32 }** %108, align 8
  %109 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 2
  %110 = bitcast %"struct.skvm::F32"** %109 to { %"class.skvm::Builder"*, i32 }**
  store { %"class.skvm::Builder"*, i32 }* %9, { %"class.skvm::Builder"*, i32 }** %110, align 8
  %111 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 3
  %112 = bitcast %"struct.skvm::F32"** %111 to { %"class.skvm::Builder"*, i32 }**
  store { %"class.skvm::Builder"*, i32 }* %12, { %"class.skvm::Builder"*, i32 }** %112, align 8
  %113 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 4
  %114 = bitcast %"struct.skvm::F32"** %113 to { %"class.skvm::Builder"*, i32 }**
  store { %"class.skvm::Builder"*, i32 }* %7, { %"class.skvm::Builder"*, i32 }** %114, align 8
  %115 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 5
  %116 = bitcast %"struct.skvm::F32"** %115 to { %"class.skvm::Builder"*, i32 }**
  store { %"class.skvm::Builder"*, i32 }* %8, { %"class.skvm::Builder"*, i32 }** %116, align 8
  %117 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 6
  %118 = bitcast %"struct.skvm::F32"** %117 to { %"class.skvm::Builder"*, i32 }**
  store { %"class.skvm::Builder"*, i32 }* %6, { %"class.skvm::Builder"*, i32 }** %118, align 8
  %119 = getelementptr inbounds %class.anon.17, %class.anon.17* %13, i64 0, i32 7
  %120 = bitcast %"struct.skvm::F32"** %119 to { %"class.skvm::Builder"*, i32 }**
  store { %"class.skvm::Builder"*, i32 }* %11, { %"class.skvm::Builder"*, i32 }** %120, align 8
  %121 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 0, i32 0
  %122 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %121, align 8
  %123 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = call fastcc { %"class.skvm::Builder"*, i32 } @"_ZZ22sk_program_transfer_fnPN4skvm7BuilderEPNS_8UniformsERK22skcms_TransferFunctionNS_5ColorEENK3$_1clENS_3F32E"(%class.anon.17* nonnull %13, %"class.skvm::Builder"* %122, i32 %124)
  %126 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  %127 = extractvalue { %"class.skvm::Builder"*, i32 } %125, 0
  store %"class.skvm::Builder"* %127, %"class.skvm::Builder"** %126, align 8
  %128 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  %129 = extractvalue { %"class.skvm::Builder"*, i32 } %125, 1
  store i32 %129, i32* %128, align 8
  %130 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 1, i32 0
  %131 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %130, align 8
  %132 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 1, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = call fastcc { %"class.skvm::Builder"*, i32 } @"_ZZ22sk_program_transfer_fnPN4skvm7BuilderEPNS_8UniformsERK22skcms_TransferFunctionNS_5ColorEENK3$_1clENS_3F32E"(%class.anon.17* nonnull %13, %"class.skvm::Builder"* %131, i32 %133)
  %135 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  %136 = extractvalue { %"class.skvm::Builder"*, i32 } %134, 0
  store %"class.skvm::Builder"* %136, %"class.skvm::Builder"** %135, align 8
  %137 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  %138 = extractvalue { %"class.skvm::Builder"*, i32 } %134, 1
  store i32 %138, i32* %137, align 8
  %139 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 2, i32 0
  %140 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %139, align 8
  %141 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 2, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = call fastcc { %"class.skvm::Builder"*, i32 } @"_ZZ22sk_program_transfer_fnPN4skvm7BuilderEPNS_8UniformsERK22skcms_TransferFunctionNS_5ColorEENK3$_1clENS_3F32E"(%class.anon.17* nonnull %13, %"class.skvm::Builder"* %140, i32 %142)
  %144 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  %145 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 0
  store %"class.skvm::Builder"* %145, %"class.skvm::Builder"** %144, align 8
  %146 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  %147 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 1
  store i32 %147, i32* %146, align 8
  %148 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3
  %149 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3
  %150 = bitcast %"struct.skvm::F32"* %148 to i8*
  %151 = bitcast %"struct.skvm::F32"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %105) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"*, float) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast i32* %5 to float*
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds i32, i32* %5, i64 1
  %13 = ptrtoint i32* %12 to i64
  %14 = bitcast i32** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.std::__1::vector.10"* %3 to i64*
  br label %74

16:                                               ; preds = %2
  %17 = ptrtoint i32* %5 to i64
  %18 = bitcast i32** %4 to i64*
  %19 = bitcast %"class.std::__1::vector.10"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.10"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #9
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i32** %6 to i64*
  %29 = sub i64 %9, %20
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %30, 2305843009213693951
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 4611686018427387903
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #9
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 4611686018427387903, %27 ]
  %42 = shl i64 %41, 2
  %43 = tail call i8* @_Znwm(i64 %42) #10
  %44 = bitcast i8* %43 to i32*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i32* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 %22
  %49 = getelementptr inbounds i32, i32* %47, i64 %46
  %50 = ptrtoint i32* %49 to i64
  %51 = bitcast i32* %48 to float*
  store float %1, float* %51, align 4
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = ptrtoint i32* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %3, i64 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint i32* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds i32, i32* %48, i64 %60
  %62 = ptrtoint i32* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast i32* %61 to i8*
  %66 = bitcast i32* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %58, i1 false) #8
  %67 = load i32*, i32** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi i32* [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast i32* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #10
  %73 = load i64, i64* %18, align 8
  br label %74

74:                                               ; preds = %10, %68, %71
  %75 = phi i64* [ %15, %10 ], [ %19, %68 ], [ %19, %71 ]
  %76 = phi i64 [ %13, %10 ], [ %53, %68 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i64, i64* %75, align 8
  %80 = sub i64 %76, %79
  %81 = shl i64 %80, 32
  %82 = add i64 %81, -17179869184
  %83 = zext i32 %78 to i64
  %84 = or i64 %82, %83
  ret i64 %84
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc { %"class.skvm::Builder"*, i32 } @"_ZZ22sk_program_transfer_fnPN4skvm7BuilderEPNS_8UniformsERK22skcms_TransferFunctionNS_5ColorEENK3$_1clENS_3F32E"(%class.anon.17* readonly, %"class.skvm::Builder"*, i32) unnamed_addr #3 align 2 {
  %4 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %5 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %6 = alloca { %"class.skvm::Builder"*, i32 }, align 8
  %7 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 -2147483648) #8
  %8 = extractvalue { %"class.skvm::Builder"*, i32 } %7, 0
  %9 = extractvalue { %"class.skvm::Builder"*, i32 } %7, 1
  %10 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %1, i32 %2, %"class.skvm::Builder"* %8, i32 %9) #8
  %11 = extractvalue { %"class.skvm::Builder"*, i32 } %10, 0
  %12 = extractvalue { %"class.skvm::Builder"*, i32 } %10, 1
  %13 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_xorENS_3I32ES1_(%"class.skvm::Builder"* %1, %"class.skvm::Builder"* %1, i32 %2, %"class.skvm::Builder"* %11, i32 %12) #8
  %14 = extractvalue { %"class.skvm::Builder"*, i32 } %13, 0
  %15 = extractvalue { %"class.skvm::Builder"*, i32 } %13, 1
  %16 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 0
  %17 = load %struct.skcms_TransferFunction*, %struct.skcms_TransferFunction** %16, align 8
  %18 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %17, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = fcmp olt float %19, 0.000000e+00
  br i1 %20, label %21, label %26

21:                                               ; preds = %3
  %22 = fptosi float %19 to i32
  %23 = sitofp i32 %22 to float
  %24 = fcmp oeq float %19, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  switch i32 %22, label %364 [
    i32 -2, label %132
    i32 -3, label %196
    i32 -4, label %280
  ]

26:                                               ; preds = %21, %3
  %27 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %17, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %17, i64 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = fadd float %28, %30
  %32 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %17, i64 0, i32 3
  %33 = load float, float* %32, align 4
  %34 = fadd float %31, %33
  %35 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %17, i64 0, i32 4
  %36 = load float, float* %35, align 4
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %17, i64 0, i32 5
  %39 = load float, float* %38, align 4
  %40 = fadd float %37, %39
  %41 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %17, i64 0, i32 6
  %42 = load float, float* %41, align 4
  %43 = fadd float %40, %42
  %44 = fadd float %19, %43
  %45 = bitcast float %44 to i32
  %46 = and i32 %45, 2139095040
  %47 = icmp eq i32 %46, 2139095040
  br i1 %47, label %364, label %48

48:                                               ; preds = %26
  %49 = fcmp ult float %28, 0.000000e+00
  %50 = fcmp ult float %33, 0.000000e+00
  %51 = or i1 %49, %50
  br i1 %51, label %364, label %52

52:                                               ; preds = %48
  %53 = fcmp ult float %36, 0.000000e+00
  %54 = fcmp ult float %19, 0.000000e+00
  %55 = or i1 %54, %53
  br i1 %55, label %364, label %56

56:                                               ; preds = %52
  %57 = fmul float %28, %36
  %58 = fadd float %30, %57
  %59 = fcmp ult float %58, 0.000000e+00
  br i1 %59, label %364, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 1
  %62 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %61, align 8
  %63 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %62, i64 0, i32 0
  %64 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %63, align 8
  %65 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3lteENS_3F32ES1_(%"class.skvm::Builder"* %14, %"class.skvm::Builder"* %14, i32 %15, %"class.skvm::Builder"* %64, i32 %66) #8
  %68 = extractvalue { %"class.skvm::Builder"*, i32 } %67, 0
  %69 = extractvalue { %"class.skvm::Builder"*, i32 } %67, 1
  %70 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 2
  %71 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %70, align 8
  %72 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %71, i64 0, i32 0
  %73 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %72, align 8
  %74 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %71, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %73, %"class.skvm::Builder"* %73, i32 %75, %"class.skvm::Builder"* %14, i32 %15) #8
  %77 = extractvalue { %"class.skvm::Builder"*, i32 } %76, 0
  %78 = extractvalue { %"class.skvm::Builder"*, i32 } %76, 1
  %79 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 3
  %80 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %79, align 8
  %81 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %80, i64 0, i32 0
  %82 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %81, align 8
  %83 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %80, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %77, %"class.skvm::Builder"* %77, i32 %78, %"class.skvm::Builder"* %82, i32 %84) #8
  %86 = extractvalue { %"class.skvm::Builder"*, i32 } %85, 0
  %87 = extractvalue { %"class.skvm::Builder"*, i32 } %85, 1
  %88 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 4
  %89 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %88, align 8
  %90 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %89, i64 0, i32 0
  %91 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %90, align 8
  %92 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %89, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %91, %"class.skvm::Builder"* %91, i32 %93, %"class.skvm::Builder"* %14, i32 %15) #8
  %95 = extractvalue { %"class.skvm::Builder"*, i32 } %94, 0
  %96 = extractvalue { %"class.skvm::Builder"*, i32 } %94, 1
  %97 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 5
  %98 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %97, align 8
  %99 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %98, i64 0, i32 0
  %100 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %99, align 8
  %101 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %98, i64 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %95, %"class.skvm::Builder"* %95, i32 %96, %"class.skvm::Builder"* %100, i32 %102) #8
  %104 = extractvalue { %"class.skvm::Builder"*, i32 } %103, 0
  %105 = extractvalue { %"class.skvm::Builder"*, i32 } %103, 1
  %106 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 6
  %107 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %106, align 8
  %108 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %107, i64 0, i32 0
  %109 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %108, align 8
  %110 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %107, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_powfENS_3F32ES1_(%"class.skvm::Builder"* %104, %"class.skvm::Builder"* %104, i32 %105, %"class.skvm::Builder"* %109, i32 %111) #8
  %113 = extractvalue { %"class.skvm::Builder"*, i32 } %112, 0
  %114 = extractvalue { %"class.skvm::Builder"*, i32 } %112, 1
  %115 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 7
  %116 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %115, align 8
  %117 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %116, i64 0, i32 0
  %118 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %117, align 8
  %119 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %113, %"class.skvm::Builder"* %113, i32 %114, %"class.skvm::Builder"* %118, i32 %120) #8
  %122 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 0
  %123 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 1
  %124 = bitcast { %"class.skvm::Builder"*, i32 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #8
  %125 = ptrtoint %"class.skvm::Builder"* %122 to i64
  %126 = bitcast { %"class.skvm::Builder"*, i32 }* %5 to %"struct.skvm::I32"*
  %127 = bitcast { %"class.skvm::Builder"*, i32 }* %5 to i64*
  store i64 %125, i64* %127, align 8
  %128 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %5, i64 0, i32 1
  store i32 %123, i32* %128, align 8
  %129 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %68, %"class.skvm::Builder"* %68, i32 %69, %"class.skvm::Builder"* %86, i32 %87, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %126) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #8
  %130 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 0
  %131 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 1
  br label %364

132:                                              ; preds = %25
  %133 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 2
  %134 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %133, align 8
  %135 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %134, i64 0, i32 0
  %136 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %135, align 8
  %137 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %134, i64 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_powfENS_3F32ES1_(%"class.skvm::Builder"* %14, %"class.skvm::Builder"* %14, i32 %15, %"class.skvm::Builder"* %136, i32 %138) #8
  %140 = extractvalue { %"class.skvm::Builder"*, i32 } %139, 0
  %141 = extractvalue { %"class.skvm::Builder"*, i32 } %139, 1
  %142 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 5
  %143 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %142, align 8
  %144 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %143, i64 0, i32 0
  %145 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %144, align 8
  %146 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %143, i64 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %145, %"class.skvm::Builder"* %145, i32 %147, %"class.skvm::Builder"* %140, i32 %141) #8
  %149 = extractvalue { %"class.skvm::Builder"*, i32 } %148, 0
  %150 = extractvalue { %"class.skvm::Builder"*, i32 } %148, 1
  %151 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 4
  %152 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %151, align 8
  %153 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %152, i64 0, i32 0
  %154 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %153, align 8
  %155 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %152, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %149, %"class.skvm::Builder"* %149, i32 %150, %"class.skvm::Builder"* %154, i32 %156) #8
  %158 = extractvalue { %"class.skvm::Builder"*, i32 } %157, 0
  %159 = extractvalue { %"class.skvm::Builder"*, i32 } %157, 1
  %160 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %158, i32 0) #8
  %161 = extractvalue { %"class.skvm::Builder"*, i32 } %160, 0
  %162 = extractvalue { %"class.skvm::Builder"*, i32 } %160, 1
  %163 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"* %158, %"class.skvm::Builder"* %158, i32 %159, %"class.skvm::Builder"* %161, i32 %162) #8
  %164 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 0
  %165 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 1
  %166 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 7
  %167 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %166, align 8
  %168 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %167, i64 0, i32 0
  %169 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %168, align 8
  %170 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %167, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %169, %"class.skvm::Builder"* %169, i32 %171, %"class.skvm::Builder"* %140, i32 %141) #8
  %173 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 0
  %174 = extractvalue { %"class.skvm::Builder"*, i32 } %172, 1
  %175 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 1
  %176 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %175, align 8
  %177 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %176, i64 0, i32 0
  %178 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %177, align 8
  %179 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %176, i64 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %173, %"class.skvm::Builder"* %173, i32 %174, %"class.skvm::Builder"* %178, i32 %180) #8
  %182 = extractvalue { %"class.skvm::Builder"*, i32 } %181, 0
  %183 = extractvalue { %"class.skvm::Builder"*, i32 } %181, 1
  %184 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3divENS_3F32ES1_(%"class.skvm::Builder"* %164, %"class.skvm::Builder"* %164, i32 %165, %"class.skvm::Builder"* %182, i32 %183) #8
  %185 = extractvalue { %"class.skvm::Builder"*, i32 } %184, 0
  %186 = extractvalue { %"class.skvm::Builder"*, i32 } %184, 1
  %187 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 3
  %188 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %187, align 8
  %189 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %188, i64 0, i32 0
  %190 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %189, align 8
  %191 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %188, i64 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_powfENS_3F32ES1_(%"class.skvm::Builder"* %185, %"class.skvm::Builder"* %185, i32 %186, %"class.skvm::Builder"* %190, i32 %192) #8
  %194 = extractvalue { %"class.skvm::Builder"*, i32 } %193, 0
  %195 = extractvalue { %"class.skvm::Builder"*, i32 } %193, 1
  br label %364

196:                                              ; preds = %25
  %197 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 4
  %198 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %197, align 8
  %199 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %198, i64 0, i32 0
  %200 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %199, align 8
  %201 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %198, i64 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %14, %"class.skvm::Builder"* %14, i32 %15, %"class.skvm::Builder"* %200, i32 %202) #8
  %204 = extractvalue { %"class.skvm::Builder"*, i32 } %203, 0
  %205 = extractvalue { %"class.skvm::Builder"*, i32 } %203, 1
  %206 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 3
  %207 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %206, align 8
  %208 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %207, i64 0, i32 0
  %209 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %208, align 8
  %210 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %207, i64 0, i32 1
  %211 = load i32, i32* %210, align 8
  %212 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %209, i32 1065353216) #8
  %213 = extractvalue { %"class.skvm::Builder"*, i32 } %212, 0
  %214 = extractvalue { %"class.skvm::Builder"*, i32 } %212, 1
  %215 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %209, %"class.skvm::Builder"* %209, i32 %211, %"class.skvm::Builder"* %213, i32 %214) #8
  %216 = extractvalue { %"class.skvm::Builder"*, i32 } %215, 0
  %217 = extractvalue { %"class.skvm::Builder"*, i32 } %215, 1
  %218 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %204, i32 1065353216) #8
  %219 = extractvalue { %"class.skvm::Builder"*, i32 } %218, 0
  %220 = extractvalue { %"class.skvm::Builder"*, i32 } %218, 1
  %221 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3lteENS_3F32ES1_(%"class.skvm::Builder"* %204, %"class.skvm::Builder"* %204, i32 %205, %"class.skvm::Builder"* %219, i32 %220) #8
  %222 = extractvalue { %"class.skvm::Builder"*, i32 } %221, 0
  %223 = extractvalue { %"class.skvm::Builder"*, i32 } %221, 1
  %224 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 5
  %225 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %224, align 8
  %226 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %225, i64 0, i32 0
  %227 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %226, align 8
  %228 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %225, i64 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_powfENS_3F32ES1_(%"class.skvm::Builder"* %204, %"class.skvm::Builder"* %204, i32 %205, %"class.skvm::Builder"* %227, i32 %229) #8
  %231 = extractvalue { %"class.skvm::Builder"*, i32 } %230, 0
  %232 = extractvalue { %"class.skvm::Builder"*, i32 } %230, 1
  %233 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 7
  %234 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %233, align 8
  %235 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %234, i64 0, i32 0
  %236 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %235, align 8
  %237 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %234, i64 0, i32 1
  %238 = load i32, i32* %237, align 8
  %239 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %14, %"class.skvm::Builder"* %14, i32 %15, %"class.skvm::Builder"* %236, i32 %238) #8
  %240 = extractvalue { %"class.skvm::Builder"*, i32 } %239, 0
  %241 = extractvalue { %"class.skvm::Builder"*, i32 } %239, 1
  %242 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 2
  %243 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %242, align 8
  %244 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %243, i64 0, i32 0
  %245 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %244, align 8
  %246 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %243, i64 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %240, %"class.skvm::Builder"* %240, i32 %241, %"class.skvm::Builder"* %245, i32 %247) #8
  %249 = extractvalue { %"class.skvm::Builder"*, i32 } %248, 0
  %250 = extractvalue { %"class.skvm::Builder"*, i32 } %248, 1
  %251 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 1
  %252 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %251, align 8
  %253 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %252, i64 0, i32 0
  %254 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %253, align 8
  %255 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %252, i64 0, i32 1
  %256 = load i32, i32* %255, align 8
  %257 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %249, %"class.skvm::Builder"* %249, i32 %250, %"class.skvm::Builder"* %254, i32 %256) #8
  %258 = extractvalue { %"class.skvm::Builder"*, i32 } %257, 0
  %259 = extractvalue { %"class.skvm::Builder"*, i32 } %257, 1
  %260 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %258, i32 1069066811) #8
  %261 = extractvalue { %"class.skvm::Builder"*, i32 } %260, 0
  %262 = extractvalue { %"class.skvm::Builder"*, i32 } %260, 1
  %263 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %258, %"class.skvm::Builder"* %258, i32 %259, %"class.skvm::Builder"* %261, i32 %262) #8
  %264 = extractvalue { %"class.skvm::Builder"*, i32 } %263, 0
  %265 = extractvalue { %"class.skvm::Builder"*, i32 } %263, 1
  %266 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_pow2ENS_3F32E(%"class.skvm::Builder"* %258, %"class.skvm::Builder"* %264, i32 %265) #8
  %267 = extractvalue { %"class.skvm::Builder"*, i32 } %266, 0
  %268 = extractvalue { %"class.skvm::Builder"*, i32 } %266, 1
  %269 = bitcast { %"class.skvm::Builder"*, i32 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #8
  %270 = ptrtoint %"class.skvm::Builder"* %267 to i64
  %271 = bitcast { %"class.skvm::Builder"*, i32 }* %4 to %"struct.skvm::I32"*
  %272 = bitcast { %"class.skvm::Builder"*, i32 }* %4 to i64*
  store i64 %270, i64* %272, align 8
  %273 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %4, i64 0, i32 1
  store i32 %268, i32* %273, align 8
  %274 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %222, %"class.skvm::Builder"* %222, i32 %223, %"class.skvm::Builder"* %231, i32 %232, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %271) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #8
  %275 = extractvalue { %"class.skvm::Builder"*, i32 } %274, 0
  %276 = extractvalue { %"class.skvm::Builder"*, i32 } %274, 1
  %277 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %216, %"class.skvm::Builder"* %216, i32 %217, %"class.skvm::Builder"* %275, i32 %276) #8
  %278 = extractvalue { %"class.skvm::Builder"*, i32 } %277, 0
  %279 = extractvalue { %"class.skvm::Builder"*, i32 } %277, 1
  br label %364

280:                                              ; preds = %25
  %281 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 3
  %282 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %281, align 8
  %283 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %282, i64 0, i32 0
  %284 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %283, align 8
  %285 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %282, i64 0, i32 1
  %286 = load i32, i32* %285, align 8
  %287 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %284, i32 1065353216) #8
  %288 = extractvalue { %"class.skvm::Builder"*, i32 } %287, 0
  %289 = extractvalue { %"class.skvm::Builder"*, i32 } %287, 1
  %290 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %284, %"class.skvm::Builder"* %284, i32 %286, %"class.skvm::Builder"* %288, i32 %289) #8
  %291 = extractvalue { %"class.skvm::Builder"*, i32 } %290, 0
  %292 = extractvalue { %"class.skvm::Builder"*, i32 } %290, 1
  %293 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3divENS_3F32ES1_(%"class.skvm::Builder"* %14, %"class.skvm::Builder"* %14, i32 %15, %"class.skvm::Builder"* %291, i32 %292) #8
  %294 = extractvalue { %"class.skvm::Builder"*, i32 } %293, 0
  %295 = extractvalue { %"class.skvm::Builder"*, i32 } %293, 1
  %296 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %294, i32 1065353216) #8
  %297 = extractvalue { %"class.skvm::Builder"*, i32 } %296, 0
  %298 = extractvalue { %"class.skvm::Builder"*, i32 } %296, 1
  %299 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3lteENS_3F32ES1_(%"class.skvm::Builder"* %294, %"class.skvm::Builder"* %294, i32 %295, %"class.skvm::Builder"* %297, i32 %298) #8
  %300 = extractvalue { %"class.skvm::Builder"*, i32 } %299, 0
  %301 = extractvalue { %"class.skvm::Builder"*, i32 } %299, 1
  %302 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 4
  %303 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %302, align 8
  %304 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %303, i64 0, i32 0
  %305 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %304, align 8
  %306 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %303, i64 0, i32 1
  %307 = load i32, i32* %306, align 8
  %308 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 5
  %309 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %308, align 8
  %310 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %309, i64 0, i32 0
  %311 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %310, align 8
  %312 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %309, i64 0, i32 1
  %313 = load i32, i32* %312, align 8
  %314 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_powfENS_3F32ES1_(%"class.skvm::Builder"* %294, %"class.skvm::Builder"* %294, i32 %295, %"class.skvm::Builder"* %311, i32 %313) #8
  %315 = extractvalue { %"class.skvm::Builder"*, i32 } %314, 0
  %316 = extractvalue { %"class.skvm::Builder"*, i32 } %314, 1
  %317 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %305, %"class.skvm::Builder"* %305, i32 %307, %"class.skvm::Builder"* %315, i32 %316) #8
  %318 = extractvalue { %"class.skvm::Builder"*, i32 } %317, 0
  %319 = extractvalue { %"class.skvm::Builder"*, i32 } %317, 1
  %320 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 2
  %321 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %320, align 8
  %322 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %321, i64 0, i32 0
  %323 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %322, align 8
  %324 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %321, i64 0, i32 1
  %325 = load i32, i32* %324, align 8
  %326 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 1
  %327 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %326, align 8
  %328 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %327, i64 0, i32 0
  %329 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %328, align 8
  %330 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %327, i64 0, i32 1
  %331 = load i32, i32* %330, align 8
  %332 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %294, %"class.skvm::Builder"* %294, i32 %295, %"class.skvm::Builder"* %329, i32 %331) #8
  %333 = extractvalue { %"class.skvm::Builder"*, i32 } %332, 0
  %334 = extractvalue { %"class.skvm::Builder"*, i32 } %332, 1
  %335 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_log2ENS_3F32E(%"class.skvm::Builder"* %333, %"class.skvm::Builder"* %333, i32 %334) #8
  %336 = extractvalue { %"class.skvm::Builder"*, i32 } %335, 0
  %337 = extractvalue { %"class.skvm::Builder"*, i32 } %335, 1
  %338 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %333, i32 1060205080) #8
  %339 = extractvalue { %"class.skvm::Builder"*, i32 } %338, 0
  %340 = extractvalue { %"class.skvm::Builder"*, i32 } %338, 1
  %341 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %333, %"class.skvm::Builder"* %339, i32 %340, %"class.skvm::Builder"* %336, i32 %337) #8
  %342 = extractvalue { %"class.skvm::Builder"*, i32 } %341, 0
  %343 = extractvalue { %"class.skvm::Builder"*, i32 } %341, 1
  %344 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %323, %"class.skvm::Builder"* %323, i32 %325, %"class.skvm::Builder"* %342, i32 %343) #8
  %345 = extractvalue { %"class.skvm::Builder"*, i32 } %344, 0
  %346 = extractvalue { %"class.skvm::Builder"*, i32 } %344, 1
  %347 = getelementptr inbounds %class.anon.17, %class.anon.17* %0, i64 0, i32 7
  %348 = load %"struct.skvm::F32"*, %"struct.skvm::F32"** %347, align 8
  %349 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %348, i64 0, i32 0
  %350 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %349, align 8
  %351 = getelementptr inbounds %"struct.skvm::F32", %"struct.skvm::F32"* %348, i64 0, i32 1
  %352 = load i32, i32* %351, align 8
  %353 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %345, %"class.skvm::Builder"* %345, i32 %346, %"class.skvm::Builder"* %350, i32 %352) #8
  %354 = extractvalue { %"class.skvm::Builder"*, i32 } %353, 0
  %355 = extractvalue { %"class.skvm::Builder"*, i32 } %353, 1
  %356 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %356) #8
  %357 = ptrtoint %"class.skvm::Builder"* %354 to i64
  %358 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to %"struct.skvm::I32"*
  %359 = bitcast { %"class.skvm::Builder"*, i32 }* %6 to i64*
  store i64 %357, i64* %359, align 8
  %360 = getelementptr inbounds { %"class.skvm::Builder"*, i32 }, { %"class.skvm::Builder"*, i32 }* %6, i64 0, i32 1
  store i32 %355, i32* %360, align 8
  %361 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"* %300, %"class.skvm::Builder"* %300, i32 %301, %"class.skvm::Builder"* %318, i32 %319, %"struct.skvm::I32"* nonnull byval(%"struct.skvm::I32") align 8 %358) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %356) #8
  %362 = extractvalue { %"class.skvm::Builder"*, i32 } %361, 0
  %363 = extractvalue { %"class.skvm::Builder"*, i32 } %361, 1
  br label %364

364:                                              ; preds = %26, %48, %52, %56, %25, %280, %196, %132, %60
  %365 = phi i32 [ %279, %196 ], [ %195, %132 ], [ %131, %60 ], [ %363, %280 ], [ %15, %25 ], [ %15, %56 ], [ %15, %52 ], [ %15, %48 ], [ %15, %26 ]
  %366 = phi %"class.skvm::Builder"* [ %278, %196 ], [ %194, %132 ], [ %130, %60 ], [ %362, %280 ], [ %14, %25 ], [ %14, %56 ], [ %14, %52 ], [ %14, %48 ], [ %14, %26 ]
  %367 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"* %11, %"class.skvm::Builder"* %11, i32 %12, %"class.skvm::Builder"* %366, i32 %365) #8
  ret { %"class.skvm::Builder"*, i32 } %367
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* noalias nocapture sret, %struct.SkColorSpaceXformSteps*, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Color"* nocapture byval(%"struct.skvm::Color") align 8) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.skvm::Color", align 8
  %7 = alloca %"struct.skvm::Color", align 8
  %8 = alloca [64 x i8], align 8
  %9 = alloca %"struct.skvm::Color", align 8
  %10 = alloca [16 x i8], align 4
  %11 = alloca %"struct.skvm::Color", align 8
  %12 = alloca [64 x i8], align 8
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 0
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %15 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14)
  %19 = bitcast %"struct.skvm::Color"* %4 to i8*
  %20 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 0
  %21 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %20, align 8
  %22 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 1
  %23 = bitcast i32* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.skvm::Color"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %25) #8, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %19, i64 48, i1 false)
  %26 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %21, %"class.skvm::Builder"** %26, align 8, !noalias !3
  %27 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 3, i32 1
  %28 = bitcast i32* %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %7, i64 0, i32 2
  %32 = trunc i64 %24 to i32
  call void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %21, %"struct.skvm::F32"* nonnull %29, %"struct.skvm::F32"* %30, %"struct.skvm::F32"* %31, %"class.skvm::Builder"* %21, i32 %32) #8, !noalias !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %25, i64 64, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %25) #8, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %14, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14)
  br label %33

33:                                               ; preds = %5, %18
  %34 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 0, i32 1
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = bitcast %"struct.skvm::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %38) #8
  %39 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 1
  %40 = bitcast %"struct.skvm::Color"* %4 to i8*
  call void @_Z22sk_program_transfer_fnPN4skvm7BuilderEPNS_8UniformsERK22skcms_TransferFunctionNS_5ColorE(%"struct.skvm::Color"* nonnull sret %9, %"class.skvm::Builder"* %2, %"struct.skvm::Uniforms"* %3, %struct.skcms_TransferFunction* dereferenceable(28) %39, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %38, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %38) #8
  br label %41

41:                                               ; preds = %33, %37
  %42 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 0, i32 2
  %43 = load i8, i8* %42, align 2, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %189, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 0, i32 0
  %47 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %46, align 8
  %48 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 0
  %51 = load float, float* %50, align 4
  %52 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %51) #8
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %52, 32
  %55 = trunc i64 %54 to i32
  %56 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %53, i32 %55) #8
  %57 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 0
  %58 = extractvalue { %"class.skvm::Builder"*, i32 } %56, 1
  %59 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %47, %"class.skvm::Builder"* %47, i32 %49, %"class.skvm::Builder"* %57, i32 %58) #8
  %60 = extractvalue { %"class.skvm::Builder"*, i32 } %59, 0
  %61 = extractvalue { %"class.skvm::Builder"*, i32 } %59, 1
  %62 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 1, i32 0
  %63 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %62, align 8
  %64 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 1, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 3
  %67 = load float, float* %66, align 4
  %68 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %67) #8
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %69, i32 %71) #8
  %73 = extractvalue { %"class.skvm::Builder"*, i32 } %72, 0
  %74 = extractvalue { %"class.skvm::Builder"*, i32 } %72, 1
  %75 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %63, %"class.skvm::Builder"* %63, i32 %65, %"class.skvm::Builder"* %73, i32 %74) #8
  %76 = extractvalue { %"class.skvm::Builder"*, i32 } %75, 0
  %77 = extractvalue { %"class.skvm::Builder"*, i32 } %75, 1
  %78 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %60, %"class.skvm::Builder"* %60, i32 %61, %"class.skvm::Builder"* %76, i32 %77) #8
  %79 = extractvalue { %"class.skvm::Builder"*, i32 } %78, 0
  %80 = extractvalue { %"class.skvm::Builder"*, i32 } %78, 1
  %81 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 2, i32 0
  %82 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %81, align 8
  %83 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 2, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 6
  %86 = load float, float* %85, align 4
  %87 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %86) #8
  %88 = trunc i64 %87 to i32
  %89 = lshr i64 %87, 32
  %90 = trunc i64 %89 to i32
  %91 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %88, i32 %90) #8
  %92 = extractvalue { %"class.skvm::Builder"*, i32 } %91, 0
  %93 = extractvalue { %"class.skvm::Builder"*, i32 } %91, 1
  %94 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %82, %"class.skvm::Builder"* %82, i32 %84, %"class.skvm::Builder"* %92, i32 %93) #8
  %95 = extractvalue { %"class.skvm::Builder"*, i32 } %94, 0
  %96 = extractvalue { %"class.skvm::Builder"*, i32 } %94, 1
  %97 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %79, %"class.skvm::Builder"* %79, i32 %80, %"class.skvm::Builder"* %95, i32 %96) #8
  %98 = extractvalue { %"class.skvm::Builder"*, i32 } %97, 0
  %99 = extractvalue { %"class.skvm::Builder"*, i32 } %97, 1
  %100 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 1
  %101 = load float, float* %100, align 4
  %102 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %101) #8
  %103 = trunc i64 %102 to i32
  %104 = lshr i64 %102, 32
  %105 = trunc i64 %104 to i32
  %106 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %103, i32 %105) #8
  %107 = extractvalue { %"class.skvm::Builder"*, i32 } %106, 0
  %108 = extractvalue { %"class.skvm::Builder"*, i32 } %106, 1
  %109 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %47, %"class.skvm::Builder"* %47, i32 %49, %"class.skvm::Builder"* %107, i32 %108) #8
  %110 = extractvalue { %"class.skvm::Builder"*, i32 } %109, 0
  %111 = extractvalue { %"class.skvm::Builder"*, i32 } %109, 1
  %112 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 4
  %113 = load float, float* %112, align 4
  %114 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %113) #8
  %115 = trunc i64 %114 to i32
  %116 = lshr i64 %114, 32
  %117 = trunc i64 %116 to i32
  %118 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %115, i32 %117) #8
  %119 = extractvalue { %"class.skvm::Builder"*, i32 } %118, 0
  %120 = extractvalue { %"class.skvm::Builder"*, i32 } %118, 1
  %121 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %63, %"class.skvm::Builder"* %63, i32 %65, %"class.skvm::Builder"* %119, i32 %120) #8
  %122 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 0
  %123 = extractvalue { %"class.skvm::Builder"*, i32 } %121, 1
  %124 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %110, %"class.skvm::Builder"* %110, i32 %111, %"class.skvm::Builder"* %122, i32 %123) #8
  %125 = extractvalue { %"class.skvm::Builder"*, i32 } %124, 0
  %126 = extractvalue { %"class.skvm::Builder"*, i32 } %124, 1
  %127 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 7
  %128 = load float, float* %127, align 4
  %129 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %128) #8
  %130 = trunc i64 %129 to i32
  %131 = lshr i64 %129, 32
  %132 = trunc i64 %131 to i32
  %133 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %130, i32 %132) #8
  %134 = extractvalue { %"class.skvm::Builder"*, i32 } %133, 0
  %135 = extractvalue { %"class.skvm::Builder"*, i32 } %133, 1
  %136 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %82, %"class.skvm::Builder"* %82, i32 %84, %"class.skvm::Builder"* %134, i32 %135) #8
  %137 = extractvalue { %"class.skvm::Builder"*, i32 } %136, 0
  %138 = extractvalue { %"class.skvm::Builder"*, i32 } %136, 1
  %139 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %125, %"class.skvm::Builder"* %125, i32 %126, %"class.skvm::Builder"* %137, i32 %138) #8
  %140 = extractvalue { %"class.skvm::Builder"*, i32 } %139, 0
  %141 = extractvalue { %"class.skvm::Builder"*, i32 } %139, 1
  %142 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 2
  %143 = load float, float* %142, align 4
  %144 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %143) #8
  %145 = trunc i64 %144 to i32
  %146 = lshr i64 %144, 32
  %147 = trunc i64 %146 to i32
  %148 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %145, i32 %147) #8
  %149 = extractvalue { %"class.skvm::Builder"*, i32 } %148, 0
  %150 = extractvalue { %"class.skvm::Builder"*, i32 } %148, 1
  %151 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %47, %"class.skvm::Builder"* %47, i32 %49, %"class.skvm::Builder"* %149, i32 %150) #8
  %152 = extractvalue { %"class.skvm::Builder"*, i32 } %151, 0
  %153 = extractvalue { %"class.skvm::Builder"*, i32 } %151, 1
  %154 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 5
  %155 = load float, float* %154, align 4
  %156 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %155) #8
  %157 = trunc i64 %156 to i32
  %158 = lshr i64 %156, 32
  %159 = trunc i64 %158 to i32
  %160 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %157, i32 %159) #8
  %161 = extractvalue { %"class.skvm::Builder"*, i32 } %160, 0
  %162 = extractvalue { %"class.skvm::Builder"*, i32 } %160, 1
  %163 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %63, %"class.skvm::Builder"* %63, i32 %65, %"class.skvm::Builder"* %161, i32 %162) #8
  %164 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 0
  %165 = extractvalue { %"class.skvm::Builder"*, i32 } %163, 1
  %166 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %152, %"class.skvm::Builder"* %152, i32 %153, %"class.skvm::Builder"* %164, i32 %165) #8
  %167 = extractvalue { %"class.skvm::Builder"*, i32 } %166, 0
  %168 = extractvalue { %"class.skvm::Builder"*, i32 } %166, 1
  %169 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 3, i64 8
  %170 = load float, float* %169, align 4
  %171 = call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %3, float %170) #8
  %172 = trunc i64 %171 to i32
  %173 = lshr i64 %171, 32
  %174 = trunc i64 %173 to i32
  %175 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %2, i32 %172, i32 %174) #8
  %176 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 0
  %177 = extractvalue { %"class.skvm::Builder"*, i32 } %175, 1
  %178 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %82, %"class.skvm::Builder"* %82, i32 %84, %"class.skvm::Builder"* %176, i32 %177) #8
  %179 = extractvalue { %"class.skvm::Builder"*, i32 } %178, 0
  %180 = extractvalue { %"class.skvm::Builder"*, i32 } %178, 1
  %181 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %167, %"class.skvm::Builder"* %167, i32 %168, %"class.skvm::Builder"* %179, i32 %180) #8
  %182 = extractvalue { %"class.skvm::Builder"*, i32 } %181, 0
  %183 = extractvalue { %"class.skvm::Builder"*, i32 } %181, 1
  %184 = getelementptr inbounds [16 x i8], [16 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184)
  %185 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3
  %186 = bitcast %"struct.skvm::F32"* %185 to i8*
  %187 = getelementptr inbounds [16 x i8], [16 x i8]* %10, i64 0, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 8 %186, i64 12, i1 false)
  store %"class.skvm::Builder"* %98, %"class.skvm::Builder"** %46, align 8
  store i32 %99, i32* %48, align 8
  store %"class.skvm::Builder"* %140, %"class.skvm::Builder"** %62, align 8
  store i32 %141, i32* %64, align 8
  store %"class.skvm::Builder"* %182, %"class.skvm::Builder"** %81, align 8
  store i32 %183, i32* %83, align 8
  %188 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 2, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* nonnull align 4 %184, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %184)
  br label %189

189:                                              ; preds = %41, %45
  %190 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 0, i32 3
  %191 = load i8, i8* %190, align 1, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %197, label %193

193:                                              ; preds = %189
  %194 = bitcast %"struct.skvm::Color"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %194) #8
  %195 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 2
  %196 = bitcast %"struct.skvm::Color"* %4 to i8*
  call void @_Z22sk_program_transfer_fnPN4skvm7BuilderEPNS_8UniformsERK22skcms_TransferFunctionNS_5ColorE(%"struct.skvm::Color"* nonnull sret %11, %"class.skvm::Builder"* %2, %"struct.skvm::Uniforms"* %3, %struct.skcms_TransferFunction* dereferenceable(28) %195, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %4)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %196, i8* nonnull align 8 %194, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %194) #8
  br label %197

197:                                              ; preds = %189, %193
  %198 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %1, i64 0, i32 0, i32 4
  %199 = load i8, i8* %198, align 4, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  %202 = bitcast %"struct.skvm::Color"* %4 to i8*
  br label %218

203:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13)
  %204 = bitcast %"struct.skvm::Color"* %4 to i8*
  %205 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 0
  %206 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %205, align 8
  %207 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 1
  %208 = bitcast i32* %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"struct.skvm::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %210) #8, !noalias !9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %210, i8* nonnull align 8 %204, i64 48, i1 false)
  %211 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %206, %"class.skvm::Builder"** %211, align 8, !noalias !9
  %212 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 3, i32 1
  %213 = bitcast i32* %212 to i64*
  store i64 %209, i64* %213, align 8
  %214 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 0
  %215 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 1
  %216 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 2
  %217 = trunc i64 %209 to i32
  call void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %206, %"struct.skvm::F32"* nonnull %214, %"struct.skvm::F32"* %215, %"struct.skvm::F32"* %216, %"class.skvm::Builder"* %206, i32 %217) #8, !noalias !12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %210, i64 64, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %210) #8, !noalias !9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %204, i8* nonnull align 8 %13, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13)
  br label %218

218:                                              ; preds = %201, %203
  %219 = phi i8* [ %202, %201 ], [ %204, %203 ]
  %220 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* nonnull align 8 %219, i64 64, i1 false)
  ret void
}

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"*, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_andENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder7bit_xorENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6selectENS_3I32ES1_S1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32, %"struct.skvm::I32"* byval(%"struct.skvm::I32") align 8) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3lteENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_powfENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3divENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3maxENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_pow2ENS_3F32E(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder11approx_log2ENS_3F32E(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder6bit_orENS_3I32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4skvmL8unpremulENS_5ColorE: argument 0"}
!5 = distinct !{!5, !"_ZN4skvmL8unpremulENS_5ColorE"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN4skvm7Builder8unpremulENS_5ColorE: argument 0"}
!8 = distinct !{!8, !"_ZN4skvm7Builder8unpremulENS_5ColorE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4skvmL6premulENS_5ColorE: argument 0"}
!11 = distinct !{!11, !"_ZN4skvmL6premulENS_5ColorE"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZN4skvm7Builder6premulENS_5ColorE: argument 0"}
!14 = distinct !{!14, !"_ZN4skvm7Builder6premulENS_5ColorE"}
