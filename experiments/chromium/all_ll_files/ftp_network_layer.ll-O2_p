; ModuleID = '../../net/ftp/ftp_network_layer.cc'
source_filename = "../../net/ftp/ftp_network_layer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::FtpNetworkLayer" = type <{ %"class.net::FtpTransactionFactory", %"class.std::__1::unique_ptr", i8, [7 x i8] }>
%"class.net::FtpTransactionFactory" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::FtpNetworkSession"* }
%"class.net::FtpNetworkSession" = type { i32 (...)**, %"class.net::HostResolver"* }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::FtpTransaction" = type { i32 (...)** }
%"class.net::ClientSocketFactory" = type { i32 (...)** }
%"class.net::FtpNetworkTransaction" = type { %"class.net::FtpTransaction", i32, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.net::NetLogWithSource", %"class.net::FtpRequestInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag", [4 x i8], %"class.net::FtpResponseInfo", %"class.net::HostResolver"*, %"class.std::__1::unique_ptr.22", %class.scoped_refptr.28, %"class.std::__1::unique_ptr.30", %class.scoped_refptr.28, i32, %class.scoped_refptr.51, %class.scoped_refptr.52, i32, i32, i32, i32, i8, %"class.net::AuthCredentials", %"class.std::__1::basic_string", i16, %"class.net::ClientSocketFactory"*, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62", i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.14" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.11" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.16" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::FtpRequestInfo" = type opaque
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.net::FtpResponseInfo" = type <{ i8, [7 x i8], %"class.base::Time", %"class.base::Time", i64, i8, i8, %"class.net::IPEndPoint", [2 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.21" }
%"class.base::time_internal::TimeBase.21" = type { i64 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.net::HostResolver::ResolveHostRequest"* }
%"class.net::HostResolver::ResolveHostRequest" = type { i32 (...)** }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.net::FtpCtrlResponseBuffer"* }
%"class.net::FtpCtrlResponseBuffer" = type { %"class.std::__1::basic_string", %"class.std::__1::queue", i8, %"class.std::__1::basic_string", %"struct.net::FtpCtrlResponse", %"class.std::__1::queue.45", %"class.net::NetLogWithSource" }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.net::FtpCtrlResponseBuffer::ParsedLine"*, i64 }
%"struct.net::FtpCtrlResponseBuffer::ParsedLine" = type { i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.net::FtpCtrlResponse" = type { i32, %"class.std::__1::vector.38" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::queue.45" = type { %"class.base::circular_deque.46" }
%"class.base::circular_deque.46" = type { %"class.base::internal::VectorBuffer.47", i64, i64 }
%"class.base::internal::VectorBuffer.47" = type { %"struct.net::FtpCtrlResponse"*, i64 }
%class.scoped_refptr.28 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.29", i8* }
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.51 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%class.scoped_refptr.52 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.28, i32, i32 }
%"class.net::AuthCredentials" = type { %"class.std::__1::basic_string.53", %"class.std::__1::basic_string.53" }
%"class.std::__1::basic_string.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.56 }
%union.anon.56 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.net::StreamSocket"* }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.38" }

@_ZTVN3net15FtpNetworkLayerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::FtpNetworkLayer"*)* @_ZN3net15FtpNetworkLayerD2Ev to i8*), i8* bitcast (void (%"class.net::FtpNetworkLayer"*)* @_ZN3net15FtpNetworkLayerD0Ev to i8*), i8* bitcast (%"class.net::FtpTransaction"* (%"class.net::FtpNetworkLayer"*)* @_ZN3net15FtpNetworkLayer17CreateTransactionEv to i8*), i8* bitcast (void (%"class.net::FtpNetworkLayer"*, i1)* @_ZN3net15FtpNetworkLayer7SuspendEb to i8*)] }, align 8

@_ZN3net15FtpNetworkLayerC1EPNS_12HostResolverE = hidden unnamed_addr alias void (%"class.net::FtpNetworkLayer"*, %"class.net::HostResolver"*), void (%"class.net::FtpNetworkLayer"*, %"class.net::HostResolver"*)* @_ZN3net15FtpNetworkLayerC2EPNS_12HostResolverE
@_ZN3net15FtpNetworkLayerD1Ev = hidden unnamed_addr alias void (%"class.net::FtpNetworkLayer"*), void (%"class.net::FtpNetworkLayer"*)* @_ZN3net15FtpNetworkLayerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpNetworkLayerC2EPNS_12HostResolverE(%"class.net::FtpNetworkLayer"* nocapture, %"class.net::HostResolver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15FtpNetworkLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 16) #5
  %6 = bitcast i8* %5 to %"class.net::FtpNetworkSession"*
  tail call void @_ZN3net17FtpNetworkSessionC1EPNS_12HostResolverE(%"class.net::FtpNetworkSession"* nonnull %6, %"class.net::HostResolver"* %1) #6
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 2
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN3net17FtpNetworkSessionC1EPNS_12HostResolverE(%"class.net::FtpNetworkSession"*, %"class.net::HostResolver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpNetworkLayerD2Ev(%"class.net::FtpNetworkLayer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15FtpNetworkLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::FtpNetworkSession"*, %"class.net::FtpNetworkSession"** %3, align 8
  store %"class.net::FtpNetworkSession"* null, %"class.net::FtpNetworkSession"** %3, align 8
  %5 = icmp eq %"class.net::FtpNetworkSession"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::FtpNetworkSession"* %4 to void (%"class.net::FtpNetworkSession"*)***
  %8 = load void (%"class.net::FtpNetworkSession"*)**, void (%"class.net::FtpNetworkSession"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::FtpNetworkSession"*)*, void (%"class.net::FtpNetworkSession"*)** %8, i64 1
  %10 = load void (%"class.net::FtpNetworkSession"*)*, void (%"class.net::FtpNetworkSession"*)** %9, align 8
  tail call void %10(%"class.net::FtpNetworkSession"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpNetworkLayerD0Ev(%"class.net::FtpNetworkLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15FtpNetworkLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::FtpNetworkSession"*, %"class.net::FtpNetworkSession"** %3, align 8
  store %"class.net::FtpNetworkSession"* null, %"class.net::FtpNetworkSession"** %3, align 8
  %5 = icmp eq %"class.net::FtpNetworkSession"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::FtpNetworkSession"* %4 to void (%"class.net::FtpNetworkSession"*)***
  %8 = load void (%"class.net::FtpNetworkSession"*)**, void (%"class.net::FtpNetworkSession"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::FtpNetworkSession"*)*, void (%"class.net::FtpNetworkSession"*)** %8, i64 1
  %10 = load void (%"class.net::FtpNetworkSession"*)*, void (%"class.net::FtpNetworkSession"*)** %9, align 8
  tail call void %10(%"class.net::FtpNetworkSession"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.net::FtpNetworkLayer"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::FtpTransaction"* @_ZN3net15FtpNetworkLayer17CreateTransactionEv(%"class.net::FtpNetworkLayer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.net::FtpNetworkSession"*, %"class.net::FtpNetworkSession"** %6, align 8
  %8 = getelementptr inbounds %"class.net::FtpNetworkSession", %"class.net::FtpNetworkSession"* %7, i64 0, i32 1
  %9 = load %"class.net::HostResolver"*, %"class.net::HostResolver"** %8, align 8
  %10 = tail call %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() #6
  %11 = tail call i8* @_Znwm(i64 352) #5
  %12 = bitcast i8* %11 to %"class.net::FtpNetworkTransaction"*
  tail call void @_ZN3net21FtpNetworkTransactionC1EPNS_12HostResolverEPNS_19ClientSocketFactoryE(%"class.net::FtpNetworkTransaction"* nonnull %12, %"class.net::HostResolver"* %9, %"class.net::ClientSocketFactory"* %10) #6
  %13 = bitcast i8* %11 to %"class.net::FtpTransaction"*
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi %"class.net::FtpTransaction"* [ %13, %5 ], [ null, %1 ]
  ret %"class.net::FtpTransaction"* %15
}

declare %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15FtpNetworkLayer7SuspendEb(%"class.net::FtpNetworkLayer"* nocapture, i1 zeroext) unnamed_addr #4 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::FtpNetworkLayer", %"class.net::FtpNetworkLayer"* %0, i64 0, i32 2
  store i8 %3, i8* %4, align 8
  ret void
}

declare void @_ZN3net21FtpNetworkTransactionC1EPNS_12HostResolverEPNS_19ClientSocketFactoryE(%"class.net::FtpNetworkTransaction"*, %"class.net::HostResolver"*, %"class.net::ClientSocketFactory"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
