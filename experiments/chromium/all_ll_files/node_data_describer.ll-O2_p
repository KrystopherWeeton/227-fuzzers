; ModuleID = '../../components/performance_manager/graph/node_data_describer.cc'
source_filename = "../../components/performance_manager/graph/node_data_describer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.performance_manager::NodeDataDescriberDefaultImpl" = type { %"class.performance_manager::NodeDataDescriber" }
%"class.performance_manager::NodeDataDescriber" = type { i32 (...)** }
%"class.performance_manager::FrameNode" = type opaque
%"class.performance_manager::PageNode" = type opaque
%"class.performance_manager::ProcessNode" = type opaque
%"class.performance_manager::SystemNode" = type opaque
%"class.performance_manager::WorkerNode" = type opaque

$_ZN19performance_manager17NodeDataDescriberD2Ev = comdat any

$_ZN19performance_manager28NodeDataDescriberDefaultImplD0Ev = comdat any

@_ZTVN19performance_manager28NodeDataDescriberDefaultImplE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.performance_manager::NodeDataDescriber"*)* @_ZN19performance_manager17NodeDataDescriberD2Ev to i8*), i8* bitcast (void (%"class.performance_manager::NodeDataDescriberDefaultImpl"*)* @_ZN19performance_manager28NodeDataDescriberDefaultImplD0Ev to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.performance_manager::NodeDataDescriberDefaultImpl"*, %"class.performance_manager::FrameNode"*)* @_ZNK19performance_manager28NodeDataDescriberDefaultImpl21DescribeFrameNodeDataEPKNS_9FrameNodeE to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.performance_manager::NodeDataDescriberDefaultImpl"*, %"class.performance_manager::PageNode"*)* @_ZNK19performance_manager28NodeDataDescriberDefaultImpl20DescribePageNodeDataEPKNS_8PageNodeE to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.performance_manager::NodeDataDescriberDefaultImpl"*, %"class.performance_manager::ProcessNode"*)* @_ZNK19performance_manager28NodeDataDescriberDefaultImpl23DescribeProcessNodeDataEPKNS_11ProcessNodeE to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.performance_manager::NodeDataDescriberDefaultImpl"*, %"class.performance_manager::SystemNode"*)* @_ZNK19performance_manager28NodeDataDescriberDefaultImpl22DescribeSystemNodeDataEPKNS_10SystemNodeE to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.performance_manager::NodeDataDescriberDefaultImpl"*, %"class.performance_manager::WorkerNode"*)* @_ZNK19performance_manager28NodeDataDescriberDefaultImpl22DescribeWorkerNodeDataEPKNS_10WorkerNodeE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager28NodeDataDescriberDefaultImpl21DescribeFrameNodeDataEPKNS_9FrameNodeE(%"class.base::Value"* noalias sret, %"class.performance_manager::NodeDataDescriberDefaultImpl"* nocapture readnone, %"class.performance_manager::FrameNode"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* %0) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager28NodeDataDescriberDefaultImpl20DescribePageNodeDataEPKNS_8PageNodeE(%"class.base::Value"* noalias sret, %"class.performance_manager::NodeDataDescriberDefaultImpl"* nocapture readnone, %"class.performance_manager::PageNode"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager28NodeDataDescriberDefaultImpl23DescribeProcessNodeDataEPKNS_11ProcessNodeE(%"class.base::Value"* noalias sret, %"class.performance_manager::NodeDataDescriberDefaultImpl"* nocapture readnone, %"class.performance_manager::ProcessNode"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager28NodeDataDescriberDefaultImpl22DescribeSystemNodeDataEPKNS_10SystemNodeE(%"class.base::Value"* noalias sret, %"class.performance_manager::NodeDataDescriberDefaultImpl"* nocapture readnone, %"class.performance_manager::SystemNode"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19performance_manager28NodeDataDescriberDefaultImpl22DescribeWorkerNodeDataEPKNS_10WorkerNodeE(%"class.base::Value"* noalias sret, %"class.performance_manager::NodeDataDescriberDefaultImpl"* nocapture readnone, %"class.performance_manager::WorkerNode"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19performance_manager17NodeDataDescriberD2Ev(%"class.performance_manager::NodeDataDescriber"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19performance_manager28NodeDataDescriberDefaultImplD0Ev(%"class.performance_manager::NodeDataDescriberDefaultImpl"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.performance_manager::NodeDataDescriberDefaultImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
