; ModuleID = '../../third_party/angle/src/compiler/translator/OutputTree.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/OutputTree.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.sh::(anonymous namespace)::TOutputTraverser" = type <{ %"class.sh::TIntermTraverser", %"class.sh::TInfoSinkBase"*, i32, [4 x i8] }>
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.6", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.59", %"class.std::__1::vector.66", %"class.sh::TVector", %"class.std::__1::vector.73" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.13" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector" }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.18", %"class.std::__1::vector.25", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr.27"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.41"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.41" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.42"*, i64, i32, %"class.std::__1::basic_string.50" }
%"class.sh::TVector.42" = type { %"class.std::__1::vector.43" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.sh::TField"**, %"class.sh::TField"**, %"class.std::__1::__compressed_pair.45" }
%"class.sh::TField" = type <{ %"class.sh::TType"*, %"class.sh::ImmutableString", %"struct.sh::TSourceLoc", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.sh::TField"** }
%"class.std::__1::basic_string.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon.53 }
%union.anon.53 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TConstantUnion" = type { %union.anon.58, i32 }
%union.anon.58 = type { i32 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.61" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector", %"class.sh::TVector" }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.68" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.sh::TVector" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.sh::TIntermNode"** }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.75" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.80", i8, [7 x i8] }>
%"class.sh::TVector.80" = type { %"class.std::__1::vector.81" }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i32*, i32*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i32* }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.88"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.88" = type opaque
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector" }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_ = comdat any

$_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v = comdat any

$_ZN2sh13TInfoSinkBaselsEf = comdat any

$_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_ = comdat any

@_ZTVN2sh12_GLOBAL__N_116TOutputTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TIntermTraverser"*)* @_ZN2sh16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::TOutputTraverser"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::TOutputTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::TOutputTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::TOutputTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str = private unnamed_addr constant [3 x i8] c"''\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"' \00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"(symbol id \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.9 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"const bool\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c" (const float)\0A\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c" (const int)\0A\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c" (const uint)\0A\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c" (const yuvCscStandardEXT)\0A\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"Unknown constant\0A\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"itu_601\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"itu_601_full_range\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"itu_709\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"unknown color space conversion standard\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"vector swizzle (\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"comma\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"move second child to first child\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"initialize first child with second child\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"add second child into first child\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"subtract second child into first child\00", align 1
@.str.28 = private unnamed_addr constant [39 x i8] c"multiply second child into first child\00", align 1
@.str.29 = private unnamed_addr constant [42 x i8] c"matrix mult second child into first child\00", align 1
@.str.30 = private unnamed_addr constant [43 x i8] c"vector scale second child into first child\00", align 1
@.str.31 = private unnamed_addr constant [43 x i8] c"matrix scale second child into first child\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"divide second child into first child\00", align 1
@.str.33 = private unnamed_addr constant [37 x i8] c"modulo second child into first child\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"bit-wise shift first child left by second child\00", align 1
@.str.35 = private unnamed_addr constant [49 x i8] c"bit-wise shift first child right by second child\00", align 1
@.str.36 = private unnamed_addr constant [43 x i8] c"bit-wise and second child into first child\00", align 1
@.str.37 = private unnamed_addr constant [43 x i8] c"bit-wise xor second child into first child\00", align 1
@.str.38 = private unnamed_addr constant [42 x i8] c"bit-wise or second child into first child\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"direct index\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"indirect index\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"direct index for structure\00", align 1
@.str.42 = private unnamed_addr constant [33 x i8] c"direct index for interface block\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"subtract\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"component-wise multiply\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"divide\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"modulo\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"bit-wise shift left\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"bit-wise shift right\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"bit-wise and\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"bit-wise xor\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"bit-wise or\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"Compare Equal\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"Compare Not Equal\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"Compare Less Than\00", align 1
@.str.56 = private unnamed_addr constant [21 x i8] c"Compare Greater Than\00", align 1
@.str.57 = private unnamed_addr constant [27 x i8] c"Compare Less Than or Equal\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"Compare Greater Than or Equal\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"vector-scale\00", align 1
@.str.60 = private unnamed_addr constant [20 x i8] c"vector-times-matrix\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"matrix-times-vector\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"matrix-scale\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"matrix-multiply\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"logical-or\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"logical-xor\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"logical-and\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"<unknown op>\00", align 1
@.str.68 = private unnamed_addr constant [10 x i8] c" (field '\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"')\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"Negate value\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"Positive sign\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"negation\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"bit-wise not\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"Post-Increment\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"Post-Decrement\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"Pre-Increment\00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c"Pre-Decrement\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"Array length\00", align 1
@.str.79 = private unnamed_addr constant [19 x i8] c"component-wise not\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"Ternary selection\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"Condition\0A\00", align 1
@.str.83 = private unnamed_addr constant [11 x i8] c"true case\0A\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"false case\0A\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"If test\0A\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"true case is null\0A\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"Switch\0A\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"Default\0A\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"Case\0A\00", align 1
@.str.90 = private unnamed_addr constant [19 x i8] c"Function Prototype\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"parameter: \00", align 1
@.str.92 = private unnamed_addr constant [21 x i8] c" (internal function)\00", align 1
@.str.93 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.94 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c" (symbol id \00", align 1
@.str.96 = private unnamed_addr constant [22 x i8] c"Function Definition:\0A\00", align 1
@.str.97 = private unnamed_addr constant [24 x i8] c"node is still EOpNull!\0A\00", align 1
@.str.98 = private unnamed_addr constant [29 x i8] c"Call a user-defined function\00", align 1
@.str.99 = private unnamed_addr constant [50 x i8] c"Call an internal function with raw implementation\00", align 1
@.str.100 = private unnamed_addr constant [25 x i8] c"Call a built-in function\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c"Construct\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"component-wise equal\00", align 1
@.str.103 = private unnamed_addr constant [25 x i8] c"component-wise not equal\00", align 1
@.str.104 = private unnamed_addr constant [25 x i8] c"component-wise less than\00", align 1
@.str.105 = private unnamed_addr constant [28 x i8] c"component-wise greater than\00", align 1
@.str.106 = private unnamed_addr constant [34 x i8] c"component-wise less than or equal\00", align 1
@.str.107 = private unnamed_addr constant [37 x i8] c"component-wise greater than or equal\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"dot product\00", align 1
@.str.109 = private unnamed_addr constant [14 x i8] c"cross product\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"Code block\0A\00", align 1
@.str.111 = private unnamed_addr constant [22 x i8] c"Precise Declaration:\0A\00", align 1
@.str.112 = private unnamed_addr constant [24 x i8] c"Invariant Declaration:\0A\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"Declaration\0A\00", align 1
@.str.114 = private unnamed_addr constant [21 x i8] c"Loop with condition \00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"not \00", align 1
@.str.116 = private unnamed_addr constant [14 x i8] c"tested first\0A\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"Loop Condition\0A\00", align 1
@.str.118 = private unnamed_addr constant [19 x i8] c"No loop condition\0A\00", align 1
@.str.119 = private unnamed_addr constant [11 x i8] c"Loop Body\0A\00", align 1
@.str.120 = private unnamed_addr constant [14 x i8] c"No loop body\0A\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"Loop Terminal Expression\0A\00", align 1
@.str.122 = private unnamed_addr constant [13 x i8] c"Branch: Kill\00", align 1
@.str.123 = private unnamed_addr constant [14 x i8] c"Branch: Break\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"Branch: Continue\00", align 1
@.str.125 = private unnamed_addr constant [15 x i8] c"Branch: Return\00", align 1
@.str.126 = private unnamed_addr constant [23 x i8] c"Branch: Unknown Branch\00", align 1
@.str.127 = private unnamed_addr constant [18 x i8] c" with expression\0A\00", align 1
@switch.table._ZN2sh12_GLOBAL__N_116TOutputTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)], align 8
@switch.table._ZN2sh12_GLOBAL__N_116TOutputTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh10OutputTreeEPNS_11TIntermNodeERNS_13TInfoSinkBaseE(%"class.sh::TIntermNode"*, %"class.sh::TInfoSinkBase"* dereferenceable(48)) local_unnamed_addr #0 {
  %3 = alloca %"class.sh::(anonymous namespace)::TOutputTraverser", align 8
  %4 = bitcast %"class.sh::(anonymous namespace)::TOutputTraverser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 168, i1 false)
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %3, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %5, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #7
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_116TOutputTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %3, i64 0, i32 1
  store %"class.sh::TInfoSinkBase"* %1, %"class.sh::TInfoSinkBase"** %7, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %3, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = bitcast %"class.sh::TIntermNode"* %0 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %10 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %10, i64 2
  %12 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %11, align 8
  call void %12(%"class.sh::TIntermNode"* %0, %"class.sh::TIntermTraverser"* nonnull %5) #7
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %4) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_116TOutputTraverserD0Ev(%"class.sh::(anonymous namespace)::TOutputTraverser"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, %"class.sh::TIntermSymbol"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.sh::ImmutableString", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %6 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %11 = bitcast %"class.sh::TIntermNode"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.8"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = lshr exact i64 %15, 3
  %17 = trunc i64 %16 to i32
  %18 = add i32 %8, -1
  %19 = add i32 %18, %17
  %20 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0, i32 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %6, i32 %21, i32 %23) #7
  %24 = icmp sgt i32 %19, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i32 [ 0, %25 ], [ %30, %27 ]
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %30 = add nuw nsw i32 %28, 1
  %31 = icmp eq i32 %30, %19
  br i1 %31, label %32, label %27

32:                                               ; preds = %27, %2
  %33 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %34 = bitcast %"class.sh::TVariable"** %33 to %"class.sh::TSymbol"**
  %35 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %34, align 8
  %36 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %35, i64 0, i32 2
  %37 = load i8, i8* %36, align 4
  %38 = icmp eq i8 %37, 3
  %39 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %40 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %39, i64 0, i32 0
  br i1 %38, label %41, label %43

41:                                               ; preds = %32
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #7
  br label %54

43:                                               ; preds = %32
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7
  %45 = bitcast %"class.sh::ImmutableString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #7
  %46 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %1) #7
  %47 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %48 = extractvalue { i8*, i64 } %46, 0
  store i8* %48, i8** %47, align 8
  %49 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 1
  %50 = extractvalue { i8*, i64 } %46, 1
  store i64 %50, i64* %49, align 8
  %51 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"* %39, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %3) #7
  %52 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %51, i64 0, i32 0
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #7
  br label %54

54:                                               ; preds = %43, %41
  %55 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %56 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %55, i64 0, i32 0
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #7
  %58 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #7
  %59 = call dereferenceable(4) %"class.sh::TSymbolUniqueId"* @_ZNK2sh13TIntermSymbol8uniqueIdEv(%"class.sh::TIntermSymbol"* %1) #7
  %60 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %4, align 4
  %62 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %55, i32* nonnull dereferenceable(4) %4)
  %63 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %62, i64 0, i32 0
  %64 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #7
  %65 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %66 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %65, i64 0, i32 0
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #7
  %68 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %69 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %69, i64 31
  %71 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %70, align 8
  %72 = call dereferenceable(184) %"class.sh::TType"* %71(%"class.sh::TIntermSymbol"* %1) #7
  %73 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %65, %"class.sh::TType"* dereferenceable(184) %72) #7
  %74 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %73, i64 0, i32 0
  %75 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %76 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %77 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %76, i64 0, i32 0
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_116TOutputTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1, i64 0, i32 0
  %6 = bitcast %"class.sh::TIntermConstantUnion"* %1 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %7 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %7, i64 31
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %8, align 8
  %10 = tail call dereferenceable(184) %"class.sh::TType"* %9(%"class.sh::TIntermExpression"* %5) #7
  %11 = tail call i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"* %10) #7
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %17 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %18 = bitcast %"class.sh::TIntermNode"*** %17 to i64*
  %19 = bitcast %"class.std::__1::vector.8"* %16 to i64*
  %20 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %22 = bitcast %"class.sh::TIntermConstantUnion"* %1 to %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)***
  %23 = bitcast i32* %4 to i8*
  %24 = bitcast i32* %3 to i8*
  br label %26

25:                                               ; preds = %117, %2
  ret void

26:                                               ; preds = %117, %13
  %27 = phi i64 [ 0, %13 ], [ %122, %117 ]
  %28 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  %29 = load i32, i32* %15, align 8
  %30 = load i64, i64* %18, align 8
  %31 = load i64, i64* %19, align 8
  %32 = sub i64 %30, %31
  %33 = lshr exact i64 %32, 3
  %34 = trunc i64 %33 to i32
  %35 = add i32 %29, -1
  %36 = add i32 %35, %34
  %37 = load i32, i32* %20, align 4
  %38 = load i32, i32* %21, align 4
  call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %28, i32 %37, i32 %38) #7
  %39 = icmp sgt i32 %36, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %28, i64 0, i32 0
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i32 [ 0, %40 ], [ %45, %42 ]
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %45 = add nuw nsw i32 %43, 1
  %46 = icmp eq i32 %45, %36
  br i1 %46, label %47, label %42

47:                                               ; preds = %42, %26
  %48 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %22, align 8
  %49 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %48, i64 29
  %50 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %49, align 8
  %51 = call %"class.sh::TConstantUnion"* %50(%"class.sh::TIntermConstantUnion"* %1) #7
  %52 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %51, i64 %27, i32 1
  %53 = load i32, i32* %52, align 4
  switch i32 %53, label %115 [
    i32 5, label %54
    i32 1, label %70
    i32 3, label %79
    i32 4, label %88
    i32 7, label %97
  ]

54:                                               ; preds = %47
  %55 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %22, align 8
  %56 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %55, i64 29
  %57 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %56, align 8
  %58 = call %"class.sh::TConstantUnion"* %57(%"class.sh::TIntermConstantUnion"* %1) #7
  %59 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %58, i64 %27
  %60 = call zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"* %59) #7
  %61 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  %62 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %61, i64 0, i32 0
  %63 = select i1 %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)
  %64 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %62, i8* %63) #7
  %65 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  %66 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %65, i64 0, i32 0
  %67 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %68 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %66, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #7
  %69 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %117

70:                                               ; preds = %47
  %71 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  %72 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %22, align 8
  %73 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %72, i64 29
  %74 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %73, align 8
  %75 = call %"class.sh::TConstantUnion"* %74(%"class.sh::TIntermConstantUnion"* %1) #7
  %76 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %75, i64 %27
  %77 = call float @_ZNK2sh14TConstantUnion9getFConstEv(%"class.sh::TConstantUnion"* %76) #7
  %78 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsEf(%"class.sh::TInfoSinkBase"* %71, float %77)
  br label %117

79:                                               ; preds = %47
  %80 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #7
  %81 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %22, align 8
  %82 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %81, i64 29
  %83 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %82, align 8
  %84 = call %"class.sh::TConstantUnion"* %83(%"class.sh::TIntermConstantUnion"* %1) #7
  %85 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %84, i64 %27
  %86 = call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %85) #7
  store i32 %86, i32* %3, align 4
  %87 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %80, i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #7
  br label %117

88:                                               ; preds = %47
  %89 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #7
  %90 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %22, align 8
  %91 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %90, i64 29
  %92 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %91, align 8
  %93 = call %"class.sh::TConstantUnion"* %92(%"class.sh::TIntermConstantUnion"* %1) #7
  %94 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %93, i64 %27
  %95 = call i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"* %94) #7
  store i32 %95, i32* %4, align 4
  %96 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"* %89, i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #7
  br label %117

97:                                               ; preds = %47
  %98 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  %99 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %22, align 8
  %100 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %99, i64 29
  %101 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %100, align 8
  %102 = call %"class.sh::TConstantUnion"* %101(%"class.sh::TIntermConstantUnion"* %1) #7
  %103 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %102, i64 %27
  %104 = call i32 @_ZNK2sh14TConstantUnion25getYuvCscStandardEXTConstEv(%"class.sh::TConstantUnion"* %103) #7
  %105 = add i32 %104, -1
  %106 = icmp ult i32 %105, 3
  br i1 %106, label %107, label %111

107:                                              ; preds = %97
  %108 = sext i32 %105 to i64
  %109 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh12_GLOBAL__N_116TOutputTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE, i64 0, i64 %108
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %97, %107
  %112 = phi i8* [ %110, %107 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i64 0, i64 0), %97 ]
  %113 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %98, i64 0, i32 0
  %114 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %113, i8* nonnull %112) #7
  br label %117

115:                                              ; preds = %47
  %116 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  call void @_ZN2sh13TInfoSinkBase6prefixENS_8SeverityE(%"class.sh::TInfoSinkBase"* %116, i32 1) #7
  br label %117

117:                                              ; preds = %54, %70, %79, %88, %111, %115
  %118 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), %54 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), %70 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), %79 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), %88 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), %111 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), %115 ]
  %119 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %14, align 8
  %120 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %119, i64 0, i32 0
  %121 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %120, i8* %118) #7
  %122 = add nuw i64 %27, 1
  %123 = icmp eq i64 %122, %11
  br i1 %123, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #7
  %35 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  tail call void @_ZNK2sh14TIntermSwizzle18writeOffsetsAsXYZWEPNS_13TInfoSinkBaseE(%"class.sh::TIntermSwizzle"* %2, %"class.sh::TInfoSinkBase"* %35) #7
  %36 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %37 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %36, i64 0, i32 0
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %39 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %40 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %39, i64 0, i32 0
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %42 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %2, i64 0, i32 0
  %43 = bitcast %"class.sh::TIntermSwizzle"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %44 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %44, i64 31
  %46 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %45, align 8
  %47 = tail call dereferenceable(184) %"class.sh::TType"* %46(%"class.sh::TIntermExpression"* %42) #7
  %48 = tail call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %39, %"class.sh::TType"* dereferenceable(184) %47) #7
  %49 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %48, i64 0, i32 0
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %51 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %52 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %51, i64 0, i32 0
  %53 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %6 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %11 = bitcast %"class.sh::TIntermNode"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.8"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = lshr exact i64 %15, 3
  %17 = trunc i64 %16 to i32
  %18 = add i32 %8, -1
  %19 = add i32 %18, %17
  %20 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %6, i32 %21, i32 %23) #7
  %24 = icmp sgt i32 %19, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i32 [ 0, %25 ], [ %30, %27 ]
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %30 = add nuw nsw i32 %28, 1
  %31 = icmp eq i32 %30, %19
  br i1 %31, label %32, label %27

32:                                               ; preds = %27, %3
  %33 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 1
  %34 = load i8, i8* %33, align 8
  switch i8 %34, label %79 [
    i8 30, label %80
    i8 -118, label %35
    i8 -117, label %36
    i8 -116, label %37
    i8 -115, label %38
    i8 -114, label %39
    i8 -113, label %40
    i8 -112, label %41
    i8 -111, label %42
    i8 -110, label %43
    i8 -109, label %44
    i8 -108, label %45
    i8 -107, label %46
    i8 -106, label %47
    i8 -105, label %48
    i8 -104, label %49
    i8 -103, label %50
    i8 44, label %51
    i8 45, label %52
    i8 46, label %53
    i8 47, label %54
    i8 13, label %55
    i8 14, label %56
    i8 15, label %57
    i8 16, label %58
    i8 17, label %59
    i8 39, label %60
    i8 40, label %61
    i8 41, label %62
    i8 42, label %63
    i8 43, label %64
    i8 18, label %65
    i8 19, label %66
    i8 20, label %67
    i8 21, label %68
    i8 22, label %69
    i8 23, label %70
    i8 31, label %71
    i8 32, label %72
    i8 33, label %73
    i8 34, label %74
    i8 35, label %75
    i8 36, label %76
    i8 37, label %77
    i8 38, label %78
  ]

35:                                               ; preds = %32
  br label %80

36:                                               ; preds = %32
  br label %80

37:                                               ; preds = %32
  br label %80

38:                                               ; preds = %32
  br label %80

39:                                               ; preds = %32
  br label %80

40:                                               ; preds = %32
  br label %80

41:                                               ; preds = %32
  br label %80

42:                                               ; preds = %32
  br label %80

43:                                               ; preds = %32
  br label %80

44:                                               ; preds = %32
  br label %80

45:                                               ; preds = %32
  br label %80

46:                                               ; preds = %32
  br label %80

47:                                               ; preds = %32
  br label %80

48:                                               ; preds = %32
  br label %80

49:                                               ; preds = %32
  br label %80

50:                                               ; preds = %32
  br label %80

51:                                               ; preds = %32
  br label %80

52:                                               ; preds = %32
  br label %80

53:                                               ; preds = %32
  br label %80

54:                                               ; preds = %32
  br label %80

55:                                               ; preds = %32
  br label %80

56:                                               ; preds = %32
  br label %80

57:                                               ; preds = %32
  br label %80

58:                                               ; preds = %32
  br label %80

59:                                               ; preds = %32
  br label %80

60:                                               ; preds = %32
  br label %80

61:                                               ; preds = %32
  br label %80

62:                                               ; preds = %32
  br label %80

63:                                               ; preds = %32
  br label %80

64:                                               ; preds = %32
  br label %80

65:                                               ; preds = %32
  br label %80

66:                                               ; preds = %32
  br label %80

67:                                               ; preds = %32
  br label %80

68:                                               ; preds = %32
  br label %80

69:                                               ; preds = %32
  br label %80

70:                                               ; preds = %32
  br label %80

71:                                               ; preds = %32
  br label %80

72:                                               ; preds = %32
  br label %80

73:                                               ; preds = %32
  br label %80

74:                                               ; preds = %32
  br label %80

75:                                               ; preds = %32
  br label %80

76:                                               ; preds = %32
  br label %80

77:                                               ; preds = %32
  br label %80

78:                                               ; preds = %32
  br label %80

79:                                               ; preds = %32
  br label %80

80:                                               ; preds = %32, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35
  %81 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i64 0, i64 0), %79 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i64 0, i64 0), %78 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i64 0, i64 0), %77 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), %76 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0), %75 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i64 0, i64 0), %74 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i64 0, i64 0), %73 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0), %72 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), %71 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i64 0, i64 0), %70 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.57, i64 0, i64 0), %69 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.56, i64 0, i64 0), %68 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0), %67 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i64 0, i64 0), %66 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), %65 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), %64 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), %63 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0), %62 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), %61 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i64 0, i64 0), %60 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), %59 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), %58 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i64 0, i64 0), %57 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), %56 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), %55 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.42, i64 0, i64 0), %54 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), %53 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0), %52 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), %51 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.38, i64 0, i64 0), %50 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.37, i64 0, i64 0), %49 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0), %48 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i64 0, i64 0), %47 ], [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i64 0, i64 0), %46 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.33, i64 0, i64 0), %45 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), %44 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i64 0, i64 0), %43 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.31, i64 0, i64 0), %42 ], [ getelementptr inbounds ([43 x i8], [43 x i8]* @.str.30, i64 0, i64 0), %41 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i64 0, i64 0), %40 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0), %39 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0), %38 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0), %37 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), %36 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0), %35 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), %32 ]
  %82 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %83 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %82, i64 0, i32 0
  %84 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %83, i8* %81) #7
  %85 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %86 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %85, i64 0, i32 0
  %87 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %88 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 0, i32 0
  %89 = bitcast %"class.sh::TIntermBinary"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %90 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %90, i64 31
  %92 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %91, align 8
  %93 = tail call dereferenceable(184) %"class.sh::TType"* %92(%"class.sh::TIntermExpression"* %88) #7
  %94 = tail call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %85, %"class.sh::TType"* dereferenceable(184) %93) #7
  %95 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %94, i64 0, i32 0
  %96 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %97 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %98 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %97, i64 0, i32 0
  %99 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  %100 = load i8, i8* %33, align 8
  %101 = and i8 %100, -2
  %102 = icmp eq i8 %101, 46
  br i1 %102, label %103, label %186

103:                                              ; preds = %80
  %104 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 2
  %105 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %104, align 8
  %106 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %105, i64 0, i32 0
  %107 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  %108 = bitcast %"class.sh::TIntermTyped"* %105 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %109 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %109, i64 2
  %111 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %110, align 8
  tail call void %111(%"class.sh::TIntermNode"* %106, %"class.sh::TIntermTraverser"* %107) #7
  %112 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %2, i64 0, i32 3
  %113 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %112, align 8
  %114 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %113, i64 0, i32 0
  %115 = bitcast %"class.sh::TIntermTyped"* %113 to %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)***
  %116 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %115, align 8
  %117 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %116, i64 5
  %118 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %117, align 8
  %119 = tail call %"class.sh::TIntermConstantUnion"* %118(%"class.sh::TIntermNode"* %114) #7
  %120 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %121 = load i32, i32* %7, align 8
  %122 = load i64, i64* %11, align 8
  %123 = load i64, i64* %13, align 8
  %124 = sub i64 %122, %123
  %125 = lshr exact i64 %124, 3
  %126 = trunc i64 %125 to i32
  %127 = add i32 %121, %126
  %128 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %119, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %119, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %131 = load i32, i32* %130, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %120, i32 %129, i32 %131) #7
  %132 = icmp sgt i32 %127, 0
  br i1 %132, label %133, label %140

133:                                              ; preds = %103
  %134 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %120, i64 0, i32 0
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i32 [ 0, %133 ], [ %138, %135 ]
  %137 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %134, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %138 = add nuw nsw i32 %136, 1
  %139 = icmp eq i32 %138, %127
  br i1 %139, label %140, label %135

140:                                              ; preds = %135, %103
  %141 = bitcast %"class.sh::TIntermConstantUnion"* %119 to %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)***
  %142 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %141, align 8
  %143 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %142, i64 29
  %144 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %143, align 8
  %145 = tail call %"class.sh::TConstantUnion"* %144(%"class.sh::TIntermConstantUnion"* %119) #7
  %146 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %104, align 8
  %147 = bitcast %"class.sh::TIntermTyped"* %146 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %148 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %147, align 8
  %149 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %148, i64 31
  %150 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %149, align 8
  %151 = tail call dereferenceable(184) %"class.sh::TType"* %150(%"class.sh::TIntermTyped"* %146) #7
  %152 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %151, i64 0, i32 13
  %153 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %152, align 8
  %154 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %104, align 8
  %155 = bitcast %"class.sh::TIntermTyped"* %154 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %156 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %155, align 8
  %157 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %156, i64 31
  %158 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %157, align 8
  %159 = tail call dereferenceable(184) %"class.sh::TType"* %158(%"class.sh::TIntermTyped"* %154) #7
  %160 = icmp eq %"class.sh::TStructure"* %153, null
  %161 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %153, i64 0, i32 2, i32 0
  %162 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %159, i64 0, i32 12
  %163 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %162, align 8
  %164 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %163, i64 0, i32 1, i32 0
  %165 = select i1 %160, %"class.sh::TVector.42"** %164, %"class.sh::TVector.42"** %161
  %166 = load %"class.sh::TVector.42"*, %"class.sh::TVector.42"** %165, align 8
  %167 = tail call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %145) #7
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %"class.sh::TVector.42", %"class.sh::TVector.42"* %166, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.sh::TField"**, %"class.sh::TField"*** %169, align 8
  %171 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %170, i64 %168
  %172 = load %"class.sh::TField"*, %"class.sh::TField"** %171, align 8
  %173 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %174 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #7
  %175 = tail call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %145) #7
  store i32 %175, i32* %4, align 4
  %176 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %173, i32* nonnull dereferenceable(4) %4)
  %177 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %176, i64 0, i32 0
  %178 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %177, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i64 0, i64 0)) #7
  %179 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %172, i64 0, i32 1
  %180 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"* %176, %"class.sh::ImmutableString"* dereferenceable(16) %179) #7
  %181 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %180, i64 0, i32 0
  %182 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %181, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #7
  %183 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %5, align 8
  %184 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %183, i64 0, i32 0
  %185 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %186

186:                                              ; preds = %80, %140
  %187 = phi i1 [ false, %140 ], [ true, %80 ]
  ret i1 %187
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 1
  %33 = load i8, i8* %32, align 8
  switch i8 %33, label %54 [
    i8 4, label %34
    i8 5, label %36
    i8 6, label %38
    i8 7, label %40
    i8 8, label %42
    i8 9, label %44
    i8 10, label %46
    i8 11, label %48
    i8 12, label %50
    i8 122, label %52
  ]

34:                                               ; preds = %31
  %35 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

36:                                               ; preds = %31
  %37 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

38:                                               ; preds = %31
  %39 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

40:                                               ; preds = %31
  %41 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

42:                                               ; preds = %31
  %43 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

44:                                               ; preds = %31
  %45 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

46:                                               ; preds = %31
  %47 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

48:                                               ; preds = %31
  %49 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

50:                                               ; preds = %31
  %51 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

52:                                               ; preds = %31
  %53 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  br label %57

54:                                               ; preds = %31
  %55 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %56 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %33) #7
  br label %57

57:                                               ; preds = %54, %52, %50, %48, %46, %44, %42, %40, %38, %36, %34
  %58 = phi %"class.sh::TInfoSinkBase"* [ %55, %54 ], [ %53, %52 ], [ %51, %50 ], [ %49, %48 ], [ %47, %46 ], [ %45, %44 ], [ %43, %42 ], [ %41, %40 ], [ %39, %38 ], [ %37, %36 ], [ %35, %34 ]
  %59 = phi i8* [ %56, %54 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79, i64 0, i64 0), %52 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i64 0, i64 0), %50 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i64 0, i64 0), %48 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i64 0, i64 0), %46 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i64 0, i64 0), %44 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i64 0, i64 0), %42 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i64 0, i64 0), %40 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i64 0, i64 0), %38 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i64 0, i64 0), %36 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i64 0, i64 0), %34 ]
  %60 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %58, i64 0, i32 0
  %61 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %60, i8* %59) #7
  %62 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %63 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %62, i64 0, i32 0
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %65 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %2, i64 0, i32 0, i32 0
  %66 = bitcast %"class.sh::TIntermUnary"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %67 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %67, i64 31
  %69 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %68, align 8
  %70 = tail call dereferenceable(184) %"class.sh::TType"* %69(%"class.sh::TIntermExpression"* %65) #7
  %71 = tail call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %62, %"class.sh::TType"* dereferenceable(184) %70) #7
  %72 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %71, i64 0, i32 0
  %73 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %74 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %75 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %74, i64 0, i32 0
  %76 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0)) #7
  %35 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %36 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %35, i64 0, i32 0
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %38 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 0
  %39 = bitcast %"class.sh::TIntermTernary"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %40 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %40, i64 31
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %41, align 8
  %43 = tail call dereferenceable(184) %"class.sh::TType"* %42(%"class.sh::TIntermExpression"* %38) #7
  %44 = tail call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %35, %"class.sh::TType"* dereferenceable(184) %43) #7
  %45 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %44, i64 0, i32 0
  %46 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i64 0, i64 0)) #7
  %47 = load i32, i32* %6, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %6, align 8
  %49 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %50 = load i64, i64* %10, align 8
  %51 = load i64, i64* %12, align 8
  %52 = sub i64 %50, %51
  %53 = lshr exact i64 %52, 3
  %54 = trunc i64 %53 to i32
  %55 = add i32 %47, %54
  %56 = load i32, i32* %19, align 4
  %57 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %49, i32 %56, i32 %57) #7
  %58 = icmp sgt i32 %55, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %31
  %60 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %49, i64 0, i32 0
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i32 [ 0, %59 ], [ %64, %61 ]
  %63 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %64 = add nuw nsw i32 %62, 1
  %65 = icmp eq i32 %64, %55
  br i1 %65, label %66, label %61

66:                                               ; preds = %61, %31
  %67 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %68 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %67, i64 0, i32 0
  %69 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %68, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0)) #7
  %70 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 1
  %71 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %70, align 8
  %72 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %71, i64 0, i32 0
  %73 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  %74 = bitcast %"class.sh::TIntermTyped"* %71 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %75 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %75, i64 2
  %77 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %76, align 8
  tail call void %77(%"class.sh::TIntermNode"* %72, %"class.sh::TIntermTraverser"* %73) #7
  %78 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %79 = load i32, i32* %6, align 8
  %80 = load i64, i64* %10, align 8
  %81 = load i64, i64* %12, align 8
  %82 = sub i64 %80, %81
  %83 = lshr exact i64 %82, 3
  %84 = trunc i64 %83 to i32
  %85 = add i32 %79, -1
  %86 = add i32 %85, %84
  %87 = load i32, i32* %19, align 4
  %88 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %78, i32 %87, i32 %88) #7
  %89 = icmp sgt i32 %86, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %66
  %91 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %78, i64 0, i32 0
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i32 [ 0, %90 ], [ %95, %92 ]
  %94 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %95 = add nuw nsw i32 %93, 1
  %96 = icmp eq i32 %95, %86
  br i1 %96, label %97, label %92

97:                                               ; preds = %92, %66
  %98 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 2
  %99 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %98, align 8
  %100 = icmp eq %"class.sh::TIntermTyped"* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %97
  %102 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %103 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %102, i64 0, i32 0
  %104 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %103, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i64 0, i64 0)) #7
  %105 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %98, align 8
  %106 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %105, i64 0, i32 0
  %107 = bitcast %"class.sh::TIntermTyped"* %105 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %108 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %108, i64 2
  %110 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %109, align 8
  tail call void %110(%"class.sh::TIntermNode"* %106, %"class.sh::TIntermTraverser"* %73) #7
  br label %111

111:                                              ; preds = %97, %101
  %112 = getelementptr inbounds %"class.sh::TIntermTernary", %"class.sh::TIntermTernary"* %2, i64 0, i32 3
  %113 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %112, align 8
  %114 = icmp eq %"class.sh::TIntermTyped"* %113, null
  br i1 %114, label %145, label %115

115:                                              ; preds = %111
  %116 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %117 = load i32, i32* %6, align 8
  %118 = load i64, i64* %10, align 8
  %119 = load i64, i64* %12, align 8
  %120 = sub i64 %118, %119
  %121 = lshr exact i64 %120, 3
  %122 = trunc i64 %121 to i32
  %123 = add i32 %117, -1
  %124 = add i32 %123, %122
  %125 = load i32, i32* %19, align 4
  %126 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %116, i32 %125, i32 %126) #7
  %127 = icmp sgt i32 %124, 0
  br i1 %127, label %128, label %135

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %116, i64 0, i32 0
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i32 [ 0, %128 ], [ %133, %130 ]
  %132 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %133 = add nuw nsw i32 %131, 1
  %134 = icmp eq i32 %133, %124
  br i1 %134, label %135, label %130

135:                                              ; preds = %130, %115
  %136 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %137 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %136, i64 0, i32 0
  %138 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %137, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i64 0, i64 0)) #7
  %139 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %112, align 8
  %140 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %139, i64 0, i32 0
  %141 = bitcast %"class.sh::TIntermTyped"* %139 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %142 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %142, i64 2
  %144 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %143, align 8
  tail call void %144(%"class.sh::TIntermNode"* %140, %"class.sh::TIntermTraverser"* %73) #7
  br label %145

145:                                              ; preds = %111, %135
  %146 = load i32, i32* %6, align 8
  %147 = add nsw i32 %146, -1
  store i32 %147, i32* %6, align 8
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermIfElse"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermIfElse", %"class.sh::TIntermIfElse"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermIfElse", %"class.sh::TIntermIfElse"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #7
  %35 = load i32, i32* %6, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 8
  %37 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %38 = load i64, i64* %10, align 8
  %39 = load i64, i64* %12, align 8
  %40 = sub i64 %38, %39
  %41 = lshr exact i64 %40, 3
  %42 = trunc i64 %41 to i32
  %43 = add i32 %35, %42
  %44 = load i32, i32* %19, align 4
  %45 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %37, i32 %44, i32 %45) #7
  %46 = icmp sgt i32 %43, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %37, i64 0, i32 0
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i32 [ 0, %47 ], [ %52, %49 ]
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %52 = add nuw nsw i32 %50, 1
  %53 = icmp eq i32 %52, %43
  br i1 %53, label %54, label %49

54:                                               ; preds = %49, %31
  %55 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %56 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %55, i64 0, i32 0
  %57 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %56, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0)) #7
  %58 = getelementptr inbounds %"class.sh::TIntermIfElse", %"class.sh::TIntermIfElse"* %2, i64 0, i32 1
  %59 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %58, align 8
  %60 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %59, i64 0, i32 0
  %61 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  %62 = bitcast %"class.sh::TIntermTyped"* %59 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %63 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %63, i64 2
  %65 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %64, align 8
  tail call void %65(%"class.sh::TIntermNode"* %60, %"class.sh::TIntermTraverser"* %61) #7
  %66 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %67 = load i32, i32* %6, align 8
  %68 = load i64, i64* %10, align 8
  %69 = load i64, i64* %12, align 8
  %70 = sub i64 %68, %69
  %71 = lshr exact i64 %70, 3
  %72 = trunc i64 %71 to i32
  %73 = add i32 %67, -1
  %74 = add i32 %73, %72
  %75 = load i32, i32* %19, align 4
  %76 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %66, i32 %75, i32 %76) #7
  %77 = icmp sgt i32 %74, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %54
  %79 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %66, i64 0, i32 0
  br label %80

80:                                               ; preds = %80, %78
  %81 = phi i32 [ 0, %78 ], [ %83, %80 ]
  %82 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %83 = add nuw nsw i32 %81, 1
  %84 = icmp eq i32 %83, %74
  br i1 %84, label %85, label %80

85:                                               ; preds = %80, %54
  %86 = getelementptr inbounds %"class.sh::TIntermIfElse", %"class.sh::TIntermIfElse"* %2, i64 0, i32 2
  %87 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %86, align 8
  %88 = icmp eq %"class.sh::TIntermBlock"* %87, null
  %89 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %90 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %89, i64 0, i32 0
  br i1 %88, label %94, label %91

91:                                               ; preds = %85
  %92 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %90, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i64 0, i64 0)) #7
  %93 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %86, align 8
  tail call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %93, %"class.sh::TIntermTraverser"* %61) #7
  br label %96

94:                                               ; preds = %85
  %95 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %90, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.86, i64 0, i64 0)) #7
  br label %96

96:                                               ; preds = %94, %91
  %97 = getelementptr inbounds %"class.sh::TIntermIfElse", %"class.sh::TIntermIfElse"* %2, i64 0, i32 3
  %98 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %97, align 8
  %99 = icmp eq %"class.sh::TIntermBlock"* %98, null
  br i1 %99, label %125, label %100

100:                                              ; preds = %96
  %101 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %102 = load i32, i32* %6, align 8
  %103 = load i64, i64* %10, align 8
  %104 = load i64, i64* %12, align 8
  %105 = sub i64 %103, %104
  %106 = lshr exact i64 %105, 3
  %107 = trunc i64 %106 to i32
  %108 = add i32 %102, -1
  %109 = add i32 %108, %107
  %110 = load i32, i32* %19, align 4
  %111 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %101, i32 %110, i32 %111) #7
  %112 = icmp sgt i32 %109, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %100
  %114 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %101, i64 0, i32 0
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %117 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %114, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %118 = add nuw nsw i32 %116, 1
  %119 = icmp eq i32 %118, %109
  br i1 %119, label %120, label %115

120:                                              ; preds = %115, %100
  %121 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %122 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %121, i64 0, i32 0
  %123 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %122, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i64 0, i64 0)) #7
  %124 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %97, align 8
  tail call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %124, %"class.sh::TIntermTraverser"* %61) #7
  br label %125

125:                                              ; preds = %96, %120
  %126 = load i32, i32* %6, align 8
  %127 = add nsw i32 %126, -1
  store i32 %127, i32* %6, align 8
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermSwitch"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermSwitch", %"class.sh::TIntermSwitch"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermSwitch", %"class.sh::TIntermSwitch"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i64 0, i64 0)) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermCase"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermCase", %"class.sh::TIntermCase"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermCase", %"class.sh::TIntermCase"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = getelementptr inbounds %"class.sh::TIntermCase", %"class.sh::TIntermCase"* %2, i64 0, i32 1
  %33 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %32, align 8
  %34 = icmp eq %"class.sh::TIntermTyped"* %33, null
  %35 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %36 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %35, i64 0, i32 0
  %37 = select i1 %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0)
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %36, i8* %37) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_116TOutputTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.sh::ImmutableString", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %7 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %12 = bitcast %"class.sh::TIntermNode"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.8"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = lshr exact i64 %16, 3
  %18 = trunc i64 %17 to i32
  %19 = add i32 %9, -1
  %20 = add i32 %19, %18
  %21 = getelementptr inbounds %"class.sh::TIntermFunctionPrototype", %"class.sh::TIntermFunctionPrototype"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.sh::TIntermFunctionPrototype", %"class.sh::TIntermFunctionPrototype"* %1, i64 0, i32 0, i32 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %7, i32 %22, i32 %24) #7
  %25 = icmp sgt i32 %20, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %7, i64 0, i32 0
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi i32 [ 0, %26 ], [ %31, %28 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %31 = add nuw nsw i32 %29, 1
  %32 = icmp eq i32 %31, %20
  br i1 %32, label %33, label %28

33:                                               ; preds = %28, %2
  %34 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %6, align 8
  %35 = getelementptr inbounds %"class.sh::TIntermFunctionPrototype", %"class.sh::TIntermFunctionPrototype"* %1, i64 0, i32 1
  %36 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %35, align 8
  %37 = bitcast %"class.sh::TFunction"* %36 to %"class.sh::TSymbol"*
  %38 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %36, i64 0, i32 0, i32 2
  %39 = load i8, i8* %38, align 4
  %40 = icmp eq i8 %39, 2
  %41 = select i1 %40, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93, i64 0, i64 0)
  %42 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %34, i64 0, i32 0
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %42, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.90, i64 0, i64 0)) #7
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %42, i8* %41) #7
  %45 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i64 0, i64 0)) #7
  %46 = bitcast %"class.sh::ImmutableString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #7
  %47 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %37) #7
  %48 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %49 = extractvalue { i8*, i64 } %47, 0
  store i8* %49, i8** %48, align 8
  %50 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 1
  %51 = extractvalue { i8*, i64 } %47, 1
  store i64 %51, i64* %50, align 8
  %52 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"* %34, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %3) #7
  %53 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %52, i64 0, i32 0
  %54 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)) #7
  %55 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #7
  %56 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %36, i64 0, i32 0, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %4, align 4
  %58 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %52, i32* nonnull dereferenceable(4) %4) #7
  %59 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %58, i64 0, i32 0
  %60 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #7
  %61 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %6, align 8
  %62 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %61, i64 0, i32 0
  %63 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %64 = bitcast %"class.sh::TIntermFunctionPrototype"* %1 to %"class.sh::TType"* (%"class.sh::TIntermFunctionPrototype"*)***
  %65 = load %"class.sh::TType"* (%"class.sh::TIntermFunctionPrototype"*)**, %"class.sh::TType"* (%"class.sh::TIntermFunctionPrototype"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermFunctionPrototype"*)*, %"class.sh::TType"* (%"class.sh::TIntermFunctionPrototype"*)** %65, i64 31
  %67 = load %"class.sh::TType"* (%"class.sh::TIntermFunctionPrototype"*)*, %"class.sh::TType"* (%"class.sh::TIntermFunctionPrototype"*)** %66, align 8
  %68 = call dereferenceable(184) %"class.sh::TType"* %67(%"class.sh::TIntermFunctionPrototype"* %1) #7
  %69 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %61, %"class.sh::TType"* dereferenceable(184) %68) #7
  %70 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %69, i64 0, i32 0
  %71 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %72 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %6, align 8
  %73 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %72, i64 0, i32 0
  %74 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  %75 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %35, align 8
  %76 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %75, i64 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %33
  %80 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  %81 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %82 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  br label %84

83:                                               ; preds = %109, %33
  ret void

84:                                               ; preds = %127, %79
  %85 = phi %"class.sh::TFunction"* [ %75, %79 ], [ %128, %127 ]
  %86 = phi i64 [ 0, %79 ], [ %125, %127 ]
  %87 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %85, i64 0, i32 3
  %88 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %87, align 8
  %89 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %88, i64 %86
  %90 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %89, align 8
  %91 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %6, align 8
  %92 = load i32, i32* %8, align 8
  %93 = load i64, i64* %12, align 8
  %94 = load i64, i64* %14, align 8
  %95 = sub i64 %93, %94
  %96 = lshr exact i64 %95, 3
  %97 = trunc i64 %96 to i32
  %98 = add i32 %92, %97
  %99 = load i32, i32* %21, align 4
  %100 = load i32, i32* %23, align 4
  call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %91, i32 %99, i32 %100) #7
  %101 = icmp sgt i32 %98, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %84
  %103 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %91, i64 0, i32 0
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i32 [ 0, %102 ], [ %107, %104 ]
  %106 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %103, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %107 = add nuw nsw i32 %105, 1
  %108 = icmp eq i32 %107, %98
  br i1 %108, label %109, label %104

109:                                              ; preds = %104, %84
  %110 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %6, align 8
  %111 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %110, i64 0, i32 0
  %112 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %111, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i64 0, i64 0)) #7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #7
  %113 = bitcast %"class.sh::TVariable"* %90 to %"class.sh::TSymbol"*
  %114 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %113) #7
  %115 = extractvalue { i8*, i64 } %114, 0
  store i8* %115, i8** %81, align 8
  %116 = extractvalue { i8*, i64 } %114, 1
  store i64 %116, i64* %82, align 8
  %117 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"* %110, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5) #7
  %118 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %117, i64 0, i32 0
  %119 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %120 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %90, i64 0, i32 1
  %121 = load %"class.sh::TType"*, %"class.sh::TType"** %120, align 8
  %122 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %117, %"class.sh::TType"* dereferenceable(184) %121) #7
  %123 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %122, i64 0, i32 0
  %124 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %123, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #7
  %125 = add nuw i64 %86, 1
  %126 = icmp eq i64 %125, %77
  br i1 %126, label %83, label %127

127:                                              ; preds = %109
  %128 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %35, align 8
  br label %84
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermFunctionDefinition"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermFunctionDefinition", %"class.sh::TIntermFunctionDefinition"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermFunctionDefinition", %"class.sh::TIntermFunctionDefinition"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.96, i64 0, i64 0)) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sh::ImmutableString", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.sh::ImmutableString", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.sh::ImmutableString", align 8
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %11 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %16 = bitcast %"class.sh::TIntermNode"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.8"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = add i32 %13, -1
  %24 = add i32 %23, %22
  %25 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %11, i32 %26, i32 %28) #7
  %29 = icmp sgt i32 %24, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %11, i64 0, i32 0
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i32 [ 0, %30 ], [ %35, %32 ]
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %35 = add nuw nsw i32 %33, 1
  %36 = icmp eq i32 %35, %24
  br i1 %36, label %37, label %32

37:                                               ; preds = %32, %3
  %38 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8
  switch i8 %39, label %169 [
    i8 0, label %40
    i8 1, label %45
    i8 2, label %73
    i8 3, label %101
    i8 -119, label %129
    i8 24, label %133
    i8 25, label %137
    i8 26, label %141
    i8 28, label %145
    i8 27, label %149
    i8 29, label %153
    i8 106, label %157
    i8 107, label %161
    i8 115, label %165
  ]

40:                                               ; preds = %37
  %41 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  tail call void @_ZN2sh13TInfoSinkBase6prefixENS_8SeverityE(%"class.sh::TInfoSinkBase"* %41, i32 1) #7
  %42 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %43 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %42, i64 0, i32 0
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %43, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.97, i64 0, i64 0)) #7
  br label %190

45:                                               ; preds = %37
  %46 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %47 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 5
  %48 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %47, align 8
  %49 = bitcast %"class.sh::TFunction"* %48 to %"class.sh::TSymbol"*
  %50 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %48, i64 0, i32 0, i32 2
  %51 = load i8, i8* %50, align 4
  %52 = icmp eq i8 %51, 2
  %53 = select i1 %52, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93, i64 0, i64 0)
  %54 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %46, i64 0, i32 0
  %55 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %54, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0)) #7
  %56 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %54, i8* %53) #7
  %57 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i64 0, i64 0)) #7
  %58 = bitcast %"class.sh::ImmutableString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #7
  %59 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %49) #7
  %60 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %8, i64 0, i32 0
  %61 = extractvalue { i8*, i64 } %59, 0
  store i8* %61, i8** %60, align 8
  %62 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %8, i64 0, i32 1
  %63 = extractvalue { i8*, i64 } %59, 1
  store i64 %63, i64* %62, align 8
  %64 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"* %46, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %8) #7
  %65 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %64, i64 0, i32 0
  %66 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)) #7
  %67 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #7
  %68 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %48, i64 0, i32 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %9, align 4
  %70 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %64, i32* nonnull dereferenceable(4) %9) #7
  %71 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %70, i64 0, i32 0
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #7
  br label %174

73:                                               ; preds = %37
  %74 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %75 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 5
  %76 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %75, align 8
  %77 = bitcast %"class.sh::TFunction"* %76 to %"class.sh::TSymbol"*
  %78 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %76, i64 0, i32 0, i32 2
  %79 = load i8, i8* %78, align 4
  %80 = icmp eq i8 %79, 2
  %81 = select i1 %80, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93, i64 0, i64 0)
  %82 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %74, i64 0, i32 0
  %83 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %82, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.99, i64 0, i64 0)) #7
  %84 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %82, i8* %81) #7
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i64 0, i64 0)) #7
  %86 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #7
  %87 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %77) #7
  %88 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  %89 = extractvalue { i8*, i64 } %87, 0
  store i8* %89, i8** %88, align 8
  %90 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 1
  %91 = extractvalue { i8*, i64 } %87, 1
  store i64 %91, i64* %90, align 8
  %92 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"* %74, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %6) #7
  %93 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %92, i64 0, i32 0
  %94 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)) #7
  %95 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #7
  %96 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %76, i64 0, i32 0, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %7, align 4
  %98 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %92, i32* nonnull dereferenceable(4) %7) #7
  %99 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %98, i64 0, i32 0
  %100 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #7
  br label %174

101:                                              ; preds = %37
  %102 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %103 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 5
  %104 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %103, align 8
  %105 = bitcast %"class.sh::TFunction"* %104 to %"class.sh::TSymbol"*
  %106 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %104, i64 0, i32 0, i32 2
  %107 = load i8, i8* %106, align 4
  %108 = icmp eq i8 %107, 2
  %109 = select i1 %108, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93, i64 0, i64 0)
  %110 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %102, i64 0, i32 0
  %111 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %110, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i64 0, i64 0)) #7
  %112 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %110, i8* %109) #7
  %113 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %110, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i64 0, i64 0)) #7
  %114 = bitcast %"class.sh::ImmutableString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #7
  %115 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %105) #7
  %116 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 0
  %117 = extractvalue { i8*, i64 } %115, 0
  store i8* %117, i8** %116, align 8
  %118 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 1
  %119 = extractvalue { i8*, i64 } %115, 1
  store i64 %119, i64* %118, align 8
  %120 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"* %102, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %4) #7
  %121 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %120, i64 0, i32 0
  %122 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %121, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)) #7
  %123 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #7
  %124 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %104, i64 0, i32 0, i32 1, i32 0
  %125 = load i32, i32* %124, align 4
  store i32 %125, i32* %5, align 4
  %126 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"* %120, i32* nonnull dereferenceable(4) %5) #7
  %127 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %126, i64 0, i32 0
  %128 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #7
  br label %174

129:                                              ; preds = %37
  %130 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %131 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %130, i64 0, i32 0
  %132 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %131, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i64 0, i64 0)) #7
  br label %174

133:                                              ; preds = %37
  %134 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %135 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %134, i64 0, i32 0
  %136 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %135, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0)) #7
  br label %174

137:                                              ; preds = %37
  %138 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %139 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %138, i64 0, i32 0
  %140 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %139, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i64 0, i64 0)) #7
  br label %174

141:                                              ; preds = %37
  %142 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %143 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %142, i64 0, i32 0
  %144 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %143, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.104, i64 0, i64 0)) #7
  br label %174

145:                                              ; preds = %37
  %146 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %147 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %146, i64 0, i32 0
  %148 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %147, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.105, i64 0, i64 0)) #7
  br label %174

149:                                              ; preds = %37
  %150 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %151 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %150, i64 0, i32 0
  %152 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %151, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.106, i64 0, i64 0)) #7
  br label %174

153:                                              ; preds = %37
  %154 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %155 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %154, i64 0, i32 0
  %156 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %155, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.107, i64 0, i64 0)) #7
  br label %174

157:                                              ; preds = %37
  %158 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %159 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %158, i64 0, i32 0
  %160 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %159, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i64 0, i64 0)) #7
  br label %174

161:                                              ; preds = %37
  %162 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %163 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %162, i64 0, i32 0
  %164 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %163, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.109, i64 0, i64 0)) #7
  br label %174

165:                                              ; preds = %37
  %166 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %167 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %166, i64 0, i32 0
  %168 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %167, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i64 0, i64 0)) #7
  br label %174

169:                                              ; preds = %37
  %170 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %171 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %39) #7
  %172 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %170, i64 0, i32 0
  %173 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %172, i8* %171) #7
  br label %174

174:                                              ; preds = %169, %165, %161, %157, %153, %149, %145, %141, %137, %133, %129, %101, %73, %45
  %175 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %176 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %175, i64 0, i32 0
  %177 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %176, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #7
  %178 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0
  %179 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %180 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %179, align 8
  %181 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %180, i64 31
  %182 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %181, align 8
  %183 = call dereferenceable(184) %"class.sh::TType"* %182(%"class.sh::TIntermExpression"* %178) #7
  %184 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %175, %"class.sh::TType"* dereferenceable(184) %183) #7
  %185 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %184, i64 0, i32 0
  %186 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %187 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %10, align 8
  %188 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %187, i64 0, i32 0
  %189 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %190

190:                                              ; preds = %174, %40
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermBlock"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i64 0, i64 0)) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermGlobalQualifierDeclaration"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermGlobalQualifierDeclaration", %"class.sh::TIntermGlobalQualifierDeclaration"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermGlobalQualifierDeclaration", %"class.sh::TIntermGlobalQualifierDeclaration"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = getelementptr inbounds %"class.sh::TIntermGlobalQualifierDeclaration", %"class.sh::TIntermGlobalQualifierDeclaration"* %2, i64 0, i32 2
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %36 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %35, i64 0, i32 0
  %37 = select i1 %34, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.111, i64 0, i64 0)
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %36, i8* %37) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::(anonymous namespace)::TOutputTraverser"* nocapture readonly, i32, %"class.sh::TIntermDeclaration"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i64 0, i64 0)) #7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermLoop"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermLoop", %"class.sh::TIntermLoop"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermLoop", %"class.sh::TIntermLoop"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %32, i64 0, i32 0
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.114, i64 0, i64 0)) #7
  %35 = getelementptr inbounds %"class.sh::TIntermLoop", %"class.sh::TIntermLoop"* %2, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 2
  br i1 %37, label %38, label %42

38:                                               ; preds = %31
  %39 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %40 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %39, i64 0, i32 0
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i64 0, i64 0)) #7
  br label %42

42:                                               ; preds = %38, %31
  %43 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %44 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %43, i64 0, i32 0
  %45 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %44, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.116, i64 0, i64 0)) #7
  %46 = load i32, i32* %6, align 8
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %6, align 8
  %48 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %49 = load i64, i64* %10, align 8
  %50 = load i64, i64* %12, align 8
  %51 = sub i64 %49, %50
  %52 = lshr exact i64 %51, 3
  %53 = trunc i64 %52 to i32
  %54 = add i32 %46, %53
  %55 = load i32, i32* %19, align 4
  %56 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %48, i32 %55, i32 %56) #7
  %57 = icmp sgt i32 %54, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %48, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i32 [ 0, %58 ], [ %63, %60 ]
  %62 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %63 = add nuw nsw i32 %61, 1
  %64 = icmp eq i32 %63, %54
  br i1 %64, label %65, label %60

65:                                               ; preds = %60, %42
  %66 = getelementptr inbounds %"class.sh::TIntermLoop", %"class.sh::TIntermLoop"* %2, i64 0, i32 3
  %67 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %66, align 8
  %68 = icmp eq %"class.sh::TIntermTyped"* %67, null
  %69 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %70 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %69, i64 0, i32 0
  br i1 %68, label %80, label %71

71:                                               ; preds = %65
  %72 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %70, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i64 0, i64 0)) #7
  %73 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %66, align 8
  %74 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %73, i64 0, i32 0
  %75 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  %76 = bitcast %"class.sh::TIntermTyped"* %73 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %77 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %77, i64 2
  %79 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %78, align 8
  tail call void %79(%"class.sh::TIntermNode"* %74, %"class.sh::TIntermTraverser"* %75) #7
  br label %82

80:                                               ; preds = %65
  %81 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %70, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.118, i64 0, i64 0)) #7
  br label %82

82:                                               ; preds = %80, %71
  %83 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %84 = load i32, i32* %6, align 8
  %85 = load i64, i64* %10, align 8
  %86 = load i64, i64* %12, align 8
  %87 = sub i64 %85, %86
  %88 = lshr exact i64 %87, 3
  %89 = trunc i64 %88 to i32
  %90 = add i32 %84, -1
  %91 = add i32 %90, %89
  %92 = load i32, i32* %19, align 4
  %93 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %83, i32 %92, i32 %93) #7
  %94 = icmp sgt i32 %91, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %83, i64 0, i32 0
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %99 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %100 = add nuw nsw i32 %98, 1
  %101 = icmp eq i32 %100, %91
  br i1 %101, label %102, label %97

102:                                              ; preds = %97, %82
  %103 = getelementptr inbounds %"class.sh::TIntermLoop", %"class.sh::TIntermLoop"* %2, i64 0, i32 5
  %104 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %103, align 8
  %105 = icmp eq %"class.sh::TIntermBlock"* %104, null
  %106 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %107 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %106, i64 0, i32 0
  br i1 %105, label %112, label %108

108:                                              ; preds = %102
  %109 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %107, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i64 0, i64 0)) #7
  %110 = load %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"** %103, align 8
  %111 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %110, %"class.sh::TIntermTraverser"* %111) #7
  br label %114

112:                                              ; preds = %102
  %113 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %107, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.120, i64 0, i64 0)) #7
  br label %114

114:                                              ; preds = %112, %108
  %115 = getelementptr inbounds %"class.sh::TIntermLoop", %"class.sh::TIntermLoop"* %2, i64 0, i32 4
  %116 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %115, align 8
  %117 = icmp eq %"class.sh::TIntermTyped"* %116, null
  br i1 %117, label %149, label %118

118:                                              ; preds = %114
  %119 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %120 = load i32, i32* %6, align 8
  %121 = load i64, i64* %10, align 8
  %122 = load i64, i64* %12, align 8
  %123 = sub i64 %121, %122
  %124 = lshr exact i64 %123, 3
  %125 = trunc i64 %124 to i32
  %126 = add i32 %120, -1
  %127 = add i32 %126, %125
  %128 = load i32, i32* %19, align 4
  %129 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %119, i32 %128, i32 %129) #7
  %130 = icmp sgt i32 %127, 0
  br i1 %130, label %131, label %138

131:                                              ; preds = %118
  %132 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %119, i64 0, i32 0
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %135 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %132, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %136 = add nuw nsw i32 %134, 1
  %137 = icmp eq i32 %136, %127
  br i1 %137, label %138, label %133

138:                                              ; preds = %133, %118
  %139 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %140 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %139, i64 0, i32 0
  %141 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %140, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0)) #7
  %142 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %115, align 8
  %143 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %142, i64 0, i32 0
  %144 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  %145 = bitcast %"class.sh::TIntermTyped"* %142 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %146 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %146, i64 2
  %148 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %147, align 8
  tail call void %148(%"class.sh::TIntermNode"* %143, %"class.sh::TIntermTraverser"* %144) #7
  br label %149

149:                                              ; preds = %114, %138
  %150 = load i32, i32* %6, align 8
  %151 = add nsw i32 %150, -1
  store i32 %151, i32* %6, align 8
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_116TOutputTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::(anonymous namespace)::TOutputTraverser"*, i32, %"class.sh::TIntermBranch"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 1
  %5 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0
  %9 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = add i32 %7, -1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %2, i64 0, i32 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  tail call void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"* %5, i32 %20, i32 %22) #7
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ 0, %24 ], [ %29, %26 ]
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #7
  %29 = add nuw nsw i32 %27, 1
  %30 = icmp eq i32 %29, %18
  br i1 %30, label %31, label %26

31:                                               ; preds = %26, %3
  %32 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %2, i64 0, i32 1
  %33 = load i8, i8* %32, align 8
  %34 = add i8 %33, 123
  %35 = icmp ult i8 %34, 4
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = sext i8 %34 to i64
  %38 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZN2sh12_GLOBAL__N_116TOutputTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE, i64 0, i64 %37
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %31, %36
  %41 = phi i8* [ %39, %36 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.126, i64 0, i64 0), %31 ]
  %42 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %43 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %42, i64 0, i32 0
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %43, i8* %41) #7
  %45 = getelementptr inbounds %"class.sh::TIntermBranch", %"class.sh::TIntermBranch"* %2, i64 0, i32 2
  %46 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %45, align 8
  %47 = icmp eq %"class.sh::TIntermTyped"* %46, null
  %48 = load %"class.sh::TInfoSinkBase"*, %"class.sh::TInfoSinkBase"** %4, align 8
  %49 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %48, i64 0, i32 0
  br i1 %47, label %63, label %50

50:                                               ; preds = %40
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %49, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.127, i64 0, i64 0)) #7
  %52 = load i32, i32* %6, align 8
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %6, align 8
  %54 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %45, align 8
  %55 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %54, i64 0, i32 0
  %56 = getelementptr inbounds %"class.sh::(anonymous namespace)::TOutputTraverser", %"class.sh::(anonymous namespace)::TOutputTraverser"* %0, i64 0, i32 0
  %57 = bitcast %"class.sh::TIntermTyped"* %54 to void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)***
  %58 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)**, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %58, i64 2
  %60 = load void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)*, void (%"class.sh::TIntermNode"*, %"class.sh::TIntermTraverser"*)** %59, align 8
  tail call void %60(%"class.sh::TIntermNode"* %55, %"class.sh::TIntermTraverser"* %56) #7
  %61 = load i32, i32* %6, align 8
  %62 = add nsw i32 %61, -1
  store i32 %62, i32* %6, align 8
  br label %65

63:                                               ; preds = %40
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %65

65:                                               ; preds = %63, %50
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #3

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #3

declare dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_15ImmutableStringE(%"class.sh::TInfoSinkBase"*, %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIiEERS0_RKT_(%"class.sh::TInfoSinkBase"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 264, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_ostringstream"* nonnull sret %3)
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %7 = load i32, i32* %1, align 4
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %6, i32 %7) #7
  %9 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %0, i64 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_stringbuf"* %11) #7
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %14 to i64
  %21 = select i1 %15, i8* %17, i8* %10
  %22 = select i1 %15, i64 %19, i64 %20
  %23 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %9, i8* %21, i64 %22) #7
  %24 = load i8, i8* %13, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %2, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  %29 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %32 = inttoptr i64 %29 to i8*
  %33 = getelementptr i8, i8* %32, i64 -24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = bitcast i8* %36 to i64*
  store i64 %31, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #8
  br label %47

47:                                               ; preds = %28, %44
  %48 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %48) #7
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #7
  %49 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %50 = bitcast %"class.std::__1::basic_ios.base"* %49 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %50) #7
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #7
  ret %"class.sh::TInfoSinkBase"* %0
}

declare dereferenceable(4) %"class.sh::TSymbolUniqueId"* @_ZNK2sh13TIntermSymbol8uniqueIdEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #3

declare dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"*, %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #3

declare void @_ZN2sh13TInfoSinkBase8locationEii(%"class.sh::TInfoSinkBase"*, i32, i32) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_ostringstream"* noalias sret) local_unnamed_addr #0 comdat {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_ostringstream"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_stringbuf"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 256, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %0 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = load i8*, i8** %15, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #7
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #7
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %0, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %0, i64 0, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #7
  store i32 16, i32* %35, align 8
  %37 = load i8*, i8** %15, align 8
  %38 = getelementptr i8, i8* %37, i64 -24
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %5, i64 %40
  %42 = tail call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #7
  %43 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %45, align 8, !alias.scope !3
  %46 = bitcast i8* %41 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %46) #7
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %46, %"class.std::__1::locale"* dereferenceable(8) %42) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #7
  %47 = getelementptr inbounds i8, i8* %41, i64 40
  %48 = bitcast i8* %47 to %"class.std::__1::basic_streambuf"**
  %49 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %48, align 8, !noalias !3
  %50 = icmp eq %"class.std::__1::basic_streambuf"* %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %1
  %52 = bitcast %"class.std::__1::basic_streambuf"* %49 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %53 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %52, align 8, !noalias !6
  %54 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %53, i64 2
  %55 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %54, align 8, !noalias !6
  call void %55(%"class.std::__1::basic_streambuf"* nonnull %49, %"class.std::__1::locale"* dereferenceable(8) %42) #7, !noalias !6
  %56 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %3, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %56, align 8, !alias.scope !6, !noalias !3
  %57 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %49, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale"* dereferenceable(8) %57) #7
  %58 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %57, %"class.std::__1::locale"* dereferenceable(8) %42) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #7
  br label %59

59:                                               ; preds = %1, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsEf(%"class.sh::TInfoSinkBase"*, float) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca float, align 4
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 264, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_ostringstream"* nonnull sret %4)
  %7 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  store float 0.000000e+00, float* %3, align 4
  %8 = call float @modff(float %1, float* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  %9 = fcmp oeq float %8, 0.000000e+00
  %10 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  br i1 %9, label %16, label %38

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %15, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 1, i64* %18, align 8
  %19 = load i8*, i8** %10, align 8
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %6, i64 %22
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = or i32 %26, 1024
  store i32 %27, i32* %25, align 8
  %28 = load i8*, i8** %10, align 8
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %6, i64 %31
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -261
  %37 = or i32 %36, 4
  store i32 %37, i32* %34, align 8
  br label %59

38:                                               ; preds = %2
  %39 = getelementptr inbounds i8, i8* %15, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, -5
  store i32 %42, i32* %40, align 8
  %43 = load i8*, i8** %10, align 8
  %44 = getelementptr i8, i8* %43, i64 -24
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %6, i64 %46
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, -257
  store i32 %51, i32* %49, align 8
  %52 = load i8*, i8** %10, align 8
  %53 = getelementptr i8, i8* %52, i64 -24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds i8, i8* %6, i64 %55
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to i64*
  store i64 8, i64* %58, align 8
  br label %59

59:                                               ; preds = %38, %16
  %60 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* nonnull %60, float %1) #7
  %62 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %0, i64 0, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #7
  %64 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_stringbuf"* %64) #7
  %65 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %67 to i64
  %74 = select i1 %68, i8* %70, i8* %63
  %75 = select i1 %68, i64 %72, i64 %73
  %76 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %62, i8* %74, i64 %75) #7
  %77 = load i8, i8* %66, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %59
  %80 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %80) #8
  br label %81

81:                                               ; preds = %59, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  %82 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %83 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %82, i64* %83, align 8
  %84 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %85 = inttoptr i64 %82 to i8*
  %86 = getelementptr i8, i8* %85, i64 -24
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds i8, i8* %6, i64 %88
  %90 = bitcast i8* %89 to i64*
  store i64 %84, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %64, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #8
  br label %100

100:                                              ; preds = %81, %97
  %101 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %64, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %101) #7
  %102 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %102, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #7
  %103 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %104 = bitcast %"class.std::__1::basic_ios.base"* %103 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %104) #7
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %6) #7
  ret %"class.sh::TInfoSinkBase"* %0
}

declare float @_ZNK2sh14TConstantUnion9getFConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

declare i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsIjEERS0_RKT_(%"class.sh::TInfoSinkBase"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 264, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__119basic_ostringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_ostringstream"* nonnull sret %3)
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %7 = load i32, i32* %1, align 4
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %6, i32 %7) #7
  %9 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %0, i64 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_stringbuf"* %11) #7
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %14 to i64
  %21 = select i1 %15, i8* %17, i8* %10
  %22 = select i1 %15, i64 %19, i64 %20
  %23 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %9, i8* %21, i64 %22) #7
  %24 = load i8, i8* %13, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %2, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  %29 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %32 = inttoptr i64 %29 to i8*
  %33 = getelementptr i8, i8* %32, i64 -24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = bitcast i8* %36 to i64*
  store i64 %31, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #8
  br label %47

47:                                               ; preds = %28, %44
  %48 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %48) #7
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #7
  %49 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %50 = bitcast %"class.std::__1::basic_ios.base"* %49 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %50) #7
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #7
  ret %"class.sh::TInfoSinkBase"* %0
}

declare i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

declare i32 @_ZNK2sh14TConstantUnion25getYuvCscStandardEXTConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

declare void @_ZN2sh13TInfoSinkBase6prefixENS_8SeverityE(%"class.sh::TInfoSinkBase"*, i32) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"*, float) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @modff(float, float* nocapture) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZNK2sh14TIntermSwizzle18writeOffsetsAsXYZWEPNS_13TInfoSinkBaseE(%"class.sh::TIntermSwizzle"*, %"class.sh::TInfoSinkBase"*) local_unnamed_addr #3

declare i8* @_Z17GetOperatorString9TOperator(i8 zeroext) local_unnamed_addr #3

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #3

declare { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
