; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceInstrumentation.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceInstrumentation.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.12", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.26", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.51", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.57", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.118", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.134", %"class.std::__1::unique_ptr.254", i8, %"class.std::__1::unique_ptr.260", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.266", %"class.llvm::SmallVector.272", %"class.llvm::SmallVector.272" }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.0" = type <{ %"class.llvm::SmallVectorImpl.1", %"struct.llvm::SmallVectorStorage.6", [7 x i8] }>
%"class.llvm::SmallVectorImpl.1" = type { %"class.llvm::SmallVectorTemplateBase.2" }
%"class.llvm::SmallVectorTemplateBase.2" = type { %"class.llvm::SmallVectorTemplateCommon.3" }
%"class.llvm::SmallVectorTemplateCommon.3" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.4" }
%"struct.llvm::AlignedCharArrayUnion.4" = type { %"struct.llvm::AlignedCharArray.5" }
%"struct.llvm::AlignedCharArray.5" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.6" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.std::__1::vector.19" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.9" }
%"class.Ice::VariableDeclaration" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.66" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.59" }
%"class.Ice::StringID" = type { i64 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { i64*, i64*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i64* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.113" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.85", %"class.std::__1::vector.92", %"class.std::__1::vector.106", %"class.std::__1::vector.94", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.101" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.94", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { double*, double*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { double* }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { i64*, i64*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.Ice::TimerStack"* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.124"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.Ice::BoundedProducerConsumerQueue.134" = type <{ [128 x %"class.std::__1::unique_ptr.135"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.147", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.147" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.150", i8, [7 x i8] }>
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.153" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.152 }
%union.anon.152 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.278", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID.278" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector.279", %"class.std::__1::unordered_map.285", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.281" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.Ice::sz_allocator.284" }
%"struct.Ice::sz_allocator.284" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.Ice::sz_allocator.295" }
%"struct.Ice::sz_allocator.295" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base.290" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.Ice::sz_allocator.299" }
%"struct.Ice::sz_allocator.299" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.llvm::SmallVector.266" = type { %"class.llvm::SmallVectorImpl.267", %"struct.llvm::SmallVectorStorage.271" }
%"class.llvm::SmallVectorImpl.267" = type { %"class.llvm::SmallVectorTemplateBase.268" }
%"class.llvm::SmallVectorTemplateBase.268" = type { %"class.llvm::SmallVectorTemplateCommon.269" }
%"class.llvm::SmallVectorTemplateCommon.269" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.270" }
%"struct.llvm::AlignedCharArrayUnion.270" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.271" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.270"] }
%"class.llvm::SmallVector.272" = type { %"class.llvm::SmallVectorImpl.273", %"struct.llvm::SmallVectorStorage.277" }
%"class.llvm::SmallVectorImpl.273" = type { %"class.llvm::SmallVectorTemplateBase.274" }
%"class.llvm::SmallVectorTemplateBase.274" = type { %"class.llvm::SmallVectorTemplateCommon.275" }
%"class.llvm::SmallVectorTemplateCommon.275" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.276" }
%"struct.llvm::AlignedCharArrayUnion.276" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.277" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.276"] }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.130, %union.anon.132, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.130 = type { i64 }
%union.anon.132 = type { i64 }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.165", i32, [4 x i8], %"class.std::__1::vector.170", %"class.std::__1::vector.170", %"class.std::__1::vector.170", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.138", %"class.std::__1::vector.212", %"class.Ice::CfgNode"*, %"class.std::__1::vector.218", i32, [4 x i8] }>
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173", %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.Ice::sz_allocator.175" }
%"struct.Ice::sz_allocator.175" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.185", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188", %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.Ice::sz_allocator.190" }
%"struct.Ice::sz_allocator.190" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.197" }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.205" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.199", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202", %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.Ice::sz_allocator.204" }
%"struct.Ice::sz_allocator.204" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.Ice::sz_allocator.208" }
%"struct.Ice::sz_allocator.208" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.214" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.185", i32 }>
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215", %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.Ice::sz_allocator.217" }
%"struct.Ice::sz_allocator.217" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.164", i32, i8, i8, i8, i32, %"class.std::__1::vector.165", %"class.std::__1::vector.165", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.164" = type { i64 }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.243" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.220" }
%"class.std::__1::__hash_table.220" = type <{ %"class.std::__1::unique_ptr.221", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.238", [4 x i8] }>
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223", %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::__hash_node_base.224"** }
%"struct.std::__1::__hash_node_base.224" = type { %"struct.std::__1::__hash_node_base.224"* }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.std::__1::__bucket_list_deallocator.226" }
%"class.std::__1::__bucket_list_deallocator.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.Ice::sz_allocator.229" }
%"struct.Ice::sz_allocator.229" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.224" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.Ice::sz_allocator.233" }
%"struct.Ice::sz_allocator.233" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244", %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.Ice::sz_allocator.246" }
%"struct.Ice::sz_allocator.246" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.Ice::InstAlloca" = type <{ %"class.Ice::InstHighLevel.base", i32, i8, [7 x i8] }>
%"class.Ice::InstArithmetic" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstBr" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"* }
%"class.Ice::InstCall" = type { %"class.Ice::InstHighLevel.base", i8, i8, i8, i8 }
%"class.Ice::InstCast" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstExtractElement" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFcmp" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstIcmp" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstInsertElement" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstIntrinsic" = type { %"class.Ice::InstHighLevel.base", %"struct.Ice::Intrinsics::IntrinsicInfo" }
%"struct.Ice::Intrinsics::IntrinsicInfo" = type { i32 }
%"class.Ice::InstLoad" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstPhi" = type { %"class.Ice::InstHighLevel.base", %"class.std::__1::vector.165" }
%"class.Ice::InstRet" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstSelect" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstStore" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstSwitch" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, i32, i64*, %"class.Ice::CfgNode"** }
%"class.Ice::InstUnreachable" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::LockedPtr" = type { %"class.Ice::VariableDeclarationList"*, %"class.std::__1::mutex"* }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>

$_ZNK3Ice8StringIDINS_22GlobalStringPoolTraitsEE15toStringOrEmptyEv = comdat any

$_ZN3Ice15InstrumentationD2Ev = comdat any

$_ZN3Ice15InstrumentationD0Ev = comdat any

$_ZN3Ice15Instrumentation17instrumentGlobalsERNS_23VariableDeclarationListE = comdat any

$_ZN3Ice15Instrumentation16isInstrumentableEPNS_3CfgE = comdat any

$_ZN3Ice15Instrumentation19instrumentFuncStartERNS_15LoweringContextE = comdat any

$_ZN3Ice15Instrumentation16instrumentAllocaERNS_15LoweringContextEPNS_10InstAllocaE = comdat any

$_ZN3Ice15Instrumentation20instrumentArithmeticERNS_15LoweringContextEPNS_14InstArithmeticE = comdat any

$_ZN3Ice15Instrumentation12instrumentBrERNS_15LoweringContextEPNS_6InstBrE = comdat any

$_ZN3Ice15Instrumentation14instrumentCallERNS_15LoweringContextEPNS_8InstCallE = comdat any

$_ZN3Ice15Instrumentation14instrumentCastERNS_15LoweringContextEPNS_8InstCastE = comdat any

$_ZN3Ice15Instrumentation24instrumentExtractElementERNS_15LoweringContextEPNS_18InstExtractElementE = comdat any

$_ZN3Ice15Instrumentation14instrumentFcmpERNS_15LoweringContextEPNS_8InstFcmpE = comdat any

$_ZN3Ice15Instrumentation14instrumentIcmpERNS_15LoweringContextEPNS_8InstIcmpE = comdat any

$_ZN3Ice15Instrumentation23instrumentInsertElementERNS_15LoweringContextEPNS_17InstInsertElementE = comdat any

$_ZN3Ice15Instrumentation19instrumentIntrinsicERNS_15LoweringContextEPNS_13InstIntrinsicE = comdat any

$_ZN3Ice15Instrumentation14instrumentLoadERNS_15LoweringContextEPNS_8InstLoadE = comdat any

$_ZN3Ice15Instrumentation13instrumentPhiERNS_15LoweringContextEPNS_7InstPhiE = comdat any

$_ZN3Ice15Instrumentation13instrumentRetERNS_15LoweringContextEPNS_7InstRetE = comdat any

$_ZN3Ice15Instrumentation16instrumentSelectERNS_15LoweringContextEPNS_10InstSelectE = comdat any

$_ZN3Ice15Instrumentation15instrumentStoreERNS_15LoweringContextEPNS_9InstStoreE = comdat any

$_ZN3Ice15Instrumentation16instrumentSwitchERNS_15LoweringContextEPNS_10InstSwitchE = comdat any

$_ZN3Ice15Instrumentation21instrumentUnreachableERNS_15LoweringContextEPNS_15InstUnreachableE = comdat any

$_ZN3Ice15Instrumentation15instrumentStartEPNS_3CfgE = comdat any

$_ZN3Ice15Instrumentation19instrumentLocalVarsEPNS_3CfgE = comdat any

$_ZN3Ice15Instrumentation10finishFuncEPNS_3CfgE = comdat any

@.str = private unnamed_addr constant [7 x i8] c"_start\00", align 1
@_ZTVN3Ice15InstrumentationE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::Instrumentation"*)* @_ZN3Ice15InstrumentationD2Ev to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*)* @_ZN3Ice15InstrumentationD0Ev to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::VariableDeclarationList"*)* @_ZN3Ice15Instrumentation17instrumentGlobalsERNS_23VariableDeclarationListE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)* @_ZN3Ice15Instrumentation14instrumentInstERNS_15LoweringContextE to i8*), i8* bitcast (i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)* @_ZN3Ice15Instrumentation16isInstrumentableEPNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)* @_ZN3Ice15Instrumentation19instrumentFuncStartERNS_15LoweringContextE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)* @_ZN3Ice15Instrumentation16instrumentAllocaERNS_15LoweringContextEPNS_10InstAllocaE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)* @_ZN3Ice15Instrumentation20instrumentArithmeticERNS_15LoweringContextEPNS_14InstArithmeticE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)* @_ZN3Ice15Instrumentation12instrumentBrERNS_15LoweringContextEPNS_6InstBrE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)* @_ZN3Ice15Instrumentation14instrumentCallERNS_15LoweringContextEPNS_8InstCallE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)* @_ZN3Ice15Instrumentation14instrumentCastERNS_15LoweringContextEPNS_8InstCastE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)* @_ZN3Ice15Instrumentation24instrumentExtractElementERNS_15LoweringContextEPNS_18InstExtractElementE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)* @_ZN3Ice15Instrumentation14instrumentFcmpERNS_15LoweringContextEPNS_8InstFcmpE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)* @_ZN3Ice15Instrumentation14instrumentIcmpERNS_15LoweringContextEPNS_8InstIcmpE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)* @_ZN3Ice15Instrumentation23instrumentInsertElementERNS_15LoweringContextEPNS_17InstInsertElementE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)* @_ZN3Ice15Instrumentation19instrumentIntrinsicERNS_15LoweringContextEPNS_13InstIntrinsicE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)* @_ZN3Ice15Instrumentation14instrumentLoadERNS_15LoweringContextEPNS_8InstLoadE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)* @_ZN3Ice15Instrumentation13instrumentPhiERNS_15LoweringContextEPNS_7InstPhiE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)* @_ZN3Ice15Instrumentation13instrumentRetERNS_15LoweringContextEPNS_7InstRetE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)* @_ZN3Ice15Instrumentation16instrumentSelectERNS_15LoweringContextEPNS_10InstSelectE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)* @_ZN3Ice15Instrumentation15instrumentStoreERNS_15LoweringContextEPNS_9InstStoreE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)* @_ZN3Ice15Instrumentation16instrumentSwitchERNS_15LoweringContextEPNS_10InstSwitchE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)* @_ZN3Ice15Instrumentation21instrumentUnreachableERNS_15LoweringContextEPNS_15InstUnreachableE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)* @_ZN3Ice15Instrumentation15instrumentStartEPNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)* @_ZN3Ice15Instrumentation19instrumentLocalVarsEPNS_3CfgE to i8*), i8* bitcast (void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)* @_ZN3Ice15Instrumentation10finishFuncEPNS_3CfgE to i8*)] }, align 8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15Instrumentation14instrumentFuncEPNS_3CfgE(%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Ice::LoweringContext", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.Ice::StringID", align 8
  %6 = bitcast %"class.Ice::Instrumentation"* %0 to i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)***
  %7 = load i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)**, i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*, i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)** %7, i64 4
  %9 = load i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*, i1 (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.Ice::Instrumentation"* %0, %"class.Ice::Cfg"* %1) #5
  br i1 %10, label %11, label %91

11:                                               ; preds = %2
  %12 = bitcast %"class.Ice::LoweringContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 64, i1 false) #6
  %13 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 14, i32 0, i32 0
  %14 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %13, align 8
  %15 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %14, align 8
  call void @_ZN3Ice15LoweringContext4initEPNS_7CfgNodeE(%"class.Ice::LoweringContext"* nonnull %3, %"class.Ice::CfgNode"* %15) #5
  %16 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %13, align 8
  %17 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 14, i32 0, i32 1
  %18 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %17, align 8
  %19 = icmp eq %"class.Ice::CfgNode"** %16, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %3, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %3, i64 0, i32 5, i32 0
  %23 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)***
  %24 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %3, i64 0, i32 3
  %25 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %3, i64 0, i32 2
  %26 = bitcast %"class.llvm::ilist_iterator"* %24 to i64*
  %27 = bitcast %"class.llvm::ilist_iterator"* %25 to i64*
  br label %48

28:                                               ; preds = %72, %11
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #6
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.Ice::StringID"* %5 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  %34 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 6, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.Ice::StringID", %"class.Ice::StringID"* %5, i64 0, i32 0
  store i64 %35, i64* %36, align 8
  call void @_ZNK3Ice8StringIDINS_22GlobalStringPoolTraitsEE15toStringOrEmptyEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.Ice::StringID"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  %37 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i64, i64* %31, align 8
  %42 = zext i8 %39 to i64
  %43 = select i1 %40, i64 %41, i64 %42
  %44 = icmp eq i64 %43, 6
  br i1 %44, label %45, label %81

45:                                               ; preds = %28
  %46 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6) #5
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %76, label %81

48:                                               ; preds = %20, %72
  %49 = phi i8 [ 0, %20 ], [ %73, %72 ]
  %50 = phi %"class.Ice::CfgNode"** [ %16, %20 ], [ %74, %72 ]
  %51 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %50, align 8
  call void @_ZN3Ice15LoweringContext4initEPNS_7CfgNodeE(%"class.Ice::LoweringContext"* nonnull %3, %"class.Ice::CfgNode"* %51) #5
  %52 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %21, align 8
  %53 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %22, align 8
  %54 = icmp eq %"class.llvm::ilist_node_impl"* %52, %53
  br i1 %54, label %72, label %55

55:                                               ; preds = %48, %63
  %56 = phi i8 [ %64, %63 ], [ %49, %48 ]
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)*** %23, align 8
  %61 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)** %60, i64 5
  %62 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)** %61, align 8
  call void %62(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* nonnull dereferenceable(64) %3) #5
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi i8 [ %56, %55 ], [ 1, %59 ]
  %65 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)*** %23, align 8
  %66 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)** %65, i64 3
  %67 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*)** %66, align 8
  call void %67(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* nonnull dereferenceable(64) %3) #5
  %68 = load i64, i64* %26, align 8
  store i64 %68, i64* %27, align 8
  call void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* nonnull %3, %"class.llvm::ilist_iterator"* dereferenceable(8) %24) #5
  %69 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %21, align 8
  %70 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %22, align 8
  %71 = icmp eq %"class.llvm::ilist_node_impl"* %69, %70
  br i1 %71, label %72, label %55

72:                                               ; preds = %63, %48
  %73 = phi i8 [ %49, %48 ], [ %64, %63 ]
  %74 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %50, i64 1
  %75 = icmp eq %"class.Ice::CfgNode"** %74, %18
  br i1 %75, label %28, label %48

76:                                               ; preds = %45
  %77 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)***
  %78 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)** %78, i64 23
  %80 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)** %79, align 8
  call void %80(%"class.Ice::Instrumentation"* %0, %"class.Ice::Cfg"* %1) #5
  br label %81

81:                                               ; preds = %28, %76, %45
  %82 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)***
  %83 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)** %83, i64 25
  %85 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*)** %84, align 8
  call void %85(%"class.Ice::Instrumentation"* %0, %"class.Ice::Cfg"* %1) #5
  %86 = load i8, i8* %38, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %81
  %89 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %89) #8
  br label %90

90:                                               ; preds = %81, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #6
  br label %91

91:                                               ; preds = %2, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: optsize
declare void @_ZN3Ice15LoweringContext4initEPNS_7CfgNodeE(%"class.Ice::LoweringContext"*, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK3Ice8StringIDINS_22GlobalStringPoolTraitsEE15toStringOrEmptyEv(%"class.std::__1::basic_string"* noalias sret, %"class.Ice::StringID"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::StringID", %"class.Ice::StringID"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ne i64 %4, 0
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  %8 = and i1 %5, %7
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = inttoptr i64 %4 to %"class.std::__1::basic_string"*
  %11 = inttoptr i64 %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = inttoptr i64 %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #6
  br label %27

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %20, i64 %22) #5
  br label %27

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %26, align 8
  br label %27

27:                                               ; preds = %18, %15, %23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15Instrumentation14instrumentInstERNS_15LoweringContextE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %1, i64 0, i32 2, i32 0
  %4 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %3, align 8
  %5 = icmp eq %"class.llvm::ilist_node_impl"* %4, null
  %6 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %4, i64 -1, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node_base"** %6 to %"class.Ice::Inst"*
  %8 = select i1 %5, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %7
  %9 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %113 [
    i32 1, label %11
    i32 2, label %17
    i32 3, label %23
    i32 4, label %29
    i32 5, label %35
    i32 6, label %41
    i32 7, label %47
    i32 8, label %53
    i32 10, label %59
    i32 9, label %65
    i32 11, label %71
    i32 12, label %77
    i32 13, label %83
    i32 14, label %89
    i32 15, label %95
    i32 16, label %101
    i32 0, label %107
  ]

11:                                               ; preds = %2
  %12 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstAlloca"*
  %13 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)***
  %14 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)** %14, i64 6
  %16 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstAlloca"*)** %15, align 8
  tail call void %16(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstAlloca"* %12) #5
  br label %113

17:                                               ; preds = %2
  %18 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstArithmetic"*
  %19 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)***
  %20 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)** %20, i64 7
  %22 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstArithmetic"*)** %21, align 8
  tail call void %22(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstArithmetic"* %18) #5
  br label %113

23:                                               ; preds = %2
  %24 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstBr"*
  %25 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)***
  %26 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)** %26, i64 8
  %28 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstBr"*)** %27, align 8
  tail call void %28(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstBr"* %24) #5
  br label %113

29:                                               ; preds = %2
  %30 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstCall"*
  %31 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)***
  %32 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)** %32, i64 9
  %34 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCall"*)** %33, align 8
  tail call void %34(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstCall"* %30) #5
  br label %113

35:                                               ; preds = %2
  %36 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstCast"*
  %37 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)***
  %38 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)** %38, i64 10
  %40 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstCast"*)** %39, align 8
  tail call void %40(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstCast"* %36) #5
  br label %113

41:                                               ; preds = %2
  %42 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstExtractElement"*
  %43 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)***
  %44 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)** %44, i64 11
  %46 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstExtractElement"*)** %45, align 8
  tail call void %46(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstExtractElement"* %42) #5
  br label %113

47:                                               ; preds = %2
  %48 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstFcmp"*
  %49 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)***
  %50 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)** %50, i64 12
  %52 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstFcmp"*)** %51, align 8
  tail call void %52(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstFcmp"* %48) #5
  br label %113

53:                                               ; preds = %2
  %54 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstIcmp"*
  %55 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)***
  %56 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)** %56, i64 13
  %58 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIcmp"*)** %57, align 8
  tail call void %58(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstIcmp"* %54) #5
  br label %113

59:                                               ; preds = %2
  %60 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstInsertElement"*
  %61 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)***
  %62 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)** %62, i64 14
  %64 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstInsertElement"*)** %63, align 8
  tail call void %64(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstInsertElement"* %60) #5
  br label %113

65:                                               ; preds = %2
  %66 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstIntrinsic"*
  %67 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)***
  %68 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)** %68, i64 15
  %70 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstIntrinsic"*)** %69, align 8
  tail call void %70(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstIntrinsic"* %66) #5
  br label %113

71:                                               ; preds = %2
  %72 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstLoad"*
  %73 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)***
  %74 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)** %74, i64 16
  %76 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstLoad"*)** %75, align 8
  tail call void %76(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstLoad"* %72) #5
  br label %113

77:                                               ; preds = %2
  %78 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstPhi"*
  %79 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)***
  %80 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)** %80, i64 17
  %82 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstPhi"*)** %81, align 8
  tail call void %82(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstPhi"* %78) #5
  br label %113

83:                                               ; preds = %2
  %84 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstRet"*
  %85 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)***
  %86 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)** %86, i64 18
  %88 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstRet"*)** %87, align 8
  tail call void %88(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstRet"* %84) #5
  br label %113

89:                                               ; preds = %2
  %90 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstSelect"*
  %91 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)***
  %92 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)** %92, i64 19
  %94 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSelect"*)** %93, align 8
  tail call void %94(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstSelect"* %90) #5
  br label %113

95:                                               ; preds = %2
  %96 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstStore"*
  %97 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)***
  %98 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)** %98, i64 20
  %100 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstStore"*)** %99, align 8
  tail call void %100(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstStore"* %96) #5
  br label %113

101:                                              ; preds = %2
  %102 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstSwitch"*
  %103 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)***
  %104 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)** %104, i64 21
  %106 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstSwitch"*)** %105, align 8
  tail call void %106(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstSwitch"* %102) #5
  br label %113

107:                                              ; preds = %2
  %108 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstUnreachable"*
  %109 = bitcast %"class.Ice::Instrumentation"* %0 to void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)***
  %110 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)**, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)** %110, i64 22
  %112 = load void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)*, void (%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"*, %"class.Ice::InstUnreachable"*)** %111, align 8
  tail call void %112(%"class.Ice::Instrumentation"* %0, %"class.Ice::LoweringContext"* dereferenceable(64) %1, %"class.Ice::InstUnreachable"* %108) #5
  br label %113

113:                                              ; preds = %2, %107, %101, %95, %89, %83, %77, %71, %65, %59, %53, %47, %41, %35, %29, %23, %17, %11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15Instrumentation17setHasSeenGlobalsEv(%"class.Ice::Instrumentation"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %0, i64 0, i32 3
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #5
  %3 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %0, i64 0, i32 2
  store i8 1, i8* %3, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #5
  %4 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %0, i64 0, i32 4
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %4) #5
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15Instrumentation10getGlobalsEv(%"class.Ice::LockedPtr"* noalias nocapture sret, %"class.Ice::Instrumentation"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_lock", align 8
  %4 = bitcast %"class.std::__1::unique_lock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %1, i64 0, i32 3
  %8 = bitcast %"class.std::__1::unique_lock"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.std::__1::mutex"* %7, %"class.std::__1::mutex"** %5, align 8
  store i8 1, i8* %6, align 8
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %7) #5
  %9 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2, %13
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %9, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %3) #5
  %14 = load i8, i8* %10, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %13, label %16

16:                                               ; preds = %13, %2
  %17 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %1, i64 0, i32 1
  %18 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %18, i64 0, i32 4
  %20 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %18, i64 0, i32 3
  %21 = getelementptr inbounds %"class.Ice::LockedPtr", %"class.Ice::LockedPtr"* %0, i64 0, i32 0
  store %"class.Ice::VariableDeclarationList"* %19, %"class.Ice::VariableDeclarationList"** %21, align 8, !alias.scope !3
  %22 = getelementptr inbounds %"class.Ice::LockedPtr", %"class.Ice::LockedPtr"* %0, i64 0, i32 1
  store %"class.std::__1::mutex"* %20, %"class.std::__1::mutex"** %22, align 8, !alias.scope !3
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %20) #5, !noalias !3
  %23 = load i8, i8* %6, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %5, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %26) #5
  br label %27

27:                                               ; preds = %16, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15InstrumentationD2Ev(%"class.Ice::Instrumentation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3Ice15InstrumentationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %0, i64 0, i32 4
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %3) #5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15InstrumentationD0Ev(%"class.Ice::Instrumentation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3Ice15InstrumentationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::Instrumentation", %"class.Ice::Instrumentation"* %0, i64 0, i32 4
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %3) #5
  %4 = bitcast %"class.Ice::Instrumentation"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation17instrumentGlobalsERNS_23VariableDeclarationListE(%"class.Ice::Instrumentation"*, %"class.Ice::VariableDeclarationList"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3Ice15Instrumentation16isInstrumentableEPNS_3CfgE(%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation19instrumentFuncStartERNS_15LoweringContextE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation16instrumentAllocaERNS_15LoweringContextEPNS_10InstAllocaE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstAlloca"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation20instrumentArithmeticERNS_15LoweringContextEPNS_14InstArithmeticE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstArithmetic"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation12instrumentBrERNS_15LoweringContextEPNS_6InstBrE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstBr"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation14instrumentCallERNS_15LoweringContextEPNS_8InstCallE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstCall"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation14instrumentCastERNS_15LoweringContextEPNS_8InstCastE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstCast"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation24instrumentExtractElementERNS_15LoweringContextEPNS_18InstExtractElementE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstExtractElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation14instrumentFcmpERNS_15LoweringContextEPNS_8InstFcmpE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstFcmp"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation14instrumentIcmpERNS_15LoweringContextEPNS_8InstIcmpE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstIcmp"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation23instrumentInsertElementERNS_15LoweringContextEPNS_17InstInsertElementE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstInsertElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation19instrumentIntrinsicERNS_15LoweringContextEPNS_13InstIntrinsicE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstIntrinsic"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation14instrumentLoadERNS_15LoweringContextEPNS_8InstLoadE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstLoad"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation13instrumentPhiERNS_15LoweringContextEPNS_7InstPhiE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstPhi"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation13instrumentRetERNS_15LoweringContextEPNS_7InstRetE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstRet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation16instrumentSelectERNS_15LoweringContextEPNS_10InstSelectE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstSelect"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation15instrumentStoreERNS_15LoweringContextEPNS_9InstStoreE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstStore"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation16instrumentSwitchERNS_15LoweringContextEPNS_10InstSwitchE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstSwitch"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation21instrumentUnreachableERNS_15LoweringContextEPNS_15InstUnreachableE(%"class.Ice::Instrumentation"*, %"class.Ice::LoweringContext"* dereferenceable(64), %"class.Ice::InstUnreachable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation15instrumentStartEPNS_3CfgE(%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation19instrumentLocalVarsEPNS_3CfgE(%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15Instrumentation10finishFuncEPNS_3CfgE(%"class.Ice::Instrumentation"*, %"class.Ice::Cfg"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"*, %"class.llvm::ilist_iterator"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #3

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize }
attributes #6 = { nounwind }
attributes #7 = { optsize }
attributes #8 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3Ice13GlobalContext10getGlobalsEv: argument 0"}
!5 = distinct !{!5, !"_ZN3Ice13GlobalContext10getGlobalsEv"}
