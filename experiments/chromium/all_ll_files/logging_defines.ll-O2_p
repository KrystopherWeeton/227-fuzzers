; ModuleID = '../../media/cast/logging/logging_defines.cc'
source_filename = "../../media/cast/logging/logging_defines.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::cast::FrameEvent" = type { %"class.media::cast::RtpTimeTicks", %"class.media::cast::FrameId", i32, i32, i32, %"class.base::TimeTicks", i32, i32, %"class.base::TimeDelta", i8, i32, double, double }
%"class.media::cast::RtpTimeTicks" = type { %"class.media::cast::ExpandedValueBase" }
%"class.media::cast::ExpandedValueBase" = type { i64 }
%"class.media::cast::FrameId" = type { %"class.media::cast::ExpandedValueBase.0" }
%"class.media::cast::ExpandedValueBase.0" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.media::cast::PacketEvent" = type { %"class.media::cast::RtpTimeTicks", %"class.media::cast::FrameId", i16, i16, i32, %"class.base::TimeTicks", i32, i32 }

@.str = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"FRAME_CAPTURE_BEGIN\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"FRAME_CAPTURE_END\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"FRAME_ENCODED\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"FRAME_ACK_RECEIVED\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"FRAME_ACK_SENT\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"FRAME_DECODED\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"FRAME_PLAYOUT\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"PACKET_SENT_TO_NETWORK\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"PACKET_RETRANSMITTED\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"PACKET_RTX_REJECTED\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"PACKET_RECEIVED\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@switch.table._ZN5media4cast19CastLoggingToStringENS0_16CastLoggingEventE = private unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)], align 8

@_ZN5media4cast10FrameEventC1Ev = hidden unnamed_addr alias void (%"struct.media::cast::FrameEvent"*), void (%"struct.media::cast::FrameEvent"*)* @_ZN5media4cast10FrameEventC2Ev
@_ZN5media4cast10FrameEventC1ERKS1_ = hidden unnamed_addr alias void (%"struct.media::cast::FrameEvent"*, %"struct.media::cast::FrameEvent"*), void (%"struct.media::cast::FrameEvent"*, %"struct.media::cast::FrameEvent"*)* @_ZN5media4cast10FrameEventC2ERKS1_
@_ZN5media4cast10FrameEventD1Ev = hidden unnamed_addr alias void (%"struct.media::cast::FrameEvent"*), void (%"struct.media::cast::FrameEvent"*)* @_ZN5media4cast10FrameEventD2Ev
@_ZN5media4cast11PacketEventC1Ev = hidden unnamed_addr alias void (%"struct.media::cast::PacketEvent"*), void (%"struct.media::cast::PacketEvent"*)* @_ZN5media4cast11PacketEventC2Ev
@_ZN5media4cast11PacketEventD1Ev = hidden unnamed_addr alias void (%"struct.media::cast::PacketEvent"*), void (%"struct.media::cast::PacketEvent"*)* @_ZN5media4cast11PacketEventD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN5media4cast19CastLoggingToStringENS0_16CastLoggingEventE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 12
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [12 x i8*], [12 x i8*]* @switch.table._ZN5media4cast19CastLoggingToStringENS0_16CastLoggingEventE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media4cast10FrameEventC2Ev(%"struct.media::cast::FrameEvent"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.media::cast::FrameEvent"* %0 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -9223372036854775808>, <2 x i64>* %2, align 8
  %3 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 2
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 4
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 6
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 7
  store i32 2, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 8, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 9
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 10
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.media::cast::FrameEvent", %"struct.media::cast::FrameEvent"* %0, i64 0, i32 11
  %13 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double -1.000000e+00, double -1.000000e+00>, <2 x double>* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media4cast10FrameEventC2ERKS1_(%"struct.media::cast::FrameEvent"* nocapture, %"struct.media::cast::FrameEvent"* nocapture readonly dereferenceable(80)) unnamed_addr #2 align 2 {
  %3 = bitcast %"struct.media::cast::FrameEvent"* %0 to i8*
  %4 = bitcast %"struct.media::cast::FrameEvent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 80, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media4cast10FrameEventD2Ev(%"struct.media::cast::FrameEvent"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media4cast11PacketEventC2Ev(%"struct.media::cast::PacketEvent"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.media::cast::PacketEvent"* %0 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -9223372036854775808>, <2 x i64>* %2, align 8
  %3 = getelementptr inbounds %"struct.media::cast::PacketEvent", %"struct.media::cast::PacketEvent"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.media::cast::PacketEvent", %"struct.media::cast::PacketEvent"* %0, i64 0, i32 7
  %5 = bitcast i16* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false)
  store i32 2, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media4cast11PacketEventD2Ev(%"struct.media::cast::PacketEvent"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
