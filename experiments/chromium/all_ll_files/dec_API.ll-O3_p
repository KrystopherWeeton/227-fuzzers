; ModuleID = '../../third_party/opus/src/silk/dec_API.c'
source_filename = "../../third_party/opus/src/silk/dec_API.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_decoder_state = type { i32, [320 x i32], [16 x i32], [480 x i16], i32, i8, i32, i32, i32, i32, i32, i32, i32, [16 x i16], i32, i8*, i8*, i32, i32, i32, i16, [3 x i32], i32, [3 x i32], %struct._silk_resampler_state_struct, %struct.silk_NLSF_CB_struct*, %struct.SideInfoIndices, %struct.silk_CNG_struct, i32, i32, i32, %struct.silk_PLC_struct }
%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }
%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }
%struct.SideInfoIndices = type { [4 x i8], [4 x i8], [17 x i8], i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.silk_CNG_struct = type { [320 x i32], [16 x i16], [16 x i32], i32, i32, i32 }
%struct.silk_PLC_struct = type { i32, [5 x i16], [16 x i16], i32, i32, i16, i32, i32, i16, [2 x i32], i32, i32, i32 }
%struct.silk_DecControlStruct = type { i32, i32, i32, i32, i32, i32 }
%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.stereo_dec_state = type { [2 x i16], [2 x i16], [2 x i16] }

@.str = private unnamed_addr constant [91 x i8] c"assertion failed: decControl->nChannelsInternal == 1 || decControl->nChannelsInternal == 2\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../third_party/opus/src/silk/dec_API.c\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"assertion failed: 0\00", align 1
@silk_LBRR_flags_iCDF_ptr = external local_unnamed_addr constant [2 x i8*], align 16
@__const.silk_Decode.mult_tab = private unnamed_addr constant [3 x i32] [i32 6, i32 4, i32 3], align 4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @silk_Get_Decoder_Size(i32* nocapture) local_unnamed_addr #0 {
  store i32 8600, i32* %0, align 4
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @silk_InitDecoder(i8*) local_unnamed_addr #2 {
  %2 = bitcast i8* %0 to %struct.silk_decoder_state*
  %3 = tail call i32 @silk_init_decoder(%struct.silk_decoder_state* %2) #5
  %4 = getelementptr inbounds i8, i8* %0, i64 4288
  %5 = bitcast i8* %4 to %struct.silk_decoder_state*
  %6 = tail call i32 @silk_init_decoder(%struct.silk_decoder_state* %5) #5
  %7 = getelementptr inbounds i8, i8* %0, i64 8576
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 12, i1 false)
  %8 = getelementptr inbounds i8, i8* %0, i64 8596
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  ret i32 %6
}

declare i32 @silk_init_decoder(%struct.silk_decoder_state*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @silk_Decode(i8*, %struct.silk_DecControlStruct* nocapture, i32, i32, %struct.ec_ctx*, i16*, i32* nocapture, i32) local_unnamed_addr #2 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [2 x i16*], align 16
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to [2 x i32]*
  %14 = alloca [320 x i16], align 16
  %15 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #5
  store i32 0, i32* %9, align 4
  %16 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #5
  store i32 -1431655766, i32* %10, align 4
  %17 = bitcast [2 x i16*]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #5
  %18 = getelementptr inbounds [2 x i16*], [2 x i16*]* %11, i64 0, i64 0
  %19 = getelementptr inbounds [2 x i16*], [2 x i16*]* %11, i64 0, i64 1
  %20 = bitcast i64* %12 to i8*
  %21 = bitcast [2 x i16*]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  store i64 0, i64* %12, align 8
  %22 = bitcast i8* %0 to [2 x %struct.silk_decoder_state]*
  %23 = bitcast i8* %0 to %struct.silk_decoder_state*
  %24 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %29, label %28

28:                                               ; preds = %8
  tail call void @celt_fatal(i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 107) #6
  unreachable

29:                                               ; preds = %8
  %30 = icmp eq i32 %3, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %29, %31
  %32 = phi i64 [ %34, %31 ], [ 0, %29 ]
  %33 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %32, i32 17
  store i32 0, i32* %33, align 8
  %34 = add nuw nsw i64 %32, 1
  %35 = load i32, i32* %24, align 4
  %36 = sext i32 %35 to i64
  %37 = icmp slt i64 %34, %36
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %29
  %39 = phi i32 [ %25, %29 ], [ %35, %31 ]
  %40 = getelementptr inbounds i8, i8* %0, i64 8592
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %39, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = getelementptr inbounds i8, i8* %0, i64 4288
  %46 = bitcast i8* %45 to %struct.silk_decoder_state*
  %47 = tail call i32 @silk_init_decoder(%struct.silk_decoder_state* %46) #5
  %48 = load i32, i32* %24, align 4
  br label %49

49:                                               ; preds = %44, %38
  %50 = phi i32 [ %48, %44 ], [ %39, %38 ]
  %51 = phi i32 [ %47, %44 ], [ 0, %38 ]
  %52 = icmp eq i32 %50, 1
  br i1 %52, label %53, label %64

53:                                               ; preds = %49
  %54 = load i32, i32* %41, align 8
  %55 = icmp eq i32 %54, 2
  br i1 %55, label %56, label %64

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i8, i8* %0, i64 2316
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = mul nsw i32 %61, 1000
  %63 = icmp eq i32 %58, %62
  br label %64

64:                                               ; preds = %56, %53, %49
  %65 = phi i1 [ false, %53 ], [ false, %49 ], [ %63, %56 ]
  %66 = getelementptr inbounds i8, i8* %0, i64 2400
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  %70 = icmp sgt i32 %50, 0
  %71 = and i1 %69, %70
  br i1 %71, label %72, label %102

72:                                               ; preds = %64
  %73 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 4
  %74 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 3
  %75 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 2
  br label %76

76:                                               ; preds = %72, %92
  %77 = phi i64 [ 0, %72 ], [ %98, %92 ]
  %78 = phi i32 [ %51, %72 ], [ %97, %92 ]
  %79 = load i32, i32* %73, align 4
  switch i32 %79, label %83 [
    i32 0, label %84
    i32 10, label %84
    i32 20, label %80
    i32 40, label %81
    i32 60, label %82
  ]

80:                                               ; preds = %76
  br label %84

81:                                               ; preds = %76
  br label %84

82:                                               ; preds = %76
  br label %84

83:                                               ; preds = %76
  tail call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 146) #6
  unreachable

84:                                               ; preds = %76, %76, %81, %82, %80
  %85 = phi i32 [ 2, %81 ], [ 3, %82 ], [ 1, %80 ], [ 1, %76 ], [ 1, %76 ]
  %86 = phi i32 [ 4, %81 ], [ 4, %82 ], [ 4, %80 ], [ 2, %76 ], [ 2, %76 ]
  %87 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %77, i32 18
  store i32 %85, i32* %87, align 4
  %88 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %77, i32 8
  store i32 %86, i32* %88, align 4
  %89 = load i32, i32* %74, align 4
  %90 = ashr i32 %89, 10
  switch i32 %90, label %91 [
    i32 15, label %92
    i32 11, label %92
    i32 7, label %92
  ]

91:                                               ; preds = %84
  tail call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 152) #6
  unreachable

92:                                               ; preds = %84, %84, %84
  %93 = add nuw nsw i32 %90, 1
  %94 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %77
  %95 = load i32, i32* %75, align 4
  %96 = tail call i32 @silk_decoder_set_fs(%struct.silk_decoder_state* %94, i32 %93, i32 %95) #5
  %97 = add nsw i32 %96, %78
  %98 = add nuw nsw i64 %77, 1
  %99 = load i32, i32* %24, align 4
  %100 = sext i32 %99 to i64
  %101 = icmp slt i64 %98, %100
  br i1 %101, label %76, label %102

102:                                              ; preds = %92, %64
  %103 = phi i32 [ %50, %64 ], [ %99, %92 ]
  %104 = phi i32 [ %51, %64 ], [ %97, %92 ]
  %105 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 2
  br i1 %107, label %108, label %126

108:                                              ; preds = %102
  %109 = icmp eq i32 %103, 2
  br i1 %109, label %110, label %126

110:                                              ; preds = %108
  %111 = getelementptr inbounds i8, i8* %0, i64 8588
  %112 = bitcast i8* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %110
  %116 = load i32, i32* %41, align 8
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %126

118:                                              ; preds = %115, %110
  %119 = getelementptr inbounds i8, i8* %0, i64 8576
  %120 = bitcast i8* %119 to i32*
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds i8, i8* %0, i64 8584
  %122 = bitcast i8* %121 to i32*
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds i8, i8* %0, i64 6736
  %124 = getelementptr inbounds i8, i8* %0, i64 2448
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 304, i1 false)
  %125 = load i32, i32* %105, align 4
  br label %126

126:                                              ; preds = %118, %115, %108, %102
  %127 = phi i32 [ %125, %118 ], [ 2, %115 ], [ 2, %108 ], [ %106, %102 ]
  %128 = getelementptr inbounds i8, i8* %0, i64 8588
  %129 = bitcast i8* %128 to i32*
  store i32 %127, i32* %129, align 4
  %130 = load i32, i32* %24, align 4
  store i32 %130, i32* %41, align 8
  %131 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, -8000
  %134 = icmp ugt i32 %133, 40000
  br i1 %134, label %797, label %135

135:                                              ; preds = %126
  %136 = icmp eq i32 %2, 1
  br i1 %136, label %367, label %137

137:                                              ; preds = %135
  %138 = load i32, i32* %67, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %367

140:                                              ; preds = %137
  %141 = load i32, i32* %24, align 4
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %143, label %265

143:                                              ; preds = %140, %160
  %144 = phi i64 [ %163, %160 ], [ 0, %140 ]
  %145 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %144, i32 18
  %146 = load i32, i32* %145, align 4
  %147 = icmp sgt i32 %146, 0
  %148 = tail call i32 @ec_dec_bit_logp(%struct.ec_ctx* %4, i32 1) #5
  br i1 %147, label %151, label %160

149:                                              ; preds = %160
  %150 = icmp sgt i32 %164, 0
  br i1 %150, label %167, label %265

151:                                              ; preds = %143, %151
  %152 = phi i64 [ %155, %151 ], [ 0, %143 ]
  %153 = phi i32 [ %159, %151 ], [ %148, %143 ]
  %154 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %144, i32 21, i64 %152
  store i32 %153, i32* %154, align 4
  %155 = add nuw nsw i64 %152, 1
  %156 = load i32, i32* %145, align 4
  %157 = sext i32 %156 to i64
  %158 = icmp slt i64 %155, %157
  %159 = tail call i32 @ec_dec_bit_logp(%struct.ec_ctx* %4, i32 1) #5
  br i1 %158, label %151, label %160

160:                                              ; preds = %151, %143
  %161 = phi i32 [ %148, %143 ], [ %159, %151 ]
  %162 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %144, i32 22
  store i32 %161, i32* %162, align 4
  %163 = add nuw nsw i64 %144, 1
  %164 = load i32, i32* %24, align 4
  %165 = sext i32 %164 to i64
  %166 = icmp slt i64 %163, %165
  br i1 %166, label %143, label %149

167:                                              ; preds = %149, %260
  %168 = phi i64 [ %261, %260 ], [ 0, %149 ]
  %169 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %168, i32 23
  %170 = getelementptr inbounds [3 x i32], [3 x i32]* %169, i64 0, i64 0
  %171 = bitcast [3 x i32]* %169 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 12, i1 false)
  %172 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %168, i32 22
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %260, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %168, i32 18
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %180

179:                                              ; preds = %175
  store i32 1, i32* %170, align 8
  br label %260

180:                                              ; preds = %175
  %181 = add nsw i32 %177, -2
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [2 x i8*], [2 x i8*]* @silk_LBRR_flags_iCDF_ptr, i64 0, i64 %182
  %184 = load i8*, i8** %183, align 8
  %185 = tail call i32 @ec_dec_icdf(%struct.ec_ctx* %4, i8* %184, i32 8) #5
  %186 = add nsw i32 %185, 1
  %187 = load i32, i32* %176, align 4
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %189, label %260

189:                                              ; preds = %180
  %190 = sext i32 %187 to i64
  %191 = sext i32 %187 to i64
  %192 = icmp ult i32 %187, 4
  br i1 %192, label %250, label %193

193:                                              ; preds = %189
  %194 = and i64 %191, -4
  %195 = insertelement <2 x i32> undef, i32 %186, i32 0
  %196 = shufflevector <2 x i32> %195, <2 x i32> undef, <2 x i32> zeroinitializer
  %197 = insertelement <2 x i32> undef, i32 %186, i32 0
  %198 = shufflevector <2 x i32> %197, <2 x i32> undef, <2 x i32> zeroinitializer
  %199 = add nsw i64 %194, -4
  %200 = lshr exact i64 %199, 2
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 1
  %203 = icmp eq i64 %199, 0
  br i1 %203, label %234, label %204

204:                                              ; preds = %193
  %205 = sub nuw nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %230, %206 ]
  %208 = phi <2 x i32> [ <i32 0, i32 1>, %204 ], [ %231, %206 ]
  %209 = phi i64 [ %205, %204 ], [ %232, %206 ]
  %210 = add <2 x i32> %208, <i32 2, i32 2>
  %211 = lshr <2 x i32> %196, %208
  %212 = lshr <2 x i32> %198, %210
  %213 = and <2 x i32> %211, <i32 1, i32 1>
  %214 = and <2 x i32> %212, <i32 1, i32 1>
  %215 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %168, i32 23, i64 %207
  %216 = bitcast i32* %215 to <2 x i32>*
  store <2 x i32> %213, <2 x i32>* %216, align 4
  %217 = getelementptr inbounds i32, i32* %215, i64 2
  %218 = bitcast i32* %217 to <2 x i32>*
  store <2 x i32> %214, <2 x i32>* %218, align 4
  %219 = or i64 %207, 4
  %220 = add <2 x i32> %208, <i32 4, i32 4>
  %221 = add <2 x i32> %208, <i32 6, i32 6>
  %222 = lshr <2 x i32> %196, %220
  %223 = lshr <2 x i32> %198, %221
  %224 = and <2 x i32> %222, <i32 1, i32 1>
  %225 = and <2 x i32> %223, <i32 1, i32 1>
  %226 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %168, i32 23, i64 %219
  %227 = bitcast i32* %226 to <2 x i32>*
  store <2 x i32> %224, <2 x i32>* %227, align 4
  %228 = getelementptr inbounds i32, i32* %226, i64 2
  %229 = bitcast i32* %228 to <2 x i32>*
  store <2 x i32> %225, <2 x i32>* %229, align 4
  %230 = add i64 %207, 8
  %231 = add <2 x i32> %208, <i32 8, i32 8>
  %232 = add i64 %209, -2
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %206, !llvm.loop !2

234:                                              ; preds = %206, %193
  %235 = phi i64 [ 0, %193 ], [ %230, %206 ]
  %236 = phi <2 x i32> [ <i32 0, i32 1>, %193 ], [ %231, %206 ]
  %237 = icmp eq i64 %202, 0
  br i1 %237, label %248, label %238

238:                                              ; preds = %234
  %239 = add <2 x i32> %236, <i32 2, i32 2>
  %240 = lshr <2 x i32> %196, %236
  %241 = lshr <2 x i32> %198, %239
  %242 = and <2 x i32> %240, <i32 1, i32 1>
  %243 = and <2 x i32> %241, <i32 1, i32 1>
  %244 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %168, i32 23, i64 %235
  %245 = bitcast i32* %244 to <2 x i32>*
  store <2 x i32> %242, <2 x i32>* %245, align 4
  %246 = getelementptr inbounds i32, i32* %244, i64 2
  %247 = bitcast i32* %246 to <2 x i32>*
  store <2 x i32> %243, <2 x i32>* %247, align 4
  br label %248

248:                                              ; preds = %234, %238
  %249 = icmp eq i64 %194, %191
  br i1 %249, label %260, label %250

250:                                              ; preds = %248, %189
  %251 = phi i64 [ 0, %189 ], [ %194, %248 ]
  br label %252

252:                                              ; preds = %250, %252
  %253 = phi i64 [ %258, %252 ], [ %251, %250 ]
  %254 = trunc i64 %253 to i32
  %255 = lshr i32 %186, %254
  %256 = and i32 %255, 1
  %257 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %168, i32 23, i64 %253
  store i32 %256, i32* %257, align 4
  %258 = add nuw nsw i64 %253, 1
  %259 = icmp slt i64 %258, %190
  br i1 %259, label %252, label %260, !llvm.loop !4

260:                                              ; preds = %252, %248, %180, %167, %179
  %261 = add nuw nsw i64 %168, 1
  %262 = load i32, i32* %24, align 4
  %263 = sext i32 %262 to i64
  %264 = icmp slt i64 %261, %263
  br i1 %264, label %167, label %265

265:                                              ; preds = %260, %140, %149
  %266 = phi i32 [ %164, %149 ], [ %141, %140 ], [ %262, %260 ]
  %267 = icmp eq i32 %2, 0
  br i1 %267, label %268, label %369

268:                                              ; preds = %265
  %269 = getelementptr inbounds i8, i8* %0, i64 2404
  %270 = bitcast i8* %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = icmp sgt i32 %271, 0
  br i1 %272, label %273, label %367

273:                                              ; preds = %268
  %274 = bitcast [320 x i16]* %14 to i8*
  %275 = bitcast i64* %12 to i32*
  %276 = getelementptr inbounds i8, i8* %0, i64 6720
  %277 = bitcast i8* %276 to [3 x i32]*
  %278 = getelementptr inbounds [320 x i16], [320 x i16]* %14, i64 0, i64 0
  br label %279

279:                                              ; preds = %273, %359
  %280 = phi i32 [ %266, %273 ], [ %360, %359 ]
  %281 = phi i32 [ %266, %273 ], [ %361, %359 ]
  %282 = phi i32 [ %266, %273 ], [ %362, %359 ]
  %283 = phi i64 [ 0, %273 ], [ %363, %359 ]
  %284 = icmp sgt i32 %282, 0
  br i1 %284, label %285, label %359

285:                                              ; preds = %279
  %286 = getelementptr inbounds [3 x i32], [3 x i32]* %277, i64 0, i64 %283
  %287 = icmp eq i64 %283, 0
  %288 = add nsw i64 %283, -1
  br i1 %287, label %291, label %289

289:                                              ; preds = %285
  %290 = trunc i64 %283 to i32
  br label %322

291:                                              ; preds = %285, %317
  %292 = phi i32 [ %318, %317 ], [ %280, %285 ]
  %293 = phi i64 [ %319, %317 ], [ 0, %285 ]
  %294 = phi i32 [ %318, %317 ], [ %282, %285 ]
  %295 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %293
  %296 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %293, i32 23, i64 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %317, label %299

299:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %274) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %274, i8 -86, i64 640, i1 false)
  %300 = icmp eq i32 %294, 2
  %301 = icmp eq i64 %293, 0
  %302 = and i1 %301, %300
  br i1 %302, label %303, label %307

303:                                              ; preds = %299
  call void @silk_stereo_decode_pred(%struct.ec_ctx* %4, i32* nonnull %275) #5
  %304 = load i32, i32* %286, align 4
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @silk_stereo_decode_mid_only(%struct.ec_ctx* %4, i32* nonnull %9) #5
  br label %307

307:                                              ; preds = %306, %303, %299
  call void @silk_decode_indices(%struct.silk_decoder_state* %295, %struct.ec_ctx* %4, i32 0, i32 1, i32 0) #5
  %308 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %293, i32 26, i32 5
  %309 = load i8, i8* %308, align 1
  %310 = sext i8 %309 to i32
  %311 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %293, i32 26, i32 6
  %312 = load i8, i8* %311, align 2
  %313 = sext i8 %312 to i32
  %314 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %293, i32 9
  %315 = load i32, i32* %314, align 8
  call void @silk_decode_pulses(%struct.ec_ctx* %4, i16* nonnull %278, i32 %310, i32 %313, i32 %315) #5
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %274) #5
  %316 = load i32, i32* %24, align 4
  br label %317

317:                                              ; preds = %307, %291
  %318 = phi i32 [ %316, %307 ], [ %292, %291 ]
  %319 = add nuw nsw i64 %293, 1
  %320 = sext i32 %318 to i64
  %321 = icmp slt i64 %319, %320
  br i1 %321, label %291, label %359

322:                                              ; preds = %289, %353
  %323 = phi i32 [ %280, %289 ], [ %354, %353 ]
  %324 = phi i32 [ %281, %289 ], [ %355, %353 ]
  %325 = phi i64 [ 0, %289 ], [ %356, %353 ]
  %326 = phi i32 [ %282, %289 ], [ %355, %353 ]
  %327 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %325
  %328 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %325, i32 23, i64 %283
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %353, label %331

331:                                              ; preds = %322
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %274) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %274, i8 -86, i64 640, i1 false)
  %332 = icmp eq i32 %326, 2
  %333 = icmp eq i64 %325, 0
  %334 = and i1 %333, %332
  br i1 %334, label %335, label %339

335:                                              ; preds = %331
  call void @silk_stereo_decode_pred(%struct.ec_ctx* %4, i32* nonnull %275) #5
  %336 = load i32, i32* %286, align 4
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %339

338:                                              ; preds = %335
  call void @silk_stereo_decode_mid_only(%struct.ec_ctx* %4, i32* nonnull %9) #5
  br label %339

339:                                              ; preds = %331, %338, %335
  %340 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %325, i32 23, i64 %288
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  %343 = select i1 %342, i32 0, i32 2
  call void @silk_decode_indices(%struct.silk_decoder_state* %327, %struct.ec_ctx* %4, i32 %290, i32 1, i32 %343) #5
  %344 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %325, i32 26, i32 5
  %345 = load i8, i8* %344, align 1
  %346 = sext i8 %345 to i32
  %347 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %325, i32 26, i32 6
  %348 = load i8, i8* %347, align 2
  %349 = sext i8 %348 to i32
  %350 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %325, i32 9
  %351 = load i32, i32* %350, align 8
  call void @silk_decode_pulses(%struct.ec_ctx* %4, i16* nonnull %278, i32 %346, i32 %349, i32 %351) #5
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %274) #5
  %352 = load i32, i32* %24, align 4
  br label %353

353:                                              ; preds = %322, %339
  %354 = phi i32 [ %323, %322 ], [ %352, %339 ]
  %355 = phi i32 [ %324, %322 ], [ %352, %339 ]
  %356 = add nuw nsw i64 %325, 1
  %357 = sext i32 %355 to i64
  %358 = icmp slt i64 %356, %357
  br i1 %358, label %322, label %359

359:                                              ; preds = %353, %317, %279
  %360 = phi i32 [ %280, %279 ], [ %318, %317 ], [ %354, %353 ]
  %361 = phi i32 [ %281, %279 ], [ %318, %317 ], [ %355, %353 ]
  %362 = phi i32 [ %282, %279 ], [ %318, %317 ], [ %355, %353 ]
  %363 = add nuw nsw i64 %283, 1
  %364 = load i32, i32* %270, align 4
  %365 = sext i32 %364 to i64
  %366 = icmp slt i64 %363, %365
  br i1 %366, label %279, label %367

367:                                              ; preds = %359, %268, %137, %135
  %368 = load i32, i32* %24, align 4
  br label %369

369:                                              ; preds = %367, %265
  %370 = phi i32 [ %368, %367 ], [ %266, %265 ]
  %371 = icmp eq i32 %370, 2
  br i1 %371, label %372, label %412

372:                                              ; preds = %369
  switch i32 %2, label %401 [
    i32 0, label %381
    i32 2, label %373
  ]

373:                                              ; preds = %372
  %374 = getelementptr inbounds i8, i8* %0, i64 2432
  %375 = bitcast i8* %374 to [3 x i32]*
  %376 = load i32, i32* %67, align 8
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds [3 x i32], [3 x i32]* %375, i64 0, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = icmp eq i32 %379, 1
  br i1 %380, label %390, label %401

381:                                              ; preds = %372
  %382 = bitcast i64* %12 to i32*
  call void @silk_stereo_decode_pred(%struct.ec_ctx* %4, i32* nonnull %382) #5
  %383 = getelementptr inbounds i8, i8* %0, i64 6704
  %384 = bitcast i8* %383 to [3 x i32]*
  %385 = load i32, i32* %67, align 8
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [3 x i32], [3 x i32]* %384, i64 0, i64 %386
  %388 = load i32, i32* %387, align 4
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %399, label %400

390:                                              ; preds = %373
  %391 = bitcast i64* %12 to i32*
  call void @silk_stereo_decode_pred(%struct.ec_ctx* %4, i32* nonnull %391) #5
  %392 = getelementptr inbounds i8, i8* %0, i64 6720
  %393 = bitcast i8* %392 to [3 x i32]*
  %394 = load i32, i32* %67, align 8
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [3 x i32], [3 x i32]* %393, i64 0, i64 %395
  %397 = load i32, i32* %396, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %390, %381
  call void @silk_stereo_decode_mid_only(%struct.ec_ctx* %4, i32* nonnull %9) #5
  br label %412

400:                                              ; preds = %381, %390
  store i32 0, i32* %9, align 4
  br label %412

401:                                              ; preds = %372, %373
  %402 = getelementptr inbounds i8, i8* %0, i64 8576
  %403 = bitcast i8* %402 to i16*
  %404 = load i16, i16* %403, align 2
  %405 = sext i16 %404 to i32
  %406 = bitcast i64* %12 to i32*
  store i32 %405, i32* %406, align 8
  %407 = getelementptr inbounds i8, i8* %0, i64 8578
  %408 = bitcast i8* %407 to i16*
  %409 = load i16, i16* %408, align 2
  %410 = sext i16 %409 to i32
  %411 = getelementptr inbounds [2 x i32], [2 x i32]* %13, i64 0, i64 1
  store i32 %410, i32* %411, align 4
  br label %412

412:                                              ; preds = %401, %400, %399, %369
  %413 = load i32, i32* %24, align 4
  %414 = icmp eq i32 %413, 2
  %415 = load i32, i32* %9, align 4
  %416 = icmp eq i32 %415, 0
  %417 = and i1 %414, %416
  br i1 %417, label %418, label %433

418:                                              ; preds = %412
  %419 = getelementptr inbounds i8, i8* %0, i64 8596
  %420 = bitcast i8* %419 to i32*
  %421 = load i32, i32* %420, align 4
  %422 = icmp eq i32 %421, 1
  br i1 %422, label %423, label %433

423:                                              ; preds = %418
  %424 = getelementptr inbounds i8, i8* %0, i64 5572
  %425 = getelementptr inbounds i8, i8* %0, i64 6596
  %426 = bitcast i8* %425 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %424, i8 0, i64 1024, i1 false)
  store i32 100, i32* %426, align 4
  %427 = getelementptr inbounds i8, i8* %0, i64 6600
  store i8 10, i8* %427, align 8
  %428 = getelementptr inbounds i8, i8* %0, i64 8476
  %429 = bitcast i8* %428 to i32*
  store i32 0, i32* %429, align 4
  %430 = getelementptr inbounds i8, i8* %0, i64 6664
  %431 = bitcast i8* %430 to i32*
  store i32 1, i32* %431, align 8
  %432 = load i32, i32* %24, align 4
  br label %433

433:                                              ; preds = %423, %418, %412
  %434 = phi i32 [ %432, %423 ], [ 2, %418 ], [ %413, %412 ]
  %435 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 3
  %436 = load i32, i32* %435, align 4
  %437 = mul nsw i32 %434, %436
  %438 = load i32, i32* %131, align 4
  %439 = load i32, i32* %105, align 4
  %440 = mul nsw i32 %439, %438
  %441 = icmp slt i32 %437, %440
  br i1 %441, label %442, label %446

442:                                              ; preds = %433
  store i16* %5, i16** %18, align 16
  %443 = getelementptr inbounds i8, i8* %0, i64 2328
  %444 = bitcast i8* %443 to i32*
  %445 = load i32, i32* %444, align 8
  br label %456

446:                                              ; preds = %433
  %447 = getelementptr inbounds i8, i8* %0, i64 2328
  %448 = bitcast i8* %447 to i32*
  %449 = load i32, i32* %448, align 8
  %450 = add nsw i32 %449, 2
  %451 = mul nsw i32 %450, %434
  %452 = sext i32 %451 to i64
  %453 = shl nsw i64 %452, 1
  %454 = alloca i16, i64 %452, align 16
  %455 = bitcast i16* %454 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %455, i8 -86, i64 %453, i1 false)
  store i16* %454, i16** %18, align 16
  br label %456

456:                                              ; preds = %446, %442
  %457 = phi i32 [ %449, %446 ], [ %445, %442 ]
  %458 = phi i16* [ %454, %446 ], [ %5, %442 ]
  %459 = sext i32 %457 to i64
  %460 = getelementptr inbounds i16, i16* %458, i64 %459
  %461 = bitcast i16* %458 to i32*
  %462 = getelementptr inbounds i16, i16* %460, i64 2
  store i16* %462, i16** %19, align 8
  %463 = icmp eq i32 %2, 0
  br i1 %463, label %483, label %464

464:                                              ; preds = %456
  %465 = getelementptr inbounds i8, i8* %0, i64 8596
  %466 = bitcast i8* %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %483, label %469

469:                                              ; preds = %464
  %470 = icmp eq i32 %434, 2
  %471 = icmp eq i32 %2, 2
  %472 = and i1 %471, %470
  br i1 %472, label %473, label %483

473:                                              ; preds = %469
  %474 = getelementptr inbounds i8, i8* %0, i64 6720
  %475 = bitcast i8* %474 to [3 x i32]*
  %476 = getelementptr inbounds i8, i8* %0, i64 6688
  %477 = bitcast i8* %476 to i32*
  %478 = load i32, i32* %477, align 8
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [3 x i32], [3 x i32]* %475, i64 0, i64 %479
  %481 = load i32, i32* %480, align 4
  %482 = icmp eq i32 %481, 1
  br i1 %482, label %488, label %528

483:                                              ; preds = %456, %469, %464
  %484 = phi i1 [ true, %464 ], [ false, %469 ], [ %416, %456 ]
  %485 = icmp sgt i32 %434, 0
  br i1 %485, label %486, label %609

486:                                              ; preds = %483
  %487 = icmp eq i32 %2, 2
  br i1 %484, label %488, label %528

488:                                              ; preds = %473, %486
  %489 = phi i1 [ true, %473 ], [ %487, %486 ]
  %490 = getelementptr inbounds i8, i8* %0, i64 8596
  %491 = bitcast i8* %490 to i32*
  br label %492

492:                                              ; preds = %488, %513
  %493 = phi i64 [ 0, %488 ], [ %524, %513 ]
  %494 = phi i32 [ %104, %488 ], [ %520, %513 ]
  %495 = icmp eq i64 %493, 0
  %496 = load i32, i32* %67, align 8
  %497 = trunc i64 %493 to i32
  %498 = sub nsw i32 %496, %497
  %499 = icmp slt i32 %498, 1
  br i1 %499, label %513, label %500

500:                                              ; preds = %492
  br i1 %489, label %506, label %501

501:                                              ; preds = %500
  br i1 %495, label %505, label %502

502:                                              ; preds = %501
  %503 = load i32, i32* %491, align 4
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %513

505:                                              ; preds = %502, %501
  br label %513

506:                                              ; preds = %500
  %507 = add nsw i32 %498, -1
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %493, i32 23, i64 %508
  %510 = load i32, i32* %509, align 4
  %511 = icmp eq i32 %510, 0
  %512 = select i1 %511, i32 0, i32 2
  br label %513

513:                                              ; preds = %506, %505, %502, %492
  %514 = phi i32 [ %512, %506 ], [ 2, %505 ], [ 0, %492 ], [ 1, %502 ]
  %515 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %493
  %516 = getelementptr inbounds [2 x i16*], [2 x i16*]* %11, i64 0, i64 %493
  %517 = load i16*, i16** %516, align 8
  %518 = getelementptr inbounds i16, i16* %517, i64 2
  %519 = call i32 @silk_decode_frame(%struct.silk_decoder_state* %515, %struct.ec_ctx* %4, i16* %518, i32* nonnull %10, i32 %2, i32 %514, i32 %7) #5
  %520 = add nsw i32 %519, %494
  %521 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %493, i32 17
  %522 = load i32, i32* %521, align 8
  %523 = add nsw i32 %522, 1
  store i32 %523, i32* %521, align 8
  %524 = add nuw nsw i64 %493, 1
  %525 = load i32, i32* %24, align 4
  %526 = sext i32 %525 to i64
  %527 = icmp slt i64 %524, %526
  br i1 %527, label %492, label %593

528:                                              ; preds = %473, %486
  %529 = phi i1 [ true, %473 ], [ %487, %486 ]
  %530 = getelementptr inbounds i16, i16* %458, i64 2
  br i1 %529, label %531, label %566

531:                                              ; preds = %528, %557
  %532 = phi i64 [ %562, %557 ], [ 0, %528 ]
  %533 = phi i32 [ %558, %557 ], [ %104, %528 ]
  %534 = icmp eq i64 %532, 0
  br i1 %534, label %543, label %535

535:                                              ; preds = %531
  %536 = getelementptr inbounds [2 x i16*], [2 x i16*]* %11, i64 0, i64 %532
  %537 = load i16*, i16** %536, align 8
  %538 = getelementptr inbounds i16, i16* %537, i64 2
  %539 = bitcast i16* %538 to i8*
  %540 = load i32, i32* %10, align 4
  %541 = sext i32 %540 to i64
  %542 = shl nsw i64 %541, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %539, i8 0, i64 %542, i1 false)
  br label %557

543:                                              ; preds = %531
  %544 = load i32, i32* %67, align 8
  %545 = icmp slt i32 %544, 1
  br i1 %545, label %553, label %546

546:                                              ; preds = %543
  %547 = add nsw i32 %544, -1
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 0, i32 23, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = icmp eq i32 %550, 0
  %552 = select i1 %551, i32 0, i32 2
  br label %553

553:                                              ; preds = %546, %543
  %554 = phi i32 [ %552, %546 ], [ 0, %543 ]
  %555 = call i32 @silk_decode_frame(%struct.silk_decoder_state* %23, %struct.ec_ctx* %4, i16* %530, i32* nonnull %10, i32 2, i32 %554, i32 %7) #5
  %556 = add nsw i32 %555, %533
  br label %557

557:                                              ; preds = %553, %535
  %558 = phi i32 [ %556, %553 ], [ %533, %535 ]
  %559 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %532, i32 17
  %560 = load i32, i32* %559, align 8
  %561 = add nsw i32 %560, 1
  store i32 %561, i32* %559, align 8
  %562 = add nuw nsw i64 %532, 1
  %563 = load i32, i32* %24, align 4
  %564 = sext i32 %563 to i64
  %565 = icmp slt i64 %562, %564
  br i1 %565, label %531, label %593

566:                                              ; preds = %528, %584
  %567 = phi i64 [ %589, %584 ], [ 0, %528 ]
  %568 = phi i32 [ %585, %584 ], [ %104, %528 ]
  %569 = icmp eq i64 %567, 0
  br i1 %569, label %570, label %576

570:                                              ; preds = %566
  %571 = load i32, i32* %67, align 8
  %572 = icmp sgt i32 %571, 0
  %573 = select i1 %572, i32 2, i32 0
  %574 = call i32 @silk_decode_frame(%struct.silk_decoder_state* %23, %struct.ec_ctx* %4, i16* %530, i32* nonnull %10, i32 %2, i32 %573, i32 %7) #5
  %575 = add nsw i32 %574, %568
  br label %584

576:                                              ; preds = %566
  %577 = getelementptr inbounds [2 x i16*], [2 x i16*]* %11, i64 0, i64 %567
  %578 = load i16*, i16** %577, align 8
  %579 = getelementptr inbounds i16, i16* %578, i64 2
  %580 = bitcast i16* %579 to i8*
  %581 = load i32, i32* %10, align 4
  %582 = sext i32 %581 to i64
  %583 = shl nsw i64 %582, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %580, i8 0, i64 %583, i1 false)
  br label %584

584:                                              ; preds = %576, %570
  %585 = phi i32 [ %575, %570 ], [ %568, %576 ]
  %586 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %567, i32 17
  %587 = load i32, i32* %586, align 8
  %588 = add nsw i32 %587, 1
  store i32 %588, i32* %586, align 8
  %589 = add nuw nsw i64 %567, 1
  %590 = load i32, i32* %24, align 4
  %591 = sext i32 %590 to i64
  %592 = icmp slt i64 %589, %591
  br i1 %592, label %566, label %593

593:                                              ; preds = %584, %557, %513
  %594 = phi i32 [ %520, %513 ], [ %558, %557 ], [ %585, %584 ]
  %595 = phi i32 [ %525, %513 ], [ %563, %557 ], [ %590, %584 ]
  %596 = load i32, i32* %105, align 4
  %597 = icmp eq i32 %596, 2
  %598 = icmp eq i32 %595, 2
  %599 = and i1 %598, %597
  br i1 %599, label %600, label %609

600:                                              ; preds = %593
  %601 = getelementptr inbounds i8, i8* %0, i64 8576
  %602 = bitcast i8* %601 to %struct.stereo_dec_state*
  %603 = bitcast i64* %12 to i32*
  %604 = getelementptr inbounds i8, i8* %0, i64 2316
  %605 = bitcast i8* %604 to i32*
  %606 = load i32, i32* %605, align 4
  %607 = load i32, i32* %10, align 4
  call void @silk_stereo_MS_to_LR(%struct.stereo_dec_state* %602, i16* %458, i16* %462, i32* nonnull %603, i32 %606, i32 %607) #5
  %608 = load i32, i32* %10, align 4
  br label %619

609:                                              ; preds = %483, %593
  %610 = phi i32 [ %594, %593 ], [ %104, %483 ]
  %611 = getelementptr inbounds i8, i8* %0, i64 8580
  %612 = bitcast i8* %611 to i32*
  %613 = load i32, i32* %612, align 4
  store i32 %613, i32* %461, align 2
  %614 = load i32, i32* %10, align 4
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds i16, i16* %458, i64 %615
  %617 = bitcast i16* %616 to i32*
  %618 = load i32, i32* %617, align 2
  store i32 %618, i32* %612, align 4
  br label %619

619:                                              ; preds = %609, %600
  %620 = phi i32 [ %610, %609 ], [ %594, %600 ]
  %621 = phi i32 [ %614, %609 ], [ %608, %600 ]
  %622 = load i32, i32* %131, align 4
  %623 = mul nsw i32 %622, %621
  %624 = getelementptr inbounds i8, i8* %0, i64 2316
  %625 = bitcast i8* %624 to i32*
  %626 = load i32, i32* %625, align 4
  %627 = shl i32 %626, 16
  %628 = ashr exact i32 %627, 16
  %629 = mul nsw i32 %628, 1000
  %630 = sdiv i32 %623, %629
  store i32 %630, i32* %6, align 4
  %631 = load i32, i32* %105, align 4
  %632 = icmp eq i32 %631, 2
  %633 = sext i32 %630 to i64
  %634 = shl nsw i64 %633, 1
  %635 = select i1 %632, i64 %634, i64 0
  %636 = alloca i8, i64 %635, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %636, i8 -86, i64 %635, i1 false)
  %637 = bitcast i8* %636 to i16*
  %638 = select i1 %632, i16* %637, i16* %5
  %639 = load i32, i32* %24, align 4
  br i1 %441, label %640, label %654

640:                                              ; preds = %619
  %641 = getelementptr inbounds i8, i8* %0, i64 2328
  %642 = bitcast i8* %641 to i32*
  %643 = load i32, i32* %642, align 8
  %644 = add nsw i32 %643, 2
  %645 = mul nsw i32 %644, %639
  %646 = sext i32 %645 to i64
  %647 = shl nsw i64 %646, 1
  %648 = alloca i16, i64 %646, align 16
  %649 = bitcast i16* %648 to i8*
  %650 = bitcast i16* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %649, i8* align 2 %650, i64 %647, i1 false)
  store i16* %648, i16** %18, align 16
  %651 = sext i32 %643 to i64
  %652 = getelementptr inbounds i16, i16* %648, i64 %651
  %653 = getelementptr inbounds i16, i16* %652, i64 2
  store i16* %653, i16** %19, align 8
  br label %654

654:                                              ; preds = %619, %640
  %655 = phi i16* [ %648, %640 ], [ %458, %619 ]
  %656 = icmp slt i32 %631, %639
  %657 = select i1 %656, i32 %631, i32 %639
  %658 = icmp sgt i32 %657, 0
  br i1 %658, label %659, label %698

659:                                              ; preds = %654, %694
  %660 = phi i32 [ %697, %694 ], [ %621, %654 ]
  %661 = phi i16* [ %696, %694 ], [ %655, %654 ]
  %662 = phi i64 [ %688, %694 ], [ 0, %654 ]
  %663 = phi i32 [ %667, %694 ], [ %620, %654 ]
  %664 = getelementptr inbounds %struct.silk_decoder_state, %struct.silk_decoder_state* %23, i64 %662, i32 24
  %665 = getelementptr inbounds i16, i16* %661, i64 1
  %666 = call i32 @silk_resampler(%struct._silk_resampler_state_struct* %664, i16* %638, i16* %665, i32 %660) #5
  %667 = add nsw i32 %666, %663
  %668 = load i32, i32* %105, align 4
  %669 = icmp eq i32 %668, 2
  br i1 %669, label %670, label %686

670:                                              ; preds = %659
  %671 = load i32, i32* %6, align 4
  %672 = icmp sgt i32 %671, 0
  br i1 %672, label %673, label %686

673:                                              ; preds = %670, %673
  %674 = phi i64 [ %680, %673 ], [ 0, %670 ]
  %675 = getelementptr inbounds i16, i16* %638, i64 %674
  %676 = load i16, i16* %675, align 2
  %677 = shl nuw nsw i64 %674, 1
  %678 = add nuw nsw i64 %677, %662
  %679 = getelementptr inbounds i16, i16* %5, i64 %678
  store i16 %676, i16* %679, align 2
  %680 = add nuw nsw i64 %674, 1
  %681 = load i32, i32* %6, align 4
  %682 = sext i32 %681 to i64
  %683 = icmp slt i64 %680, %682
  br i1 %683, label %673, label %684

684:                                              ; preds = %673
  %685 = load i32, i32* %105, align 4
  br label %686

686:                                              ; preds = %684, %670, %659
  %687 = phi i32 [ %685, %684 ], [ 2, %670 ], [ %668, %659 ]
  %688 = add nuw nsw i64 %662, 1
  %689 = load i32, i32* %24, align 4
  %690 = icmp slt i32 %687, %689
  %691 = select i1 %690, i32 %687, i32 %689
  %692 = sext i32 %691 to i64
  %693 = icmp slt i64 %688, %692
  br i1 %693, label %694, label %698

694:                                              ; preds = %686
  %695 = getelementptr inbounds [2 x i16*], [2 x i16*]* %11, i64 0, i64 %688
  %696 = load i16*, i16** %695, align 8
  %697 = load i32, i32* %10, align 4
  br label %659

698:                                              ; preds = %686, %654
  %699 = phi i32 [ %620, %654 ], [ %667, %686 ]
  %700 = phi i32 [ %631, %654 ], [ %687, %686 ]
  %701 = phi i32 [ %639, %654 ], [ %689, %686 ]
  %702 = icmp eq i32 %700, 2
  %703 = icmp eq i32 %701, 1
  %704 = and i1 %702, %703
  br i1 %704, label %705, label %740

705:                                              ; preds = %698
  br i1 %65, label %709, label %706

706:                                              ; preds = %705
  %707 = load i32, i32* %6, align 4
  %708 = icmp sgt i32 %707, 0
  br i1 %708, label %729, label %740

709:                                              ; preds = %705
  %710 = getelementptr inbounds i8, i8* %0, i64 6736
  %711 = bitcast i8* %710 to %struct._silk_resampler_state_struct*
  %712 = getelementptr inbounds i16, i16* %655, i64 1
  %713 = load i32, i32* %10, align 4
  %714 = call i32 @silk_resampler(%struct._silk_resampler_state_struct* %711, i16* %638, i16* %712, i32 %713) #5
  %715 = add nsw i32 %714, %699
  %716 = load i32, i32* %6, align 4
  %717 = icmp sgt i32 %716, 0
  br i1 %717, label %718, label %740

718:                                              ; preds = %709, %718
  %719 = phi i64 [ %725, %718 ], [ 0, %709 ]
  %720 = getelementptr inbounds i16, i16* %638, i64 %719
  %721 = load i16, i16* %720, align 2
  %722 = shl nuw nsw i64 %719, 1
  %723 = or i64 %722, 1
  %724 = getelementptr inbounds i16, i16* %5, i64 %723
  store i16 %721, i16* %724, align 2
  %725 = add nuw nsw i64 %719, 1
  %726 = load i32, i32* %6, align 4
  %727 = sext i32 %726 to i64
  %728 = icmp slt i64 %725, %727
  br i1 %728, label %718, label %740

729:                                              ; preds = %706, %729
  %730 = phi i64 [ %736, %729 ], [ 0, %706 ]
  %731 = shl nuw nsw i64 %730, 1
  %732 = getelementptr inbounds i16, i16* %5, i64 %731
  %733 = load i16, i16* %732, align 2
  %734 = or i64 %731, 1
  %735 = getelementptr inbounds i16, i16* %5, i64 %734
  store i16 %733, i16* %735, align 2
  %736 = add nuw nsw i64 %730, 1
  %737 = load i32, i32* %6, align 4
  %738 = sext i32 %737 to i64
  %739 = icmp slt i64 %736, %738
  br i1 %739, label %729, label %740

740:                                              ; preds = %729, %718, %706, %709, %698
  %741 = phi i32 [ %699, %698 ], [ %715, %709 ], [ %699, %706 ], [ %715, %718 ], [ %699, %729 ]
  %742 = getelementptr inbounds i8, i8* %0, i64 4188
  %743 = bitcast i8* %742 to i32*
  %744 = load i32, i32* %743, align 4
  %745 = icmp eq i32 %744, 2
  br i1 %745, label %746, label %757

746:                                              ; preds = %740
  %747 = getelementptr inbounds i8, i8* %0, i64 2308
  %748 = bitcast i8* %747 to i32*
  %749 = load i32, i32* %748, align 4
  %750 = load i32, i32* %625, align 4
  %751 = add nsw i32 %750, -8
  %752 = ashr i32 %751, 2
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [3 x i32], [3 x i32]* @__const.silk_Decode.mult_tab, i64 0, i64 %753
  %755 = load i32, i32* %754, align 4
  %756 = mul nsw i32 %755, %749
  br label %757

757:                                              ; preds = %740, %746
  %758 = phi i32 [ %756, %746 ], [ 0, %740 ]
  %759 = getelementptr inbounds %struct.silk_DecControlStruct, %struct.silk_DecControlStruct* %1, i64 0, i32 5
  store i32 %758, i32* %759, align 4
  br i1 %136, label %760, label %783

760:                                              ; preds = %757
  %761 = load i32, i32* %41, align 8
  %762 = icmp sgt i32 %761, 0
  br i1 %762, label %763, label %797

763:                                              ; preds = %760
  %764 = sext i32 %761 to i64
  %765 = add nsw i64 %764, -1
  %766 = and i64 %764, 3
  %767 = icmp ult i64 %765, 3
  br i1 %767, label %787, label %768

768:                                              ; preds = %763
  %769 = sub nsw i64 %764, %766
  br label %770

770:                                              ; preds = %770, %768
  %771 = phi i64 [ 0, %768 ], [ %780, %770 ]
  %772 = phi i64 [ %769, %768 ], [ %781, %770 ]
  %773 = getelementptr inbounds [2 x %struct.silk_decoder_state], [2 x %struct.silk_decoder_state]* %22, i64 0, i64 %771, i32 5
  store i8 10, i8* %773, align 8
  %774 = or i64 %771, 1
  %775 = getelementptr inbounds [2 x %struct.silk_decoder_state], [2 x %struct.silk_decoder_state]* %22, i64 0, i64 %774, i32 5
  store i8 10, i8* %775, align 8
  %776 = or i64 %771, 2
  %777 = getelementptr inbounds [2 x %struct.silk_decoder_state], [2 x %struct.silk_decoder_state]* %22, i64 0, i64 %776, i32 5
  store i8 10, i8* %777, align 8
  %778 = or i64 %771, 3
  %779 = getelementptr inbounds [2 x %struct.silk_decoder_state], [2 x %struct.silk_decoder_state]* %22, i64 0, i64 %778, i32 5
  store i8 10, i8* %779, align 8
  %780 = add nuw nsw i64 %771, 4
  %781 = add i64 %772, -4
  %782 = icmp eq i64 %781, 0
  br i1 %782, label %787, label %770

783:                                              ; preds = %757
  %784 = load i32, i32* %9, align 4
  %785 = getelementptr inbounds i8, i8* %0, i64 8596
  %786 = bitcast i8* %785 to i32*
  store i32 %784, i32* %786, align 4
  br label %797

787:                                              ; preds = %770, %763
  %788 = phi i64 [ 0, %763 ], [ %780, %770 ]
  %789 = icmp eq i64 %766, 0
  br i1 %789, label %797, label %790

790:                                              ; preds = %787, %790
  %791 = phi i64 [ %794, %790 ], [ %788, %787 ]
  %792 = phi i64 [ %795, %790 ], [ %766, %787 ]
  %793 = getelementptr inbounds [2 x %struct.silk_decoder_state], [2 x %struct.silk_decoder_state]* %22, i64 0, i64 %791, i32 5
  store i8 10, i8* %793, align 8
  %794 = add nuw nsw i64 %791, 1
  %795 = add i64 %792, -1
  %796 = icmp eq i64 %795, 0
  br i1 %796, label %797, label %790, !llvm.loop !6

797:                                              ; preds = %787, %790, %760, %783, %126
  %798 = phi i32 [ -200, %126 ], [ %741, %783 ], [ %741, %760 ], [ %741, %790 ], [ %741, %787 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #5
  ret i32 %798
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #4

declare i32 @silk_decoder_set_fs(%struct.silk_decoder_state*, i32, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @ec_dec_bit_logp(%struct.ec_ctx*, i32) local_unnamed_addr #3

declare i32 @ec_dec_icdf(%struct.ec_ctx*, i8*, i32) local_unnamed_addr #3

declare void @silk_stereo_decode_pred(%struct.ec_ctx*, i32*) local_unnamed_addr #3

declare void @silk_stereo_decode_mid_only(%struct.ec_ctx*, i32*) local_unnamed_addr #3

declare void @silk_decode_indices(%struct.silk_decoder_state*, %struct.ec_ctx*, i32, i32, i32) local_unnamed_addr #3

declare void @silk_decode_pulses(%struct.ec_ctx*, i16*, i32, i32, i32) local_unnamed_addr #3

declare i32 @silk_decode_frame(%struct.silk_decoder_state*, %struct.ec_ctx*, i16*, i32*, i32, i32, i32) local_unnamed_addr #3

declare void @silk_stereo_MS_to_LR(%struct.stereo_dec_state*, i16*, i16*, i32*, i32, i32) local_unnamed_addr #3

declare i32 @silk_resampler(%struct._silk_resampler_state_struct*, i16*, i16*, i32) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
