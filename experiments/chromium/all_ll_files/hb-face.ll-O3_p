; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-face.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-face.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_face_t = type { %struct.hb_object_header_t, {}*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.150 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.7 }
%struct.hb_atomic_ptr_t.7 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.30, %struct.hb_face_lazy_loader_t.33, %struct.hb_table_lazy_loader_t.37, %struct.hb_face_lazy_loader_t.40, %struct.hb_face_lazy_loader_t.44, %struct.hb_table_lazy_loader_t.48, %struct.hb_face_lazy_loader_t.51, %struct.hb_table_lazy_loader_t.55, %struct.hb_face_lazy_loader_t.58, %struct.hb_face_lazy_loader_t.62, %struct.hb_face_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.70, %struct.hb_table_lazy_loader_t.74, %struct.hb_table_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.80, %struct.hb_face_lazy_loader_t.83, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_face_lazy_loader_t.93, %struct.hb_face_lazy_loader_t.97, %struct.hb_face_lazy_loader_t.101, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_table_lazy_loader_t.111, %struct.hb_table_lazy_loader_t.114, %struct.hb_table_lazy_loader_t.117, %struct.hb_table_lazy_loader_t.120, %struct.hb_table_lazy_loader_t.123, %struct.hb_table_lazy_loader_t.126, %struct.hb_table_lazy_loader_t.129, %struct.hb_table_lazy_loader_t.132, %struct.hb_face_lazy_loader_t.135, %struct.hb_face_lazy_loader_t.139, %struct.hb_face_lazy_loader_t.143, %struct.hb_table_lazy_loader_t.147 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.8 }
%struct.hb_lazy_loader_t.8 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_atomic_ptr_t.9 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type { %"struct.OT::cmap::accelerator_t" }
%"struct.OT::cmap::accelerator_t" = type { %struct.hb_nonnull_ptr_t, %struct.hb_nonnull_ptr_t.28, i1 (i8*, i32, i32*)*, i8*, %"struct.OT::CmapSubtableFormat4::accelerator_t", %struct.hb_blob_ptr_t }
%struct.hb_nonnull_ptr_t = type { %"struct.OT::CmapSubtable"* }
%"struct.OT::CmapSubtable" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.OT::CmapSubtableFormat0" }
%"struct.OT::CmapSubtableFormat0" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", [256 x %"struct.OT::IntType.14"] }
%"struct.OT::IntType.0" = type { %struct.BEInt.1 }
%struct.BEInt.1 = type { [2 x i8] }
%"struct.OT::IntType.14" = type { %struct.BEInt.15 }
%struct.BEInt.15 = type { i8 }
%struct.hb_nonnull_ptr_t.28 = type { %"struct.OT::CmapSubtableFormat14"* }
%"struct.OT::CmapSubtableFormat14" = type { %"struct.OT::IntType.0", %"struct.OT::IntType", %"struct.OT::SortedArrayOf.22" }
%"struct.OT::IntType" = type { %struct.BEInt }
%struct.BEInt = type { [4 x i8] }
%"struct.OT::SortedArrayOf.22" = type { %"struct.OT::ArrayOf.23" }
%"struct.OT::ArrayOf.23" = type { %"struct.OT::IntType", [1 x %"struct.OT::VariationSelectorRecord"] }
%"struct.OT::VariationSelectorRecord" = type { %"struct.OT::IntType.24", %"struct.OT::OffsetTo.26", %"struct.OT::OffsetTo.27" }
%"struct.OT::IntType.24" = type { %struct.BEInt.25 }
%struct.BEInt.25 = type { [3 x i8] }
%"struct.OT::OffsetTo.26" = type { %"struct.OT::Offset" }
%"struct.OT::Offset" = type { %"struct.OT::IntType" }
%"struct.OT::OffsetTo.27" = type { %"struct.OT::Offset" }
%"struct.OT::CmapSubtableFormat4::accelerator_t" = type { %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"*, i32, i32 }
%struct.hb_blob_ptr_t = type { %struct.hb_nonnull_ptr_t.29 }
%struct.hb_nonnull_ptr_t.29 = type { %struct.hb_blob_t* }
%struct.hb_table_lazy_loader_t.30 = type { %struct.hb_lazy_loader_t.31 }
%struct.hb_lazy_loader_t.31 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_face_lazy_loader_t.33 = type { %struct.hb_lazy_loader_t.34 }
%struct.hb_lazy_loader_t.34 = type { %struct.hb_atomic_ptr_t.36 }
%struct.hb_atomic_ptr_t.36 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.37 = type { %struct.hb_lazy_loader_t.38 }
%struct.hb_lazy_loader_t.38 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_face_lazy_loader_t.40 = type { %struct.hb_lazy_loader_t.41 }
%struct.hb_lazy_loader_t.41 = type { %struct.hb_atomic_ptr_t.43 }
%struct.hb_atomic_ptr_t.43 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.44 = type { %struct.hb_lazy_loader_t.45 }
%struct.hb_lazy_loader_t.45 = type { %struct.hb_atomic_ptr_t.47 }
%struct.hb_atomic_ptr_t.47 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.48 = type { %struct.hb_lazy_loader_t.49 }
%struct.hb_lazy_loader_t.49 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_face_lazy_loader_t.51 = type { %struct.hb_lazy_loader_t.52 }
%struct.hb_lazy_loader_t.52 = type { %struct.hb_atomic_ptr_t.54 }
%struct.hb_atomic_ptr_t.54 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.55 = type { %struct.hb_lazy_loader_t.56 }
%struct.hb_lazy_loader_t.56 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_face_lazy_loader_t.58 = type { %struct.hb_lazy_loader_t.59 }
%struct.hb_lazy_loader_t.59 = type { %struct.hb_atomic_ptr_t.61 }
%struct.hb_atomic_ptr_t.61 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.62 = type { %struct.hb_lazy_loader_t.63 }
%struct.hb_lazy_loader_t.63 = type { %struct.hb_atomic_ptr_t.65 }
%struct.hb_atomic_ptr_t.65 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.69 }
%struct.hb_atomic_ptr_t.69 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.70 = type { %struct.hb_lazy_loader_t.71 }
%struct.hb_lazy_loader_t.71 = type { %struct.hb_atomic_ptr_t.73 }
%struct.hb_atomic_ptr_t.73 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.74 = type { %struct.hb_lazy_loader_t.75 }
%struct.hb_lazy_loader_t.75 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.80 = type { %struct.hb_lazy_loader_t.81 }
%struct.hb_lazy_loader_t.81 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_face_lazy_loader_t.83 = type { %struct.hb_lazy_loader_t.84 }
%struct.hb_lazy_loader_t.84 = type { %struct.hb_atomic_ptr_t.86 }
%struct.hb_atomic_ptr_t.86 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_face_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.96 }
%struct.hb_atomic_ptr_t.96 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.97 = type { %struct.hb_lazy_loader_t.98 }
%struct.hb_lazy_loader_t.98 = type { %struct.hb_atomic_ptr_t.100 }
%struct.hb_atomic_ptr_t.100 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.101 = type { %struct.hb_lazy_loader_t.102 }
%struct.hb_lazy_loader_t.102 = type { %struct.hb_atomic_ptr_t.104 }
%struct.hb_atomic_ptr_t.104 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.114 = type { %struct.hb_lazy_loader_t.115 }
%struct.hb_lazy_loader_t.115 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.117 = type { %struct.hb_lazy_loader_t.118 }
%struct.hb_lazy_loader_t.118 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.120 = type { %struct.hb_lazy_loader_t.121 }
%struct.hb_lazy_loader_t.121 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.126 = type { %struct.hb_lazy_loader_t.127 }
%struct.hb_lazy_loader_t.127 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_table_lazy_loader_t.132 = type { %struct.hb_lazy_loader_t.133 }
%struct.hb_lazy_loader_t.133 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_face_lazy_loader_t.135 = type { %struct.hb_lazy_loader_t.136 }
%struct.hb_lazy_loader_t.136 = type { %struct.hb_atomic_ptr_t.138 }
%struct.hb_atomic_ptr_t.138 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.139 = type { %struct.hb_lazy_loader_t.140 }
%struct.hb_lazy_loader_t.140 = type { %struct.hb_atomic_ptr_t.142 }
%struct.hb_atomic_ptr_t.142 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.143 = type { %struct.hb_lazy_loader_t.144 }
%struct.hb_lazy_loader_t.144 = type { %struct.hb_atomic_ptr_t.146 }
%struct.hb_atomic_ptr_t.146 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.147 = type { %struct.hb_lazy_loader_t.148 }
%struct.hb_lazy_loader_t.148 = type { %struct.hb_atomic_ptr_t.9 }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_atomic_ptr_t.150 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.153 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon.151, %struct.anon.152, %"union.hb_font_funcs_t::get_t" }
%struct.anon.151 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.152 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.153 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.154 }
%struct.hb_shaper_lazy_loader_t.154 = type { %struct.hb_lazy_loader_t.155 }
%struct.hb_lazy_loader_t.155 = type { %struct.hb_atomic_ptr_t.157 }
%struct.hb_atomic_ptr_t.157 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.158, %struct.anon.159, %struct.anon.160 }
%struct.anon.158 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.159 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.160 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_complex_shaper_t = type opaque
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.162], [2 x %struct.hb_vector_t.163] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.161 }
%struct.hb_vector_t.161 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.162 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.163 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.164 }
%struct.hb_vector_t.164 = type { i32, i32, i32* }
%struct.hb_sanitize_context_t = type <{ %struct.hb_dispatch_context_t, [4 x i8], i8*, i8*, i32, i32, i8, [3 x i8], i32, %struct.hb_blob_t*, i32, i8, [3 x i8] }>
%struct.hb_dispatch_context_t = type { i32 }
%"struct.OT::OpenTypeFontFile" = type { %union.anon }
%union.anon = type { %"struct.OT::OpenTypeOffsetTable" }
%"struct.OT::OpenTypeOffsetTable" = type { %"struct.OT::Tag", %"struct.OT::SortedArrayOf" }
%"struct.OT::Tag" = type { %"struct.OT::IntType" }
%"struct.OT::SortedArrayOf" = type { %"struct.OT::ArrayOf" }
%"struct.OT::ArrayOf" = type { %"struct.OT::BinSearchHeader", [1 x %"struct.OT::TableRecord"] }
%"struct.OT::BinSearchHeader" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0" }
%"struct.OT::TableRecord" = type { %"struct.OT::Tag", %"struct.OT::CheckSum", %"struct.OT::Offset", %"struct.OT::IntType" }
%"struct.OT::CheckSum" = type { %"struct.OT::IntType" }
%"struct.OT::ResourceForkHeader" = type { %"struct.OT::OffsetTo.4", %"struct.OT::OffsetTo.6", %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::OffsetTo.4" = type { %"struct.OT::Offset.5" }
%"struct.OT::Offset.5" = type { %"struct.OT::IntType" }
%"struct.OT::OffsetTo.6" = type { %"struct.OT::Offset.5" }
%"struct.OT::ArrayOfM1" = type { %"struct.OT::IntType.0", [1 x %"struct.OT::ResourceTypeRecord"] }
%"struct.OT::ResourceTypeRecord" = type { %"struct.OT::Tag", %"struct.OT::IntType.0", %"struct.OT::OffsetTo.172" }
%"struct.OT::OffsetTo.172" = type { %"struct.OT::Offset.170" }
%"struct.OT::Offset.170" = type { %"struct.OT::IntType.0" }
%union.pthread_mutexattr_t = type { i32 }
%struct.hb_face_for_data_closure_t = type { %struct.hb_blob_t*, i32 }
%"struct.OT::TTCHeader" = type { %union.anon.2 }
%union.anon.2 = type { %"struct.OT::TTCHeaderVersion1" }
%"struct.OT::TTCHeaderVersion1" = type { %"struct.OT::Tag", %"struct.OT::FixedVersion", %"struct.OT::ArrayOf.3" }
%"struct.OT::FixedVersion" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0" }
%"struct.OT::ArrayOf.3" = type { %"struct.OT::IntType", [1 x %"struct.OT::OffsetTo"] }
%"struct.OT::OffsetTo" = type { %"struct.OT::Offset" }
%"struct.OT::ResourceRecord" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.177", %"struct.OT::IntType.14", %"struct.OT::OffsetTo.179", %"struct.OT::IntType" }
%"struct.OT::IntType.177" = type { %struct.BEInt.178 }
%struct.BEInt.178 = type { [2 x i8] }
%"struct.OT::OffsetTo.179" = type { %"struct.OT::Offset.180" }
%"struct.OT::Offset.180" = type { %"struct.OT::IntType.24" }
%struct.hb_set_t = type { %struct.hb_object_header_t, i8, i32, %struct.hb_sorted_vector_t.165, %struct.hb_vector_t.167 }
%struct.hb_sorted_vector_t.165 = type { %struct.hb_vector_t.166 }
%struct.hb_vector_t.166 = type { i32, i32, %"struct.hb_set_t::page_map_t"* }
%"struct.hb_set_t::page_map_t" = type { i32, i32 }
%struct.hb_vector_t.167 = type { i32, i32, %"struct.hb_set_t::page_t"* }
%"struct.hb_set_t::page_t" = type { %struct.hb_vector_size_t }
%struct.hb_vector_size_t = type { [8 x i64] }
%struct.hb_serialize_context_t = type { i8*, i8*, i8*, i8*, i32, i32, %struct.hb_pool_t, %"struct.hb_serialize_context_t::object_t"*, %struct.hb_vector_t.261, %struct.hb_hashmap_t }
%struct.hb_pool_t = type { %"struct.hb_serialize_context_t::object_t"*, %struct.hb_vector_t.260 }
%struct.hb_vector_t.260 = type { i32, i32, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** }
%"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t" = type { [16 x %"struct.hb_serialize_context_t::object_t"] }
%"struct.hb_serialize_context_t::object_t" = type { i8*, i8*, %struct.hb_vector_t.259, %"struct.hb_serialize_context_t::object_t"* }
%struct.hb_vector_t.259 = type { i32, i32, %"struct.hb_serialize_context_t::object_t::link_t"* }
%"struct.hb_serialize_context_t::object_t::link_t" = type { i32, i32, i32 }
%struct.hb_vector_t.261 = type { i32, i32, %"struct.hb_serialize_context_t::object_t"** }
%struct.hb_hashmap_t = type { %struct.hb_object_header_t, i8, i32, i32, i32, i32, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* }
%"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t" = type { %"struct.hb_serialize_context_t::object_t"*, i32, i32 }
%"struct.hb_face_builder_data_t::table_entry_t" = type { i32, %struct.hb_blob_t* }
%struct.hb_face_builder_data_t = type { %struct.hb_vector_t.168 }
%struct.hb_vector_t.168 = type { i32, i32, %"struct.hb_face_builder_data_t::table_entry_t"* }
%"struct.OT::CmapSubtableFormat4" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::UnsizedArrayOf" }
%"struct.OT::UnsizedArrayOf" = type { [1 x %"struct.OT::IntType.0"] }
%"struct.OT::CmapSubtableTrimmed" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::ArrayOf.16" }
%"struct.OT::ArrayOf.16" = type { %"struct.OT::IntType.0", [1 x %"struct.OT::HBGlyphID"] }
%"struct.OT::HBGlyphID" = type { %"struct.OT::IntType.0" }
%"struct.OT::CmapSubtableTrimmed.17" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::ArrayOf.18" }
%"struct.OT::ArrayOf.18" = type { %"struct.OT::IntType", [1 x %"struct.OT::HBGlyphID"] }
%"struct.OT::CmapSubtableLongSegmented" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::SortedArrayOf.19" }
%"struct.OT::SortedArrayOf.19" = type { %"struct.OT::ArrayOf.20" }
%"struct.OT::ArrayOf.20" = type { %"struct.OT::IntType", [1 x %"struct.OT::CmapSubtableLongGroup"] }
%"struct.OT::CmapSubtableLongGroup" = type { %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::IntType" }
%"struct.OT::CmapSubtableLongSegmented.21" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::IntType", %"struct.OT::IntType", %"struct.OT::SortedArrayOf.19" }
%"struct.OT::DefaultUVS" = type { %"struct.OT::SortedArrayOf.246" }
%"struct.OT::SortedArrayOf.246" = type { %"struct.OT::ArrayOf.247" }
%"struct.OT::ArrayOf.247" = type { %"struct.OT::IntType", [1 x %"struct.OT::UnicodeValueRange"] }
%"struct.OT::UnicodeValueRange" = type { %"struct.OT::IntType.24", %"struct.OT::IntType.14" }
%"struct.OT::NonDefaultUVS" = type { %"struct.OT::SortedArrayOf.248" }
%"struct.OT::SortedArrayOf.248" = type { %"struct.OT::ArrayOf.249" }
%"struct.OT::ArrayOf.249" = type { %"struct.OT::IntType", [1 x %"struct.OT::UVSMapping"] }
%"struct.OT::UVSMapping" = type { %"struct.OT::IntType.24", %"struct.OT::HBGlyphID" }
%"struct.OT::OffsetTo.169" = type { %"struct.OT::Offset.170" }
%"struct.OT::UnsizedArrayOf.187" = type { [1 x %"struct.OT::ResourceRecord"] }
%"struct.OT::cmap" = type { %"struct.OT::IntType.0", %"struct.OT::SortedArrayOf.329" }
%"struct.OT::SortedArrayOf.329" = type { %"struct.OT::ArrayOf.330" }
%"struct.OT::ArrayOf.330" = type { %"struct.OT::IntType.0", [1 x %"struct.OT::EncodingRecord"] }
%"struct.OT::EncodingRecord" = type { %"struct.OT::IntType.0", %"struct.OT::IntType.0", %"struct.OT::OffsetTo.331" }
%"struct.OT::OffsetTo.331" = type { %"struct.OT::Offset" }
%struct.CustomRange = type { %"struct.OT::IntType.0" }

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT16OpenTypeFontFileEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT16OpenTypeFontFile14get_face_countEv = comdat any

$_ZNK2OT16OpenTypeFontFile8get_faceEjPj = comdat any

$_ZNK2OT12CmapSubtable16collect_unicodesEP8hb_set_tj = comdat any

$_ZNK2OT19CmapSubtableTrimmedINS_7IntTypeIjLj4EEEE16collect_unicodesEP8hb_set_t = comdat any

$_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE16collect_unicodesEP8hb_set_tj = comdat any

$_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat13EE16collect_unicodesEP8hb_set_tj = comdat any

$_ZN8hb_set_t15page_for_insertEj = comdat any

$_ZNK2OT19CmapSubtableFormat413accelerator_t16collect_unicodesEP8hb_set_t = comdat any

$_ZN8hb_set_t9add_rangeEjj = comdat any

$_ZNK2OT23VariationSelectorRecord16collect_unicodesEP8hb_set_tPKv = comdat any

$_ZN22hb_serialize_context_tD2Ev = comdat any

$_ZN22hb_serialize_context_t5resetEv = comdat any

$_ZN22hb_serialize_context_t4finiEv = comdat any

$_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_ = comdat any

$_ZN9hb_pool_tIN22hb_serialize_context_t8object_tELj16EE5allocEv = comdat any

$_ZN2OT19OpenTypeOffsetTable9serializeIN22hb_face_builder_data_t13table_entry_tEEEbP22hb_serialize_context_tj10hb_array_tIT_E = comdat any

$_ZN2OT7ArrayOfINS_11TableRecordENS_15BinSearchHeaderINS_7IntTypeItLj2EEEEEE9serializeEP22hb_serialize_context_tj = comdat any

$_ZN22hb_serialize_context_t8pop_packEb = comdat any

$_ZN22hb_serialize_context_t13resolve_linksEv = comdat any

$_ZNK12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE3getES3_ = comdat any

$_ZNK12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE15bucket_for_hashES3_j = comdat any

$_ZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE13set_with_hashES3_jj = comdat any

$_ZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE6resizeEv = comdat any

$_ZNK2OT16OpenTypeFontFile8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK2OT18ResourceForkHeader8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK2OT7ArrayOfINS_8OffsetToINS_19OpenTypeOffsetTableENS_7IntTypeIjLj4EEELb1EEES4_E8sanitizeIJPKNS_17TTCHeaderVersion1EEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_19OpenTypeOffsetTableENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_9ArrayOfM1INS_18ResourceTypeRecordENS_7IntTypeItLj2EEEEES4_Lb0EE8sanitizeIJPKS5_RPKvEEEbP21hb_sanitize_context_tSB_DpOT_ = comdat any

$_ZNK2OT18ResourceTypeRecord8sanitizeEP21hb_sanitize_context_tPKvS4_ = comdat any

$_ZNK2OT14ResourceRecord8sanitizeEP21hb_sanitize_context_tPKv = comdat any

$_ZN2OT4cmap13accelerator_t4initEP9hb_face_t = comdat any

$_ZNK2OT4cmap18find_best_subtableEPb = comdat any

$_ZN2OT4cmap13accelerator_t21get_glyph_from_symbolINS_12CmapSubtableEEEbPKvjPj = comdat any

$_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_12CmapSubtableEEEbPKvjPj = comdat any

$_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_20CmapSubtableFormat12EEEbPKvjPj = comdat any

$_ZN2OT19CmapSubtableFormat413accelerator_t14get_glyph_funcEPKvjPj = comdat any

$_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cmapEEEP9hb_blob_tS4_ = comdat any

$_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT12CmapSubtable8sanitizeEP21hb_sanitize_context_t = comdat any

$_ZNK2OT7ArrayOfINS_23VariationSelectorRecordENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_20CmapSubtableFormat14EEEEbP21hb_sanitize_context_tDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_10DefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT8OffsetToINS_13NonDefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_ = comdat any

$_ZNK2OT12CmapSubtable9get_glyphEjPj = comdat any

$_ZNK2OT19CmapSubtableFormat49get_glyphEjPj = comdat any

$_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj = comdat any

$_ZNK2OT19CmapSubtableFormat413accelerator_t9get_glyphEjPj = comdat any

@_hb_Null_hb_face_t = hidden global { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 } { %struct.hb_object_header_t zeroinitializer, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* null, i8* null, void (i8*)* null, i32 0, %struct.hb_atomic_int_t { i32 1000 }, %struct.hb_atomic_int_t zeroinitializer, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } } zeroinitializer, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } } zeroinitializer, %struct.hb_atomic_ptr_t.150 zeroinitializer }, align 8
@_hb_NullPool = external hidden constant [48 x i64], align 16
@_hb_CrapPool = external hidden global [48 x i64], align 16
@_hb_Null_OT_CmapSubtableLongGroup = external hidden local_unnamed_addr constant [12 x i8], align 1
@_ZZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE9prime_forEjE9prime_mod = internal unnamed_addr constant [32 x i32] [i32 1, i32 2, i32 3, i32 7, i32 13, i32 31, i32 61, i32 127, i32 251, i32 509, i32 1021, i32 2039, i32 4093, i32 8191, i32 16381, i32 32749, i32 65521, i32 131071, i32 262139, i32 524287, i32 1048573, i32 2097143, i32 4194301, i32 8388593, i32 16777213, i32 33554393, i32 67108859, i32 134217689, i32 268435399, i32 536870909, i32 1073741789, i32 2147483647], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_face_count(%struct.hb_blob_t*) local_unnamed_addr #0 {
  %2 = alloca %struct.hb_sanitize_context_t, align 8
  %3 = icmp eq %struct.hb_blob_t* %0, null
  br i1 %3, label %23, label %4, !prof !2

4:                                                ; preds = %1
  %5 = bitcast %struct.hb_sanitize_context_t* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 8
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %9, align 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 10
  %11 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #11
  store i32 65536, i32* %10, align 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %2, i64 0, i32 11
  store i8 0, i8* %12, align 4
  %13 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* nonnull %0) #11
  %14 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT16OpenTypeFontFileEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %2, %struct.hb_blob_t* %13)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %14, i64 0, i32 1
  %16 = bitcast i8** %15 to %"struct.OT::OpenTypeFontFile"**
  %17 = load %"struct.OT::OpenTypeFontFile"*, %"struct.OT::OpenTypeFontFile"** %16, align 8
  %18 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %14, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, 4
  %21 = select i1 %20, %"struct.OT::OpenTypeFontFile"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OpenTypeFontFile"*), %"struct.OT::OpenTypeFontFile"* %17
  %22 = call i32 @_ZNK2OT16OpenTypeFontFile14get_face_countEv(%"struct.OT::OpenTypeFontFile"* %21)
  call void @hb_blob_destroy(%struct.hb_blob_t* %14) #11
  br label %23

23:                                               ; preds = %1, %4
  %24 = phi i32 [ %22, %4 ], [ 0, %1 ]
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT16OpenTypeFontFileEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #11
  %4 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %3, %struct.hb_blob_t** %4, align 8
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %52, %2
  %13 = phi %struct.hb_blob_t* [ %3, %2 ], [ %58, %52 ]
  %14 = phi i8 [ 0, %2 ], [ 1, %52 ]
  store i8 %14, i8* %5, align 8
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %6, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %13, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %7, align 8
  %21 = icmp ugt i32 %18, 67108862
  br i1 %21, label %28, label %22, !prof !2

22:                                               ; preds = %12
  %23 = shl i32 %18, 6
  %24 = icmp ugt i32 %23, 16384
  %25 = select i1 %24, i32 %23, i32 16384
  %26 = icmp ult i32 %25, 1073741823
  %27 = select i1 %26, i32 %25, i32 1073741823
  br label %28

28:                                               ; preds = %12, %22
  %29 = phi i32 [ %27, %22 ], [ 1073741823, %12 ]
  store i32 %29, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %30 = icmp eq i8* %16, null
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %28
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %13) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %32 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #11
  br label %70

33:                                               ; preds = %28
  %34 = bitcast i8* %16 to %"struct.OT::OpenTypeFontFile"*
  %35 = tail call zeroext i1 @_ZNK2OT16OpenTypeFontFile8sanitizeEP21hb_sanitize_context_t(%"struct.OT::OpenTypeFontFile"* nonnull %34, %struct.hb_sanitize_context_t* %0)
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %35, label %38, label %48

38:                                               ; preds = %33
  br i1 %37, label %39, label %59

39:                                               ; preds = %38
  %40 = bitcast i8* %16 to %"struct.OT::OpenTypeFontFile"*
  store i32 0, i32* %9, align 4
  %41 = tail call zeroext i1 @_ZNK2OT16OpenTypeFontFile8sanitizeEP21hb_sanitize_context_t(%"struct.OT::OpenTypeFontFile"* nonnull %40, %struct.hb_sanitize_context_t* %0)
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %42, 0
  %44 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %44) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %45 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #11
  %46 = xor i1 %41, true
  %47 = or i1 %43, %46
  br i1 %47, label %68, label %62

48:                                               ; preds = %33
  br i1 %37, label %49, label %63

49:                                               ; preds = %48
  %50 = load i8, i8* %5, align 8, !range !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %49
  %53 = tail call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #11
  store i8* %53, i8** %6, align 8
  %54 = load i32, i32* %11, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8* %56, i8** %7, align 8
  %57 = icmp eq i8* %53, null
  %58 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br i1 %57, label %65, label %12

59:                                               ; preds = %38
  %60 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %60) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %61 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #11
  br label %62

62:                                               ; preds = %39, %59
  tail call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #11
  br label %70

63:                                               ; preds = %48, %49
  %64 = load %struct.hb_blob_t*, %struct.hb_blob_t** %4, align 8
  br label %65

65:                                               ; preds = %52, %63
  %66 = phi %struct.hb_blob_t* [ %64, %63 ], [ %58, %52 ]
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %66) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %4, align 8
  %67 = bitcast i8** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #11
  br label %68

68:                                               ; preds = %65, %39
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %1) #11
  %69 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #11
  br label %70

70:                                               ; preds = %68, %62, %31
  %71 = phi %struct.hb_blob_t* [ %1, %31 ], [ %69, %68 ], [ %1, %62 ]
  ret %struct.hb_blob_t* %71
}

declare %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2OT16OpenTypeFontFile14get_face_countEv(%"struct.OT::OpenTypeFontFile"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = shl nuw i32 %4, 24
  %6 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = shl nuw nsw i32 %8, 16
  %10 = or i32 %9, %5
  %11 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 8
  %15 = or i32 %10, %14
  %16 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %15, %18
  switch i32 %19, label %111 [
    i32 1330926671, label %112
    i32 1953658213, label %112
    i32 1954115633, label %112
    i32 65536, label %112
    i32 1953784678, label %20
    i32 256, label %47
  ]

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = bitcast %"struct.OT::IntType.0"* %21 to i16*
  %23 = load i16, i16* %22, align 1
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #11
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %25, -1
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %112

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i64 0
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw i32 %31, 24
  %33 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 16
  %37 = or i32 %36, %32
  %38 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i64 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = or i32 %37, %41
  %43 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = or i32 %42, %45
  br label %112

47:                                               ; preds = %1
  %48 = bitcast %"struct.OT::OpenTypeFontFile"* %0 to %"struct.OT::ResourceForkHeader"*
  %49 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i64
  %52 = shl nuw nsw i64 %51, 24
  %53 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = shl nuw nsw i64 %55, 16
  %57 = or i64 %56, %52
  %58 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = shl nuw nsw i64 %60, 8
  %62 = or i64 %57, %61
  %63 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i64
  %66 = or i64 %62, %65
  %67 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %66
  %68 = getelementptr inbounds i8, i8* %67, i64 24
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 1
  %71 = tail call i16 @llvm.bswap.i16(i16 %70) #11
  %72 = zext i16 %71 to i64
  %73 = getelementptr inbounds i8, i8* %67, i64 %72
  %74 = bitcast i8* %73 to i16*
  %75 = load i16, i16* %74, align 1
  %76 = tail call i16 @llvm.bswap.i16(i16 %75) #11
  %77 = zext i16 %76 to i64
  %78 = bitcast i8* %73 to %"struct.OT::ArrayOfM1"*
  br label %82

79:                                               ; preds = %82
  %80 = add nuw nsw i64 %83, 1
  %81 = icmp eq i64 %83, %77
  br i1 %81, label %112, label %82

82:                                               ; preds = %79, %47
  %83 = phi i64 [ %80, %79 ], [ 0, %47 ]
  %84 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %78, i64 0, i32 1, i64 %83, i32 0, i32 0, i32 0, i32 0, i64 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 %86, 24
  %88 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %78, i64 0, i32 1, i64 %83, i32 0, i32 0, i32 0, i32 0, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 16
  %92 = or i32 %91, %87
  %93 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %78, i64 0, i32 1, i64 %83, i32 0, i32 0, i32 0, i32 0, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %92, %96
  %98 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %78, i64 0, i32 1, i64 %83, i32 0, i32 0, i32 0, i32 0, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = or i32 %97, %100
  %102 = icmp eq i32 %101, 1936092788
  br i1 %102, label %103, label %79

103:                                              ; preds = %82
  %104 = and i64 %83, 4294967295
  %105 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %78, i64 0, i32 1, i64 %104, i32 1
  %106 = bitcast %"struct.OT::IntType.0"* %105 to i16*
  %107 = load i16, i16* %106, align 1
  %108 = tail call i16 @llvm.bswap.i16(i16 %107) #11
  %109 = zext i16 %108 to i32
  %110 = add nuw nsw i32 %109, 1
  br label %112

111:                                              ; preds = %1
  br label %112

112:                                              ; preds = %79, %103, %28, %20, %1, %1, %1, %1, %111
  %113 = phi i32 [ 0, %111 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ %46, %28 ], [ 0, %20 ], [ %110, %103 ], [ 0, %79 ]
  ret i32 %113
}

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_face_t* @hb_face_create_for_tables(%struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* %0, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %3
  %6 = tail call noalias i8* @calloc(i64 1, i64 384) #11
  %7 = bitcast i8* %6 to %struct.hb_face_t*
  %8 = icmp eq i8* %6, null
  br i1 %8, label %28, label %9, !prof !2

9:                                                ; preds = %5
  %10 = bitcast i8* %6 to i32*
  store atomic i32 1, i32* %10 monotonic, align 4
  %11 = getelementptr inbounds i8, i8* %6, i64 4
  %12 = bitcast i8* %11 to i32*
  store atomic i32 1, i32* %12 monotonic, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* %10 monotonic, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)**
  store %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* %0, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)** %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 24
  %19 = bitcast i8* %18 to i8**
  store i8* %1, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %6, i64 32
  %21 = bitcast i8* %20 to void (i8*)**
  store void (i8*)* %2, void (i8*)** %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 48
  %23 = bitcast i8* %22 to i32*
  store atomic i32 -1, i32* %23 monotonic, align 4
  %24 = getelementptr inbounds i8, i8* %6, i64 56
  %25 = bitcast i8* %24 to i8**
  store i8* %6, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %6, i64 72
  %27 = bitcast i8* %26 to %struct.hb_ot_face_t*
  tail call void @_ZN12hb_ot_face_t5init0EP9hb_face_t(%struct.hb_ot_face_t* %27, %struct.hb_face_t* nonnull %7) #11
  br label %31

28:                                               ; preds = %5, %3
  %29 = icmp eq void (i8*)* %2, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call void %2(i8* %1) #11
  br label %31

31:                                               ; preds = %30, %28, %9
  %32 = phi %struct.hb_face_t* [ %7, %9 ], [ bitcast ({ %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 }* @_hb_Null_hb_face_t to %struct.hb_face_t*), %28 ], [ bitcast ({ %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 }* @_hb_Null_hb_face_t to %struct.hb_face_t*), %30 ]
  ret %struct.hb_face_t* %32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.hb_face_t* @hb_face_get_empty() local_unnamed_addr #3 {
  ret %struct.hb_face_t* bitcast ({ %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 }* @_hb_Null_hb_face_t to %struct.hb_face_t*)
}

declare hidden void @_ZN12hb_ot_face_t5init0EP9hb_face_t(%struct.hb_ot_face_t*, %struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t*, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.hb_sanitize_context_t, align 8
  %4 = icmp eq %struct.hb_blob_t* %0, null
  br i1 %4, label %5, label %7, !prof !2

5:                                                ; preds = %2
  %6 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #11
  br label %7

7:                                                ; preds = %5, %2
  %8 = phi %struct.hb_blob_t* [ %6, %5 ], [ %0, %2 ]
  %9 = bitcast %struct.hb_sanitize_context_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 2
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 8
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %13, align 8
  %14 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 10
  %15 = bitcast i8** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 25, i1 false) #11
  store i32 65536, i32* %14, align 8
  %16 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 11
  store i8 0, i8* %16, align 4
  %17 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %8) #11
  %18 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT16OpenTypeFontFileEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %3, %struct.hb_blob_t* %17)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #11
  %19 = call noalias i8* @calloc(i64 1, i64 16) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %28, label %21, !prof !2

21:                                               ; preds = %7
  %22 = bitcast i8* %19 to %struct.hb_blob_t**
  store %struct.hb_blob_t* %18, %struct.hb_blob_t** %22, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %1, i32* %24, align 8
  %25 = call noalias i8* @calloc(i64 1, i64 384) #11
  %26 = bitcast i8* %25 to %struct.hb_face_t*
  %27 = icmp eq i8* %25, null
  br i1 %27, label %48, label %29, !prof !2

28:                                               ; preds = %7
  call void @hb_blob_destroy(%struct.hb_blob_t* %18) #11
  br label %52

29:                                               ; preds = %21
  %30 = bitcast i8* %25 to i32*
  store atomic i32 1, i32* %30 monotonic, align 4
  %31 = getelementptr inbounds i8, i8* %25, i64 4
  %32 = bitcast i8* %31 to i32*
  store atomic i32 1, i32* %32 monotonic, align 4
  %33 = getelementptr inbounds i8, i8* %25, i64 8
  %34 = bitcast i8* %33 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* %30 monotonic, align 4
  %36 = getelementptr inbounds i8, i8* %25, i64 16
  %37 = bitcast i8* %36 to %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)**
  store %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* @_ZL33_hb_face_for_data_reference_tableP9hb_face_tjPv, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)** %37, align 8
  %38 = getelementptr inbounds i8, i8* %25, i64 24
  %39 = bitcast i8* %38 to i8**
  store i8* %19, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %25, i64 32
  %41 = bitcast i8* %40 to void (i8*)**
  store void (i8*)* @_ZL33_hb_face_for_data_closure_destroyPv, void (i8*)** %41, align 8
  %42 = getelementptr inbounds i8, i8* %25, i64 48
  %43 = bitcast i8* %42 to i32*
  store atomic i32 -1, i32* %43 monotonic, align 4
  %44 = getelementptr inbounds i8, i8* %25, i64 56
  %45 = bitcast i8* %44 to i8**
  store i8* %25, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %25, i64 72
  %47 = bitcast i8* %46 to %struct.hb_ot_face_t*
  call void @_ZN12hb_ot_face_t5init0EP9hb_face_t(%struct.hb_ot_face_t* %47, %struct.hb_face_t* nonnull %26) #11
  br label %49

48:                                               ; preds = %21
  call void @hb_blob_destroy(%struct.hb_blob_t* %18) #11
  call void @free(i8* nonnull %19) #11
  br label %49

49:                                               ; preds = %29, %48
  %50 = phi %struct.hb_face_t* [ %26, %29 ], [ bitcast ({ %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 }* @_hb_Null_hb_face_t to %struct.hb_face_t*), %48 ]
  %51 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %50, i64 0, i32 4
  store i32 %1, i32* %51, align 8
  br label %52

52:                                               ; preds = %49, %28
  %53 = phi %struct.hb_face_t* [ bitcast ({ %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 }* @_hb_Null_hb_face_t to %struct.hb_face_t*), %28 ], [ %50, %49 ]
  ret %struct.hb_face_t* %53
}

declare %struct.hb_blob_t* @hb_blob_get_empty() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal %struct.hb_blob_t* @_ZL33_hb_face_for_data_reference_tableP9hb_face_tjPv(%struct.hb_face_t* nocapture readnone, i32, i8* nocapture readonly) #0 {
  %4 = alloca i32, align 4
  %5 = icmp eq i32 %1, 0
  %6 = bitcast i8* %2 to %struct.hb_blob_t**
  %7 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br i1 %5, label %8, label %10

8:                                                ; preds = %3
  %9 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %7) #11
  br label %104

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %7, i64 0, i32 1
  %12 = bitcast i8** %11 to %"struct.OT::OpenTypeFontFile"**
  %13 = load %"struct.OT::OpenTypeFontFile"*, %"struct.OT::OpenTypeFontFile"** %12, align 8
  %14 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %7, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, 4
  %17 = select i1 %16, %"struct.OT::OpenTypeFontFile"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OpenTypeFontFile"*), %"struct.OT::OpenTypeFontFile"* %13
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #11
  store i32 -1431655766, i32* %4, align 4
  %19 = getelementptr inbounds i8, i8* %2, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = call dereferenceable(28) %"struct.OT::OpenTypeOffsetTable"* @_ZNK2OT16OpenTypeFontFile8get_faceEjPj(%"struct.OT::OpenTypeFontFile"* %17, i32 %21, i32* nonnull %4)
  %23 = call i32 @llvm.bswap.i32(i32 %1) #11
  %24 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %22, i64 0, i32 1
  %25 = bitcast %"struct.OT::SortedArrayOf"* %24 to i16*
  %26 = load i16, i16* %25, align 1
  %27 = icmp eq i16 %26, 0
  %28 = call i16 @llvm.bswap.i16(i16 %26) #11
  %29 = zext i16 %28 to i32
  br i1 %27, label %58, label %30

30:                                               ; preds = %10
  %31 = add nsw i32 %29, -1
  br label %32

32:                                               ; preds = %54, %30
  %33 = phi i32 [ %31, %30 ], [ %56, %54 ]
  %34 = phi i32 [ 0, %30 ], [ %55, %54 ]
  %35 = add i32 %34, %33
  %36 = lshr i32 %35, 1
  %37 = zext i32 %36 to i64
  %38 = shl nuw nsw i64 %37, 4
  %39 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %22, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %38
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 1
  %42 = call i32 @llvm.bswap.i32(i32 %41) #11
  %43 = icmp ult i32 %42, %1
  %44 = icmp ne i32 %41, %23
  %45 = sext i1 %44 to i32
  %46 = select i1 %43, i32 1, i32 %45
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %32
  %49 = add nsw i32 %36, -1
  br label %54

50:                                               ; preds = %32
  %51 = icmp eq i32 %46, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = add nuw nsw i32 %36, 1
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi i32 [ %34, %48 ], [ %53, %52 ]
  %56 = phi i32 [ %49, %48 ], [ %33, %52 ]
  %57 = icmp sgt i32 %55, %56
  br i1 %57, label %58, label %32

58:                                               ; preds = %50, %54, %10
  %59 = phi i32 [ 65535, %10 ], [ %36, %50 ], [ 65535, %54 ]
  %60 = icmp ult i32 %59, %29
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %22, i64 0, i32 1, i32 0, i32 1, i64 %61
  %63 = select i1 %60, %"struct.OT::TableRecord"* %62, %"struct.OT::TableRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::TableRecord"*), !prof !4
  %64 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  %65 = load i32, i32* %4, align 4
  %66 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %69
  %75 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = add i32 %83, %65
  %85 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 3, i32 0, i32 0, i64 0
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw i32 %87, 24
  %89 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 3, i32 0, i32 0, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl nuw nsw i32 %91, 16
  %93 = or i32 %92, %88
  %94 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 3, i32 0, i32 0, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 8
  %98 = or i32 %93, %97
  %99 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %63, i64 0, i32 3, i32 0, i32 0, i64 3
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = or i32 %98, %101
  %103 = call %struct.hb_blob_t* @hb_blob_create_sub_blob(%struct.hb_blob_t* %64, i32 %84, i32 %102) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #11
  br label %104

104:                                              ; preds = %58, %8
  %105 = phi %struct.hb_blob_t* [ %9, %8 ], [ %103, %58 ]
  ret %struct.hb_blob_t* %105
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL33_hb_face_for_data_closure_destroyPv(i8* nocapture) #0 {
  %2 = bitcast i8* %0 to %struct.hb_blob_t**
  %3 = load %struct.hb_blob_t*, %struct.hb_blob_t** %2, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #11
  tail call void @free(i8* %0) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.hb_face_t* @hb_face_reference(%struct.hb_face_t* returned) local_unnamed_addr #4 {
  %2 = icmp eq %struct.hb_face_t* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = load atomic i32, i32* %4 monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %3
  %9 = atomicrmw add i32* %4, i32 1 acq_rel
  br label %10

10:                                               ; preds = %1, %3, %8
  ret %struct.hb_face_t* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_face_destroy(%struct.hb_face_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.hb_face_t* %0, null
  br i1 %2, label %55, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = load atomic i32, i32* %4 monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %55, label %8, !prof !2

8:                                                ; preds = %3
  %9 = atomicrmw add i32* %4, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %55

11:                                               ; preds = %8
  store atomic i32 -57005, i32* %4 monotonic, align 4
  %12 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 2
  %13 = bitcast %struct.hb_atomic_ptr_t* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = inttoptr i64 %14 to %struct.hb_user_data_array_t*
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %15, i64 0, i32 1
  %19 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %15, i64 0, i32 0
  tail call void @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_(%struct.hb_lockable_set_t* %18, %struct.hb_mutex_t* dereferenceable(40) %19) #11
  %20 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %15, i64 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %20) #11
  %22 = inttoptr i64 %14 to i8*
  tail call void @free(i8* %22) #11
  br label %23

23:                                               ; preds = %17, %11
  %24 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 9
  %25 = bitcast %struct.hb_atomic_ptr_t.150* %24 to i64*
  %26 = load atomic i64, i64* %25 acquire, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to %"struct.hb_face_t::plan_node_t"*
  br label %42

30:                                               ; preds = %42, %23
  %31 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 7, i32 1, i32 0
  %32 = bitcast %struct.hb_lazy_loader_t* %31 to i64*
  %33 = load atomic i64, i64* %32 acquire, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = inttoptr i64 %33 to %struct.hb_ot_face_data_t*
  tail call void @_hb_ot_shaper_face_data_destroy(%struct.hb_ot_face_data_t* nonnull %36) #11
  br label %37

37:                                               ; preds = %30, %35
  %38 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8
  tail call void @_ZN12hb_ot_face_t4finiEv(%struct.hb_ot_face_t* %38) #11
  %39 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 3
  %40 = load void (i8*)*, void (i8*)** %39, align 8
  %41 = icmp eq void (i8*)* %40, null
  br i1 %41, label %53, label %50

42:                                               ; preds = %28, %42
  %43 = phi %"struct.hb_face_t::plan_node_t"* [ %45, %42 ], [ %29, %28 ]
  %44 = getelementptr inbounds %"struct.hb_face_t::plan_node_t", %"struct.hb_face_t::plan_node_t"* %43, i64 0, i32 1
  %45 = load %"struct.hb_face_t::plan_node_t"*, %"struct.hb_face_t::plan_node_t"** %44, align 8
  %46 = getelementptr inbounds %"struct.hb_face_t::plan_node_t", %"struct.hb_face_t::plan_node_t"* %43, i64 0, i32 0
  %47 = load %struct.hb_shape_plan_t*, %struct.hb_shape_plan_t** %46, align 8
  tail call void @hb_shape_plan_destroy(%struct.hb_shape_plan_t* %47) #11
  %48 = bitcast %"struct.hb_face_t::plan_node_t"* %43 to i8*
  tail call void @free(i8* %48) #11
  %49 = icmp eq %"struct.hb_face_t::plan_node_t"* %45, null
  br i1 %49, label %30, label %42

50:                                               ; preds = %37
  %51 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 2
  %52 = load i8*, i8** %51, align 8
  tail call void %40(i8* %52) #11
  br label %53

53:                                               ; preds = %37, %50
  %54 = bitcast %struct.hb_face_t* %0 to i8*
  tail call void @free(i8* %54) #11
  br label %55

55:                                               ; preds = %1, %8, %3, %53
  ret void
}

declare void @hb_shape_plan_destroy(%struct.hb_shape_plan_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) #5

declare hidden void @_ZN12hb_ot_face_t4finiEv(%struct.hb_ot_face_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_face_set_user_data(%struct.hb_face_t*, %struct.hb_user_data_key_t*, i8*, void (i8*)*, i32) local_unnamed_addr #0 {
  %6 = icmp eq %struct.hb_face_t* %0, null
  br i1 %6, label %41, label %7, !prof !2

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %41, label %11, !prof !2

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 2
  %13 = bitcast %struct.hb_atomic_ptr_t* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = inttoptr i64 %14 to %struct.hb_user_data_array_t*
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %17, label %31, !prof !2

17:                                               ; preds = %11, %35
  %18 = tail call noalias i8* @calloc(i64 56, i64 1) #11
  %19 = icmp eq i8* %18, null
  br i1 %19, label %41, label %20, !prof !2

20:                                               ; preds = %17
  %21 = bitcast i8* %18 to %union.pthread_mutex_t*
  %22 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull %21, %union.pthread_mutexattr_t* null) #11
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  %24 = ptrtoint i8* %18 to i64
  %25 = cmpxchg weak i64* %13, i64 0, i64 %24 acq_rel monotonic
  %26 = extractvalue { i64, i1 } %25, 1
  br i1 %26, label %27, label %35, !prof !4

27:                                               ; preds = %20
  %28 = bitcast i8* %18 to %struct.hb_user_data_array_t*
  br label %31

29:                                               ; preds = %35
  %30 = inttoptr i64 %39 to %struct.hb_user_data_array_t*
  br label %31

31:                                               ; preds = %29, %27, %11
  %32 = phi %struct.hb_user_data_array_t* [ %28, %27 ], [ %30, %29 ], [ %15, %11 ]
  %33 = tail call zeroext i1 @_ZN20hb_user_data_array_t3setEP18hb_user_data_key_tPvPFvS2_Ei(%struct.hb_user_data_array_t* %32, %struct.hb_user_data_key_t* %1, i8* %2, void (i8*)* %3, i32 %4) #11
  %34 = zext i1 %33 to i32
  br label %41

35:                                               ; preds = %20
  %36 = bitcast i8* %23 to %struct.hb_lockable_set_t*
  %37 = bitcast i8* %18 to %struct.hb_mutex_t*
  tail call void @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_(%struct.hb_lockable_set_t* %36, %struct.hb_mutex_t* nonnull dereferenceable(40) %37) #11
  %38 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* nonnull %21) #11
  tail call void @free(i8* nonnull %18) #11
  %39 = load atomic i64, i64* %13 acquire, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %17, label %29, !prof !2

41:                                               ; preds = %17, %5, %7, %31
  %42 = phi i32 [ 0, %7 ], [ 0, %5 ], [ %34, %31 ], [ 0, %17 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @hb_face_get_user_data(%struct.hb_face_t* readonly, %struct.hb_user_data_key_t*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.hb_face_t* %0, null
  br i1 %3, label %16, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8, !prof !2

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 2
  %10 = bitcast %struct.hb_atomic_ptr_t* %9 to i64*
  %11 = load atomic i64, i64* %10 acquire, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = inttoptr i64 %11 to %struct.hb_user_data_array_t*
  %15 = tail call i8* @_ZN20hb_user_data_array_t3getEP18hb_user_data_key_t(%struct.hb_user_data_array_t* nonnull %14, %struct.hb_user_data_key_t* %1) #11
  br label %16

16:                                               ; preds = %2, %4, %8, %13
  %17 = phi i8* [ null, %4 ], [ %15, %13 ], [ null, %8 ], [ null, %2 ]
  ret i8* %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @hb_face_make_immutable(%struct.hb_face_t* nocapture) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store atomic i32 0, i32* %2 monotonic, align 4
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @hb_face_is_immutable(%struct.hb_face_t* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_blob_t* @hb_face_reference_table(%struct.hb_face_t*, i32) local_unnamed_addr #0 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %14, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 1
  %6 = bitcast {}** %5 to %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)**
  %7 = load %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)** %6, align 8
  %8 = icmp eq %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* %7, null
  br i1 %8, label %14, label %9, !prof !2

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = tail call %struct.hb_blob_t* %7(%struct.hb_face_t* %0, i32 %1, i8* %11) #11
  %13 = icmp eq %struct.hb_blob_t* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9, %4, %2
  %15 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #11
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi %struct.hb_blob_t* [ %12, %9 ], [ %15, %14 ]
  ret %struct.hb_blob_t* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_blob_t* @hb_face_reference_blob(%struct.hb_face_t*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 1
  %3 = bitcast {}** %2 to %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)**
  %4 = load %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)** %3, align 8
  %5 = icmp eq %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* %4, null
  br i1 %5, label %11, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = tail call %struct.hb_blob_t* %4(%struct.hb_face_t* %0, i32 0, i8* %8) #11
  %10 = icmp eq %struct.hb_blob_t* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6, %1
  %12 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi %struct.hb_blob_t* [ %9, %6 ], [ %12, %11 ]
  ret %struct.hb_blob_t* %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @hb_face_set_index(%struct.hb_face_t* nocapture, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 4
  store i32 %1, i32* %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @hb_face_get_index(%struct.hb_face_t* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @hb_face_set_upem(%struct.hb_face_t* nocapture, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 5, i32 0
  store atomic i32 %1, i32* %7 monotonic, align 4
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_face_get_upem(%struct.hb_face_t*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 5, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t* %0) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @hb_face_set_glyph_count(%struct.hb_face_t* nocapture, i32) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 6, i32 0
  store atomic i32 %1, i32* %7 monotonic, align 4
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_face_get_glyph_count(%struct.hb_face_t*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 6, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %7, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t* %0) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ %3, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_face_get_table_tags(%struct.hb_face_t* nocapture readonly, i32, i32*, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 3
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, @_ZL33_hb_face_for_data_closure_destroyPv
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32* %2, null
  br i1 %9, label %94, label %10

10:                                               ; preds = %8
  store i32 0, i32* %2, align 4
  br label %94

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 2
  %13 = bitcast i8** %12 to %struct.hb_face_for_data_closure_t**
  %14 = load %struct.hb_face_for_data_closure_t*, %struct.hb_face_for_data_closure_t** %13, align 8
  %15 = getelementptr inbounds %struct.hb_face_for_data_closure_t, %struct.hb_face_for_data_closure_t* %14, i64 0, i32 0
  %16 = load %struct.hb_blob_t*, %struct.hb_blob_t** %15, align 8
  %17 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %16, i64 0, i32 1
  %18 = bitcast i8** %17 to %"struct.OT::OpenTypeFontFile"**
  %19 = load %"struct.OT::OpenTypeFontFile"*, %"struct.OT::OpenTypeFontFile"** %18, align 8
  %20 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %16, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, 4
  %23 = select i1 %22, %"struct.OT::OpenTypeFontFile"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OpenTypeFontFile"*), %"struct.OT::OpenTypeFontFile"* %19
  %24 = getelementptr inbounds %struct.hb_face_for_data_closure_t, %struct.hb_face_for_data_closure_t* %14, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = tail call dereferenceable(28) %"struct.OT::OpenTypeOffsetTable"* @_ZNK2OT16OpenTypeFontFile8get_faceEjPj(%"struct.OT::OpenTypeFontFile"* %23, i32 %25, i32* null)
  %27 = icmp eq i32* %2, null
  br i1 %27, label %88, label %28

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %26, i64 0, i32 1
  %30 = bitcast %"struct.OT::SortedArrayOf"* %29 to i16*
  %31 = load i16, i16* %30, align 1
  %32 = tail call i16 @llvm.bswap.i16(i16 %31) #11
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.usub.sat.i32(i32 %33, i32 %1) #11
  %35 = load i32, i32* %2, align 4
  %36 = icmp ugt i32 %34, %35
  %37 = select i1 %36, i32 %35, i32 %34
  store i32 %37, i32* %2, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %88, label %39

39:                                               ; preds = %28
  %40 = zext i32 %1 to i64
  %41 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %26, i64 0, i32 1, i32 0, i32 1, i64 %40
  %42 = load i32, i32* bitcast ([48 x i64]* @_hb_NullPool to i32*), align 16
  %43 = and i32 %37, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %39
  %46 = bitcast %"struct.OT::TableRecord"* %41 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = tail call i32 @llvm.bswap.i32(i32 %47) #11
  %49 = icmp eq i32 %37, 0
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %45
  store i32 %42, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %51

51:                                               ; preds = %50, %45
  %52 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %50 ], [ %3, %45 ]
  store i32 %48, i32* %52, align 4
  %53 = icmp ne i32 %37, 0
  %54 = zext i1 %53 to i32
  %55 = sub nsw i32 %37, %54
  %56 = zext i1 %53 to i64
  %57 = getelementptr inbounds i32, i32* %3, i64 %56
  %58 = add nsw i32 %37, -1
  %59 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %41, i64 1
  br label %60

60:                                               ; preds = %39, %51
  %61 = phi i32* [ %3, %39 ], [ %57, %51 ]
  %62 = phi i32 [ %37, %39 ], [ %55, %51 ]
  %63 = phi %"struct.OT::TableRecord"* [ %41, %39 ], [ %59, %51 ]
  %64 = phi i32 [ %37, %39 ], [ %58, %51 ]
  %65 = icmp eq i32 %37, 1
  br i1 %65, label %88, label %66

66:                                               ; preds = %60, %97
  %67 = phi i32* [ %103, %97 ], [ %61, %60 ]
  %68 = phi i32 [ %101, %97 ], [ %62, %60 ]
  %69 = phi %"struct.OT::TableRecord"* [ %105, %97 ], [ %63, %60 ]
  %70 = phi i32 [ %104, %97 ], [ %64, %60 ]
  %71 = bitcast %"struct.OT::TableRecord"* %69 to i32*
  %72 = load i32, i32* %71, align 1
  %73 = tail call i32 @llvm.bswap.i32(i32 %72) #11
  %74 = icmp eq i32 %68, 0
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  store i32 %42, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %76

76:                                               ; preds = %75, %66
  %77 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %75 ], [ %67, %66 ]
  store i32 %73, i32* %77, align 4
  %78 = icmp ne i32 %68, 0
  %79 = zext i1 %78 to i32
  %80 = sub i32 %68, %79
  %81 = zext i1 %78 to i64
  %82 = getelementptr inbounds i32, i32* %67, i64 %81
  %83 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %69, i64 1
  %84 = bitcast %"struct.OT::TableRecord"* %83 to i32*
  %85 = load i32, i32* %84, align 1
  %86 = tail call i32 @llvm.bswap.i32(i32 %85) #11
  %87 = icmp eq i32 %80, 0
  br i1 %87, label %96, label %97, !prof !2

88:                                               ; preds = %60, %97, %11, %28
  %89 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %26, i64 0, i32 1, i32 0, i32 0
  %90 = bitcast %"struct.OT::BinSearchHeader"* %89 to i16*
  %91 = load i16, i16* %90, align 1
  %92 = tail call i16 @llvm.bswap.i16(i16 %91) #11
  %93 = zext i16 %92 to i32
  br label %94

94:                                               ; preds = %10, %8, %88
  %95 = phi i32 [ %93, %88 ], [ 0, %8 ], [ 0, %10 ]
  ret i32 %95

96:                                               ; preds = %76
  store i32 %42, i32* bitcast ([48 x i64]* @_hb_CrapPool to i32*), align 16
  br label %97

97:                                               ; preds = %96, %76
  %98 = phi i32* [ bitcast ([48 x i64]* @_hb_CrapPool to i32*), %96 ], [ %82, %76 ]
  store i32 %86, i32* %98, align 4
  %99 = icmp ne i32 %80, 0
  %100 = zext i1 %99 to i32
  %101 = sub i32 %80, %100
  %102 = zext i1 %99 to i64
  %103 = getelementptr inbounds i32, i32* %82, i64 %102
  %104 = add i32 %70, -2
  %105 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %69, i64 2
  %106 = icmp eq i32 %104, 0
  br i1 %106, label %88, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(28) %"struct.OT::OpenTypeOffsetTable"* @_ZNK2OT16OpenTypeFontFile8get_faceEjPj(%"struct.OT::OpenTypeFontFile"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i32 0, i32* %2, align 4
  br label %6

6:                                                ; preds = %3, %5
  %7 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw i32 %9, 24
  %11 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 16
  %15 = or i32 %14, %10
  %16 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = or i32 %15, %19
  %21 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = or i32 %20, %23
  switch i32 %24, label %208 [
    i32 1330926671, label %25
    i32 1953658213, label %25
    i32 1954115633, label %25
    i32 65536, label %25
    i32 1953784678, label %27
    i32 256, label %91
  ]

25:                                               ; preds = %6, %6, %6, %6
  %26 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0
  br label %208

27:                                               ; preds = %6
  %28 = bitcast %"struct.OT::OpenTypeFontFile"* %0 to %"struct.OT::TTCHeader"*
  %29 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = bitcast %"struct.OT::IntType.0"* %29 to i16*
  %31 = load i16, i16* %30, align 1
  %32 = tail call i16 @llvm.bswap.i16(i16 %31) #11
  %33 = zext i16 %32 to i32
  %34 = add nsw i32 %33, -1
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %36, label %208

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i64 0
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw i32 %39, 24
  %41 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 16
  %45 = or i32 %44, %40
  %46 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = or i32 %45, %49
  %51 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = or i32 %50, %53
  %55 = icmp ugt i32 %54, %1
  %56 = zext i32 %1 to i64
  %57 = getelementptr inbounds %"struct.OT::TTCHeader", %"struct.OT::TTCHeader"* %28, i64 0, i32 0, i32 0, i32 2, i32 1, i64 %56
  %58 = select i1 %55, %"struct.OT::OffsetTo"* %57, %"struct.OT::OffsetTo"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OffsetTo"*), !prof !4
  %59 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw i32 %61, 24
  %63 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 16
  %67 = or i32 %66, %62
  %68 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = or i32 %67, %71
  %73 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = or i32 %72, %75
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %208, label %78, !prof !2

78:                                               ; preds = %36
  %79 = zext i8 %60 to i64
  %80 = shl nuw nsw i64 %79, 24
  %81 = zext i8 %64 to i64
  %82 = shl nuw nsw i64 %81, 16
  %83 = or i64 %82, %80
  %84 = zext i8 %69 to i64
  %85 = shl nuw nsw i64 %84, 8
  %86 = or i64 %83, %85
  %87 = zext i8 %74 to i64
  %88 = or i64 %86, %87
  %89 = getelementptr inbounds %"struct.OT::TTCHeader", %"struct.OT::TTCHeader"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %88
  %90 = bitcast i8* %89 to %"struct.OT::OpenTypeOffsetTable"*
  br label %208

91:                                               ; preds = %6
  %92 = bitcast %"struct.OT::OpenTypeFontFile"* %0 to %"struct.OT::ResourceForkHeader"*
  %93 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = shl nuw nsw i64 %95, 24
  %97 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = shl nuw nsw i64 %99, 16
  %101 = or i64 %100, %96
  %102 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = shl nuw nsw i64 %104, 8
  %106 = or i64 %101, %105
  %107 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i64 1
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i64
  %110 = or i64 %106, %109
  %111 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %110
  %112 = zext i8 %8 to i64
  %113 = shl nuw nsw i64 %112, 24
  %114 = zext i8 %12 to i64
  %115 = shl nuw nsw i64 %114, 16
  %116 = or i64 %115, %113
  %117 = zext i8 %17 to i64
  %118 = shl nuw nsw i64 %117, 8
  %119 = or i64 %116, %118
  %120 = zext i8 %22 to i64
  %121 = or i64 %119, %120
  %122 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %121
  %123 = getelementptr inbounds i8, i8* %111, i64 24
  %124 = bitcast i8* %123 to i16*
  %125 = load i16, i16* %124, align 1
  %126 = tail call i16 @llvm.bswap.i16(i16 %125) #11
  %127 = zext i16 %126 to i64
  %128 = getelementptr inbounds i8, i8* %111, i64 %127
  %129 = bitcast i8* %128 to i16*
  %130 = load i16, i16* %129, align 1
  %131 = tail call i16 @llvm.bswap.i16(i16 %130) #11
  %132 = zext i16 %131 to i64
  %133 = bitcast i8* %128 to %"struct.OT::ArrayOfM1"*
  br label %134

134:                                              ; preds = %180, %91
  %135 = phi i64 [ %181, %180 ], [ 0, %91 ]
  %136 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %133, i64 0, i32 1, i64 %135, i32 0, i32 0, i32 0, i32 0, i64 0
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = shl nuw i32 %138, 24
  %140 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %133, i64 0, i32 1, i64 %135, i32 0, i32 0, i32 0, i32 0, i64 1
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = shl nuw nsw i32 %142, 16
  %144 = or i32 %143, %139
  %145 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %133, i64 0, i32 1, i64 %135, i32 0, i32 0, i32 0, i32 0, i64 2
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = shl nuw nsw i32 %147, 8
  %149 = or i32 %144, %148
  %150 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %133, i64 0, i32 1, i64 %135, i32 0, i32 0, i32 0, i32 0, i64 3
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = or i32 %149, %152
  %154 = icmp eq i32 %153, 1936092788
  br i1 %154, label %155, label %180

155:                                              ; preds = %134
  %156 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %133, i64 0, i32 1, i64 %135, i32 1
  %157 = bitcast %"struct.OT::IntType.0"* %156 to i16*
  %158 = load i16, i16* %157, align 1
  %159 = tail call i16 @llvm.bswap.i16(i16 %158) #11
  %160 = zext i16 %159 to i32
  %161 = icmp ult i32 %160, %1
  br i1 %161, label %180, label %162

162:                                              ; preds = %155
  %163 = and i64 %135, 4294967295
  %164 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %133, i64 0, i32 1, i64 %163, i32 1
  %165 = bitcast %"struct.OT::IntType.0"* %164 to i16*
  %166 = load i16, i16* %165, align 1
  %167 = tail call i16 @llvm.bswap.i16(i16 %166) #11
  %168 = zext i16 %167 to i32
  %169 = icmp ult i32 %168, %1
  br i1 %169, label %183, label %170, !prof !2

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %133, i64 0, i32 1, i64 %163, i32 2
  %172 = bitcast %"struct.OT::OffsetTo.172"* %171 to i16*
  %173 = load i16, i16* %172, align 1
  %174 = tail call i16 @llvm.bswap.i16(i16 %173) #11
  %175 = zext i16 %174 to i64
  %176 = getelementptr inbounds i8, i8* %128, i64 %175
  %177 = bitcast i8* %176 to %"struct.OT::ResourceRecord"*
  %178 = zext i32 %1 to i64
  %179 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %177, i64 %178
  br label %183

180:                                              ; preds = %155, %134
  %181 = add nuw nsw i64 %135, 1
  %182 = icmp eq i64 %135, %132
  br i1 %182, label %201, label %134

183:                                              ; preds = %170, %162
  %184 = phi %"struct.OT::ResourceRecord"* [ %179, %170 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::ResourceRecord"*), %162 ]
  %185 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %184, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 0
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i64
  %188 = shl nuw nsw i64 %187, 16
  %189 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %184, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 1
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i64
  %192 = shl nuw nsw i64 %191, 8
  %193 = or i64 %192, %188
  %194 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %184, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 2
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = or i64 %193, %196
  %198 = getelementptr inbounds i8, i8* %122, i64 %197
  %199 = getelementptr inbounds i8, i8* %198, i64 4
  %200 = bitcast i8* %199 to %"struct.OT::OpenTypeOffsetTable"*
  br label %201

201:                                              ; preds = %180, %183
  %202 = phi %"struct.OT::OpenTypeOffsetTable"* [ %200, %183 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OpenTypeOffsetTable"*), %180 ]
  br i1 %4, label %208, label %203

203:                                              ; preds = %201
  %204 = ptrtoint %"struct.OT::OpenTypeOffsetTable"* %202 to i64
  %205 = ptrtoint %"struct.OT::OpenTypeFontFile"* %0 to i64
  %206 = sub i64 %204, %205
  %207 = trunc i64 %206 to i32
  store i32 %207, i32* %2, align 4
  br label %208

208:                                              ; preds = %6, %203, %201, %78, %36, %27, %25
  %209 = phi %"struct.OT::OpenTypeOffsetTable"* [ %26, %25 ], [ %90, %78 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OpenTypeOffsetTable"*), %36 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OpenTypeOffsetTable"*), %27 ], [ %202, %201 ], [ %202, %203 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::OpenTypeOffsetTable"*), %6 ]
  ret %"struct.OT::OpenTypeOffsetTable"* %209
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_face_collect_unicodes(%struct.hb_face_t*, %struct.hb_set_t*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 2, i32 0
  %4 = getelementptr inbounds %struct.hb_lazy_loader_t.10, %struct.hb_lazy_loader_t.10* %3, i64 -2
  %5 = bitcast %struct.hb_lazy_loader_t.10* %4 to %struct.hb_face_t**
  %6 = bitcast %struct.hb_lazy_loader_t.10* %3 to i64*
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = inttoptr i64 %7 to %"struct.OT::cmap_accelerator_t"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %38, !prof !2

10:                                               ; preds = %2, %33
  %11 = load %struct.hb_face_t*, %struct.hb_face_t** %5, align 8
  %12 = icmp eq %struct.hb_face_t* %11, null
  br i1 %12, label %38, label %13, !prof !2

13:                                               ; preds = %10
  %14 = tail call noalias i8* @calloc(i64 1, i64 88) #11
  %15 = bitcast i8* %14 to %"struct.OT::cmap_accelerator_t"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %13
  %18 = bitcast i8* %14 to %"struct.OT::cmap::accelerator_t"*
  tail call void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"* nonnull %18, %struct.hb_face_t* nonnull %11) #11
  br label %19

19:                                               ; preds = %17, %13
  %20 = select i1 %16, %"struct.OT::cmap_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %"struct.OT::cmap_accelerator_t"* %15, !prof !2
  %21 = ptrtoint %"struct.OT::cmap_accelerator_t"* %20 to i64
  %22 = cmpxchg weak i64* %6, i64 0, i64 %21 acq_rel monotonic
  %23 = extractvalue { i64, i1 } %22, 1
  br i1 %23, label %38, label %24, !prof !4

24:                                               ; preds = %19
  %25 = icmp eq %"struct.OT::cmap_accelerator_t"* %20, null
  %26 = or i1 %16, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %20, i64 0, i32 0, i32 5, i32 0, i32 0
  %29 = load %struct.hb_blob_t*, %struct.hb_blob_t** %28, align 8
  %30 = icmp eq %struct.hb_blob_t* %29, null
  %31 = select i1 %30, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %31) #11
  %32 = bitcast %"struct.OT::cmap_accelerator_t"* %20 to i8*
  tail call void @free(i8* %32) #11
  br label %33

33:                                               ; preds = %27, %24
  %34 = load atomic i64, i64* %6 acquire, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %10, label %36, !prof !2

36:                                               ; preds = %33
  %37 = inttoptr i64 %34 to %"struct.OT::cmap_accelerator_t"*
  br label %38

38:                                               ; preds = %10, %19, %2, %36
  %39 = phi %"struct.OT::cmap_accelerator_t"* [ %37, %36 ], [ %8, %2 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %10 ], [ %20, %19 ]
  %40 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 6, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %38
  %44 = tail call i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t* %0) #11
  br label %45

45:                                               ; preds = %38, %43
  %46 = phi i32 [ %44, %43 ], [ %41, %38 ]
  %47 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %39, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.OT::CmapSubtable"*, %"struct.OT::CmapSubtable"** %47, align 8
  %49 = icmp eq %"struct.OT::CmapSubtable"* %48, null
  %50 = select i1 %49, %"struct.OT::CmapSubtable"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtable"*), %"struct.OT::CmapSubtable"* %48
  tail call void @_ZNK2OT12CmapSubtable16collect_unicodesEP8hb_set_tj(%"struct.OT::CmapSubtable"* %50, %struct.hb_set_t* %1, i32 %46) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_face_collect_variation_selectors(%struct.hb_face_t* nocapture, %struct.hb_set_t*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 2, i32 0
  %4 = getelementptr inbounds %struct.hb_lazy_loader_t.10, %struct.hb_lazy_loader_t.10* %3, i64 -2
  %5 = bitcast %struct.hb_lazy_loader_t.10* %4 to %struct.hb_face_t**
  %6 = bitcast %struct.hb_lazy_loader_t.10* %3 to i64*
  %7 = load atomic i64, i64* %6 acquire, align 8
  %8 = inttoptr i64 %7 to %"struct.OT::cmap_accelerator_t"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %38, !prof !2

10:                                               ; preds = %2, %33
  %11 = load %struct.hb_face_t*, %struct.hb_face_t** %5, align 8
  %12 = icmp eq %struct.hb_face_t* %11, null
  br i1 %12, label %38, label %13, !prof !2

13:                                               ; preds = %10
  %14 = tail call noalias i8* @calloc(i64 1, i64 88) #11
  %15 = bitcast i8* %14 to %"struct.OT::cmap_accelerator_t"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %13
  %18 = bitcast i8* %14 to %"struct.OT::cmap::accelerator_t"*
  tail call void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"* nonnull %18, %struct.hb_face_t* nonnull %11) #11
  br label %19

19:                                               ; preds = %17, %13
  %20 = select i1 %16, %"struct.OT::cmap_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %"struct.OT::cmap_accelerator_t"* %15, !prof !2
  %21 = ptrtoint %"struct.OT::cmap_accelerator_t"* %20 to i64
  %22 = cmpxchg weak i64* %6, i64 0, i64 %21 acq_rel monotonic
  %23 = extractvalue { i64, i1 } %22, 1
  br i1 %23, label %38, label %24, !prof !4

24:                                               ; preds = %19
  %25 = icmp eq %"struct.OT::cmap_accelerator_t"* %20, null
  %26 = or i1 %16, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %20, i64 0, i32 0, i32 5, i32 0, i32 0
  %29 = load %struct.hb_blob_t*, %struct.hb_blob_t** %28, align 8
  %30 = icmp eq %struct.hb_blob_t* %29, null
  %31 = select i1 %30, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %29
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %31) #11
  %32 = bitcast %"struct.OT::cmap_accelerator_t"* %20 to i8*
  tail call void @free(i8* %32) #11
  br label %33

33:                                               ; preds = %27, %24
  %34 = load atomic i64, i64* %6 acquire, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %10, label %36, !prof !2

36:                                               ; preds = %33
  %37 = inttoptr i64 %34 to %"struct.OT::cmap_accelerator_t"*
  br label %38

38:                                               ; preds = %10, %19, %2, %36
  %39 = phi %"struct.OT::cmap_accelerator_t"* [ %37, %36 ], [ %8, %2 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %10 ], [ %20, %19 ]
  %40 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %39, i64 0, i32 0, i32 1, i32 0
  %41 = load %"struct.OT::CmapSubtableFormat14"*, %"struct.OT::CmapSubtableFormat14"** %40, align 8
  %42 = icmp eq %"struct.OT::CmapSubtableFormat14"* %41, null
  %43 = select i1 %42, %"struct.OT::CmapSubtableFormat14"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtableFormat14"*), %"struct.OT::CmapSubtableFormat14"* %41
  %44 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = shl nuw nsw i64 %46, 24
  %48 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = shl nuw nsw i64 %50, 16
  %52 = or i64 %51, %47
  %53 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = shl nuw nsw i64 %55, 8
  %57 = or i64 %52, %56
  %58 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = or i64 %57, %60
  %62 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %43, i64 0, i32 2, i32 0, i32 1, i64 %61
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %112, label %64

64:                                               ; preds = %38
  %65 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %43, i64 0, i32 2, i32 0, i32 1, i64 0
  %66 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 1
  %67 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 2
  br label %68

68:                                               ; preds = %102, %64
  %69 = phi %"struct.OT::VariationSelectorRecord"* [ %65, %64 ], [ %108, %102 ]
  %70 = phi i64 [ %61, %64 ], [ %106, %102 ]
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, 0
  %73 = select i1 %72, %"struct.OT::VariationSelectorRecord"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VariationSelectorRecord"*), %"struct.OT::VariationSelectorRecord"* %69, !prof !2
  %74 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %73, i64 0, i32 0, i32 0, i32 0, i64 0
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 16
  %78 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %73, i64 0, i32 0, i32 0, i32 0, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl nuw nsw i32 %80, 8
  %82 = or i32 %81, %77
  %83 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %73, i64 0, i32 0, i32 0, i32 0, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = or i32 %82, %85
  %87 = load i8, i8* %66, align 8, !range !3
  %88 = icmp eq i8 %87, 1
  br i1 %88, label %89, label %102, !prof !5

89:                                               ; preds = %68
  store i32 -1, i32* %67, align 4
  %90 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %1, i32 %86) #11
  %91 = icmp eq %"struct.hb_set_t::page_t"* %90, null
  br i1 %91, label %102, label %92, !prof !2

92:                                               ; preds = %89
  %93 = and i32 %85, 63
  %94 = zext i32 %93 to i64
  %95 = shl i64 1, %94
  %96 = lshr i32 %86, 6
  %97 = and i32 %96, 7
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %90, i64 0, i32 0, i32 0, i64 %98
  %100 = load i64, i64* %99, align 8
  %101 = or i64 %100, %95
  store i64 %101, i64* %99, align 8
  br label %102

102:                                              ; preds = %92, %89, %68
  %103 = icmp ne i32 %71, 0
  %104 = zext i1 %103 to i32
  %105 = sub i32 %71, %104
  %106 = zext i32 %105 to i64
  %107 = zext i1 %103 to i64
  %108 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %69, i64 %107
  %109 = icmp ne %"struct.OT::VariationSelectorRecord"* %108, %62
  %110 = icmp ne i32 %105, 0
  %111 = or i1 %109, %110
  br i1 %111, label %68, label %112

112:                                              ; preds = %102, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @hb_face_collect_variation_unicodes(%struct.hb_face_t* nocapture, i32, %struct.hb_set_t*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 8, i32 2, i32 0
  %5 = getelementptr inbounds %struct.hb_lazy_loader_t.10, %struct.hb_lazy_loader_t.10* %4, i64 -2
  %6 = bitcast %struct.hb_lazy_loader_t.10* %5 to %struct.hb_face_t**
  %7 = bitcast %struct.hb_lazy_loader_t.10* %4 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = inttoptr i64 %8 to %"struct.OT::cmap_accelerator_t"*
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %39, !prof !2

11:                                               ; preds = %3, %34
  %12 = load %struct.hb_face_t*, %struct.hb_face_t** %6, align 8
  %13 = icmp eq %struct.hb_face_t* %12, null
  br i1 %13, label %39, label %14, !prof !2

14:                                               ; preds = %11
  %15 = tail call noalias i8* @calloc(i64 1, i64 88) #11
  %16 = bitcast i8* %15 to %"struct.OT::cmap_accelerator_t"*
  %17 = icmp eq i8* %15, null
  br i1 %17, label %20, label %18, !prof !2

18:                                               ; preds = %14
  %19 = bitcast i8* %15 to %"struct.OT::cmap::accelerator_t"*
  tail call void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"* nonnull %19, %struct.hb_face_t* nonnull %12) #11
  br label %20

20:                                               ; preds = %18, %14
  %21 = select i1 %17, %"struct.OT::cmap_accelerator_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %"struct.OT::cmap_accelerator_t"* %16, !prof !2
  %22 = ptrtoint %"struct.OT::cmap_accelerator_t"* %21 to i64
  %23 = cmpxchg weak i64* %7, i64 0, i64 %22 acq_rel monotonic
  %24 = extractvalue { i64, i1 } %23, 1
  br i1 %24, label %39, label %25, !prof !4

25:                                               ; preds = %20
  %26 = icmp eq %"struct.OT::cmap_accelerator_t"* %21, null
  %27 = or i1 %17, %26
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %21, i64 0, i32 0, i32 5, i32 0, i32 0
  %30 = load %struct.hb_blob_t*, %struct.hb_blob_t** %29, align 8
  %31 = icmp eq %struct.hb_blob_t* %30, null
  %32 = select i1 %31, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %30
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %32) #11
  %33 = bitcast %"struct.OT::cmap_accelerator_t"* %21 to i8*
  tail call void @free(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %25
  %35 = load atomic i64, i64* %7 acquire, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %11, label %37, !prof !2

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to %"struct.OT::cmap_accelerator_t"*
  br label %39

39:                                               ; preds = %11, %20, %3, %37
  %40 = phi %"struct.OT::cmap_accelerator_t"* [ %38, %37 ], [ %9, %3 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap_accelerator_t"*), %11 ], [ %21, %20 ]
  %41 = getelementptr inbounds %"struct.OT::cmap_accelerator_t", %"struct.OT::cmap_accelerator_t"* %40, i64 0, i32 0, i32 1, i32 0
  %42 = load %"struct.OT::CmapSubtableFormat14"*, %"struct.OT::CmapSubtableFormat14"** %41, align 8
  %43 = icmp eq %"struct.OT::CmapSubtableFormat14"* %42, null
  %44 = select i1 %43, %"struct.OT::CmapSubtableFormat14"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtableFormat14"*), %"struct.OT::CmapSubtableFormat14"* %42
  %45 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw i32 %47, 24
  %49 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 16
  %53 = or i32 %52, %48
  %54 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  %58 = or i32 %53, %57
  %59 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = or i32 %58, %61
  %63 = icmp slt i32 %62, 1
  br i1 %63, label %100, label %64

64:                                               ; preds = %39
  %65 = add nsw i32 %62, -1
  br label %66

66:                                               ; preds = %93, %64
  %67 = phi i32 [ %65, %64 ], [ %95, %93 ]
  %68 = phi i32 [ 0, %64 ], [ %94, %93 ]
  %69 = add i32 %68, %67
  %70 = lshr i32 %69, 1
  %71 = zext i32 %70 to i64
  %72 = mul nuw nsw i64 %71, 11
  %73 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %44, i64 0, i32 2, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw nsw i32 %75, 16
  %77 = getelementptr inbounds i8, i8* %73, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %79, 8
  %81 = or i32 %80, %76
  %82 = getelementptr inbounds i8, i8* %73, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = or i32 %81, %84
  %86 = icmp ugt i32 %85, %1
  br i1 %86, label %87, label %89

87:                                               ; preds = %66
  %88 = add nsw i32 %70, -1
  br label %93

89:                                               ; preds = %66
  %90 = icmp eq i32 %85, %1
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  %92 = add nuw nsw i32 %70, 1
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi i32 [ %68, %87 ], [ %92, %91 ]
  %95 = phi i32 [ %88, %87 ], [ %67, %91 ]
  %96 = icmp sgt i32 %94, %95
  br i1 %96, label %100, label %66

97:                                               ; preds = %89
  %98 = zext i32 %70 to i64
  %99 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %44, i64 0, i32 2, i32 0, i32 1, i64 %98
  br label %100

100:                                              ; preds = %93, %39, %97
  %101 = phi %"struct.OT::VariationSelectorRecord"* [ %99, %97 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VariationSelectorRecord"*), %39 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::VariationSelectorRecord"*), %93 ]
  %102 = getelementptr inbounds %"struct.OT::CmapSubtableFormat14", %"struct.OT::CmapSubtableFormat14"* %44, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZNK2OT23VariationSelectorRecord16collect_unicodesEP8hb_set_tPKv(%"struct.OT::VariationSelectorRecord"* %101, %struct.hb_set_t* %2, i8* %102) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.hb_face_t* @hb_face_builder_create() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @calloc(i64 1, i64 16) #11
  %2 = icmp eq i8* %1, null
  br i1 %2, label %27, label %3, !prof !2

3:                                                ; preds = %0
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 16, i1 false) #11
  %4 = tail call noalias i8* @calloc(i64 1, i64 384) #11
  %5 = bitcast i8* %4 to %struct.hb_face_t*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %26, label %7, !prof !2

7:                                                ; preds = %3
  %8 = bitcast i8* %4 to i32*
  store atomic i32 1, i32* %8 monotonic, align 4
  %9 = getelementptr inbounds i8, i8* %4, i64 4
  %10 = bitcast i8* %9 to i32*
  store atomic i32 1, i32* %10 monotonic, align 4
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  %12 = bitcast i8* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* %8 monotonic, align 4
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = bitcast i8* %14 to %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)**
  store %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* @_ZL32_hb_face_builder_reference_tableP9hb_face_tjPv, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)** %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 24
  %17 = bitcast i8* %16 to i8**
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 32
  %19 = bitcast i8* %18 to void (i8*)**
  store void (i8*)* @_ZL29_hb_face_builder_data_destroyPv, void (i8*)** %19, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 48
  %21 = bitcast i8* %20 to i32*
  store atomic i32 -1, i32* %21 monotonic, align 4
  %22 = getelementptr inbounds i8, i8* %4, i64 56
  %23 = bitcast i8* %22 to i8**
  store i8* %4, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %4, i64 72
  %25 = bitcast i8* %24 to %struct.hb_ot_face_t*
  tail call void @_ZN12hb_ot_face_t5init0EP9hb_face_t(%struct.hb_ot_face_t* %25, %struct.hb_face_t* nonnull %5) #11
  br label %27

26:                                               ; preds = %3
  tail call void @free(i8* nonnull %1) #11
  br label %27

27:                                               ; preds = %0, %26, %7
  %28 = phi %struct.hb_face_t* [ %5, %7 ], [ bitcast ({ %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 }* @_hb_Null_hb_face_t to %struct.hb_face_t*), %26 ], [ bitcast ({ %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.7 } }, { %struct.hb_face_t*, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.12 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.36 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.43 }, { %struct.hb_atomic_ptr_t.47 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.54 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.61 }, { %struct.hb_atomic_ptr_t.65 }, { %struct.hb_atomic_ptr_t.69 }, { %struct.hb_atomic_ptr_t.73 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.86 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.96 }, { %struct.hb_atomic_ptr_t.100 }, { %struct.hb_atomic_ptr_t.104 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.9 }, { %struct.hb_atomic_ptr_t.138 }, { %struct.hb_atomic_ptr_t.142 }, { %struct.hb_atomic_ptr_t.146 }, { %struct.hb_atomic_ptr_t.9 } }, %struct.hb_atomic_ptr_t.150 }* @_hb_Null_hb_face_t to %struct.hb_face_t*), %0 ]
  ret %struct.hb_face_t* %28
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.hb_blob_t* @_ZL32_hb_face_builder_reference_tableP9hb_face_tjPv(%struct.hb_face_t* nocapture readnone, i32, i8* nocapture readonly) #0 {
  %4 = alloca %struct.hb_serialize_context_t, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %191

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = shl i32 %9, 4
  %11 = or i32 %10, 12
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %2, i64 8
  %15 = bitcast i8* %14 to %"struct.hb_face_builder_data_t::table_entry_t"**
  %16 = zext i32 %9 to i64
  br label %22

17:                                               ; preds = %32, %6
  %18 = phi i32 [ %11, %6 ], [ %40, %32 ]
  %19 = zext i32 %18 to i64
  %20 = tail call noalias i8* @malloc(i64 %19) #11
  %21 = icmp eq i8* %20, null
  br i1 %21, label %216, label %45, !prof !2

22:                                               ; preds = %43, %13
  %23 = phi i32 [ %9, %13 ], [ %44, %43 ]
  %24 = phi i64 [ 0, %13 ], [ %41, %43 ]
  %25 = phi i32 [ %11, %13 ], [ %40, %43 ]
  %26 = zext i32 %23 to i64
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %29, label %28, !prof !4

28:                                               ; preds = %22
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #11
  br label %32

29:                                               ; preds = %22
  %30 = load %"struct.hb_face_builder_data_t::table_entry_t"*, %"struct.hb_face_builder_data_t::table_entry_t"** %15, align 8
  %31 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %30, i64 %24
  br label %32

32:                                               ; preds = %29, %28
  %33 = phi %"struct.hb_face_builder_data_t::table_entry_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_face_builder_data_t::table_entry_t"*), %28 ], [ %31, %29 ]
  %34 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %33, i64 0, i32 1
  %35 = load %struct.hb_blob_t*, %struct.hb_blob_t** %34, align 8
  %36 = tail call i32 @hb_blob_get_length(%struct.hb_blob_t* %35) #11
  %37 = add i32 %36, -1
  %38 = or i32 %37, 3
  %39 = add i32 %25, 1
  %40 = add i32 %39, %38
  %41 = add nuw nsw i64 %24, 1
  %42 = icmp eq i64 %41, %16
  br i1 %42, label %17, label %43

43:                                               ; preds = %32
  %44 = load i32, i32* %8, align 4
  br label %22

45:                                               ; preds = %17
  %46 = bitcast %struct.hb_serialize_context_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %46) #11
  %47 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 1
  %48 = bitcast i8** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 120, i1 false) #11
  %49 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 0
  store i8* %20, i8** %49, align 8
  %50 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 3
  %51 = getelementptr inbounds i8, i8* %20, i64 %19
  store i8* %51, i8** %50, align 8
  %52 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 6
  %53 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 9, i32 0, i32 1
  %54 = bitcast %struct.hb_atomic_int_t* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 12, i1 false) #11
  %55 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %struct.hb_pool_t* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 48, i1 false) #11
  store atomic i32 1, i32* %55 monotonic, align 8
  %57 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 9, i32 0, i32 1, i32 0
  store atomic i32 1, i32* %57 monotonic, align 4
  %58 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 9, i32 0, i32 2
  %59 = bitcast %struct.hb_atomic_ptr_t* %58 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  %60 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 9, i32 1
  store i8 1, i8* %60, align 8
  %61 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 9, i32 2
  %62 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 9, i32 6
  store %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* null, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %62, align 8
  %63 = bitcast i32* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %63, i8 0, i64 16, i1 false) #11
  call void @_ZN22hb_serialize_context_t5resetEv(%struct.hb_serialize_context_t* nonnull %4) #11
  %64 = bitcast i8* %2 to i32*
  %65 = load i32, i32* %64, align 8
  %66 = icmp sgt i32 %65, -1
  %67 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 5
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 0
  %70 = or i1 %66, %69
  br i1 %70, label %72, label %71

71:                                               ; preds = %45
  store i32 1, i32* %67, align 4
  br label %95

72:                                               ; preds = %45
  %73 = icmp eq i32 %68, 0
  br i1 %73, label %74, label %95, !prof !4

74:                                               ; preds = %72
  %75 = call %"struct.hb_serialize_context_t::object_t"* @_ZN9hb_pool_tIN22hb_serialize_context_t8object_tELj16EE5allocEv(%struct.hb_pool_t* %52) #11
  %76 = icmp eq %"struct.hb_serialize_context_t::object_t"* %75, null
  br i1 %76, label %77, label %81, !prof !2

77:                                               ; preds = %74
  %78 = load i32, i32* %67, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %95

80:                                               ; preds = %77
  store i32 1, i32* %67, align 4
  br label %95

81:                                               ; preds = %74
  %82 = bitcast i8** %47 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"struct.hb_serialize_context_t::object_t"* %75 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 2
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %75, i64 0, i32 1
  %89 = bitcast i8** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 7
  %91 = bitcast %"struct.hb_serialize_context_t::object_t"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %75, i64 0, i32 3
  %94 = bitcast %"struct.hb_serialize_context_t::object_t"** %93 to i64*
  store i64 %92, i64* %94, align 8
  store %"struct.hb_serialize_context_t::object_t"* %75, %"struct.hb_serialize_context_t::object_t"** %90, align 8
  br label %95

95:                                               ; preds = %81, %80, %77, %72, %71
  %96 = bitcast i8** %47 to %"struct.OT::OpenTypeFontFile"**
  %97 = load %"struct.OT::OpenTypeFontFile"*, %"struct.OT::OpenTypeFontFile"** %96, align 8
  %98 = getelementptr inbounds i8, i8* %2, i64 8
  %99 = bitcast i8* %98 to %"struct.hb_face_builder_data_t::table_entry_t"**
  %100 = load %"struct.hb_face_builder_data_t::table_entry_t"*, %"struct.hb_face_builder_data_t::table_entry_t"** %99, align 8
  %101 = load i32, i32* %8, align 4
  %102 = zext i32 %101 to i64
  %103 = icmp eq i32 %101, 0
  %104 = ptrtoint %"struct.OT::OpenTypeFontFile"* %97 to i64
  br i1 %103, label %131, label %105

105:                                              ; preds = %95, %110
  %106 = phi i64 [ %111, %110 ], [ 0, %95 ]
  %107 = getelementptr %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %100, i64 %106, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 1128678944
  br i1 %109, label %113, label %110

110:                                              ; preds = %105
  %111 = add nuw nsw i64 %106, 1
  %112 = icmp eq i64 %111, %102
  br i1 %112, label %117, label %105

113:                                              ; preds = %105
  %114 = and i64 %106, 4294967295
  %115 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %100, i64 %114
  %116 = icmp eq %"struct.hb_face_builder_data_t::table_entry_t"* %115, null
  br i1 %116, label %117, label %131

117:                                              ; preds = %110, %113
  br label %118

118:                                              ; preds = %117, %123
  %119 = phi i64 [ %124, %123 ], [ 0, %117 ]
  %120 = getelementptr %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %100, i64 %119, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 1128678962
  br i1 %122, label %126, label %123

123:                                              ; preds = %118
  %124 = add nuw nsw i64 %119, 1
  %125 = icmp eq i64 %124, %102
  br i1 %125, label %131, label %118

126:                                              ; preds = %118
  %127 = and i64 %119, 4294967295
  %128 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %100, i64 %127
  %129 = icmp eq %"struct.hb_face_builder_data_t::table_entry_t"* %128, null
  %130 = select i1 %129, i32 65536, i32 1330926671
  br label %131

131:                                              ; preds = %123, %126, %113, %95
  %132 = phi i32 [ 1330926671, %113 ], [ %130, %126 ], [ 65536, %95 ], [ 65536, %123 ]
  %133 = load i32, i32* %67, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %166, !prof !4

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 2
  %137 = bitcast i8** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %138, %104
  %140 = icmp slt i64 %139, 4
  br i1 %140, label %141, label %142

141:                                              ; preds = %135
  store i32 4, i32* %67, align 4
  br label %166

142:                                              ; preds = %135
  %143 = bitcast %"struct.OT::OpenTypeFontFile"* %97 to i32*
  store i32 0, i32* %143, align 1
  %144 = load i8*, i8** %47, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 4
  store i8* %145, i8** %47, align 8
  %146 = icmp eq i8* %144, null
  %147 = icmp eq %"struct.OT::OpenTypeFontFile"* %97, null
  %148 = or i1 %147, %146
  br i1 %148, label %152, label %149, !prof !6

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %97, i64 0, i32 0, i32 0
  %151 = call zeroext i1 @_ZN2OT19OpenTypeOffsetTable9serializeIN22hb_face_builder_data_t13table_entry_tEEEbP22hb_serialize_context_tj10hb_array_tIT_E(%"struct.OT::OpenTypeOffsetTable"* %150, %struct.hb_serialize_context_t* nonnull %4, i32 %132, %"struct.hb_face_builder_data_t::table_entry_t"* %100, i64 %102) #11
  br label %152

152:                                              ; preds = %149, %142
  %153 = phi i1 [ false, %142 ], [ %151, %149 ]
  %154 = load i32, i32* %67, align 4
  %155 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 8, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp sgt i32 %156, -1
  %158 = icmp ne i32 %154, 0
  %159 = or i1 %158, %157
  br i1 %159, label %161, label %160

160:                                              ; preds = %152
  store i32 1, i32* %67, align 4
  br label %166

161:                                              ; preds = %152
  br i1 %158, label %166, label %162

162:                                              ; preds = %161
  %163 = load i8, i8* %60, align 8, !range !3
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  store i32 1, i32* %67, align 4
  br label %166

166:                                              ; preds = %165, %162, %161, %160, %141, %131
  %167 = phi i1 [ %153, %160 ], [ %153, %161 ], [ %153, %162 ], [ %153, %165 ], [ false, %131 ], [ false, %141 ]
  %168 = phi i32 [ 1, %160 ], [ %154, %161 ], [ 0, %162 ], [ 1, %165 ], [ %133, %131 ], [ 4, %141 ]
  %169 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 7
  %170 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %169, align 8
  %171 = icmp eq %"struct.hb_serialize_context_t::object_t"* %170, null
  br i1 %171, label %185, label %172, !prof !2

172:                                              ; preds = %166
  %173 = icmp eq i32 %168, 0
  br i1 %173, label %179, label %174, !prof !4

174:                                              ; preds = %172
  %175 = and i32 %168, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %185, label %177

177:                                              ; preds = %174
  %178 = or i32 %168, 1
  store i32 %178, i32* %67, align 4
  br label %185

179:                                              ; preds = %172
  %180 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %4, i64 0, i32 8, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = icmp ult i32 %181, 2
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = call i32 @_ZN22hb_serialize_context_t8pop_packEb(%struct.hb_serialize_context_t* nonnull %4, i1 zeroext false) #11
  call void @_ZN22hb_serialize_context_t13resolve_linksEv(%struct.hb_serialize_context_t* nonnull %4) #11
  br label %185

185:                                              ; preds = %183, %179, %177, %174, %166
  br i1 %167, label %187, label %186, !prof !4

186:                                              ; preds = %185
  call void @free(i8* %20) #11
  br label %189

187:                                              ; preds = %185
  %188 = call %struct.hb_blob_t* @hb_blob_create(i8* nonnull %20, i32 %18, i32 2, i8* nonnull %20, void (i8*)* nonnull @free) #11
  br label %189

189:                                              ; preds = %187, %186
  %190 = phi %struct.hb_blob_t* [ null, %186 ], [ %188, %187 ]
  call void @_ZN22hb_serialize_context_tD2Ev(%struct.hb_serialize_context_t* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %46) #11
  br label %216

191:                                              ; preds = %3
  %192 = getelementptr inbounds i8, i8* %2, i64 8
  %193 = bitcast i8* %192 to %"struct.hb_face_builder_data_t::table_entry_t"**
  %194 = load %"struct.hb_face_builder_data_t::table_entry_t"*, %"struct.hb_face_builder_data_t::table_entry_t"** %193, align 8
  %195 = getelementptr inbounds i8, i8* %2, i64 4
  %196 = bitcast i8* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  %199 = icmp eq i32 %197, 0
  br i1 %199, label %216, label %200

200:                                              ; preds = %191, %205
  %201 = phi i64 [ %206, %205 ], [ 0, %191 ]
  %202 = getelementptr %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %194, i64 %201, i32 0
  %203 = load i32, i32* %202, align 8
  %204 = icmp eq i32 %203, %1
  br i1 %204, label %208, label %205

205:                                              ; preds = %200
  %206 = add nuw nsw i64 %201, 1
  %207 = icmp eq i64 %206, %198
  br i1 %207, label %216, label %200

208:                                              ; preds = %200
  %209 = and i64 %201, 4294967295
  %210 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %194, i64 %209
  %211 = icmp eq %"struct.hb_face_builder_data_t::table_entry_t"* %210, null
  br i1 %211, label %216, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %194, i64 %209, i32 1
  %214 = load %struct.hb_blob_t*, %struct.hb_blob_t** %213, align 8
  %215 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %214) #11
  br label %216

216:                                              ; preds = %205, %191, %189, %17, %212, %208
  %217 = phi %struct.hb_blob_t* [ %215, %212 ], [ null, %208 ], [ %190, %189 ], [ null, %17 ], [ null, %191 ], [ null, %205 ]
  ret %struct.hb_blob_t* %217
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL29_hb_face_builder_data_destroyPv(i8* nocapture) #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 4
  %3 = bitcast i8* %2 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"struct.hb_face_builder_data_t::table_entry_t"**
  br label %13

9:                                                ; preds = %22, %1
  %10 = getelementptr inbounds i8, i8* %0, i64 8
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @free(i8* %12) #11
  tail call void @free(i8* %0) #11
  ret void

13:                                               ; preds = %6, %22
  %14 = phi i32 [ %4, %6 ], [ %27, %22 ]
  %15 = phi i64 [ 0, %6 ], [ %26, %22 ]
  %16 = zext i32 %14 to i64
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #11
  br label %22

19:                                               ; preds = %13
  %20 = load %"struct.hb_face_builder_data_t::table_entry_t"*, %"struct.hb_face_builder_data_t::table_entry_t"** %8, align 8
  %21 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %20, i64 %15
  br label %22

22:                                               ; preds = %18, %19
  %23 = phi %"struct.hb_face_builder_data_t::table_entry_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_face_builder_data_t::table_entry_t"*), %18 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %23, i64 0, i32 1
  %25 = load %struct.hb_blob_t*, %struct.hb_blob_t** %24, align 8
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %25) #11
  %26 = add nuw nsw i64 %15, 1
  %27 = load i32, i32* %3, align 4
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %13, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @hb_face_builder_add_table(%struct.hb_face_t* nocapture readonly, i32, %struct.hb_blob_t*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 3
  %5 = load void (i8*)*, void (i8*)** %4, align 8
  %6 = icmp eq void (i8*)* %5, @_ZL29_hb_face_builder_data_destroyPv
  br i1 %6, label %7, label %69, !prof !4

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %0, i64 0, i32 2
  %9 = bitcast i8** %8 to %struct.hb_face_builder_data_t**
  %10 = load %struct.hb_face_builder_data_t*, %struct.hb_face_builder_data_t** %9, align 8
  %11 = getelementptr inbounds %struct.hb_face_builder_data_t, %struct.hb_face_builder_data_t* %10, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, 1
  %14 = icmp sgt i32 %13, 0
  %15 = select i1 %14, i32 %13, i32 0
  %16 = getelementptr inbounds %struct.hb_face_builder_data_t, %struct.hb_face_builder_data_t* %10, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %54, label %19, !prof !2

19:                                               ; preds = %7
  %20 = icmp ult i32 %17, %15
  br i1 %20, label %21, label %42, !prof !2

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %25, %21 ], [ %17, %19 ]
  %23 = lshr i32 %22, 1
  %24 = add i32 %22, 8
  %25 = add i32 %24, %23
  %26 = icmp ugt i32 %25, %15
  br i1 %26, label %27, label %21

27:                                               ; preds = %21
  %28 = icmp uge i32 %25, %17
  %29 = icmp ult i32 %25, 268435455
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %39, !prof !5

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.hb_face_builder_data_t, %struct.hb_face_builder_data_t* %10, i64 0, i32 0, i32 2
  %33 = bitcast %"struct.hb_face_builder_data_t::table_entry_t"** %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = zext i32 %25 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = tail call i8* @realloc(i8* %34, i64 %36) #11
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %31, %27
  store i32 -1, i32* %16, align 8
  br label %54

40:                                               ; preds = %31
  store i8* %37, i8** %33, align 8
  store i32 %25, i32* %16, align 8
  %41 = load i32, i32* %11, align 4
  br label %42

42:                                               ; preds = %40, %19
  %43 = phi i32 [ %41, %40 ], [ %12, %19 ]
  %44 = icmp ugt i32 %15, %43
  br i1 %44, label %45, label %55

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.hb_face_builder_data_t, %struct.hb_face_builder_data_t* %10, i64 0, i32 0, i32 2
  %47 = load %"struct.hb_face_builder_data_t::table_entry_t"*, %"struct.hb_face_builder_data_t::table_entry_t"** %46, align 8
  %48 = zext i32 %43 to i64
  %49 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %47, i64 %48
  %50 = bitcast %"struct.hb_face_builder_data_t::table_entry_t"* %49 to i8*
  %51 = sub i32 %15, %43
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 %53, i1 false) #11
  br label %55

54:                                               ; preds = %39, %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #11
  br label %61

55:                                               ; preds = %45, %42
  store i32 %15, i32* %11, align 4
  %56 = getelementptr inbounds %struct.hb_face_builder_data_t, %struct.hb_face_builder_data_t* %10, i64 0, i32 0, i32 2
  %57 = load %"struct.hb_face_builder_data_t::table_entry_t"*, %"struct.hb_face_builder_data_t::table_entry_t"** %56, align 8
  %58 = add nsw i32 %15, -1
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %57, i64 %59
  br label %61

61:                                               ; preds = %54, %55
  %62 = phi %"struct.hb_face_builder_data_t::table_entry_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_face_builder_data_t::table_entry_t"*), %54 ], [ %60, %55 ]
  %63 = load i32, i32* %16, align 8
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %69, label %65, !prof !2

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %62, i64 0, i32 0
  store i32 %1, i32* %66, align 8
  %67 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %2) #11
  %68 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %62, i64 0, i32 1
  store %struct.hb_blob_t* %67, %struct.hb_blob_t** %68, align 8
  br label %69

69:                                               ; preds = %65, %61, %3
  %70 = phi i32 [ 0, %3 ], [ 1, %65 ], [ 0, %61 ]
  ret i32 %70
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #7

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #8

declare %struct.hb_blob_t* @hb_blob_create_sub_blob(%struct.hb_blob_t*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare hidden i32 @_ZNK9hb_face_t9load_upemEv(%struct.hb_face_t*) local_unnamed_addr #2

declare hidden i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT12CmapSubtable16collect_unicodesEP8hb_set_tj(%"struct.OT::CmapSubtable"*, %struct.hb_set_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.OT::CmapSubtableFormat4::accelerator_t", align 8
  %5 = bitcast %"struct.OT::CmapSubtable"* %0 to i16*
  %6 = load i16, i16* %5, align 1
  %7 = tail call i16 @llvm.bswap.i16(i16 %6) #11
  switch i16 %7, label %120 [
    i16 0, label %8
    i16 4, label %34
    i16 6, label %66
    i16 10, label %114
    i16 12, label %116
    i16 13, label %118
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 1
  %10 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 2
  br label %11

11:                                               ; preds = %31, %8
  %12 = phi i64 [ 0, %8 ], [ %32, %31 ]
  %13 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 %12, i32 0, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %11
  %17 = load i8, i8* %9, align 8, !range !3
  %18 = icmp eq i8 %17, 1
  br i1 %18, label %19, label %31, !prof !5

19:                                               ; preds = %16
  store i32 -1, i32* %10, align 4
  %20 = trunc i64 %12 to i32
  %21 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %1, i32 %20) #11
  %22 = icmp eq %"struct.hb_set_t::page_t"* %21, null
  br i1 %22, label %31, label %23, !prof !2

23:                                               ; preds = %19
  %24 = and i64 %12, 63
  %25 = shl i64 1, %24
  %26 = lshr i64 %12, 6
  %27 = and i64 %26, 7
  %28 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %21, i64 0, i32 0, i32 0, i64 %27
  %29 = load i64, i64* %28, align 8
  %30 = or i64 %29, %25
  store i64 %30, i64* %28, align 8
  br label %31

31:                                               ; preds = %23, %19, %16, %11
  %32 = add nuw nsw i64 %12, 1
  %33 = icmp eq i64 %32, 256
  br i1 %33, label %120, label %11

34:                                               ; preds = %3
  %35 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableFormat4"*
  %36 = bitcast %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %38 = bitcast [256 x %"struct.OT::IntType.14"]* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #11
  %41 = lshr i16 %40, 1
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i64 0, i32 5
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8
  %45 = bitcast %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4 to %"struct.OT::IntType.14"**
  store %"struct.OT::IntType.14"* %44, %"struct.OT::IntType.14"** %45, align 8
  %46 = zext i16 %41 to i64
  %47 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %35, i64 0, i32 7, i32 0, i64 %46
  %48 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %47, i64 1
  %49 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i64 0, i32 1
  store %"struct.OT::IntType.0"* %48, %"struct.OT::IntType.0"** %49, align 8
  %50 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %48, i64 %46
  %51 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i64 0, i32 2
  store %"struct.OT::IntType.0"* %50, %"struct.OT::IntType.0"** %51, align 8
  %52 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %50, i64 %46
  %53 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i64 0, i32 3
  store %"struct.OT::IntType.0"* %52, %"struct.OT::IntType.0"** %53, align 8
  %54 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %52, i64 %46
  %55 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i64 0, i32 4
  store %"struct.OT::IntType.0"* %54, %"struct.OT::IntType.0"** %55, align 8
  %56 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 1
  %57 = bitcast %"struct.OT::IntType.0"* %56 to i16*
  %58 = load i16, i16* %57, align 1
  %59 = tail call i16 @llvm.bswap.i16(i16 %58) #11
  %60 = zext i16 %59 to i32
  %61 = shl nuw nsw i32 %42, 3
  %62 = sub nuw nsw i32 -16, %61
  %63 = add nsw i32 %62, %60
  %64 = lshr i32 %63, 1
  %65 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i64 0, i32 6
  store i32 %64, i32* %65, align 4
  call void @_ZNK2OT19CmapSubtableFormat413accelerator_t16collect_unicodesEP8hb_set_t(%"struct.OT::CmapSubtableFormat4::accelerator_t"* nonnull %4, %struct.hb_set_t* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #11
  br label %120

66:                                               ; preds = %3
  %67 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableTrimmed"*
  %68 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 2
  %69 = bitcast %"struct.OT::IntType.14"* %68 to i16*
  %70 = load i16, i16* %69, align 1
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %120, label %72

72:                                               ; preds = %66
  %73 = tail call i16 @llvm.bswap.i16(i16 %70) #11
  %74 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %75 = bitcast [256 x %"struct.OT::IntType.14"]* %74 to i16*
  %76 = load i16, i16* %75, align 1
  %77 = tail call i16 @llvm.bswap.i16(i16 %76) #11
  %78 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 1
  %79 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 2
  %80 = zext i16 %77 to i64
  %81 = zext i16 %73 to i64
  br label %82

82:                                               ; preds = %112, %72
  %83 = phi i16 [ %70, %72 ], [ %113, %112 ]
  %84 = phi i64 [ 0, %72 ], [ %110, %112 ]
  %85 = tail call i16 @llvm.bswap.i16(i16 %83) #11
  %86 = zext i16 %85 to i64
  %87 = icmp ult i64 %84, %86
  %88 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed", %"struct.OT::CmapSubtableTrimmed"* %67, i64 0, i32 4, i32 1, i64 %84
  %89 = bitcast %"struct.OT::HBGlyphID"* %88 to i16*
  %90 = select i1 %87, i16* %89, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !4
  %91 = load i16, i16* %90, align 1
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %109, label %93

93:                                               ; preds = %82
  %94 = load i8, i8* %78, align 8, !range !3
  %95 = icmp eq i8 %94, 1
  br i1 %95, label %96, label %109, !prof !5

96:                                               ; preds = %93
  %97 = add nuw nsw i64 %84, %80
  store i32 -1, i32* %79, align 4
  %98 = trunc i64 %97 to i32
  %99 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %1, i32 %98) #11
  %100 = icmp eq %"struct.hb_set_t::page_t"* %99, null
  br i1 %100, label %109, label %101, !prof !2

101:                                              ; preds = %96
  %102 = and i64 %97, 63
  %103 = shl i64 1, %102
  %104 = lshr i64 %97, 6
  %105 = and i64 %104, 7
  %106 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %99, i64 0, i32 0, i32 0, i64 %105
  %107 = load i64, i64* %106, align 8
  %108 = or i64 %107, %103
  store i64 %108, i64* %106, align 8
  br label %109

109:                                              ; preds = %101, %96, %93, %82
  %110 = add nuw nsw i64 %84, 1
  %111 = icmp ult i64 %110, %81
  br i1 %111, label %112, label %120

112:                                              ; preds = %109
  %113 = load i16, i16* %69, align 1
  br label %82

114:                                              ; preds = %3
  %115 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableTrimmed.17"*
  tail call void @_ZNK2OT19CmapSubtableTrimmedINS_7IntTypeIjLj4EEEE16collect_unicodesEP8hb_set_t(%"struct.OT::CmapSubtableTrimmed.17"* %115, %struct.hb_set_t* %1)
  br label %120

116:                                              ; preds = %3
  %117 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableLongSegmented"*
  tail call void @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE16collect_unicodesEP8hb_set_tj(%"struct.OT::CmapSubtableLongSegmented"* %117, %struct.hb_set_t* %1, i32 %2)
  br label %120

118:                                              ; preds = %3
  %119 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableLongSegmented.21"*
  tail call void @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat13EE16collect_unicodesEP8hb_set_tj(%"struct.OT::CmapSubtableLongSegmented.21"* %119, %struct.hb_set_t* %1, i32 %2)
  br label %120

120:                                              ; preds = %109, %31, %66, %3, %118, %116, %114, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT19CmapSubtableTrimmedINS_7IntTypeIjLj4EEEE16collect_unicodesEP8hb_set_t(%"struct.OT::CmapSubtableTrimmed.17"*, %struct.hb_set_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = shl nuw i32 %5, 24
  %7 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 3, i32 0, i32 0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 16
  %11 = or i32 %10, %6
  %12 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 3, i32 0, i32 0, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw nsw i32 %14, 8
  %16 = or i32 %11, %15
  %17 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 3, i32 0, i32 0, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = or i32 %16, %19
  %21 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw i32 %23, 24
  %25 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 16
  %29 = or i32 %28, %24
  %30 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 8
  %34 = or i32 %29, %33
  %35 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i64 3
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = or i32 %34, %37
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %2
  %41 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 1
  %42 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 2
  %43 = zext i32 %38 to i64
  br label %45

44:                                               ; preds = %87, %2
  ret void

45:                                               ; preds = %90, %40
  %46 = phi i8 [ %36, %40 ], [ %94, %90 ]
  %47 = phi i8 [ %31, %40 ], [ %93, %90 ]
  %48 = phi i8 [ %26, %40 ], [ %92, %90 ]
  %49 = phi i8 [ %22, %40 ], [ %91, %90 ]
  %50 = phi i64 [ 0, %40 ], [ %88, %90 ]
  %51 = zext i8 %49 to i64
  %52 = shl nuw nsw i64 %51, 24
  %53 = zext i8 %48 to i64
  %54 = shl nuw nsw i64 %53, 16
  %55 = or i64 %54, %52
  %56 = zext i8 %47 to i64
  %57 = shl nuw nsw i64 %56, 8
  %58 = or i64 %55, %57
  %59 = zext i8 %46 to i64
  %60 = or i64 %58, %59
  %61 = icmp ugt i64 %60, %50
  %62 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %0, i64 0, i32 4, i32 1, i64 %50
  %63 = bitcast %"struct.OT::HBGlyphID"* %62 to i16*
  %64 = select i1 %61, i16* %63, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !4
  %65 = load i16, i16* %64, align 1
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %87, label %67

67:                                               ; preds = %45
  %68 = trunc i64 %50 to i32
  %69 = add i32 %20, %68
  %70 = load i8, i8* %41, align 8, !range !3
  %71 = icmp ne i8 %70, 1
  %72 = icmp eq i32 %69, -1
  %73 = or i1 %72, %71
  br i1 %73, label %87, label %74, !prof !7

74:                                               ; preds = %67
  store i32 -1, i32* %42, align 4
  %75 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %1, i32 %69) #11
  %76 = icmp eq %"struct.hb_set_t::page_t"* %75, null
  br i1 %76, label %87, label %77, !prof !2

77:                                               ; preds = %74
  %78 = and i32 %69, 63
  %79 = zext i32 %78 to i64
  %80 = shl i64 1, %79
  %81 = lshr i32 %69, 6
  %82 = and i32 %81, 7
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %75, i64 0, i32 0, i32 0, i64 %83
  %85 = load i64, i64* %84, align 8
  %86 = or i64 %85, %80
  store i64 %86, i64* %84, align 8
  br label %87

87:                                               ; preds = %77, %74, %67, %45
  %88 = add nuw nsw i64 %50, 1
  %89 = icmp eq i64 %88, %43
  br i1 %89, label %44, label %90

90:                                               ; preds = %87
  %91 = load i8, i8* %21, align 1
  %92 = load i8, i8* %25, align 1
  %93 = load i8, i8* %30, align 1
  %94 = load i8, i8* %35, align 1
  br label %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE16collect_unicodesEP8hb_set_tj(%"struct.OT::CmapSubtableLongSegmented"*, %struct.hb_set_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %122, %3
  ret void

24:                                               ; preds = %3, %122
  %25 = phi i8 [ %123, %122 ], [ %19, %3 ]
  %26 = phi i8 [ %124, %122 ], [ %14, %3 ]
  %27 = phi i8 [ %125, %122 ], [ %9, %3 ]
  %28 = phi i8 [ %126, %122 ], [ %5, %3 ]
  %29 = phi i64 [ %127, %122 ], [ 0, %3 ]
  %30 = zext i8 %28 to i64
  %31 = shl nuw nsw i64 %30, 24
  %32 = zext i8 %27 to i64
  %33 = shl nuw nsw i64 %32, 16
  %34 = or i64 %33, %31
  %35 = zext i8 %26 to i64
  %36 = shl nuw nsw i64 %35, 8
  %37 = or i64 %34, %36
  %38 = zext i8 %25 to i64
  %39 = or i64 %37, %38
  %40 = icmp ugt i64 %39, %29
  %41 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 1, i64 %29
  %42 = select i1 %40, %"struct.OT::CmapSubtableLongGroup"* %41, %"struct.OT::CmapSubtableLongGroup"* bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), !prof !4
  %43 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 %45, 24
  %47 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 16
  %51 = or i32 %50, %46
  %52 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl nuw nsw i32 %54, 8
  %56 = or i32 %51, %55
  %57 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = or i32 %56, %59
  %61 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw i32 %63, 24
  %65 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 16
  %69 = or i32 %68, %64
  %70 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 8
  %74 = or i32 %69, %73
  %75 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = or i32 %74, %77
  %79 = icmp ult i32 %78, 1114111
  %80 = select i1 %79, i32 %78, i32 1114111
  %81 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw i32 %83, 24
  %85 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 16
  %89 = or i32 %88, %84
  %90 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 2
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 8
  %94 = or i32 %89, %93
  %95 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 3
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = or i32 %94, %97
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %24
  %101 = icmp ugt i32 %60, %78
  %102 = icmp eq i32 %80, %60
  %103 = or i1 %101, %102
  br i1 %103, label %122, label %104, !prof !6

104:                                              ; preds = %100
  %105 = add i32 %60, 1
  br label %106

106:                                              ; preds = %24, %104
  %107 = phi i32 [ %60, %24 ], [ %105, %104 ]
  %108 = phi i32 [ %98, %24 ], [ 1, %104 ]
  %109 = icmp ult i32 %108, %2
  br i1 %109, label %110, label %122, !prof !4

110:                                              ; preds = %106
  %111 = sub i32 %80, %107
  %112 = add i32 %111, %108
  %113 = icmp ult i32 %112, %2
  %114 = add i32 %107, %2
  %115 = sub i32 %114, %108
  %116 = select i1 %113, i32 %80, i32 %115, !prof !4
  %117 = tail call zeroext i1 @_ZN8hb_set_t9add_rangeEjj(%struct.hb_set_t* %1, i32 %107, i32 %116)
  %118 = load i8, i8* %4, align 1
  %119 = load i8, i8* %8, align 1
  %120 = load i8, i8* %13, align 1
  %121 = load i8, i8* %18, align 1
  br label %122

122:                                              ; preds = %100, %106, %110
  %123 = phi i8 [ %25, %100 ], [ %25, %106 ], [ %121, %110 ]
  %124 = phi i8 [ %26, %100 ], [ %26, %106 ], [ %120, %110 ]
  %125 = phi i8 [ %27, %100 ], [ %27, %106 ], [ %119, %110 ]
  %126 = phi i8 [ %28, %100 ], [ %28, %106 ], [ %118, %110 ]
  %127 = add nuw nsw i64 %29, 1
  %128 = zext i8 %126 to i64
  %129 = shl nuw nsw i64 %128, 24
  %130 = zext i8 %125 to i64
  %131 = shl nuw nsw i64 %130, 16
  %132 = or i64 %131, %129
  %133 = zext i8 %124 to i64
  %134 = shl nuw nsw i64 %133, 8
  %135 = or i64 %132, %134
  %136 = zext i8 %123 to i64
  %137 = or i64 %135, %136
  %138 = icmp ult i64 %127, %137
  br i1 %138, label %24, label %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat13EE16collect_unicodesEP8hb_set_tj(%"struct.OT::CmapSubtableLongSegmented.21"*, %struct.hb_set_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented.21", %"struct.OT::CmapSubtableLongSegmented.21"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented.21", %"struct.OT::CmapSubtableLongSegmented.21"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented.21", %"struct.OT::CmapSubtableLongSegmented.21"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented.21", %"struct.OT::CmapSubtableLongSegmented.21"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %114, %3
  ret void

24:                                               ; preds = %3, %114
  %25 = phi i8 [ %115, %114 ], [ %19, %3 ]
  %26 = phi i8 [ %116, %114 ], [ %14, %3 ]
  %27 = phi i8 [ %117, %114 ], [ %9, %3 ]
  %28 = phi i8 [ %118, %114 ], [ %5, %3 ]
  %29 = phi i64 [ %119, %114 ], [ 0, %3 ]
  %30 = zext i8 %28 to i64
  %31 = shl nuw nsw i64 %30, 24
  %32 = zext i8 %27 to i64
  %33 = shl nuw nsw i64 %32, 16
  %34 = or i64 %33, %31
  %35 = zext i8 %26 to i64
  %36 = shl nuw nsw i64 %35, 8
  %37 = or i64 %34, %36
  %38 = zext i8 %25 to i64
  %39 = or i64 %37, %38
  %40 = icmp ugt i64 %39, %29
  %41 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented.21", %"struct.OT::CmapSubtableLongSegmented.21"* %0, i64 0, i32 4, i32 0, i32 1, i64 %29
  %42 = select i1 %40, %"struct.OT::CmapSubtableLongGroup"* %41, %"struct.OT::CmapSubtableLongGroup"* bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), !prof !4
  %43 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 %45, 24
  %47 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 16
  %51 = or i32 %50, %46
  %52 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl nuw nsw i32 %54, 8
  %56 = or i32 %51, %55
  %57 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 0, i32 0, i32 0, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = or i32 %56, %59
  %61 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw i32 %63, 24
  %65 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 16
  %69 = or i32 %68, %64
  %70 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 8
  %74 = or i32 %69, %73
  %75 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 1, i32 0, i32 0, i64 3
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = or i32 %74, %77
  %79 = icmp ult i32 %78, 1114111
  %80 = select i1 %79, i32 %78, i32 1114111
  %81 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw i32 %83, 24
  %85 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 16
  %89 = or i32 %88, %84
  %90 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 2
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 8
  %94 = or i32 %89, %93
  %95 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %42, i64 0, i32 2, i32 0, i32 0, i64 3
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = or i32 %94, %97
  %99 = icmp ne i32 %98, 0
  %100 = icmp ult i32 %98, %2
  %101 = and i1 %99, %100
  br i1 %101, label %102, label %114, !prof !8

102:                                              ; preds = %24
  %103 = sub i32 %80, %60
  %104 = add i32 %103, %98
  %105 = icmp ult i32 %104, %2
  %106 = add i32 %60, %2
  %107 = sub i32 %106, %98
  %108 = select i1 %105, i32 %80, i32 %107, !prof !4
  %109 = tail call zeroext i1 @_ZN8hb_set_t9add_rangeEjj(%struct.hb_set_t* %1, i32 %60, i32 %108)
  %110 = load i8, i8* %4, align 1
  %111 = load i8, i8* %8, align 1
  %112 = load i8, i8* %13, align 1
  %113 = load i8, i8* %18, align 1
  br label %114

114:                                              ; preds = %24, %102
  %115 = phi i8 [ %113, %102 ], [ %25, %24 ]
  %116 = phi i8 [ %112, %102 ], [ %26, %24 ]
  %117 = phi i8 [ %111, %102 ], [ %27, %24 ]
  %118 = phi i8 [ %110, %102 ], [ %28, %24 ]
  %119 = add nuw nsw i64 %29, 1
  %120 = zext i8 %118 to i64
  %121 = shl nuw nsw i64 %120, 24
  %122 = zext i8 %117 to i64
  %123 = shl nuw nsw i64 %122, 16
  %124 = or i64 %123, %121
  %125 = zext i8 %116 to i64
  %126 = shl nuw nsw i64 %125, 8
  %127 = or i64 %124, %126
  %128 = zext i8 %115 to i64
  %129 = or i64 %127, %128
  %130 = icmp ult i64 %119, %129
  br i1 %130, label %24, label %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = lshr i32 %1, 9
  %4 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 2
  %7 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %8 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = add nsw i32 %9, -1
  br label %13

13:                                               ; preds = %29, %11
  %14 = phi i32 [ %12, %11 ], [ %31, %29 ]
  %15 = phi i32 [ 0, %11 ], [ %30, %29 ]
  %16 = add i32 %15, %14
  %17 = lshr i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %7, i64 %18, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %3, %20
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %13
  %24 = add nsw i32 %17, -1
  br label %29

25:                                               ; preds = %13
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %199, label %27

27:                                               ; preds = %25
  %28 = add nuw nsw i32 %17, 1
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i32 [ %15, %23 ], [ %28, %27 ]
  %31 = phi i32 [ %24, %23 ], [ %14, %27 ]
  %32 = icmp sgt i32 %30, %31
  br i1 %32, label %33, label %13

33:                                               ; preds = %29, %2
  %34 = phi i32 [ 0, %2 ], [ %30, %29 ]
  %35 = add i32 %5, 1
  %36 = icmp eq i32 %5, -1
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 1
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %222, !prof !4

41:                                               ; preds = %33, %37
  %42 = icmp sgt i32 %35, 0
  %43 = select i1 %42, i32 %35, i32 0
  %44 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %159, label %47, !prof !2

47:                                               ; preds = %41
  %48 = icmp ult i32 %45, %43
  br i1 %48, label %49, label %70, !prof !2

49:                                               ; preds = %47, %49
  %50 = phi i32 [ %53, %49 ], [ %45, %47 ]
  %51 = lshr i32 %50, 1
  %52 = add i32 %50, 8
  %53 = add i32 %52, %51
  %54 = icmp ugt i32 %53, %43
  br i1 %54, label %55, label %49

55:                                               ; preds = %49
  %56 = icmp uge i32 %53, %45
  %57 = icmp ult i32 %53, 67108863
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %67, !prof !5

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %61 = bitcast %"struct.hb_set_t::page_t"** %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = zext i32 %53 to i64
  %64 = shl nuw nsw i64 %63, 6
  %65 = tail call i8* @realloc(i8* %62, i64 %64) #11
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %59, %55
  store i32 -1, i32* %44, align 8
  br label %159

68:                                               ; preds = %59
  store i8* %65, i8** %61, align 8
  store i32 %53, i32* %44, align 8
  %69 = load i32, i32* %4, align 4
  br label %70

70:                                               ; preds = %68, %47
  %71 = phi i32 [ %69, %68 ], [ %5, %47 ]
  %72 = icmp ugt i32 %43, %71
  br i1 %72, label %73, label %82

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %75 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %74, align 8
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %75, i64 %76
  %78 = bitcast %"struct.hb_set_t::page_t"* %77 to i8*
  %79 = sub i32 %43, %71
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %81, i1 false) #11
  br label %82

82:                                               ; preds = %73, %70
  store i32 %43, i32* %4, align 4
  %83 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 3, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %118, label %86, !prof !2

86:                                               ; preds = %82
  %87 = icmp ult i32 %84, %43
  br i1 %87, label %88, label %107, !prof !2

88:                                               ; preds = %86, %88
  %89 = phi i32 [ %92, %88 ], [ %84, %86 ]
  %90 = lshr i32 %89, 1
  %91 = add i32 %89, 8
  %92 = add i32 %91, %90
  %93 = icmp ugt i32 %92, %43
  br i1 %93, label %94, label %88

94:                                               ; preds = %88
  %95 = icmp uge i32 %92, %84
  %96 = icmp ult i32 %92, 536870911
  %97 = and i1 %95, %96
  br i1 %97, label %98, label %105, !prof !5

98:                                               ; preds = %94
  %99 = bitcast %"struct.hb_set_t::page_map_t"** %6 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = zext i32 %92 to i64
  %102 = shl nuw nsw i64 %101, 3
  %103 = tail call i8* @realloc(i8* %100, i64 %102) #11
  %104 = icmp eq i8* %103, null
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %98, %94
  store i32 -1, i32* %83, align 8
  br label %118

106:                                              ; preds = %98
  store i8* %103, i8** %99, align 8
  store i32 %92, i32* %83, align 8
  br label %107

107:                                              ; preds = %106, %86
  %108 = load i32, i32* %8, align 4
  %109 = icmp ugt i32 %43, %108
  br i1 %109, label %110, label %161

110:                                              ; preds = %107
  %111 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %112 = zext i32 %108 to i64
  %113 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %111, i64 %112
  %114 = bitcast %"struct.hb_set_t::page_map_t"* %113 to i8*
  %115 = sub i32 %43, %108
  %116 = zext i32 %115 to i64
  %117 = shl nuw nsw i64 %116, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 %117, i1 false) #11
  br label %161

118:                                              ; preds = %82, %105
  %119 = load i32, i32* %44, align 8
  %120 = load i32, i32* %8, align 4
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  %123 = icmp slt i32 %119, 0
  br i1 %123, label %159, label %124, !prof !2

124:                                              ; preds = %118
  %125 = icmp ult i32 %119, %122
  br i1 %125, label %126, label %146, !prof !2

126:                                              ; preds = %124, %126
  %127 = phi i32 [ %130, %126 ], [ %119, %124 ]
  %128 = lshr i32 %127, 1
  %129 = add i32 %127, 8
  %130 = add i32 %129, %128
  %131 = icmp ugt i32 %130, %122
  br i1 %131, label %132, label %126

132:                                              ; preds = %126
  %133 = icmp uge i32 %130, %119
  %134 = icmp ult i32 %130, 67108863
  %135 = and i1 %133, %134
  br i1 %135, label %136, label %144, !prof !5

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %138 = bitcast %"struct.hb_set_t::page_t"** %137 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = zext i32 %130 to i64
  %141 = shl nuw nsw i64 %140, 6
  %142 = tail call i8* @realloc(i8* %139, i64 %141) #11
  %143 = icmp eq i8* %142, null
  br i1 %143, label %144, label %145, !prof !2

144:                                              ; preds = %136, %132
  store i32 -1, i32* %44, align 8
  br label %159

145:                                              ; preds = %136
  store i8* %142, i8** %138, align 8
  store i32 %130, i32* %44, align 8
  br label %146

146:                                              ; preds = %145, %124
  %147 = load i32, i32* %4, align 4
  %148 = icmp ugt i32 %122, %147
  br i1 %148, label %149, label %158

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %151 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %150, align 8
  %152 = zext i32 %147 to i64
  %153 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %151, i64 %152
  %154 = bitcast %"struct.hb_set_t::page_t"* %153 to i8*
  %155 = sub i32 %122, %147
  %156 = zext i32 %155 to i64
  %157 = shl nuw nsw i64 %156, 6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 %157, i1 false) #11
  br label %158

158:                                              ; preds = %149, %146
  store i32 %122, i32* %4, align 4
  br label %159

159:                                              ; preds = %67, %41, %118, %144, %158
  %160 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 1
  store i8 0, i8* %160, align 8
  br label %222

161:                                              ; preds = %107, %110
  store i32 %43, i32* %8, align 4
  %162 = load i32, i32* %4, align 4
  %163 = icmp ugt i32 %162, %5
  br i1 %163, label %165, label %164, !prof !4

164:                                              ; preds = %161
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 64, i1 false) #11
  br label %170

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %167 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %166, align 8
  %168 = zext i32 %5 to i64
  %169 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %167, i64 %168
  br label %170

170:                                              ; preds = %164, %165
  %171 = phi %"struct.hb_set_t::page_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_t"*), %164 ], [ %169, %165 ]
  %172 = bitcast %"struct.hb_set_t::page_t"* %171 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 64, i1 false) #11
  %173 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %174 = zext i32 %34 to i64
  %175 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %173, i64 %174
  %176 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %175, i64 1
  %177 = bitcast %"struct.hb_set_t::page_map_t"* %176 to i8*
  %178 = bitcast %"struct.hb_set_t::page_map_t"* %175 to i8*
  %179 = load i32, i32* %8, align 4
  %180 = xor i32 %34, 536870911
  %181 = add i32 %179, %180
  %182 = shl i32 %181, 3
  %183 = zext i32 %182 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %178, i64 %183, i1 false)
  %184 = load i32, i32* %8, align 4
  %185 = icmp ugt i32 %184, %34
  br i1 %185, label %188, label %186, !prof !4

186:                                              ; preds = %170
  %187 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %187, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %191

188:                                              ; preds = %170
  %189 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %190 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %189, i64 %174
  br label %191

191:                                              ; preds = %186, %188
  %192 = phi %"struct.hb_set_t::page_map_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_map_t"*), %186 ], [ %190, %188 ]
  %193 = bitcast %"struct.hb_set_t::page_map_t"* %192 to i64*
  %194 = zext i32 %5 to i64
  %195 = shl nuw i64 %194, 32
  %196 = zext i32 %3 to i64
  %197 = or i64 %195, %196
  store i64 %197, i64* %193, align 4
  %198 = load i32, i32* %8, align 4
  br label %199

199:                                              ; preds = %25, %191
  %200 = phi i32 [ %198, %191 ], [ %9, %25 ]
  %201 = phi i32 [ %34, %191 ], [ %17, %25 ]
  %202 = icmp ugt i32 %200, %201
  br i1 %202, label %207, label %203, !prof !4

203:                                              ; preds = %199
  %204 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %204, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %205 = lshr i64 %204, 32
  %206 = trunc i64 %205 to i32
  br label %212

207:                                              ; preds = %199
  %208 = load %"struct.hb_set_t::page_map_t"*, %"struct.hb_set_t::page_map_t"** %6, align 8
  %209 = zext i32 %201 to i64
  %210 = getelementptr inbounds %"struct.hb_set_t::page_map_t", %"struct.hb_set_t::page_map_t"* %208, i64 %209, i32 1
  %211 = load i32, i32* %210, align 4
  br label %212

212:                                              ; preds = %203, %207
  %213 = phi i32 [ %206, %203 ], [ %211, %207 ]
  %214 = load i32, i32* %4, align 4
  %215 = icmp ugt i32 %214, %213
  br i1 %215, label %217, label %216, !prof !4

216:                                              ; preds = %212
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 64, i1 false) #11
  br label %222

217:                                              ; preds = %212
  %218 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 4, i32 2
  %219 = load %"struct.hb_set_t::page_t"*, %"struct.hb_set_t::page_t"** %218, align 8
  %220 = zext i32 %213 to i64
  %221 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %219, i64 %220
  br label %222

222:                                              ; preds = %37, %159, %217, %216
  %223 = phi %"struct.hb_set_t::page_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_set_t::page_t"*), %216 ], [ %221, %217 ], [ null, %159 ], [ null, %37 ]
  ret %"struct.hb_set_t::page_t"* %223
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT19CmapSubtableFormat413accelerator_t16collect_unicodesEP8hb_set_t(%"struct.OT::CmapSubtableFormat4::accelerator_t"*, %struct.hb_set_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 1
  %8 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %7, align 8
  %9 = add i32 %4, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %8, i64 %10
  %12 = bitcast %"struct.OT::IntType.0"* %11 to i16*
  %13 = load i16, i16* %12, align 1
  %14 = icmp eq i16 %13, -1
  br i1 %14, label %15, label %17

15:                                               ; preds = %6
  %16 = icmp eq i32 %9, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %6, %15
  %18 = phi i32 [ %9, %15 ], [ %4, %6 ]
  %19 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 4
  %24 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 1
  %25 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 2
  %26 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 2
  %27 = zext i32 %18 to i64
  br label %29

28:                                               ; preds = %136, %2, %15
  ret void

29:                                               ; preds = %136, %17
  %30 = phi i64 [ 0, %17 ], [ %137, %136 ]
  %31 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %19, align 8
  %32 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %31, i64 %30
  %33 = bitcast %"struct.OT::IntType.0"* %32 to i16*
  %34 = load i16, i16* %33, align 1
  %35 = tail call i16 @llvm.bswap.i16(i16 %34) #11
  %36 = zext i16 %35 to i32
  %37 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %20, align 8
  %38 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %37, i64 %30
  %39 = bitcast %"struct.OT::IntType.0"* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #11
  %42 = zext i16 %41 to i32
  %43 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %21, align 8
  %44 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %43, i64 %30
  %45 = bitcast %"struct.OT::IntType.0"* %44 to i16*
  %46 = load i16, i16* %45, align 1
  %47 = icmp eq i16 %46, 0
  %48 = icmp ugt i16 %35, %41
  br i1 %47, label %64, label %49

49:                                               ; preds = %29
  br i1 %48, label %136, label %50

50:                                               ; preds = %49
  %51 = tail call i16 @llvm.bswap.i16(i16 %46) #11
  %52 = lshr i16 %51, 1
  %53 = zext i16 %52 to i32
  %54 = trunc i64 %30 to i32
  %55 = add i32 %54, %53
  %56 = tail call i16 @llvm.bswap.i16(i16 %34) #11
  %57 = zext i16 %56 to i32
  %58 = load i32, i32* %3, align 8
  %59 = add i32 %55, %36
  %60 = sub i32 %59, %58
  %61 = sub i32 %60, %57
  %62 = load i32, i32* %22, align 4
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %95, label %136, !prof !4

64:                                               ; preds = %29
  br i1 %48, label %136, label %65

65:                                               ; preds = %64, %92
  %66 = phi i32 [ %93, %92 ], [ %36, %64 ]
  %67 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %26, align 8
  %68 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %67, i64 %30
  %69 = bitcast %"struct.OT::IntType.0"* %68 to i16*
  %70 = load i16, i16* %69, align 1
  %71 = tail call i16 @llvm.bswap.i16(i16 %70) #11
  %72 = zext i16 %71 to i32
  %73 = add nuw i32 %66, %72
  %74 = and i32 %73, 65535
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !2

76:                                               ; preds = %65
  %77 = load i8, i8* %24, align 8, !range !3
  %78 = icmp eq i8 %77, 1
  br i1 %78, label %79, label %92, !prof !5

79:                                               ; preds = %76
  store i32 -1, i32* %25, align 4
  %80 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %1, i32 %66) #11
  %81 = icmp eq %"struct.hb_set_t::page_t"* %80, null
  br i1 %81, label %92, label %82, !prof !2

82:                                               ; preds = %79
  %83 = and i32 %66, 63
  %84 = zext i32 %83 to i64
  %85 = shl i64 1, %84
  %86 = lshr i32 %66, 6
  %87 = and i32 %86, 7
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %80, i64 0, i32 0, i32 0, i64 %88
  %90 = load i64, i64* %89, align 8
  %91 = or i64 %90, %85
  store i64 %91, i64* %89, align 8
  br label %92

92:                                               ; preds = %76, %82, %79, %65
  %93 = add nuw nsw i32 %66, 1
  %94 = icmp eq i32 %66, %42
  br i1 %94, label %136, label %65

95:                                               ; preds = %50, %122
  %96 = phi i32 [ %133, %122 ], [ %61, %50 ]
  %97 = phi i32 [ %123, %122 ], [ %36, %50 ]
  %98 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %23, align 8
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %98, i64 %99
  %101 = bitcast %"struct.OT::IntType.0"* %100 to i16*
  %102 = load i16, i16* %101, align 1
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %120, label %104, !prof !2

104:                                              ; preds = %95
  %105 = load i8, i8* %24, align 8, !range !3
  %106 = icmp eq i8 %105, 1
  br i1 %106, label %107, label %120, !prof !5

107:                                              ; preds = %104
  store i32 -1, i32* %25, align 4
  %108 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %1, i32 %97) #11
  %109 = icmp eq %"struct.hb_set_t::page_t"* %108, null
  br i1 %109, label %120, label %110, !prof !2

110:                                              ; preds = %107
  %111 = and i32 %97, 63
  %112 = zext i32 %111 to i64
  %113 = shl i64 1, %112
  %114 = lshr i32 %97, 6
  %115 = and i32 %114, 7
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %108, i64 0, i32 0, i32 0, i64 %116
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %113
  store i64 %119, i64* %117, align 8
  br label %120

120:                                              ; preds = %104, %95, %107, %110
  %121 = icmp eq i32 %97, %42
  br i1 %121, label %136, label %122

122:                                              ; preds = %120
  %123 = add nuw nsw i32 %97, 1
  %124 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %19, align 8
  %125 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %124, i64 %30
  %126 = bitcast %"struct.OT::IntType.0"* %125 to i16*
  %127 = load i16, i16* %126, align 1
  %128 = tail call i16 @llvm.bswap.i16(i16 %127) #11
  %129 = zext i16 %128 to i32
  %130 = load i32, i32* %3, align 8
  %131 = add i32 %55, %123
  %132 = sub i32 %131, %130
  %133 = sub i32 %132, %129
  %134 = load i32, i32* %22, align 4
  %135 = icmp ult i32 %133, %134
  br i1 %135, label %95, label %136, !prof !4

136:                                              ; preds = %122, %120, %92, %50, %49, %64
  %137 = add nuw nsw i64 %30, 1
  %138 = icmp eq i64 %137, %27
  br i1 %138, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8hb_set_t9add_rangeEjj(%struct.hb_set_t*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %7, label %118, !prof !4

7:                                                ; preds = %3
  %8 = icmp ugt i32 %1, %2
  %9 = icmp eq i32 %1, -1
  %10 = or i1 %9, %8
  %11 = icmp eq i32 %2, -1
  %12 = or i1 %11, %10
  br i1 %12, label %118, label %13, !prof !2

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %0, i64 0, i32 2
  store i32 -1, i32* %14, align 4
  %15 = lshr i32 %1, 9
  %16 = lshr i32 %2, 9
  %17 = icmp eq i32 %15, %16
  %18 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %0, i32 %1)
  %19 = icmp eq %"struct.hb_set_t::page_t"* %18, null
  br i1 %17, label %20, label %58

20:                                               ; preds = %13
  br i1 %19, label %118, label %21, !prof !2

21:                                               ; preds = %20
  %22 = lshr i32 %1, 6
  %23 = and i32 %22, 7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %18, i64 0, i32 0, i32 0, i64 %24
  %26 = lshr i32 %2, 6
  %27 = and i32 %26, 7
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %18, i64 0, i32 0, i32 0, i64 %28
  %30 = icmp eq i32 %23, %27
  br i1 %30, label %31, label %41

31:                                               ; preds = %21
  %32 = and i32 %2, 63
  %33 = zext i32 %32 to i64
  %34 = shl i64 2, %33
  %35 = and i32 %1, 63
  %36 = zext i32 %35 to i64
  %37 = shl i64 1, %36
  %38 = sub i64 %34, %37
  %39 = load i64, i64* %25, align 8
  %40 = or i64 %39, %38
  store i64 %40, i64* %25, align 8
  br label %118

41:                                               ; preds = %21
  %42 = and i32 %1, 63
  %43 = zext i32 %42 to i64
  %44 = shl i64 -1, %43
  %45 = load i64, i64* %25, align 8
  %46 = or i64 %45, %44
  store i64 %46, i64* %25, align 8
  %47 = getelementptr inbounds i64, i64* %25, i64 1
  %48 = bitcast i64* %47 to i8*
  %49 = ptrtoint i64* %29 to i64
  %50 = ptrtoint i64* %47 to i64
  %51 = sub i64 %49, %50
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 -1, i64 %51, i1 false) #11
  %52 = and i32 %2, 63
  %53 = zext i32 %52 to i64
  %54 = shl i64 2, %53
  %55 = add i64 %54, -1
  %56 = load i64, i64* %29, align 8
  %57 = or i64 %56, %55
  store i64 %57, i64* %29, align 8
  br label %118

58:                                               ; preds = %13
  br i1 %19, label %118, label %59, !prof !2

59:                                               ; preds = %58
  %60 = lshr i32 %1, 6
  %61 = and i32 %60, 7
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %18, i64 0, i32 0, i32 0, i64 %62
  %64 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %18, i64 0, i32 0, i32 0, i64 7
  %65 = icmp eq i32 %61, 7
  %66 = and i32 %1, 63
  %67 = zext i32 %66 to i64
  %68 = shl i64 -1, %67
  %69 = load i64, i64* %63, align 8
  %70 = or i64 %69, %68
  store i64 %70, i64* %63, align 8
  br i1 %65, label %77, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds i64, i64* %63, i64 1
  %73 = bitcast i64* %72 to i8*
  %74 = ptrtoint i64* %64 to i64
  %75 = ptrtoint i64* %72 to i64
  %76 = sub i64 %74, %75
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 -1, i64 %76, i1 false) #11
  store i64 -1, i64* %64, align 8
  br label %77

77:                                               ; preds = %59, %71
  %78 = add nuw nsw i32 %15, 1
  %79 = icmp ult i32 %78, %16
  br i1 %79, label %80, label %89

80:                                               ; preds = %77, %85
  %81 = phi i32 [ %87, %85 ], [ %78, %77 ]
  %82 = shl i32 %81, 9
  %83 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %0, i32 %82)
  %84 = icmp eq %"struct.hb_set_t::page_t"* %83, null
  br i1 %84, label %118, label %85, !prof !2

85:                                               ; preds = %80
  %86 = bitcast %"struct.hb_set_t::page_t"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -1, i64 64, i1 false) #11
  %87 = add nuw i32 %81, 1
  %88 = icmp eq i32 %87, %16
  br i1 %88, label %89, label %80

89:                                               ; preds = %85, %77
  %90 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %0, i32 %2)
  %91 = icmp eq %"struct.hb_set_t::page_t"* %90, null
  br i1 %91, label %118, label %92, !prof !2

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %90, i64 0, i32 0, i32 0, i64 0
  %94 = lshr i32 %2, 6
  %95 = and i32 %94, 7
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %90, i64 0, i32 0, i32 0, i64 %96
  %98 = icmp eq i32 %95, 0
  br i1 %98, label %99, label %106

99:                                               ; preds = %92
  %100 = and i32 %2, 63
  %101 = zext i32 %100 to i64
  %102 = shl i64 2, %101
  %103 = add i64 %102, -1
  %104 = load i64, i64* %93, align 8
  %105 = or i64 %104, %103
  store i64 %105, i64* %93, align 8
  br label %118

106:                                              ; preds = %92
  store i64 -1, i64* %93, align 8
  %107 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %90, i64 0, i32 0, i32 0, i64 1
  %108 = bitcast i64* %107 to i8*
  %109 = shl nuw nsw i32 %95, 3
  %110 = zext i32 %109 to i64
  %111 = add nsw i64 %110, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 -1, i64 %111, i1 false) #11
  %112 = and i32 %2, 63
  %113 = zext i32 %112 to i64
  %114 = shl i64 2, %113
  %115 = add i64 %114, -1
  %116 = load i64, i64* %97, align 8
  %117 = or i64 %116, %115
  store i64 %117, i64* %97, align 8
  br label %118

118:                                              ; preds = %80, %106, %99, %41, %31, %20, %89, %58, %7, %3
  %119 = phi i1 [ true, %3 ], [ false, %7 ], [ false, %20 ], [ false, %89 ], [ false, %58 ], [ true, %31 ], [ true, %41 ], [ true, %99 ], [ true, %106 ], [ false, %80 ]
  ret i1 %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2OT23VariationSelectorRecord16collect_unicodesEP8hb_set_tPKv(%"struct.OT::VariationSelectorRecord"*, %struct.hb_set_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %36, label %23, !prof !2

23:                                               ; preds = %3
  %24 = zext i8 %5 to i64
  %25 = shl nuw nsw i64 %24, 24
  %26 = zext i8 %9 to i64
  %27 = shl nuw nsw i64 %26, 16
  %28 = or i64 %27, %25
  %29 = zext i8 %14 to i64
  %30 = shl nuw nsw i64 %29, 8
  %31 = or i64 %28, %30
  %32 = zext i8 %19 to i64
  %33 = or i64 %31, %32
  %34 = getelementptr inbounds i8, i8* %2, i64 %33
  %35 = bitcast i8* %34 to %"struct.OT::DefaultUVS"*
  br label %36

36:                                               ; preds = %3, %23
  %37 = phi %"struct.OT::DefaultUVS"* [ %35, %23 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::DefaultUVS"*), %3 ]
  %38 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw i32 %40, 24
  %42 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 16
  %46 = or i32 %45, %41
  %47 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = or i32 %46, %50
  %52 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = or i32 %51, %54
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %83, label %57

57:                                               ; preds = %36
  %58 = zext i32 %55 to i64
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i64 [ 0, %57 ], [ %81, %59 ]
  %61 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 1, i64 %60, i32 0, i32 0, i32 0, i64 0
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 16
  %65 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 1, i64 %60, i32 0, i32 0, i32 0, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 8
  %69 = or i32 %68, %64
  %70 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 1, i64 %60, i32 0, i32 0, i32 0, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = getelementptr inbounds %"struct.OT::DefaultUVS", %"struct.OT::DefaultUVS"* %37, i64 0, i32 0, i32 0, i32 1, i64 %60, i32 1, i32 0, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = add nuw nsw i32 %73, %76
  %78 = icmp ult i32 %77, 1114111
  %79 = select i1 %78, i32 %77, i32 1114111
  %80 = tail call zeroext i1 @_ZN8hb_set_t9add_rangeEjj(%struct.hb_set_t* %1, i32 %73, i32 %79) #11
  %81 = add nuw nsw i64 %60, 1
  %82 = icmp eq i64 %81, %58
  br i1 %82, label %83, label %59

83:                                               ; preds = %59, %36
  %84 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 %86, 24
  %88 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 16
  %92 = or i32 %91, %87
  %93 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %92, %96
  %98 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = or i32 %97, %100
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %116, label %103, !prof !2

103:                                              ; preds = %83
  %104 = zext i8 %85 to i64
  %105 = shl nuw nsw i64 %104, 24
  %106 = zext i8 %89 to i64
  %107 = shl nuw nsw i64 %106, 16
  %108 = or i64 %107, %105
  %109 = zext i8 %94 to i64
  %110 = shl nuw nsw i64 %109, 8
  %111 = or i64 %108, %110
  %112 = zext i8 %99 to i64
  %113 = or i64 %111, %112
  %114 = getelementptr inbounds i8, i8* %2, i64 %113
  %115 = bitcast i8* %114 to %"struct.OT::NonDefaultUVS"*
  br label %116

116:                                              ; preds = %83, %103
  %117 = phi %"struct.OT::NonDefaultUVS"* [ %115, %103 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::NonDefaultUVS"*), %83 ]
  %118 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = shl nuw nsw i64 %120, 24
  %122 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = shl nuw nsw i64 %124, 16
  %126 = or i64 %125, %121
  %127 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i64
  %130 = shl nuw nsw i64 %129, 8
  %131 = or i64 %126, %130
  %132 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = or i64 %131, %134
  %136 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %117, i64 0, i32 0, i32 0, i32 1, i64 %135
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %186, label %138

138:                                              ; preds = %116
  %139 = getelementptr inbounds %"struct.OT::NonDefaultUVS", %"struct.OT::NonDefaultUVS"* %117, i64 0, i32 0, i32 0, i32 1, i64 0
  %140 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 1
  %141 = getelementptr inbounds %struct.hb_set_t, %struct.hb_set_t* %1, i64 0, i32 2
  br label %142

142:                                              ; preds = %176, %138
  %143 = phi %"struct.OT::UVSMapping"* [ %139, %138 ], [ %182, %176 ]
  %144 = phi i64 [ %135, %138 ], [ %180, %176 ]
  %145 = trunc i64 %144 to i32
  %146 = icmp eq i32 %145, 0
  %147 = select i1 %146, %"struct.OT::UVSMapping"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::UVSMapping"*), %"struct.OT::UVSMapping"* %143, !prof !2
  %148 = getelementptr inbounds %"struct.OT::UVSMapping", %"struct.OT::UVSMapping"* %147, i64 0, i32 0, i32 0, i32 0, i64 0
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = shl nuw nsw i32 %150, 16
  %152 = getelementptr inbounds %"struct.OT::UVSMapping", %"struct.OT::UVSMapping"* %147, i64 0, i32 0, i32 0, i32 0, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = shl nuw nsw i32 %154, 8
  %156 = or i32 %155, %151
  %157 = getelementptr inbounds %"struct.OT::UVSMapping", %"struct.OT::UVSMapping"* %147, i64 0, i32 0, i32 0, i32 0, i64 2
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = or i32 %156, %159
  %161 = load i8, i8* %140, align 8, !range !3
  %162 = icmp eq i8 %161, 1
  br i1 %162, label %163, label %176, !prof !5

163:                                              ; preds = %142
  store i32 -1, i32* %141, align 4
  %164 = tail call %"struct.hb_set_t::page_t"* @_ZN8hb_set_t15page_for_insertEj(%struct.hb_set_t* %1, i32 %160) #11
  %165 = icmp eq %"struct.hb_set_t::page_t"* %164, null
  br i1 %165, label %176, label %166, !prof !2

166:                                              ; preds = %163
  %167 = and i32 %159, 63
  %168 = zext i32 %167 to i64
  %169 = shl i64 1, %168
  %170 = lshr i32 %160, 6
  %171 = and i32 %170, 7
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds %"struct.hb_set_t::page_t", %"struct.hb_set_t::page_t"* %164, i64 0, i32 0, i32 0, i64 %172
  %174 = load i64, i64* %173, align 8
  %175 = or i64 %174, %169
  store i64 %175, i64* %173, align 8
  br label %176

176:                                              ; preds = %166, %163, %142
  %177 = icmp ne i32 %145, 0
  %178 = zext i1 %177 to i32
  %179 = sub i32 %145, %178
  %180 = zext i32 %179 to i64
  %181 = zext i1 %177 to i64
  %182 = getelementptr inbounds %"struct.OT::UVSMapping", %"struct.OT::UVSMapping"* %143, i64 %181
  %183 = icmp ne %"struct.OT::UVSMapping"* %182, %136
  %184 = icmp ne i32 %179, 0
  %185 = or i1 %183, %184
  br i1 %185, label %142, label %186

186:                                              ; preds = %176, %116
  ret void
}

declare i32 @hb_blob_get_length(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare %struct.hb_blob_t* @hb_blob_create(i8*, i32, i32, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22hb_serialize_context_tD2Ev(%struct.hb_serialize_context_t*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN22hb_serialize_context_t4finiEv(%struct.hb_serialize_context_t* %0)
  %2 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i32 -57005, i32* %2 monotonic, align 4
  %3 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 0, i32 2
  %4 = bitcast %struct.hb_atomic_ptr_t* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %struct.hb_user_data_array_t*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %6, i64 0, i32 1
  %10 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %6, i64 0, i32 0
  tail call void @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_(%struct.hb_lockable_set_t* %9, %struct.hb_mutex_t* dereferenceable(40) %10) #11
  %11 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %6, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %11) #11
  %13 = inttoptr i64 %5 to i8*
  tail call void @free(i8* %13) #11
  br label %14

14:                                               ; preds = %1, %8
  %15 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 6
  %16 = bitcast %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @free(i8* %17) #11
  store %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* null, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %15, align 8
  %18 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 2
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8
  %21 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %22 = bitcast %"struct.hb_serialize_context_t::object_t"*** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @free(i8* %23) #11
  %24 = bitcast %struct.hb_vector_t.261* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %25 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 0
  store %"struct.hb_serialize_context_t::object_t"* null, %"struct.hb_serialize_context_t::object_t"** %25, align 8
  %26 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 1
  %27 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 1, i32 2
  %30 = load %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"**, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %29, align 8
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %30, i64 %31
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %14
  %35 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %30 to i8*
  br label %52

36:                                               ; preds = %39
  %37 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %29 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %52

39:                                               ; preds = %14, %39
  %40 = phi %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** [ %50, %39 ], [ %30, %14 ]
  %41 = phi i32 [ %48, %39 ], [ %28, %14 ]
  %42 = icmp eq i32 %41, 0
  %43 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %40 to i8**
  %44 = select i1 %42, i8** bitcast ([48 x i64]* @_hb_NullPool to i8**), i8** %43, !prof !2
  %45 = load i8*, i8** %44, align 8
  tail call void @free(i8* %45) #11
  %46 = icmp ne i32 %41, 0
  %47 = zext i1 %46 to i32
  %48 = sub i32 %41, %47
  %49 = zext i1 %46 to i64
  %50 = getelementptr inbounds %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %40, i64 %49
  %51 = icmp eq %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %50, %32
  br i1 %51, label %36, label %39

52:                                               ; preds = %34, %36
  %53 = phi i8* [ %38, %36 ], [ %35, %34 ]
  tail call void @free(i8* %53) #11
  %54 = bitcast %struct.hb_vector_t.260* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22hb_serialize_context_t5resetEv(%struct.hb_serialize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 5
  store i32 0, i32* %2, align 4
  %3 = bitcast %struct.hb_serialize_context_t* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 3
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 2
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 4
  store i32 0, i32* %12, align 8
  tail call void @_ZN22hb_serialize_context_t4finiEv(%struct.hb_serialize_context_t* %0)
  %13 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  %16 = icmp sgt i32 %15, 0
  %17 = select i1 %16, i32 %15, i32 0
  %18 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %56, label %21, !prof !2

21:                                               ; preds = %1
  %22 = icmp ult i32 %19, %17
  br i1 %22, label %23, label %44, !prof !2

23:                                               ; preds = %21, %23
  %24 = phi i32 [ %27, %23 ], [ %19, %21 ]
  %25 = lshr i32 %24, 1
  %26 = add i32 %24, 8
  %27 = add i32 %26, %25
  %28 = icmp ugt i32 %27, %17
  br i1 %28, label %29, label %23

29:                                               ; preds = %23
  %30 = icmp uge i32 %27, %19
  %31 = icmp ult i32 %27, 536870911
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %41, !prof !5

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %35 = bitcast %"struct.hb_serialize_context_t::object_t"*** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = zext i32 %27 to i64
  %38 = shl nuw nsw i64 %37, 3
  %39 = tail call i8* @realloc(i8* %36, i64 %38) #11
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %33, %29
  store i32 -1, i32* %18, align 8
  br label %56

42:                                               ; preds = %33
  store i8* %39, i8** %35, align 8
  store i32 %27, i32* %18, align 8
  %43 = load i32, i32* %13, align 4
  br label %44

44:                                               ; preds = %42, %21
  %45 = phi i32 [ %43, %42 ], [ %14, %21 ]
  %46 = icmp ugt i32 %17, %45
  br i1 %46, label %47, label %58

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %49 = load %"struct.hb_serialize_context_t::object_t"**, %"struct.hb_serialize_context_t::object_t"*** %48, align 8
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %49, i64 %50
  %52 = bitcast %"struct.hb_serialize_context_t::object_t"** %51 to i8*
  %53 = sub i32 %17, %45
  %54 = zext i32 %53 to i64
  %55 = shl nuw nsw i64 %54, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 %55, i1 false) #11
  br label %58

56:                                               ; preds = %41, %1
  %57 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %57, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %67

58:                                               ; preds = %47, %44
  store i32 %17, i32* %13, align 4
  %59 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %60 = load %"struct.hb_serialize_context_t::object_t"**, %"struct.hb_serialize_context_t::object_t"*** %59, align 8
  %61 = add nsw i32 %17, -1
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %60, i64 %62
  %64 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %65 = icmp eq %"struct.hb_serialize_context_t::object_t"** %63, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_serialize_context_t::object_t"**)
  br i1 %65, label %67, label %66

66:                                               ; preds = %58
  store %"struct.hb_serialize_context_t::object_t"* null, %"struct.hb_serialize_context_t::object_t"** %63, align 8
  br label %67

67:                                               ; preds = %56, %58, %66
  %68 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i32 1, i32* %68 monotonic, align 4
  %69 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  store atomic i32 1, i32* %69 monotonic, align 4
  %70 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 0, i32 2
  %71 = bitcast %struct.hb_atomic_ptr_t* %70 to i64*
  store atomic i64 0, i64* %71 monotonic, align 8
  %72 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 1
  store i8 1, i8* %72, align 8
  %73 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 2
  %74 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 6
  store %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* null, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %74, align 8
  %75 = bitcast i32* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 16, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22hb_serialize_context_t4finiEv(%struct.hb_serialize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8
  %3 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %6 = load %"struct.hb_serialize_context_t::object_t"**, %"struct.hb_serialize_context_t::object_t"*** %5, align 8
  %7 = icmp ne i32 %4, 0
  %8 = zext i1 %7 to i32
  %9 = sub i32 %4, %8
  %10 = zext i32 %9 to i64
  %11 = zext i1 %7 to i64
  %12 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %6, i64 %11
  %13 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %12, i64 %10
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = bitcast %"struct.hb_serialize_context_t::object_t"** %6 to i8*
  br label %23

17:                                               ; preds = %1
  %18 = shl nuw nsw i64 %11, 32
  %19 = or i64 %18, %10
  br label %49

20:                                               ; preds = %49
  %21 = bitcast %"struct.hb_serialize_context_t::object_t"*** %5 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %15, %20
  %24 = phi i8* [ %22, %20 ], [ %16, %15 ]
  tail call void @free(i8* %24) #11
  %25 = bitcast %struct.hb_vector_t.261* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #11
  %26 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i32 -57005, i32* %26 monotonic, align 4
  %27 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 0, i32 2
  %28 = bitcast %struct.hb_atomic_ptr_t* %27 to i64*
  %29 = load atomic i64, i64* %28 acquire, align 8
  %30 = inttoptr i64 %29 to %struct.hb_user_data_array_t*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %30, i64 0, i32 1
  %34 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %30, i64 0, i32 0
  tail call void @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_(%struct.hb_lockable_set_t* %33, %struct.hb_mutex_t* dereferenceable(40) %34) #11
  %35 = getelementptr inbounds %struct.hb_user_data_array_t, %struct.hb_user_data_array_t* %30, i64 0, i32 0, i32 0
  %36 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %35) #11
  %37 = inttoptr i64 %29 to i8*
  tail call void @free(i8* %37) #11
  br label %38

38:                                               ; preds = %23, %32
  %39 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 6
  %40 = bitcast %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %39 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @free(i8* %41) #11
  store %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* null, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %39, align 8
  %42 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 3
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 2
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 7
  %45 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %44, align 8
  %46 = icmp eq %"struct.hb_serialize_context_t::object_t"* %45, null
  br i1 %46, label %80, label %47

47:                                               ; preds = %38
  %48 = bitcast %"struct.hb_serialize_context_t::object_t"** %44 to i64*
  br label %68

49:                                               ; preds = %17, %49
  %50 = phi %"struct.hb_serialize_context_t::object_t"** [ %66, %49 ], [ %12, %17 ]
  %51 = phi i64 [ %64, %49 ], [ %19, %17 ]
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, %"struct.hb_serialize_context_t::object_t"** bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_serialize_context_t::object_t"**), %"struct.hb_serialize_context_t::object_t"** %50, !prof !2
  %55 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %54, align 8
  %56 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %55, i64 0, i32 2
  %57 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %55, i64 0, i32 2, i32 2
  %58 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @free(i8* %59) #11
  %60 = bitcast %struct.hb_vector_t.259* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = icmp ne i32 %52, 0
  %62 = zext i1 %61 to i64
  %63 = sub nsw i64 %51, %62
  %64 = and i64 %63, 4294967295
  %65 = zext i1 %61 to i64
  %66 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %50, i64 %65
  %67 = icmp eq %"struct.hb_serialize_context_t::object_t"** %66, %13
  br i1 %67, label %20, label %49

68:                                               ; preds = %47, %68
  %69 = phi %"struct.hb_serialize_context_t::object_t"* [ %45, %47 ], [ %78, %68 ]
  %70 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %69, i64 0, i32 3
  %71 = bitcast %"struct.hb_serialize_context_t::object_t"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %48, align 8
  %73 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %69, i64 0, i32 2
  %74 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %69, i64 0, i32 2, i32 2
  %75 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %74 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void @free(i8* %76) #11
  %77 = bitcast %struct.hb_vector_t.259* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #11
  %78 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %44, align 8
  %79 = icmp eq %"struct.hb_serialize_context_t::object_t"* %78, null
  br i1 %79, label %80, label %68

80:                                               ; preds = %68, %38
  %81 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 0
  store %"struct.hb_serialize_context_t::object_t"* null, %"struct.hb_serialize_context_t::object_t"** %81, align 8
  %82 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 1
  %83 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 1, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 6, i32 1, i32 2
  %86 = load %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"**, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %85, align 8
  %87 = zext i32 %84 to i64
  %88 = getelementptr inbounds %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %86, i64 %87
  %89 = icmp eq i32 %84, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %80
  %91 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %86 to i8*
  br label %108

92:                                               ; preds = %95
  %93 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %85 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %108

95:                                               ; preds = %80, %95
  %96 = phi %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** [ %106, %95 ], [ %86, %80 ]
  %97 = phi i32 [ %104, %95 ], [ %84, %80 ]
  %98 = icmp eq i32 %97, 0
  %99 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %96 to i8**
  %100 = select i1 %98, i8** bitcast ([48 x i64]* @_hb_NullPool to i8**), i8** %99, !prof !2
  %101 = load i8*, i8** %100, align 8
  tail call void @free(i8* %101) #11
  %102 = icmp ne i32 %97, 0
  %103 = zext i1 %102 to i32
  %104 = sub i32 %97, %103
  %105 = zext i1 %102 to i64
  %106 = getelementptr inbounds %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %96, i64 %105
  %107 = icmp eq %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %106, %88
  br i1 %107, label %92, label %95

108:                                              ; preds = %90, %92
  %109 = phi i8* [ %94, %92 ], [ %91, %90 ]
  tail call void @free(i8* %109) #11
  %110 = bitcast %struct.hb_vector_t.260* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17hb_lockable_set_tIN20hb_user_data_array_t19hb_user_data_item_tE10hb_mutex_tE4finiERS2_(%struct.hb_lockable_set_t*, %struct.hb_mutex_t* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %8 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #11
  %10 = bitcast %struct.hb_lockable_set_t* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  br label %41

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.hb_mutex_t, %struct.hb_mutex_t* %1, i64 0, i32 0
  %13 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #11
  %14 = load i32, i32* %3, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  br label %18

18:                                               ; preds = %16, %31
  %19 = phi i32 [ %14, %16 ], [ %33, %31 ]
  %20 = add i32 %19, -1
  %21 = load %"struct.hb_user_data_array_t::hb_user_data_item_t"*, %"struct.hb_user_data_array_t::hb_user_data_item_t"** %17, align 8
  %22 = zext i32 %20 to i64
  %23 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %21, i64 %22, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.hb_user_data_array_t::hb_user_data_item_t", %"struct.hb_user_data_array_t::hb_user_data_item_t"* %21, i64 %22, i32 2
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  %27 = add i32 %19, -1
  store i32 %27, i32* %3, align 4, !noalias !9
  %28 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #11
  %29 = icmp eq void (i8*)* %26, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %18
  tail call void %26(i8* %24) #11
  br label %31

31:                                               ; preds = %18, %30
  %32 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %12) #11
  %33 = load i32, i32* %3, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %18

35:                                               ; preds = %31, %11
  %36 = getelementptr inbounds %struct.hb_lockable_set_t, %struct.hb_lockable_set_t* %0, i64 0, i32 0, i32 2
  %37 = bitcast %"struct.hb_user_data_array_t::hb_user_data_item_t"** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @free(i8* %38) #11
  %39 = bitcast %struct.hb_lockable_set_t* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #11
  %40 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #11
  br label %41

41:                                               ; preds = %35, %6
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.hb_serialize_context_t::object_t"* @_ZN9hb_pool_tIN22hb_serialize_context_t8object_tELj16EE5allocEv(%struct.hb_pool_t*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_pool_t, %struct.hb_pool_t* %0, i64 0, i32 0
  %3 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %2, align 8
  %4 = icmp eq %"struct.hb_serialize_context_t::object_t"* %3, null
  br i1 %4, label %5, label %123, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hb_pool_t, %struct.hb_pool_t* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, 1
  %9 = getelementptr inbounds %struct.hb_pool_t, %struct.hb_pool_t* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %129, label %12, !prof !2

12:                                               ; preds = %5
  %13 = icmp ult i32 %10, %8
  br i1 %13, label %14, label %34, !prof !2

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %18, %14 ], [ %10, %12 ]
  %16 = lshr i32 %15, 1
  %17 = add i32 %15, 8
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, %8
  br i1 %19, label %20, label %14

20:                                               ; preds = %14
  %21 = icmp uge i32 %18, %10
  %22 = icmp ult i32 %18, 536870911
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %32, !prof !5

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.hb_pool_t, %struct.hb_pool_t* %0, i64 0, i32 1, i32 2
  %26 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = zext i32 %18 to i64
  %29 = shl nuw nsw i64 %28, 3
  %30 = tail call i8* @realloc(i8* %27, i64 %29) #11
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %24, %20
  store i32 -1, i32* %9, align 8
  br label %129

33:                                               ; preds = %24
  store i8* %30, i8** %26, align 8
  store i32 %18, i32* %9, align 8
  br label %34

34:                                               ; preds = %12, %33
  %35 = phi i32 [ %10, %12 ], [ %18, %33 ]
  %36 = tail call noalias i8* @calloc(i64 1, i64 640) #11
  %37 = ptrtoint i8* %36 to i64
  %38 = icmp eq i8* %36, null
  br i1 %38, label %129, label %39, !prof !2

39:                                               ; preds = %34
  %40 = load i32, i32* %6, align 4
  %41 = add i32 %40, 1
  %42 = icmp sgt i32 %41, 0
  %43 = select i1 %42, i32 %41, i32 0
  %44 = icmp ult i32 %35, %43
  br i1 %44, label %45, label %65, !prof !2

45:                                               ; preds = %39, %45
  %46 = phi i32 [ %49, %45 ], [ %35, %39 ]
  %47 = lshr i32 %46, 1
  %48 = add i32 %46, 8
  %49 = add i32 %48, %47
  %50 = icmp ugt i32 %49, %43
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = icmp uge i32 %49, %35
  %53 = icmp ult i32 %49, 536870911
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %77, !prof !5

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.hb_pool_t, %struct.hb_pool_t* %0, i64 0, i32 1, i32 2
  %57 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = zext i32 %49 to i64
  %60 = shl nuw nsw i64 %59, 3
  %61 = tail call i8* @realloc(i8* %58, i64 %60) #11
  %62 = icmp eq i8* %61, null
  br i1 %62, label %77, label %63, !prof !2

63:                                               ; preds = %55
  store i8* %61, i8** %57, align 8
  store i32 %49, i32* %9, align 8
  %64 = load i32, i32* %6, align 4
  br label %65

65:                                               ; preds = %63, %39
  %66 = phi i32 [ %64, %63 ], [ %40, %39 ]
  %67 = icmp ugt i32 %43, %66
  br i1 %67, label %68, label %79

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.hb_pool_t, %struct.hb_pool_t* %0, i64 0, i32 1, i32 2
  %70 = load %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"**, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %69, align 8
  %71 = zext i32 %66 to i64
  %72 = getelementptr inbounds %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %70, i64 %71
  %73 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %72 to i8*
  %74 = sub i32 %43, %66
  %75 = zext i32 %74 to i64
  %76 = shl nuw nsw i64 %75, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 %76, i1 false) #11
  br label %79

77:                                               ; preds = %51, %55
  store i32 -1, i32* %9, align 8
  %78 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %78, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %89

79:                                               ; preds = %68, %65
  store i32 %43, i32* %6, align 4
  %80 = getelementptr inbounds %struct.hb_pool_t, %struct.hb_pool_t* %0, i64 0, i32 1, i32 2
  %81 = load %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"**, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*** %80, align 8
  %82 = add nsw i32 %43, -1
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"*, %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %81, i64 %83
  %85 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %85, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %86 = icmp eq %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %84, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"**)
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = bitcast %"struct.hb_pool_t<hb_serialize_context_t::object_t, 16>::chunk_t"** %84 to i64*
  store i64 %37, i64* %88, align 8
  br label %89

89:                                               ; preds = %77, %79, %87
  %90 = getelementptr inbounds i8, i8* %36, i64 40
  %91 = bitcast i8* %36 to i8**
  store i8* %90, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %36, i64 80
  %93 = bitcast i8* %90 to i8**
  store i8* %92, i8** %93, align 8
  %94 = getelementptr inbounds i8, i8* %36, i64 120
  %95 = bitcast i8* %92 to i8**
  store i8* %94, i8** %95, align 8
  %96 = getelementptr inbounds i8, i8* %36, i64 160
  %97 = bitcast i8* %94 to i8**
  store i8* %96, i8** %97, align 8
  %98 = getelementptr inbounds i8, i8* %36, i64 200
  %99 = bitcast i8* %96 to i8**
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %36, i64 240
  %101 = bitcast i8* %98 to i8**
  store i8* %100, i8** %101, align 8
  %102 = getelementptr inbounds i8, i8* %36, i64 280
  %103 = bitcast i8* %100 to i8**
  store i8* %102, i8** %103, align 8
  %104 = getelementptr inbounds i8, i8* %36, i64 320
  %105 = bitcast i8* %102 to i8**
  store i8* %104, i8** %105, align 8
  %106 = getelementptr inbounds i8, i8* %36, i64 360
  %107 = bitcast i8* %104 to i8**
  store i8* %106, i8** %107, align 8
  %108 = getelementptr inbounds i8, i8* %36, i64 400
  %109 = bitcast i8* %106 to i8**
  store i8* %108, i8** %109, align 8
  %110 = getelementptr inbounds i8, i8* %36, i64 440
  %111 = bitcast i8* %108 to i8**
  store i8* %110, i8** %111, align 8
  %112 = getelementptr inbounds i8, i8* %36, i64 480
  %113 = bitcast i8* %110 to i8**
  store i8* %112, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %36, i64 520
  %115 = bitcast i8* %112 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %36, i64 560
  %117 = bitcast i8* %114 to i8**
  store i8* %116, i8** %117, align 8
  %118 = getelementptr inbounds i8, i8* %36, i64 600
  %119 = bitcast i8* %116 to i8**
  store i8* %118, i8** %119, align 8
  %120 = bitcast i8* %118 to %"struct.hb_serialize_context_t::object_t"**
  store %"struct.hb_serialize_context_t::object_t"* null, %"struct.hb_serialize_context_t::object_t"** %120, align 8
  %121 = bitcast %struct.hb_pool_t* %0 to i8**
  store i8* %36, i8** %121, align 8
  %122 = bitcast i8* %36 to %"struct.hb_serialize_context_t::object_t"*
  br label %123

123:                                              ; preds = %89, %1
  %124 = phi %"struct.hb_serialize_context_t::object_t"* [ %122, %89 ], [ %3, %1 ]
  %125 = bitcast %"struct.hb_serialize_context_t::object_t"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %struct.hb_pool_t* %0 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.hb_serialize_context_t::object_t"* %124 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 40, i1 false)
  br label %129

129:                                              ; preds = %5, %34, %32, %123
  %130 = phi %"struct.hb_serialize_context_t::object_t"* [ %124, %123 ], [ null, %32 ], [ null, %34 ], [ null, %5 ]
  ret %"struct.hb_serialize_context_t::object_t"* %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT19OpenTypeOffsetTable9serializeIN22hb_face_builder_data_t13table_entry_tEEEbP22hb_serialize_context_tj10hb_array_tIT_E(%"struct.OT::OpenTypeOffsetTable"*, %struct.hb_serialize_context_t*, i32, %"struct.hb_face_builder_data_t::table_entry_t"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = trunc i64 %4 to i32
  %7 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %1, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %318, !prof !4

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 12
  %12 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %1, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint i8* %11 to i64
  %16 = sub i64 %15, %14
  %17 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %1, i64 0, i32 2
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %14
  %21 = and i64 %16, 4294967295
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %10
  store i32 4, i32* %7, align 4
  br label %318

24:                                               ; preds = %10
  %25 = inttoptr i64 %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %25, i8 0, i64 %21, i1 false) #11
  %26 = load i8*, i8** %12, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %21
  store i8* %27, i8** %12, align 8
  %28 = icmp eq i8* %26, null
  %29 = icmp eq %"struct.OT::OpenTypeOffsetTable"* %0, null
  %30 = or i1 %29, %28
  br i1 %30, label %318, label %31, !prof !6

31:                                               ; preds = %24
  %32 = bitcast %"struct.OT::OpenTypeOffsetTable"* %0 to i32*
  %33 = tail call i32 @llvm.bswap.i32(i32 %2) #11
  store i32 %33, i32* %32, align 1
  %34 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.OT::SortedArrayOf", %"struct.OT::SortedArrayOf"* %34, i64 0, i32 0
  %36 = tail call zeroext i1 @_ZN2OT7ArrayOfINS_11TableRecordENS_15BinSearchHeaderINS_7IntTypeItLj2EEEEEE9serializeEP22hb_serialize_context_tj(%"struct.OT::ArrayOf"* %35, %struct.hb_serialize_context_t* %1, i32 %6) #11
  br i1 %36, label %37, label %318, !prof !4

37:                                               ; preds = %31
  %38 = load i64, i64* %13, align 8
  %39 = bitcast %"struct.OT::SortedArrayOf"* %34 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %318, label %42

42:                                               ; preds = %37
  %43 = ptrtoint %"struct.OT::OpenTypeOffsetTable"* %0 to i64
  %44 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %1, i64 0, i32 7
  br label %45

45:                                               ; preds = %42, %204
  %46 = phi i32 [ 0, %42 ], [ %208, %204 ]
  %47 = phi %"struct.OT::IntType"* [ null, %42 ], [ %173, %204 ]
  %48 = zext i32 %46 to i64
  %49 = icmp ult i32 %46, %6
  br i1 %49, label %52, label %50, !prof !4

50:                                               ; preds = %45
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #11
  %51 = load %struct.hb_blob_t*, %struct.hb_blob_t** bitcast (i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 1) to %struct.hb_blob_t**), align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #11
  br label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %3, i64 %48, i32 1
  %54 = load %struct.hb_blob_t*, %struct.hb_blob_t** %53, align 8
  %55 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %3, i64 %48
  br label %56

56:                                               ; preds = %50, %52
  %57 = phi %struct.hb_blob_t* [ %51, %50 ], [ %54, %52 ]
  %58 = phi %"struct.hb_face_builder_data_t::table_entry_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_face_builder_data_t::table_entry_t"*), %50 ], [ %55, %52 ]
  %59 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %48, i32 0
  %62 = bitcast %"struct.OT::Tag"* %61 to i32*
  %63 = tail call i32 @llvm.bswap.i32(i32 %60) #11
  store i32 %63, i32* %62, align 1
  %64 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %57, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %48, i32 3
  %67 = bitcast %"struct.OT::IntType"* %66 to i32*
  %68 = tail call i32 @llvm.bswap.i32(i32 %65) #11
  store i32 %68, i32* %67, align 1
  %69 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %48, i32 2
  %70 = load i64, i64* %13, align 8
  %71 = sub i64 %70, %43
  %72 = trunc i64 %71 to i32
  %73 = bitcast %"struct.OT::Offset"* %69 to i32*
  %74 = tail call i32 @llvm.bswap.i32(i32 %72) #11
  store i32 %74, i32* %73, align 1
  %75 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %66, i64 0, i32 0, i32 0, i64 0
  %76 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %48, i32 3, i32 0, i32 0, i64 1
  %77 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %48, i32 3, i32 0, i32 0, i64 2
  %78 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %48, i32 3, i32 0, i32 0, i64 3
  %79 = load i32, i32* %7, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %318, !prof !4

81:                                               ; preds = %56
  %82 = load i8, i8* %76, align 1
  %83 = zext i8 %82 to i64
  %84 = shl nuw nsw i64 %83, 16
  %85 = shl i32 %68, 24
  %86 = zext i32 %85 to i64
  %87 = or i64 %84, %86
  %88 = load i8, i8* %77, align 1
  %89 = zext i8 %88 to i64
  %90 = shl nuw nsw i64 %89, 8
  %91 = or i64 %87, %90
  %92 = load i8, i8* %78, align 1
  %93 = zext i8 %92 to i64
  %94 = or i64 %91, %93
  %95 = load i64, i64* %18, align 8
  %96 = load i8*, i8** %12, align 8
  %97 = ptrtoint i8* %96 to i64
  %98 = sub i64 %95, %97
  %99 = icmp slt i64 %98, %94
  br i1 %99, label %100, label %101

100:                                              ; preds = %81
  store i32 4, i32* %7, align 4
  br label %318

101:                                              ; preds = %81
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %96, i8 0, i64 %94, i1 false) #11
  %102 = load i8*, i8** %12, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %94
  store i8* %103, i8** %12, align 8
  %104 = icmp eq i8* %102, null
  br i1 %104, label %318, label %105, !prof !2

105:                                              ; preds = %101
  %106 = load i8, i8* %75, align 1
  %107 = zext i8 %106 to i32
  %108 = shl nuw i32 %107, 24
  %109 = load i8, i8* %76, align 1
  %110 = zext i8 %109 to i32
  %111 = shl nuw nsw i32 %110, 16
  %112 = or i32 %111, %108
  %113 = load i8, i8* %77, align 1
  %114 = zext i8 %113 to i32
  %115 = shl nuw nsw i32 %114, 8
  %116 = or i32 %112, %115
  %117 = load i8, i8* %78, align 1
  %118 = zext i8 %117 to i32
  %119 = or i32 %116, %118
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %125, label %121, !prof !2

121:                                              ; preds = %105
  %122 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %57, i64 0, i32 1
  %123 = load i8*, i8** %122, align 8
  %124 = zext i32 %119 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %102, i8* align 1 %123, i64 %124, i1 false)
  br label %125

125:                                              ; preds = %105, %121
  %126 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %44, align 8
  %127 = icmp eq %"struct.hb_serialize_context_t::object_t"* %126, null
  br i1 %127, label %128, label %130, !prof !2

128:                                              ; preds = %125
  %129 = load i8*, i8** %12, align 8
  br label %152

130:                                              ; preds = %125
  %131 = load i64, i64* %13, align 8
  %132 = bitcast %"struct.hb_serialize_context_t::object_t"* %126 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = trunc i64 %134 to i32
  %136 = and i32 %135, 3
  %137 = icmp eq i32 %136, 0
  %138 = inttoptr i64 %131 to i8*
  br i1 %137, label %152, label %139

139:                                              ; preds = %130
  %140 = load i32, i32* %7, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %152, !prof !4

142:                                              ; preds = %139
  %143 = sub nuw nsw i32 4, %136
  %144 = load i64, i64* %18, align 8
  %145 = sub i64 %144, %131
  %146 = zext i32 %143 to i64
  %147 = icmp slt i64 %145, %146
  br i1 %147, label %148, label %149

148:                                              ; preds = %142
  store i32 4, i32* %7, align 4
  br label %152

149:                                              ; preds = %142
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %138, i8 0, i64 %146, i1 false) #11
  %150 = load i8*, i8** %12, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %146
  store i8* %151, i8** %12, align 8
  br label %152

152:                                              ; preds = %128, %130, %139, %148, %149
  %153 = phi i8* [ %129, %128 ], [ %138, %130 ], [ %138, %139 ], [ %138, %148 ], [ %151, %149 ]
  br i1 %49, label %155, label %154, !prof !4

154:                                              ; preds = %152
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #11
  br label %157

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %3, i64 %48
  br label %157

157:                                              ; preds = %154, %155
  %158 = phi %"struct.hb_face_builder_data_t::table_entry_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_face_builder_data_t::table_entry_t"*), %154 ], [ %156, %155 ]
  %159 = getelementptr inbounds %"struct.hb_face_builder_data_t::table_entry_t", %"struct.hb_face_builder_data_t::table_entry_t"* %158, i64 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 1751474532
  %162 = ptrtoint i8* %153 to i64
  %163 = ptrtoint i8* %102 to i64
  %164 = sub i64 %162, %163
  %165 = trunc i64 %164 to i32
  %166 = icmp ugt i32 %165, 53
  %167 = and i1 %161, %166
  br i1 %167, label %168, label %172

168:                                              ; preds = %157
  %169 = getelementptr inbounds i8, i8* %102, i64 8
  %170 = bitcast i8* %169 to %"struct.OT::IntType"*
  %171 = bitcast i8* %169 to i32*
  store i32 0, i32* %171, align 1
  br label %172

172:                                              ; preds = %157, %168
  %173 = phi %"struct.OT::IntType"* [ %170, %168 ], [ %47, %157 ]
  %174 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %48, i32 1
  %175 = bitcast i8* %102 to %"struct.OT::IntType"*
  %176 = lshr i32 %165, 2
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %175, i64 %177
  %179 = icmp eq i32 %176, 0
  br i1 %179, label %204, label %180

180:                                              ; preds = %172, %180
  %181 = phi i32 [ %202, %180 ], [ 0, %172 ]
  %182 = phi %"struct.OT::IntType"* [ %183, %180 ], [ %175, %172 ]
  %183 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %182, i64 1
  %184 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %182, i64 0, i32 0, i32 0, i64 0
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = shl nuw i32 %186, 24
  %188 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %182, i64 0, i32 0, i32 0, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = shl nuw nsw i32 %190, 16
  %192 = or i32 %191, %187
  %193 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %182, i64 0, i32 0, i32 0, i64 2
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = shl nuw nsw i32 %195, 8
  %197 = or i32 %192, %196
  %198 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %182, i64 0, i32 0, i32 0, i64 3
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = or i32 %197, %200
  %202 = add i32 %201, %181
  %203 = icmp ult %"struct.OT::IntType"* %183, %178
  br i1 %203, label %180, label %204

204:                                              ; preds = %180, %172
  %205 = phi i32 [ 0, %172 ], [ %202, %180 ]
  %206 = bitcast %"struct.OT::CheckSum"* %174 to i32*
  %207 = tail call i32 @llvm.bswap.i32(i32 %205) #11
  store i32 %207, i32* %206, align 1
  %208 = add nuw nsw i32 %46, 1
  %209 = load i16, i16* %39, align 1
  %210 = tail call i16 @llvm.bswap.i16(i16 %209) #11
  %211 = zext i16 %210 to i32
  %212 = icmp ult i32 %208, %211
  br i1 %212, label %45, label %213

213:                                              ; preds = %204
  %214 = icmp eq i16 %209, 0
  br i1 %214, label %219, label %215, !prof !2

215:                                              ; preds = %213
  %216 = tail call i16 @llvm.bswap.i16(i16 %209) #11
  %217 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %218 = zext i16 %216 to i64
  tail call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %217, i64 %218, i64 16) #11
  br label %219

219:                                              ; preds = %213, %215
  %220 = icmp eq %"struct.OT::IntType"* %173, null
  br i1 %220, label %318, label %221

221:                                              ; preds = %219
  %222 = ptrtoint %"struct.OT::OpenTypeOffsetTable"* %0 to i64
  %223 = sub i64 %38, %222
  %224 = trunc i64 %223 to i32
  %225 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 0, i32 0
  %226 = lshr i32 %224, 2
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %225, i64 %227
  %229 = icmp eq i32 %226, 0
  br i1 %229, label %254, label %230

230:                                              ; preds = %221, %230
  %231 = phi i32 [ %252, %230 ], [ 0, %221 ]
  %232 = phi %"struct.OT::IntType"* [ %233, %230 ], [ %225, %221 ]
  %233 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %232, i64 1
  %234 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %232, i64 0, i32 0, i32 0, i64 0
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = shl nuw i32 %236, 24
  %238 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %232, i64 0, i32 0, i32 0, i64 1
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = shl nuw nsw i32 %240, 16
  %242 = or i32 %241, %237
  %243 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %232, i64 0, i32 0, i32 0, i64 2
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = shl nuw nsw i32 %245, 8
  %247 = or i32 %242, %246
  %248 = getelementptr inbounds %"struct.OT::IntType", %"struct.OT::IntType"* %232, i64 0, i32 0, i32 0, i64 3
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i32
  %251 = or i32 %247, %250
  %252 = add i32 %251, %231
  %253 = icmp ult %"struct.OT::IntType"* %233, %228
  br i1 %253, label %230, label %254

254:                                              ; preds = %230, %221
  %255 = phi i32 [ 0, %221 ], [ %252, %230 ]
  %256 = tail call i32 @llvm.bswap.i32(i32 %255) #11
  %257 = lshr i32 %256, 24
  %258 = lshr i32 %256, 8
  %259 = lshr i32 %256, 16
  %260 = icmp eq i32 %6, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %254
  %262 = and i64 %4, 4294967295
  br label %279

263:                                              ; preds = %279, %254
  %264 = phi i32 [ %256, %254 ], [ %312, %279 ]
  %265 = phi i32 [ %257, %254 ], [ %314, %279 ]
  %266 = phi i32 [ %258, %254 ], [ %315, %279 ]
  %267 = phi i32 [ %259, %254 ], [ %316, %279 ]
  %268 = shl i32 %264, 24
  %269 = shl i32 %266, 16
  %270 = and i32 %269, 16711680
  %271 = shl nuw nsw i32 %267, 8
  %272 = and i32 %271, 65280
  %273 = or i32 %265, %268
  %274 = or i32 %273, %270
  %275 = or i32 %274, %272
  %276 = sub i32 -1313820742, %275
  %277 = bitcast %"struct.OT::IntType"* %173 to i32*
  %278 = tail call i32 @llvm.bswap.i32(i32 %276) #11
  store i32 %278, i32* %277, align 1
  br label %318

279:                                              ; preds = %279, %261
  %280 = phi i64 [ 0, %261 ], [ %313, %279 ]
  %281 = phi i32 [ %259, %261 ], [ %316, %279 ]
  %282 = phi i32 [ %258, %261 ], [ %315, %279 ]
  %283 = phi i32 [ %257, %261 ], [ %314, %279 ]
  %284 = phi i32 [ %256, %261 ], [ %312, %279 ]
  %285 = shl i32 %284, 24
  %286 = shl i32 %282, 16
  %287 = and i32 %286, 16711680
  %288 = shl nuw nsw i32 %281, 8
  %289 = and i32 %288, 65280
  %290 = or i32 %283, %285
  %291 = or i32 %290, %287
  %292 = or i32 %291, %289
  %293 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %280, i32 1, i32 0, i32 0, i32 0, i64 0
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = shl nuw i32 %295, 24
  %297 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %280, i32 1, i32 0, i32 0, i32 0, i64 1
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = shl nuw nsw i32 %299, 16
  %301 = or i32 %300, %296
  %302 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %280, i32 1, i32 0, i32 0, i32 0, i64 2
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i32
  %305 = shl nuw nsw i32 %304, 8
  %306 = or i32 %301, %305
  %307 = getelementptr inbounds %"struct.OT::OpenTypeOffsetTable", %"struct.OT::OpenTypeOffsetTable"* %0, i64 0, i32 1, i32 0, i32 1, i64 %280, i32 1, i32 0, i32 0, i32 0, i64 3
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = or i32 %306, %309
  %311 = add i32 %310, %292
  %312 = tail call i32 @llvm.bswap.i32(i32 %311) #11
  %313 = add nuw nsw i64 %280, 1
  %314 = lshr i32 %312, 24
  %315 = lshr i32 %312, 8
  %316 = lshr i32 %312, 16
  %317 = icmp eq i64 %313, %262
  br i1 %317, label %263, label %279

318:                                              ; preds = %56, %101, %37, %100, %24, %23, %5, %263, %219, %31
  %319 = phi i1 [ false, %31 ], [ true, %219 ], [ true, %263 ], [ false, %5 ], [ false, %23 ], [ false, %24 ], [ false, %100 ], [ true, %37 ], [ false, %101 ], [ false, %56 ]
  ret i1 %319
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT7ArrayOfINS_11TableRecordENS_15BinSearchHeaderINS_7IntTypeItLj2EEEEEE9serializeEP22hb_serialize_context_tj(%"struct.OT::ArrayOf"*, %struct.hb_serialize_context_t*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %1, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %85, !prof !4

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 8
  %9 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %1, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint i8* %8 to i64
  %13 = sub i64 %12, %11
  %14 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %1, i64 0, i32 2
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %11
  %18 = and i64 %13, 4294967295
  %19 = icmp slt i64 %17, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %7
  store i32 4, i32* %4, align 4
  br label %85

21:                                               ; preds = %7
  %22 = inttoptr i64 %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %22, i8 0, i64 %18, i1 false) #11
  %23 = load i8*, i8** %9, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %18
  store i8* %24, i8** %9, align 8
  %25 = icmp eq i8* %23, null
  %26 = icmp eq %"struct.OT::ArrayOf"* %0, null
  %27 = or i1 %26, %25
  br i1 %27, label %85, label %28, !prof !6

28:                                               ; preds = %21
  %29 = trunc i32 %2 to i16
  %30 = bitcast %"struct.OT::ArrayOf"* %0 to i16*
  %31 = tail call i16 @llvm.bswap.i16(i16 %29) #11
  store i16 %31, i16* %30, align 1
  %32 = icmp eq i32 %2, 0
  br i1 %32, label %40, label %33, !prof !2

33:                                               ; preds = %28
  %34 = tail call i32 @llvm.ctlz.i32(i32 %2, i1 true) #11, !range !12
  %35 = sub nuw nsw i32 32, %34
  %36 = icmp ugt i32 %35, 1
  %37 = select i1 %36, i32 %35, i32 1
  %38 = trunc i32 %37 to i16
  %39 = add nsw i16 %38, -1
  br label %40

40:                                               ; preds = %33, %28
  %41 = phi i16 [ 0, %28 ], [ %39, %33 ]
  %42 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 2
  %43 = bitcast %"struct.OT::IntType.0"* %42 to i16*
  %44 = tail call i16 @llvm.bswap.i16(i16 %41) #11
  store i16 %44, i16* %43, align 1
  %45 = zext i16 %41 to i32
  %46 = shl i32 16, %45
  %47 = trunc i32 %46 to i16
  %48 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 1
  %49 = bitcast %"struct.OT::IntType.0"* %48 to i16*
  %50 = tail call i16 @llvm.bswap.i16(i16 %47) #11
  store i16 %50, i16* %49, align 1
  %51 = shl i32 %2, 4
  %52 = and i32 %46, 65535
  %53 = icmp ugt i32 %51, %52
  %54 = sub i32 %51, %46
  %55 = trunc i32 %54 to i16
  %56 = select i1 %53, i16 %55, i16 0
  %57 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 3
  %58 = bitcast %"struct.OT::IntType.0"* %57 to i16*
  %59 = tail call i16 @llvm.bswap.i16(i16 %56) #11
  store i16 %59, i16* %58, align 1
  %60 = icmp ult i32 %2, 65536
  %61 = load i32, i32* %4, align 4
  br i1 %60, label %64, label %62

62:                                               ; preds = %40
  %63 = or i32 %61, 16
  store i32 %63, i32* %4, align 4
  br label %85

64:                                               ; preds = %40
  %65 = icmp eq i32 %61, 0
  br i1 %65, label %66, label %85, !prof !4

66:                                               ; preds = %64
  %67 = shl i32 %2, 4
  %68 = and i32 %67, 1048560
  %69 = or i32 %68, 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 %70
  %72 = load i64, i64* %10, align 8
  %73 = ptrtoint i8* %71 to i64
  %74 = sub i64 %73, %72
  %75 = load i64, i64* %15, align 8
  %76 = sub i64 %75, %72
  %77 = and i64 %74, 4294967295
  %78 = icmp slt i64 %76, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %66
  store i32 4, i32* %4, align 4
  br label %85

80:                                               ; preds = %66
  %81 = inttoptr i64 %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %81, i8 0, i64 %77, i1 false) #11
  %82 = load i8*, i8** %9, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 %77
  store i8* %83, i8** %9, align 8
  %84 = icmp ne i8* %82, null
  ret i1 %84

85:                                               ; preds = %62, %79, %64, %21, %20, %3
  ret i1 false
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: inlinehint nofree nounwind ssp uwtable
define internal fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8*, i64, i64) unnamed_addr #9 {
  %4 = mul i64 %1, %2
  %5 = getelementptr inbounds i8, i8* %0, i64 %4
  %6 = icmp ult i64 %1, 10
  br i1 %6, label %37, label %7

7:                                                ; preds = %3
  %8 = sub i64 0, %2
  %9 = icmp sgt i64 %2, 0
  %10 = add i64 %2, -1
  %11 = add i64 %2, -33
  %12 = lshr i64 %11, 5
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp sgt i64 %2, 1
  %15 = icmp ult i64 %10, 32
  %16 = and i64 %10, -32
  %17 = and i64 %13, 1
  %18 = icmp eq i64 %12, 0
  %19 = sub nuw nsw i64 %13, %17
  %20 = icmp eq i64 %17, 0
  %21 = icmp eq i64 %10, %16
  %22 = icmp ult i64 %10, 32
  %23 = and i64 %10, -32
  %24 = and i64 %13, 1
  %25 = icmp eq i64 %12, 0
  %26 = sub nuw nsw i64 %13, %24
  %27 = icmp eq i64 %24, 0
  %28 = icmp eq i64 %10, %23
  %29 = icmp eq i64 %2, 1
  %30 = icmp ult i64 %10, 32
  %31 = and i64 %10, -32
  %32 = and i64 %13, 1
  %33 = icmp eq i64 %12, 0
  %34 = sub nuw nsw i64 %13, %32
  %35 = icmp eq i64 %32, 0
  %36 = icmp eq i64 %10, %31
  br label %178

37:                                               ; preds = %1057, %3
  %38 = phi i8* [ %0, %3 ], [ %1060, %1057 ]
  %39 = phi i8* [ %5, %3 ], [ %1063, %1057 ]
  %40 = getelementptr inbounds i8, i8* %38, i64 %2
  %41 = icmp ult i8* %40, %39
  br i1 %41, label %42, label %1065

42:                                               ; preds = %37
  %43 = sub i64 0, %2
  %44 = icmp sgt i64 %2, 0
  br i1 %44, label %45, label %158

45:                                               ; preds = %42
  %46 = add i64 %2, -1
  %47 = add i64 %2, -33
  %48 = lshr i64 %47, 5
  %49 = add nuw nsw i64 %48, 1
  %50 = icmp ult i64 %46, 32
  %51 = and i64 %46, -32
  %52 = and i64 %49, 1
  %53 = icmp eq i64 %48, 0
  %54 = sub nuw nsw i64 %49, %52
  %55 = icmp eq i64 %52, 0
  %56 = icmp eq i64 %46, %51
  br label %57

57:                                               ; preds = %45, %60
  %58 = phi i8* [ %61, %60 ], [ %40, %45 ]
  %59 = icmp ugt i8* %58, %38
  br i1 %59, label %63, label %60

60:                                               ; preds = %148, %63, %57
  %61 = getelementptr inbounds i8, i8* %58, i64 %2
  %62 = icmp ult i8* %61, %39
  br i1 %62, label %57, label %1065

63:                                               ; preds = %57, %148
  %64 = phi i8* [ %65, %148 ], [ %58, %57 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %43
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 1, !alias.scope !13, !noalias !16
  %68 = bitcast i8* %64 to i32*
  %69 = load i32, i32* %68, align 1, !alias.scope !16, !noalias !13
  %70 = tail call i32 @llvm.bswap.i32(i32 %67) #11
  %71 = tail call i32 @llvm.bswap.i32(i32 %69) #11
  %72 = icmp ult i32 %71, %70
  br i1 %72, label %73, label %60

73:                                               ; preds = %63
  %74 = trunc i32 %69 to i8
  %75 = trunc i32 %67 to i8
  store i8 %74, i8* %65, align 1, !alias.scope !18, !noalias !21
  store i8 %75, i8* %64, align 1, !alias.scope !21, !noalias !18
  %76 = getelementptr inbounds i8, i8* %65, i64 1
  %77 = icmp ult i8* %76, %64
  br i1 %77, label %78, label %148

78:                                               ; preds = %73
  br i1 %50, label %79, label %82

79:                                               ; preds = %147, %78
  %80 = phi i8* [ %64, %78 ], [ %83, %147 ]
  %81 = phi i8* [ %76, %78 ], [ %84, %147 ]
  br label %150

82:                                               ; preds = %78
  %83 = getelementptr i8, i8* %64, i64 %51
  %84 = getelementptr i8, i8* %76, i64 %51
  br i1 %53, label %127, label %85

85:                                               ; preds = %82
  %86 = getelementptr i8, i8* %64, i64 1
  %87 = getelementptr i8, i8* %64, i64 1
  br label %88

88:                                               ; preds = %88, %85
  %89 = phi i64 [ 0, %85 ], [ %124, %88 ]
  %90 = phi i64 [ %54, %85 ], [ %125, %88 ]
  %91 = getelementptr i8, i8* %76, i64 %89
  %92 = getelementptr inbounds i8, i8* %86, i64 %89
  %93 = bitcast i8* %91 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 1, !alias.scope !18, !noalias !21
  %95 = getelementptr i8, i8* %91, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1, !alias.scope !18, !noalias !21
  %98 = bitcast i8* %92 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !21, !noalias !18
  %100 = getelementptr inbounds i8, i8* %92, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  %102 = load <16 x i8>, <16 x i8>* %101, align 1, !alias.scope !21, !noalias !18
  %103 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %103, align 1, !alias.scope !18, !noalias !21
  %104 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %102, <16 x i8>* %104, align 1, !alias.scope !18, !noalias !21
  %105 = bitcast i8* %92 to <16 x i8>*
  store <16 x i8> %94, <16 x i8>* %105, align 1, !alias.scope !21, !noalias !18
  %106 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %106, align 1, !alias.scope !21, !noalias !18
  %107 = or i64 %89, 32
  %108 = getelementptr i8, i8* %76, i64 %107
  %109 = getelementptr inbounds i8, i8* %87, i64 %107
  %110 = bitcast i8* %108 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !18, !noalias !21
  %112 = getelementptr i8, i8* %108, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !18, !noalias !21
  %115 = bitcast i8* %109 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !21, !noalias !18
  %117 = getelementptr inbounds i8, i8* %109, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !21, !noalias !18
  %120 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %120, align 1, !alias.scope !18, !noalias !21
  %121 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %121, align 1, !alias.scope !18, !noalias !21
  %122 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %122, align 1, !alias.scope !21, !noalias !18
  %123 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %123, align 1, !alias.scope !21, !noalias !18
  %124 = add i64 %89, 64
  %125 = add i64 %90, -2
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %88, !llvm.loop !23

127:                                              ; preds = %88, %82
  %128 = phi i64 [ 0, %82 ], [ %124, %88 ]
  br i1 %55, label %147, label %129

129:                                              ; preds = %127
  %130 = getelementptr i8, i8* %64, i64 1
  %131 = getelementptr i8, i8* %76, i64 %128
  %132 = getelementptr inbounds i8, i8* %130, i64 %128
  %133 = bitcast i8* %131 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !18, !noalias !21
  %135 = getelementptr i8, i8* %131, i64 16
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !18, !noalias !21
  %138 = bitcast i8* %132 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !21, !noalias !18
  %140 = getelementptr inbounds i8, i8* %132, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !21, !noalias !18
  %143 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 1, !alias.scope !18, !noalias !21
  %144 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %144, align 1, !alias.scope !18, !noalias !21
  %145 = bitcast i8* %132 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %145, align 1, !alias.scope !21, !noalias !18
  %146 = bitcast i8* %140 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %146, align 1, !alias.scope !21, !noalias !18
  br label %147

147:                                              ; preds = %127, %129
  br i1 %56, label %148, label %79

148:                                              ; preds = %150, %147, %73
  %149 = icmp ugt i8* %65, %38
  br i1 %149, label %63, label %60

150:                                              ; preds = %79, %150
  %151 = phi i8* [ %153, %150 ], [ %80, %79 ]
  %152 = phi i8* [ %156, %150 ], [ %81, %79 ]
  %153 = getelementptr inbounds i8, i8* %151, i64 1
  %154 = load i8, i8* %152, align 1, !alias.scope !18, !noalias !21
  %155 = load i8, i8* %153, align 1, !alias.scope !21, !noalias !18
  store i8 %155, i8* %152, align 1, !alias.scope !18, !noalias !21
  store i8 %154, i8* %153, align 1, !alias.scope !21, !noalias !18
  %156 = getelementptr inbounds i8, i8* %152, i64 1
  %157 = icmp eq i8* %156, %64
  br i1 %157, label %148, label %150, !llvm.loop !25

158:                                              ; preds = %42, %175
  %159 = phi i8* [ %176, %175 ], [ %40, %42 ]
  %160 = icmp ugt i8* %159, %38
  br i1 %160, label %161, label %175

161:                                              ; preds = %158
  %162 = bitcast i8* %159 to i32*
  %163 = load i32, i32* %162, align 1, !alias.scope !16, !noalias !13
  br label %164

164:                                              ; preds = %164, %161
  %165 = phi i32 [ %163, %161 ], [ %169, %164 ]
  %166 = phi i8* [ %159, %161 ], [ %167, %164 ]
  %167 = getelementptr inbounds i8, i8* %166, i64 %43
  %168 = bitcast i8* %167 to i32*
  %169 = load i32, i32* %168, align 1, !alias.scope !13, !noalias !16
  %170 = tail call i32 @llvm.bswap.i32(i32 %169) #11
  %171 = tail call i32 @llvm.bswap.i32(i32 %165) #11
  %172 = icmp ult i32 %171, %170
  %173 = icmp ugt i8* %167, %38
  %174 = and i1 %172, %173
  br i1 %174, label %164, label %175

175:                                              ; preds = %164, %158
  %176 = getelementptr inbounds i8, i8* %159, i64 %2
  %177 = icmp ult i8* %176, %39
  br i1 %177, label %158, label %1065

178:                                              ; preds = %7, %1057
  %179 = phi i8* [ %5, %7 ], [ %1063, %1057 ]
  %180 = phi i64 [ %1, %7 ], [ %1061, %1057 ]
  %181 = phi i8* [ %0, %7 ], [ %1060, %1057 ]
  %182 = ptrtoint i8* %181 to i64
  %183 = add i64 %180, -1
  %184 = mul i64 %183, %2
  %185 = getelementptr inbounds i8, i8* %181, i64 %184
  %186 = getelementptr inbounds i8, i8* %181, i64 %2
  %187 = lshr i64 %180, 1
  %188 = mul i64 %187, %2
  %189 = getelementptr inbounds i8, i8* %181, i64 %188
  %190 = getelementptr inbounds i8, i8* %185, i64 %8
  %191 = bitcast i8* %186 to i32*
  %192 = load i32, i32* %191, align 1
  %193 = bitcast i8* %189 to i32*
  %194 = load i32, i32* %193, align 1
  %195 = tail call i32 @llvm.bswap.i32(i32 %192) #11
  %196 = tail call i32 @llvm.bswap.i32(i32 %194) #11
  %197 = icmp ult i32 %196, %195
  %198 = select i1 %197, i8* %186, i8* %189
  %199 = select i1 %197, i8* %189, i8* %186
  %200 = bitcast i8* %198 to i32*
  %201 = load i32, i32* %200, align 1
  %202 = bitcast i8* %190 to i32*
  %203 = load i32, i32* %202, align 1
  %204 = tail call i32 @llvm.bswap.i32(i32 %201) #11
  %205 = tail call i32 @llvm.bswap.i32(i32 %203) #11
  %206 = icmp ult i32 %205, %204
  br i1 %206, label %207, label %213

207:                                              ; preds = %178
  %208 = bitcast i8* %199 to i32*
  %209 = load i32, i32* %208, align 1
  %210 = tail call i32 @llvm.bswap.i32(i32 %209) #11
  %211 = icmp ult i32 %205, %210
  %212 = select i1 %211, i8* %199, i8* %190
  br label %213

213:                                              ; preds = %207, %178
  %214 = phi i8* [ %198, %178 ], [ %212, %207 ]
  %215 = ptrtoint i8* %214 to i64
  %216 = icmp eq i8* %214, %185
  br i1 %216, label %309, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds i8, i8* %214, i64 %2
  br i1 %9, label %219, label %309

219:                                              ; preds = %217
  %220 = getelementptr i8, i8* %214, i64 1
  %221 = icmp ugt i8* %218, %220
  %222 = select i1 %221, i8* %218, i8* %220
  %223 = ptrtoint i8* %222 to i64
  %224 = sub i64 %223, %215
  %225 = icmp ult i64 %224, 32
  br i1 %225, label %298, label %226

226:                                              ; preds = %219
  %227 = and i64 %224, -32
  %228 = getelementptr i8, i8* %214, i64 %227
  %229 = getelementptr i8, i8* %185, i64 %227
  %230 = add i64 %227, -32
  %231 = lshr exact i64 %230, 5
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 1
  %234 = icmp eq i64 %230, 0
  br i1 %234, label %276, label %235

235:                                              ; preds = %226
  %236 = sub nuw nsw i64 %232, %233
  br label %237

237:                                              ; preds = %237, %235
  %238 = phi i64 [ 0, %235 ], [ %273, %237 ]
  %239 = phi i64 [ %236, %235 ], [ %274, %237 ]
  %240 = getelementptr i8, i8* %214, i64 %238
  %241 = getelementptr i8, i8* %185, i64 %238
  %242 = bitcast i8* %240 to <16 x i8>*
  %243 = load <16 x i8>, <16 x i8>* %242, align 1, !alias.scope !27, !noalias !30
  %244 = getelementptr i8, i8* %240, i64 16
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1, !alias.scope !27, !noalias !30
  %247 = bitcast i8* %241 to <16 x i8>*
  %248 = load <16 x i8>, <16 x i8>* %247, align 1, !alias.scope !30, !noalias !27
  %249 = getelementptr i8, i8* %241, i64 16
  %250 = bitcast i8* %249 to <16 x i8>*
  %251 = load <16 x i8>, <16 x i8>* %250, align 1, !alias.scope !30, !noalias !27
  %252 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %252, align 1, !alias.scope !27, !noalias !30
  %253 = bitcast i8* %244 to <16 x i8>*
  store <16 x i8> %251, <16 x i8>* %253, align 1, !alias.scope !27, !noalias !30
  %254 = bitcast i8* %241 to <16 x i8>*
  store <16 x i8> %243, <16 x i8>* %254, align 1, !alias.scope !30, !noalias !27
  %255 = bitcast i8* %249 to <16 x i8>*
  store <16 x i8> %246, <16 x i8>* %255, align 1, !alias.scope !30, !noalias !27
  %256 = or i64 %238, 32
  %257 = getelementptr i8, i8* %214, i64 %256
  %258 = getelementptr i8, i8* %185, i64 %256
  %259 = bitcast i8* %257 to <16 x i8>*
  %260 = load <16 x i8>, <16 x i8>* %259, align 1, !alias.scope !27, !noalias !30
  %261 = getelementptr i8, i8* %257, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  %263 = load <16 x i8>, <16 x i8>* %262, align 1, !alias.scope !27, !noalias !30
  %264 = bitcast i8* %258 to <16 x i8>*
  %265 = load <16 x i8>, <16 x i8>* %264, align 1, !alias.scope !30, !noalias !27
  %266 = getelementptr i8, i8* %258, i64 16
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !30, !noalias !27
  %269 = bitcast i8* %257 to <16 x i8>*
  store <16 x i8> %265, <16 x i8>* %269, align 1, !alias.scope !27, !noalias !30
  %270 = bitcast i8* %261 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %270, align 1, !alias.scope !27, !noalias !30
  %271 = bitcast i8* %258 to <16 x i8>*
  store <16 x i8> %260, <16 x i8>* %271, align 1, !alias.scope !30, !noalias !27
  %272 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %263, <16 x i8>* %272, align 1, !alias.scope !30, !noalias !27
  %273 = add i64 %238, 64
  %274 = add i64 %239, -2
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %237, !llvm.loop !32

276:                                              ; preds = %237, %226
  %277 = phi i64 [ 0, %226 ], [ %273, %237 ]
  %278 = icmp eq i64 %233, 0
  br i1 %278, label %296, label %279

279:                                              ; preds = %276
  %280 = getelementptr i8, i8* %214, i64 %277
  %281 = getelementptr i8, i8* %185, i64 %277
  %282 = bitcast i8* %280 to <16 x i8>*
  %283 = load <16 x i8>, <16 x i8>* %282, align 1, !alias.scope !27, !noalias !30
  %284 = getelementptr i8, i8* %280, i64 16
  %285 = bitcast i8* %284 to <16 x i8>*
  %286 = load <16 x i8>, <16 x i8>* %285, align 1, !alias.scope !27, !noalias !30
  %287 = bitcast i8* %281 to <16 x i8>*
  %288 = load <16 x i8>, <16 x i8>* %287, align 1, !alias.scope !30, !noalias !27
  %289 = getelementptr i8, i8* %281, i64 16
  %290 = bitcast i8* %289 to <16 x i8>*
  %291 = load <16 x i8>, <16 x i8>* %290, align 1, !alias.scope !30, !noalias !27
  %292 = bitcast i8* %280 to <16 x i8>*
  store <16 x i8> %288, <16 x i8>* %292, align 1, !alias.scope !27, !noalias !30
  %293 = bitcast i8* %284 to <16 x i8>*
  store <16 x i8> %291, <16 x i8>* %293, align 1, !alias.scope !27, !noalias !30
  %294 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %283, <16 x i8>* %294, align 1, !alias.scope !30, !noalias !27
  %295 = bitcast i8* %289 to <16 x i8>*
  store <16 x i8> %286, <16 x i8>* %295, align 1, !alias.scope !30, !noalias !27
  br label %296

296:                                              ; preds = %276, %279
  %297 = icmp eq i64 %224, %227
  br i1 %297, label %309, label %298

298:                                              ; preds = %296, %219
  %299 = phi i8* [ %214, %219 ], [ %228, %296 ]
  %300 = phi i8* [ %185, %219 ], [ %229, %296 ]
  br label %301

301:                                              ; preds = %298, %301
  %302 = phi i8* [ %306, %301 ], [ %299, %298 ]
  %303 = phi i8* [ %307, %301 ], [ %300, %298 ]
  %304 = load i8, i8* %302, align 1, !alias.scope !27, !noalias !30
  %305 = load i8, i8* %303, align 1, !alias.scope !30, !noalias !27
  store i8 %305, i8* %302, align 1, !alias.scope !27, !noalias !30
  store i8 %304, i8* %303, align 1, !alias.scope !30, !noalias !27
  %306 = getelementptr inbounds i8, i8* %302, i64 1
  %307 = getelementptr inbounds i8, i8* %303, i64 1
  %308 = icmp ult i8* %306, %218
  br i1 %308, label %301, label %309, !llvm.loop !33

309:                                              ; preds = %301, %296, %217, %213
  %310 = icmp sgt i64 %184, 0
  br i1 %310, label %311, label %662

311:                                              ; preds = %309
  %312 = bitcast i8* %185 to i32*
  br label %313

313:                                              ; preds = %311, %657
  %314 = phi i8* [ %185, %311 ], [ %658, %657 ]
  %315 = phi i8* [ %185, %311 ], [ %660, %657 ]
  %316 = phi i8* [ %181, %311 ], [ %432, %657 ]
  %317 = phi i8* [ %181, %311 ], [ %659, %657 ]
  %318 = icmp ult i8* %317, %315
  br i1 %318, label %319, label %662

319:                                              ; preds = %313
  br i1 %9, label %323, label %320

320:                                              ; preds = %319
  %321 = load i32, i32* %312, align 1
  %322 = tail call i32 @llvm.bswap.i32(i32 %321) #11
  br label %422

323:                                              ; preds = %319, %418
  %324 = phi i8* [ %419, %418 ], [ %316, %319 ]
  %325 = phi i8* [ %420, %418 ], [ %317, %319 ]
  %326 = bitcast i8* %325 to i32*
  %327 = load i32, i32* %326, align 1
  %328 = load i32, i32* %312, align 1
  %329 = tail call i32 @llvm.bswap.i32(i32 %327) #11
  %330 = tail call i32 @llvm.bswap.i32(i32 %328) #11
  %331 = icmp ult i32 %330, %329
  %332 = trunc i32 %327 to i8
  br i1 %331, label %429, label %333

333:                                              ; preds = %323
  %334 = icmp eq i32 %328, %327
  br i1 %334, label %335, label %418

335:                                              ; preds = %333
  %336 = icmp ult i8* %324, %325
  br i1 %336, label %337, label %416

337:                                              ; preds = %335
  %338 = getelementptr inbounds i8, i8* %324, i64 %2
  %339 = load i8, i8* %324, align 1, !alias.scope !34, !noalias !37
  store i8 %332, i8* %324, align 1, !alias.scope !34, !noalias !37
  store i8 %339, i8* %325, align 1, !alias.scope !37, !noalias !34
  %340 = getelementptr inbounds i8, i8* %324, i64 1
  %341 = getelementptr inbounds i8, i8* %325, i64 1
  br i1 %14, label %342, label %416

342:                                              ; preds = %337
  br i1 %15, label %405, label %343

343:                                              ; preds = %342
  %344 = getelementptr i8, i8* %341, i64 %16
  %345 = getelementptr i8, i8* %340, i64 %16
  br i1 %18, label %385, label %346

346:                                              ; preds = %343, %346
  %347 = phi i64 [ %382, %346 ], [ 0, %343 ]
  %348 = phi i64 [ %383, %346 ], [ %19, %343 ]
  %349 = getelementptr i8, i8* %341, i64 %347
  %350 = getelementptr i8, i8* %340, i64 %347
  %351 = bitcast i8* %349 to <16 x i8>*
  %352 = load <16 x i8>, <16 x i8>* %351, align 1, !alias.scope !37, !noalias !34
  %353 = getelementptr i8, i8* %349, i64 16
  %354 = bitcast i8* %353 to <16 x i8>*
  %355 = load <16 x i8>, <16 x i8>* %354, align 1, !alias.scope !37, !noalias !34
  %356 = bitcast i8* %350 to <16 x i8>*
  %357 = load <16 x i8>, <16 x i8>* %356, align 1, !alias.scope !34, !noalias !37
  %358 = getelementptr i8, i8* %350, i64 16
  %359 = bitcast i8* %358 to <16 x i8>*
  %360 = load <16 x i8>, <16 x i8>* %359, align 1, !alias.scope !34, !noalias !37
  %361 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %352, <16 x i8>* %361, align 1, !alias.scope !34, !noalias !37
  %362 = bitcast i8* %358 to <16 x i8>*
  store <16 x i8> %355, <16 x i8>* %362, align 1, !alias.scope !34, !noalias !37
  %363 = bitcast i8* %349 to <16 x i8>*
  store <16 x i8> %357, <16 x i8>* %363, align 1, !alias.scope !37, !noalias !34
  %364 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %360, <16 x i8>* %364, align 1, !alias.scope !37, !noalias !34
  %365 = or i64 %347, 32
  %366 = getelementptr i8, i8* %341, i64 %365
  %367 = getelementptr i8, i8* %340, i64 %365
  %368 = bitcast i8* %366 to <16 x i8>*
  %369 = load <16 x i8>, <16 x i8>* %368, align 1, !alias.scope !37, !noalias !34
  %370 = getelementptr i8, i8* %366, i64 16
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1, !alias.scope !37, !noalias !34
  %373 = bitcast i8* %367 to <16 x i8>*
  %374 = load <16 x i8>, <16 x i8>* %373, align 1, !alias.scope !34, !noalias !37
  %375 = getelementptr i8, i8* %367, i64 16
  %376 = bitcast i8* %375 to <16 x i8>*
  %377 = load <16 x i8>, <16 x i8>* %376, align 1, !alias.scope !34, !noalias !37
  %378 = bitcast i8* %367 to <16 x i8>*
  store <16 x i8> %369, <16 x i8>* %378, align 1, !alias.scope !34, !noalias !37
  %379 = bitcast i8* %375 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %379, align 1, !alias.scope !34, !noalias !37
  %380 = bitcast i8* %366 to <16 x i8>*
  store <16 x i8> %374, <16 x i8>* %380, align 1, !alias.scope !37, !noalias !34
  %381 = bitcast i8* %370 to <16 x i8>*
  store <16 x i8> %377, <16 x i8>* %381, align 1, !alias.scope !37, !noalias !34
  %382 = add i64 %347, 64
  %383 = add i64 %348, -2
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %385, label %346, !llvm.loop !39

385:                                              ; preds = %346, %343
  %386 = phi i64 [ 0, %343 ], [ %382, %346 ]
  br i1 %20, label %404, label %387

387:                                              ; preds = %385
  %388 = getelementptr i8, i8* %341, i64 %386
  %389 = getelementptr i8, i8* %340, i64 %386
  %390 = bitcast i8* %388 to <16 x i8>*
  %391 = load <16 x i8>, <16 x i8>* %390, align 1, !alias.scope !37, !noalias !34
  %392 = getelementptr i8, i8* %388, i64 16
  %393 = bitcast i8* %392 to <16 x i8>*
  %394 = load <16 x i8>, <16 x i8>* %393, align 1, !alias.scope !37, !noalias !34
  %395 = bitcast i8* %389 to <16 x i8>*
  %396 = load <16 x i8>, <16 x i8>* %395, align 1, !alias.scope !34, !noalias !37
  %397 = getelementptr i8, i8* %389, i64 16
  %398 = bitcast i8* %397 to <16 x i8>*
  %399 = load <16 x i8>, <16 x i8>* %398, align 1, !alias.scope !34, !noalias !37
  %400 = bitcast i8* %389 to <16 x i8>*
  store <16 x i8> %391, <16 x i8>* %400, align 1, !alias.scope !34, !noalias !37
  %401 = bitcast i8* %397 to <16 x i8>*
  store <16 x i8> %394, <16 x i8>* %401, align 1, !alias.scope !34, !noalias !37
  %402 = bitcast i8* %388 to <16 x i8>*
  store <16 x i8> %396, <16 x i8>* %402, align 1, !alias.scope !37, !noalias !34
  %403 = bitcast i8* %392 to <16 x i8>*
  store <16 x i8> %399, <16 x i8>* %403, align 1, !alias.scope !37, !noalias !34
  br label %404

404:                                              ; preds = %385, %387
  br i1 %21, label %416, label %405

405:                                              ; preds = %404, %342
  %406 = phi i8* [ %341, %342 ], [ %344, %404 ]
  %407 = phi i8* [ %340, %342 ], [ %345, %404 ]
  br label %408

408:                                              ; preds = %405, %408
  %409 = phi i8* [ %414, %408 ], [ %406, %405 ]
  %410 = phi i8* [ %413, %408 ], [ %407, %405 ]
  %411 = load i8, i8* %409, align 1, !alias.scope !37, !noalias !34
  %412 = load i8, i8* %410, align 1, !alias.scope !34, !noalias !37
  store i8 %411, i8* %410, align 1, !alias.scope !34, !noalias !37
  store i8 %412, i8* %409, align 1, !alias.scope !37, !noalias !34
  %413 = getelementptr inbounds i8, i8* %410, i64 1
  %414 = getelementptr inbounds i8, i8* %409, i64 1
  %415 = icmp ult i8* %413, %338
  br i1 %415, label %408, label %416, !llvm.loop !40

416:                                              ; preds = %408, %337, %404, %335
  %417 = getelementptr inbounds i8, i8* %324, i64 %2
  br label %418

418:                                              ; preds = %416, %333
  %419 = phi i8* [ %417, %416 ], [ %324, %333 ]
  %420 = getelementptr inbounds i8, i8* %325, i64 %2
  %421 = icmp ult i8* %420, %315
  br i1 %421, label %323, label %662

422:                                              ; preds = %320, %544
  %423 = phi i8* [ %547, %544 ], [ %316, %320 ]
  %424 = phi i8* [ %548, %544 ], [ %317, %320 ]
  %425 = bitcast i8* %424 to i32*
  %426 = load i32, i32* %425, align 1
  %427 = tail call i32 @llvm.bswap.i32(i32 %426) #11
  %428 = icmp ult i32 %322, %427
  br i1 %428, label %429, label %544

429:                                              ; preds = %422, %323
  %430 = phi i32 [ %328, %323 ], [ %321, %422 ]
  %431 = phi i8* [ %325, %323 ], [ %424, %422 ]
  %432 = phi i8* [ %324, %323 ], [ %423, %422 ]
  %433 = icmp ult i8* %431, %315
  br i1 %433, label %434, label %657

434:                                              ; preds = %429
  br i1 %9, label %437, label %435

435:                                              ; preds = %434
  %436 = tail call i32 @llvm.bswap.i32(i32 %430) #11
  br label %550

437:                                              ; preds = %434, %542
  %438 = phi i32 [ %543, %542 ], [ %430, %434 ]
  %439 = phi i8* [ %540, %542 ], [ %314, %434 ]
  %440 = phi i8* [ %441, %542 ], [ %315, %434 ]
  %441 = getelementptr inbounds i8, i8* %440, i64 %8
  %442 = bitcast i8* %441 to i32*
  %443 = load i32, i32* %442, align 1
  %444 = tail call i32 @llvm.bswap.i32(i32 %443) #11
  %445 = tail call i32 @llvm.bswap.i32(i32 %438) #11
  %446 = icmp ult i32 %445, %444
  %447 = icmp ne i32 %438, %443
  %448 = sext i1 %447 to i32
  %449 = select i1 %446, i32 1, i32 %448
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %453, label %451

451:                                              ; preds = %437
  %452 = icmp slt i32 %449, 0
  br i1 %452, label %566, label %539

453:                                              ; preds = %437
  %454 = getelementptr inbounds i8, i8* %439, i64 %8
  %455 = icmp ult i8* %440, %439
  br i1 %455, label %456, label %539

456:                                              ; preds = %453
  %457 = trunc i32 %443 to i8
  %458 = load i8, i8* %454, align 1, !alias.scope !41, !noalias !44
  store i8 %458, i8* %441, align 1, !alias.scope !44, !noalias !41
  store i8 %457, i8* %454, align 1, !alias.scope !41, !noalias !44
  %459 = getelementptr inbounds i8, i8* %441, i64 1
  %460 = icmp ult i8* %459, %440
  br i1 %460, label %461, label %539

461:                                              ; preds = %456
  br i1 %22, label %528, label %462

462:                                              ; preds = %461
  %463 = getelementptr i8, i8* %459, i64 %23
  %464 = getelementptr i8, i8* %454, i64 %23
  br i1 %25, label %507, label %465

465:                                              ; preds = %462
  %466 = getelementptr i8, i8* %454, i64 1
  %467 = getelementptr i8, i8* %454, i64 1
  br label %468

468:                                              ; preds = %468, %465
  %469 = phi i64 [ 0, %465 ], [ %504, %468 ]
  %470 = phi i64 [ %26, %465 ], [ %505, %468 ]
  %471 = getelementptr i8, i8* %459, i64 %469
  %472 = getelementptr inbounds i8, i8* %466, i64 %469
  %473 = bitcast i8* %471 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1, !alias.scope !44, !noalias !41
  %475 = getelementptr i8, i8* %471, i64 16
  %476 = bitcast i8* %475 to <16 x i8>*
  %477 = load <16 x i8>, <16 x i8>* %476, align 1, !alias.scope !44, !noalias !41
  %478 = bitcast i8* %472 to <16 x i8>*
  %479 = load <16 x i8>, <16 x i8>* %478, align 1, !alias.scope !41, !noalias !44
  %480 = getelementptr inbounds i8, i8* %472, i64 16
  %481 = bitcast i8* %480 to <16 x i8>*
  %482 = load <16 x i8>, <16 x i8>* %481, align 1, !alias.scope !41, !noalias !44
  %483 = bitcast i8* %471 to <16 x i8>*
  store <16 x i8> %479, <16 x i8>* %483, align 1, !alias.scope !44, !noalias !41
  %484 = bitcast i8* %475 to <16 x i8>*
  store <16 x i8> %482, <16 x i8>* %484, align 1, !alias.scope !44, !noalias !41
  %485 = bitcast i8* %472 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %485, align 1, !alias.scope !41, !noalias !44
  %486 = bitcast i8* %480 to <16 x i8>*
  store <16 x i8> %477, <16 x i8>* %486, align 1, !alias.scope !41, !noalias !44
  %487 = or i64 %469, 32
  %488 = getelementptr i8, i8* %459, i64 %487
  %489 = getelementptr inbounds i8, i8* %467, i64 %487
  %490 = bitcast i8* %488 to <16 x i8>*
  %491 = load <16 x i8>, <16 x i8>* %490, align 1, !alias.scope !44, !noalias !41
  %492 = getelementptr i8, i8* %488, i64 16
  %493 = bitcast i8* %492 to <16 x i8>*
  %494 = load <16 x i8>, <16 x i8>* %493, align 1, !alias.scope !44, !noalias !41
  %495 = bitcast i8* %489 to <16 x i8>*
  %496 = load <16 x i8>, <16 x i8>* %495, align 1, !alias.scope !41, !noalias !44
  %497 = getelementptr inbounds i8, i8* %489, i64 16
  %498 = bitcast i8* %497 to <16 x i8>*
  %499 = load <16 x i8>, <16 x i8>* %498, align 1, !alias.scope !41, !noalias !44
  %500 = bitcast i8* %488 to <16 x i8>*
  store <16 x i8> %496, <16 x i8>* %500, align 1, !alias.scope !44, !noalias !41
  %501 = bitcast i8* %492 to <16 x i8>*
  store <16 x i8> %499, <16 x i8>* %501, align 1, !alias.scope !44, !noalias !41
  %502 = bitcast i8* %489 to <16 x i8>*
  store <16 x i8> %491, <16 x i8>* %502, align 1, !alias.scope !41, !noalias !44
  %503 = bitcast i8* %497 to <16 x i8>*
  store <16 x i8> %494, <16 x i8>* %503, align 1, !alias.scope !41, !noalias !44
  %504 = add i64 %469, 64
  %505 = add i64 %470, -2
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %507, label %468, !llvm.loop !46

507:                                              ; preds = %468, %462
  %508 = phi i64 [ 0, %462 ], [ %504, %468 ]
  br i1 %27, label %527, label %509

509:                                              ; preds = %507
  %510 = getelementptr i8, i8* %459, i64 %508
  %511 = getelementptr i8, i8* %454, i64 1
  %512 = getelementptr inbounds i8, i8* %511, i64 %508
  %513 = bitcast i8* %510 to <16 x i8>*
  %514 = load <16 x i8>, <16 x i8>* %513, align 1, !alias.scope !44, !noalias !41
  %515 = getelementptr i8, i8* %510, i64 16
  %516 = bitcast i8* %515 to <16 x i8>*
  %517 = load <16 x i8>, <16 x i8>* %516, align 1, !alias.scope !44, !noalias !41
  %518 = bitcast i8* %512 to <16 x i8>*
  %519 = load <16 x i8>, <16 x i8>* %518, align 1, !alias.scope !41, !noalias !44
  %520 = getelementptr inbounds i8, i8* %512, i64 16
  %521 = bitcast i8* %520 to <16 x i8>*
  %522 = load <16 x i8>, <16 x i8>* %521, align 1, !alias.scope !41, !noalias !44
  %523 = bitcast i8* %510 to <16 x i8>*
  store <16 x i8> %519, <16 x i8>* %523, align 1, !alias.scope !44, !noalias !41
  %524 = bitcast i8* %515 to <16 x i8>*
  store <16 x i8> %522, <16 x i8>* %524, align 1, !alias.scope !44, !noalias !41
  %525 = bitcast i8* %512 to <16 x i8>*
  store <16 x i8> %514, <16 x i8>* %525, align 1, !alias.scope !41, !noalias !44
  %526 = bitcast i8* %520 to <16 x i8>*
  store <16 x i8> %517, <16 x i8>* %526, align 1, !alias.scope !41, !noalias !44
  br label %527

527:                                              ; preds = %507, %509
  br i1 %28, label %539, label %528

528:                                              ; preds = %527, %461
  %529 = phi i8* [ %459, %461 ], [ %463, %527 ]
  %530 = phi i8* [ %454, %461 ], [ %464, %527 ]
  br label %531

531:                                              ; preds = %528, %531
  %532 = phi i8* [ %537, %531 ], [ %529, %528 ]
  %533 = phi i8* [ %534, %531 ], [ %530, %528 ]
  %534 = getelementptr inbounds i8, i8* %533, i64 1
  %535 = load i8, i8* %532, align 1, !alias.scope !44, !noalias !41
  %536 = load i8, i8* %534, align 1, !alias.scope !41, !noalias !44
  store i8 %536, i8* %532, align 1, !alias.scope !44, !noalias !41
  store i8 %535, i8* %534, align 1, !alias.scope !41, !noalias !44
  %537 = getelementptr inbounds i8, i8* %532, i64 1
  %538 = icmp ult i8* %537, %440
  br i1 %538, label %531, label %539, !llvm.loop !47

539:                                              ; preds = %531, %456, %527, %453, %451
  %540 = phi i8* [ %454, %453 ], [ %439, %451 ], [ %454, %527 ], [ %454, %456 ], [ %454, %531 ]
  %541 = icmp ult i8* %431, %441
  br i1 %541, label %542, label %657

542:                                              ; preds = %539
  %543 = load i32, i32* %312, align 1
  br label %437

544:                                              ; preds = %422
  %545 = icmp eq i32 %321, %426
  %546 = getelementptr inbounds i8, i8* %423, i64 %2
  %547 = select i1 %545, i8* %546, i8* %423
  %548 = getelementptr inbounds i8, i8* %424, i64 %2
  %549 = icmp ult i8* %548, %315
  br i1 %549, label %422, label %662

550:                                              ; preds = %435, %654
  %551 = phi i8* [ %655, %654 ], [ %314, %435 ]
  %552 = phi i8* [ %553, %654 ], [ %315, %435 ]
  %553 = getelementptr inbounds i8, i8* %552, i64 %8
  %554 = bitcast i8* %553 to i32*
  %555 = load i32, i32* %554, align 1
  %556 = tail call i32 @llvm.bswap.i32(i32 %555) #11
  %557 = icmp ult i32 %436, %556
  %558 = icmp ne i32 %430, %555
  %559 = sext i1 %558 to i32
  %560 = select i1 %557, i32 1, i32 %559
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %564

562:                                              ; preds = %550
  %563 = getelementptr inbounds i8, i8* %551, i64 %8
  br label %654

564:                                              ; preds = %550
  %565 = icmp slt i32 %560, 0
  br i1 %565, label %566, label %654

566:                                              ; preds = %564, %451
  %567 = phi i32 [ %443, %451 ], [ %555, %564 ]
  %568 = phi i8* [ %441, %451 ], [ %553, %564 ]
  %569 = phi i8* [ %439, %451 ], [ %551, %564 ]
  %570 = icmp ult i8* %431, %568
  br i1 %570, label %571, label %652

571:                                              ; preds = %566
  %572 = getelementptr inbounds i8, i8* %431, i64 %2
  br i1 %9, label %573, label %652

573:                                              ; preds = %571
  %574 = trunc i32 %567 to i8
  %575 = load i8, i8* %431, align 1, !alias.scope !48, !noalias !51
  store i8 %574, i8* %431, align 1, !alias.scope !48, !noalias !51
  store i8 %575, i8* %568, align 1, !alias.scope !51, !noalias !48
  %576 = getelementptr inbounds i8, i8* %431, i64 1
  %577 = getelementptr inbounds i8, i8* %568, i64 1
  br i1 %29, label %652, label %578

578:                                              ; preds = %573
  br i1 %30, label %641, label %579

579:                                              ; preds = %578
  %580 = getelementptr i8, i8* %577, i64 %31
  %581 = getelementptr i8, i8* %576, i64 %31
  br i1 %33, label %621, label %582

582:                                              ; preds = %579, %582
  %583 = phi i64 [ %618, %582 ], [ 0, %579 ]
  %584 = phi i64 [ %619, %582 ], [ %34, %579 ]
  %585 = getelementptr i8, i8* %577, i64 %583
  %586 = getelementptr i8, i8* %576, i64 %583
  %587 = bitcast i8* %585 to <16 x i8>*
  %588 = load <16 x i8>, <16 x i8>* %587, align 1, !alias.scope !51, !noalias !48
  %589 = getelementptr i8, i8* %585, i64 16
  %590 = bitcast i8* %589 to <16 x i8>*
  %591 = load <16 x i8>, <16 x i8>* %590, align 1, !alias.scope !51, !noalias !48
  %592 = bitcast i8* %586 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !48, !noalias !51
  %594 = getelementptr i8, i8* %586, i64 16
  %595 = bitcast i8* %594 to <16 x i8>*
  %596 = load <16 x i8>, <16 x i8>* %595, align 1, !alias.scope !48, !noalias !51
  %597 = bitcast i8* %586 to <16 x i8>*
  store <16 x i8> %588, <16 x i8>* %597, align 1, !alias.scope !48, !noalias !51
  %598 = bitcast i8* %594 to <16 x i8>*
  store <16 x i8> %591, <16 x i8>* %598, align 1, !alias.scope !48, !noalias !51
  %599 = bitcast i8* %585 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %599, align 1, !alias.scope !51, !noalias !48
  %600 = bitcast i8* %589 to <16 x i8>*
  store <16 x i8> %596, <16 x i8>* %600, align 1, !alias.scope !51, !noalias !48
  %601 = or i64 %583, 32
  %602 = getelementptr i8, i8* %577, i64 %601
  %603 = getelementptr i8, i8* %576, i64 %601
  %604 = bitcast i8* %602 to <16 x i8>*
  %605 = load <16 x i8>, <16 x i8>* %604, align 1, !alias.scope !51, !noalias !48
  %606 = getelementptr i8, i8* %602, i64 16
  %607 = bitcast i8* %606 to <16 x i8>*
  %608 = load <16 x i8>, <16 x i8>* %607, align 1, !alias.scope !51, !noalias !48
  %609 = bitcast i8* %603 to <16 x i8>*
  %610 = load <16 x i8>, <16 x i8>* %609, align 1, !alias.scope !48, !noalias !51
  %611 = getelementptr i8, i8* %603, i64 16
  %612 = bitcast i8* %611 to <16 x i8>*
  %613 = load <16 x i8>, <16 x i8>* %612, align 1, !alias.scope !48, !noalias !51
  %614 = bitcast i8* %603 to <16 x i8>*
  store <16 x i8> %605, <16 x i8>* %614, align 1, !alias.scope !48, !noalias !51
  %615 = bitcast i8* %611 to <16 x i8>*
  store <16 x i8> %608, <16 x i8>* %615, align 1, !alias.scope !48, !noalias !51
  %616 = bitcast i8* %602 to <16 x i8>*
  store <16 x i8> %610, <16 x i8>* %616, align 1, !alias.scope !51, !noalias !48
  %617 = bitcast i8* %606 to <16 x i8>*
  store <16 x i8> %613, <16 x i8>* %617, align 1, !alias.scope !51, !noalias !48
  %618 = add i64 %583, 64
  %619 = add i64 %584, -2
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %621, label %582, !llvm.loop !53

621:                                              ; preds = %582, %579
  %622 = phi i64 [ 0, %579 ], [ %618, %582 ]
  br i1 %35, label %640, label %623

623:                                              ; preds = %621
  %624 = getelementptr i8, i8* %577, i64 %622
  %625 = getelementptr i8, i8* %576, i64 %622
  %626 = bitcast i8* %624 to <16 x i8>*
  %627 = load <16 x i8>, <16 x i8>* %626, align 1, !alias.scope !51, !noalias !48
  %628 = getelementptr i8, i8* %624, i64 16
  %629 = bitcast i8* %628 to <16 x i8>*
  %630 = load <16 x i8>, <16 x i8>* %629, align 1, !alias.scope !51, !noalias !48
  %631 = bitcast i8* %625 to <16 x i8>*
  %632 = load <16 x i8>, <16 x i8>* %631, align 1, !alias.scope !48, !noalias !51
  %633 = getelementptr i8, i8* %625, i64 16
  %634 = bitcast i8* %633 to <16 x i8>*
  %635 = load <16 x i8>, <16 x i8>* %634, align 1, !alias.scope !48, !noalias !51
  %636 = bitcast i8* %625 to <16 x i8>*
  store <16 x i8> %627, <16 x i8>* %636, align 1, !alias.scope !48, !noalias !51
  %637 = bitcast i8* %633 to <16 x i8>*
  store <16 x i8> %630, <16 x i8>* %637, align 1, !alias.scope !48, !noalias !51
  %638 = bitcast i8* %624 to <16 x i8>*
  store <16 x i8> %632, <16 x i8>* %638, align 1, !alias.scope !51, !noalias !48
  %639 = bitcast i8* %628 to <16 x i8>*
  store <16 x i8> %635, <16 x i8>* %639, align 1, !alias.scope !51, !noalias !48
  br label %640

640:                                              ; preds = %621, %623
  br i1 %36, label %652, label %641

641:                                              ; preds = %640, %578
  %642 = phi i8* [ %577, %578 ], [ %580, %640 ]
  %643 = phi i8* [ %576, %578 ], [ %581, %640 ]
  br label %644

644:                                              ; preds = %641, %644
  %645 = phi i8* [ %650, %644 ], [ %642, %641 ]
  %646 = phi i8* [ %649, %644 ], [ %643, %641 ]
  %647 = load i8, i8* %645, align 1, !alias.scope !51, !noalias !48
  %648 = load i8, i8* %646, align 1, !alias.scope !48, !noalias !51
  store i8 %647, i8* %646, align 1, !alias.scope !48, !noalias !51
  store i8 %648, i8* %645, align 1, !alias.scope !51, !noalias !48
  %649 = getelementptr inbounds i8, i8* %646, i64 1
  %650 = getelementptr inbounds i8, i8* %645, i64 1
  %651 = icmp ult i8* %649, %572
  br i1 %651, label %644, label %652, !llvm.loop !54

652:                                              ; preds = %644, %573, %640, %571, %566
  %653 = getelementptr inbounds i8, i8* %431, i64 %2
  br label %657

654:                                              ; preds = %562, %564
  %655 = phi i8* [ %563, %562 ], [ %551, %564 ]
  %656 = icmp ult i8* %431, %553
  br i1 %656, label %550, label %657

657:                                              ; preds = %654, %539, %429, %652
  %658 = phi i8* [ %569, %652 ], [ %314, %429 ], [ %540, %539 ], [ %655, %654 ]
  %659 = phi i8* [ %653, %652 ], [ %431, %429 ], [ %431, %539 ], [ %431, %654 ]
  %660 = phi i8* [ %568, %652 ], [ %315, %429 ], [ %441, %539 ], [ %553, %654 ]
  %661 = icmp ult i8* %659, %660
  br i1 %661, label %313, label %662

662:                                              ; preds = %657, %313, %544, %418, %309
  %663 = phi i8* [ %185, %309 ], [ %315, %418 ], [ %315, %544 ], [ %315, %313 ], [ %660, %657 ]
  %664 = phi i8* [ %185, %309 ], [ %314, %418 ], [ %314, %544 ], [ %314, %313 ], [ %658, %657 ]
  %665 = phi i8* [ %181, %309 ], [ %419, %418 ], [ %547, %544 ], [ %316, %313 ], [ %432, %657 ]
  %666 = ptrtoint i8* %663 to i64
  %667 = ptrtoint i8* %665 to i64
  %668 = sub i64 %667, %182
  %669 = sub i64 %666, %667
  %670 = icmp ne i64 %668, 0
  %671 = icmp ne i64 %669, 0
  %672 = and i1 %670, %671
  br i1 %672, label %673, label %861

673:                                              ; preds = %662
  %674 = icmp ugt i64 %668, %669
  br i1 %674, label %675, label %768

675:                                              ; preds = %673
  %676 = getelementptr inbounds i8, i8* %181, i64 %669
  %677 = icmp sgt i64 %669, 0
  br i1 %677, label %678, label %861

678:                                              ; preds = %675
  %679 = getelementptr i8, i8* %181, i64 1
  %680 = icmp ugt i8* %676, %679
  %681 = select i1 %680, i8* %676, i8* %679
  %682 = ptrtoint i8* %681 to i64
  %683 = sub i64 %682, %182
  %684 = icmp ult i64 %683, 32
  br i1 %684, label %757, label %685

685:                                              ; preds = %678
  %686 = and i64 %683, -32
  %687 = getelementptr i8, i8* %181, i64 %686
  %688 = getelementptr i8, i8* %665, i64 %686
  %689 = add i64 %686, -32
  %690 = lshr exact i64 %689, 5
  %691 = add nuw nsw i64 %690, 1
  %692 = and i64 %691, 1
  %693 = icmp eq i64 %689, 0
  br i1 %693, label %735, label %694

694:                                              ; preds = %685
  %695 = sub nuw nsw i64 %691, %692
  br label %696

696:                                              ; preds = %696, %694
  %697 = phi i64 [ 0, %694 ], [ %732, %696 ]
  %698 = phi i64 [ %695, %694 ], [ %733, %696 ]
  %699 = getelementptr i8, i8* %181, i64 %697
  %700 = getelementptr i8, i8* %665, i64 %697
  %701 = bitcast i8* %699 to <16 x i8>*
  %702 = load <16 x i8>, <16 x i8>* %701, align 1, !alias.scope !55, !noalias !58
  %703 = getelementptr i8, i8* %699, i64 16
  %704 = bitcast i8* %703 to <16 x i8>*
  %705 = load <16 x i8>, <16 x i8>* %704, align 1, !alias.scope !55, !noalias !58
  %706 = bitcast i8* %700 to <16 x i8>*
  %707 = load <16 x i8>, <16 x i8>* %706, align 1, !alias.scope !58, !noalias !55
  %708 = getelementptr i8, i8* %700, i64 16
  %709 = bitcast i8* %708 to <16 x i8>*
  %710 = load <16 x i8>, <16 x i8>* %709, align 1, !alias.scope !58, !noalias !55
  %711 = bitcast i8* %699 to <16 x i8>*
  store <16 x i8> %707, <16 x i8>* %711, align 1, !alias.scope !55, !noalias !58
  %712 = bitcast i8* %703 to <16 x i8>*
  store <16 x i8> %710, <16 x i8>* %712, align 1, !alias.scope !55, !noalias !58
  %713 = bitcast i8* %700 to <16 x i8>*
  store <16 x i8> %702, <16 x i8>* %713, align 1, !alias.scope !58, !noalias !55
  %714 = bitcast i8* %708 to <16 x i8>*
  store <16 x i8> %705, <16 x i8>* %714, align 1, !alias.scope !58, !noalias !55
  %715 = or i64 %697, 32
  %716 = getelementptr i8, i8* %181, i64 %715
  %717 = getelementptr i8, i8* %665, i64 %715
  %718 = bitcast i8* %716 to <16 x i8>*
  %719 = load <16 x i8>, <16 x i8>* %718, align 1, !alias.scope !55, !noalias !58
  %720 = getelementptr i8, i8* %716, i64 16
  %721 = bitcast i8* %720 to <16 x i8>*
  %722 = load <16 x i8>, <16 x i8>* %721, align 1, !alias.scope !55, !noalias !58
  %723 = bitcast i8* %717 to <16 x i8>*
  %724 = load <16 x i8>, <16 x i8>* %723, align 1, !alias.scope !58, !noalias !55
  %725 = getelementptr i8, i8* %717, i64 16
  %726 = bitcast i8* %725 to <16 x i8>*
  %727 = load <16 x i8>, <16 x i8>* %726, align 1, !alias.scope !58, !noalias !55
  %728 = bitcast i8* %716 to <16 x i8>*
  store <16 x i8> %724, <16 x i8>* %728, align 1, !alias.scope !55, !noalias !58
  %729 = bitcast i8* %720 to <16 x i8>*
  store <16 x i8> %727, <16 x i8>* %729, align 1, !alias.scope !55, !noalias !58
  %730 = bitcast i8* %717 to <16 x i8>*
  store <16 x i8> %719, <16 x i8>* %730, align 1, !alias.scope !58, !noalias !55
  %731 = bitcast i8* %725 to <16 x i8>*
  store <16 x i8> %722, <16 x i8>* %731, align 1, !alias.scope !58, !noalias !55
  %732 = add i64 %697, 64
  %733 = add i64 %698, -2
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %735, label %696, !llvm.loop !60

735:                                              ; preds = %696, %685
  %736 = phi i64 [ 0, %685 ], [ %732, %696 ]
  %737 = icmp eq i64 %692, 0
  br i1 %737, label %755, label %738

738:                                              ; preds = %735
  %739 = getelementptr i8, i8* %181, i64 %736
  %740 = getelementptr i8, i8* %665, i64 %736
  %741 = bitcast i8* %739 to <16 x i8>*
  %742 = load <16 x i8>, <16 x i8>* %741, align 1, !alias.scope !55, !noalias !58
  %743 = getelementptr i8, i8* %739, i64 16
  %744 = bitcast i8* %743 to <16 x i8>*
  %745 = load <16 x i8>, <16 x i8>* %744, align 1, !alias.scope !55, !noalias !58
  %746 = bitcast i8* %740 to <16 x i8>*
  %747 = load <16 x i8>, <16 x i8>* %746, align 1, !alias.scope !58, !noalias !55
  %748 = getelementptr i8, i8* %740, i64 16
  %749 = bitcast i8* %748 to <16 x i8>*
  %750 = load <16 x i8>, <16 x i8>* %749, align 1, !alias.scope !58, !noalias !55
  %751 = bitcast i8* %739 to <16 x i8>*
  store <16 x i8> %747, <16 x i8>* %751, align 1, !alias.scope !55, !noalias !58
  %752 = bitcast i8* %743 to <16 x i8>*
  store <16 x i8> %750, <16 x i8>* %752, align 1, !alias.scope !55, !noalias !58
  %753 = bitcast i8* %740 to <16 x i8>*
  store <16 x i8> %742, <16 x i8>* %753, align 1, !alias.scope !58, !noalias !55
  %754 = bitcast i8* %748 to <16 x i8>*
  store <16 x i8> %745, <16 x i8>* %754, align 1, !alias.scope !58, !noalias !55
  br label %755

755:                                              ; preds = %735, %738
  %756 = icmp eq i64 %683, %686
  br i1 %756, label %861, label %757

757:                                              ; preds = %755, %678
  %758 = phi i8* [ %181, %678 ], [ %687, %755 ]
  %759 = phi i8* [ %665, %678 ], [ %688, %755 ]
  br label %760

760:                                              ; preds = %757, %760
  %761 = phi i8* [ %765, %760 ], [ %758, %757 ]
  %762 = phi i8* [ %766, %760 ], [ %759, %757 ]
  %763 = load i8, i8* %761, align 1, !alias.scope !55, !noalias !58
  %764 = load i8, i8* %762, align 1, !alias.scope !58, !noalias !55
  store i8 %764, i8* %761, align 1, !alias.scope !55, !noalias !58
  store i8 %763, i8* %762, align 1, !alias.scope !58, !noalias !55
  %765 = getelementptr inbounds i8, i8* %761, i64 1
  %766 = getelementptr inbounds i8, i8* %762, i64 1
  %767 = icmp ult i8* %765, %676
  br i1 %767, label %760, label %861, !llvm.loop !61

768:                                              ; preds = %673
  %769 = icmp sgt i64 %668, 0
  br i1 %769, label %770, label %861

770:                                              ; preds = %768
  %771 = getelementptr inbounds i8, i8* %181, i64 %669
  %772 = getelementptr i8, i8* %181, i64 1
  %773 = icmp ugt i8* %665, %772
  %774 = select i1 %773, i8* %665, i8* %772
  %775 = ptrtoint i8* %774 to i64
  %776 = sub i64 %775, %182
  %777 = icmp ult i64 %776, 32
  br i1 %777, label %850, label %778

778:                                              ; preds = %770
  %779 = and i64 %776, -32
  %780 = getelementptr i8, i8* %181, i64 %779
  %781 = getelementptr i8, i8* %771, i64 %779
  %782 = add i64 %779, -32
  %783 = lshr exact i64 %782, 5
  %784 = add nuw nsw i64 %783, 1
  %785 = and i64 %784, 1
  %786 = icmp eq i64 %782, 0
  br i1 %786, label %828, label %787

787:                                              ; preds = %778
  %788 = sub nuw nsw i64 %784, %785
  br label %789

789:                                              ; preds = %789, %787
  %790 = phi i64 [ 0, %787 ], [ %825, %789 ]
  %791 = phi i64 [ %788, %787 ], [ %826, %789 ]
  %792 = getelementptr i8, i8* %181, i64 %790
  %793 = getelementptr i8, i8* %771, i64 %790
  %794 = bitcast i8* %792 to <16 x i8>*
  %795 = load <16 x i8>, <16 x i8>* %794, align 1, !alias.scope !62, !noalias !65
  %796 = getelementptr i8, i8* %792, i64 16
  %797 = bitcast i8* %796 to <16 x i8>*
  %798 = load <16 x i8>, <16 x i8>* %797, align 1, !alias.scope !62, !noalias !65
  %799 = bitcast i8* %793 to <16 x i8>*
  %800 = load <16 x i8>, <16 x i8>* %799, align 1, !alias.scope !65, !noalias !62
  %801 = getelementptr i8, i8* %793, i64 16
  %802 = bitcast i8* %801 to <16 x i8>*
  %803 = load <16 x i8>, <16 x i8>* %802, align 1, !alias.scope !65, !noalias !62
  %804 = bitcast i8* %792 to <16 x i8>*
  store <16 x i8> %800, <16 x i8>* %804, align 1, !alias.scope !62, !noalias !65
  %805 = bitcast i8* %796 to <16 x i8>*
  store <16 x i8> %803, <16 x i8>* %805, align 1, !alias.scope !62, !noalias !65
  %806 = bitcast i8* %793 to <16 x i8>*
  store <16 x i8> %795, <16 x i8>* %806, align 1, !alias.scope !65, !noalias !62
  %807 = bitcast i8* %801 to <16 x i8>*
  store <16 x i8> %798, <16 x i8>* %807, align 1, !alias.scope !65, !noalias !62
  %808 = or i64 %790, 32
  %809 = getelementptr i8, i8* %181, i64 %808
  %810 = getelementptr i8, i8* %771, i64 %808
  %811 = bitcast i8* %809 to <16 x i8>*
  %812 = load <16 x i8>, <16 x i8>* %811, align 1, !alias.scope !62, !noalias !65
  %813 = getelementptr i8, i8* %809, i64 16
  %814 = bitcast i8* %813 to <16 x i8>*
  %815 = load <16 x i8>, <16 x i8>* %814, align 1, !alias.scope !62, !noalias !65
  %816 = bitcast i8* %810 to <16 x i8>*
  %817 = load <16 x i8>, <16 x i8>* %816, align 1, !alias.scope !65, !noalias !62
  %818 = getelementptr i8, i8* %810, i64 16
  %819 = bitcast i8* %818 to <16 x i8>*
  %820 = load <16 x i8>, <16 x i8>* %819, align 1, !alias.scope !65, !noalias !62
  %821 = bitcast i8* %809 to <16 x i8>*
  store <16 x i8> %817, <16 x i8>* %821, align 1, !alias.scope !62, !noalias !65
  %822 = bitcast i8* %813 to <16 x i8>*
  store <16 x i8> %820, <16 x i8>* %822, align 1, !alias.scope !62, !noalias !65
  %823 = bitcast i8* %810 to <16 x i8>*
  store <16 x i8> %812, <16 x i8>* %823, align 1, !alias.scope !65, !noalias !62
  %824 = bitcast i8* %818 to <16 x i8>*
  store <16 x i8> %815, <16 x i8>* %824, align 1, !alias.scope !65, !noalias !62
  %825 = add i64 %790, 64
  %826 = add i64 %791, -2
  %827 = icmp eq i64 %826, 0
  br i1 %827, label %828, label %789, !llvm.loop !67

828:                                              ; preds = %789, %778
  %829 = phi i64 [ 0, %778 ], [ %825, %789 ]
  %830 = icmp eq i64 %785, 0
  br i1 %830, label %848, label %831

831:                                              ; preds = %828
  %832 = getelementptr i8, i8* %181, i64 %829
  %833 = getelementptr i8, i8* %771, i64 %829
  %834 = bitcast i8* %832 to <16 x i8>*
  %835 = load <16 x i8>, <16 x i8>* %834, align 1, !alias.scope !62, !noalias !65
  %836 = getelementptr i8, i8* %832, i64 16
  %837 = bitcast i8* %836 to <16 x i8>*
  %838 = load <16 x i8>, <16 x i8>* %837, align 1, !alias.scope !62, !noalias !65
  %839 = bitcast i8* %833 to <16 x i8>*
  %840 = load <16 x i8>, <16 x i8>* %839, align 1, !alias.scope !65, !noalias !62
  %841 = getelementptr i8, i8* %833, i64 16
  %842 = bitcast i8* %841 to <16 x i8>*
  %843 = load <16 x i8>, <16 x i8>* %842, align 1, !alias.scope !65, !noalias !62
  %844 = bitcast i8* %832 to <16 x i8>*
  store <16 x i8> %840, <16 x i8>* %844, align 1, !alias.scope !62, !noalias !65
  %845 = bitcast i8* %836 to <16 x i8>*
  store <16 x i8> %843, <16 x i8>* %845, align 1, !alias.scope !62, !noalias !65
  %846 = bitcast i8* %833 to <16 x i8>*
  store <16 x i8> %835, <16 x i8>* %846, align 1, !alias.scope !65, !noalias !62
  %847 = bitcast i8* %841 to <16 x i8>*
  store <16 x i8> %838, <16 x i8>* %847, align 1, !alias.scope !65, !noalias !62
  br label %848

848:                                              ; preds = %828, %831
  %849 = icmp eq i64 %776, %779
  br i1 %849, label %861, label %850

850:                                              ; preds = %848, %770
  %851 = phi i8* [ %181, %770 ], [ %780, %848 ]
  %852 = phi i8* [ %771, %770 ], [ %781, %848 ]
  br label %853

853:                                              ; preds = %850, %853
  %854 = phi i8* [ %858, %853 ], [ %851, %850 ]
  %855 = phi i8* [ %859, %853 ], [ %852, %850 ]
  %856 = load i8, i8* %854, align 1, !alias.scope !62, !noalias !65
  %857 = load i8, i8* %855, align 1, !alias.scope !65, !noalias !62
  store i8 %857, i8* %854, align 1, !alias.scope !62, !noalias !65
  store i8 %856, i8* %855, align 1, !alias.scope !65, !noalias !62
  %858 = getelementptr inbounds i8, i8* %854, i64 1
  %859 = getelementptr inbounds i8, i8* %855, i64 1
  %860 = icmp ult i8* %858, %665
  br i1 %860, label %853, label %861, !llvm.loop !68

861:                                              ; preds = %853, %760, %848, %755, %662, %675, %768
  %862 = ptrtoint i8* %664 to i64
  %863 = sub i64 %862, %666
  %864 = ptrtoint i8* %179 to i64
  %865 = sub i64 %864, %862
  %866 = icmp ne i64 %863, 0
  %867 = icmp ne i64 %865, 0
  %868 = and i1 %866, %867
  br i1 %868, label %869, label %1057

869:                                              ; preds = %861
  %870 = icmp ugt i64 %863, %865
  br i1 %870, label %871, label %964

871:                                              ; preds = %869
  %872 = getelementptr inbounds i8, i8* %663, i64 %865
  %873 = icmp sgt i64 %865, 0
  br i1 %873, label %874, label %1057

874:                                              ; preds = %871
  %875 = getelementptr i8, i8* %663, i64 1
  %876 = icmp ugt i8* %872, %875
  %877 = select i1 %876, i8* %872, i8* %875
  %878 = ptrtoint i8* %877 to i64
  %879 = sub i64 %878, %666
  %880 = icmp ult i64 %879, 32
  br i1 %880, label %953, label %881

881:                                              ; preds = %874
  %882 = and i64 %879, -32
  %883 = getelementptr i8, i8* %663, i64 %882
  %884 = getelementptr i8, i8* %664, i64 %882
  %885 = add i64 %882, -32
  %886 = lshr exact i64 %885, 5
  %887 = add nuw nsw i64 %886, 1
  %888 = and i64 %887, 1
  %889 = icmp eq i64 %885, 0
  br i1 %889, label %931, label %890

890:                                              ; preds = %881
  %891 = sub nuw nsw i64 %887, %888
  br label %892

892:                                              ; preds = %892, %890
  %893 = phi i64 [ 0, %890 ], [ %928, %892 ]
  %894 = phi i64 [ %891, %890 ], [ %929, %892 ]
  %895 = getelementptr i8, i8* %663, i64 %893
  %896 = getelementptr i8, i8* %664, i64 %893
  %897 = bitcast i8* %895 to <16 x i8>*
  %898 = load <16 x i8>, <16 x i8>* %897, align 1, !alias.scope !69, !noalias !72
  %899 = getelementptr i8, i8* %895, i64 16
  %900 = bitcast i8* %899 to <16 x i8>*
  %901 = load <16 x i8>, <16 x i8>* %900, align 1, !alias.scope !69, !noalias !72
  %902 = bitcast i8* %896 to <16 x i8>*
  %903 = load <16 x i8>, <16 x i8>* %902, align 1, !alias.scope !72, !noalias !69
  %904 = getelementptr i8, i8* %896, i64 16
  %905 = bitcast i8* %904 to <16 x i8>*
  %906 = load <16 x i8>, <16 x i8>* %905, align 1, !alias.scope !72, !noalias !69
  %907 = bitcast i8* %895 to <16 x i8>*
  store <16 x i8> %903, <16 x i8>* %907, align 1, !alias.scope !69, !noalias !72
  %908 = bitcast i8* %899 to <16 x i8>*
  store <16 x i8> %906, <16 x i8>* %908, align 1, !alias.scope !69, !noalias !72
  %909 = bitcast i8* %896 to <16 x i8>*
  store <16 x i8> %898, <16 x i8>* %909, align 1, !alias.scope !72, !noalias !69
  %910 = bitcast i8* %904 to <16 x i8>*
  store <16 x i8> %901, <16 x i8>* %910, align 1, !alias.scope !72, !noalias !69
  %911 = or i64 %893, 32
  %912 = getelementptr i8, i8* %663, i64 %911
  %913 = getelementptr i8, i8* %664, i64 %911
  %914 = bitcast i8* %912 to <16 x i8>*
  %915 = load <16 x i8>, <16 x i8>* %914, align 1, !alias.scope !69, !noalias !72
  %916 = getelementptr i8, i8* %912, i64 16
  %917 = bitcast i8* %916 to <16 x i8>*
  %918 = load <16 x i8>, <16 x i8>* %917, align 1, !alias.scope !69, !noalias !72
  %919 = bitcast i8* %913 to <16 x i8>*
  %920 = load <16 x i8>, <16 x i8>* %919, align 1, !alias.scope !72, !noalias !69
  %921 = getelementptr i8, i8* %913, i64 16
  %922 = bitcast i8* %921 to <16 x i8>*
  %923 = load <16 x i8>, <16 x i8>* %922, align 1, !alias.scope !72, !noalias !69
  %924 = bitcast i8* %912 to <16 x i8>*
  store <16 x i8> %920, <16 x i8>* %924, align 1, !alias.scope !69, !noalias !72
  %925 = bitcast i8* %916 to <16 x i8>*
  store <16 x i8> %923, <16 x i8>* %925, align 1, !alias.scope !69, !noalias !72
  %926 = bitcast i8* %913 to <16 x i8>*
  store <16 x i8> %915, <16 x i8>* %926, align 1, !alias.scope !72, !noalias !69
  %927 = bitcast i8* %921 to <16 x i8>*
  store <16 x i8> %918, <16 x i8>* %927, align 1, !alias.scope !72, !noalias !69
  %928 = add i64 %893, 64
  %929 = add i64 %894, -2
  %930 = icmp eq i64 %929, 0
  br i1 %930, label %931, label %892, !llvm.loop !74

931:                                              ; preds = %892, %881
  %932 = phi i64 [ 0, %881 ], [ %928, %892 ]
  %933 = icmp eq i64 %888, 0
  br i1 %933, label %951, label %934

934:                                              ; preds = %931
  %935 = getelementptr i8, i8* %663, i64 %932
  %936 = getelementptr i8, i8* %664, i64 %932
  %937 = bitcast i8* %935 to <16 x i8>*
  %938 = load <16 x i8>, <16 x i8>* %937, align 1, !alias.scope !69, !noalias !72
  %939 = getelementptr i8, i8* %935, i64 16
  %940 = bitcast i8* %939 to <16 x i8>*
  %941 = load <16 x i8>, <16 x i8>* %940, align 1, !alias.scope !69, !noalias !72
  %942 = bitcast i8* %936 to <16 x i8>*
  %943 = load <16 x i8>, <16 x i8>* %942, align 1, !alias.scope !72, !noalias !69
  %944 = getelementptr i8, i8* %936, i64 16
  %945 = bitcast i8* %944 to <16 x i8>*
  %946 = load <16 x i8>, <16 x i8>* %945, align 1, !alias.scope !72, !noalias !69
  %947 = bitcast i8* %935 to <16 x i8>*
  store <16 x i8> %943, <16 x i8>* %947, align 1, !alias.scope !69, !noalias !72
  %948 = bitcast i8* %939 to <16 x i8>*
  store <16 x i8> %946, <16 x i8>* %948, align 1, !alias.scope !69, !noalias !72
  %949 = bitcast i8* %936 to <16 x i8>*
  store <16 x i8> %938, <16 x i8>* %949, align 1, !alias.scope !72, !noalias !69
  %950 = bitcast i8* %944 to <16 x i8>*
  store <16 x i8> %941, <16 x i8>* %950, align 1, !alias.scope !72, !noalias !69
  br label %951

951:                                              ; preds = %931, %934
  %952 = icmp eq i64 %879, %882
  br i1 %952, label %1057, label %953

953:                                              ; preds = %951, %874
  %954 = phi i8* [ %663, %874 ], [ %883, %951 ]
  %955 = phi i8* [ %664, %874 ], [ %884, %951 ]
  br label %956

956:                                              ; preds = %953, %956
  %957 = phi i8* [ %961, %956 ], [ %954, %953 ]
  %958 = phi i8* [ %962, %956 ], [ %955, %953 ]
  %959 = load i8, i8* %957, align 1, !alias.scope !69, !noalias !72
  %960 = load i8, i8* %958, align 1, !alias.scope !72, !noalias !69
  store i8 %960, i8* %957, align 1, !alias.scope !69, !noalias !72
  store i8 %959, i8* %958, align 1, !alias.scope !72, !noalias !69
  %961 = getelementptr inbounds i8, i8* %957, i64 1
  %962 = getelementptr inbounds i8, i8* %958, i64 1
  %963 = icmp ult i8* %961, %872
  br i1 %963, label %956, label %1057, !llvm.loop !75

964:                                              ; preds = %869
  %965 = icmp sgt i64 %863, 0
  br i1 %965, label %966, label %1057

966:                                              ; preds = %964
  %967 = getelementptr inbounds i8, i8* %663, i64 %865
  %968 = getelementptr i8, i8* %663, i64 1
  %969 = icmp ugt i8* %664, %968
  %970 = select i1 %969, i8* %664, i8* %968
  %971 = ptrtoint i8* %970 to i64
  %972 = sub i64 %971, %666
  %973 = icmp ult i64 %972, 32
  br i1 %973, label %1046, label %974

974:                                              ; preds = %966
  %975 = and i64 %972, -32
  %976 = getelementptr i8, i8* %663, i64 %975
  %977 = getelementptr i8, i8* %967, i64 %975
  %978 = add i64 %975, -32
  %979 = lshr exact i64 %978, 5
  %980 = add nuw nsw i64 %979, 1
  %981 = and i64 %980, 1
  %982 = icmp eq i64 %978, 0
  br i1 %982, label %1024, label %983

983:                                              ; preds = %974
  %984 = sub nuw nsw i64 %980, %981
  br label %985

985:                                              ; preds = %985, %983
  %986 = phi i64 [ 0, %983 ], [ %1021, %985 ]
  %987 = phi i64 [ %984, %983 ], [ %1022, %985 ]
  %988 = getelementptr i8, i8* %663, i64 %986
  %989 = getelementptr i8, i8* %967, i64 %986
  %990 = bitcast i8* %988 to <16 x i8>*
  %991 = load <16 x i8>, <16 x i8>* %990, align 1, !alias.scope !76, !noalias !79
  %992 = getelementptr i8, i8* %988, i64 16
  %993 = bitcast i8* %992 to <16 x i8>*
  %994 = load <16 x i8>, <16 x i8>* %993, align 1, !alias.scope !76, !noalias !79
  %995 = bitcast i8* %989 to <16 x i8>*
  %996 = load <16 x i8>, <16 x i8>* %995, align 1, !alias.scope !79, !noalias !76
  %997 = getelementptr i8, i8* %989, i64 16
  %998 = bitcast i8* %997 to <16 x i8>*
  %999 = load <16 x i8>, <16 x i8>* %998, align 1, !alias.scope !79, !noalias !76
  %1000 = bitcast i8* %988 to <16 x i8>*
  store <16 x i8> %996, <16 x i8>* %1000, align 1, !alias.scope !76, !noalias !79
  %1001 = bitcast i8* %992 to <16 x i8>*
  store <16 x i8> %999, <16 x i8>* %1001, align 1, !alias.scope !76, !noalias !79
  %1002 = bitcast i8* %989 to <16 x i8>*
  store <16 x i8> %991, <16 x i8>* %1002, align 1, !alias.scope !79, !noalias !76
  %1003 = bitcast i8* %997 to <16 x i8>*
  store <16 x i8> %994, <16 x i8>* %1003, align 1, !alias.scope !79, !noalias !76
  %1004 = or i64 %986, 32
  %1005 = getelementptr i8, i8* %663, i64 %1004
  %1006 = getelementptr i8, i8* %967, i64 %1004
  %1007 = bitcast i8* %1005 to <16 x i8>*
  %1008 = load <16 x i8>, <16 x i8>* %1007, align 1, !alias.scope !76, !noalias !79
  %1009 = getelementptr i8, i8* %1005, i64 16
  %1010 = bitcast i8* %1009 to <16 x i8>*
  %1011 = load <16 x i8>, <16 x i8>* %1010, align 1, !alias.scope !76, !noalias !79
  %1012 = bitcast i8* %1006 to <16 x i8>*
  %1013 = load <16 x i8>, <16 x i8>* %1012, align 1, !alias.scope !79, !noalias !76
  %1014 = getelementptr i8, i8* %1006, i64 16
  %1015 = bitcast i8* %1014 to <16 x i8>*
  %1016 = load <16 x i8>, <16 x i8>* %1015, align 1, !alias.scope !79, !noalias !76
  %1017 = bitcast i8* %1005 to <16 x i8>*
  store <16 x i8> %1013, <16 x i8>* %1017, align 1, !alias.scope !76, !noalias !79
  %1018 = bitcast i8* %1009 to <16 x i8>*
  store <16 x i8> %1016, <16 x i8>* %1018, align 1, !alias.scope !76, !noalias !79
  %1019 = bitcast i8* %1006 to <16 x i8>*
  store <16 x i8> %1008, <16 x i8>* %1019, align 1, !alias.scope !79, !noalias !76
  %1020 = bitcast i8* %1014 to <16 x i8>*
  store <16 x i8> %1011, <16 x i8>* %1020, align 1, !alias.scope !79, !noalias !76
  %1021 = add i64 %986, 64
  %1022 = add i64 %987, -2
  %1023 = icmp eq i64 %1022, 0
  br i1 %1023, label %1024, label %985, !llvm.loop !81

1024:                                             ; preds = %985, %974
  %1025 = phi i64 [ 0, %974 ], [ %1021, %985 ]
  %1026 = icmp eq i64 %981, 0
  br i1 %1026, label %1044, label %1027

1027:                                             ; preds = %1024
  %1028 = getelementptr i8, i8* %663, i64 %1025
  %1029 = getelementptr i8, i8* %967, i64 %1025
  %1030 = bitcast i8* %1028 to <16 x i8>*
  %1031 = load <16 x i8>, <16 x i8>* %1030, align 1, !alias.scope !76, !noalias !79
  %1032 = getelementptr i8, i8* %1028, i64 16
  %1033 = bitcast i8* %1032 to <16 x i8>*
  %1034 = load <16 x i8>, <16 x i8>* %1033, align 1, !alias.scope !76, !noalias !79
  %1035 = bitcast i8* %1029 to <16 x i8>*
  %1036 = load <16 x i8>, <16 x i8>* %1035, align 1, !alias.scope !79, !noalias !76
  %1037 = getelementptr i8, i8* %1029, i64 16
  %1038 = bitcast i8* %1037 to <16 x i8>*
  %1039 = load <16 x i8>, <16 x i8>* %1038, align 1, !alias.scope !79, !noalias !76
  %1040 = bitcast i8* %1028 to <16 x i8>*
  store <16 x i8> %1036, <16 x i8>* %1040, align 1, !alias.scope !76, !noalias !79
  %1041 = bitcast i8* %1032 to <16 x i8>*
  store <16 x i8> %1039, <16 x i8>* %1041, align 1, !alias.scope !76, !noalias !79
  %1042 = bitcast i8* %1029 to <16 x i8>*
  store <16 x i8> %1031, <16 x i8>* %1042, align 1, !alias.scope !79, !noalias !76
  %1043 = bitcast i8* %1037 to <16 x i8>*
  store <16 x i8> %1034, <16 x i8>* %1043, align 1, !alias.scope !79, !noalias !76
  br label %1044

1044:                                             ; preds = %1024, %1027
  %1045 = icmp eq i64 %972, %975
  br i1 %1045, label %1057, label %1046

1046:                                             ; preds = %1044, %966
  %1047 = phi i8* [ %663, %966 ], [ %976, %1044 ]
  %1048 = phi i8* [ %967, %966 ], [ %977, %1044 ]
  br label %1049

1049:                                             ; preds = %1046, %1049
  %1050 = phi i8* [ %1054, %1049 ], [ %1047, %1046 ]
  %1051 = phi i8* [ %1055, %1049 ], [ %1048, %1046 ]
  %1052 = load i8, i8* %1050, align 1, !alias.scope !76, !noalias !79
  %1053 = load i8, i8* %1051, align 1, !alias.scope !79, !noalias !76
  store i8 %1053, i8* %1050, align 1, !alias.scope !76, !noalias !79
  store i8 %1052, i8* %1051, align 1, !alias.scope !79, !noalias !76
  %1054 = getelementptr inbounds i8, i8* %1050, i64 1
  %1055 = getelementptr inbounds i8, i8* %1051, i64 1
  %1056 = icmp ult i8* %1054, %664
  br i1 %1056, label %1049, label %1057, !llvm.loop !82

1057:                                             ; preds = %1049, %956, %1044, %951, %861, %871, %964
  %1058 = udiv i64 %669, %2
  tail call fastcc void @_ZL13sort_r_simpleIJEEvPvmmPFiPKvS2_DpT_ES4_(i8* %181, i64 %1058, i64 %2)
  %1059 = sub i64 0, %863
  %1060 = getelementptr inbounds i8, i8* %179, i64 %1059
  %1061 = udiv i64 %863, %2
  %1062 = mul i64 %1061, %2
  %1063 = getelementptr inbounds i8, i8* %1060, i64 %1062
  %1064 = icmp ult i64 %1061, 10
  br i1 %1064, label %37, label %178

1065:                                             ; preds = %175, %60, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22hb_serialize_context_t8pop_packEb(%struct.hb_serialize_context_t*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 7
  %4 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %3, align 8
  %5 = ptrtoint %"struct.hb_serialize_context_t::object_t"* %4 to i64
  %6 = icmp eq %"struct.hb_serialize_context_t::object_t"* %4, null
  br i1 %6, label %244, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %244, !prof !4

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 3
  %13 = bitcast %"struct.hb_serialize_context_t::object_t"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.hb_serialize_context_t::object_t"** %3 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 1
  %20 = bitcast i8** %19 to i64*
  store i64 %18, i64* %20, align 8
  store %"struct.hb_serialize_context_t::object_t"* null, %"struct.hb_serialize_context_t::object_t"** %12, align 8
  %21 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %18, %23
  %25 = trunc i64 %24 to i32
  store i8* %22, i8** %16, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %244, label %27

27:                                               ; preds = %11
  br i1 %1, label %28, label %38

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9
  %30 = tail call i32 @_ZNK12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE3getES3_(%struct.hb_hashmap_t* %29, %"struct.hb_serialize_context_t::object_t"* nonnull %4)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 2
  %34 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 2, i32 2
  %35 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @free(i8* %36) #11
  %37 = bitcast %struct.hb_vector_t.259* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #11
  br label %244

38:                                               ; preds = %28, %27
  %39 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = and i64 %24, 4294967295
  %42 = sub nsw i64 0, %41
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  store i8* %43, i8** %39, align 8
  %44 = load i8*, i8** %21, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %44, i64 %41, i1 false)
  %45 = bitcast i8** %39 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"struct.hb_serialize_context_t::object_t"* %4 to i64*
  store i64 %46, i64* %47, align 8
  %48 = load i8*, i8** %39, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %41
  store i8* %49, i8** %19, align 8
  %50 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, 1
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  %55 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %93, label %58, !prof !2

58:                                               ; preds = %38
  %59 = icmp ult i32 %56, %54
  br i1 %59, label %60, label %81, !prof !2

60:                                               ; preds = %58, %60
  %61 = phi i32 [ %64, %60 ], [ %56, %58 ]
  %62 = lshr i32 %61, 1
  %63 = add i32 %61, 8
  %64 = add i32 %63, %62
  %65 = icmp ugt i32 %64, %54
  br i1 %65, label %66, label %60

66:                                               ; preds = %60
  %67 = icmp uge i32 %64, %56
  %68 = icmp ult i32 %64, 536870911
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %78, !prof !5

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %72 = bitcast %"struct.hb_serialize_context_t::object_t"*** %71 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = zext i32 %64 to i64
  %75 = shl nuw nsw i64 %74, 3
  %76 = tail call i8* @realloc(i8* %73, i64 %75) #11
  %77 = icmp eq i8* %76, null
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %70, %66
  store i32 -1, i32* %55, align 8
  br label %93

79:                                               ; preds = %70
  store i8* %76, i8** %72, align 8
  store i32 %64, i32* %55, align 8
  %80 = load i32, i32* %50, align 4
  br label %81

81:                                               ; preds = %79, %58
  %82 = phi i32 [ %80, %79 ], [ %51, %58 ]
  %83 = icmp ugt i32 %54, %82
  br i1 %83, label %84, label %95

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %86 = load %"struct.hb_serialize_context_t::object_t"**, %"struct.hb_serialize_context_t::object_t"*** %85, align 8
  %87 = zext i32 %82 to i64
  %88 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %86, i64 %87
  %89 = bitcast %"struct.hb_serialize_context_t::object_t"** %88 to i8*
  %90 = sub i32 %54, %82
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 %92, i1 false) #11
  br label %95

93:                                               ; preds = %78, %38
  %94 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %94, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %105

95:                                               ; preds = %84, %81
  store i32 %54, i32* %50, align 4
  %96 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %97 = load %"struct.hb_serialize_context_t::object_t"**, %"struct.hb_serialize_context_t::object_t"*** %96, align 8
  %98 = add nsw i32 %54, -1
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %97, i64 %99
  %101 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  store i64 %101, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  %102 = icmp eq %"struct.hb_serialize_context_t::object_t"** %100, bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_serialize_context_t::object_t"**)
  br i1 %102, label %105, label %103

103:                                              ; preds = %95
  %104 = bitcast %"struct.hb_serialize_context_t::object_t"** %100 to i64*
  store i64 %5, i64* %104, align 8
  br label %105

105:                                              ; preds = %93, %95, %103
  %106 = load i32, i32* %55, align 8
  %107 = icmp sgt i32 %106, -1
  %108 = load i32, i32* %8, align 4
  %109 = icmp ne i32 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %112, label %111, !prof !83

111:                                              ; preds = %105
  store i32 1, i32* %8, align 4
  br label %113

112:                                              ; preds = %105
  br i1 %109, label %113, label %119, !prof !2

113:                                              ; preds = %112, %111
  %114 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 2
  %115 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 2, i32 2
  %116 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %115 to i8**
  %117 = load i8*, i8** %116, align 8
  tail call void @free(i8* %117) #11
  %118 = bitcast %struct.hb_vector_t.259* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #11
  br label %244

119:                                              ; preds = %112
  %120 = load i32, i32* %50, align 4
  %121 = add i32 %120, -1
  br i1 %1, label %122, label %237

122:                                              ; preds = %119
  %123 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9
  %124 = load i8*, i8** %21, align 8
  %125 = load i64, i64* %20, align 8
  %126 = ptrtoint i8* %124 to i64
  %127 = sub i64 %125, %126
  %128 = trunc i64 %127 to i32
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %189, label %130

130:                                              ; preds = %122
  %131 = and i64 %127, 4294967295
  %132 = add nsw i64 %131, -1
  %133 = and i64 %127, 3
  %134 = icmp ult i64 %132, 3
  br i1 %134, label %171, label %135

135:                                              ; preds = %130
  %136 = sub nsw i64 %131, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %168, %137 ]
  %139 = phi i32 [ 0, %135 ], [ %167, %137 ]
  %140 = phi i64 [ %136, %135 ], [ %169, %137 ]
  %141 = mul i32 %139, 31
  %142 = getelementptr inbounds i8, i8* %124, i64 %138
  %143 = load i8, i8* %142, align 1
  %144 = sext i8 %143 to i32
  %145 = mul i32 %144, -1640531535
  %146 = add i32 %145, %141
  %147 = or i64 %138, 1
  %148 = mul i32 %146, 31
  %149 = getelementptr inbounds i8, i8* %124, i64 %147
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = mul i32 %151, -1640531535
  %153 = add i32 %152, %148
  %154 = or i64 %138, 2
  %155 = mul i32 %153, 31
  %156 = getelementptr inbounds i8, i8* %124, i64 %154
  %157 = load i8, i8* %156, align 1
  %158 = sext i8 %157 to i32
  %159 = mul i32 %158, -1640531535
  %160 = add i32 %159, %155
  %161 = or i64 %138, 3
  %162 = mul i32 %160, 31
  %163 = getelementptr inbounds i8, i8* %124, i64 %161
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = mul i32 %165, -1640531535
  %167 = add i32 %166, %162
  %168 = add nuw nsw i64 %138, 4
  %169 = add i64 %140, -4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %137

171:                                              ; preds = %137, %130
  %172 = phi i32 [ undef, %130 ], [ %167, %137 ]
  %173 = phi i64 [ 0, %130 ], [ %168, %137 ]
  %174 = phi i32 [ 0, %130 ], [ %167, %137 ]
  %175 = icmp eq i64 %133, 0
  br i1 %175, label %189, label %176

176:                                              ; preds = %171, %176
  %177 = phi i64 [ %186, %176 ], [ %173, %171 ]
  %178 = phi i32 [ %185, %176 ], [ %174, %171 ]
  %179 = phi i64 [ %187, %176 ], [ %133, %171 ]
  %180 = mul i32 %178, 31
  %181 = getelementptr inbounds i8, i8* %124, i64 %177
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = mul i32 %183, -1640531535
  %185 = add i32 %184, %180
  %186 = add nuw nsw i64 %177, 1
  %187 = add i64 %179, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %176, !llvm.loop !84

189:                                              ; preds = %171, %176, %122
  %190 = phi i32 [ 0, %122 ], [ %172, %171 ], [ %185, %176 ]
  %191 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 2, i32 2
  %192 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %191 to i8**
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %4, i64 0, i32 2, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = mul i32 %195, 12
  %197 = zext i32 %196 to i64
  %198 = icmp eq i32 %196, 0
  br i1 %198, label %231, label %199

199:                                              ; preds = %189, %199
  %200 = phi i64 [ %229, %199 ], [ 0, %189 ]
  %201 = phi i32 [ %228, %199 ], [ 0, %189 ]
  %202 = mul i32 %201, 31
  %203 = getelementptr inbounds i8, i8* %193, i64 %200
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = mul i32 %205, -1640531535
  %207 = add i32 %206, %202
  %208 = or i64 %200, 1
  %209 = mul i32 %207, 31
  %210 = getelementptr inbounds i8, i8* %193, i64 %208
  %211 = load i8, i8* %210, align 1
  %212 = sext i8 %211 to i32
  %213 = mul i32 %212, -1640531535
  %214 = add i32 %213, %209
  %215 = or i64 %200, 2
  %216 = mul i32 %214, 31
  %217 = getelementptr inbounds i8, i8* %193, i64 %215
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = mul i32 %219, -1640531535
  %221 = add i32 %220, %216
  %222 = or i64 %200, 3
  %223 = mul i32 %221, 31
  %224 = getelementptr inbounds i8, i8* %193, i64 %222
  %225 = load i8, i8* %224, align 1
  %226 = sext i8 %225 to i32
  %227 = mul i32 %226, -1640531535
  %228 = add i32 %227, %223
  %229 = add nuw nsw i64 %200, 4
  %230 = icmp eq i64 %229, %197
  br i1 %230, label %231, label %199

231:                                              ; preds = %199, %189
  %232 = phi i32 [ 0, %189 ], [ %228, %199 ]
  %233 = xor i32 %232, %190
  %234 = tail call zeroext i1 @_ZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE13set_with_hashES3_jj(%struct.hb_hashmap_t* %123, %"struct.hb_serialize_context_t::object_t"* nonnull %4, i32 %233, i32 %121) #11
  %235 = load i32, i32* %8, align 4
  %236 = icmp ne i32 %235, 0
  br label %237

237:                                              ; preds = %231, %119
  %238 = phi i1 [ %236, %231 ], [ false, %119 ]
  %239 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 9, i32 1
  %240 = load i8, i8* %239, align 8, !range !3
  %241 = icmp ne i8 %240, 0
  %242 = or i1 %241, %238
  br i1 %242, label %244, label %243

243:                                              ; preds = %237
  store i32 1, i32* %8, align 4
  br label %244

244:                                              ; preds = %7, %243, %237, %11, %113, %32, %2
  %245 = phi i32 [ 0, %2 ], [ 0, %7 ], [ 0, %11 ], [ %30, %32 ], [ 0, %113 ], [ %121, %237 ], [ %121, %243 ]
  ret i32 %245
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22hb_serialize_context_t13resolve_linksEv(%struct.hb_serialize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %155, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 8, i32 2
  %9 = load %"struct.hb_serialize_context_t::object_t"**, %"struct.hb_serialize_context_t::object_t"*** %8, align 8
  %10 = icmp ne i32 %7, 0
  %11 = zext i1 %10 to i32
  %12 = sub i32 %7, %11
  %13 = zext i1 %10 to i64
  %14 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %9, i64 %13
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %14, i64 %15
  %17 = icmp eq i32 %12, 0
  br i1 %17, label %155, label %18

18:                                               ; preds = %5
  %19 = shl nuw nsw i64 %13, 32
  %20 = or i64 %19, %15
  %21 = load i64, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_NullPool, i64 0, i64 0), align 16
  %22 = inttoptr i64 %21 to %"struct.hb_serialize_context_t::object_t"*
  %23 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = bitcast %struct.hb_serialize_context_t* %0 to i64*
  %26 = getelementptr inbounds %struct.hb_serialize_context_t, %struct.hb_serialize_context_t* %0, i64 0, i32 2
  %27 = bitcast i8** %26 to i64*
  br label %28

28:                                               ; preds = %18, %147
  %29 = phi %"struct.hb_serialize_context_t::object_t"** [ %14, %18 ], [ %153, %147 ]
  %30 = phi i64 [ %20, %18 ], [ %151, %147 ]
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %31, 0
  %33 = select i1 %32, %"struct.hb_serialize_context_t::object_t"** bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_serialize_context_t::object_t"**), %"struct.hb_serialize_context_t::object_t"** %29, !prof !2
  %34 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %33, align 8
  %35 = getelementptr %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %34, i64 0, i32 2, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %34, i64 0, i32 2, i32 2
  %38 = load %"struct.hb_serialize_context_t::object_t::link_t"*, %"struct.hb_serialize_context_t::object_t::link_t"** %37, align 8
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t::link_t", %"struct.hb_serialize_context_t::object_t::link_t"* %38, i64 %39
  %41 = icmp eq i32 %36, 0
  br i1 %41, label %147, label %42

42:                                               ; preds = %28
  %43 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %34, i64 0, i32 1
  %44 = bitcast i8** %43 to i64*
  %45 = bitcast %"struct.hb_serialize_context_t::object_t"* %34 to i64*
  %46 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %34, i64 0, i32 0
  br label %47

47:                                               ; preds = %42, %137
  %48 = phi %"struct.hb_serialize_context_t::object_t::link_t"* [ %38, %42 ], [ %142, %137 ]
  %49 = phi i32 [ %36, %42 ], [ %140, %137 ]
  %50 = icmp eq i32 %49, 0
  %51 = select i1 %50, %"struct.hb_serialize_context_t::object_t::link_t"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.hb_serialize_context_t::object_t::link_t"*), %"struct.hb_serialize_context_t::object_t::link_t"* %48, !prof !2
  %52 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t::link_t", %"struct.hb_serialize_context_t::object_t::link_t"* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* %6, align 4
  %55 = icmp ugt i32 %54, %53
  br i1 %55, label %57, label %56, !prof !4

56:                                               ; preds = %47
  store i64 %21, i64* getelementptr inbounds ([48 x i64], [48 x i64]* @_hb_CrapPool, i64 0, i64 0), align 16
  br label %62

57:                                               ; preds = %47
  %58 = load %"struct.hb_serialize_context_t::object_t"**, %"struct.hb_serialize_context_t::object_t"*** %8, align 8
  %59 = zext i32 %53 to i64
  %60 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %58, i64 %59
  %61 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %60, align 8
  br label %62

62:                                               ; preds = %56, %57
  %63 = phi %"struct.hb_serialize_context_t::object_t"* [ %22, %56 ], [ %61, %57 ]
  %64 = icmp eq %"struct.hb_serialize_context_t::object_t"* %63, null
  br i1 %64, label %144, label %65, !prof !2

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t::link_t", %"struct.hb_serialize_context_t::object_t::link_t"* %51, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = lshr i32 %67, 2
  %69 = and i32 %68, 3
  switch i32 %69, label %92 [
    i32 0, label %70
    i32 1, label %76
    i32 2, label %82
  ]

70:                                               ; preds = %65
  %71 = bitcast %"struct.hb_serialize_context_t::object_t"* %63 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %45, align 8
  %74 = sub i64 %72, %73
  %75 = trunc i64 %74 to i32
  br label %92

76:                                               ; preds = %65
  %77 = bitcast %"struct.hb_serialize_context_t::object_t"* %63 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* %44, align 8
  %80 = sub i64 %78, %79
  %81 = trunc i64 %80 to i32
  br label %92

82:                                               ; preds = %65
  %83 = load i64, i64* %24, align 8
  %84 = load i64, i64* %25, align 8
  %85 = bitcast %"struct.hb_serialize_context_t::object_t"* %63 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = load i64, i64* %27, align 8
  %88 = sub i64 %83, %84
  %89 = add i64 %88, %86
  %90 = sub i64 %89, %87
  %91 = trunc i64 %90 to i32
  br label %92

92:                                               ; preds = %65, %82, %76, %70
  %93 = phi i32 [ 0, %65 ], [ %91, %82 ], [ %81, %76 ], [ %75, %70 ]
  %94 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t::link_t", %"struct.hb_serialize_context_t::object_t::link_t"* %51, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = sub i32 %93, %95
  %97 = and i32 %67, 2
  %98 = icmp eq i32 %97, 0
  %99 = and i32 %67, 1
  %100 = icmp ne i32 %99, 0
  %101 = load i8*, i8** %46, align 8
  %102 = lshr i32 %67, 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %101, i64 %103
  br i1 %98, label %125, label %105

105:                                              ; preds = %92
  br i1 %100, label %106, label %115

106:                                              ; preds = %105
  %107 = bitcast i8* %104 to i32*
  %108 = tail call i32 @llvm.bswap.i32(i32 %96) #11
  store i32 %108, i32* %107, align 1
  %109 = sext i32 %96 to i64
  %110 = zext i32 %96 to i64
  %111 = icmp eq i64 %109, %110
  br i1 %111, label %137, label %112

112:                                              ; preds = %106
  %113 = load i32, i32* %2, align 4
  %114 = or i32 %113, 2
  store i32 %114, i32* %2, align 4
  br label %137

115:                                              ; preds = %105
  %116 = trunc i32 %96 to i16
  %117 = bitcast i8* %104 to i16*
  %118 = tail call i16 @llvm.bswap.i16(i16 %116) #11
  store i16 %118, i16* %117, align 1
  %119 = sext i16 %116 to i64
  %120 = zext i32 %96 to i64
  %121 = icmp eq i64 %119, %120
  br i1 %121, label %137, label %122

122:                                              ; preds = %115
  %123 = load i32, i32* %2, align 4
  %124 = or i32 %123, 2
  store i32 %124, i32* %2, align 4
  br label %137

125:                                              ; preds = %92
  br i1 %100, label %126, label %129

126:                                              ; preds = %125
  %127 = bitcast i8* %104 to i32*
  %128 = tail call i32 @llvm.bswap.i32(i32 %96) #11
  store i32 %128, i32* %127, align 1
  br label %137

129:                                              ; preds = %125
  %130 = trunc i32 %96 to i16
  %131 = bitcast i8* %104 to i16*
  %132 = tail call i16 @llvm.bswap.i16(i16 %130) #11
  store i16 %132, i16* %131, align 1
  %133 = icmp ult i32 %96, 65536
  br i1 %133, label %137, label %134

134:                                              ; preds = %129
  %135 = load i32, i32* %2, align 4
  %136 = or i32 %135, 2
  store i32 %136, i32* %2, align 4
  br label %137

137:                                              ; preds = %126, %106, %112, %115, %122, %129, %134
  %138 = icmp ne i32 %49, 0
  %139 = zext i1 %138 to i32
  %140 = sub i32 %49, %139
  %141 = zext i1 %138 to i64
  %142 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t::link_t", %"struct.hb_serialize_context_t::object_t::link_t"* %48, i64 %141
  %143 = icmp eq %"struct.hb_serialize_context_t::object_t::link_t"* %142, %40
  br i1 %143, label %147, label %47

144:                                              ; preds = %62
  %145 = load i32, i32* %2, align 4
  %146 = or i32 %145, 1
  store i32 %146, i32* %2, align 4
  br label %155

147:                                              ; preds = %137, %28
  %148 = icmp ne i32 %31, 0
  %149 = zext i1 %148 to i64
  %150 = sub nsw i64 %30, %149
  %151 = and i64 %150, 4294967295
  %152 = zext i1 %148 to i64
  %153 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %29, i64 %152
  %154 = icmp eq %"struct.hb_serialize_context_t::object_t"** %153, %16
  br i1 %154, label %155, label %28

155:                                              ; preds = %147, %5, %1, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE3getES3_(%struct.hb_hashmap_t*, %"struct.hb_serialize_context_t::object_t"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 6
  %4 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %3, align 8
  %5 = icmp eq %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %4, null
  br i1 %5, label %179, label %6, !prof !2

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %1, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %1, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint i8* %8 to i64
  %13 = sub i64 %11, %12
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %75, label %16

16:                                               ; preds = %6
  %17 = and i64 %13, 4294967295
  %18 = add nsw i64 %17, -1
  %19 = and i64 %13, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %57, label %21

21:                                               ; preds = %16
  %22 = sub nsw i64 %17, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %54, %23 ]
  %25 = phi i32 [ 0, %21 ], [ %53, %23 ]
  %26 = phi i64 [ %22, %21 ], [ %55, %23 ]
  %27 = mul i32 %25, 31
  %28 = getelementptr inbounds i8, i8* %8, i64 %24
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = mul i32 %30, -1640531535
  %32 = add i32 %31, %27
  %33 = or i64 %24, 1
  %34 = mul i32 %32, 31
  %35 = getelementptr inbounds i8, i8* %8, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = mul i32 %37, -1640531535
  %39 = add i32 %38, %34
  %40 = or i64 %24, 2
  %41 = mul i32 %39, 31
  %42 = getelementptr inbounds i8, i8* %8, i64 %40
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = mul i32 %44, -1640531535
  %46 = add i32 %45, %41
  %47 = or i64 %24, 3
  %48 = mul i32 %46, 31
  %49 = getelementptr inbounds i8, i8* %8, i64 %47
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = mul i32 %51, -1640531535
  %53 = add i32 %52, %48
  %54 = add nuw nsw i64 %24, 4
  %55 = add i64 %26, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %23

57:                                               ; preds = %23, %16
  %58 = phi i32 [ undef, %16 ], [ %53, %23 ]
  %59 = phi i64 [ 0, %16 ], [ %54, %23 ]
  %60 = phi i32 [ 0, %16 ], [ %53, %23 ]
  %61 = icmp eq i64 %19, 0
  br i1 %61, label %75, label %62

62:                                               ; preds = %57, %62
  %63 = phi i64 [ %72, %62 ], [ %59, %57 ]
  %64 = phi i32 [ %71, %62 ], [ %60, %57 ]
  %65 = phi i64 [ %73, %62 ], [ %19, %57 ]
  %66 = mul i32 %64, 31
  %67 = getelementptr inbounds i8, i8* %8, i64 %63
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = mul i32 %69, -1640531535
  %71 = add i32 %70, %66
  %72 = add nuw nsw i64 %63, 1
  %73 = add i64 %65, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %62, !llvm.loop !86

75:                                               ; preds = %57, %62, %6
  %76 = phi i32 [ 0, %6 ], [ %58, %57 ], [ %71, %62 ]
  %77 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %1, i64 0, i32 2, i32 2
  %78 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %1, i64 0, i32 2, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 %81, 12
  %83 = zext i32 %82 to i64
  %84 = icmp eq i32 %82, 0
  br i1 %84, label %117, label %85

85:                                               ; preds = %75, %85
  %86 = phi i64 [ %115, %85 ], [ 0, %75 ]
  %87 = phi i32 [ %114, %85 ], [ 0, %75 ]
  %88 = mul i32 %87, 31
  %89 = getelementptr inbounds i8, i8* %79, i64 %86
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = mul i32 %91, -1640531535
  %93 = add i32 %92, %88
  %94 = or i64 %86, 1
  %95 = mul i32 %93, 31
  %96 = getelementptr inbounds i8, i8* %79, i64 %94
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  %99 = mul i32 %98, -1640531535
  %100 = add i32 %99, %95
  %101 = or i64 %86, 2
  %102 = mul i32 %100, 31
  %103 = getelementptr inbounds i8, i8* %79, i64 %101
  %104 = load i8, i8* %103, align 1
  %105 = sext i8 %104 to i32
  %106 = mul i32 %105, -1640531535
  %107 = add i32 %106, %102
  %108 = or i64 %86, 3
  %109 = mul i32 %107, 31
  %110 = getelementptr inbounds i8, i8* %79, i64 %108
  %111 = load i8, i8* %110, align 1
  %112 = sext i8 %111 to i32
  %113 = mul i32 %112, -1640531535
  %114 = add i32 %113, %109
  %115 = add nuw nsw i64 %86, 4
  %116 = icmp eq i64 %115, %83
  br i1 %116, label %117, label %85

117:                                              ; preds = %85, %75
  %118 = phi i32 [ 0, %75 ], [ %114, %85 ]
  %119 = xor i32 %118, %76
  %120 = tail call i32 @_ZNK12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE15bucket_for_hashES3_j(%struct.hb_hashmap_t* %0, %"struct.hb_serialize_context_t::object_t"* %1, i32 %119) #11
  %121 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %3, align 8
  %122 = zext i32 %120 to i64
  %123 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %121, i64 %122, i32 0
  %124 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %123, align 8
  %125 = icmp eq %"struct.hb_serialize_context_t::object_t"* %124, null
  br i1 %125, label %179, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %121, i64 %122, i32 1
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %179, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %124, i64 0, i32 1
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.hb_serialize_context_t::object_t"* %124 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %133, %135
  %137 = load i64, i64* %10, align 8
  %138 = bitcast %"struct.hb_serialize_context_t::object_t"* %1 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %137, %139
  %141 = icmp eq i64 %136, %140
  %142 = inttoptr i64 %135 to i8*
  %143 = inttoptr i64 %139 to i8*
  br i1 %141, label %144, label %179

144:                                              ; preds = %130
  %145 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %124, i64 0, i32 2, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = load i32, i32* %80, align 4
  %148 = icmp eq i32 %146, %147
  br i1 %148, label %149, label %179

149:                                              ; preds = %144
  %150 = trunc i64 %136 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %156, label %152, !prof !2

152:                                              ; preds = %149
  %153 = and i64 %136, 4294967295
  %154 = tail call i32 @bcmp(i8* %142, i8* %143, i64 %153) #11
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %179

156:                                              ; preds = %152, %149
  %157 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %124, i64 0, i32 2, i32 2
  %158 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = mul i32 %146, 12
  %161 = load i8*, i8** %78, align 8
  %162 = zext i32 %160 to i64
  %163 = icmp eq i32 %160, 0
  br i1 %163, label %179, label %171

164:                                              ; preds = %171
  %165 = getelementptr inbounds i8, i8* %159, i64 %178
  %166 = load i8, i8* %165, align 1
  %167 = getelementptr inbounds i8, i8* %161, i64 %178
  %168 = load i8, i8* %167, align 1
  %169 = icmp eq i8 %166, %168
  %170 = or i64 %172, 2
  br i1 %169, label %181, label %179

171:                                              ; preds = %156, %195
  %172 = phi i64 [ %194, %195 ], [ 0, %156 ]
  %173 = getelementptr inbounds i8, i8* %159, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = getelementptr inbounds i8, i8* %161, i64 %172
  %176 = load i8, i8* %175, align 1
  %177 = icmp eq i8 %174, %176
  %178 = or i64 %172, 1
  br i1 %177, label %164, label %179

179:                                              ; preds = %171, %164, %181, %188, %195, %156, %126, %130, %144, %152, %117, %2
  %180 = phi i32 [ 0, %2 ], [ 0, %126 ], [ 0, %117 ], [ 0, %152 ], [ 0, %144 ], [ 0, %130 ], [ %128, %156 ], [ 0, %171 ], [ 0, %164 ], [ 0, %181 ], [ 0, %188 ], [ %128, %195 ]
  ret i32 %180

181:                                              ; preds = %164
  %182 = getelementptr inbounds i8, i8* %159, i64 %170
  %183 = load i8, i8* %182, align 1
  %184 = getelementptr inbounds i8, i8* %161, i64 %170
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %183, %185
  %187 = or i64 %172, 3
  br i1 %186, label %188, label %179

188:                                              ; preds = %181
  %189 = getelementptr inbounds i8, i8* %159, i64 %187
  %190 = load i8, i8* %189, align 1
  %191 = getelementptr inbounds i8, i8* %161, i64 %187
  %192 = load i8, i8* %191, align 1
  %193 = icmp eq i8 %190, %192
  %194 = add nuw nsw i64 %172, 4
  br i1 %193, label %195, label %179

195:                                              ; preds = %188
  %196 = icmp eq i64 %194, %162
  br i1 %196, label %179, label %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE15bucket_for_hashES3_j(%struct.hb_hashmap_t*, %"struct.hb_serialize_context_t::object_t"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = urem i32 %2, %5
  %7 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 6
  %8 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %7, align 8
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %8, i64 %9, i32 0
  %11 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %10, align 8
  %12 = icmp eq %"struct.hb_serialize_context_t::object_t"* %11, null
  br i1 %12, label %97, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %1, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = bitcast %"struct.hb_serialize_context_t::object_t"* %1 to i64*
  %17 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %1, i64 0, i32 2, i32 1
  %18 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %1, i64 0, i32 2, i32 2
  %19 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %18 to i8**
  %20 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 4
  br label %21

21:                                               ; preds = %13, %85
  %22 = phi %"struct.hb_serialize_context_t::object_t"* [ %11, %13 ], [ %93, %85 ]
  %23 = phi i64 [ %9, %13 ], [ %91, %85 ]
  %24 = phi i32 [ -1, %13 ], [ %86, %85 ]
  %25 = phi i32 [ 0, %13 ], [ %87, %85 ]
  %26 = phi i32 [ %6, %13 ], [ %90, %85 ]
  %27 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %8, i64 %23, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %2
  br i1 %29, label %30, label %78

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %22, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.hb_serialize_context_t::object_t"* %22 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = load i64, i64* %15, align 8
  %38 = load i64, i64* %16, align 8
  %39 = sub i64 %37, %38
  %40 = icmp eq i64 %36, %39
  %41 = inttoptr i64 %35 to i8*
  %42 = inttoptr i64 %38 to i8*
  br i1 %40, label %43, label %78

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %22, i64 0, i32 2, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %17, align 4
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %78

48:                                               ; preds = %43
  %49 = trunc i64 %36 to i32
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51, !prof !2

51:                                               ; preds = %48
  %52 = and i64 %36, 4294967295
  %53 = tail call i32 @bcmp(i8* %41, i8* %42, i64 %52) #11
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %78

55:                                               ; preds = %51, %48
  %56 = getelementptr inbounds %"struct.hb_serialize_context_t::object_t", %"struct.hb_serialize_context_t::object_t"* %22, i64 0, i32 2, i32 2
  %57 = bitcast %"struct.hb_serialize_context_t::object_t::link_t"** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = mul i32 %45, 12
  %60 = load i8*, i8** %19, align 8
  %61 = zext i32 %59 to i64
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %99, label %70

63:                                               ; preds = %70
  %64 = getelementptr inbounds i8, i8* %58, i64 %77
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %60, i64 %77
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %65, %67
  %69 = or i64 %71, 2
  br i1 %68, label %101, label %78

70:                                               ; preds = %55, %115
  %71 = phi i64 [ %114, %115 ], [ 0, %55 ]
  %72 = getelementptr inbounds i8, i8* %58, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %60, i64 %71
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %73, %75
  %77 = or i64 %71, 1
  br i1 %76, label %63, label %78

78:                                               ; preds = %70, %63, %101, %108, %30, %43, %51, %21
  %79 = icmp eq i32 %24, -1
  br i1 %79, label %80, label %85

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %8, i64 %23, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 0
  %84 = select i1 %83, i32 %26, i32 -1
  br label %85

85:                                               ; preds = %80, %78
  %86 = phi i32 [ %24, %78 ], [ %84, %80 ]
  %87 = add i32 %25, 1
  %88 = add i32 %87, %26
  %89 = load i32, i32* %20, align 4
  %90 = and i32 %89, %88
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %8, i64 %91, i32 0
  %93 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %92, align 8
  %94 = icmp eq %"struct.hb_serialize_context_t::object_t"* %93, null
  br i1 %94, label %95, label %21

95:                                               ; preds = %85
  %96 = icmp eq i32 %86, -1
  br i1 %96, label %97, label %99

97:                                               ; preds = %3, %95
  %98 = phi i32 [ %90, %95 ], [ %6, %3 ]
  br label %99

99:                                               ; preds = %55, %115, %97, %95
  %100 = phi i32 [ %98, %97 ], [ %86, %95 ], [ %26, %115 ], [ %26, %55 ]
  ret i32 %100

101:                                              ; preds = %63
  %102 = getelementptr inbounds i8, i8* %58, i64 %69
  %103 = load i8, i8* %102, align 1
  %104 = getelementptr inbounds i8, i8* %60, i64 %69
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %103, %105
  %107 = or i64 %71, 3
  br i1 %106, label %108, label %78

108:                                              ; preds = %101
  %109 = getelementptr inbounds i8, i8* %58, i64 %107
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds i8, i8* %60, i64 %107
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %110, %112
  %114 = add nuw nsw i64 %71, 4
  br i1 %113, label %115, label %78

115:                                              ; preds = %108
  %116 = icmp eq i64 %114, %61
  br i1 %116, label %99, label %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE13set_with_hashES3_jj(%struct.hb_hashmap_t*, %"struct.hb_serialize_context_t::object_t"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %8, label %73, !prof !4

8:                                                ; preds = %4
  %9 = icmp eq %"struct.hb_serialize_context_t::object_t"* %1, null
  br i1 %9, label %73, label %10, !prof !2

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 1
  %14 = add i32 %13, %12
  %15 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %14, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = tail call zeroext i1 @_ZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE6resizeEv(%struct.hb_hashmap_t* %0)
  br i1 %19, label %20, label %73, !prof !4

20:                                               ; preds = %18, %10
  %21 = tail call i32 @_ZNK12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE15bucket_for_hashES3_j(%struct.hb_hashmap_t* %0, %"struct.hb_serialize_context_t::object_t"* nonnull %1, i32 %2)
  %22 = icmp eq i32 %3, 0
  %23 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 6
  %24 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %23, align 8
  %25 = zext i32 %21 to i64
  %26 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %24, i64 %25, i32 0
  %27 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %26, align 8
  br i1 %22, label %28, label %33

28:                                               ; preds = %20
  %29 = icmp eq %"struct.hb_serialize_context_t::object_t"* %27, %1
  br i1 %29, label %30, label %73

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 6
  %32 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %24, i64 %25, i32 0
  br label %37

33:                                               ; preds = %20
  %34 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 6
  %35 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %24, i64 %25, i32 0
  %36 = icmp eq %"struct.hb_serialize_context_t::object_t"* %27, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %30, %33
  %38 = phi %"struct.hb_serialize_context_t::object_t"** [ %32, %30 ], [ %35, %33 ]
  %39 = phi %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** [ %31, %30 ], [ %34, %33 ]
  %40 = load i32, i32* %11, align 8
  %41 = add i32 %40, -1
  store i32 %41, i32* %11, align 8
  %42 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %38, align 8
  %43 = icmp eq %"struct.hb_serialize_context_t::object_t"* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %24, i64 %25, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, -1
  store i32 %51, i32* %49, align 4
  br label %52

52:                                               ; preds = %37, %44, %48, %33
  %53 = phi %"struct.hb_serialize_context_t::object_t"** [ %38, %37 ], [ %38, %44 ], [ %38, %48 ], [ %35, %33 ]
  %54 = phi %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** [ %39, %37 ], [ %39, %44 ], [ %39, %48 ], [ %34, %33 ]
  store %"struct.hb_serialize_context_t::object_t"* %1, %"struct.hb_serialize_context_t::object_t"** %53, align 8
  %55 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %54, align 8
  %56 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %55, i64 %25, i32 1
  store i32 %3, i32* %56, align 8
  %57 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %54, align 8
  %58 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %57, i64 %25, i32 2
  store i32 %2, i32* %58, align 4
  %59 = load i32, i32* %11, align 8
  %60 = add i32 %59, 1
  store i32 %60, i32* %11, align 8
  %61 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %54, align 8
  %62 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %61, i64 %25, i32 0
  %63 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %62, align 8
  %64 = icmp eq %"struct.hb_serialize_context_t::object_t"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %52
  %66 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %61, i64 %25, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %52, %65
  %70 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %70, align 4
  br label %73

73:                                               ; preds = %18, %28, %69, %65, %8, %4
  %74 = phi i1 [ false, %4 ], [ true, %8 ], [ false, %18 ], [ true, %65 ], [ true, %69 ], [ true, %28 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE6resizeEv(%struct.hb_hashmap_t*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %80, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %7, 1
  %9 = add i32 %8, 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11, !prof !2

11:                                               ; preds = %5
  %12 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 true) #11, !range !12
  %13 = sub nuw nsw i32 32, %12
  br label %14

14:                                               ; preds = %5, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %5 ]
  %16 = shl i32 1, %15
  %17 = zext i32 %16 to i64
  %18 = shl nuw nsw i64 %17, 4
  %19 = tail call noalias i8* @malloc(i64 %18) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %14
  store i8 0, i8* %2, align 8
  br label %80

22:                                               ; preds = %14
  %23 = bitcast i8* %19 to %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*
  %24 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %23, i64 %17
  %25 = icmp eq %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %24, %23
  br i1 %25, label %26, label %48

26:                                               ; preds = %53, %22
  %27 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, 1
  %30 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 6
  %31 = load %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*, %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %30, align 8
  %32 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 3
  store i32 0, i32* %32, align 8
  store i32 0, i32* %6, align 4
  %33 = add i32 %16, -1
  store i32 %33, i32* %27, align 4
  %34 = icmp ugt i32 %15, 31
  br i1 %34, label %39, label %35, !prof !2

35:                                               ; preds = %26
  %36 = zext i32 %15 to i64
  %37 = getelementptr inbounds [32 x i32], [32 x i32]* @_ZZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE9prime_forEjE9prime_mod, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %26, %35
  %40 = phi i32 [ %38, %35 ], [ 2147483647, %26 ]
  %41 = getelementptr inbounds %struct.hb_hashmap_t, %struct.hb_hashmap_t* %0, i64 0, i32 5
  store i32 %40, i32* %41, align 8
  %42 = bitcast %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"** %30 to i8**
  store i8* %19, i8** %42, align 8
  %43 = icmp ne %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %31, null
  %44 = icmp ne i32 %29, 0
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %78

46:                                               ; preds = %39
  %47 = zext i32 %29 to i64
  br label %62

48:                                               ; preds = %22, %53
  %49 = phi %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* [ %60, %53 ], [ %23, %22 ]
  %50 = phi i32 [ %58, %53 ], [ %16, %22 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([48 x i64]* @_hb_CrapPool to i8*), i8* align 16 bitcast ([48 x i64]* @_hb_NullPool to i8*), i64 16, i1 false) #11
  br label %53

53:                                               ; preds = %48, %52
  %54 = phi %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* [ bitcast ([48 x i64]* @_hb_CrapPool to %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"*), %52 ], [ %49, %48 ]
  %55 = bitcast %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  %56 = icmp ne i32 %50, 0
  %57 = zext i1 %56 to i32
  %58 = sub i32 %50, %57
  %59 = zext i1 %56 to i64
  %60 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %49, i64 %59
  %61 = icmp eq %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %60, %24
  br i1 %61, label %26, label %48

62:                                               ; preds = %75, %46
  %63 = phi i64 [ 0, %46 ], [ %76, %75 ]
  %64 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %31, i64 %63, i32 0
  %65 = load %"struct.hb_serialize_context_t::object_t"*, %"struct.hb_serialize_context_t::object_t"** %64, align 8
  %66 = icmp eq %"struct.hb_serialize_context_t::object_t"* %65, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %31, i64 %63, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t", %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %31, i64 %63, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = tail call zeroext i1 @_ZN12hb_hashmap_tIPKN22hb_serialize_context_t8object_tEjLS3_0ELj0EE13set_with_hashES3_jj(%struct.hb_hashmap_t* %0, %"struct.hb_serialize_context_t::object_t"* nonnull %65, i32 %73, i32 %69)
  br label %75

75:                                               ; preds = %67, %62, %71
  %76 = add nuw nsw i64 %63, 1
  %77 = icmp eq i64 %76, %47
  br i1 %77, label %78, label %62

78:                                               ; preds = %75, %39
  %79 = bitcast %"struct.hb_hashmap_t<const hb_serialize_context_t::object_t *, unsigned int, nullptr, 0>::item_t"* %31 to i8*
  tail call void @free(i8* %79) #11
  br label %80

80:                                               ; preds = %21, %78, %1
  %81 = phi i1 [ false, %1 ], [ false, %21 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT16OpenTypeFontFile8sanitizeEP21hb_sanitize_context_t(%"struct.OT::OpenTypeFontFile"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::TTCHeaderVersion1"*, align 8
  %4 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %112, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %112, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OpenTypeFontFile"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %112, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %112, !prof !4

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  switch i32 %40, label %112 [
    i32 1330926671, label %41
    i32 1953658213, label %41
    i32 1954115633, label %41
    i32 65536, label %41
    i32 1953784678, label %82
    i32 256, label %109
  ]

41:                                               ; preds = %23, %23, %23, %23
  %42 = icmp ult i32 %16, 12
  br i1 %42, label %112, label %43, !prof !2

43:                                               ; preds = %41
  %44 = add i32 %20, -16
  store i32 %44, i32* %19, align 8
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %112

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"struct.OT::ArrayOf", %"struct.OT::ArrayOf"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %49 = icmp ugt i8* %6, %48
  %50 = icmp ult i8* %10, %48
  %51 = or i1 %49, %50
  br i1 %51, label %112, label %52, !prof !7

52:                                               ; preds = %46
  %53 = ptrtoint %"struct.OT::ArrayOf"* %47 to i64
  %54 = sub i64 %13, %53
  %55 = trunc i64 %54 to i32
  %56 = icmp ult i32 %55, 8
  br i1 %56, label %112, label %57, !prof !2

57:                                               ; preds = %52
  %58 = add i32 %20, -24
  store i32 %58, i32* %19, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %112, !prof !83

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i64 0
  %62 = bitcast %"struct.OT::ArrayOf"* %47 to i16*
  %63 = load i16, i16* %62, align 1
  %64 = tail call i16 @llvm.bswap.i16(i16 %63) #11
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds %"struct.OT::TableRecord", %"struct.OT::TableRecord"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %67 = shl nuw nsw i32 %65, 4
  %68 = icmp eq i16 %63, 0
  br i1 %68, label %81, label %69

69:                                               ; preds = %60
  %70 = icmp ugt i8* %6, %66
  %71 = icmp ult i8* %10, %66
  %72 = or i1 %70, %71
  br i1 %72, label %112, label %73, !prof !7

73:                                               ; preds = %69
  %74 = ptrtoint %"struct.OT::TableRecord"* %61 to i64
  %75 = sub i64 %13, %74
  %76 = trunc i64 %75 to i32
  %77 = icmp ugt i32 %67, %76
  br i1 %77, label %112, label %78, !prof !2

78:                                               ; preds = %73
  %79 = sub nsw i32 %58, %67
  store i32 %79, i32* %19, align 8
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %112, !prof !4

81:                                               ; preds = %78, %60
  br label %112

82:                                               ; preds = %23
  %83 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"struct.OT::SortedArrayOf", %"struct.OT::SortedArrayOf"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %85 = icmp ugt i8* %6, %84
  %86 = icmp ult i8* %10, %84
  %87 = or i1 %85, %86
  br i1 %87, label %112, label %88, !prof !7

88:                                               ; preds = %82
  %89 = ptrtoint %"struct.OT::SortedArrayOf"* %83 to i64
  %90 = sub i64 %13, %89
  %91 = trunc i64 %90 to i32
  %92 = icmp ult i32 %91, 4
  br i1 %92, label %112, label %93, !prof !2

93:                                               ; preds = %88
  %94 = add i32 %20, -8
  store i32 %94, i32* %19, align 8
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %112, !prof !4

96:                                               ; preds = %93
  %97 = bitcast %"struct.OT::SortedArrayOf"* %83 to i16*
  %98 = load i16, i16* %97, align 1
  %99 = tail call i16 @llvm.bswap.i16(i16 %98) #11
  %100 = zext i16 %99 to i32
  %101 = add nsw i32 %100, -1
  %102 = icmp ult i32 %101, 2
  br i1 %102, label %103, label %112

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"struct.OT::OpenTypeFontFile", %"struct.OT::OpenTypeFontFile"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %105 = bitcast %"struct.OT::IntType.0"* %104 to %"struct.OT::ArrayOf.3"*
  %106 = bitcast %"struct.OT::TTCHeaderVersion1"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  %107 = bitcast %"struct.OT::TTCHeaderVersion1"** %3 to %"struct.OT::OpenTypeFontFile"**
  store %"struct.OT::OpenTypeFontFile"* %0, %"struct.OT::OpenTypeFontFile"** %107, align 8
  %108 = call zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_19OpenTypeOffsetTableENS_7IntTypeIjLj4EEELb1EEES4_E8sanitizeIJPKNS_17TTCHeaderVersion1EEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.3"* %105, %struct.hb_sanitize_context_t* %1, %"struct.OT::TTCHeaderVersion1"** nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  br label %112

109:                                              ; preds = %23
  %110 = bitcast %"struct.OT::OpenTypeFontFile"* %0 to %"struct.OT::ResourceForkHeader"*
  %111 = tail call zeroext i1 @_ZNK2OT18ResourceForkHeader8sanitizeEP21hb_sanitize_context_t(%"struct.OT::ResourceForkHeader"* %110, %struct.hb_sanitize_context_t* %1)
  br label %112

112:                                              ; preds = %103, %96, %93, %88, %82, %81, %78, %73, %69, %57, %52, %46, %43, %41, %2, %8, %12, %23, %18, %109
  %113 = phi i1 [ %111, %109 ], [ false, %18 ], [ true, %23 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ false, %43 ], [ false, %41 ], [ true, %81 ], [ false, %78 ], [ false, %57 ], [ false, %52 ], [ false, %46 ], [ false, %73 ], [ false, %69 ], [ %108, %103 ], [ false, %93 ], [ true, %96 ], [ false, %88 ], [ false, %82 ]
  ret i1 %113
}

declare i8* @hb_blob_get_data_writable(%struct.hb_blob_t*, i32*) local_unnamed_addr #2

declare void @hb_blob_make_immutable(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT18ResourceForkHeader8sanitizeEP21hb_sanitize_context_t(%"struct.OT::ResourceForkHeader"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"struct.OT::ArrayOfM1"*, align 8
  %5 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %5
  br i1 %8, label %157, label %9, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ult i8* %11, %5
  br i1 %12, label %157, label %13, !prof !2

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = ptrtoint %"struct.OT::ResourceForkHeader"* %0 to i64
  %16 = sub i64 %14, %15
  %17 = trunc i64 %16 to i32
  %18 = icmp ult i32 %17, 16
  br i1 %18, label %157, label %19, !prof !2

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -16
  store i32 %22, i32* %20, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %157

24:                                               ; preds = %19
  %25 = add i32 %21, -20
  store i32 %25, i32* %20, align 8
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %157

27:                                               ; preds = %24
  %28 = load i8, i8* %5, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 24
  %31 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 16
  %35 = or i64 %34, %30
  %36 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 8
  %40 = or i64 %35, %39
  %41 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  %45 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %44
  %46 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw i32 %48, 24
  %50 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 2, i32 0, i32 0, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 16
  %54 = or i32 %53, %49
  %55 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 2, i32 0, i32 0, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 8
  %59 = or i32 %54, %58
  %60 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 2, i32 0, i32 0, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = or i32 %59, %62
  switch i32 %63, label %64 [
    i32 -1, label %157
    i32 0, label %91
  ], !prof !87

64:                                               ; preds = %27
  %65 = icmp ugt i8* %7, %45
  %66 = icmp ult i8* %11, %45
  %67 = or i1 %65, %66
  br i1 %67, label %157, label %68, !prof !7

68:                                               ; preds = %64
  %69 = ptrtoint i8* %45 to i64
  %70 = sub i64 %14, %69
  %71 = trunc i64 %70 to i32
  %72 = icmp ugt i32 %63, %71
  br i1 %72, label %157, label %73, !prof !2

73:                                               ; preds = %68
  %74 = sub i32 %25, %63
  store i32 %74, i32* %20, align 8
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %157, !prof !4

76:                                               ; preds = %73
  %77 = load i8, i8* %5, align 1
  %78 = load i8, i8* %31, align 1
  %79 = load i8, i8* %36, align 1
  %80 = load i8, i8* %41, align 1
  %81 = zext i8 %77 to i64
  %82 = shl nuw nsw i64 %81, 24
  %83 = zext i8 %78 to i64
  %84 = shl nuw nsw i64 %83, 16
  %85 = or i64 %84, %82
  %86 = zext i8 %79 to i64
  %87 = shl nuw nsw i64 %86, 8
  %88 = or i64 %85, %87
  %89 = zext i8 %80 to i64
  %90 = or i64 %88, %89
  br label %91

91:                                               ; preds = %76, %27
  %92 = phi i64 [ %90, %76 ], [ %44, %27 ]
  %93 = phi i32 [ %74, %76 ], [ %25, %27 ]
  %94 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %92
  %96 = ptrtoint i8* %95 to i64
  %97 = getelementptr inbounds %"struct.OT::OffsetTo.6", %"struct.OT::OffsetTo.6"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %98 = icmp ugt i8* %7, %97
  %99 = icmp ult i8* %11, %97
  %100 = or i1 %98, %99
  br i1 %100, label %157, label %101, !prof !7

101:                                              ; preds = %91
  %102 = ptrtoint %"struct.OT::OffsetTo.6"* %94 to i64
  %103 = sub i64 %14, %102
  %104 = trunc i64 %103 to i32
  %105 = icmp ult i32 %104, 4
  br i1 %105, label %157, label %106, !prof !2

106:                                              ; preds = %101
  %107 = add nsw i32 %93, -4
  store i32 %107, i32* %20, align 8
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %109, label %157

109:                                              ; preds = %106
  %110 = load i8, i8* %97, align 1
  %111 = zext i8 %110 to i64
  %112 = shl nuw nsw i64 %111, 24
  %113 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i64
  %116 = shl nuw nsw i64 %115, 16
  %117 = or i64 %116, %112
  %118 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 2
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = shl nuw nsw i64 %120, 8
  %122 = or i64 %117, %121
  %123 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i64 3
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i64
  %126 = or i64 %122, %125
  %127 = getelementptr inbounds %"struct.OT::ResourceForkHeader", %"struct.OT::ResourceForkHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 %126
  %128 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #11
  %129 = bitcast i8** %3 to i64*
  store i64 %96, i64* %129, align 8
  %130 = icmp ugt i8* %7, %127
  %131 = icmp ult i8* %11, %127
  %132 = or i1 %130, %131
  br i1 %132, label %138, label %133, !prof !7

133:                                              ; preds = %109
  %134 = ptrtoint i8* %127 to i64
  %135 = sub i64 %14, %134
  %136 = trunc i64 %135 to i32
  %137 = icmp ult i32 %136, 28
  br i1 %137, label %138, label %140, !prof !2

138:                                              ; preds = %133, %109
  %139 = bitcast %"struct.OT::ArrayOfM1"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #11
  br label %144

140:                                              ; preds = %133
  %141 = add nsw i32 %93, -32
  store i32 %141, i32* %20, align 8
  %142 = icmp sgt i32 %141, 0
  %143 = bitcast %"struct.OT::ArrayOfM1"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #11
  br i1 %142, label %146, label %144

144:                                              ; preds = %140, %138
  %145 = phi i8* [ %139, %138 ], [ %143, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #11
  br label %156

146:                                              ; preds = %140
  %147 = getelementptr inbounds i8, i8* %127, i64 24
  %148 = bitcast i8* %147 to %"struct.OT::OffsetTo.169"*
  %149 = bitcast i8* %147 to i16*
  %150 = load i16, i16* %149, align 1
  %151 = tail call i16 @llvm.bswap.i16(i16 %150) #11
  %152 = zext i16 %151 to i64
  %153 = getelementptr inbounds i8, i8* %127, i64 %152
  %154 = bitcast %"struct.OT::ArrayOfM1"** %4 to i8**
  store i8* %153, i8** %154, align 8
  %155 = call zeroext i1 @_ZNK2OT8OffsetToINS_9ArrayOfM1INS_18ResourceTypeRecordENS_7IntTypeItLj2EEEEES4_Lb0EE8sanitizeIJPKS5_RPKvEEEbP21hb_sanitize_context_tSB_DpOT_(%"struct.OT::OffsetTo.169"* %148, %struct.hb_sanitize_context_t* %1, i8* %127, %"struct.OT::ArrayOfM1"** nonnull dereferenceable(8) %4, i8** nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #11
  br i1 %155, label %157, label %156

156:                                              ; preds = %146, %144
  br label %157

157:                                              ; preds = %156, %146, %106, %101, %91, %27, %64, %68, %73, %24, %2, %9, %13, %19
  %158 = phi i1 [ false, %19 ], [ false, %13 ], [ false, %9 ], [ false, %2 ], [ false, %24 ], [ false, %73 ], [ false, %68 ], [ false, %64 ], [ false, %27 ], [ false, %106 ], [ true, %146 ], [ false, %156 ], [ false, %101 ], [ false, %91 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_8OffsetToINS_19OpenTypeOffsetTableENS_7IntTypeIjLj4EEELb1EEES4_E8sanitizeIJPKNS_17TTCHeaderVersion1EEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.3"*, %struct.hb_sanitize_context_t*, %"struct.OT::TTCHeaderVersion1"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.3", %"struct.OT::ArrayOf.3"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %88, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %88, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.3"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %88, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %88, !prof !83

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.3", %"struct.OT::ArrayOf.3"* %0, i64 0, i32 1, i64 0
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::ArrayOf.3", %"struct.OT::ArrayOf.3"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::ArrayOf.3", %"struct.OT::ArrayOf.3"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::ArrayOf.3", %"struct.OT::ArrayOf.3"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp ult i32 %41, 1073741823
  br i1 %42, label %43, label %88, !prof !83

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = shl i32 %41, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = icmp ugt i8* %6, %44
  %49 = icmp ult i8* %10, %44
  %50 = or i1 %48, %49
  br i1 %50, label %88, label %51, !prof !7

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.OT::OffsetTo"* %24 to i64
  %53 = sub i64 %13, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp ugt i32 %45, %54
  br i1 %55, label %88, label %56, !prof !2

56:                                               ; preds = %51
  %57 = sub i32 %21, %45
  store i32 %57, i32* %19, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %88, !prof !4

59:                                               ; preds = %56
  %60 = load i8, i8* %4, align 1
  %61 = load i8, i8* %28, align 1
  %62 = load i8, i8* %33, align 1
  %63 = load i8, i8* %38, align 1
  %64 = zext i8 %60 to i32
  %65 = shl nuw i32 %64, 24
  %66 = zext i8 %61 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %65
  %69 = zext i8 %62 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %68, %70
  %72 = zext i8 %63 to i32
  %73 = or i32 %71, %72
  br label %74

74:                                               ; preds = %59, %43
  %75 = phi i32 [ %73, %59 ], [ %41, %43 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.OT::TTCHeaderVersion1"** %2 to i8**
  %79 = zext i32 %75 to i64
  br label %82

80:                                               ; preds = %82
  %81 = icmp eq i64 %87, %79
  br i1 %81, label %88, label %82

82:                                               ; preds = %80, %77
  %83 = phi i64 [ 0, %77 ], [ %87, %80 ]
  %84 = getelementptr inbounds %"struct.OT::ArrayOf.3", %"struct.OT::ArrayOf.3"* %0, i64 0, i32 1, i64 %83
  %85 = load i8*, i8** %78, align 8
  %86 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_19OpenTypeOffsetTableENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo"* %84, %struct.hb_sanitize_context_t* %1, i8* %85) #11
  %87 = add nuw nsw i64 %83, 1
  br i1 %86, label %80, label %88, !prof !4

88:                                               ; preds = %82, %80, %74, %47, %51, %23, %3, %8, %12, %18, %56
  %89 = phi i1 [ false, %56 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %23 ], [ false, %51 ], [ false, %47 ], [ true, %74 ], [ false, %82 ], [ true, %80 ]
  ret i1 %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_19OpenTypeOffsetTableENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %109, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %109, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %109, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %109

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo", %"struct.OT::OffsetTo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %109, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %98, label %57, !prof !7

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 12
  br i1 %61, label %98, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -16
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %98

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = icmp ugt i8* %6, %66
  %68 = icmp ult i8* %10, %66
  %69 = or i1 %67, %68
  br i1 %69, label %98, label %70, !prof !7

70:                                               ; preds = %65
  %71 = ptrtoint i8* %66 to i64
  %72 = sub i64 %13, %71
  %73 = trunc i64 %72 to i32
  %74 = icmp ult i32 %73, 8
  br i1 %74, label %98, label %75, !prof !2

75:                                               ; preds = %70
  %76 = add i32 %20, -24
  store i32 %76, i32* %19, align 8
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %98, !prof !83

78:                                               ; preds = %75
  %79 = getelementptr inbounds i8, i8* %53, i64 12
  %80 = bitcast i8* %66 to i16*
  %81 = load i16, i16* %80, align 1
  %82 = tail call i16 @llvm.bswap.i16(i16 %81) #11
  %83 = zext i16 %82 to i32
  %84 = shl nuw nsw i32 %83, 4
  %85 = icmp eq i16 %81, 0
  br i1 %85, label %109, label %86

86:                                               ; preds = %78
  %87 = icmp ugt i8* %6, %79
  %88 = icmp ult i8* %10, %79
  %89 = or i1 %87, %88
  br i1 %89, label %98, label %90, !prof !7

90:                                               ; preds = %86
  %91 = ptrtoint i8* %79 to i64
  %92 = sub i64 %13, %91
  %93 = trunc i64 %92 to i32
  %94 = icmp ugt i32 %84, %93
  br i1 %94, label %98, label %95, !prof !2

95:                                               ; preds = %90
  %96 = sub nsw i32 %76, %84
  store i32 %96, i32* %19, align 8
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %109, label %98, !prof !4

98:                                               ; preds = %62, %57, %42, %95, %75, %70, %65, %90, %86
  %99 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %100 = load i32, i32* %99, align 4
  %101 = icmp ugt i32 %100, 31
  br i1 %101, label %109, label %102

102:                                              ; preds = %98
  %103 = add nuw nsw i32 %100, 1
  store i32 %103, i32* %99, align 4
  %104 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %105 = load i8, i8* %104, align 8, !range !3
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = bitcast %"struct.OT::OffsetTo"* %0 to i32*
  store i32 0, i32* %108, align 1
  br label %109

109:                                              ; preds = %107, %102, %98, %3, %8, %12, %95, %78, %23, %18
  %110 = phi i1 [ false, %18 ], [ true, %23 ], [ true, %78 ], [ true, %95 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %107 ], [ false, %102 ], [ false, %98 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_9ArrayOfM1INS_18ResourceTypeRecordENS_7IntTypeItLj2EEEEES4_Lb0EE8sanitizeIJPKS5_RPKvEEEbP21hb_sanitize_context_tSB_DpOT_(%"struct.OT::OffsetTo.169"*, %struct.hb_sanitize_context_t*, i8*, %"struct.OT::ArrayOfM1"** dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.OT::OffsetTo.169", %"struct.OT::OffsetTo.169"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ugt i8* %8, %6
  br i1 %9, label %76, label %10, !prof !2

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ult i8* %12, %6
  br i1 %13, label %76, label %14, !prof !2

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = ptrtoint %"struct.OT::OffsetTo.169"* %0 to i64
  %17 = sub i64 %15, %16
  %18 = trunc i64 %17 to i32
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %76, label %20, !prof !2

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -2
  store i32 %23, i32* %21, align 8
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %76

25:                                               ; preds = %20
  %26 = bitcast %"struct.OT::OffsetTo.169"* %0 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = tail call i16 @llvm.bswap.i16(i16 %27) #11
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds i8, i8* %2, i64 %29
  %31 = bitcast i8* %30 to %"struct.OT::ArrayOfM1"*
  %32 = icmp ugt i8* %8, %30
  %33 = icmp ult i8* %12, %30
  %34 = or i1 %32, %33
  br i1 %34, label %76, label %35, !prof !7

35:                                               ; preds = %25
  %36 = ptrtoint i8* %30 to i64
  %37 = sub i64 %15, %36
  %38 = trunc i64 %37 to i32
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %76, label %40, !prof !2

40:                                               ; preds = %35
  %41 = add i32 %22, -4
  store i32 %41, i32* %21, align 8
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %76, !prof !83

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %30, i64 2
  %45 = bitcast i8* %30 to i16*
  %46 = load i16, i16* %45, align 1
  %47 = tail call i16 @llvm.bswap.i16(i16 %46) #11
  %48 = zext i16 %47 to i32
  %49 = shl nuw nsw i32 %48, 3
  %50 = add nuw nsw i32 %49, 8
  %51 = icmp ugt i8* %8, %44
  %52 = icmp ult i8* %12, %44
  %53 = or i1 %51, %52
  br i1 %53, label %76, label %54, !prof !7

54:                                               ; preds = %43
  %55 = ptrtoint i8* %44 to i64
  %56 = sub i64 %15, %55
  %57 = trunc i64 %56 to i32
  %58 = icmp ugt i32 %50, %57
  br i1 %58, label %76, label %59, !prof !2

59:                                               ; preds = %54
  %60 = sub nsw i32 %41, %50
  store i32 %60, i32* %21, align 8
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %76, !prof !4

62:                                               ; preds = %59
  %63 = load i16, i16* %45, align 1
  %64 = tail call i16 @llvm.bswap.i16(i16 %63) #11
  %65 = zext i16 %64 to i64
  %66 = bitcast %"struct.OT::ArrayOfM1"** %3 to i8**
  br label %70

67:                                               ; preds = %70
  %68 = add nuw nsw i64 %71, 1
  %69 = icmp eq i64 %71, %65
  br i1 %69, label %76, label %70

70:                                               ; preds = %67, %62
  %71 = phi i64 [ %68, %67 ], [ 0, %62 ]
  %72 = getelementptr inbounds %"struct.OT::ArrayOfM1", %"struct.OT::ArrayOfM1"* %31, i64 0, i32 1, i64 %71
  %73 = load i8*, i8** %66, align 8
  %74 = load i8*, i8** %4, align 8
  %75 = tail call zeroext i1 @_ZNK2OT18ResourceTypeRecord8sanitizeEP21hb_sanitize_context_tPKvS4_(%"struct.OT::ResourceTypeRecord"* %72, %struct.hb_sanitize_context_t* %1, i8* %73, i8* %74) #11
  br i1 %75, label %67, label %76, !prof !4

76:                                               ; preds = %70, %67, %5, %10, %14, %43, %54, %25, %35, %40, %59, %20
  %77 = phi i1 [ false, %20 ], [ false, %59 ], [ false, %40 ], [ false, %35 ], [ false, %25 ], [ false, %54 ], [ false, %43 ], [ false, %14 ], [ false, %10 ], [ false, %5 ], [ false, %70 ], [ true, %67 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT18ResourceTypeRecord8sanitizeEP21hb_sanitize_context_tPKvS4_(%"struct.OT::ResourceTypeRecord"*, %struct.hb_sanitize_context_t*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.OT::ResourceTypeRecord", %"struct.OT::ResourceTypeRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %5
  br i1 %8, label %95, label %9, !prof !2

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ult i8* %11, %5
  br i1 %12, label %95, label %13, !prof !2

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = ptrtoint %"struct.OT::ResourceTypeRecord"* %0 to i64
  %16 = sub i64 %14, %15
  %17 = trunc i64 %16 to i32
  %18 = icmp ult i32 %17, 8
  br i1 %18, label %95, label %19, !prof !2

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, -8
  store i32 %22, i32* %20, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %95

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.OT::ResourceTypeRecord", %"struct.OT::ResourceTypeRecord"* %0, i64 0, i32 2
  %26 = load i8, i8* %5, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw i32 %27, 24
  %29 = getelementptr inbounds %"struct.OT::ResourceTypeRecord", %"struct.OT::ResourceTypeRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 16
  %33 = or i32 %32, %28
  %34 = getelementptr inbounds %"struct.OT::ResourceTypeRecord", %"struct.OT::ResourceTypeRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = or i32 %33, %37
  %39 = getelementptr inbounds %"struct.OT::ResourceTypeRecord", %"struct.OT::ResourceTypeRecord"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = or i32 %38, %41
  %43 = icmp eq i32 %42, 1936092788
  br i1 %43, label %44, label %51

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"struct.OT::ResourceTypeRecord", %"struct.OT::ResourceTypeRecord"* %0, i64 0, i32 1
  %46 = bitcast %"struct.OT::IntType.0"* %45 to i16*
  %47 = load i16, i16* %46, align 1
  %48 = tail call i16 @llvm.bswap.i16(i16 %47) #11
  %49 = zext i16 %48 to i32
  %50 = add nuw nsw i32 %49, 1
  br label %51

51:                                               ; preds = %24, %44
  %52 = phi i32 [ %50, %44 ], [ 0, %24 ]
  %53 = getelementptr inbounds %"struct.OT::OffsetTo.172", %"struct.OT::OffsetTo.172"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %54 = icmp ugt i8* %7, %53
  %55 = icmp ult i8* %11, %53
  %56 = or i1 %54, %55
  br i1 %56, label %95, label %57, !prof !7

57:                                               ; preds = %51
  %58 = ptrtoint %"struct.OT::OffsetTo.172"* %25 to i64
  %59 = sub i64 %14, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 2
  br i1 %61, label %95, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %21, -10
  store i32 %63, i32* %20, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %95

65:                                               ; preds = %62
  %66 = bitcast %"struct.OT::OffsetTo.172"* %25 to i16*
  %67 = load i16, i16* %66, align 1
  %68 = tail call i16 @llvm.bswap.i16(i16 %67) #11
  %69 = zext i16 %68 to i64
  %70 = getelementptr inbounds i8, i8* %2, i64 %69
  %71 = bitcast i8* %70 to %"struct.OT::UnsizedArrayOf.187"*
  %72 = mul nsw i32 %52, 12
  %73 = icmp eq i32 %52, 0
  br i1 %73, label %95, label %74

74:                                               ; preds = %65
  %75 = icmp ugt i8* %7, %70
  %76 = icmp ult i8* %11, %70
  %77 = or i1 %75, %76
  br i1 %77, label %95, label %78, !prof !7

78:                                               ; preds = %74
  %79 = ptrtoint i8* %70 to i64
  %80 = sub i64 %14, %79
  %81 = trunc i64 %80 to i32
  %82 = icmp ugt i32 %72, %81
  br i1 %82, label %95, label %83, !prof !2

83:                                               ; preds = %78
  %84 = sub nsw i32 %63, %72
  store i32 %84, i32* %20, align 8
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %95, !prof !4

86:                                               ; preds = %83
  %87 = zext i32 %52 to i64
  br label %90

88:                                               ; preds = %90
  %89 = icmp eq i64 %94, %87
  br i1 %89, label %95, label %90

90:                                               ; preds = %88, %86
  %91 = phi i64 [ 0, %86 ], [ %94, %88 ]
  %92 = getelementptr inbounds %"struct.OT::UnsizedArrayOf.187", %"struct.OT::UnsizedArrayOf.187"* %71, i64 0, i32 0, i64 %91
  %93 = tail call zeroext i1 @_ZNK2OT14ResourceRecord8sanitizeEP21hb_sanitize_context_tPKv(%"struct.OT::ResourceRecord"* %92, %struct.hb_sanitize_context_t* %1, i8* %3) #11
  %94 = add nuw nsw i64 %91, 1
  br i1 %93, label %88, label %95, !prof !4

95:                                               ; preds = %90, %88, %65, %83, %78, %74, %62, %57, %51, %4, %9, %13, %19
  %96 = phi i1 [ false, %19 ], [ false, %13 ], [ false, %9 ], [ false, %4 ], [ false, %62 ], [ false, %83 ], [ false, %78 ], [ false, %74 ], [ false, %57 ], [ false, %51 ], [ true, %65 ], [ true, %88 ], [ false, %90 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT14ResourceRecord8sanitizeEP21hb_sanitize_context_tPKv(%"struct.OT::ResourceRecord"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %153, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %153, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ResourceRecord"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 12
  br i1 %17, label %153, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -12
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %153

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"struct.OT::OffsetTo.179", %"struct.OT::OffsetTo.179"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %26 = icmp ugt i8* %6, %25
  %27 = icmp ult i8* %10, %25
  %28 = or i1 %26, %27
  br i1 %28, label %153, label %29, !prof !7

29:                                               ; preds = %23
  %30 = ptrtoint %"struct.OT::OffsetTo.179"* %24 to i64
  %31 = sub i64 %13, %30
  %32 = trunc i64 %31 to i32
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %153, label %34, !prof !2

34:                                               ; preds = %29
  %35 = add i32 %20, -15
  store i32 %35, i32* %19, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %153

37:                                               ; preds = %34
  %38 = load i8, i8* %25, align 1
  %39 = zext i8 %38 to i64
  %40 = shl nuw nsw i64 %39, 16
  %41 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = shl nuw nsw i64 %43, 8
  %45 = or i64 %44, %40
  %46 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = or i64 %45, %48
  %50 = getelementptr inbounds i8, i8* %2, i64 %49
  %51 = icmp ugt i8* %6, %50
  %52 = icmp ult i8* %10, %50
  %53 = or i1 %51, %52
  br i1 %53, label %153, label %54, !prof !7

54:                                               ; preds = %37
  %55 = ptrtoint i8* %50 to i64
  %56 = sub i64 %13, %55
  %57 = trunc i64 %56 to i32
  %58 = icmp ult i32 %57, 4
  br i1 %58, label %153, label %59, !prof !2

59:                                               ; preds = %54
  %60 = add i32 %20, -19
  store i32 %60, i32* %19, align 8
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %153, !prof !83

62:                                               ; preds = %59
  %63 = getelementptr inbounds i8, i8* %50, i64 4
  %64 = load i8, i8* %50, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw i32 %65, 24
  %67 = getelementptr inbounds i8, i8* %50, i64 1
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl nuw nsw i32 %69, 16
  %71 = or i32 %70, %66
  %72 = getelementptr inbounds i8, i8* %50, i64 2
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 8
  %76 = or i32 %71, %75
  %77 = getelementptr inbounds i8, i8* %50, i64 3
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = or i32 %76, %79
  switch i32 %80, label %81 [
    i32 -1, label %153
    i32 0, label %93
  ], !prof !87

81:                                               ; preds = %62
  %82 = icmp ugt i8* %6, %63
  %83 = icmp ult i8* %10, %63
  %84 = or i1 %82, %83
  br i1 %84, label %153, label %85, !prof !7

85:                                               ; preds = %81
  %86 = ptrtoint i8* %63 to i64
  %87 = sub i64 %13, %86
  %88 = trunc i64 %87 to i32
  %89 = icmp ugt i32 %80, %88
  br i1 %89, label %153, label %90, !prof !2

90:                                               ; preds = %85
  %91 = sub i32 %60, %80
  store i32 %91, i32* %19, align 8
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %153, !prof !4

93:                                               ; preds = %90, %62
  %94 = phi i32 [ %91, %90 ], [ %60, %62 ]
  %95 = getelementptr inbounds %"struct.OT::ResourceRecord", %"struct.OT::ResourceRecord"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i64 0
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i64
  %98 = shl nuw nsw i64 %97, 16
  %99 = load i8, i8* %41, align 1
  %100 = zext i8 %99 to i64
  %101 = shl nuw nsw i64 %100, 8
  %102 = or i64 %101, %98
  %103 = load i8, i8* %46, align 1
  %104 = zext i8 %103 to i64
  %105 = or i64 %102, %104
  %106 = getelementptr inbounds i8, i8* %2, i64 %105
  %107 = getelementptr inbounds i8, i8* %106, i64 4
  %108 = icmp ugt i8* %6, %107
  %109 = icmp ult i8* %10, %107
  %110 = or i1 %108, %109
  br i1 %110, label %153, label %111, !prof !7

111:                                              ; preds = %93
  %112 = ptrtoint i8* %107 to i64
  %113 = sub i64 %13, %112
  %114 = trunc i64 %113 to i32
  %115 = icmp ult i32 %114, 12
  br i1 %115, label %153, label %116, !prof !2

116:                                              ; preds = %111
  %117 = add nsw i32 %94, -12
  store i32 %117, i32* %19, align 8
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %153

119:                                              ; preds = %116
  %120 = getelementptr inbounds i8, i8* %107, i64 4
  %121 = icmp ugt i8* %6, %120
  %122 = icmp ult i8* %10, %120
  %123 = or i1 %121, %122
  br i1 %123, label %153, label %124, !prof !7

124:                                              ; preds = %119
  %125 = ptrtoint i8* %120 to i64
  %126 = sub i64 %13, %125
  %127 = trunc i64 %126 to i32
  %128 = icmp ult i32 %127, 8
  br i1 %128, label %153, label %129, !prof !2

129:                                              ; preds = %124
  %130 = add nsw i32 %94, -20
  store i32 %130, i32* %19, align 8
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %153, !prof !83

132:                                              ; preds = %129
  %133 = getelementptr inbounds i8, i8* %107, i64 12
  %134 = bitcast i8* %120 to i16*
  %135 = load i16, i16* %134, align 1
  %136 = tail call i16 @llvm.bswap.i16(i16 %135) #11
  %137 = zext i16 %136 to i32
  %138 = shl nuw nsw i32 %137, 4
  %139 = icmp eq i16 %135, 0
  br i1 %139, label %152, label %140

140:                                              ; preds = %132
  %141 = icmp ugt i8* %6, %133
  %142 = icmp ult i8* %10, %133
  %143 = or i1 %141, %142
  br i1 %143, label %153, label %144, !prof !7

144:                                              ; preds = %140
  %145 = ptrtoint i8* %133 to i64
  %146 = sub i64 %13, %145
  %147 = trunc i64 %146 to i32
  %148 = icmp ugt i32 %138, %147
  br i1 %148, label %153, label %149, !prof !2

149:                                              ; preds = %144
  %150 = sub nsw i32 %130, %138
  store i32 %150, i32* %19, align 8
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %152, label %153, !prof !4

152:                                              ; preds = %149, %132
  br label %153

153:                                              ; preds = %152, %149, %144, %140, %129, %124, %119, %116, %111, %93, %37, %54, %59, %62, %81, %85, %90, %23, %29, %34, %3, %8, %12, %18
  %154 = phi i1 [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %34 ], [ false, %29 ], [ false, %23 ], [ false, %90 ], [ false, %85 ], [ false, %81 ], [ false, %62 ], [ false, %59 ], [ false, %54 ], [ false, %37 ], [ false, %116 ], [ false, %111 ], [ false, %93 ], [ true, %152 ], [ false, %149 ], [ false, %129 ], [ false, %124 ], [ false, %119 ], [ false, %144 ], [ false, %140 ]
  ret i1 %154
}

declare hidden void @_hb_ot_shaper_face_data_destroy(%struct.hb_ot_face_data_t*) local_unnamed_addr #2

declare hidden zeroext i1 @_ZN20hb_user_data_array_t3setEP18hb_user_data_key_tPvPFvS2_Ei(%struct.hb_user_data_array_t*, %struct.hb_user_data_key_t*, i8*, void (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #5

declare hidden i8* @_ZN20hb_user_data_array_t3getEP18hb_user_data_key_t(%struct.hb_user_data_array_t*, %struct.hb_user_data_key_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2OT4cmap13accelerator_t4initEP9hb_face_t(%"struct.OT::cmap::accelerator_t"*, %struct.hb_face_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.hb_sanitize_context_t, align 8
  %4 = alloca i8, align 1
  %5 = bitcast %struct.hb_sanitize_context_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 8
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 9
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %9, align 8
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 10
  %11 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #11
  store i32 65536, i32* %10, align 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %3, i64 0, i32 11
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %1, i64 0, i32 6, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %2
  %17 = tail call i32 @_ZNK9hb_face_t15load_num_glyphsEv(%struct.hb_face_t* %1) #11
  br label %18

18:                                               ; preds = %2, %16
  %19 = phi i32 [ %17, %16 ], [ %14, %2 ]
  store i32 %19, i32* %10, align 8
  store i8 1, i8* %12, align 4
  %20 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %1, i64 0, i32 1
  %21 = bitcast {}** %20 to %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)**
  %22 = load %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)** %21, align 8
  %23 = icmp eq %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)* %22, null
  br i1 %23, label %29, label %24, !prof !2

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hb_face_t, %struct.hb_face_t* %1, i64 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = tail call %struct.hb_blob_t* %22(%struct.hb_face_t* %1, i32 1668112752, i8* %26) #11
  %28 = icmp eq %struct.hb_blob_t* %27, null
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %24, %18
  %30 = tail call %struct.hb_blob_t* @hb_blob_get_empty() #11
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi %struct.hb_blob_t* [ %27, %24 ], [ %30, %29 ]
  %33 = call %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cmapEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t* nonnull %3, %struct.hb_blob_t* %32) #11
  %34 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 5, i32 0, i32 0
  store %struct.hb_blob_t* %33, %struct.hb_blob_t** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %35 = icmp eq %struct.hb_blob_t* %33, null
  %36 = select i1 %35, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %33
  %37 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %36, i64 0, i32 1
  %38 = bitcast i8** %37 to %"struct.OT::cmap"**
  %39 = load %"struct.OT::cmap"*, %"struct.OT::cmap"** %38, align 8
  %40 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %36, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = icmp ult i32 %41, 4
  %43 = select i1 %42, %"struct.OT::cmap"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap"*), %"struct.OT::cmap"* %39
  %44 = call %"struct.OT::CmapSubtable"* @_ZNK2OT4cmap18find_best_subtableEPb(%"struct.OT::cmap"* %43, i8* nonnull %4)
  %45 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 0, i32 0
  store %"struct.OT::CmapSubtable"* %44, %"struct.OT::CmapSubtable"** %45, align 8
  %46 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 1, i32 0
  store %"struct.OT::CmapSubtableFormat14"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtableFormat14"*), %"struct.OT::CmapSubtableFormat14"** %46, align 8
  %47 = load %struct.hb_blob_t*, %struct.hb_blob_t** %34, align 8
  %48 = icmp eq %struct.hb_blob_t* %47, null
  %49 = select i1 %48, %struct.hb_blob_t* bitcast ([48 x i64]* @_hb_NullPool to %struct.hb_blob_t*), %struct.hb_blob_t* %47
  %50 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %49, i64 0, i32 1
  %51 = bitcast i8** %50 to %"struct.OT::cmap"**
  %52 = load %"struct.OT::cmap"*, %"struct.OT::cmap"** %51, align 8
  %53 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %49, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp ult i32 %54, 4
  %56 = select i1 %55, %"struct.OT::cmap"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::cmap"*), %"struct.OT::cmap"* %52
  %57 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %56, i64 0, i32 1
  %58 = bitcast %"struct.OT::SortedArrayOf.329"* %57 to i16*
  %59 = load i16, i16* %58, align 1
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %95, label %61

61:                                               ; preds = %31
  %62 = call i16 @llvm.bswap.i16(i16 %59) #11
  %63 = zext i16 %62 to i32
  %64 = add nsw i32 %63, -1
  br label %65

65:                                               ; preds = %88, %61
  %66 = phi i32 [ %64, %61 ], [ %90, %88 ]
  %67 = phi i32 [ 0, %61 ], [ %89, %88 ]
  %68 = add i32 %67, %66
  %69 = lshr i32 %68, 1
  %70 = zext i32 %69 to i64
  %71 = shl nuw nsw i64 %70, 3
  %72 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %56, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %71
  %73 = bitcast i8* %72 to i16*
  %74 = load i16, i16* %73, align 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %65
  %77 = getelementptr inbounds i8, i8* %72, i64 2
  %78 = bitcast i8* %77 to i16*
  %79 = load i16, i16* %78, align 1
  %80 = call i16 @llvm.bswap.i16(i16 %79) #11
  %81 = icmp ugt i16 %80, 5
  br i1 %81, label %82, label %84

82:                                               ; preds = %65, %76
  %83 = add nsw i32 %69, -1
  br label %88

84:                                               ; preds = %76
  %85 = icmp eq i16 %79, 1280
  br i1 %85, label %92, label %86

86:                                               ; preds = %84
  %87 = add nuw nsw i32 %69, 1
  br label %88

88:                                               ; preds = %86, %82
  %89 = phi i32 [ %67, %82 ], [ %87, %86 ]
  %90 = phi i32 [ %83, %82 ], [ %66, %86 ]
  %91 = icmp sgt i32 %89, %90
  br i1 %91, label %95, label %65

92:                                               ; preds = %84
  %93 = zext i32 %69 to i64
  %94 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %56, i64 0, i32 1, i32 0, i32 1, i64 %93
  br label %95

95:                                               ; preds = %88, %92, %31
  %96 = phi %"struct.OT::EncodingRecord"* [ %94, %92 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %31 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %88 ]
  %97 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw i32 %99, 24
  %101 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = shl nuw nsw i32 %103, 16
  %105 = or i32 %104, %100
  %106 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = or i32 %105, %109
  %111 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = or i32 %110, %113
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %95
  %117 = zext i8 %98 to i64
  %118 = shl nuw nsw i64 %117, 24
  %119 = zext i8 %102 to i64
  %120 = shl nuw nsw i64 %119, 16
  %121 = or i64 %120, %118
  %122 = zext i8 %107 to i64
  %123 = shl nuw nsw i64 %122, 8
  %124 = or i64 %121, %123
  %125 = zext i8 %112 to i64
  %126 = or i64 %124, %125
  %127 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %56, i64 0, i32 0, i32 0, i32 0, i64 %126
  %128 = icmp eq i8* %127, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %116
  %130 = bitcast i8* %127 to i16*
  %131 = load i16, i16* %130, align 1
  %132 = icmp eq i16 %131, 3584
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = bitcast %"struct.OT::CmapSubtableFormat14"** %46 to i8**
  store i8* %127, i8** %134, align 8
  br label %135

135:                                              ; preds = %95, %116, %133, %129
  %136 = icmp eq %"struct.OT::CmapSubtable"* %44, null
  %137 = select i1 %136, %"struct.OT::CmapSubtable"* bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtable"*), %"struct.OT::CmapSubtable"* %44
  %138 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %139 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 3
  store i8* %138, i8** %139, align 8
  %140 = load i8, i8* %4, align 1, !range !3
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %180, !prof !4

142:                                              ; preds = %135
  %143 = bitcast %"struct.OT::CmapSubtable"* %137 to i16*
  %144 = load i16, i16* %143, align 1
  %145 = call i16 @llvm.bswap.i16(i16 %144) #11
  switch i16 %145, label %180 [
    i16 12, label %146
    i16 4, label %147
  ]

146:                                              ; preds = %142
  br label %180

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4
  %149 = bitcast %"struct.OT::CmapSubtable"* %137 to %"struct.OT::CmapSubtableFormat4"*
  %150 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %137, i64 0, i32 0, i32 0, i32 3
  %151 = bitcast [256 x %"struct.OT::IntType.14"]* %150 to i16*
  %152 = load i16, i16* %151, align 1
  %153 = call i16 @llvm.bswap.i16(i16 %152) #11
  %154 = lshr i16 %153, 1
  %155 = zext i16 %154 to i32
  %156 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 5
  store i32 %155, i32* %156, align 8
  %157 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %137, i64 0, i32 0, i32 0, i32 3, i64 8
  %158 = bitcast %"struct.OT::CmapSubtableFormat4::accelerator_t"* %148 to %"struct.OT::IntType.14"**
  store %"struct.OT::IntType.14"* %157, %"struct.OT::IntType.14"** %158, align 8
  %159 = zext i16 %154 to i64
  %160 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %149, i64 0, i32 7, i32 0, i64 %159
  %161 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %160, i64 1
  %162 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 1
  store %"struct.OT::IntType.0"* %161, %"struct.OT::IntType.0"** %162, align 8
  %163 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %161, i64 %159
  %164 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 2
  store %"struct.OT::IntType.0"* %163, %"struct.OT::IntType.0"** %164, align 8
  %165 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %163, i64 %159
  %166 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 3
  store %"struct.OT::IntType.0"* %165, %"struct.OT::IntType.0"** %166, align 8
  %167 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %165, i64 %159
  %168 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 4
  store %"struct.OT::IntType.0"* %167, %"struct.OT::IntType.0"** %168, align 8
  %169 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %137, i64 0, i32 0, i32 0, i32 1
  %170 = bitcast %"struct.OT::IntType.0"* %169 to i16*
  %171 = load i16, i16* %170, align 1
  %172 = call i16 @llvm.bswap.i16(i16 %171) #11
  %173 = zext i16 %172 to i32
  %174 = shl nuw nsw i32 %155, 3
  %175 = sub nuw nsw i32 -16, %174
  %176 = add nsw i32 %175, %173
  %177 = lshr i32 %176, 1
  %178 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 4, i32 6
  store i32 %177, i32* %178, align 4
  %179 = bitcast i8** %139 to %"struct.OT::CmapSubtableFormat4::accelerator_t"**
  store %"struct.OT::CmapSubtableFormat4::accelerator_t"* %148, %"struct.OT::CmapSubtableFormat4::accelerator_t"** %179, align 8
  br label %180

180:                                              ; preds = %142, %135, %146, %147
  %181 = phi i1 (i8*, i32, i32*)* [ @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_20CmapSubtableFormat12EEEbPKvjPj, %146 ], [ @_ZN2OT19CmapSubtableFormat413accelerator_t14get_glyph_funcEPKvjPj, %147 ], [ @_ZN2OT4cmap13accelerator_t21get_glyph_from_symbolINS_12CmapSubtableEEEbPKvjPj, %135 ], [ @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_12CmapSubtableEEEbPKvjPj, %142 ]
  %182 = getelementptr inbounds %"struct.OT::cmap::accelerator_t", %"struct.OT::cmap::accelerator_t"* %0, i64 0, i32 2
  store i1 (i8*, i32, i32*)* %181, i1 (i8*, i32, i32*)** %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.OT::CmapSubtable"* @_ZNK2OT4cmap18find_best_subtableEPb(%"struct.OT::cmap"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ne i8* %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %5

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1
  %7 = bitcast %"struct.OT::SortedArrayOf.329"* %6 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %5
  %11 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %12 = zext i16 %11 to i32
  %13 = add nsw i32 %12, -1
  br label %14

14:                                               ; preds = %41, %10
  %15 = phi i32 [ %13, %10 ], [ %43, %41 ]
  %16 = phi i32 [ 0, %10 ], [ %42, %41 ]
  %17 = add i32 %16, %15
  %18 = lshr i32 %17, 1
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 3
  %21 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #11
  %25 = icmp ugt i16 %24, 3
  %26 = icmp ne i16 %23, 768
  %27 = or i1 %26, %25
  br i1 %27, label %34, label %28

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %21, i64 2
  %30 = bitcast i8* %29 to i16*
  %31 = load i16, i16* %30, align 1
  %32 = icmp eq i16 %31, 0
  %33 = icmp ne i16 %31, 0
  br i1 %32, label %37, label %35

34:                                               ; preds = %14
  br i1 %25, label %35, label %37

35:                                               ; preds = %28, %34
  %36 = add nsw i32 %18, -1
  br label %41

37:                                               ; preds = %28, %34
  %38 = phi i1 [ %26, %34 ], [ %33, %28 ]
  br i1 %38, label %39, label %45

39:                                               ; preds = %37
  %40 = add nuw nsw i32 %18, 1
  br label %41

41:                                               ; preds = %39, %35
  %42 = phi i32 [ %16, %35 ], [ %40, %39 ]
  %43 = phi i32 [ %36, %35 ], [ %15, %39 ]
  %44 = icmp sgt i32 %42, %43
  br i1 %44, label %48, label %14

45:                                               ; preds = %37
  %46 = zext i32 %18 to i64
  %47 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %46
  br label %48

48:                                               ; preds = %41, %45, %5
  %49 = phi %"struct.OT::EncodingRecord"* [ %47, %45 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %5 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %41 ]
  %50 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  %64 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %48
  %70 = zext i8 %51 to i64
  %71 = shl nuw nsw i64 %70, 24
  %72 = zext i8 %55 to i64
  %73 = shl nuw nsw i64 %72, 16
  %74 = or i64 %73, %71
  %75 = zext i8 %60 to i64
  %76 = shl nuw nsw i64 %75, 8
  %77 = or i64 %74, %76
  %78 = zext i8 %65 to i64
  %79 = or i64 %77, %78
  %80 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %79
  %81 = bitcast i8* %80 to %"struct.OT::CmapSubtable"*
  %82 = icmp eq i8* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %69
  br i1 %3, label %84, label %645

84:                                               ; preds = %83
  store i8 1, i8* %1, align 1
  br label %645

85:                                               ; preds = %48, %69
  br i1 %9, label %125, label %86

86:                                               ; preds = %85
  %87 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %88 = zext i16 %87 to i32
  %89 = add nsw i32 %88, -1
  br label %90

90:                                               ; preds = %118, %86
  %91 = phi i32 [ %89, %86 ], [ %120, %118 ]
  %92 = phi i32 [ 0, %86 ], [ %119, %118 ]
  %93 = add i32 %92, %91
  %94 = lshr i32 %93, 1
  %95 = zext i32 %94 to i64
  %96 = shl nuw nsw i64 %95, 3
  %97 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %96
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 1
  %100 = tail call i16 @llvm.bswap.i16(i16 %99) #11
  %101 = icmp ugt i16 %100, 3
  %102 = icmp ne i16 %99, 768
  %103 = or i1 %102, %101
  br i1 %103, label %111, label %104

104:                                              ; preds = %90
  %105 = getelementptr inbounds i8, i8* %97, i64 2
  %106 = bitcast i8* %105 to i16*
  %107 = load i16, i16* %106, align 1
  %108 = tail call i16 @llvm.bswap.i16(i16 %107) #11
  %109 = icmp ugt i16 %108, 10
  %110 = icmp ne i16 %107, 2560
  br i1 %109, label %112, label %114

111:                                              ; preds = %90
  br i1 %101, label %112, label %114

112:                                              ; preds = %111, %104
  %113 = add nsw i32 %94, -1
  br label %118

114:                                              ; preds = %111, %104
  %115 = phi i1 [ %102, %111 ], [ %110, %104 ]
  br i1 %115, label %116, label %122

116:                                              ; preds = %114
  %117 = add nuw nsw i32 %94, 1
  br label %118

118:                                              ; preds = %116, %112
  %119 = phi i32 [ %92, %112 ], [ %117, %116 ]
  %120 = phi i32 [ %113, %112 ], [ %91, %116 ]
  %121 = icmp sgt i32 %119, %120
  br i1 %121, label %125, label %90

122:                                              ; preds = %114
  %123 = zext i32 %94 to i64
  %124 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %123
  br label %125

125:                                              ; preds = %118, %122, %85
  %126 = phi %"struct.OT::EncodingRecord"* [ %124, %122 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %85 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %118 ]
  %127 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = shl nuw i32 %129, 24
  %131 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 16
  %135 = or i32 %134, %130
  %136 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = shl nuw nsw i32 %138, 8
  %140 = or i32 %135, %139
  %141 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = or i32 %140, %143
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %160, label %146

146:                                              ; preds = %125
  %147 = zext i8 %128 to i64
  %148 = shl nuw nsw i64 %147, 24
  %149 = zext i8 %132 to i64
  %150 = shl nuw nsw i64 %149, 16
  %151 = or i64 %150, %148
  %152 = zext i8 %137 to i64
  %153 = shl nuw nsw i64 %152, 8
  %154 = or i64 %151, %153
  %155 = zext i8 %142 to i64
  %156 = or i64 %154, %155
  %157 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %156
  %158 = bitcast i8* %157 to %"struct.OT::CmapSubtable"*
  %159 = icmp eq i8* %157, null
  br i1 %159, label %160, label %645

160:                                              ; preds = %125, %146
  br i1 %9, label %195, label %161

161:                                              ; preds = %160
  %162 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %163, -1
  br label %165

165:                                              ; preds = %188, %161
  %166 = phi i32 [ %164, %161 ], [ %190, %188 ]
  %167 = phi i32 [ 0, %161 ], [ %189, %188 ]
  %168 = add i32 %167, %166
  %169 = lshr i32 %168, 1
  %170 = zext i32 %169 to i64
  %171 = shl nuw nsw i64 %170, 3
  %172 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %171
  %173 = bitcast i8* %172 to i16*
  %174 = load i16, i16* %173, align 1
  %175 = icmp eq i16 %174, 0
  br i1 %175, label %176, label %182

176:                                              ; preds = %165
  %177 = getelementptr inbounds i8, i8* %172, i64 2
  %178 = bitcast i8* %177 to i16*
  %179 = load i16, i16* %178, align 1
  %180 = tail call i16 @llvm.bswap.i16(i16 %179) #11
  %181 = icmp ugt i16 %180, 6
  br i1 %181, label %182, label %184

182:                                              ; preds = %165, %176
  %183 = add nsw i32 %169, -1
  br label %188

184:                                              ; preds = %176
  %185 = icmp eq i16 %179, 1536
  br i1 %185, label %192, label %186

186:                                              ; preds = %184
  %187 = add nuw nsw i32 %169, 1
  br label %188

188:                                              ; preds = %186, %182
  %189 = phi i32 [ %167, %182 ], [ %187, %186 ]
  %190 = phi i32 [ %183, %182 ], [ %166, %186 ]
  %191 = icmp sgt i32 %189, %190
  br i1 %191, label %195, label %165

192:                                              ; preds = %184
  %193 = zext i32 %169 to i64
  %194 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %193
  br label %195

195:                                              ; preds = %188, %192, %160
  %196 = phi %"struct.OT::EncodingRecord"* [ %194, %192 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %160 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %188 ]
  %197 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = shl nuw i32 %199, 24
  %201 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl nuw nsw i32 %203, 16
  %205 = or i32 %204, %200
  %206 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = shl nuw nsw i32 %208, 8
  %210 = or i32 %205, %209
  %211 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = or i32 %210, %213
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %230, label %216

216:                                              ; preds = %195
  %217 = zext i8 %198 to i64
  %218 = shl nuw nsw i64 %217, 24
  %219 = zext i8 %202 to i64
  %220 = shl nuw nsw i64 %219, 16
  %221 = or i64 %220, %218
  %222 = zext i8 %207 to i64
  %223 = shl nuw nsw i64 %222, 8
  %224 = or i64 %221, %223
  %225 = zext i8 %212 to i64
  %226 = or i64 %224, %225
  %227 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %226
  %228 = bitcast i8* %227 to %"struct.OT::CmapSubtable"*
  %229 = icmp eq i8* %227, null
  br i1 %229, label %230, label %645

230:                                              ; preds = %195, %216
  br i1 %9, label %265, label %231

231:                                              ; preds = %230
  %232 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %233 = zext i16 %232 to i32
  %234 = add nsw i32 %233, -1
  br label %235

235:                                              ; preds = %258, %231
  %236 = phi i32 [ %234, %231 ], [ %260, %258 ]
  %237 = phi i32 [ 0, %231 ], [ %259, %258 ]
  %238 = add i32 %237, %236
  %239 = lshr i32 %238, 1
  %240 = zext i32 %239 to i64
  %241 = shl nuw nsw i64 %240, 3
  %242 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %241
  %243 = bitcast i8* %242 to i16*
  %244 = load i16, i16* %243, align 1
  %245 = icmp eq i16 %244, 0
  br i1 %245, label %246, label %252

246:                                              ; preds = %235
  %247 = getelementptr inbounds i8, i8* %242, i64 2
  %248 = bitcast i8* %247 to i16*
  %249 = load i16, i16* %248, align 1
  %250 = tail call i16 @llvm.bswap.i16(i16 %249) #11
  %251 = icmp ugt i16 %250, 4
  br i1 %251, label %252, label %254

252:                                              ; preds = %235, %246
  %253 = add nsw i32 %239, -1
  br label %258

254:                                              ; preds = %246
  %255 = icmp eq i16 %249, 1024
  br i1 %255, label %262, label %256

256:                                              ; preds = %254
  %257 = add nuw nsw i32 %239, 1
  br label %258

258:                                              ; preds = %256, %252
  %259 = phi i32 [ %237, %252 ], [ %257, %256 ]
  %260 = phi i32 [ %253, %252 ], [ %236, %256 ]
  %261 = icmp sgt i32 %259, %260
  br i1 %261, label %265, label %235

262:                                              ; preds = %254
  %263 = zext i32 %239 to i64
  %264 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %263
  br label %265

265:                                              ; preds = %258, %262, %230
  %266 = phi %"struct.OT::EncodingRecord"* [ %264, %262 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %230 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %258 ]
  %267 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = shl nuw i32 %269, 24
  %271 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = shl nuw nsw i32 %273, 16
  %275 = or i32 %274, %270
  %276 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = shl nuw nsw i32 %278, 8
  %280 = or i32 %275, %279
  %281 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = or i32 %280, %283
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %300, label %286

286:                                              ; preds = %265
  %287 = zext i8 %268 to i64
  %288 = shl nuw nsw i64 %287, 24
  %289 = zext i8 %272 to i64
  %290 = shl nuw nsw i64 %289, 16
  %291 = or i64 %290, %288
  %292 = zext i8 %277 to i64
  %293 = shl nuw nsw i64 %292, 8
  %294 = or i64 %291, %293
  %295 = zext i8 %282 to i64
  %296 = or i64 %294, %295
  %297 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %296
  %298 = bitcast i8* %297 to %"struct.OT::CmapSubtable"*
  %299 = icmp eq i8* %297, null
  br i1 %299, label %300, label %645

300:                                              ; preds = %265, %286
  br i1 %9, label %340, label %301

301:                                              ; preds = %300
  %302 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %303 = zext i16 %302 to i32
  %304 = add nsw i32 %303, -1
  br label %305

305:                                              ; preds = %333, %301
  %306 = phi i32 [ %304, %301 ], [ %335, %333 ]
  %307 = phi i32 [ 0, %301 ], [ %334, %333 ]
  %308 = add i32 %307, %306
  %309 = lshr i32 %308, 1
  %310 = zext i32 %309 to i64
  %311 = shl nuw nsw i64 %310, 3
  %312 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %311
  %313 = bitcast i8* %312 to i16*
  %314 = load i16, i16* %313, align 1
  %315 = tail call i16 @llvm.bswap.i16(i16 %314) #11
  %316 = icmp ugt i16 %315, 3
  %317 = icmp ne i16 %314, 768
  %318 = or i1 %317, %316
  br i1 %318, label %326, label %319

319:                                              ; preds = %305
  %320 = getelementptr inbounds i8, i8* %312, i64 2
  %321 = bitcast i8* %320 to i16*
  %322 = load i16, i16* %321, align 1
  %323 = tail call i16 @llvm.bswap.i16(i16 %322) #11
  %324 = icmp ugt i16 %323, 1
  %325 = icmp ne i16 %322, 256
  br i1 %324, label %327, label %329

326:                                              ; preds = %305
  br i1 %316, label %327, label %329

327:                                              ; preds = %326, %319
  %328 = add nsw i32 %309, -1
  br label %333

329:                                              ; preds = %326, %319
  %330 = phi i1 [ %317, %326 ], [ %325, %319 ]
  br i1 %330, label %331, label %337

331:                                              ; preds = %329
  %332 = add nuw nsw i32 %309, 1
  br label %333

333:                                              ; preds = %331, %327
  %334 = phi i32 [ %307, %327 ], [ %332, %331 ]
  %335 = phi i32 [ %328, %327 ], [ %306, %331 ]
  %336 = icmp sgt i32 %334, %335
  br i1 %336, label %340, label %305

337:                                              ; preds = %329
  %338 = zext i32 %309 to i64
  %339 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %338
  br label %340

340:                                              ; preds = %333, %337, %300
  %341 = phi %"struct.OT::EncodingRecord"* [ %339, %337 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %300 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %333 ]
  %342 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = shl nuw i32 %344, 24
  %346 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = shl nuw nsw i32 %348, 16
  %350 = or i32 %349, %345
  %351 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = shl nuw nsw i32 %353, 8
  %355 = or i32 %350, %354
  %356 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i32
  %359 = or i32 %355, %358
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %375, label %361

361:                                              ; preds = %340
  %362 = zext i8 %343 to i64
  %363 = shl nuw nsw i64 %362, 24
  %364 = zext i8 %347 to i64
  %365 = shl nuw nsw i64 %364, 16
  %366 = or i64 %365, %363
  %367 = zext i8 %352 to i64
  %368 = shl nuw nsw i64 %367, 8
  %369 = or i64 %366, %368
  %370 = zext i8 %357 to i64
  %371 = or i64 %369, %370
  %372 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %371
  %373 = bitcast i8* %372 to %"struct.OT::CmapSubtable"*
  %374 = icmp eq i8* %372, null
  br i1 %374, label %375, label %645

375:                                              ; preds = %340, %361
  br i1 %9, label %410, label %376

376:                                              ; preds = %375
  %377 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %378 = zext i16 %377 to i32
  %379 = add nsw i32 %378, -1
  br label %380

380:                                              ; preds = %403, %376
  %381 = phi i32 [ %379, %376 ], [ %405, %403 ]
  %382 = phi i32 [ 0, %376 ], [ %404, %403 ]
  %383 = add i32 %382, %381
  %384 = lshr i32 %383, 1
  %385 = zext i32 %384 to i64
  %386 = shl nuw nsw i64 %385, 3
  %387 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %386
  %388 = bitcast i8* %387 to i16*
  %389 = load i16, i16* %388, align 1
  %390 = icmp eq i16 %389, 0
  br i1 %390, label %391, label %397

391:                                              ; preds = %380
  %392 = getelementptr inbounds i8, i8* %387, i64 2
  %393 = bitcast i8* %392 to i16*
  %394 = load i16, i16* %393, align 1
  %395 = tail call i16 @llvm.bswap.i16(i16 %394) #11
  %396 = icmp ugt i16 %395, 3
  br i1 %396, label %397, label %399

397:                                              ; preds = %380, %391
  %398 = add nsw i32 %384, -1
  br label %403

399:                                              ; preds = %391
  %400 = icmp eq i16 %394, 768
  br i1 %400, label %407, label %401

401:                                              ; preds = %399
  %402 = add nuw nsw i32 %384, 1
  br label %403

403:                                              ; preds = %401, %397
  %404 = phi i32 [ %382, %397 ], [ %402, %401 ]
  %405 = phi i32 [ %398, %397 ], [ %381, %401 ]
  %406 = icmp sgt i32 %404, %405
  br i1 %406, label %410, label %380

407:                                              ; preds = %399
  %408 = zext i32 %384 to i64
  %409 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %408
  br label %410

410:                                              ; preds = %403, %407, %375
  %411 = phi %"struct.OT::EncodingRecord"* [ %409, %407 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %375 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %403 ]
  %412 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i32
  %415 = shl nuw i32 %414, 24
  %416 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i32
  %419 = shl nuw nsw i32 %418, 16
  %420 = or i32 %419, %415
  %421 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = shl nuw nsw i32 %423, 8
  %425 = or i32 %420, %424
  %426 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i32
  %429 = or i32 %425, %428
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %445, label %431

431:                                              ; preds = %410
  %432 = zext i8 %413 to i64
  %433 = shl nuw nsw i64 %432, 24
  %434 = zext i8 %417 to i64
  %435 = shl nuw nsw i64 %434, 16
  %436 = or i64 %435, %433
  %437 = zext i8 %422 to i64
  %438 = shl nuw nsw i64 %437, 8
  %439 = or i64 %436, %438
  %440 = zext i8 %427 to i64
  %441 = or i64 %439, %440
  %442 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %441
  %443 = bitcast i8* %442 to %"struct.OT::CmapSubtable"*
  %444 = icmp eq i8* %442, null
  br i1 %444, label %445, label %645

445:                                              ; preds = %410, %431
  br i1 %9, label %480, label %446

446:                                              ; preds = %445
  %447 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %448 = zext i16 %447 to i32
  %449 = add nsw i32 %448, -1
  br label %450

450:                                              ; preds = %473, %446
  %451 = phi i32 [ %449, %446 ], [ %475, %473 ]
  %452 = phi i32 [ 0, %446 ], [ %474, %473 ]
  %453 = add i32 %452, %451
  %454 = lshr i32 %453, 1
  %455 = zext i32 %454 to i64
  %456 = shl nuw nsw i64 %455, 3
  %457 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %456
  %458 = bitcast i8* %457 to i16*
  %459 = load i16, i16* %458, align 1
  %460 = icmp eq i16 %459, 0
  br i1 %460, label %461, label %467

461:                                              ; preds = %450
  %462 = getelementptr inbounds i8, i8* %457, i64 2
  %463 = bitcast i8* %462 to i16*
  %464 = load i16, i16* %463, align 1
  %465 = tail call i16 @llvm.bswap.i16(i16 %464) #11
  %466 = icmp ugt i16 %465, 2
  br i1 %466, label %467, label %469

467:                                              ; preds = %450, %461
  %468 = add nsw i32 %454, -1
  br label %473

469:                                              ; preds = %461
  %470 = icmp eq i16 %464, 512
  br i1 %470, label %477, label %471

471:                                              ; preds = %469
  %472 = add nuw nsw i32 %454, 1
  br label %473

473:                                              ; preds = %471, %467
  %474 = phi i32 [ %452, %467 ], [ %472, %471 ]
  %475 = phi i32 [ %468, %467 ], [ %451, %471 ]
  %476 = icmp sgt i32 %474, %475
  br i1 %476, label %480, label %450

477:                                              ; preds = %469
  %478 = zext i32 %454 to i64
  %479 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %478
  br label %480

480:                                              ; preds = %473, %477, %445
  %481 = phi %"struct.OT::EncodingRecord"* [ %479, %477 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %445 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %473 ]
  %482 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i32
  %485 = shl nuw i32 %484, 24
  %486 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = shl nuw nsw i32 %488, 16
  %490 = or i32 %489, %485
  %491 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = shl nuw nsw i32 %493, 8
  %495 = or i32 %490, %494
  %496 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %497 = load i8, i8* %496, align 1
  %498 = zext i8 %497 to i32
  %499 = or i32 %495, %498
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %515, label %501

501:                                              ; preds = %480
  %502 = zext i8 %483 to i64
  %503 = shl nuw nsw i64 %502, 24
  %504 = zext i8 %487 to i64
  %505 = shl nuw nsw i64 %504, 16
  %506 = or i64 %505, %503
  %507 = zext i8 %492 to i64
  %508 = shl nuw nsw i64 %507, 8
  %509 = or i64 %506, %508
  %510 = zext i8 %497 to i64
  %511 = or i64 %509, %510
  %512 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %511
  %513 = bitcast i8* %512 to %"struct.OT::CmapSubtable"*
  %514 = icmp eq i8* %512, null
  br i1 %514, label %515, label %645

515:                                              ; preds = %480, %501
  br i1 %9, label %550, label %516

516:                                              ; preds = %515
  %517 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %518 = zext i16 %517 to i32
  %519 = add nsw i32 %518, -1
  br label %520

520:                                              ; preds = %543, %516
  %521 = phi i32 [ %519, %516 ], [ %545, %543 ]
  %522 = phi i32 [ 0, %516 ], [ %544, %543 ]
  %523 = add i32 %522, %521
  %524 = lshr i32 %523, 1
  %525 = zext i32 %524 to i64
  %526 = shl nuw nsw i64 %525, 3
  %527 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %526
  %528 = bitcast i8* %527 to i16*
  %529 = load i16, i16* %528, align 1
  %530 = icmp eq i16 %529, 0
  br i1 %530, label %531, label %537

531:                                              ; preds = %520
  %532 = getelementptr inbounds i8, i8* %527, i64 2
  %533 = bitcast i8* %532 to i16*
  %534 = load i16, i16* %533, align 1
  %535 = tail call i16 @llvm.bswap.i16(i16 %534) #11
  %536 = icmp ugt i16 %535, 1
  br i1 %536, label %537, label %539

537:                                              ; preds = %520, %531
  %538 = add nsw i32 %524, -1
  br label %543

539:                                              ; preds = %531
  %540 = icmp eq i16 %534, 256
  br i1 %540, label %547, label %541

541:                                              ; preds = %539
  %542 = add nuw nsw i32 %524, 1
  br label %543

543:                                              ; preds = %541, %537
  %544 = phi i32 [ %522, %537 ], [ %542, %541 ]
  %545 = phi i32 [ %538, %537 ], [ %521, %541 ]
  %546 = icmp sgt i32 %544, %545
  br i1 %546, label %550, label %520

547:                                              ; preds = %539
  %548 = zext i32 %524 to i64
  %549 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %548
  br label %550

550:                                              ; preds = %543, %547, %515
  %551 = phi %"struct.OT::EncodingRecord"* [ %549, %547 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %515 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %543 ]
  %552 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %553 = load i8, i8* %552, align 1
  %554 = zext i8 %553 to i32
  %555 = shl nuw i32 %554, 24
  %556 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %557 = load i8, i8* %556, align 1
  %558 = zext i8 %557 to i32
  %559 = shl nuw nsw i32 %558, 16
  %560 = or i32 %559, %555
  %561 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %562 = load i8, i8* %561, align 1
  %563 = zext i8 %562 to i32
  %564 = shl nuw nsw i32 %563, 8
  %565 = or i32 %560, %564
  %566 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %551, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %567 = load i8, i8* %566, align 1
  %568 = zext i8 %567 to i32
  %569 = or i32 %565, %568
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %585, label %571

571:                                              ; preds = %550
  %572 = zext i8 %553 to i64
  %573 = shl nuw nsw i64 %572, 24
  %574 = zext i8 %557 to i64
  %575 = shl nuw nsw i64 %574, 16
  %576 = or i64 %575, %573
  %577 = zext i8 %562 to i64
  %578 = shl nuw nsw i64 %577, 8
  %579 = or i64 %576, %578
  %580 = zext i8 %567 to i64
  %581 = or i64 %579, %580
  %582 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %581
  %583 = bitcast i8* %582 to %"struct.OT::CmapSubtable"*
  %584 = icmp eq i8* %582, null
  br i1 %584, label %585, label %645

585:                                              ; preds = %550, %571
  br i1 %9, label %609, label %586

586:                                              ; preds = %585
  %587 = tail call i16 @llvm.bswap.i16(i16 %8) #11
  %588 = zext i16 %587 to i32
  br label %589

589:                                              ; preds = %604, %586
  %590 = phi i32 [ %588, %586 ], [ %592, %604 ]
  %591 = add nsw i32 %590, -1
  %592 = lshr i32 %591, 1
  %593 = zext i32 %592 to i64
  %594 = shl nuw nsw i64 %593, 3
  %595 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %594
  %596 = bitcast i8* %595 to i16*
  %597 = load i16, i16* %596, align 1
  %598 = icmp eq i16 %597, 0
  br i1 %598, label %599, label %604

599:                                              ; preds = %589
  %600 = getelementptr inbounds i8, i8* %595, i64 2
  %601 = bitcast i8* %600 to i16*
  %602 = load i16, i16* %601, align 1
  %603 = icmp eq i16 %602, 0
  br i1 %603, label %606, label %604

604:                                              ; preds = %589, %599
  %605 = icmp eq i32 %592, 0
  br i1 %605, label %609, label %589

606:                                              ; preds = %599
  %607 = zext i32 %592 to i64
  %608 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 1, i32 0, i32 1, i64 %607
  br label %609

609:                                              ; preds = %604, %606, %585
  %610 = phi %"struct.OT::EncodingRecord"* [ %608, %606 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %585 ], [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::EncodingRecord"*), %604 ]
  %611 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 0
  %612 = load i8, i8* %611, align 1
  %613 = zext i8 %612 to i32
  %614 = shl nuw i32 %613, 24
  %615 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = shl nuw nsw i32 %617, 16
  %619 = or i32 %618, %614
  %620 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %621 = load i8, i8* %620, align 1
  %622 = zext i8 %621 to i32
  %623 = shl nuw nsw i32 %622, 8
  %624 = or i32 %619, %623
  %625 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %610, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %626 = load i8, i8* %625, align 1
  %627 = zext i8 %626 to i32
  %628 = or i32 %624, %627
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %644, label %630

630:                                              ; preds = %609
  %631 = zext i8 %612 to i64
  %632 = shl nuw nsw i64 %631, 24
  %633 = zext i8 %616 to i64
  %634 = shl nuw nsw i64 %633, 16
  %635 = or i64 %634, %632
  %636 = zext i8 %621 to i64
  %637 = shl nuw nsw i64 %636, 8
  %638 = or i64 %635, %637
  %639 = zext i8 %626 to i64
  %640 = or i64 %638, %639
  %641 = getelementptr inbounds %"struct.OT::cmap", %"struct.OT::cmap"* %0, i64 0, i32 0, i32 0, i32 0, i64 %640
  %642 = bitcast i8* %641 to %"struct.OT::CmapSubtable"*
  %643 = icmp eq i8* %641, null
  br i1 %643, label %644, label %645

644:                                              ; preds = %609, %630
  br label %645

645:                                              ; preds = %630, %571, %501, %431, %361, %286, %216, %146, %83, %84, %644
  %646 = phi %"struct.OT::CmapSubtable"* [ bitcast ([48 x i64]* @_hb_NullPool to %"struct.OT::CmapSubtable"*), %644 ], [ %81, %84 ], [ %81, %83 ], [ %158, %146 ], [ %228, %216 ], [ %298, %286 ], [ %373, %361 ], [ %443, %431 ], [ %513, %501 ], [ %583, %571 ], [ %642, %630 ]
  ret %"struct.OT::CmapSubtable"* %646
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT4cmap13accelerator_t21get_glyph_from_symbolINS_12CmapSubtableEEEbPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtable"*
  %5 = tail call zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"* %4, i32 %1, i32* %2)
  br i1 %5, label %11, label %6, !prof !4

6:                                                ; preds = %3
  %7 = icmp ult i32 %1, 256
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = add nuw nsw i32 %1, 61440
  %10 = tail call zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"* %4, i32 %9, i32* %2)
  br label %11

11:                                               ; preds = %6, %3, %8
  %12 = phi i1 [ %10, %8 ], [ true, %3 ], [ false, %6 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_12CmapSubtableEEEbPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtable"*
  %5 = tail call zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"* %4, i32 %1, i32* %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT4cmap13accelerator_t14get_glyph_fromINS_20CmapSubtableFormat12EEEbPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtableLongSegmented"*
  %5 = tail call zeroext i1 @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj(%"struct.OT::CmapSubtableLongSegmented"* %4, i32 %1, i32* %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2OT19CmapSubtableFormat413accelerator_t14get_glyph_funcEPKvjPj(i8*, i32, i32*) #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.OT::CmapSubtableFormat4::accelerator_t"*
  %5 = tail call zeroext i1 @_ZNK2OT19CmapSubtableFormat413accelerator_t9get_glyphEjPj(%"struct.OT::CmapSubtableFormat4::accelerator_t"* %4, i32 %1, i32* %2)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.hb_blob_t* @_ZN21hb_sanitize_context_t13sanitize_blobIN2OT4cmapEEEP9hb_blob_tS4_(%struct.hb_sanitize_context_t*, %struct.hb_blob_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::cmap"*, align 8
  %4 = alloca %"struct.OT::cmap"*, align 8
  %5 = tail call %struct.hb_blob_t* @hb_blob_reference(%struct.hb_blob_t* %1) #11
  %6 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 9
  store %struct.hb_blob_t* %5, %struct.hb_blob_t** %6, align 8
  %7 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 8
  %12 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %0, i64 0, i32 0, i32 0
  %13 = bitcast %"struct.OT::cmap"** %4 to i8*
  %14 = bitcast %"struct.OT::cmap"** %4 to i8**
  %15 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %1, i64 0, i32 2
  br label %16

16:                                               ; preds = %93, %2
  %17 = phi %struct.hb_blob_t* [ %5, %2 ], [ %99, %93 ]
  %18 = phi i8 [ 0, %2 ], [ 1, %93 ]
  store i8 %18, i8* %7, align 8
  %19 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %8, align 8
  %21 = getelementptr inbounds %struct.hb_blob_t, %struct.hb_blob_t* %17, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  store i8* %24, i8** %9, align 8
  %25 = icmp ugt i32 %22, 67108862
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %16
  %27 = shl i32 %22, 6
  %28 = icmp ugt i32 %27, 16384
  %29 = select i1 %28, i32 %27, i32 16384
  %30 = icmp ult i32 %29, 1073741823
  %31 = select i1 %30, i32 %29, i32 1073741823
  br label %32

32:                                               ; preds = %16, %26
  %33 = phi i32 [ %31, %26 ], [ 1073741823, %16 ]
  store i32 %33, i32* %10, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 8
  %34 = icmp eq i8* %20, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %32
  call void @hb_blob_destroy(%struct.hb_blob_t* %17) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %36 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  br label %114

37:                                               ; preds = %32
  %38 = icmp ult i32 %22, 4
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  br label %108

40:                                               ; preds = %37
  %41 = add nsw i32 %33, -4
  store i32 %41, i32* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %42 = bitcast i8* %20 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %108, !prof !4

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8, i8* %20, i64 2
  %47 = bitcast i8* %46 to %"struct.OT::ArrayOf.330"*
  store i8* %20, i8** %14, align 8
  %48 = call zeroext i1 @_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.330"* %47, %struct.hb_sanitize_context_t* %0, %"struct.OT::cmap"** nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  %49 = load i32, i32* %11, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %48, label %51, label %89

51:                                               ; preds = %45
  %52 = bitcast i8* %20 to i16*
  %53 = bitcast i8* %46 to %"struct.OT::ArrayOf.330"*
  br i1 %50, label %54, label %100

54:                                               ; preds = %51
  store i32 0, i32* %11, align 4
  %55 = load i8*, i8** %8, align 8
  %56 = icmp ugt i8* %55, %20
  br i1 %56, label %66, label %57, !prof !2

57:                                               ; preds = %54
  %58 = load i8*, i8** %9, align 8
  %59 = icmp ult i8* %58, %20
  br i1 %59, label %66, label %60, !prof !2

60:                                               ; preds = %57
  %61 = ptrtoint i8* %58 to i64
  %62 = ptrtoint i8* %20 to i64
  %63 = sub i64 %61, %62
  %64 = trunc i64 %63 to i32
  %65 = icmp ult i32 %64, 4
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %60, %57, %54
  %67 = bitcast %"struct.OT::cmap"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  br label %82

68:                                               ; preds = %60
  %69 = load i32, i32* %10, align 8
  %70 = add i32 %69, -4
  store i32 %70, i32* %10, align 8
  %71 = icmp sgt i32 %70, 0
  %72 = bitcast %"struct.OT::cmap"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  br i1 %71, label %73, label %82

73:                                               ; preds = %68
  %74 = load i16, i16* %52, align 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %82, !prof !4

76:                                               ; preds = %73
  %77 = bitcast %"struct.OT::cmap"** %3 to i8**
  store i8* %20, i8** %77, align 8
  %78 = call zeroext i1 @_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.330"* %53, %struct.hb_sanitize_context_t* %0, %"struct.OT::cmap"** nonnull dereferenceable(8) %3) #11
  %79 = xor i1 %78, true
  %80 = load i32, i32* %11, align 4
  %81 = icmp ne i32 %80, 0
  br label %82

82:                                               ; preds = %66, %68, %73, %76
  %83 = phi i1 [ false, %73 ], [ false, %68 ], [ %81, %76 ], [ false, %66 ]
  %84 = phi i8* [ %72, %73 ], [ %72, %68 ], [ %72, %76 ], [ %67, %66 ]
  %85 = phi i1 [ true, %73 ], [ true, %68 ], [ %79, %76 ], [ true, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %86 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %86) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %87 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #11
  %88 = or i1 %85, %83
  br i1 %88, label %112, label %103

89:                                               ; preds = %45
  br i1 %50, label %90, label %106

90:                                               ; preds = %89
  %91 = load i8, i8* %7, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %104

93:                                               ; preds = %90
  %94 = call i8* @hb_blob_get_data_writable(%struct.hb_blob_t* %1, i32* null) #11
  store i8* %94, i8** %8, align 8
  %95 = load i32, i32* %15, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  store i8* %97, i8** %9, align 8
  %98 = icmp eq i8* %94, null
  %99 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br i1 %98, label %109, label %16

100:                                              ; preds = %51
  %101 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  call void @hb_blob_destroy(%struct.hb_blob_t* %101) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %102 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  br label %103

103:                                              ; preds = %82, %100
  call void @hb_blob_make_immutable(%struct.hb_blob_t* %1) #11
  br label %114

104:                                              ; preds = %90
  %105 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %109

106:                                              ; preds = %89
  %107 = load %struct.hb_blob_t*, %struct.hb_blob_t** %6, align 8
  br label %109

108:                                              ; preds = %40, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %109

109:                                              ; preds = %93, %104, %106, %108
  %110 = phi %struct.hb_blob_t* [ %17, %108 ], [ %107, %106 ], [ %105, %104 ], [ %99, %93 ]
  call void @hb_blob_destroy(%struct.hb_blob_t* %110) #11
  store %struct.hb_blob_t* null, %struct.hb_blob_t** %6, align 8
  %111 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #11
  br label %112

112:                                              ; preds = %109, %82
  call void @hb_blob_destroy(%struct.hb_blob_t* %1) #11
  %113 = call %struct.hb_blob_t* @hb_blob_get_empty() #11
  br label %114

114:                                              ; preds = %112, %103, %35
  %115 = phi %struct.hb_blob_t* [ %1, %35 ], [ %113, %112 ], [ %1, %103 ]
  ret %struct.hb_blob_t* %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_14EncodingRecordENS_7IntTypeItLj2EEEE8sanitizeIJPKNS_4cmapEEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.330"*, %struct.hb_sanitize_context_t*, %"struct.OT::cmap"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %138, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %138, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.330"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %138, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -2
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %138, !prof !83

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 1, i64 0
  %25 = bitcast %"struct.OT::ArrayOf.330"* %0 to i16*
  %26 = load i16, i16* %25, align 1
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #11
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %24, i64 0, i32 0, i32 0, i32 0, i64 0
  %30 = shl nuw nsw i32 %28, 3
  %31 = icmp eq i16 %26, 0
  br i1 %31, label %138, label %32

32:                                               ; preds = %23
  %33 = icmp ugt i8* %6, %29
  %34 = icmp ult i8* %10, %29
  %35 = or i1 %33, %34
  br i1 %35, label %138, label %36, !prof !7

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.OT::EncodingRecord"* %24 to i64
  %38 = sub i64 %13, %37
  %39 = trunc i64 %38 to i32
  %40 = icmp ugt i32 %30, %39
  br i1 %40, label %138, label %41, !prof !2

41:                                               ; preds = %36
  %42 = sub nsw i32 %21, %30
  store i32 %42, i32* %19, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %138, !prof !4

44:                                               ; preds = %41
  %45 = load i16, i16* %25, align 1
  %46 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %47 = icmp eq i16 %45, 0
  br i1 %47, label %138, label %48

48:                                               ; preds = %44
  %49 = tail call i16 @llvm.bswap.i16(i16 %45) #11
  %50 = bitcast %"struct.OT::cmap"** %2 to i8**
  %51 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %52 = zext i16 %49 to i64
  %53 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %53, i64 0, i32 0, i32 0, i32 0, i64 0
  %55 = icmp ugt i8* %6, %54
  br i1 %55, label %138, label %56, !prof !2

56:                                               ; preds = %48, %133
  %57 = phi i8* [ %136, %133 ], [ %54, %48 ]
  %58 = phi %"struct.OT::EncodingRecord"* [ %135, %133 ], [ %53, %48 ]
  %59 = phi i64 [ %131, %133 ], [ 0, %48 ]
  %60 = phi i8* [ %134, %133 ], [ %6, %48 ]
  %61 = load i8*, i8** %50, align 8
  %62 = load i8*, i8** %9, align 8
  %63 = icmp ult i8* %62, %57
  br i1 %63, label %138, label %64, !prof !2

64:                                               ; preds = %56
  %65 = ptrtoint i8* %62 to i64
  %66 = ptrtoint %"struct.OT::EncodingRecord"* %58 to i64
  %67 = sub i64 %65, %66
  %68 = trunc i64 %67 to i32
  %69 = icmp ult i32 %68, 8
  br i1 %69, label %138, label %70, !prof !2

70:                                               ; preds = %64
  %71 = load i32, i32* %19, align 8
  %72 = add i32 %71, -8
  store i32 %72, i32* %19, align 8
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %138, !prof !83

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 1, i64 %59, i32 2
  %76 = getelementptr inbounds %"struct.OT::OffsetTo.331", %"struct.OT::OffsetTo.331"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %77 = icmp ugt i8* %60, %76
  %78 = icmp ult i8* %62, %76
  %79 = or i1 %77, %78
  br i1 %79, label %138, label %80, !prof !7

80:                                               ; preds = %74
  %81 = ptrtoint %"struct.OT::OffsetTo.331"* %75 to i64
  %82 = sub i64 %65, %81
  %83 = trunc i64 %82 to i32
  %84 = icmp ult i32 %83, 4
  br i1 %84, label %138, label %85, !prof !2

85:                                               ; preds = %80
  %86 = add i32 %71, -12
  store i32 %86, i32* %19, align 8
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %138, !prof !83

88:                                               ; preds = %85
  %89 = load i8, i8* %76, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw i32 %90, 24
  %92 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 1, i64 %59, i32 2, i32 0, i32 0, i32 0, i32 0, i64 1
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 16
  %96 = or i32 %95, %91
  %97 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 1, i64 %59, i32 2, i32 0, i32 0, i32 0, i32 0, i64 2
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw nsw i32 %99, 8
  %101 = or i32 %96, %100
  %102 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 1, i64 %59, i32 2, i32 0, i32 0, i32 0, i32 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = or i32 %101, %104
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %130, label %107

107:                                              ; preds = %88
  %108 = zext i8 %89 to i64
  %109 = shl nuw nsw i64 %108, 24
  %110 = zext i8 %93 to i64
  %111 = shl nuw nsw i64 %110, 16
  %112 = or i64 %111, %109
  %113 = zext i8 %98 to i64
  %114 = shl nuw nsw i64 %113, 8
  %115 = or i64 %112, %114
  %116 = zext i8 %103 to i64
  %117 = or i64 %115, %116
  %118 = getelementptr inbounds i8, i8* %61, i64 %117
  %119 = bitcast i8* %118 to %"struct.OT::CmapSubtable"*
  %120 = tail call zeroext i1 @_ZNK2OT12CmapSubtable8sanitizeEP21hb_sanitize_context_t(%"struct.OT::CmapSubtable"* %119, %struct.hb_sanitize_context_t* %1) #11
  br i1 %120, label %130, label %121

121:                                              ; preds = %107
  %122 = load i32, i32* %46, align 4
  %123 = icmp ugt i32 %122, 31
  br i1 %123, label %138, label %124, !prof !88

124:                                              ; preds = %121
  %125 = add nuw nsw i32 %122, 1
  store i32 %125, i32* %46, align 4
  %126 = load i8, i8* %51, align 8, !range !3
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %138, label %128, !prof !88

128:                                              ; preds = %124
  %129 = bitcast %"struct.OT::OffsetTo.331"* %75 to i32*
  store i32 0, i32* %129, align 1
  br label %130

130:                                              ; preds = %88, %107, %128
  %131 = add nuw nsw i64 %59, 1
  %132 = icmp ult i64 %131, %52
  br i1 %132, label %133, label %138

133:                                              ; preds = %130
  %134 = load i8*, i8** %5, align 8
  %135 = getelementptr inbounds %"struct.OT::ArrayOf.330", %"struct.OT::ArrayOf.330"* %0, i64 0, i32 1, i64 %131
  %136 = getelementptr inbounds %"struct.OT::EncodingRecord", %"struct.OT::EncodingRecord"* %135, i64 0, i32 0, i32 0, i32 0, i64 0
  %137 = icmp ugt i8* %134, %136
  br i1 %137, label %138, label %56, !prof !2

138:                                              ; preds = %121, %124, %74, %80, %85, %133, %56, %64, %70, %130, %48, %23, %44, %32, %36, %3, %8, %12, %18, %41
  %139 = phi i1 [ false, %41 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %36 ], [ false, %32 ], [ true, %44 ], [ true, %23 ], [ false, %48 ], [ true, %130 ], [ false, %70 ], [ false, %64 ], [ false, %56 ], [ false, %133 ], [ false, %85 ], [ false, %80 ], [ false, %74 ], [ false, %124 ], [ false, %121 ]
  ret i1 %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT12CmapSubtable8sanitizeEP21hb_sanitize_context_t(%"struct.OT::CmapSubtable"*, %struct.hb_sanitize_context_t*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.OT::CmapSubtableFormat14"*, align 8
  %4 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %302, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %302, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::CmapSubtable"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 2
  br i1 %17, label %302, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -2
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %302

23:                                               ; preds = %18
  %24 = bitcast %"struct.OT::CmapSubtable"* %0 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #11
  switch i16 %26, label %302 [
    i16 0, label %27
    i16 4, label %32
    i16 6, label %77
    i16 10, label %118
    i16 12, label %174
    i16 13, label %230
    i16 14, label %286
  ]

27:                                               ; preds = %23
  %28 = icmp ult i32 %16, 262
  br i1 %28, label %302, label %29, !prof !2

29:                                               ; preds = %27
  %30 = add i32 %20, -264
  store i32 %30, i32* %19, align 8
  %31 = icmp sgt i32 %30, 0
  br label %302

32:                                               ; preds = %23
  %33 = icmp ult i32 %16, 14
  br i1 %33, label %302, label %34, !prof !2

34:                                               ; preds = %32
  %35 = add i32 %20, -16
  store i32 %35, i32* %19, align 8
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %302, !prof !4

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"struct.OT::IntType.0"* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = tail call i16 @llvm.bswap.i16(i16 %40) #11
  %42 = zext i16 %41 to i32
  %43 = icmp eq i16 %40, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %37
  %45 = icmp ult i32 %16, %42
  br i1 %45, label %51, label %46, !prof !2

46:                                               ; preds = %44
  %47 = sub nsw i32 %35, %42
  store i32 %47, i32* %19, align 8
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %51, !prof !4

49:                                               ; preds = %46
  %50 = load i16, i16* %39, align 1
  br label %65

51:                                               ; preds = %46, %44
  %52 = icmp ult i64 %15, 65535
  %53 = select i1 %52, i64 %15, i64 65535
  %54 = trunc i64 %53 to i16
  %55 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %56 = load i32, i32* %55, align 4
  %57 = icmp ugt i32 %56, 31
  br i1 %57, label %302, label %58

58:                                               ; preds = %51
  %59 = add nuw nsw i32 %56, 1
  store i32 %59, i32* %55, align 4
  %60 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %302, label %63

63:                                               ; preds = %58
  %64 = tail call i16 @llvm.bswap.i16(i16 %54) #11
  store i16 %64, i16* %39, align 1
  br label %65

65:                                               ; preds = %63, %49, %37
  %66 = phi i16 [ %50, %49 ], [ 0, %37 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %68 = bitcast [256 x %"struct.OT::IntType.14"]* %67 to i16*
  %69 = load i16, i16* %68, align 1
  %70 = tail call i16 @llvm.bswap.i16(i16 %69) #11
  %71 = zext i16 %70 to i32
  %72 = shl nuw nsw i32 %71, 2
  %73 = add nuw nsw i32 %72, 16
  %74 = tail call i16 @llvm.bswap.i16(i16 %66) #11
  %75 = zext i16 %74 to i32
  %76 = icmp ule i32 %73, %75
  br label %302

77:                                               ; preds = %23
  %78 = icmp ult i32 %16, 10
  br i1 %78, label %302, label %79, !prof !2

79:                                               ; preds = %77
  %80 = add i32 %20, -12
  store i32 %80, i32* %19, align 8
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %302

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 2
  %84 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %83, i64 0, i32 0, i32 0
  %85 = icmp ugt i8* %6, %84
  %86 = icmp ult i8* %10, %84
  %87 = or i1 %85, %86
  br i1 %87, label %302, label %88, !prof !7

88:                                               ; preds = %82
  %89 = ptrtoint %"struct.OT::IntType.14"* %83 to i64
  %90 = sub i64 %13, %89
  %91 = trunc i64 %90 to i32
  %92 = icmp ult i32 %91, 2
  br i1 %92, label %302, label %93, !prof !2

93:                                               ; preds = %88
  %94 = add i32 %20, -14
  store i32 %94, i32* %19, align 8
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %302, !prof !83

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 4
  %98 = bitcast %"struct.OT::IntType.14"* %83 to i16*
  %99 = load i16, i16* %98, align 1
  %100 = tail call i16 @llvm.bswap.i16(i16 %99) #11
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %97, i64 0, i32 0, i32 0
  %103 = shl nuw nsw i32 %101, 1
  %104 = icmp eq i16 %99, 0
  br i1 %104, label %117, label %105

105:                                              ; preds = %96
  %106 = icmp ugt i8* %6, %102
  %107 = icmp ult i8* %10, %102
  %108 = or i1 %106, %107
  br i1 %108, label %302, label %109, !prof !7

109:                                              ; preds = %105
  %110 = ptrtoint %"struct.OT::IntType.14"* %97 to i64
  %111 = sub i64 %13, %110
  %112 = trunc i64 %111 to i32
  %113 = icmp ugt i32 %103, %112
  br i1 %113, label %302, label %114, !prof !2

114:                                              ; preds = %109
  %115 = sub nsw i32 %94, %103
  store i32 %115, i32* %19, align 8
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %117, label %302, !prof !4

117:                                              ; preds = %114, %96
  br label %302

118:                                              ; preds = %23
  %119 = icmp ult i32 %16, 20
  br i1 %119, label %302, label %120, !prof !2

120:                                              ; preds = %118
  %121 = add i32 %20, -22
  store i32 %121, i32* %19, align 8
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %302

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10
  %125 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %124, i64 0, i32 0, i32 0
  %126 = icmp ugt i8* %6, %125
  %127 = icmp ult i8* %10, %125
  %128 = or i1 %126, %127
  br i1 %128, label %302, label %129, !prof !7

129:                                              ; preds = %123
  %130 = ptrtoint %"struct.OT::IntType.14"* %124 to i64
  %131 = sub i64 %13, %130
  %132 = trunc i64 %131 to i32
  %133 = icmp ult i32 %132, 4
  br i1 %133, label %302, label %134, !prof !2

134:                                              ; preds = %129
  %135 = add i32 %20, -26
  store i32 %135, i32* %19, align 8
  %136 = icmp sgt i32 %135, 0
  br i1 %136, label %137, label %302, !prof !83

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 14
  %139 = load i8, i8* %125, align 1
  %140 = zext i8 %139 to i32
  %141 = shl nuw i32 %140, 24
  %142 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 11, i32 0, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = shl nuw nsw i32 %144, 16
  %146 = or i32 %145, %141
  %147 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 12, i32 0, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = shl nuw nsw i32 %149, 8
  %151 = or i32 %146, %150
  %152 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 13, i32 0, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = or i32 %151, %154
  %156 = icmp ult i32 %155, 2147483647
  br i1 %156, label %157, label %302, !prof !83

157:                                              ; preds = %137
  %158 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %138, i64 0, i32 0, i32 0
  %159 = shl i32 %155, 1
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %173, label %161

161:                                              ; preds = %157
  %162 = icmp ugt i8* %6, %158
  %163 = icmp ult i8* %10, %158
  %164 = or i1 %162, %163
  br i1 %164, label %302, label %165, !prof !7

165:                                              ; preds = %161
  %166 = ptrtoint %"struct.OT::IntType.14"* %138 to i64
  %167 = sub i64 %13, %166
  %168 = trunc i64 %167 to i32
  %169 = icmp ugt i32 %159, %168
  br i1 %169, label %302, label %170, !prof !2

170:                                              ; preds = %165
  %171 = sub i32 %135, %159
  store i32 %171, i32* %19, align 8
  %172 = icmp sgt i32 %171, 0
  br i1 %172, label %173, label %302, !prof !4

173:                                              ; preds = %170, %157
  br label %302

174:                                              ; preds = %23
  %175 = icmp ult i32 %16, 16
  br i1 %175, label %302, label %176, !prof !2

176:                                              ; preds = %174
  %177 = add i32 %20, -18
  store i32 %177, i32* %19, align 8
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %302

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6
  %181 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %180, i64 0, i32 0, i32 0
  %182 = icmp ugt i8* %6, %181
  %183 = icmp ult i8* %10, %181
  %184 = or i1 %182, %183
  br i1 %184, label %302, label %185, !prof !7

185:                                              ; preds = %179
  %186 = ptrtoint %"struct.OT::IntType.14"* %180 to i64
  %187 = sub i64 %13, %186
  %188 = trunc i64 %187 to i32
  %189 = icmp ult i32 %188, 4
  br i1 %189, label %302, label %190, !prof !2

190:                                              ; preds = %185
  %191 = add i32 %20, -22
  store i32 %191, i32* %19, align 8
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %302, !prof !83

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10
  %195 = load i8, i8* %181, align 1
  %196 = zext i8 %195 to i32
  %197 = shl nuw i32 %196, 24
  %198 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = shl nuw nsw i32 %200, 16
  %202 = or i32 %201, %197
  %203 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = shl nuw nsw i32 %205, 8
  %207 = or i32 %202, %206
  %208 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = or i32 %207, %210
  %212 = icmp ult i32 %211, 357913941
  br i1 %212, label %213, label %302, !prof !83

213:                                              ; preds = %193
  %214 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %194, i64 0, i32 0, i32 0
  %215 = mul i32 %211, 12
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %229, label %217

217:                                              ; preds = %213
  %218 = icmp ugt i8* %6, %214
  %219 = icmp ult i8* %10, %214
  %220 = or i1 %218, %219
  br i1 %220, label %302, label %221, !prof !7

221:                                              ; preds = %217
  %222 = ptrtoint %"struct.OT::IntType.14"* %194 to i64
  %223 = sub i64 %13, %222
  %224 = trunc i64 %223 to i32
  %225 = icmp ugt i32 %215, %224
  br i1 %225, label %302, label %226, !prof !2

226:                                              ; preds = %221
  %227 = sub i32 %191, %215
  store i32 %227, i32* %19, align 8
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %302, !prof !4

229:                                              ; preds = %226, %213
  br label %302

230:                                              ; preds = %23
  %231 = icmp ult i32 %16, 16
  br i1 %231, label %302, label %232, !prof !2

232:                                              ; preds = %230
  %233 = add i32 %20, -18
  store i32 %233, i32* %19, align 8
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %302

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6
  %237 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %236, i64 0, i32 0, i32 0
  %238 = icmp ugt i8* %6, %237
  %239 = icmp ult i8* %10, %237
  %240 = or i1 %238, %239
  br i1 %240, label %302, label %241, !prof !7

241:                                              ; preds = %235
  %242 = ptrtoint %"struct.OT::IntType.14"* %236 to i64
  %243 = sub i64 %13, %242
  %244 = trunc i64 %243 to i32
  %245 = icmp ult i32 %244, 4
  br i1 %245, label %302, label %246, !prof !2

246:                                              ; preds = %241
  %247 = add i32 %20, -22
  store i32 %247, i32* %19, align 8
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %302, !prof !83

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10
  %251 = load i8, i8* %237, align 1
  %252 = zext i8 %251 to i32
  %253 = shl nuw i32 %252, 24
  %254 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = shl nuw nsw i32 %256, 16
  %258 = or i32 %257, %253
  %259 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = shl nuw nsw i32 %261, 8
  %263 = or i32 %258, %262
  %264 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = or i32 %263, %266
  %268 = icmp ult i32 %267, 357913941
  br i1 %268, label %269, label %302, !prof !83

269:                                              ; preds = %249
  %270 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %250, i64 0, i32 0, i32 0
  %271 = mul i32 %267, 12
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %285, label %273

273:                                              ; preds = %269
  %274 = icmp ugt i8* %6, %270
  %275 = icmp ult i8* %10, %270
  %276 = or i1 %274, %275
  br i1 %276, label %302, label %277, !prof !7

277:                                              ; preds = %273
  %278 = ptrtoint %"struct.OT::IntType.14"* %250 to i64
  %279 = sub i64 %13, %278
  %280 = trunc i64 %279 to i32
  %281 = icmp ugt i32 %271, %280
  br i1 %281, label %302, label %282, !prof !2

282:                                              ; preds = %277
  %283 = sub i32 %247, %271
  store i32 %283, i32* %19, align 8
  %284 = icmp sgt i32 %283, 0
  br i1 %284, label %285, label %302, !prof !4

285:                                              ; preds = %282, %269
  br label %302

286:                                              ; preds = %23
  %287 = icmp ult i32 %16, 10
  br i1 %287, label %288, label %290, !prof !2

288:                                              ; preds = %286
  %289 = bitcast %"struct.OT::CmapSubtableFormat14"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #11
  br label %299

290:                                              ; preds = %286
  %291 = add i32 %20, -12
  store i32 %291, i32* %19, align 8
  %292 = icmp sgt i32 %291, 0
  %293 = bitcast %"struct.OT::CmapSubtableFormat14"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #11
  br i1 %292, label %294, label %299

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %296 = bitcast [256 x %"struct.OT::IntType.14"]* %295 to %"struct.OT::ArrayOf.23"*
  %297 = bitcast %"struct.OT::CmapSubtableFormat14"** %3 to %"struct.OT::CmapSubtable"**
  store %"struct.OT::CmapSubtable"* %0, %"struct.OT::CmapSubtable"** %297, align 8
  %298 = call zeroext i1 @_ZNK2OT7ArrayOfINS_23VariationSelectorRecordENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_20CmapSubtableFormat14EEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.23"* %296, %struct.hb_sanitize_context_t* %1, %"struct.OT::CmapSubtableFormat14"** nonnull dereferenceable(8) %3) #11
  br label %299

299:                                              ; preds = %288, %290, %294
  %300 = phi i8* [ %293, %290 ], [ %293, %294 ], [ %289, %288 ]
  %301 = phi i1 [ false, %290 ], [ %298, %294 ], [ false, %288 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #11
  br label %302

302:                                              ; preds = %232, %230, %235, %241, %246, %249, %273, %277, %282, %285, %176, %174, %179, %185, %190, %193, %217, %221, %226, %229, %120, %118, %123, %129, %134, %137, %161, %165, %170, %173, %117, %114, %109, %105, %93, %88, %82, %79, %77, %65, %58, %51, %34, %32, %29, %27, %2, %8, %12, %23, %18, %299
  %303 = phi i1 [ %301, %299 ], [ false, %18 ], [ true, %23 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ false, %27 ], [ %31, %29 ], [ %76, %65 ], [ false, %34 ], [ false, %32 ], [ false, %58 ], [ false, %51 ], [ false, %79 ], [ false, %77 ], [ true, %117 ], [ false, %114 ], [ false, %93 ], [ false, %88 ], [ false, %82 ], [ false, %109 ], [ false, %105 ], [ false, %120 ], [ false, %118 ], [ true, %173 ], [ false, %170 ], [ false, %134 ], [ false, %129 ], [ false, %123 ], [ false, %137 ], [ false, %165 ], [ false, %161 ], [ false, %176 ], [ false, %174 ], [ true, %229 ], [ false, %226 ], [ false, %190 ], [ false, %185 ], [ false, %179 ], [ false, %193 ], [ false, %221 ], [ false, %217 ], [ false, %232 ], [ false, %230 ], [ true, %285 ], [ false, %282 ], [ false, %246 ], [ false, %241 ], [ false, %235 ], [ false, %249 ], [ false, %277 ], [ false, %273 ]
  ret i1 %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT7ArrayOfINS_23VariationSelectorRecordENS_7IntTypeIjLj4EEEE8sanitizeIJPKNS_20CmapSubtableFormat14EEEEbP21hb_sanitize_context_tDpOT_(%"struct.OT::ArrayOf.23"*, %struct.hb_sanitize_context_t*, %"struct.OT::CmapSubtableFormat14"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %114, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %114, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::ArrayOf.23"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %114, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %114, !prof !83

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 1, i64 0
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = shl nuw i32 %26, 24
  %28 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 16
  %32 = or i32 %31, %27
  %33 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = or i32 %37, %40
  %42 = icmp ult i32 %41, 390451572
  br i1 %42, label %43, label %114, !prof !83

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %24, i64 0, i32 0, i32 0, i32 0, i64 0
  %45 = mul i32 %41, 11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = icmp ugt i8* %6, %44
  %49 = icmp ult i8* %10, %44
  %50 = or i1 %48, %49
  br i1 %50, label %114, label %51, !prof !7

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.OT::VariationSelectorRecord"* %24 to i64
  %53 = sub i64 %13, %52
  %54 = trunc i64 %53 to i32
  %55 = icmp ugt i32 %45, %54
  br i1 %55, label %114, label %56, !prof !2

56:                                               ; preds = %51
  %57 = sub i32 %21, %45
  store i32 %57, i32* %19, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %114, !prof !4

59:                                               ; preds = %56
  %60 = load i8, i8* %4, align 1
  %61 = load i8, i8* %28, align 1
  %62 = load i8, i8* %33, align 1
  %63 = load i8, i8* %38, align 1
  %64 = zext i8 %60 to i32
  %65 = shl nuw i32 %64, 24
  %66 = zext i8 %61 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %65
  %69 = zext i8 %62 to i32
  %70 = shl nuw nsw i32 %69, 8
  %71 = or i32 %68, %70
  %72 = zext i8 %63 to i32
  %73 = or i32 %71, %72
  br label %74

74:                                               ; preds = %59, %43
  %75 = phi i32 [ %73, %59 ], [ %41, %43 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %114, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.OT::CmapSubtableFormat14"** %2 to i8**
  %79 = zext i32 %75 to i64
  %80 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 1, i64 0
  %81 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %80, i64 0, i32 0, i32 0, i32 0, i64 0
  %82 = icmp ugt i8* %6, %81
  br i1 %82, label %114, label %90, !prof !2

83:                                               ; preds = %110
  %84 = icmp eq i64 %113, %79
  br i1 %84, label %114, label %85

85:                                               ; preds = %83
  %86 = load i8*, i8** %5, align 8
  %87 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 1, i64 %113
  %88 = getelementptr inbounds %"struct.OT::VariationSelectorRecord", %"struct.OT::VariationSelectorRecord"* %87, i64 0, i32 0, i32 0, i32 0, i64 0
  %89 = icmp ugt i8* %86, %88
  br i1 %89, label %114, label %90, !prof !2

90:                                               ; preds = %77, %85
  %91 = phi i8* [ %88, %85 ], [ %81, %77 ]
  %92 = phi %"struct.OT::VariationSelectorRecord"* [ %87, %85 ], [ %80, %77 ]
  %93 = phi i64 [ %113, %85 ], [ 0, %77 ]
  %94 = load i8*, i8** %78, align 8
  %95 = load i8*, i8** %9, align 8
  %96 = icmp ult i8* %95, %91
  br i1 %96, label %114, label %97, !prof !2

97:                                               ; preds = %90
  %98 = ptrtoint i8* %95 to i64
  %99 = ptrtoint %"struct.OT::VariationSelectorRecord"* %92 to i64
  %100 = sub i64 %98, %99
  %101 = trunc i64 %100 to i32
  %102 = icmp ult i32 %101, 11
  br i1 %102, label %114, label %103, !prof !2

103:                                              ; preds = %97
  %104 = load i32, i32* %19, align 8
  %105 = add i32 %104, -11
  store i32 %105, i32* %19, align 8
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %114, !prof !83

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 1, i64 %93, i32 1
  %109 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_10DefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.26"* %108, %struct.hb_sanitize_context_t* %1, i8* %94) #11
  br i1 %109, label %110, label %114, !prof !83

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"struct.OT::ArrayOf.23", %"struct.OT::ArrayOf.23"* %0, i64 0, i32 1, i64 %93, i32 2
  %112 = tail call zeroext i1 @_ZNK2OT8OffsetToINS_13NonDefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.27"* %111, %struct.hb_sanitize_context_t* %1, i8* %94) #11
  %113 = add nuw nsw i64 %93, 1
  br i1 %112, label %83, label %114, !prof !4

114:                                              ; preds = %83, %85, %90, %97, %103, %107, %110, %77, %74, %47, %51, %23, %3, %8, %12, %18, %56
  %115 = phi i1 [ false, %56 ], [ false, %18 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ false, %23 ], [ false, %51 ], [ false, %47 ], [ true, %74 ], [ false, %77 ], [ false, %110 ], [ false, %107 ], [ false, %103 ], [ false, %97 ], [ false, %90 ], [ false, %85 ], [ true, %83 ]
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_10DefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.26"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo.26", %"struct.OT::OffsetTo.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %111, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %111, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo.26"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %111, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %111

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo.26", %"struct.OT::OffsetTo.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo.26", %"struct.OT::OffsetTo.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo.26", %"struct.OT::OffsetTo.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %100, label %57, !prof !7

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 4
  br i1 %61, label %100, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -8
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %100, !prof !83

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = load i8, i8* %53, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = getelementptr inbounds i8, i8* %53, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %69
  %75 = getelementptr inbounds i8, i8* %53, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %53, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = icmp ult i32 %83, 1073741823
  br i1 %84, label %85, label %100, !prof !83

85:                                               ; preds = %65
  %86 = shl i32 %83, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %85
  %89 = icmp ugt i8* %6, %66
  %90 = icmp ult i8* %10, %66
  %91 = or i1 %89, %90
  br i1 %91, label %100, label %92, !prof !7

92:                                               ; preds = %88
  %93 = ptrtoint i8* %66 to i64
  %94 = sub i64 %13, %93
  %95 = trunc i64 %94 to i32
  %96 = icmp ugt i32 %86, %95
  br i1 %96, label %100, label %97, !prof !2

97:                                               ; preds = %92
  %98 = sub i32 %63, %86
  store i32 %98, i32* %19, align 8
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %111, label %100, !prof !4

100:                                              ; preds = %97, %62, %57, %42, %65, %92, %88
  %101 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %102 = load i32, i32* %101, align 4
  %103 = icmp ugt i32 %102, 31
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = add nuw nsw i32 %102, 1
  store i32 %105, i32* %101, align 4
  %106 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %107 = load i8, i8* %106, align 8, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %104
  %110 = bitcast %"struct.OT::OffsetTo.26"* %0 to i32*
  store i32 0, i32* %110, align 1
  br label %111

111:                                              ; preds = %109, %104, %100, %3, %8, %12, %97, %85, %23, %18
  %112 = phi i1 [ false, %18 ], [ true, %23 ], [ true, %85 ], [ true, %97 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %109 ], [ false, %104 ], [ false, %100 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT8OffsetToINS_13NonDefaultUVSENS_7IntTypeIjLj4EEELb1EE8sanitizeIJEEEbP21hb_sanitize_context_tPKvDpOT_(%"struct.OT::OffsetTo.27"*, %struct.hb_sanitize_context_t*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::OffsetTo.27", %"struct.OT::OffsetTo.27"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ugt i8* %6, %4
  br i1 %7, label %111, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %10, %4
  br i1 %11, label %111, label %12, !prof !2

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = ptrtoint %"struct.OT::OffsetTo.27"* %0 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp ult i32 %16, 4
  br i1 %17, label %111, label %18, !prof !2

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -4
  store i32 %21, i32* %19, align 8
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %111

23:                                               ; preds = %18
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds %"struct.OT::OffsetTo.27", %"struct.OT::OffsetTo.27"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds %"struct.OT::OffsetTo.27", %"struct.OT::OffsetTo.27"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds %"struct.OT::OffsetTo.27", %"struct.OT::OffsetTo.27"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %111, label %42

42:                                               ; preds = %23
  %43 = zext i8 %24 to i64
  %44 = shl nuw nsw i64 %43, 24
  %45 = zext i8 %28 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = or i64 %46, %44
  %48 = zext i8 %33 to i64
  %49 = shl nuw nsw i64 %48, 8
  %50 = or i64 %47, %49
  %51 = zext i8 %38 to i64
  %52 = or i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %2, i64 %52
  %54 = icmp ugt i8* %6, %53
  %55 = icmp ult i8* %10, %53
  %56 = or i1 %54, %55
  br i1 %56, label %100, label %57, !prof !7

57:                                               ; preds = %42
  %58 = ptrtoint i8* %53 to i64
  %59 = sub i64 %13, %58
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 4
  br i1 %61, label %100, label %62, !prof !2

62:                                               ; preds = %57
  %63 = add i32 %20, -8
  store i32 %63, i32* %19, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %100, !prof !83

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %53, i64 4
  %67 = load i8, i8* %53, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw i32 %68, 24
  %70 = getelementptr inbounds i8, i8* %53, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 16
  %74 = or i32 %73, %69
  %75 = getelementptr inbounds i8, i8* %53, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = or i32 %74, %78
  %80 = getelementptr inbounds i8, i8* %53, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %79, %82
  %84 = icmp ult i32 %83, 858993459
  br i1 %84, label %85, label %100, !prof !83

85:                                               ; preds = %65
  %86 = mul i32 %83, 5
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %85
  %89 = icmp ugt i8* %6, %66
  %90 = icmp ult i8* %10, %66
  %91 = or i1 %89, %90
  br i1 %91, label %100, label %92, !prof !7

92:                                               ; preds = %88
  %93 = ptrtoint i8* %66 to i64
  %94 = sub i64 %13, %93
  %95 = trunc i64 %94 to i32
  %96 = icmp ugt i32 %86, %95
  br i1 %96, label %100, label %97, !prof !2

97:                                               ; preds = %92
  %98 = sub i32 %63, %86
  store i32 %98, i32* %19, align 8
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %111, label %100, !prof !4

100:                                              ; preds = %97, %62, %57, %42, %65, %92, %88
  %101 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 8
  %102 = load i32, i32* %101, align 4
  %103 = icmp ugt i32 %102, 31
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = add nuw nsw i32 %102, 1
  store i32 %105, i32* %101, align 4
  %106 = getelementptr inbounds %struct.hb_sanitize_context_t, %struct.hb_sanitize_context_t* %1, i64 0, i32 6
  %107 = load i8, i8* %106, align 8, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %104
  %110 = bitcast %"struct.OT::OffsetTo.27"* %0 to i32*
  store i32 0, i32* %110, align 1
  br label %111

111:                                              ; preds = %109, %104, %100, %3, %8, %12, %97, %85, %23, %18
  %112 = phi i1 [ false, %18 ], [ true, %23 ], [ true, %85 ], [ true, %97 ], [ false, %12 ], [ false, %8 ], [ false, %3 ], [ true, %109 ], [ false, %104 ], [ false, %100 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT12CmapSubtable9get_glyphEjPj(%"struct.OT::CmapSubtable"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.OT::CmapSubtable"* %0 to i16*
  %5 = load i16, i16* %4, align 1
  %6 = tail call i16 @llvm.bswap.i16(i16 %5) #11
  switch i16 %6, label %197 [
    i16 0, label %7
    i16 4, label %16
    i16 6, label %19
    i16 10, label %42
    i16 12, label %91
    i16 13, label %94
  ]

7:                                                ; preds = %3
  %8 = icmp ult i32 %1, 256
  br i1 %8, label %9, label %197

9:                                                ; preds = %7
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 %10, i32 0, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %197, label %14

14:                                               ; preds = %9
  %15 = zext i8 %12 to i32
  store i32 %15, i32* %2, align 4
  br label %197

16:                                               ; preds = %3
  %17 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableFormat4"*
  %18 = tail call zeroext i1 @_ZNK2OT19CmapSubtableFormat49get_glyphEjPj(%"struct.OT::CmapSubtableFormat4"* %17, i32 %1, i32* %2)
  br label %197

19:                                               ; preds = %3
  %20 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableTrimmed"*
  %21 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 2
  %22 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3
  %23 = bitcast [256 x %"struct.OT::IntType.14"]* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #11
  %26 = zext i16 %25 to i32
  %27 = sub i32 %1, %26
  %28 = bitcast %"struct.OT::IntType.14"* %21 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #11
  %31 = zext i16 %30 to i32
  %32 = icmp ult i32 %27, %31
  %33 = zext i32 %27 to i64
  %34 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed", %"struct.OT::CmapSubtableTrimmed"* %20, i64 0, i32 4, i32 1, i64 %33
  %35 = bitcast %"struct.OT::HBGlyphID"* %34 to i16*
  %36 = select i1 %32, i16* %35, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !4
  %37 = load i16, i16* %36, align 1
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %197, label %39

39:                                               ; preds = %19
  %40 = tail call i16 @llvm.bswap.i16(i16 %37) #11
  %41 = zext i16 %40 to i32
  store i32 %41, i32* %2, align 4
  br label %197

42:                                               ; preds = %3
  %43 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableTrimmed.17"*
  %44 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6, i32 0, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw i32 %46, 24
  %48 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = shl nuw nsw i32 %50, 16
  %52 = or i32 %51, %47
  %53 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 8
  %57 = or i32 %52, %56
  %58 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = or i32 %57, %60
  %62 = sub i32 %1, %61
  %63 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 10, i32 0, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw i32 %65, 24
  %67 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 11, i32 0, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl nuw nsw i32 %69, 16
  %71 = or i32 %70, %66
  %72 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 12, i32 0, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 8
  %76 = or i32 %71, %75
  %77 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 13, i32 0, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = or i32 %76, %79
  %81 = icmp ugt i32 %80, %62
  %82 = zext i32 %62 to i64
  %83 = getelementptr inbounds %"struct.OT::CmapSubtableTrimmed.17", %"struct.OT::CmapSubtableTrimmed.17"* %43, i64 0, i32 4, i32 1, i64 %82
  %84 = bitcast %"struct.OT::HBGlyphID"* %83 to i16*
  %85 = select i1 %81, i16* %84, i16* bitcast ([48 x i64]* @_hb_NullPool to i16*), !prof !4
  %86 = load i16, i16* %85, align 1
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %197, label %88

88:                                               ; preds = %42
  %89 = tail call i16 @llvm.bswap.i16(i16 %86) #11
  %90 = zext i16 %89 to i32
  store i32 %90, i32* %2, align 4
  br label %197

91:                                               ; preds = %3
  %92 = bitcast %"struct.OT::CmapSubtable"* %0 to %"struct.OT::CmapSubtableLongSegmented"*
  %93 = tail call zeroext i1 @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj(%"struct.OT::CmapSubtableLongSegmented"* %92, i32 %1, i32* %2)
  br label %197

94:                                               ; preds = %3
  %95 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 6
  %96 = bitcast %"struct.OT::IntType.14"* %95 to %"struct.OT::SortedArrayOf.19"*
  %97 = getelementptr inbounds %"struct.OT::IntType.14", %"struct.OT::IntType.14"* %95, i64 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = shl nuw i32 %99, 24
  %101 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 7, i32 0, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = shl nuw nsw i32 %103, 16
  %105 = or i32 %104, %100
  %106 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 8, i32 0, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = or i32 %105, %109
  %111 = getelementptr inbounds %"struct.OT::CmapSubtable", %"struct.OT::CmapSubtable"* %0, i64 0, i32 0, i32 0, i32 3, i64 9, i32 0, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = or i32 %110, %113
  %115 = icmp slt i32 %114, 1
  br i1 %115, label %175, label %116

116:                                              ; preds = %94
  %117 = add nsw i32 %114, -1
  br label %118

118:                                              ; preds = %168, %116
  %119 = phi i32 [ %117, %116 ], [ %170, %168 ]
  %120 = phi i32 [ 0, %116 ], [ %169, %168 ]
  %121 = add i32 %120, %119
  %122 = lshr i32 %121, 1
  %123 = zext i32 %122 to i64
  %124 = mul nuw nsw i64 %123, 12
  %125 = getelementptr inbounds %"struct.OT::SortedArrayOf.19", %"struct.OT::SortedArrayOf.19"* %96, i64 0, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = shl nuw i32 %127, 24
  %129 = getelementptr inbounds i8, i8* %125, i64 1
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = shl nuw nsw i32 %131, 16
  %133 = or i32 %132, %128
  %134 = getelementptr inbounds i8, i8* %125, i64 2
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = shl nuw nsw i32 %136, 8
  %138 = or i32 %133, %137
  %139 = getelementptr inbounds i8, i8* %125, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i32
  %142 = or i32 %138, %141
  %143 = icmp ugt i32 %142, %1
  br i1 %143, label %144, label %146

144:                                              ; preds = %118
  %145 = add nsw i32 %122, -1
  br label %168

146:                                              ; preds = %118
  %147 = getelementptr inbounds i8, i8* %125, i64 5
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = shl nuw nsw i32 %149, 16
  %151 = getelementptr inbounds i8, i8* %125, i64 4
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = shl nuw i32 %153, 24
  %155 = or i32 %154, %150
  %156 = getelementptr inbounds i8, i8* %125, i64 6
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = shl nuw nsw i32 %158, 8
  %160 = or i32 %155, %159
  %161 = getelementptr inbounds i8, i8* %125, i64 7
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = or i32 %160, %163
  %165 = icmp ult i32 %164, %1
  br i1 %165, label %166, label %172

166:                                              ; preds = %146
  %167 = add nuw nsw i32 %122, 1
  br label %168

168:                                              ; preds = %166, %144
  %169 = phi i32 [ %120, %144 ], [ %167, %166 ]
  %170 = phi i32 [ %145, %144 ], [ %119, %166 ]
  %171 = icmp sgt i32 %169, %170
  br i1 %171, label %175, label %118

172:                                              ; preds = %146
  %173 = zext i32 %122 to i64
  %174 = getelementptr inbounds %"struct.OT::SortedArrayOf.19", %"struct.OT::SortedArrayOf.19"* %96, i64 0, i32 0, i32 1, i64 %173
  br label %175

175:                                              ; preds = %168, %94, %172
  %176 = phi %"struct.OT::CmapSubtableLongGroup"* [ %174, %172 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %94 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %168 ]
  %177 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 0
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = shl nuw i32 %179, 24
  %181 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 16
  %185 = or i32 %184, %180
  %186 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 2
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = shl nuw nsw i32 %188, 8
  %190 = or i32 %185, %189
  %191 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %176, i64 0, i32 2, i32 0, i32 0, i64 3
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = or i32 %190, %193
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %197, label %196

196:                                              ; preds = %175
  store i32 %194, i32* %2, align 4
  br label %197

197:                                              ; preds = %196, %175, %88, %42, %39, %19, %14, %9, %7, %3, %91, %16
  %198 = phi i1 [ %93, %91 ], [ %18, %16 ], [ false, %3 ], [ true, %14 ], [ false, %9 ], [ false, %7 ], [ true, %39 ], [ false, %19 ], [ true, %88 ], [ false, %42 ], [ true, %196 ], [ false, %175 ]
  ret i1 %198
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT19CmapSubtableFormat49get_glyphEjPj(%"struct.OT::CmapSubtableFormat4"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 3
  %5 = bitcast %"struct.OT::IntType.0"* %4 to i16*
  %6 = load i16, i16* %5, align 1
  %7 = tail call i16 @llvm.bswap.i16(i16 %6) #11
  %8 = lshr i16 %7, 1
  %9 = zext i16 %8 to i32
  %10 = zext i16 %8 to i64
  %11 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 7, i32 0, i64 %10
  %12 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %11, i64 1
  %13 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %12, i64 %10
  %14 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %13, i64 %10
  %15 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %14, i64 %10
  %16 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 1
  %17 = bitcast %"struct.OT::IntType.0"* %16 to i16*
  %18 = load i16, i16* %17, align 1
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #11
  %20 = zext i16 %19 to i32
  %21 = shl nuw nsw i32 %9, 3
  %22 = add nsw i32 %20, -16
  %23 = sub nsw i32 %22, %21
  %24 = lshr i32 %23, 1
  %25 = icmp eq i16 %8, 0
  br i1 %25, label %101, label %26

26:                                               ; preds = %3
  %27 = add nuw nsw i32 %9, 1
  %28 = add nsw i32 %9, -1
  %29 = zext i32 %27 to i64
  br label %30

30:                                               ; preds = %55, %26
  %31 = phi i32 [ %28, %26 ], [ %57, %55 ]
  %32 = phi i32 [ 0, %26 ], [ %56, %55 ]
  %33 = add i32 %32, %31
  %34 = lshr i32 %33, 1
  %35 = and i32 %33, -2
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4", %"struct.OT::CmapSubtableFormat4"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 0, i64 %36
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #11
  %41 = zext i16 %40 to i32
  %42 = icmp ult i32 %41, %1
  br i1 %42, label %53, label %43

43:                                               ; preds = %30
  %44 = bitcast i8* %37 to %struct.CustomRange*
  %45 = getelementptr inbounds %struct.CustomRange, %struct.CustomRange* %44, i64 %29, i32 0
  %46 = bitcast %"struct.OT::IntType.0"* %45 to i16*
  %47 = load i16, i16* %46, align 1
  %48 = tail call i16 @llvm.bswap.i16(i16 %47) #11
  %49 = zext i16 %48 to i32
  %50 = icmp ugt i32 %49, %1
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = add nsw i32 %34, -1
  br label %55

53:                                               ; preds = %30
  %54 = add nuw nsw i32 %34, 1
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i32 [ %32, %51 ], [ %54, %53 ]
  %57 = phi i32 [ %52, %51 ], [ %31, %53 ]
  %58 = icmp sgt i32 %56, %57
  br i1 %58, label %101, label %30

59:                                               ; preds = %43
  %60 = icmp eq i8* %37, null
  br i1 %60, label %101, label %61

61:                                               ; preds = %59
  %62 = zext i32 %34 to i64
  %63 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %14, i64 %62
  %64 = bitcast %"struct.OT::IntType.0"* %63 to i16*
  %65 = load i16, i16* %64, align 1
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %90, label %67

67:                                               ; preds = %61
  %68 = tail call i16 @llvm.bswap.i16(i16 %65) #11
  %69 = lshr i16 %68, 1
  %70 = zext i16 %69 to i32
  %71 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %12, i64 %62
  %72 = bitcast %"struct.OT::IntType.0"* %71 to i16*
  %73 = load i16, i16* %72, align 1
  %74 = tail call i16 @llvm.bswap.i16(i16 %73) #11
  %75 = zext i16 %74 to i32
  %76 = sub i32 %1, %9
  %77 = add i32 %76, %34
  %78 = add i32 %77, %70
  %79 = sub i32 %78, %75
  %80 = icmp ult i32 %79, %24
  br i1 %80, label %81, label %101, !prof !4

81:                                               ; preds = %67
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %15, i64 %82
  %84 = bitcast %"struct.OT::IntType.0"* %83 to i16*
  %85 = load i16, i16* %84, align 1
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %101, label %87, !prof !2

87:                                               ; preds = %81
  %88 = tail call i16 @llvm.bswap.i16(i16 %85) #11
  %89 = zext i16 %88 to i32
  br label %90

90:                                               ; preds = %61, %87
  %91 = phi i32 [ %89, %87 ], [ %1, %61 ]
  %92 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %13, i64 %62
  %93 = bitcast %"struct.OT::IntType.0"* %92 to i16*
  %94 = load i16, i16* %93, align 1
  %95 = tail call i16 @llvm.bswap.i16(i16 %94) #11
  %96 = zext i16 %95 to i32
  %97 = add i32 %91, %96
  %98 = and i32 %97, 65535
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %90
  store i32 %98, i32* %2, align 4
  br label %101

101:                                              ; preds = %55, %3, %59, %67, %81, %90, %100
  %102 = phi i1 [ false, %59 ], [ true, %100 ], [ false, %90 ], [ false, %3 ], [ false, %67 ], [ false, %81 ], [ false, %55 ]
  ret i1 %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT25CmapSubtableLongSegmentedINS_20CmapSubtableFormat12EE9get_glyphEjPj(%"struct.OT::CmapSubtableLongSegmented"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw i32 %6, 24
  %8 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 16
  %12 = or i32 %11, %7
  %13 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = or i32 %12, %16
  %18 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %17, %20
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %82, label %23

23:                                               ; preds = %3
  %24 = add nsw i32 %21, -1
  br label %25

25:                                               ; preds = %75, %23
  %26 = phi i32 [ %24, %23 ], [ %77, %75 ]
  %27 = phi i32 [ 0, %23 ], [ %76, %75 ]
  %28 = add i32 %27, %26
  %29 = lshr i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = mul nuw nsw i64 %30, 12
  %32 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw i32 %34, 24
  %36 = getelementptr inbounds i8, i8* %32, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 16
  %40 = or i32 %39, %35
  %41 = getelementptr inbounds i8, i8* %32, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 8
  %45 = or i32 %40, %44
  %46 = getelementptr inbounds i8, i8* %32, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %45, %48
  %50 = icmp ugt i32 %49, %1
  br i1 %50, label %51, label %53

51:                                               ; preds = %25
  %52 = add nsw i32 %29, -1
  br label %75

53:                                               ; preds = %25
  %54 = getelementptr inbounds i8, i8* %32, i64 5
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = getelementptr inbounds i8, i8* %32, i64 4
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw i32 %60, 24
  %62 = or i32 %61, %57
  %63 = getelementptr inbounds i8, i8* %32, i64 6
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = or i32 %62, %66
  %68 = getelementptr inbounds i8, i8* %32, i64 7
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = or i32 %67, %70
  %72 = icmp ult i32 %71, %1
  br i1 %72, label %73, label %79

73:                                               ; preds = %53
  %74 = add nuw nsw i32 %29, 1
  br label %75

75:                                               ; preds = %73, %51
  %76 = phi i32 [ %27, %51 ], [ %74, %73 ]
  %77 = phi i32 [ %52, %51 ], [ %26, %73 ]
  %78 = icmp sgt i32 %76, %77
  br i1 %78, label %82, label %25

79:                                               ; preds = %53
  %80 = zext i32 %29 to i64
  %81 = getelementptr inbounds %"struct.OT::CmapSubtableLongSegmented", %"struct.OT::CmapSubtableLongSegmented"* %0, i64 0, i32 4, i32 0, i32 1, i64 %80
  br label %82

82:                                               ; preds = %75, %3, %79
  %83 = phi %"struct.OT::CmapSubtableLongGroup"* [ %81, %79 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %3 ], [ bitcast ([12 x i8]* @_hb_Null_OT_CmapSubtableLongGroup to %"struct.OT::CmapSubtableLongGroup"*), %75 ]
  %84 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 0
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw i32 %86, 24
  %88 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 16
  %92 = or i32 %91, %87
  %93 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %92, %96
  %98 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 0, i32 0, i32 0, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = or i32 %97, %100
  %102 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 0
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw i32 %104, 24
  %106 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 1
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 16
  %110 = or i32 %109, %105
  %111 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 2
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = or i32 %110, %114
  %116 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 1, i32 0, i32 0, i64 3
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = or i32 %115, %118
  %120 = icmp ugt i32 %101, %119
  br i1 %120, label %144, label %121, !prof !2

121:                                              ; preds = %82
  %122 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 0
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = shl nuw i32 %124, 24
  %126 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = shl nuw nsw i32 %128, 16
  %130 = or i32 %129, %125
  %131 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 2
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 8
  %135 = or i32 %130, %134
  %136 = getelementptr inbounds %"struct.OT::CmapSubtableLongGroup", %"struct.OT::CmapSubtableLongGroup"* %83, i64 0, i32 2, i32 0, i32 0, i64 3
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = or i32 %135, %138
  %140 = sub i32 %1, %101
  %141 = add i32 %139, %140
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %121
  store i32 %141, i32* %2, align 4
  br label %144

144:                                              ; preds = %82, %121, %143
  %145 = phi i1 [ true, %143 ], [ false, %121 ], [ false, %82 ]
  ret i1 %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2OT19CmapSubtableFormat413accelerator_t9get_glyphEjPj(%"struct.OT::CmapSubtableFormat4::accelerator_t"*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 0
  %5 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %4, align 8
  %6 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %95, label %9

9:                                                ; preds = %3
  %10 = add nuw i32 %7, 1
  %11 = add nsw i32 %7, -1
  %12 = zext i32 %10 to i64
  br label %13

13:                                               ; preds = %38, %9
  %14 = phi i32 [ %11, %9 ], [ %40, %38 ]
  %15 = phi i32 [ 0, %9 ], [ %39, %38 ]
  %16 = add i32 %15, %14
  %17 = lshr i32 %16, 1
  %18 = and i32 %16, -2
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %5, i64 0, i32 0, i32 0, i64 %19
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #11
  %24 = zext i16 %23 to i32
  %25 = icmp ult i32 %24, %1
  br i1 %25, label %36, label %26

26:                                               ; preds = %13
  %27 = bitcast i8* %20 to %struct.CustomRange*
  %28 = getelementptr inbounds %struct.CustomRange, %struct.CustomRange* %27, i64 %12, i32 0
  %29 = bitcast %"struct.OT::IntType.0"* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #11
  %32 = zext i16 %31 to i32
  %33 = icmp ugt i32 %32, %1
  br i1 %33, label %34, label %42

34:                                               ; preds = %26
  %35 = add nsw i32 %17, -1
  br label %38

36:                                               ; preds = %13
  %37 = add nuw nsw i32 %17, 1
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i32 [ %15, %34 ], [ %37, %36 ]
  %40 = phi i32 [ %35, %34 ], [ %14, %36 ]
  %41 = icmp sgt i32 %39, %40
  br i1 %41, label %95, label %13

42:                                               ; preds = %26
  %43 = icmp eq i8* %20, null
  br i1 %43, label %95, label %44

44:                                               ; preds = %42
  %45 = lshr i32 %16, 1
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 3
  %48 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %47, align 8
  %49 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %48, i64 %46
  %50 = bitcast %"struct.OT::IntType.0"* %49 to i16*
  %51 = load i16, i16* %50, align 1
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %82, label %53

53:                                               ; preds = %44
  %54 = tail call i16 @llvm.bswap.i16(i16 %51) #11
  %55 = lshr i16 %54, 1
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 1
  %58 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %57, align 8
  %59 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %58, i64 %46
  %60 = bitcast %"struct.OT::IntType.0"* %59 to i16*
  %61 = load i16, i16* %60, align 1
  %62 = tail call i16 @llvm.bswap.i16(i16 %61) #11
  %63 = zext i16 %62 to i32
  %64 = sub i32 %1, %7
  %65 = add i32 %64, %45
  %66 = add i32 %65, %56
  %67 = sub i32 %66, %63
  %68 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 6
  %69 = load i32, i32* %68, align 4
  %70 = icmp ult i32 %67, %69
  br i1 %70, label %71, label %95, !prof !4

71:                                               ; preds = %53
  %72 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 4
  %73 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %72, align 8
  %74 = zext i32 %67 to i64
  %75 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %73, i64 %74
  %76 = bitcast %"struct.OT::IntType.0"* %75 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %95, label %79, !prof !2

79:                                               ; preds = %71
  %80 = tail call i16 @llvm.bswap.i16(i16 %77) #11
  %81 = zext i16 %80 to i32
  br label %82

82:                                               ; preds = %44, %79
  %83 = phi i32 [ %81, %79 ], [ %1, %44 ]
  %84 = getelementptr inbounds %"struct.OT::CmapSubtableFormat4::accelerator_t", %"struct.OT::CmapSubtableFormat4::accelerator_t"* %0, i64 0, i32 2
  %85 = load %"struct.OT::IntType.0"*, %"struct.OT::IntType.0"** %84, align 8
  %86 = getelementptr inbounds %"struct.OT::IntType.0", %"struct.OT::IntType.0"* %85, i64 %46
  %87 = bitcast %"struct.OT::IntType.0"* %86 to i16*
  %88 = load i16, i16* %87, align 1
  %89 = tail call i16 @llvm.bswap.i16(i16 %88) #11
  %90 = zext i16 %89 to i32
  %91 = add i32 %83, %90
  %92 = and i32 %91, 65535
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %82
  store i32 %92, i32* %2, align 4
  br label %95

95:                                               ; preds = %38, %71, %53, %3, %94, %82, %42
  %96 = phi i1 [ false, %42 ], [ true, %94 ], [ false, %82 ], [ false, %3 ], [ false, %53 ], [ false, %71 ], [ false, %38 ]
  ret i1 %96
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 4000000, i32 4001}
!6 = !{!"branch_weights", i32 2002, i32 2000}
!7 = !{!"branch_weights", i32 4001, i32 4000000}
!8 = !{!"branch_weights", i32 2000, i32 2002}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN11hb_vector_tIN20hb_user_data_array_t19hb_user_data_item_tEE3popEv: argument 0"}
!11 = distinct !{!11, !"_ZN11hb_vector_tIN20hb_user_data_array_t19hb_user_data_item_tEE3popEv"}
!12 = !{i32 0, i32 33}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 0"}
!15 = distinct !{!15, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_"}
!16 = !{!17}
!17 = distinct !{!17, !15, !"_ZL14sort_r_cmpswapIJEEiPcS0_mPFiPKvS2_DpT_ES4_: argument 1"}
!18 = !{!19, !14}
!19 = distinct !{!19, !20, !"_ZL11sort_r_swapPcS_m: argument 0"}
!20 = distinct !{!20, !"_ZL11sort_r_swapPcS_m"}
!21 = !{!22, !17}
!22 = distinct !{!22, !20, !"_ZL11sort_r_swapPcS_m: argument 1"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !26, !24}
!26 = !{!"llvm.loop.unroll.runtime.disable"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZL11sort_r_swapPcS_m: argument 0"}
!29 = distinct !{!29, !"_ZL11sort_r_swapPcS_m"}
!30 = !{!31}
!31 = distinct !{!31, !29, !"_ZL11sort_r_swapPcS_m: argument 1"}
!32 = distinct !{!32, !24}
!33 = distinct !{!33, !26, !24}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZL11sort_r_swapPcS_m: argument 0"}
!36 = distinct !{!36, !"_ZL11sort_r_swapPcS_m"}
!37 = !{!38}
!38 = distinct !{!38, !36, !"_ZL11sort_r_swapPcS_m: argument 1"}
!39 = distinct !{!39, !24}
!40 = distinct !{!40, !26, !24}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZL11sort_r_swapPcS_m: argument 1"}
!43 = distinct !{!43, !"_ZL11sort_r_swapPcS_m"}
!44 = !{!45}
!45 = distinct !{!45, !43, !"_ZL11sort_r_swapPcS_m: argument 0"}
!46 = distinct !{!46, !24}
!47 = distinct !{!47, !26, !24}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZL11sort_r_swapPcS_m: argument 0"}
!50 = distinct !{!50, !"_ZL11sort_r_swapPcS_m"}
!51 = !{!52}
!52 = distinct !{!52, !50, !"_ZL11sort_r_swapPcS_m: argument 1"}
!53 = distinct !{!53, !24}
!54 = distinct !{!54, !26, !24}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZL11sort_r_swapPcS_m: argument 0"}
!57 = distinct !{!57, !"_ZL11sort_r_swapPcS_m"}
!58 = !{!59}
!59 = distinct !{!59, !57, !"_ZL11sort_r_swapPcS_m: argument 1"}
!60 = distinct !{!60, !24}
!61 = distinct !{!61, !26, !24}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZL11sort_r_swapPcS_m: argument 0"}
!64 = distinct !{!64, !"_ZL11sort_r_swapPcS_m"}
!65 = !{!66}
!66 = distinct !{!66, !64, !"_ZL11sort_r_swapPcS_m: argument 1"}
!67 = distinct !{!67, !24}
!68 = distinct !{!68, !26, !24}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZL11sort_r_swapPcS_m: argument 0"}
!71 = distinct !{!71, !"_ZL11sort_r_swapPcS_m"}
!72 = !{!73}
!73 = distinct !{!73, !71, !"_ZL11sort_r_swapPcS_m: argument 1"}
!74 = distinct !{!74, !24}
!75 = distinct !{!75, !26, !24}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZL11sort_r_swapPcS_m: argument 0"}
!78 = distinct !{!78, !"_ZL11sort_r_swapPcS_m"}
!79 = !{!80}
!80 = distinct !{!80, !78, !"_ZL11sort_r_swapPcS_m: argument 1"}
!81 = distinct !{!81, !24}
!82 = distinct !{!82, !26, !24}
!83 = !{!"branch_weights", i32 2146410443, i32 1073205}
!84 = distinct !{!84, !85}
!85 = !{!"llvm.loop.unroll.disable"}
!86 = distinct !{!86, !85}
!87 = !{!"branch_weights", i32 2146410443, i32 2146410, i32 2146410443}
!88 = !{!"branch_weights", i32 1073205, i32 2146410443}
