; ModuleID = '../../third_party/opus/src/celt/celt.c'
source_filename = "../../third_party/opus/src/celt/celt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.OpusCustomMode = type { i32, i32, i32, i32, [4 x float], i16*, i32, i32, i32, i32, i8*, i16*, float*, %struct.mdct_lookup, %struct.PulseCache }
%struct.mdct_lookup = type { i32, i32, [4 x %struct.kiss_fft_state*], float* }
%struct.kiss_fft_state = type { i32, float, i32, [16 x i16], i16*, %struct.kiss_twiddle_cpx*, %struct.arch_fft_state* }
%struct.kiss_twiddle_cpx = type { float, float }
%struct.arch_fft_state = type { i32, i8* }
%struct.PulseCache = type { i32, i16*, i8*, i8* }

@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [43 x i8] c"Fatal (internal) error in %s, line %d: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"assertion failed: 0\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"../../third_party/opus/src/celt/celt.c\00", align 1
@comb_filter.gains = internal unnamed_addr constant [3 x [3 x float]] [[3 x float] [float 0x3FD3A00000000000, float 0x3FCBC80000000000, float 0x3FC0980000000000], [3 x float] [float 0x3FDDB00000000000, float 0x3FD1280000000000, float 0.000000e+00], [3 x float] [float 0x3FE9980000000000, float 0x3FB9A00000000000, float 0.000000e+00]], align 16
@tf_select_table = hidden local_unnamed_addr constant [4 x [8 x i8]] [[8 x i8] c"\00\FF\00\FF\00\FF\00\FF", [8 x i8] c"\00\FF\00\FE\01\00\01\FF", [8 x i8] c"\00\FE\00\FD\02\00\01\FF", [8 x i8] c"\00\FE\00\FD\03\00\01\FF"], align 16
@opus_strerror.error_strings = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"invalid argument\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"buffer too small\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"corrupted stream\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"request not implemented\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"invalid state\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"memory allocation failed\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"libopus unknown\00", align 1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #0 {
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i8* %1, i32 %2, i8* %0) #8
  tail call void @abort() #9
  unreachable
}

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @resampling_factor(i32) local_unnamed_addr #3 {
  switch i32 %0, label %6 [
    i32 48000, label %7
    i32 24000, label %2
    i32 16000, label %3
    i32 12000, label %4
    i32 8000, label %5
  ]

2:                                                ; preds = %1
  br label %7

3:                                                ; preds = %1
  br label %7

4:                                                ; preds = %1
  br label %7

5:                                                ; preds = %1
  br label %7

6:                                                ; preds = %1
  tail call void @celt_fatal(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i32 84) #10
  unreachable

7:                                                ; preds = %1, %5, %4, %3, %2
  %8 = phi i32 [ 6, %5 ], [ 4, %4 ], [ 3, %3 ], [ 2, %2 ], [ 1, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @comb_filter(float*, float*, i32, i32, i32, float, float, i32, i32, float* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %13 = fcmp oeq float %5, 0.000000e+00
  %14 = fcmp oeq float %6, 0.000000e+00
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = icmp eq float* %1, %0
  br i1 %17, label %151, label %18

18:                                               ; preds = %16
  %19 = bitcast float* %0 to i8*
  %20 = bitcast float* %1 to i8*
  %21 = sext i32 %4 to i64
  %22 = shl nsw i64 %21, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 %22, i1 false)
  br label %151

23:                                               ; preds = %12
  %24 = icmp sgt i32 %2, 15
  %25 = select i1 %24, i32 %2, i32 15
  %26 = icmp sgt i32 %3, 15
  %27 = select i1 %26, i32 %3, i32 15
  %28 = sext i32 %7 to i64
  %29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* @comb_filter.gains, i64 0, i64 %28, i64 0
  %30 = load float, float* %29, align 4
  %31 = fmul float %30, %5
  %32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* @comb_filter.gains, i64 0, i64 %28, i64 1
  %33 = load float, float* %32, align 4
  %34 = fmul float %33, %5
  %35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* @comb_filter.gains, i64 0, i64 %28, i64 2
  %36 = load float, float* %35, align 4
  %37 = fmul float %36, %5
  %38 = sext i32 %8 to i64
  %39 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* @comb_filter.gains, i64 0, i64 %38, i64 0
  %40 = load float, float* %39, align 4
  %41 = fmul float %40, %6
  %42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* @comb_filter.gains, i64 0, i64 %38, i64 1
  %43 = load float, float* %42, align 4
  %44 = fmul float %43, %6
  %45 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* @comb_filter.gains, i64 0, i64 %38, i64 2
  %46 = load float, float* %45, align 4
  %47 = fmul float %46, %6
  %48 = fcmp oeq float %5, %6
  %49 = icmp eq i32 %25, %27
  %50 = and i1 %49, %48
  %51 = icmp eq i32 %7, %8
  %52 = and i1 %50, %51
  %53 = select i1 %52, i32 0, i32 %10
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %133

55:                                               ; preds = %23
  %56 = sub nsw i32 0, %27
  %57 = sub nuw i32 -2, %27
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, float* %1, i64 %58
  %60 = load float, float* %59, align 4
  %61 = xor i32 %27, -1
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds float, float* %1, i64 %62
  %64 = load float, float* %63, align 4
  %65 = sext i32 %56 to i64
  %66 = getelementptr inbounds float, float* %1, i64 %65
  %67 = load float, float* %66, align 4
  %68 = sub nsw i32 1, %27
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds float, float* %1, i64 %69
  %71 = load float, float* %70, align 4
  %72 = sub nsw i32 2, %27
  %73 = zext i32 %25 to i64
  %74 = zext i32 %53 to i64
  br label %75

75:                                               ; preds = %75, %55
  %76 = phi i64 [ 0, %55 ], [ %130, %75 ]
  %77 = phi float [ %60, %55 ], [ %78, %75 ]
  %78 = phi float [ %64, %55 ], [ %79, %75 ]
  %79 = phi float [ %67, %55 ], [ %80, %75 ]
  %80 = phi float [ %71, %55 ], [ %85, %75 ]
  %81 = phi i32 [ 0, %55 ], [ %131, %75 ]
  %82 = add nsw i32 %72, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds float, float* %1, i64 %83
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds float, float* %9, i64 %76
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %87
  %89 = getelementptr inbounds float, float* %1, i64 %76
  %90 = load float, float* %89, align 4
  %91 = fsub float 1.000000e+00, %88
  %92 = fmul float %31, %91
  %93 = sub nsw i64 %76, %73
  %94 = getelementptr inbounds float, float* %1, i64 %93
  %95 = load float, float* %94, align 4
  %96 = fmul float %95, %92
  %97 = fadd float %90, %96
  %98 = fmul float %34, %91
  %99 = add nsw i64 %93, 1
  %100 = getelementptr inbounds float, float* %1, i64 %99
  %101 = load float, float* %100, align 4
  %102 = add nsw i64 %93, -1
  %103 = getelementptr inbounds float, float* %1, i64 %102
  %104 = load float, float* %103, align 4
  %105 = fadd float %101, %104
  %106 = fmul float %98, %105
  %107 = fadd float %97, %106
  %108 = fmul float %37, %91
  %109 = add nsw i64 %93, 2
  %110 = getelementptr inbounds float, float* %1, i64 %109
  %111 = load float, float* %110, align 4
  %112 = add nsw i64 %93, -2
  %113 = getelementptr inbounds float, float* %1, i64 %112
  %114 = load float, float* %113, align 4
  %115 = fadd float %111, %114
  %116 = fmul float %108, %115
  %117 = fadd float %107, %116
  %118 = fmul float %41, %88
  %119 = fmul float %79, %118
  %120 = fadd float %119, %117
  %121 = fmul float %44, %88
  %122 = fadd float %80, %78
  %123 = fmul float %122, %121
  %124 = fadd float %123, %120
  %125 = fmul float %47, %88
  %126 = fadd float %77, %85
  %127 = fmul float %126, %125
  %128 = fadd float %127, %124
  %129 = getelementptr inbounds float, float* %0, i64 %76
  store float %128, float* %129, align 4
  %130 = add nuw nsw i64 %76, 1
  %131 = add nuw nsw i32 %81, 1
  %132 = icmp eq i64 %130, %74
  br i1 %132, label %133, label %75

133:                                              ; preds = %75, %23
  %134 = phi i32 [ 0, %23 ], [ %53, %75 ]
  br i1 %14, label %135, label %146

135:                                              ; preds = %133
  %136 = icmp eq float* %1, %0
  br i1 %136, label %151, label %137

137:                                              ; preds = %135
  %138 = sext i32 %53 to i64
  %139 = getelementptr inbounds float, float* %0, i64 %138
  %140 = bitcast float* %139 to i8*
  %141 = getelementptr inbounds float, float* %1, i64 %138
  %142 = bitcast float* %141 to i8*
  %143 = sub nsw i32 %4, %53
  %144 = sext i32 %143 to i64
  %145 = shl nsw i64 %144, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %142, i64 %145, i1 false)
  br label %151

146:                                              ; preds = %133
  %147 = zext i32 %134 to i64
  %148 = getelementptr inbounds float, float* %0, i64 %147
  %149 = getelementptr inbounds float, float* %1, i64 %147
  %150 = sub nsw i32 %4, %134
  tail call void @comb_filter_const_sse(float* %148, float* %149, i32 %27, i32 %150, float %41, float %44, float %47) #11
  br label %151

151:                                              ; preds = %137, %135, %18, %16, %146
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @comb_filter_const_sse(float*, float*, i32, i32, float, float, float) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @init_caps(%struct.OpusCustomMode* nocapture readonly, i32* nocapture, i32, i32) local_unnamed_addr #6 {
  %5 = getelementptr inbounds %struct.OpusCustomMode, %struct.OpusCustomMode* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %43

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.OpusCustomMode, %struct.OpusCustomMode* %0, i64 0, i32 5
  %10 = getelementptr inbounds %struct.OpusCustomMode, %struct.OpusCustomMode* %0, i64 0, i32 14, i32 3
  %11 = shl i32 %2, 1
  %12 = add i32 %3, -1
  %13 = add i32 %12, %11
  br label %14

14:                                               ; preds = %8, %14
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = phi i32 [ %6, %8 ], [ %40, %14 ]
  %17 = load i16*, i16** %9, align 8
  %18 = add nuw nsw i64 %15, 1
  %19 = getelementptr inbounds i16, i16* %17, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = getelementptr inbounds i16, i16* %17, i64 %15
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = sub nsw i32 %21, %24
  %26 = shl i32 %25, %2
  %27 = load i8*, i8** %10, align 8
  %28 = mul nsw i32 %16, %13
  %29 = trunc i64 %15 to i32
  %30 = add nsw i32 %28, %29
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %27, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = add nuw nsw i32 %34, 64
  %36 = mul i32 %26, %3
  %37 = mul i32 %36, %35
  %38 = ashr i32 %37, 2
  %39 = getelementptr inbounds i32, i32* %1, i64 %15
  store i32 %38, i32* %39, align 4
  %40 = load i32, i32* %5, align 8
  %41 = sext i32 %40 to i64
  %42 = icmp slt i64 %18, %41
  br i1 %42, label %14, label %43

43:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @opus_strerror(i32) local_unnamed_addr #7 {
  %2 = add i32 %0, 7
  %3 = icmp ugt i32 %2, 7
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = sub nsw i32 0, %0
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [8 x i8*], [8 x i8*]* @opus_strerror.error_strings, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i8* [ %8, %4 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), %1 ]
  ret i8* %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @opus_get_version_string() local_unnamed_addr #7 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)
}

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold }
attributes #9 = { noreturn nounwind }
attributes #10 = { noreturn }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
