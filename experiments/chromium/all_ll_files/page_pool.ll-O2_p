; ModuleID = '../../third_party/blink/renderer/platform/heap/impl/page_pool.cc'
source_filename = "../../third_party/blink/renderer/platform/heap/impl/page_pool.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::PagePool" = type { [9 x %"class.blink::PagePool::PoolEntry"*] }
%"class.blink::PagePool::PoolEntry" = type { %"class.blink::PageMemory"*, %"class.blink::PagePool::PoolEntry"* }
%"class.blink::PageMemory" = type { %"class.blink::PageMemoryRegion"*, %"class.blink::MemoryRegion" }
%"class.blink::PageMemoryRegion" = type { %"class.blink::MemoryRegion", i8, [10 x i8], %"class.base::AtomicRefCount", %"class.blink::RegionTree"* }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::RegionTree" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.blink::MemoryRegion" = type { i8*, i64 }

@_ZN5blink8PagePoolC1Ev = hidden unnamed_addr alias void (%"class.blink::PagePool"*), void (%"class.blink::PagePool"*)* @_ZN5blink8PagePoolC2Ev
@_ZN5blink8PagePoolD1Ev = hidden unnamed_addr alias void (%"class.blink::PagePool"*), void (%"class.blink::PagePool"*)* @_ZN5blink8PagePoolD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink8PagePoolC2Ev(%"class.blink::PagePool"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::PagePool"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8PagePoolD2Ev(%"class.blink::PagePool"* nocapture) unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %28, %1
  %3 = phi i64 [ 0, %1 ], [ %29, %28 ]
  %4 = getelementptr inbounds %"class.blink::PagePool", %"class.blink::PagePool"* %0, i64 0, i32 0, i64 %3
  %5 = load %"class.blink::PagePool::PoolEntry"*, %"class.blink::PagePool::PoolEntry"** %4, align 8
  %6 = icmp eq %"class.blink::PagePool::PoolEntry"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::PagePool::PoolEntry"** %4 to i64*
  br label %10

9:                                                ; preds = %28
  ret void

10:                                               ; preds = %7, %24
  %11 = phi %"class.blink::PagePool::PoolEntry"* [ %5, %7 ], [ %26, %24 ]
  %12 = getelementptr inbounds %"class.blink::PagePool::PoolEntry", %"class.blink::PagePool::PoolEntry"* %11, i64 0, i32 1
  %13 = bitcast %"class.blink::PagePool::PoolEntry"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %8, align 8
  %15 = getelementptr inbounds %"class.blink::PagePool::PoolEntry", %"class.blink::PagePool::PoolEntry"* %11, i64 0, i32 0
  %16 = load %"class.blink::PageMemory"*, %"class.blink::PageMemory"** %15, align 8
  %17 = icmp eq %"class.blink::PageMemory"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %16, i64 0, i32 0
  %20 = load %"class.blink::PageMemoryRegion"*, %"class.blink::PageMemoryRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %16, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZN5blink16PageMemoryRegion11PageDeletedEPh(%"class.blink::PageMemoryRegion"* %20, i8* %22) #6
  %23 = bitcast %"class.blink::PageMemory"* %16 to i8*
  tail call void @free(i8* %23) #6
  br label %24

24:                                               ; preds = %10, %18
  %25 = bitcast %"class.blink::PagePool::PoolEntry"* %11 to i8*
  tail call void @free(i8* %25) #6
  %26 = load %"class.blink::PagePool::PoolEntry"*, %"class.blink::PagePool::PoolEntry"** %4, align 8
  %27 = icmp eq %"class.blink::PagePool::PoolEntry"* %26, null
  br i1 %27, label %28, label %10

28:                                               ; preds = %24, %2
  %29 = add nuw nsw i64 %3, 1
  %30 = icmp eq i64 %29, 9
  br i1 %30, label %9, label %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8PagePool3AddEiPNS_10PageMemoryE(%"class.blink::PagePool"* nocapture, i32, %"class.blink::PageMemory"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %2, i64 0, i32 0
  %5 = load %"class.blink::PageMemoryRegion"*, %"class.blink::PageMemoryRegion"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::PageMemoryRegion", %"class.blink::PageMemoryRegion"* %5, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %2, i64 0, i32 1, i32 0
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 562949953290240
  %14 = bitcast %"class.blink::PageMemoryRegion"* %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = lshr i64 %16, 17
  %18 = and i64 %17, 4294967295
  br label %19

19:                                               ; preds = %3, %9
  %20 = phi i64 [ %18, %9 ], [ 0, %3 ]
  %21 = getelementptr inbounds %"class.blink::PageMemoryRegion", %"class.blink::PageMemoryRegion"* %5, i64 0, i32 2, i64 %20
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %2, i64 0, i32 1
  tail call void @_ZN5blink12MemoryRegion8DecommitEv(%"class.blink::MemoryRegion"* %22) #6
  %23 = tail call noalias i8* @malloc(i64 16) #6
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds %"class.blink::PagePool", %"class.blink::PagePool"* %0, i64 0, i32 0, i64 %24
  %26 = bitcast %"class.blink::PagePool::PoolEntry"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %23 to %"class.blink::PageMemory"**
  store %"class.blink::PageMemory"* %2, %"class.blink::PageMemory"** %28, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 8
  %30 = bitcast i8* %29 to i64*
  store i64 %27, i64* %30, align 8
  %31 = bitcast %"class.blink::PagePool::PoolEntry"** %25 to i8**
  store i8* %23, i8** %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PageMemory"* @_ZN5blink8PagePool4TakeEi(%"class.blink::PagePool"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::PagePool", %"class.blink::PagePool"* %0, i64 0, i32 0, i64 %3
  %5 = load %"class.blink::PagePool::PoolEntry"*, %"class.blink::PagePool::PoolEntry"** %4, align 8
  %6 = icmp eq %"class.blink::PagePool::PoolEntry"* %5, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::PagePool::PoolEntry", %"class.blink::PagePool::PoolEntry"* %5, i64 0, i32 1
  %9 = bitcast %"class.blink::PagePool::PoolEntry"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::PagePool::PoolEntry"** %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::PagePool::PoolEntry", %"class.blink::PagePool::PoolEntry"* %5, i64 0, i32 0
  %13 = load %"class.blink::PageMemory"*, %"class.blink::PageMemory"** %12, align 8
  %14 = bitcast %"class.blink::PagePool::PoolEntry"* %5 to i8*
  tail call void @free(i8* %14) #6
  %15 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %13, i64 0, i32 0
  %16 = load %"class.blink::PageMemoryRegion"*, %"class.blink::PageMemoryRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PageMemoryRegion", %"class.blink::PageMemoryRegion"* %16, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %30

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %13, i64 0, i32 1, i32 0
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 562949953290240
  %25 = bitcast %"class.blink::PageMemoryRegion"* %16 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = lshr i64 %27, 17
  %29 = and i64 %28, 4294967295
  br label %30

30:                                               ; preds = %20, %7
  %31 = phi i64 [ %29, %20 ], [ 0, %7 ]
  %32 = getelementptr inbounds %"class.blink::PageMemoryRegion", %"class.blink::PageMemoryRegion"* %16, i64 0, i32 2, i64 %31
  store i8 1, i8* %32, align 1
  %33 = getelementptr inbounds %"class.blink::PageMemory", %"class.blink::PageMemory"* %13, i64 0, i32 1
  tail call void @_ZN5blink12MemoryRegion6CommitEv(%"class.blink::MemoryRegion"* %33) #6
  br label %34

34:                                               ; preds = %2, %30
  %35 = phi %"class.blink::PageMemory"* [ %13, %30 ], [ null, %2 ]
  ret %"class.blink::PageMemory"* %35
}

declare void @_ZN5blink16PageMemoryRegion11PageDeletedEPh(%"class.blink::PageMemoryRegion"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink12MemoryRegion8DecommitEv(%"class.blink::MemoryRegion"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @_ZN5blink12MemoryRegion6CommitEv(%"class.blink::MemoryRegion"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
