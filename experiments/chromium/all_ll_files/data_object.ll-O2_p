; ModuleID = '../../third_party/blink/renderer/core/clipboard/data_object.cc'
source_filename = "../../third_party/blink/renderer/core/clipboard/data_object.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.80", i32, [4 x i8], %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.259", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.198", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl.119" }
%"struct.std::__1::__cxx_atomic_impl.119" = type { %"struct.std::__1::__cxx_atomic_base_impl.120" }
%"struct.std::__1::__cxx_atomic_base_impl.120" = type { i64 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::Worklist.162"* }
%"class.blink::Worklist.162" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.116" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.176", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.192", [4 x i8] }>
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { i64 }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { float }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.201", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.210" }
%"class.WTF::Vector.210" = type { %"class.WTF::VectorBuffer.211" }
%"class.WTF::VectorBuffer.211" = type { %"class.WTF::VectorBufferBase.212" }
%"class.WTF::VectorBufferBase.212" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.148"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.155"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.264" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__cxx_atomic_impl.261" }
%"struct.std::__1::__cxx_atomic_impl.261" = type { %"struct.std::__1::__cxx_atomic_base_impl.262" }
%"struct.std::__1::__cxx_atomic_base_impl.262" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.263" }
%"class.base::time_internal::TimeBase.263" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i32 }
%"class.blink::DataObject" = type { %"class.blink::Supplementable", %"class.blink::HeapVector", %"class.blink::HeapHashSet", i32, %"class.WTF::String" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, %"class.blink::Member.277" }
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.279" }
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::DataObject"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DataObjectItem"* }
%"class.blink::DataObjectItem" = type { %class.scoped_refptr, i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.8", %class.scoped_refptr.24, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", i64, %"class.WTF::String", %"class.blink::Member.35" }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.276", %"class.blink::CrossVariantMojoRemote" }
%"class.base::RefCountedThreadSafe.276" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.13" }
%"class.blink::CrossVariantMojoRemote" = type { i32, %"class.mojo::ScopedHandleBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional", %"class.absl::optional.19", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.12 }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.12 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.24 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.25", %"class.WTF::Vector.29" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { i8*, i32, i32 }
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { %"class.std::__1::unique_ptr.32"*, i32, i32 }
%"class.std::__1::unique_ptr.32" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type { %"class.blink::HeapMojoRemote", i32, i8, [3 x i8], %"class.WTF::HashSet" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.39" }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.41" }
%"class.WTF::HashTable.41" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.47" }
%"class.WTF::HashSet.47" = type { %"class.WTF::HashTable.48" }
%"class.WTF::HashTable.48" = type <{ %"class.blink::Member.50"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"struct.blink::DataObject::Observer"* }
%"struct.blink::DataObject::Observer" = type { %"class.blink::GarbageCollectedMixin" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.mojo::PendingRemote.71" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.52" = type { %"class.WTF::VectorBuffer.53" }
%"class.WTF::VectorBuffer.53" = type { %"class.WTF::VectorBufferBase.54" }
%"class.WTF::VectorBufferBase.54" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.57" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::mojom::blink::ClipboardFiles"* }
%"class.blink::mojom::blink::ClipboardFiles" = type { %"class.WTF::Vector.60", %"class.WTF::String" }
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"class.mojo::StructPtr.63"*, i32, i32 }
%"class.mojo::StructPtr.63" = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::mojom::blink::DataTransferFile"* }
%"class.blink::mojom::blink::DataTransferFile" = type { %"class.base::FilePath", %"class.base::FilePath", %"class.mojo::PendingRemote.71" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::WebDragData" = type <{ %"class.blink::WebVector", %"class.blink::WebString", i32, [4 x i8] }>
%"class.blink::WebVector" = type { %"class.std::__1::vector.269" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"struct.blink::WebDragData::Item"*, %"struct.blink::WebDragData::Item"*, %"class.std::__1::__compressed_pair.271" }
%"struct.blink::WebDragData::Item" = type { i32, %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", %class.scoped_refptr, %"class.blink::WebData", %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebURL", i64, %"class.blink::WebString" }
%"class.blink::WebData" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.blink::WebDragData::Item"* }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::FileMetadata" = type { %"class.absl::optional.19", i64, i32, %"class.WTF::String" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.281", %"class.blink::FreeList", %"class.WTF::Vector.286" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }

$_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN5blink11WebDragData4ItemaSERKS1_ = comdat any

$_ZN5blink11WebDragData4ItemD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink11WebDragData4ItemC2ERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DataObjectItemEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14DataObjectItemEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10DataObjectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_10DataObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_10DataObjectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_10DataObjectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA_KcEEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_10DataObject8ObserverEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_10DataObjectEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_10DataObjectEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10DataObjectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10DataObjectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink18kMimeTypeTextPlainE = external constant [0 x i8], align 1
@_ZN5blink20kMimeTypeTextURIListE = external constant [0 x i8], align 1
@_ZN8features19kClipboardFilenamesE = external global %"struct.base::Feature", align 8
@_ZTVN5blink10DataObjectE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)* @_ZNK5blink10DataObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::DataObject"*)* @_ZN5blink10DataObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::DataObject"*)* @_ZN5blink10DataObjectD0Ev to i8*)] }, align 8
@_ZN5blink14kMimeTypeFilesE = external constant [0 x i8], align 1
@_ZN5blink17kMimeTypeTextHTMLE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14DataObjectItemEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::DataObjectItem>, WTF::VectorTraits<blink::Member<blink::DataObjectItem> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10DataObjectEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DataObject]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10DataObjectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10DataObjectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_10DataObjectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10DataObjectEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10DataObjectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.16 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10DataObject8ObserverEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [396 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::DataObject::Observer>, blink::Member<blink::DataObject::Observer>, WTF::IdentityExtractor, WTF::MemberHash<blink::DataObject::Observer>, WTF::HashTraits<blink::Member<blink::DataObject::Observer> >, WTF::HashTraits<blink::Member<blink::DataObject::Observer> >, blink::HeapAllocator> >]\00", align 1

@_ZN5blink10DataObjectD1Ev = hidden unnamed_addr alias void (%"class.blink::DataObject"*), void (%"class.blink::DataObject"*)* @_ZN5blink10DataObjectD2Ev
@_ZN5blink10DataObjectC1Ev = hidden unnamed_addr alias void (%"class.blink::DataObject"*), void (%"class.blink::DataObject"*)* @_ZN5blink10DataObjectC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObject"* @_ZN5blink10DataObject19CreateFromClipboardEPNS_15SystemClipboardENS_9PasteModeE(%"class.blink::SystemClipboard"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote.71", align 4
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::Vector.52", align 8
  %9 = alloca %"class.mojo::StructPtr", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::DataObjectItem"*, align 8
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10DataObjectEEEPhm(i64 88) #13
  %14 = bitcast i8* %13 to %"class.blink::DataObject"*
  %15 = bitcast i8* %13 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink10DataObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 32
  %18 = getelementptr inbounds i8, i8* %13, i64 72
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 80
  %21 = bitcast i8* %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 36, i1 false) #13
  %22 = getelementptr inbounds i8, i8* %13, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  %26 = tail call i64 @_ZN5blink15SystemClipboard14SequenceNumberEv(%"class.blink::SystemClipboard"* %0) #13
  %27 = bitcast %"class.WTF::Vector.52"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  call void @_ZN5blink15SystemClipboard18ReadAvailableTypesEv(%"class.WTF::Vector.52"* nonnull sret %8, %"class.blink::SystemClipboard"* %0) #13
  %28 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %8, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %76, label %35

35:                                               ; preds = %2
  %36 = icmp eq i32 %1, 1
  %37 = bitcast %"class.WTF::StringView"* %6 to i8*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %40 = bitcast i8** %39 to %"class.WTF::StringImpl"**
  %41 = bitcast %"class.WTF::StringView"* %6 to i64*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %43 = bitcast %"class.WTF::StringView"* %7 to i8*
  %44 = bitcast %"class.WTF::StringView"* %7 to i64*
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %47 = bitcast %"class.WTF::StringView"* %4 to i8*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  %51 = bitcast %"class.WTF::StringView"* %4 to i64*
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %53 = bitcast %"class.WTF::StringView"* %5 to i8*
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %57 = bitcast %"class.mojo::StructPtr"* %9 to i8*
  %58 = bitcast %"class.mojo::StructPtr"* %9 to i64*
  %59 = bitcast %"class.WTF::String"* %10 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::String"* %11 to i8*
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %63 = bitcast %"class.mojo::PendingRemote.71"* %3 to i8*
  %64 = getelementptr inbounds %"class.mojo::PendingRemote.71", %"class.mojo::PendingRemote.71"* %3, i64 0, i32 0
  %65 = getelementptr inbounds %"class.mojo::PendingRemote.71", %"class.mojo::PendingRemote.71"* %3, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.mojo::PendingRemote.71", %"class.mojo::PendingRemote.71"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.blink::DataObjectItem"** %12 to i8*
  %68 = getelementptr inbounds i8, i8* %13, i64 44
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds i8, i8* %13, i64 40
  %71 = bitcast i8* %70 to i32*
  %72 = bitcast i8* %17 to %"class.blink::Member"**
  %73 = bitcast i8* %17 to %"class.WTF::Vector"*
  br label %113

74:                                               ; preds = %285
  %75 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  br label %76

76:                                               ; preds = %74, %2
  %77 = phi %"class.WTF::String"* [ %75, %74 ], [ %29, %2 ]
  %78 = icmp eq %"class.WTF::String"* %77, null
  br i1 %78, label %112, label %79, !prof !2

79:                                               ; preds = %76
  %80 = bitcast %"class.WTF::String"* %77 to i8*
  %81 = load i32, i32* %30, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %110, label %83, !prof !3

83:                                               ; preds = %79
  %84 = zext i32 %81 to i64
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 %84
  br label %86

86:                                               ; preds = %104, %83
  %87 = phi %"class.WTF::String"* [ %105, %104 ], [ %77, %83 ]
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #13
  br label %104

104:                                              ; preds = %103, %100, %86
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 1
  %106 = icmp eq %"class.WTF::String"* %105, %85
  br i1 %106, label %107, label %86

107:                                              ; preds = %104
  store i32 0, i32* %30, align 4
  %108 = bitcast %"class.WTF::Vector.52"* %8 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %79
  %111 = phi i8* [ %109, %107 ], [ %80, %79 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %28, align 8
  br label %112

112:                                              ; preds = %76, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #13
  ret %"class.blink::DataObject"* %14

113:                                              ; preds = %35, %285
  %114 = phi %"class.WTF::String"* [ %29, %35 ], [ %286, %285 ]
  br i1 %36, label %115, label %134

115:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  store i8* null, i8** %39, align 8
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %120, i64* %41, align 8
  br label %125

121:                                              ; preds = %115
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %38, align 8
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 1
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %40, align 8
  br label %125

125:                                              ; preds = %121, %119
  %126 = phi i32 [ %123, %121 ], [ 0, %119 ]
  store i32 %126, i32* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #13
  %127 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #14
  %128 = icmp ult i64 %127, 4294967296
  br i1 %128, label %130, label %129, !prof !2

129:                                              ; preds = %125
  call void @llvm.trap() #13
  unreachable

130:                                              ; preds = %125
  %131 = trunc i64 %127 to i32
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %132, i64* %44, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i8** %45, align 8
  store i32 %131, i32* %46, align 8
  %133 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  br i1 %133, label %134, label %285

134:                                              ; preds = %130, %113
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #13
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  store i8* null, i8** %49, align 8
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %139, i64* %51, align 8
  br label %144

140:                                              ; preds = %134
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %48, align 8
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 1
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %50, align 8
  br label %144

144:                                              ; preds = %140, %138
  %145 = phi i32 [ %142, %140 ], [ 0, %138 ]
  store i32 %145, i32* %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %146 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0)) #14
  %147 = icmp ult i64 %146, 4294967296
  br i1 %147, label %149, label %148, !prof !2

148:                                              ; preds = %144
  call void @llvm.trap() #13
  unreachable

149:                                              ; preds = %144
  %150 = trunc i64 %146 to i32
  %151 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %151, i64* %54, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), i8** %55, align 8
  store i32 %150, i32* %56, align 8
  %152 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #13
  br i1 %152, label %153, label %259

153:                                              ; preds = %149
  %154 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features19kClipboardFilenamesE) #13
  br i1 %154, label %155, label %259

155:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  call void @_ZN5blink15SystemClipboard9ReadFilesEv(%"class.mojo::StructPtr"* nonnull sret %9, %"class.blink::SystemClipboard"* %0) #13
  %156 = load i64, i64* %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  %157 = call i64 @_ZN5blink15SystemClipboard14SequenceNumberEv(%"class.blink::SystemClipboard"* %0) #13
  %158 = icmp eq i64 %157, %26
  %159 = inttoptr i64 %156 to %"class.blink::mojom::blink::ClipboardFiles"*
  br i1 %158, label %188, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardFiles", %"class.blink::mojom::blink::ClipboardFiles"* %159, i64 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %188, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardFiles", %"class.blink::mojom::blink::ClipboardFiles"* %159, i64 0, i32 0, i32 0, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %184, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardFiles", %"class.blink::mojom::blink::ClipboardFiles"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %170 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %169, align 8
  %171 = zext i32 %166 to i64
  %172 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %170, i64 %171
  br label %173

173:                                              ; preds = %180, %168
  %174 = phi %"class.mojo::StructPtr.63"* [ %181, %180 ], [ %170, %168 ]
  %175 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load %"class.blink::mojom::blink::DataTransferFile"*, %"class.blink::mojom::blink::DataTransferFile"** %175, align 8
  store %"class.blink::mojom::blink::DataTransferFile"* null, %"class.blink::mojom::blink::DataTransferFile"** %175, align 8
  %177 = icmp eq %"class.blink::mojom::blink::DataTransferFile"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %173
  call void @_ZN5blink5mojom5blink16DataTransferFileD1Ev(%"class.blink::mojom::blink::DataTransferFile"* nonnull %176) #13
  %179 = bitcast %"class.blink::mojom::blink::DataTransferFile"* %176 to i8*
  call void @_ZdlPv(i8* %179) #15
  br label %180

180:                                              ; preds = %178, %173
  %181 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %174, i64 1
  %182 = icmp eq %"class.mojo::StructPtr.63"* %181, %172
  br i1 %182, label %183, label %173

183:                                              ; preds = %180
  store i32 0, i32* %165, align 4
  br label %184

184:                                              ; preds = %183, %164
  %185 = inttoptr i64 %156 to i8**
  %186 = load i8*, i8** %185, align 8
  %187 = inttoptr i64 %156 to i64*
  store atomic i64 0, i64* %187 monotonic, align 8
  store i32 0, i32* %161, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %186) #13
  br label %188

188:                                              ; preds = %155, %184, %160
  %189 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardFiles", %"class.blink::mojom::blink::ClipboardFiles"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = load %"class.mojo::StructPtr.63"*, %"class.mojo::StructPtr.63"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardFiles", %"class.blink::mojom::blink::ClipboardFiles"* %159, i64 0, i32 0, i32 0, i32 0, i32 2
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %190, i64 %193
  %195 = icmp eq i32 %192, 0
  br i1 %195, label %253, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.blink::mojom::blink::ClipboardFiles", %"class.blink::mojom::blink::ClipboardFiles"* %159, i64 0, i32 1
  br label %198

198:                                              ; preds = %196, %250
  %199 = phi %"class.mojo::StructPtr.63"* [ %190, %196 ], [ %251, %250 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  %200 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %199, i64 0, i32 0, i32 0, i32 0, i32 0
  %201 = load %"class.blink::mojom::blink::DataTransferFile"*, %"class.blink::mojom::blink::DataTransferFile"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::mojom::blink::DataTransferFile", %"class.blink::mojom::blink::DataTransferFile"* %201, i64 0, i32 0
  %203 = call %"class.WTF::StringImpl"* @_ZN5blink16FilePathToStringERKN4base8FilePathE(%"class.base::FilePath"* dereferenceable(24) %202) #13
  store %"class.WTF::StringImpl"* %203, %"class.WTF::StringImpl"** %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  %204 = load %"class.blink::mojom::blink::DataTransferFile"*, %"class.blink::mojom::blink::DataTransferFile"** %200, align 8
  %205 = getelementptr inbounds %"class.blink::mojom::blink::DataTransferFile", %"class.blink::mojom::blink::DataTransferFile"* %204, i64 0, i32 1
  %206 = call %"class.WTF::StringImpl"* @_ZN5blink16FilePathToStringERKN4base8FilePathE(%"class.base::FilePath"* dereferenceable(24) %205) #13
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %62, align 8
  %207 = load %"class.blink::mojom::blink::DataTransferFile"*, %"class.blink::mojom::blink::DataTransferFile"** %200, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %208 = call i8* @_Znwm(i64 12) #15
  %209 = bitcast i8* %208 to %"class.base::RefCountedData"*
  %210 = getelementptr inbounds %"class.blink::mojom::blink::DataTransferFile", %"class.blink::mojom::blink::DataTransferFile"* %207, i64 0, i32 2, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %64, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %210) #13
  %211 = load i32, i32* %65, align 4
  store i32 0, i32* %65, align 4, !noalias !4
  %212 = load i32, i32* %66, align 4, !noalias !7
  store i32 0, i32* %66, align 4, !noalias !7
  %213 = bitcast i8* %208 to i32*
  store i32 0, i32* %213, align 4
  %214 = getelementptr inbounds i8, i8* %208, i64 4
  %215 = bitcast i8* %214 to i32*
  store i32 %211, i32* %215, align 4
  %216 = getelementptr inbounds i8, i8* %208, i64 8
  %217 = bitcast i8* %216 to i32*
  store i32 %212, i32* %217, align 4, !alias.scope !10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %64) #13
  %218 = atomicrmw add i32* %213, i32 1 monotonic
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  call void @_ZN5blink10DataObject11AddFilenameERKN3WTF6StringES4_S4_13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::DataObject"* %14, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %197, %"class.base::RefCountedData"* nonnull %209)
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %198
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #13
  br label %234

234:                                              ; preds = %198, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %235) #13
  br label %250

250:                                              ; preds = %234, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  %251 = getelementptr inbounds %"class.mojo::StructPtr.63", %"class.mojo::StructPtr.63"* %199, i64 1
  %252 = icmp eq %"class.mojo::StructPtr.63"* %251, %194
  br i1 %252, label %253, label %198

253:                                              ; preds = %250, %188
  %254 = icmp eq i64 %156, 0
  br i1 %254, label %259, label %255

255:                                              ; preds = %253
  %256 = load i32, i32* %191, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %259, label %258

258:                                              ; preds = %255
  call void @_ZN5blink25DraggedIsolatedFileSystem20PrepareForDataObjectEPNS_10DataObjectE(%"class.blink::DataObject"* %14) #13
  br label %282

259:                                              ; preds = %253, %149, %153, %255
  %260 = phi %"class.blink::mojom::blink::ClipboardFiles"* [ %159, %255 ], [ null, %253 ], [ null, %153 ], [ null, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  %261 = call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem19CreateFromClipboardEPNS_15SystemClipboardERKN3WTF6StringEm(%"class.blink::SystemClipboard"* %0, %"class.WTF::String"* dereferenceable(8) %114, i64 %26) #13
  store %"class.blink::DataObjectItem"* %261, %"class.blink::DataObjectItem"** %12, align 8
  %262 = load i32, i32* %69, align 4
  %263 = load i32, i32* %71, align 8
  %264 = icmp eq i32 %262, %263
  br i1 %264, label %279, label %265, !prof !3

265:                                              ; preds = %259
  %266 = ptrtoint %"class.blink::DataObjectItem"* %261 to i64
  %267 = load %"class.blink::Member"*, %"class.blink::Member"** %72, align 8
  %268 = zext i32 %262 to i64
  %269 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %267, i64 %268
  %270 = bitcast %"class.blink::Member"* %269 to i64*
  store atomic i64 %266, i64* %270 monotonic, align 8
  %271 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %276, label %273

273:                                              ; preds = %265
  %274 = bitcast %"class.blink::DataObjectItem"* %261 to i8*
  %275 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %274) #13
  br label %276

276:                                              ; preds = %273, %265
  %277 = load i32, i32* %69, align 4
  %278 = add i32 %277, 1
  store i32 %278, i32* %69, align 4
  br label %280

279:                                              ; preds = %259
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* %73, %"class.blink::DataObjectItem"** nonnull dereferenceable(8) %12) #13
  br label %280

280:                                              ; preds = %279, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  %281 = icmp eq %"class.blink::mojom::blink::ClipboardFiles"* %260, null
  br i1 %281, label %285, label %282

282:                                              ; preds = %258, %280
  %283 = phi %"class.blink::mojom::blink::ClipboardFiles"* [ %159, %258 ], [ %260, %280 ]
  call void @_ZN5blink5mojom5blink14ClipboardFilesD1Ev(%"class.blink::mojom::blink::ClipboardFiles"* nonnull %283) #13
  %284 = bitcast %"class.blink::mojom::blink::ClipboardFiles"* %283 to i8*
  call void @_ZdlPv(i8* %284) #15
  br label %285

285:                                              ; preds = %130, %282, %280
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 1
  %287 = icmp eq %"class.WTF::String"* %286, %33
  br i1 %287, label %74, label %113
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObject"* @_ZN5blink10DataObject6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10DataObjectEEEPhm(i64 88) #13
  %2 = bitcast i8* %1 to %"class.blink::DataObject"*
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink10DataObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 32
  %6 = getelementptr inbounds i8, i8* %1, i64 72
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 80
  %9 = bitcast i8* %8 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 36, i1 false) #13
  %10 = getelementptr inbounds i8, i8* %1, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  ret %"class.blink::DataObject"* %2
}

declare i64 @_ZN5blink15SystemClipboard14SequenceNumberEv(%"class.blink::SystemClipboard"*) local_unnamed_addr #2

declare void @_ZN5blink15SystemClipboard18ReadAvailableTypesEv(%"class.WTF::Vector.52"* sret, %"class.blink::SystemClipboard"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink15SystemClipboard9ReadFilesEv(%"class.mojo::StructPtr"* sret, %"class.blink::SystemClipboard"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject11AddFilenameERKN3WTF6StringES4_S4_13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.base::RefCountedData"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %5
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 216) #13
  %15 = bitcast i8* %14 to %"class.blink::File"*
  tail call void @_ZN5blink4FileC1ERKN3WTF6StringENS0_23ContentTypeLookupPolicyENS0_14UserVisibilityE(%"class.blink::File"* %15, %"class.WTF::String"* dereferenceable(8) %1, i32 1, i32 0) #13
  br label %19

16:                                               ; preds = %9
  %17 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 216) #13
  %18 = bitcast i8* %17 to %"class.blink::File"*
  tail call void @_ZN5blink4FileC1ERKN3WTF6StringES4_NS0_23ContentTypeLookupPolicyENS0_14UserVisibilityE(%"class.blink::File"* %18, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, i32 1, i32 0) #13
  br label %19

19:                                               ; preds = %16, %13
  %20 = phi i8* [ %17, %16 ], [ %14, %13 ]
  %21 = phi %"class.blink::File"* [ %18, %16 ], [ %15, %13 ]
  %22 = getelementptr inbounds i8, i8* %20, i64 -4
  %23 = bitcast i8* %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = or i16 %24, 1
  store atomic i16 %25, i16* %23 release, align 2
  %26 = tail call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem30CreateFromFileWithFileSystemIdEPNS_4FileERKN3WTF6StringE13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::File"* %21, %"class.WTF::String"* dereferenceable(8) %3, %"class.base::RefCountedData"* %4) #13
  tail call void @_ZN5blink10DataObject19InternalAddFileItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %26)
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink16FilePathToStringERKN4base8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink25DraggedIsolatedFileSystem20PrepareForDataObjectEPNS_10DataObjectE(%"class.blink::DataObject"*) local_unnamed_addr #2

declare %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem19CreateFromClipboardEPNS_15SystemClipboardERKN3WTF6StringEm(%"class.blink::SystemClipboard"*, %"class.WTF::String"* dereferenceable(8), i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObject"* @_ZN5blink10DataObject16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10DataObjectEEEPhm(i64 88) #13
  %4 = bitcast i8* %3 to %"class.blink::DataObject"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink10DataObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 32
  %8 = getelementptr inbounds i8, i8* %3, i64 72
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 80
  %11 = bitcast i8* %10 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 36, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %3, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i64 %17) #13
  %18 = call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem16CreateFromStringERKN3WTF6StringES4_(%"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %0) #13
  %19 = call zeroext i1 @_ZN5blink10DataObject21InternalAddStringItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %4, %"class.blink::DataObjectItem"* %18) #13
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %1, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  ret %"class.blink::DataObject"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink10DataObject3AddERKN3WTF6StringES4_(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem16CreateFromStringERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %1) #13
  %5 = tail call zeroext i1 @_ZN5blink10DataObject21InternalAddStringItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %4)
  %6 = select i1 %5, %"class.blink::DataObjectItem"* %4, %"class.blink::DataObjectItem"* null
  ret %"class.blink::DataObjectItem"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObjectD2Ev(%"class.blink::DataObject"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink10DataObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObjectD0Ev(%"class.blink::DataObject"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink10DataObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink10DataObject6lengthEv(%"class.blink::DataObject"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink10DataObject4ItemEj(%"class.blink::DataObject"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0
  %8 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %1) #13
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"class.blink::DataObjectItem"* [ %10, %6 ], [ null, %2 ]
  ret %"class.blink::DataObjectItem"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject10DeleteItemEj(%"class.blink::DataObject"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %48

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %7, i32 %1)
  %8 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %12, i64 %15
  br i1 %10, label %48, label %17

17:                                               ; preds = %6
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17, %23
  %20 = phi %"class.blink::Member.50"* [ %24, %23 ], [ %12, %17 ]
  %21 = bitcast %"class.blink::Member.50"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %26 [
    i64 -1, label %23
    i64 0, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %20, i64 1
  %25 = icmp eq %"class.blink::Member.50"* %24, %16
  br i1 %25, label %48, label %19

26:                                               ; preds = %19, %17
  %27 = phi %"class.blink::Member.50"* [ %12, %17 ], [ %20, %19 ]
  %28 = icmp eq %"class.blink::Member.50"* %27, %16
  br i1 %28, label %48, label %29

29:                                               ; preds = %26, %46
  %30 = phi %"class.blink::Member.50"* [ %40, %46 ], [ %27, %26 ]
  %31 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %30, i64 0, i32 0, i32 0
  %32 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %31, align 8
  %33 = bitcast %"struct.blink::DataObject::Observer"* %32 to void (%"struct.blink::DataObject::Observer"*)***
  %34 = load void (%"struct.blink::DataObject::Observer"*)**, void (%"struct.blink::DataObject::Observer"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %34, i64 1
  %36 = load void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %35, align 8
  tail call void %36(%"struct.blink::DataObject::Observer"* %32) #13
  %37 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %30, i64 1
  %38 = icmp eq %"class.blink::Member.50"* %37, %16
  br i1 %38, label %48, label %39

39:                                               ; preds = %29, %43
  %40 = phi %"class.blink::Member.50"* [ %44, %43 ], [ %37, %29 ]
  %41 = bitcast %"class.blink::Member.50"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  switch i64 %42, label %46 [
    i64 -1, label %43
    i64 0, label %43
  ]

43:                                               ; preds = %39, %39
  %44 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %40, i64 1
  %45 = icmp eq %"class.blink::Member.50"* %44, %16
  br i1 %45, label %48, label %39

46:                                               ; preds = %39
  %47 = icmp eq %"class.blink::Member.50"* %40, %16
  br i1 %47, label %48, label %29

48:                                               ; preds = %23, %46, %29, %43, %26, %6, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member"* %26, null
  %32 = icmp ne %"class.blink::Member"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !2

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !13

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 1
  %68 = bitcast %"class.blink::Member"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 2
  %73 = bitcast %"class.blink::Member"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 3
  %78 = bitcast %"class.blink::Member"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 4
  %83 = bitcast %"class.blink::Member"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 5
  %88 = bitcast %"class.blink::Member"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 6
  %93 = bitcast %"class.blink::Member"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 7
  %98 = bitcast %"class.blink::Member"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 8
  %103 = icmp ult %"class.blink::Member"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member"* %30 to i64
  %106 = ptrtoint %"class.blink::Member"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #13
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %128, i64 -1
  %130 = bitcast %"class.blink::Member"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #13
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10DataObject21NotifyItemListChangedEv(%"class.blink::DataObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %6, i64 %9
  br i1 %4, label %23, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %11, %17
  %14 = phi %"class.blink::Member.50"* [ %18, %17 ], [ %6, %11 ]
  %15 = bitcast %"class.blink::Member.50"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  switch i64 %16, label %20 [
    i64 -1, label %17
    i64 0, label %17
  ]

17:                                               ; preds = %13, %13
  %18 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %14, i64 1
  %19 = icmp eq %"class.blink::Member.50"* %18, %10
  br i1 %19, label %23, label %13

20:                                               ; preds = %13, %11
  %21 = phi %"class.blink::Member.50"* [ %6, %11 ], [ %14, %13 ]
  %22 = icmp eq %"class.blink::Member.50"* %21, %10
  br i1 %22, label %23, label %24

23:                                               ; preds = %17, %24, %41, %38, %1, %20
  ret void

24:                                               ; preds = %20, %41
  %25 = phi %"class.blink::Member.50"* [ %35, %41 ], [ %21, %20 ]
  %26 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %26, align 8
  %28 = bitcast %"struct.blink::DataObject::Observer"* %27 to void (%"struct.blink::DataObject::Observer"*)***
  %29 = load void (%"struct.blink::DataObject::Observer"*)**, void (%"struct.blink::DataObject::Observer"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %29, i64 1
  %31 = load void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %30, align 8
  tail call void %31(%"struct.blink::DataObject::Observer"* %27) #13
  %32 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %25, i64 1
  %33 = icmp eq %"class.blink::Member.50"* %32, %10
  br i1 %33, label %23, label %34

34:                                               ; preds = %24, %38
  %35 = phi %"class.blink::Member.50"* [ %39, %38 ], [ %32, %24 ]
  %36 = bitcast %"class.blink::Member.50"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  switch i64 %37, label %41 [
    i64 -1, label %38
    i64 0, label %38
  ]

38:                                               ; preds = %34, %34
  %39 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %35, i64 1
  %40 = icmp eq %"class.blink::Member.50"* %39, %10
  br i1 %40, label %23, label %34

41:                                               ; preds = %34
  %42 = icmp eq %"class.blink::Member.50"* %35, %10
  br i1 %42, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject8ClearAllEv(%"class.blink::DataObject"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %58, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.WTF::Vector"* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = zext i32 %4 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #13
  store i32 0, i32* %3, align 4
  %15 = load i8*, i8** %11, align 8
  %16 = bitcast %"class.WTF::Vector"* %2 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  store i32 0, i32* %7, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %15) #13
  br label %17

17:                                               ; preds = %6, %10
  %18 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %22, i64 %25
  br i1 %20, label %58, label %27

27:                                               ; preds = %17
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"class.blink::Member.50"* [ %34, %33 ], [ %22, %27 ]
  %31 = bitcast %"class.blink::Member.50"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %36 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %30, i64 1
  %35 = icmp eq %"class.blink::Member.50"* %34, %26
  br i1 %35, label %58, label %29

36:                                               ; preds = %29, %27
  %37 = phi %"class.blink::Member.50"* [ %22, %27 ], [ %30, %29 ]
  %38 = icmp eq %"class.blink::Member.50"* %37, %26
  br i1 %38, label %58, label %39

39:                                               ; preds = %36, %56
  %40 = phi %"class.blink::Member.50"* [ %50, %56 ], [ %37, %36 ]
  %41 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %40, i64 0, i32 0, i32 0
  %42 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %41, align 8
  %43 = bitcast %"struct.blink::DataObject::Observer"* %42 to void (%"struct.blink::DataObject::Observer"*)***
  %44 = load void (%"struct.blink::DataObject::Observer"*)**, void (%"struct.blink::DataObject::Observer"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %44, i64 1
  %46 = load void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %45, align 8
  tail call void %46(%"struct.blink::DataObject::Observer"* %42) #13
  %47 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %40, i64 1
  %48 = icmp eq %"class.blink::Member.50"* %47, %26
  br i1 %48, label %58, label %49

49:                                               ; preds = %39, %53
  %50 = phi %"class.blink::Member.50"* [ %54, %53 ], [ %47, %39 ]
  %51 = bitcast %"class.blink::Member.50"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  switch i64 %52, label %56 [
    i64 -1, label %53
    i64 0, label %53
  ]

53:                                               ; preds = %49, %49
  %54 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %50, i64 1
  %55 = icmp eq %"class.blink::Member.50"* %54, %26
  br i1 %55, label %58, label %49

56:                                               ; preds = %49
  %57 = icmp eq %"class.blink::Member.50"* %50, %26
  br i1 %57, label %58, label %39

58:                                               ; preds = %33, %56, %39, %53, %36, %17, %1
  ret void
}

declare %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem16CreateFromStringERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10DataObject21InternalAddStringItemEPNS_14DataObjectItemE(%"class.blink::DataObject"*, %"class.blink::DataObjectItem"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DataObjectItem"*, align 8
  store %"class.blink::DataObjectItem"* %1, %"class.blink::DataObjectItem"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %98, label %12

12:                                               ; preds = %2, %93
  %13 = phi %"class.blink::Member"* [ %94, %93 ], [ %6, %2 ]
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %93

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %15, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #13
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #13
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %19, %23, %38
  %41 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %3, align 8
  %42 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %41, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %62, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i33
  %54 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #13
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %50
  tail call void @llvm.trap() #13
  unreachable

60:                                               ; preds = %50
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %51, align 4
  br label %64

62:                                               ; preds = %40
  %63 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* null) #13
  br label %77

64:                                               ; preds = %60, %45
  %65 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* nonnull %43) #13
  %66 = load atomic i32, i32* %46 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #13
  br label %77

77:                                               ; preds = %62, %73, %76
  %78 = phi i1 [ %63, %62 ], [ %65, %73 ], [ %65, %76 ]
  br i1 %22, label %92, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br i1 %78, label %160, label %93

92:                                               ; preds = %88, %77
  br i1 %78, label %160, label %93

93:                                               ; preds = %12, %92, %91
  %94 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 1
  %95 = icmp eq %"class.blink::Member"* %94, %10
  br i1 %95, label %96, label %12

96:                                               ; preds = %93
  %97 = load i32, i32* %7, align 4
  br label %98

98:                                               ; preds = %96, %2
  %99 = phi i32 [ %97, %96 ], [ 0, %2 ]
  %100 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %99, %101
  br i1 %102, label %118, label %103, !prof !3

103:                                              ; preds = %98
  %104 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %105 = zext i32 %99 to i64
  %106 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %104, i64 %105
  %107 = bitcast %"class.blink::DataObjectItem"** %3 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.blink::Member"* %106 to i64*
  store atomic i64 %108, i64* %109 monotonic, align 8
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %103
  %113 = inttoptr i64 %108 to i8*
  %114 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %113) #13
  br label %115

115:                                              ; preds = %112, %103
  %116 = load i32, i32* %7, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %7, align 4
  br label %119

118:                                              ; preds = %98
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %4, %"class.blink::DataObjectItem"** nonnull dereferenceable(8) %3) #13
  br label %119

119:                                              ; preds = %115, %118
  %120 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %124 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %124, i64 %127
  br i1 %122, label %160, label %129

129:                                              ; preds = %119
  %130 = icmp eq i32 %126, 0
  br i1 %130, label %138, label %131

131:                                              ; preds = %129, %135
  %132 = phi %"class.blink::Member.50"* [ %136, %135 ], [ %124, %129 ]
  %133 = bitcast %"class.blink::Member.50"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  switch i64 %134, label %138 [
    i64 -1, label %135
    i64 0, label %135
  ]

135:                                              ; preds = %131, %131
  %136 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %132, i64 1
  %137 = icmp eq %"class.blink::Member.50"* %136, %128
  br i1 %137, label %160, label %131

138:                                              ; preds = %131, %129
  %139 = phi %"class.blink::Member.50"* [ %124, %129 ], [ %132, %131 ]
  %140 = icmp eq %"class.blink::Member.50"* %139, %128
  br i1 %140, label %160, label %141

141:                                              ; preds = %138, %158
  %142 = phi %"class.blink::Member.50"* [ %152, %158 ], [ %139, %138 ]
  %143 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %142, i64 0, i32 0, i32 0
  %144 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %143, align 8
  %145 = bitcast %"struct.blink::DataObject::Observer"* %144 to void (%"struct.blink::DataObject::Observer"*)***
  %146 = load void (%"struct.blink::DataObject::Observer"*)**, void (%"struct.blink::DataObject::Observer"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %146, i64 1
  %148 = load void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %147, align 8
  call void %148(%"struct.blink::DataObject::Observer"* %144) #13
  %149 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %142, i64 1
  %150 = icmp eq %"class.blink::Member.50"* %149, %128
  br i1 %150, label %160, label %151

151:                                              ; preds = %141, %155
  %152 = phi %"class.blink::Member.50"* [ %156, %155 ], [ %149, %141 ]
  %153 = bitcast %"class.blink::Member.50"* %152 to i64*
  %154 = load i64, i64* %153, align 8
  switch i64 %154, label %158 [
    i64 -1, label %155
    i64 0, label %155
  ]

155:                                              ; preds = %151, %151
  %156 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %152, i64 1
  %157 = icmp eq %"class.blink::Member.50"* %156, %128
  br i1 %157, label %160, label %151

158:                                              ; preds = %151
  %159 = icmp eq %"class.blink::Member.50"* %152, %128
  br i1 %159, label %160, label %141

160:                                              ; preds = %91, %92, %135, %158, %141, %155, %138, %119
  %161 = phi i1 [ true, %119 ], [ true, %138 ], [ true, %155 ], [ true, %141 ], [ true, %158 ], [ true, %135 ], [ false, %92 ], [ false, %91 ]
  ret i1 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink10DataObject3AddEPNS_4FileE(%"class.blink::DataObject"*, %"class.blink::File"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::File"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem14CreateFromFileEPNS_4FileE(%"class.blink::File"* nonnull %1) #13
  tail call void @_ZN5blink10DataObject19InternalAddFileItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %5)
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi %"class.blink::DataObjectItem"* [ %5, %4 ], [ null, %2 ]
  ret %"class.blink::DataObjectItem"* %7
}

declare %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem14CreateFromFileEPNS_4FileE(%"class.blink::File"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject19InternalAddFileItemEPNS_14DataObjectItemE(%"class.blink::DataObject"*, %"class.blink::DataObjectItem"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DataObjectItem"*, align 8
  store %"class.blink::DataObjectItem"* %1, %"class.blink::DataObjectItem"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %25, label %10, !prof !3

10:                                               ; preds = %2
  %11 = ptrtoint %"class.blink::DataObjectItem"* %1 to i64
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %12, align 8
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 %14
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  store atomic i64 %11, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.blink::DataObjectItem"* %1 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #13
  br label %22

22:                                               ; preds = %19, %10
  %23 = load i32, i32* %5, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %5, align 4
  br label %26

25:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %4, %"class.blink::DataObjectItem"** nonnull dereferenceable(8) %3) #13
  br label %26

26:                                               ; preds = %22, %25
  %27 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %31, i64 %34
  br i1 %29, label %67, label %36

36:                                               ; preds = %26
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %36, %42
  %39 = phi %"class.blink::Member.50"* [ %43, %42 ], [ %31, %36 ]
  %40 = bitcast %"class.blink::Member.50"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %39, i64 1
  %44 = icmp eq %"class.blink::Member.50"* %43, %35
  br i1 %44, label %67, label %38

45:                                               ; preds = %38, %36
  %46 = phi %"class.blink::Member.50"* [ %31, %36 ], [ %39, %38 ]
  %47 = icmp eq %"class.blink::Member.50"* %46, %35
  br i1 %47, label %67, label %48

48:                                               ; preds = %45, %65
  %49 = phi %"class.blink::Member.50"* [ %59, %65 ], [ %46, %45 ]
  %50 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %49, i64 0, i32 0, i32 0
  %51 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %50, align 8
  %52 = bitcast %"struct.blink::DataObject::Observer"* %51 to void (%"struct.blink::DataObject::Observer"*)***
  %53 = load void (%"struct.blink::DataObject::Observer"*)**, void (%"struct.blink::DataObject::Observer"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %53, i64 1
  %55 = load void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %54, align 8
  call void %55(%"struct.blink::DataObject::Observer"* %51) #13
  %56 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %49, i64 1
  %57 = icmp eq %"class.blink::Member.50"* %56, %35
  br i1 %57, label %67, label %58

58:                                               ; preds = %48, %62
  %59 = phi %"class.blink::Member.50"* [ %63, %62 ], [ %56, %48 ]
  %60 = bitcast %"class.blink::Member.50"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  switch i64 %61, label %65 [
    i64 -1, label %62
    i64 0, label %62
  ]

62:                                               ; preds = %58, %58
  %63 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %59, i64 1
  %64 = icmp eq %"class.blink::Member.50"* %63, %35
  br i1 %64, label %67, label %58

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Member.50"* %59, %35
  br i1 %66, label %67, label %48

67:                                               ; preds = %42, %48, %65, %62, %26, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink10DataObject3AddEPNS_4FileERKN3WTF6StringE(%"class.blink::DataObject"*, %"class.blink::File"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::File"* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem30CreateFromFileWithFileSystemIdEPNS_4FileERKN3WTF6StringE13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::File"* nonnull %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::RefCountedData"* null) #13
  tail call void @_ZN5blink10DataObject19InternalAddFileItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %6)
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi %"class.blink::DataObjectItem"* [ %6, %5 ], [ null, %3 ]
  ret %"class.blink::DataObjectItem"* %8
}

declare %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem30CreateFromFileWithFileSystemIdEPNS_4FileERKN3WTF6StringE13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::File"*, %"class.WTF::String"* dereferenceable(8), %"class.base::RefCountedData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject9ClearDataERKN3WTF6StringE(%"class.blink::DataObject"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %105, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %7, %101
  %10 = phi i32 [ 0, %7 ], [ %102, %101 ]
  %11 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %10) #13
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %13, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %101

17:                                               ; preds = %9
  %18 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %10) #13
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %44

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #13
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %44

41:                                               ; preds = %17
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %42) #13
  br i1 %43, label %60, label %101

44:                                               ; preds = %39, %24
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %46 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %22, %"class.WTF::StringImpl"* %45) #13
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %44
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %44
  %56 = phi i32 [ %54, %53 ], [ %52, %44 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #13
  br i1 %46, label %60, label %101

59:                                               ; preds = %55
  br i1 %46, label %60, label %101

60:                                               ; preds = %41, %58, %59
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %3, i32 %10)
  %61 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %65, i64 %68
  br i1 %63, label %105, label %70

70:                                               ; preds = %60
  %71 = icmp eq i32 %67, 0
  br i1 %71, label %79, label %72

72:                                               ; preds = %70, %76
  %73 = phi %"class.blink::Member.50"* [ %77, %76 ], [ %65, %70 ]
  %74 = bitcast %"class.blink::Member.50"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %79 [
    i64 -1, label %76
    i64 0, label %76
  ]

76:                                               ; preds = %72, %72
  %77 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %73, i64 1
  %78 = icmp eq %"class.blink::Member.50"* %77, %69
  br i1 %78, label %105, label %72

79:                                               ; preds = %72, %70
  %80 = phi %"class.blink::Member.50"* [ %65, %70 ], [ %73, %72 ]
  %81 = icmp eq %"class.blink::Member.50"* %80, %69
  br i1 %81, label %105, label %82

82:                                               ; preds = %79, %99
  %83 = phi %"class.blink::Member.50"* [ %93, %99 ], [ %80, %79 ]
  %84 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %83, i64 0, i32 0, i32 0
  %85 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %84, align 8
  %86 = bitcast %"struct.blink::DataObject::Observer"* %85 to void (%"struct.blink::DataObject::Observer"*)***
  %87 = load void (%"struct.blink::DataObject::Observer"*)**, void (%"struct.blink::DataObject::Observer"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %87, i64 1
  %89 = load void (%"struct.blink::DataObject::Observer"*)*, void (%"struct.blink::DataObject::Observer"*)** %88, align 8
  tail call void %89(%"struct.blink::DataObject::Observer"* %85) #13
  %90 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %83, i64 1
  %91 = icmp eq %"class.blink::Member.50"* %90, %69
  br i1 %91, label %105, label %92

92:                                               ; preds = %82, %96
  %93 = phi %"class.blink::Member.50"* [ %97, %96 ], [ %90, %82 ]
  %94 = bitcast %"class.blink::Member.50"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  switch i64 %95, label %99 [
    i64 -1, label %96
    i64 0, label %96
  ]

96:                                               ; preds = %92, %92
  %97 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %93, i64 1
  %98 = icmp eq %"class.blink::Member.50"* %97, %69
  br i1 %98, label %105, label %92

99:                                               ; preds = %92
  %100 = icmp eq %"class.blink::Member.50"* %93, %69
  br i1 %100, label %105, label %82

101:                                              ; preds = %41, %9, %58, %59
  %102 = add nuw i32 %10, 1
  %103 = load i32, i32* %4, align 4
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %9, label %105

105:                                              ; preds = %101, %76, %99, %82, %96, %2, %79, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.52"* noalias sret, %"class.blink::DataObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.52"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %95, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %3 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %21

18:                                               ; preds = %79
  %19 = and i8 %80, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %95, label %83

21:                                               ; preds = %15, %79
  %22 = phi %"class.blink::Member"* [ %9, %15 ], [ %81, %79 ]
  %23 = phi i8 [ 0, %15 ], [ %80, %79 ]
  %24 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %22, i64 0, i32 0, i32 0
  %25 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  switch i32 %27, label %79 [
    i32 0, label %28
    i32 1, label %78
  ]

28:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %29 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %25, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %28, %32, %47
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %17, align 8
  %50 = load i32, i32* %6, align 4
  %51 = load i32, i32* %5, align 8
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %61, label %53, !prof !3

53:                                               ; preds = %49
  %54 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %55 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %56 = zext i32 %50 to i64
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 %56
  %58 = bitcast %"class.WTF::String"* %57 to i64*
  store i64 %54, i64* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %59 = load i32, i32* %6, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %6, align 4
  br label %77

61:                                               ; preds = %49
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.52"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %77

77:                                               ; preds = %53, %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %79

78:                                               ; preds = %21
  br label %79

79:                                               ; preds = %21, %78, %77
  %80 = phi i8 [ %23, %21 ], [ 1, %78 ], [ %23, %77 ]
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %22, i64 1
  %82 = icmp eq %"class.blink::Member"* %81, %13
  br i1 %82, label %18, label %21

83:                                               ; preds = %18
  %84 = load i32, i32* %6, align 4
  %85 = load i32, i32* %5, align 8
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %94, label %87, !prof !3

87:                                               ; preds = %83
  %88 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %89 = zext i32 %84 to i64
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 %89
  %91 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink14kMimeTypeFilesE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %90, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink14kMimeTypeFilesE, i64 0, i64 0), i64 %91) #13
  %92 = load i32, i32* %6, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %6, align 4
  br label %95

94:                                               ; preds = %83
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA_KcEEvOT_(%"class.WTF::Vector.52"* %0, [0 x i8]* nonnull @_ZN5blink14kMimeTypeFilesE) #13
  br label %95

95:                                               ; preds = %2, %94, %87, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink10DataObject7GetDataERKN3WTF6StringE(%"class.blink::DataObject"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %66, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %10, %59
  %13 = phi %"class.blink::Member"* [ %4, %10 ], [ %60, %59 ]
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %59

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %15, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #13
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #13
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %43

40:                                               ; preds = %19
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %42 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %41) #13
  br i1 %42, label %62, label %59

43:                                               ; preds = %38, %23
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %45 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %21, %"class.WTF::StringImpl"* %44) #13
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %43
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %43
  %55 = phi i32 [ %53, %52 ], [ %51, %43 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br i1 %45, label %62, label %59

58:                                               ; preds = %54
  br i1 %45, label %62, label %59

59:                                               ; preds = %40, %12, %58, %57
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 1
  %61 = icmp eq %"class.blink::Member"* %60, %8
  br i1 %61, label %66, label %12

62:                                               ; preds = %40, %57, %58
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %64 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %63, align 8
  %65 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem11GetAsStringEv(%"class.blink::DataObjectItem"* %64) #13
  br label %66

66:                                               ; preds = %59, %2, %62
  %67 = phi %"class.WTF::StringImpl"* [ %65, %62 ], [ null, %2 ], [ null, %59 ]
  ret %"class.WTF::StringImpl"* %67
}

declare %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem11GetAsStringEv(%"class.blink::DataObjectItem"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject7SetDataERKN3WTF6StringES4_(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink10DataObject9ClearDataERKN3WTF6StringE(%"class.blink::DataObject"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %4 = tail call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem16CreateFromStringERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #13
  %5 = tail call zeroext i1 @_ZN5blink10DataObject21InternalAddStringItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10DataObject11UrlAndTitleERN3WTF6StringEPS2_(%"class.blink::DataObject"* nocapture readonly, %"class.WTF::String"* nocapture dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), i64 %7) #13
  %8 = call %"class.blink::DataObjectItem"* @_ZNK5blink10DataObject14FindStringItemERKN3WTF6StringE(%"class.blink::DataObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %25

25:                                               ; preds = %3, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %26 = icmp eq %"class.blink::DataObjectItem"* %8, null
  br i1 %26, label %108, label %27

27:                                               ; preds = %25
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = call %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem11GetAsStringEv(%"class.blink::DataObjectItem"* nonnull %8) #13
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = call %"class.WTF::StringImpl"* @_ZN5blink19ConvertURIListToURLERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %32 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %33 = bitcast %"class.WTF::String"* %1 to i64*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #13
  br label %50

50:                                               ; preds = %49, %46, %27
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #13
  br label %66

66:                                               ; preds = %50, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  %67 = icmp eq %"class.WTF::String"* %2, null
  br i1 %67, label %108, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %8, i64 0, i32 8, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #13
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  call void @llvm.trap() #13
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %68, %72, %87
  %90 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %91 = bitcast %"class.WTF::String"* %2 to i64*
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  store i64 %90, i64* %91, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #13
  br label %108

108:                                              ; preds = %89, %104, %107, %66, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZNK5blink10DataObject14FindStringItemERKN3WTF6StringE(%"class.blink::DataObject"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %65, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %10, %59
  %13 = phi %"class.blink::Member"* [ %4, %10 ], [ %60, %59 ]
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %59

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %15, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #13
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #13
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %43

40:                                               ; preds = %19
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %42 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %41) #13
  br i1 %42, label %62, label %59

43:                                               ; preds = %38, %23
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %45 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %21, %"class.WTF::StringImpl"* %44) #13
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %43
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %43
  %55 = phi i32 [ %53, %52 ], [ %51, %43 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br i1 %45, label %62, label %59

58:                                               ; preds = %54
  br i1 %45, label %62, label %59

59:                                               ; preds = %40, %12, %58, %57
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 1
  %61 = icmp eq %"class.blink::Member"* %60, %8
  br i1 %61, label %65, label %12

62:                                               ; preds = %40, %57, %58
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %64 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %63, align 8
  br label %65

65:                                               ; preds = %59, %2, %62
  %66 = phi %"class.blink::DataObjectItem"* [ %64, %62 ], [ null, %2 ], [ null, %59 ]
  ret %"class.blink::DataObjectItem"* %66
}

declare %"class.WTF::StringImpl"* @_ZN5blink19ConvertURIListToURLERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject14SetURLAndTitleERKN3WTF6StringES4_(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), i64 %6) #13
  call void @_ZN5blink10DataObject9ClearDataERKN3WTF6StringE(%"class.blink::DataObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %3, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %24 = call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem13CreateFromURLERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #13
  %25 = call zeroext i1 @_ZN5blink10DataObject21InternalAddStringItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %24)
  ret void
}

declare %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem13CreateFromURLERKN3WTF6StringES4_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10DataObject14HtmlAndBaseURLERN3WTF6StringERNS_4KURLE(%"class.blink::DataObject"* nocapture readonly, %"class.WTF::String"* nocapture dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i64 %7) #13
  %8 = call %"class.blink::DataObjectItem"* @_ZNK5blink10DataObject14FindStringItemERKN3WTF6StringE(%"class.blink::DataObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %25

25:                                               ; preds = %3, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %26 = icmp eq %"class.blink::DataObjectItem"* %8, null
  br i1 %26, label %51, label %27

27:                                               ; preds = %25
  %28 = call %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem11GetAsStringEv(%"class.blink::DataObjectItem"* nonnull %8) #13
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  %30 = bitcast %"class.WTF::String"* %1 to i64*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %46, %43, %27
  %48 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %48) #13
  %49 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %8, i64 0, i32 9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %5, %"class.blink::KURL"* dereferenceable(112) %49) #13
  %50 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %2, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %48) #13
  br label %51

51:                                               ; preds = %25, %47
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject17SetHTMLAndBaseURLERKN3WTF6StringERKNS_4KURLE(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i64 %6) #13
  call void @_ZN5blink10DataObject9ClearDataERKN3WTF6StringE(%"class.blink::DataObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %3, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %24 = call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem14CreateFromHTMLERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::KURL"* dereferenceable(112) %2) #13
  %25 = call zeroext i1 @_ZN5blink10DataObject21InternalAddStringItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %24)
  ret void
}

declare %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem14CreateFromHTMLERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10DataObject17ContainsFilenamesEv(%"class.blink::DataObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member"*, %"class.blink::Member"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %17, label %11

9:                                                ; preds = %11
  %10 = icmp eq %"class.blink::Member"* %16, %7
  br i1 %10, label %17, label %11

11:                                               ; preds = %1, %9
  %12 = phi %"class.blink::Member"* [ %16, %9 ], [ %3, %1 ]
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink14DataObjectItem10IsFilenameEv(%"class.blink::DataObjectItem"* %14) #13
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 1
  br i1 %15, label %17, label %9

17:                                               ; preds = %9, %11, %1
  %18 = phi i1 [ false, %1 ], [ true, %11 ], [ false, %9 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK5blink14DataObjectItem10IsFilenameEv(%"class.blink::DataObjectItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10DataObject9FilenamesEv(%"class.WTF::Vector.52"* noalias sret, %"class.blink::DataObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.52"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member"*, %"class.blink::Member"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %2, %54
  %15 = phi %"class.blink::Member"* [ %55, %54 ], [ %8, %2 ]
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK5blink14DataObjectItem10IsFilenameEv(%"class.blink::DataObjectItem"* %17) #13
  br i1 %18, label %19, label %54

19:                                               ; preds = %14
  %20 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %16, align 8
  %21 = tail call %"class.blink::File"* @_ZNK5blink14DataObjectItem9GetAsFileEv(%"class.blink::DataObjectItem"* %20) #13
  %22 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %21, i64 0, i32 3
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %4, align 8
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %53, label %26, !prof !3

26:                                               ; preds = %19
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %28 = zext i32 %23 to i64
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 %28, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #13
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  tail call void @llvm.trap() #13
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %26
  %51 = load i32, i32* %5, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %5, align 4
  br label %54

53:                                               ; preds = %19
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.52"* %0, %"class.WTF::String"* dereferenceable(8) %22) #13
  br label %54

54:                                               ; preds = %53, %50, %14
  %55 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  %56 = icmp eq %"class.blink::Member"* %55, %12
  br i1 %56, label %57, label %14

57:                                               ; preds = %54, %2
  ret void
}

declare %"class.blink::File"* @_ZNK5blink14DataObjectItem9GetAsFileEv(%"class.blink::DataObjectItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject15AddSharedBufferE13scoped_refptrIN3WTF12SharedBufferEERKNS_4KURLERKNS2_6StringERKNS2_12AtomicStringE(%"class.blink::DataObject"*, %"class.WTF::SharedBuffer"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = tail call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEERKNS_4KURLERKNS2_6StringERKNS2_12AtomicStringE(%"class.WTF::SharedBuffer"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::AtomicString"* dereferenceable(8) %4) #13
  tail call void @_ZN5blink10DataObject19InternalAddFileItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %0, %"class.blink::DataObjectItem"* %6)
  ret void
}

declare %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEERKNS_4KURLERKNS2_6StringERKNS2_12AtomicStringE(%"class.WTF::SharedBuffer"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObjectC2Ev(%"class.blink::DataObject"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink10DataObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject11AddObserverEPNS0_8ObserverE(%"class.blink::DataObject"*, %"struct.blink::DataObject::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::DataObject::Observer"*, align 8
  store %"struct.blink::DataObject::Observer"* %1, %"struct.blink::DataObject::Observer"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = call { %"class.blink::Member.50"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.48"* %4, %"struct.blink::DataObject::Observer"** nonnull dereferenceable(8) %3, %"struct.blink::DataObject::Observer"** nonnull dereferenceable(8) %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10DataObject5TraceEPNS_7VisitorE(%"class.blink::DataObject"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #13
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #13
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::HeapHashSet"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = bitcast %"class.blink::HeapHashSet"* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #13
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %0, i64 0, i32 0, i32 1
  %35 = bitcast %"class.blink::HeapHashMap"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = bitcast %"class.blink::HeapHashMap"* %34 to i8**
  %38 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %38, i64 11
  %40 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8** %37) #13
  %41 = icmp eq i64 %36, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %33
  %43 = inttoptr i64 %36 to i8*
  %44 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, i64 5
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, align 8
  tail call void %47(%"class.blink::Visitor"* %1, i8* nonnull %43, i8* nonnull %43, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_10DataObjectEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %48

48:                                               ; preds = %33, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObject"* @_ZN5blink10DataObject6CreateENS_11WebDragDataE(%"class.blink::WebDragData"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::WebVector", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.blink::WebString", align 8
  %17 = alloca %"class.blink::FileMetadata", align 8
  %18 = alloca %"class.blink::KURL", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.blink::WebString", align 8
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10DataObjectEEEPhm(i64 88) #13
  %22 = bitcast i8* %21 to %"class.blink::DataObject"*
  %23 = bitcast i8* %21 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink10DataObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 32
  %26 = getelementptr inbounds i8, i8* %21, i64 72
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 80
  %29 = bitcast i8* %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 36, i1 false) #13
  %30 = getelementptr inbounds i8, i8* %21, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = bitcast %"class.blink::WebVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #13, !alias.scope !15
  %35 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"struct.blink::WebDragData::Item"** %35 to i64*
  %37 = load i64, i64* %36, align 8, !noalias !15
  %38 = bitcast %"class.blink::WebDragData"* %0 to i64*
  %39 = load i64, i64* %38, align 8, !noalias !15
  %40 = sub i64 %37, %39
  %41 = sdiv exact i64 %40, 384
  %42 = icmp eq i64 %40, 0
  %43 = inttoptr i64 %39 to %"struct.blink::WebDragData::Item"*
  %44 = inttoptr i64 %37 to %"struct.blink::WebDragData::Item"*
  br i1 %42, label %141, label %45

45:                                               ; preds = %1
  %46 = icmp ugt i64 %41, 48038396025285290
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast %"class.blink::WebVector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %48) #16
  unreachable

49:                                               ; preds = %45
  %50 = tail call i8* @_Znwm(i64 %40) #15
  %51 = bitcast i8* %50 to %"struct.blink::WebDragData::Item"*
  %52 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast %"struct.blink::WebDragData::Item"** %52 to i8**
  store i8* %50, i8** %53, align 8, !alias.scope !15
  %54 = bitcast %"class.blink::WebVector"* %6 to i8**
  store i8* %50, i8** %54, align 8, !alias.scope !15
  %55 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %51, i64 %41
  %56 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.blink::WebDragData::Item"* %55, %"struct.blink::WebDragData::Item"** %56, align 8, !alias.scope !15
  %57 = bitcast %"struct.blink::WebDragData::Item"** %52 to i64*
  %58 = ptrtoint i8* %50 to i64
  %59 = icmp eq %"struct.blink::WebDragData::Item"* %43, %44
  br i1 %59, label %68, label %60

60:                                               ; preds = %49, %60
  %61 = phi %"struct.blink::WebDragData::Item"* [ %64, %60 ], [ %51, %49 ]
  %62 = phi %"struct.blink::WebDragData::Item"* [ %63, %60 ], [ %43, %49 ]
  tail call void @_ZN5blink11WebDragData4ItemC2ERKS1_(%"struct.blink::WebDragData::Item"* %61, %"struct.blink::WebDragData::Item"* dereferenceable(384) %62) #13
  %63 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %62, i64 1
  %64 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %61, i64 1
  %65 = icmp eq %"struct.blink::WebDragData::Item"* %63, %44
  br i1 %65, label %66, label %60

66:                                               ; preds = %60
  %67 = ptrtoint %"struct.blink::WebDragData::Item"* %64 to i64
  br label %68

68:                                               ; preds = %49, %66
  %69 = phi i64 [ %58, %49 ], [ %67, %66 ]
  store i64 %69, i64* %57, align 8, !alias.scope !15
  %70 = inttoptr i64 %69 to %"struct.blink::WebDragData::Item"*
  %71 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 1
  %73 = icmp eq %"struct.blink::WebDragData::Item"* %51, %70
  br i1 %73, label %125, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::FileMetadata", %"class.blink::FileMetadata"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::FileMetadata", %"class.blink::FileMetadata"* %17, i64 0, i32 1
  %77 = getelementptr inbounds %"class.blink::FileMetadata", %"class.blink::FileMetadata"* %17, i64 0, i32 2
  %78 = getelementptr inbounds %"class.blink::FileMetadata", %"class.blink::FileMetadata"* %17, i64 0, i32 3, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %18, i64 0, i32 0
  %80 = bitcast %"class.WTF::String"* %19 to i8*
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %13 to i8*
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %14 to i8*
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %86 = bitcast %"class.WTF::String"* %15 to i8*
  %87 = bitcast %"class.blink::WebString"* %16 to i8*
  %88 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 1
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::StringView"* %4 to i8*
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %93 = bitcast i8** %92 to %"class.WTF::StringImpl"**
  %94 = bitcast %"class.WTF::StringView"* %4 to i64*
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %96 = bitcast %"class.WTF::StringView"* %5 to i8*
  %97 = bitcast %"class.WTF::StringView"* %5 to i64*
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %100 = bitcast %"class.WTF::StringView"* %2 to i8*
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  %104 = bitcast %"class.WTF::StringView"* %2 to i64*
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %106 = bitcast %"class.WTF::StringView"* %3 to i8*
  %107 = bitcast %"class.WTF::StringView"* %3 to i64*
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %110 = bitcast %"class.WTF::String"* %11 to i8*
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %12 to i8*
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %114 = bitcast %"class.WTF::String"* %9 to i8*
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  %117 = bitcast %"class.WTF::String"* %7 to i8*
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::String"* %8 to i8*
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  br label %199

121:                                              ; preds = %474
  %122 = load %"struct.blink::WebDragData::Item"*, %"struct.blink::WebDragData::Item"** %71, align 8
  %123 = bitcast %"struct.blink::WebDragData::Item"* %122 to i8*
  %124 = icmp eq %"struct.blink::WebDragData::Item"* %122, null
  br i1 %124, label %141, label %125

125:                                              ; preds = %68, %121
  %126 = phi i8 [ %475, %121 ], [ 0, %68 ]
  %127 = phi %"struct.blink::WebDragData::Item"* [ %122, %121 ], [ %51, %68 ]
  %128 = phi i8* [ %123, %121 ], [ %50, %68 ]
  %129 = load %"struct.blink::WebDragData::Item"*, %"struct.blink::WebDragData::Item"** %72, align 8
  %130 = icmp eq %"struct.blink::WebDragData::Item"* %129, %127
  br i1 %130, label %138, label %131

131:                                              ; preds = %125, %131
  %132 = phi %"struct.blink::WebDragData::Item"* [ %133, %131 ], [ %129, %125 ]
  %133 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %132, i64 -1
  call void @_ZN5blink11WebDragData4ItemD2Ev(%"struct.blink::WebDragData::Item"* %133) #13
  %134 = icmp eq %"struct.blink::WebDragData::Item"* %133, %127
  br i1 %134, label %135, label %131

135:                                              ; preds = %131
  %136 = bitcast %"class.blink::WebVector"* %6 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %135, %125
  %139 = phi i8* [ %137, %135 ], [ %128, %125 ]
  %140 = bitcast %"struct.blink::WebDragData::Item"** %72 to i8**
  store i8* %128, i8** %140, align 8
  call void @_ZdlPv(i8* %139) #15
  br label %141

141:                                              ; preds = %1, %121, %138
  %142 = phi i8 [ %475, %121 ], [ %126, %138 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  %143 = bitcast %"class.blink::WebString"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #13
  %144 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 1
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %20, %"class.blink::WebString"* dereferenceable(8) %144) #13
  %145 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %20) #13
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %164, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i33
  %156 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %155, i33 1) #13
  %157 = extractvalue { i33, i1 } %156, 1
  %158 = extractvalue { i33, i1 } %156, 0
  %159 = icmp slt i33 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %161, label %162, !prof !3

161:                                              ; preds = %152
  call void @llvm.trap() #13
  unreachable

162:                                              ; preds = %152
  %163 = trunc i33 %158 to i32
  store i32 %163, i32* %153, align 4
  br label %164

164:                                              ; preds = %162, %147, %141
  %165 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  %166 = bitcast i8* %28 to i64*
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  store i64 %165, i64* %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #13
  br label %182

182:                                              ; preds = %164, %178, %181
  br i1 %146, label %196, label %183

183:                                              ; preds = %182
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #13
  br label %196

196:                                              ; preds = %182, %192, %195
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #13
  %197 = and i8 %142, 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %479, label %478

199:                                              ; preds = %74, %474
  %200 = phi i8 [ 0, %74 ], [ %475, %474 ]
  %201 = phi %"struct.blink::WebDragData::Item"* [ %51, %74 ], [ %476, %474 ]
  %202 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  switch i32 %203, label %474 [
    i32 0, label %204
    i32 1, label %364
    i32 3, label %425
  ]

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 1
  %206 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %205) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  store i8* null, i8** %92, align 8
  %209 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %209, i64* %94, align 8
  br label %214

210:                                              ; preds = %204
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %91, align 8
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 1
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %93, align 8
  br label %214

214:                                              ; preds = %210, %208
  %215 = phi i32 [ %212, %210 ], [ 0, %208 ]
  store i32 %215, i32* %95, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #13
  %216 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0)) #14
  %217 = icmp ult i64 %216, 4294967296
  br i1 %217, label %219, label %218, !prof !2

218:                                              ; preds = %214
  call void @llvm.trap() #13
  unreachable

219:                                              ; preds = %214
  %220 = trunc i64 %216 to i32
  %221 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %221, i64* %97, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), i8** %98, align 8
  store i32 %220, i32* %99, align 8
  %222 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  br i1 %207, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %206) #13
  br label %236

236:                                              ; preds = %219, %232, %235
  br i1 %222, label %237, label %274

237:                                              ; preds = %236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #13
  %238 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 2
  %239 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %238) #13
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %118, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #13
  %240 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 3
  %241 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %240) #13
  store %"class.WTF::StringImpl"* %241, %"class.WTF::StringImpl"** %120, align 8
  call void @_ZN5blink10DataObject14SetURLAndTitleERKN3WTF6StringES4_(%"class.blink::DataObject"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8)
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #13
  br label %257

257:                                              ; preds = %237, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #13
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #13
  br label %273

273:                                              ; preds = %257, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #13
  br label %474

274:                                              ; preds = %236
  %275 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %205) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #13
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %277, label %279

277:                                              ; preds = %274
  store i8* null, i8** %102, align 8
  %278 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %278, i64* %104, align 8
  br label %283

279:                                              ; preds = %274
  store %"class.WTF::StringImpl"* %275, %"class.WTF::StringImpl"** %101, align 8
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 1
  store %"class.WTF::StringImpl"* %282, %"class.WTF::StringImpl"** %103, align 8
  br label %283

283:                                              ; preds = %279, %277
  %284 = phi i32 [ %281, %279 ], [ 0, %277 ]
  store i32 %284, i32* %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #13
  %285 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #14
  %286 = icmp ult i64 %285, 4294967296
  br i1 %286, label %288, label %287, !prof !2

287:                                              ; preds = %283
  call void @llvm.trap() #13
  unreachable

288:                                              ; preds = %283
  %289 = trunc i64 %285 to i32
  %290 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %290, i64* %107, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i8** %108, align 8
  store i32 %289, i32* %109, align 8
  %291 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #13
  br i1 %276, label %305, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #13
  br label %305

305:                                              ; preds = %288, %301, %304
  br i1 %291, label %306, label %326

306:                                              ; preds = %305
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #13
  %307 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 2
  %308 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %307) #13
  store %"class.WTF::StringImpl"* %308, %"class.WTF::StringImpl"** %115, align 8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %116) #13
  %309 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 4
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %10, %"class.blink::WebURL"* %309) #13
  call void @_ZN5blink10DataObject17SetHTMLAndBaseURLERKN3WTF6StringERKNS_4KURLE(%"class.blink::DataObject"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::KURL"* nonnull dereferenceable(112) %10)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %116) #13
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %306
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #13
  br label %325

325:                                              ; preds = %306, %321, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #13
  br label %474

326:                                              ; preds = %305
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  %327 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %205) #13
  store %"class.WTF::StringImpl"* %327, %"class.WTF::StringImpl"** %111, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13
  %328 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 2
  %329 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %328) #13
  store %"class.WTF::StringImpl"* %329, %"class.WTF::StringImpl"** %113, align 8
  call void @_ZN5blink10DataObject9ClearDataERKN3WTF6StringE(%"class.blink::DataObject"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %11) #13
  %330 = call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem16CreateFromStringERKN3WTF6StringES4_(%"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12) #13
  %331 = call zeroext i1 @_ZN5blink10DataObject21InternalAddStringItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %22, %"class.blink::DataObjectItem"* %330) #13
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %333, label %347, label %334

334:                                              ; preds = %326
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br i1 %338, label %341, label %343

341:                                              ; preds = %334
  %342 = add i32 %340, -1
  store i32 %342, i32* %339, align 4
  br label %343

343:                                              ; preds = %341, %334
  %344 = phi i32 [ %342, %341 ], [ %340, %334 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %332) #13
  br label %347

347:                                              ; preds = %326, %343, %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #13
  br label %363

363:                                              ; preds = %347, %359, %362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  br label %474

364:                                              ; preds = %199
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  %365 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 5
  %366 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %365) #13
  store %"class.WTF::StringImpl"* %366, %"class.WTF::StringImpl"** %83, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  %367 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 6
  %368 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %367) #13
  store %"class.WTF::StringImpl"* %368, %"class.WTF::StringImpl"** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #13
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* nonnull %16, %"class.blink::WebString"* dereferenceable(8) %88) #13
  %369 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* nonnull %16) #13
  store %"class.WTF::StringImpl"* %369, %"class.WTF::StringImpl"** %89, align 8
  %370 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 7, i32 0
  %371 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %370, align 8
  %372 = icmp eq %"class.base::RefCountedData"* %371, null
  br i1 %372, label %376, label %373

373:                                              ; preds = %364
  %374 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %371, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = atomicrmw add i32* %374, i32 1 monotonic
  br label %376

376:                                              ; preds = %364, %373
  call void @_ZN5blink10DataObject11AddFilenameERKN3WTF6StringES4_S4_13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::DataObject"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.base::RefCountedData"* %371)
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %392, label %379

379:                                              ; preds = %376
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %388

386:                                              ; preds = %379
  %387 = add i32 %385, -1
  store i32 %387, i32* %384, align 4
  br label %388

388:                                              ; preds = %386, %379
  %389 = phi i32 [ %387, %386 ], [ %385, %379 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %388
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #13
  br label %392

392:                                              ; preds = %376, %388, %391
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %393, null
  br i1 %394, label %408, label %395

395:                                              ; preds = %392
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  br i1 %399, label %402, label %404

402:                                              ; preds = %395
  %403 = add i32 %401, -1
  store i32 %403, i32* %400, align 4
  br label %404

404:                                              ; preds = %402, %395
  %405 = phi i32 [ %403, %402 ], [ %401, %395 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %393) #13
  br label %408

408:                                              ; preds = %392, %404, %407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %410 = icmp eq %"class.WTF::StringImpl"* %409, null
  br i1 %410, label %424, label %411

411:                                              ; preds = %408
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %409, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %409) #13
  br label %424

424:                                              ; preds = %408, %420, %423
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  br label %474

425:                                              ; preds = %199
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %75) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 32, i1 false)
  store i8 0, i8* %75, align 8
  store i32 0, i32* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  %426 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 13
  %427 = load i64, i64* %426, align 8
  store i64 %427, i64* %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %79) #13
  %428 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 12
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %18, %"class.blink::WebURL"* %428) #13
  %429 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 216) #13
  %430 = bitcast i8* %429 to %"class.blink::File"*
  call void @_ZN5blink4FileC1ERKNS_4KURLERKNS_12FileMetadataENS0_14UserVisibilityE(%"class.blink::File"* %430, %"class.blink::KURL"* nonnull dereferenceable(112) %18, %"class.blink::FileMetadata"* nonnull dereferenceable(40) %17, i32 1) #13
  %431 = getelementptr inbounds i8, i8* %429, i64 -4
  %432 = bitcast i8* %431 to i16*
  %433 = load atomic i16, i16* %432 monotonic, align 2
  %434 = or i16 %433, 1
  store atomic i16 %434, i16* %432 release, align 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #13
  %435 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 0, i32 14
  %436 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %435) #13
  store %"class.WTF::StringImpl"* %436, %"class.WTF::StringImpl"** %81, align 8
  %437 = icmp eq i8* %429, null
  br i1 %437, label %441, label %438

438:                                              ; preds = %425
  %439 = call %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem30CreateFromFileWithFileSystemIdEPNS_4FileERKN3WTF6StringE13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::File"* nonnull %430, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.base::RefCountedData"* null) #13
  call void @_ZN5blink10DataObject19InternalAddFileItemEPNS_14DataObjectItemE(%"class.blink::DataObject"* %22, %"class.blink::DataObjectItem"* %439) #13
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  br label %441

441:                                              ; preds = %425, %438
  %442 = phi %"class.WTF::StringImpl"* [ %436, %425 ], [ %440, %438 ]
  %443 = icmp eq %"class.WTF::StringImpl"* %442, null
  br i1 %443, label %457, label %444

444:                                              ; preds = %441
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %442, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %446 = load atomic i32, i32* %445 monotonic, align 4
  %447 = and i32 %446, 2
  %448 = icmp eq i32 %447, 0
  %449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %442, i64 0, i32 0
  %450 = load i32, i32* %449, align 4
  br i1 %448, label %451, label %453

451:                                              ; preds = %444
  %452 = add i32 %450, -1
  store i32 %452, i32* %449, align 4
  br label %453

453:                                              ; preds = %451, %444
  %454 = phi i32 [ %452, %451 ], [ %450, %444 ]
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %457

456:                                              ; preds = %453
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %442) #13
  br label %457

457:                                              ; preds = %441, %453, %456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %79) #13
  %458 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %459 = icmp eq %"class.WTF::StringImpl"* %458, null
  br i1 %459, label %473, label %460

460:                                              ; preds = %457
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %458, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  br i1 %464, label %467, label %469

467:                                              ; preds = %460
  %468 = add i32 %466, -1
  store i32 %468, i32* %465, align 4
  br label %469

469:                                              ; preds = %467, %460
  %470 = phi i32 [ %468, %467 ], [ %466, %460 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %469
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %458) #13
  br label %473

473:                                              ; preds = %457, %469, %472
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %75) #13
  br label %474

474:                                              ; preds = %273, %363, %325, %199, %473, %424
  %475 = phi i8 [ %200, %199 ], [ 1, %473 ], [ 1, %424 ], [ %200, %273 ], [ %200, %325 ], [ %200, %363 ]
  %476 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %201, i64 1
  %477 = icmp eq %"struct.blink::WebDragData::Item"* %476, %70
  br i1 %477, label %121, label %199

478:                                              ; preds = %196
  call void @_ZN5blink25DraggedIsolatedFileSystem20PrepareForDataObjectEPNS_10DataObjectE(%"class.blink::DataObject"* %22) #13
  br label %479

479:                                              ; preds = %196, %478
  ret %"class.blink::DataObject"* %22
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

declare void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* sret, %"class.blink::WebURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10DataObject13ToWebDragDataEv(%"class.blink::WebDragData"* noalias sret, %"class.blink::DataObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebString", align 8
  %4 = alloca %"struct.blink::WebDragData::Item", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.blink::KURL", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = bitcast %"class.blink::WebDragData"* %0 to i8*
  %16 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 1
  %17 = bitcast %"class.blink::WebString"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #13
  %18 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 1
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %18) #13
  %19 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 2
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = icmp eq i32 %21, 0
  br i1 %23, label %104, label %24

24:                                               ; preds = %2
  %25 = mul nuw nsw i64 %22, 384
  %26 = tail call i8* @_Znwm(i64 %25) #15
  %27 = bitcast i8* %26 to %"struct.blink::WebDragData::Item"*
  %28 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %27, i64 %22
  br label %29

29:                                               ; preds = %29, %24
  %30 = phi %"struct.blink::WebDragData::Item"* [ %51, %29 ], [ %27, %24 ]
  %31 = bitcast %"struct.blink::WebDragData::Item"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 384, i1 false) #13
  %32 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 1
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %32) #13
  %33 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 2
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %33) #13
  %34 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 3
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %34) #13
  %35 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 4, i32 0
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %35) #13
  %36 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 4, i32 1
  tail call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %36) #13
  %37 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 4, i32 2
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 5
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %38) #13
  %39 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 6
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %39) #13
  %40 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 7, i32 0
  %41 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 9, i32 0
  %42 = bitcast %"class.base::RefCountedData"** %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #13
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %41) #13
  %43 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 9, i32 1
  tail call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %43) #13
  %44 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 9, i32 2
  store i8 0, i8* %44, align 8
  %45 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 10
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %45) #13
  %46 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 11
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %46) #13
  %47 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 12, i32 0
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %47) #13
  %48 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 12, i32 1
  tail call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %48) #13
  %49 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 12, i32 2
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 0, i32 14
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %50) #13
  %51 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %30, i64 1
  %52 = icmp eq %"struct.blink::WebDragData::Item"* %51, %28
  br i1 %52, label %53, label %29

53:                                               ; preds = %29
  %54 = ptrtoint i8* %26 to i64
  %55 = ptrtoint %"struct.blink::WebDragData::Item"* %28 to i64
  %56 = load i32, i32* %20, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %104, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::DataObject", %"class.blink::DataObject"* %1, i64 0, i32 1, i32 0
  %60 = bitcast %"struct.blink::WebDragData::Item"* %4 to i8*
  %61 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 2
  %63 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 3
  %64 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 4, i32 0
  %65 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 4, i32 1
  %66 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 4, i32 2
  %67 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 5
  %68 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 6
  %69 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 7, i32 0
  %70 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 9, i32 0
  %71 = bitcast %"class.base::RefCountedData"** %69 to i8*
  %72 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 9, i32 1
  %73 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 9, i32 2
  %74 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 10
  %75 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 11
  %76 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 12, i32 0
  %77 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 12, i32 1
  %78 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 12, i32 2
  %79 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 14
  %80 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 0
  %81 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 8
  %82 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  %83 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 9
  %84 = bitcast %"class.WTF::String"* %10 to i8*
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %86 = bitcast %"class.WTF::String"* %11 to i8*
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 0
  %90 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 12
  %91 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 13
  %92 = bitcast %"class.WTF::String"* %14 to i8*
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %94 = bitcast %"class.blink::WebString"* %3 to i8*
  %95 = bitcast %"class.WTF::String"* %5 to i8*
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %97 = bitcast %"class.WTF::String"* %6 to i8*
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %99 = bitcast %"class.WTF::String"* %7 to i8*
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  %102 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %4, i64 0, i32 4
  %103 = bitcast i8* %26 to %"struct.blink::WebDragData::Item"*
  br label %125

104:                                              ; preds = %375, %2, %53
  %105 = phi i64 [ %54, %53 ], [ 0, %2 ], [ %54, %375 ]
  %106 = phi i64 [ %55, %53 ], [ 0, %2 ], [ %55, %375 ]
  %107 = bitcast %"class.blink::WebDragData"* %0 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %105, i64* %107, align 8
  %109 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %110 = bitcast %"struct.blink::WebDragData::Item"** %109 to i64*
  %111 = load %"struct.blink::WebDragData::Item"*, %"struct.blink::WebDragData::Item"** %109, align 8
  store i64 %106, i64* %110, align 8
  %112 = getelementptr inbounds %"class.blink::WebDragData", %"class.blink::WebDragData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast %"struct.blink::WebDragData::Item"** %112 to i64*
  store i64 %106, i64* %113, align 8
  %114 = inttoptr i64 %108 to %"struct.blink::WebDragData::Item"*
  %115 = icmp eq i64 %108, 0
  br i1 %115, label %124, label %116

116:                                              ; preds = %104
  %117 = icmp eq %"struct.blink::WebDragData::Item"* %111, %114
  br i1 %117, label %122, label %118

118:                                              ; preds = %116, %118
  %119 = phi %"struct.blink::WebDragData::Item"* [ %120, %118 ], [ %111, %116 ]
  %120 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %119, i64 -1
  call void @_ZN5blink11WebDragData4ItemD2Ev(%"struct.blink::WebDragData::Item"* %120) #13
  %121 = icmp eq %"struct.blink::WebDragData::Item"* %120, %114
  br i1 %121, label %122, label %118

122:                                              ; preds = %118, %116
  %123 = inttoptr i64 %108 to i8*
  call void @_ZdlPv(i8* %123) #15
  br label %124

124:                                              ; preds = %104, %122
  ret void

125:                                              ; preds = %58, %375
  %126 = phi i64 [ 0, %58 ], [ %378, %375 ]
  %127 = trunc i64 %126 to i32
  %128 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %59, i32 %127) #13
  %129 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.blink::DataObjectItem"*, %"class.blink::DataObjectItem"** %129, align 8
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %60) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 384, i1 false)
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %61) #13
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %62) #13
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %63) #13
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %64) #13
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %65) #13
  store i8 0, i8* %66, align 8
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %67) #13
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %68) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #13
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %70) #13
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %72) #13
  store i8 0, i8* %73, align 8
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %74) #13
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %75) #13
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %76) #13
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %77) #13
  store i8 0, i8* %78, align 8
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %79) #13
  %131 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  switch i32 %132, label %375 [
    i32 0, label %133
    i32 1, label %230
  ]

133:                                              ; preds = %125
  store i32 0, i32* %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #13
  %134 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 3, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #13
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !3

151:                                              ; preds = %142
  call void @llvm.trap() #13
  unreachable

152:                                              ; preds = %142
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %143, align 4
  br label %154

154:                                              ; preds = %133, %137, %152
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %96, align 8
  %155 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %61, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #13
  br label %171

171:                                              ; preds = %154, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #13
  %172 = call %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem11GetAsStringEv(%"class.blink::DataObjectItem"* %130) #13
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %98, align 8
  %173 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %62, %"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #13
  br label %189

189:                                              ; preds = %171, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #13
  %190 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 8, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %210, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i33
  %202 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %201, i33 1) #13
  %203 = extractvalue { i33, i1 } %202, 1
  %204 = extractvalue { i33, i1 } %202, 0
  %205 = icmp slt i33 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %207, label %208, !prof !3

207:                                              ; preds = %198
  call void @llvm.trap() #13
  unreachable

208:                                              ; preds = %198
  %209 = trunc i33 %204 to i32
  store i32 %209, i32* %199, align 4
  br label %210

210:                                              ; preds = %189, %193, %208
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %100, align 8
  %211 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %63, %"class.WTF::String"* nonnull dereferenceable(8) %7) #13
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #13
  br label %227

227:                                              ; preds = %210, %223, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %101) #13
  %228 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %8, %"class.blink::KURL"* dereferenceable(112) %228) #13
  %229 = call dereferenceable(96) %"class.blink::WebURL"* @_ZN5blink6WebURLaSERKNS_4KURLE(%"class.blink::WebURL"* %102, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %101) #13
  br label %375

230:                                              ; preds = %125
  %231 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 6, i32 0
  %232 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %231, align 8
  %233 = icmp eq %"class.WTF::SharedBuffer"* %232, null
  br i1 %233, label %326, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %232, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %235) #13
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %235) #13
  %236 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %232, i64 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %234
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %232) #13
  %240 = bitcast %"class.WTF::SharedBuffer"* %232 to i8*
  call void @free(i8* %240) #13
  br label %241

241:                                              ; preds = %234, %239
  %242 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %231, align 8
  store i32 2, i32* %80, align 8
  %243 = icmp eq %"class.WTF::SharedBuffer"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %242, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %245) #13
  br label %246

246:                                              ; preds = %241, %244
  %247 = call dereferenceable(8) %"class.blink::WebData"* @_ZN5blink7WebDataaSE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::WebData"* %81, %"class.WTF::SharedBuffer"* %242) #13
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %82) #13
  %248 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 9
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %9, %"class.blink::KURL"* dereferenceable(112) %248) #13
  %249 = call dereferenceable(96) %"class.blink::WebURL"* @_ZN5blink6WebURLaSERKNS_4KURLE(%"class.blink::WebURL"* %83, %"class.blink::KURL"* nonnull dereferenceable(112) %9) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %82) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  %250 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 7, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %270, label %253

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %270

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i33
  %262 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %261, i33 1) #13
  %263 = extractvalue { i33, i1 } %262, 1
  %264 = extractvalue { i33, i1 } %262, 0
  %265 = icmp slt i33 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %267, label %268, !prof !3

267:                                              ; preds = %258
  call void @llvm.trap() #13
  unreachable

268:                                              ; preds = %258
  %269 = trunc i33 %264 to i32
  store i32 %269, i32* %259, align 4
  br label %270

270:                                              ; preds = %246, %253, %268
  store %"class.WTF::StringImpl"* %251, %"class.WTF::StringImpl"** %85, align 8
  %271 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %74, %"class.WTF::String"* nonnull dereferenceable(8) %10) #13
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %273, label %287, label %274

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %274
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %274
  %284 = phi i32 [ %282, %281 ], [ %280, %274 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %272) #13
  br label %287

287:                                              ; preds = %270, %283, %286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  %288 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %130, i64 0, i32 8, i32 0, i32 0
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %288, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %308, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = zext i32 %298 to i33
  %300 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %299, i33 1) #13
  %301 = extractvalue { i33, i1 } %300, 1
  %302 = extractvalue { i33, i1 } %300, 0
  %303 = icmp slt i33 %302, 0
  %304 = or i1 %301, %303
  br i1 %304, label %305, label %306, !prof !3

305:                                              ; preds = %296
  call void @llvm.trap() #13
  unreachable

306:                                              ; preds = %296
  %307 = trunc i33 %302 to i32
  store i32 %307, i32* %297, align 4
  br label %308

308:                                              ; preds = %287, %291, %306
  store %"class.WTF::StringImpl"* %289, %"class.WTF::StringImpl"** %87, align 8
  %309 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %75, %"class.WTF::String"* nonnull dereferenceable(8) %11) #13
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #13
  br label %325

325:                                              ; preds = %308, %321, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  br label %375

326:                                              ; preds = %230
  %327 = call zeroext i1 @_ZNK5blink14DataObjectItem10IsFilenameEv(%"class.blink::DataObjectItem"* %130) #13
  br i1 %327, label %328, label %375

328:                                              ; preds = %326
  %329 = call %"class.blink::File"* @_ZNK5blink14DataObjectItem9GetAsFileEv(%"class.blink::DataObjectItem"* %130) #13
  %330 = icmp eq %"class.blink::File"* %329, null
  br i1 %330, label %375, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %329, i64 0, i32 0
  %333 = bitcast %"class.blink::File"* %329 to i1 (%"class.blink::Blob"*)***
  %334 = load i1 (%"class.blink::Blob"*)**, i1 (%"class.blink::Blob"*)*** %333, align 8
  %335 = getelementptr inbounds i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %334, i64 11
  %336 = load i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %335, align 8
  %337 = call zeroext i1 %336(%"class.blink::Blob"* nonnull %332) #13
  br i1 %337, label %338, label %375

338:                                              ; preds = %331
  %339 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %329, i64 0, i32 1
  %340 = load i8, i8* %339, align 8, !range !18
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %347, label %342

342:                                              ; preds = %338
  store i32 1, i32* %80, align 8
  %343 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %329, i64 0, i32 3
  %344 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %67, %"class.WTF::String"* dereferenceable(8) %343) #13
  %345 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %329, i64 0, i32 4
  %346 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %68, %"class.WTF::String"* dereferenceable(8) %345) #13
  br label %375

347:                                              ; preds = %338
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %88) #13
  %348 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %329, i64 0, i32 5
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %348) #13
  %349 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %12) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %88) #13
  br i1 %349, label %371, label %350

350:                                              ; preds = %347
  store i32 3, i32* %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %89) #13
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %13, %"class.blink::KURL"* dereferenceable(112) %348) #13
  %351 = call dereferenceable(96) %"class.blink::WebURL"* @_ZN5blink6WebURLaSERKNS_4KURLE(%"class.blink::WebURL"* %90, %"class.blink::KURL"* nonnull dereferenceable(112) %13) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %89) #13
  %352 = call i64 @_ZNK5blink4File4sizeEv(%"class.blink::File"* nonnull %329) #13
  store i64 %352, i64* %91, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  %353 = call %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem12FileSystemIdEv(%"class.blink::DataObjectItem"* %130) #13
  store %"class.WTF::StringImpl"* %353, %"class.WTF::StringImpl"** %93, align 8
  %354 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %79, %"class.WTF::String"* nonnull dereferenceable(8) %14) #13
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %370, label %357

357:                                              ; preds = %350
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  br i1 %361, label %364, label %366

364:                                              ; preds = %357
  %365 = add i32 %363, -1
  store i32 %365, i32* %362, align 4
  br label %366

366:                                              ; preds = %364, %357
  %367 = phi i32 [ %365, %364 ], [ %363, %357 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #13
  br label %370

370:                                              ; preds = %350, %366, %369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  br label %375

371:                                              ; preds = %347
  store i32 0, i32* %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #13
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10) #13
  %372 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* %61, %"class.blink::WebString"* nonnull dereferenceable(8) %3) #13
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #13
  %373 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %329, i64 0, i32 4
  %374 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %62, %"class.WTF::String"* dereferenceable(8) %373) #13
  br label %375

375:                                              ; preds = %331, %125, %328, %370, %371, %342, %326, %325, %227
  %376 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %103, i64 %126
  %377 = call dereferenceable(384) %"struct.blink::WebDragData::Item"* @_ZN5blink11WebDragData4ItemaSERKS1_(%"struct.blink::WebDragData::Item"* %376, %"struct.blink::WebDragData::Item"* nonnull dereferenceable(384) %4)
  call void @_ZN5blink11WebDragData4ItemD2Ev(%"struct.blink::WebDragData::Item"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %60) #13
  %378 = add nuw nsw i64 %126, 1
  %379 = load i32, i32* %20, align 4
  %380 = zext i32 %379 to i64
  %381 = icmp ult i64 %378, %380
  br i1 %381, label %125, label %104
}

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(96) %"class.blink::WebURL"* @_ZN5blink6WebURLaSERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare dereferenceable(8) %"class.blink::WebData"* @_ZN5blink7WebDataaSE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::WebData"*, %"class.WTF::SharedBuffer"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare i64 @_ZNK5blink4File4sizeEv(%"class.blink::File"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem12FileSystemIdEv(%"class.blink::DataObjectItem"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(384) %"struct.blink::WebDragData::Item"* @_ZN5blink11WebDragData4ItemaSERKS1_(%"struct.blink::WebDragData::Item"*, %"struct.blink::WebDragData::Item"* dereferenceable(384)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %6, %"class.blink::WebString"* dereferenceable(8) %7) #13
  %9 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 2
  %11 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %9, %"class.blink::WebString"* dereferenceable(8) %10) #13
  %12 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 3
  %14 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %12, %"class.blink::WebString"* dereferenceable(8) %13) #13
  %15 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 0
  %16 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 4, i32 0
  %17 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %15, %"class.blink::WebString"* dereferenceable(8) %16) #13
  %18 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 1
  %19 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 4, i32 1
  %20 = tail call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %18, %"struct.url::Parsed"* dereferenceable(80) %19) #13
  %21 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 4, i32 2
  %22 = load i8, i8* %21, align 8, !range !18
  %23 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 2
  store i8 %22, i8* %23, align 8
  %24 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 5
  %26 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %24, %"class.blink::WebString"* dereferenceable(8) %25) #13
  %27 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 6
  %29 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %27, %"class.blink::WebString"* dereferenceable(8) %28) #13
  %30 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 7
  %31 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 7, i32 0
  %32 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %31, align 8
  %33 = icmp eq %"class.base::RefCountedData"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  br label %37

37:                                               ; preds = %2, %34
  %38 = ptrtoint %"class.base::RefCountedData"* %32 to i64
  %39 = bitcast %class.scoped_refptr* %30 to i64*
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %30, i64 0, i32 0
  %41 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.base::RefCountedData"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %56

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %41, i64 0, i32 0
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.276", %"class.base::RefCountedThreadSafe.276"* %48, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = tail call i32 @MojoClose(i32 %50) #13
  br label %54

54:                                               ; preds = %52, %47
  %55 = bitcast %"class.base::RefCountedData"* %41 to i8*
  tail call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %37, %43, %54
  %57 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 8
  %58 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 8
  tail call void @_ZN5blink7WebData6AssignERKS0_(%"class.blink::WebData"* %57, %"class.blink::WebData"* dereferenceable(8) %58) #13
  %59 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 0
  %60 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 9, i32 0
  %61 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %59, %"class.blink::WebString"* dereferenceable(8) %60) #13
  %62 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 1
  %63 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 9, i32 1
  %64 = tail call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %62, %"struct.url::Parsed"* dereferenceable(80) %63) #13
  %65 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 9, i32 2
  %66 = load i8, i8* %65, align 8, !range !18
  %67 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 2
  store i8 %66, i8* %67, align 8
  %68 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 10
  %69 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 10
  %70 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %68, %"class.blink::WebString"* dereferenceable(8) %69) #13
  %71 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 11
  %72 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 11
  %73 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %71, %"class.blink::WebString"* dereferenceable(8) %72) #13
  %74 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 0
  %75 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 12, i32 0
  %76 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %74, %"class.blink::WebString"* dereferenceable(8) %75) #13
  %77 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 1
  %78 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 12, i32 1
  %79 = tail call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %77, %"struct.url::Parsed"* dereferenceable(80) %78) #13
  %80 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 12, i32 2
  %81 = load i8, i8* %80, align 8, !range !18
  %82 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 2
  store i8 %81, i8* %82, align 8
  %83 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 13
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 13
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 14
  %87 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 14
  %88 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %86, %"class.blink::WebString"* dereferenceable(8) %87) #13
  ret %"struct.blink::WebDragData::Item"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11WebDragData4ItemD2Ev(%"struct.blink::WebDragData::Item"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 14
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %2) #13
  %3 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 1
  tail call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %3) #13
  %4 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %4) #13
  %5 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 11
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %5) #13
  %6 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 10
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %6) #13
  %7 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 1
  tail call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %7) #13
  %8 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %8) #13
  %9 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 8
  tail call void @_ZN5blink7WebData5ResetEv(%"class.blink::WebData"* %9) #13
  %10 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 7, i32 0
  %11 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %10, align 8
  %12 = icmp eq %"class.base::RefCountedData"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %11, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.276", %"class.base::RefCountedThreadSafe.276"* %18, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = tail call i32 @MojoClose(i32 %20) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = bitcast %"class.base::RefCountedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %1, %13, %24
  %27 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 6
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %27) #13
  %28 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 5
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %28) #13
  %29 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 1
  tail call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %29) #13
  %30 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %30) #13
  %31 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 3
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %31) #13
  %32 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 2
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %32) #13
  %33 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %33) #13
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink14ClipboardFilesD1Ev(%"class.blink::mojom::blink::ClipboardFiles"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink4FileC1ERKN3WTF6StringENS0_23ContentTypeLookupPolicyENS0_14UserVisibilityE(%"class.blink::File"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink4FileC1ERKN3WTF6StringES4_NS0_23ContentTypeLookupPolicyENS0_14UserVisibilityE(%"class.blink::File"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11WebDragData4ItemC2ERKS1_(%"struct.blink::WebDragData::Item"*, %"struct.blink::WebDragData::Item"* dereferenceable(384)) unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 1
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %6, %"class.blink::WebString"* dereferenceable(8) %7) #13
  %8 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 2
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %8, %"class.blink::WebString"* dereferenceable(8) %9) #13
  %10 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 3
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %10, %"class.blink::WebString"* dereferenceable(8) %11) #13
  %12 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 0
  %13 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 4, i32 0
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %12, %"class.blink::WebString"* dereferenceable(8) %13) #13
  %14 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 1
  %15 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 4, i32 1
  tail call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %14, %"struct.url::Parsed"* dereferenceable(80) %15) #13
  %16 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 4, i32 2
  %17 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 4, i32 2
  %18 = load i8, i8* %17, align 8, !range !18
  store i8 %18, i8* %16, align 8
  %19 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 5
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %19, %"class.blink::WebString"* dereferenceable(8) %20) #13
  %21 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 6
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %21, %"class.blink::WebString"* dereferenceable(8) %22) #13
  %23 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 7, i32 0
  %24 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 7, i32 0
  store %"class.base::RefCountedData"* %24, %"class.base::RefCountedData"** %25, align 8
  %26 = icmp eq %"class.base::RefCountedData"* %24, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %2, %27
  %31 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 8
  %32 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 8
  %33 = getelementptr inbounds %"class.blink::WebData", %"class.blink::WebData"* %31, i64 0, i32 0, i32 0
  store i8* null, i8** %33, align 8
  tail call void @_ZN5blink7WebData6AssignERKS0_(%"class.blink::WebData"* %31, %"class.blink::WebData"* dereferenceable(8) %32) #13
  %34 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 0
  %35 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 9, i32 0
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %34, %"class.blink::WebString"* dereferenceable(8) %35) #13
  %36 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 1
  %37 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 9, i32 1
  tail call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %36, %"struct.url::Parsed"* dereferenceable(80) %37) #13
  %38 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 9, i32 2
  %39 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 9, i32 2
  %40 = load i8, i8* %39, align 8, !range !18
  store i8 %40, i8* %38, align 8
  %41 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 10
  %42 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 10
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %41, %"class.blink::WebString"* dereferenceable(8) %42) #13
  %43 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 11
  %44 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 11
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %43, %"class.blink::WebString"* dereferenceable(8) %44) #13
  %45 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 0
  %46 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 12, i32 0
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %45, %"class.blink::WebString"* dereferenceable(8) %46) #13
  %47 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 1
  %48 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 12, i32 1
  tail call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %47, %"struct.url::Parsed"* dereferenceable(80) %48) #13
  %49 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 12, i32 2
  %50 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 12, i32 2
  %51 = load i8, i8* %50, align 8, !range !18
  store i8 %51, i8* %49, align 8
  %52 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 13
  %53 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 13
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %52, align 8
  %55 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %0, i64 0, i32 14
  %56 = getelementptr inbounds %"struct.blink::WebDragData::Item", %"struct.blink::WebDragData::Item"* %1, i64 0, i32 14
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %55, %"class.blink::WebString"* dereferenceable(8) %56) #13
  ret void
}

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN5blink7WebData6AssignERKS0_(%"class.blink::WebData"*, %"class.blink::WebData"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4FileC1ERKNS_4KURLERKNS_12FileMetadataENS0_14UserVisibilityE(%"class.blink::File"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::FileMetadata"* dereferenceable(40), i32) unnamed_addr #2

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #2

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #5

declare void @_ZN5blink7WebData5ResetEv(%"class.blink::WebData"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16DataTransferFileD1Ev(%"class.blink::mojom::blink::DataTransferFile"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #5

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::DataObjectItem"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::DataObjectItem"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DataObjectItemEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !18
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DataObjectItemEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14DataObjectItemEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14DataObjectItemEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DataObjectItemEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14DataObjectItemEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DataObjectItemEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DataObjectItem"*
  tail call void @_ZNK5blink14DataObjectItem5TraceEPNS_7VisitorE(%"class.blink::DataObjectItem"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink14DataObjectItem5TraceEPNS_7VisitorE(%"class.blink::DataObjectItem"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10DataObjectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10DataObjectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10DataObjectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10DataObjectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10DataObjectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10DataObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DataObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::DataObject"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_10DataObjectEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::DataObject"*
  %3 = bitcast i8* %0 to void (%"class.blink::DataObject"*)***
  %4 = load void (%"class.blink::DataObject"*)**, void (%"class.blink::DataObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::DataObject"*)*, void (%"class.blink::DataObject"*)** %4, i64 1
  %6 = load void (%"class.blink::DataObject"*)*, void (%"class.blink::DataObject"*)** %5, align 8
  tail call void %6(%"class.blink::DataObject"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10DataObjectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.52"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.52"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.52"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp ugt %"class.WTF::String"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::String"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::String"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !2

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.52"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::String"* %2 to i64
  %55 = ptrtoint %"class.WTF::String"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !2

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::String"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %70) #13
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::String"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::String"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !2

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #13
  %86 = bitcast %"class.WTF::Vector.52"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #13
  %90 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::String"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::String"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::String"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::String"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRA_KcEEvOT_(%"class.WTF::Vector.52"*, [0 x i8]*) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #13
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #13
  %36 = bitcast %"class.WTF::Vector.52"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #13
  %40 = bitcast %"class.WTF::Vector.52"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48
  %50 = getelementptr inbounds [0 x i8], [0 x i8]* %1, i64 0, i64 0
  %51 = icmp eq [0 x i8]* %1, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = tail call i64 @strlen(i8* nonnull %50) #14
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %45 ]
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %49, i8* %50, i64 %55) #13
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.52"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.52"* %0, i32 %5, %"class.WTF::String"* %1) #13
  %7 = getelementptr inbounds %"class.WTF::Vector.52", %"class.WTF::Vector.52"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::DataObjectItem"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14DataObjectItemEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::DataObjectItem"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.50"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SA_SB_EERKPS4_RSG_EENS_18HashTableAddResultISC_S5_EEOT0_OT1_(%"class.WTF::HashTable.48"*, %"struct.blink::DataObject::Observer"** dereferenceable(8), %"struct.blink::DataObject::Observer"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %4, align 8
  %6 = icmp eq %"class.blink::Member.50"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.48"* %0, %"class.blink::Member.50"* null)
  %9 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.50"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"struct.blink::DataObject::Observer"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %39, i64 0, i32 0, i32 0
  %41 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %40, align 8
  %42 = icmp eq %"struct.blink::DataObject::Observer"* %41, null
  %43 = inttoptr i64 %17 to %"struct.blink::DataObject::Observer"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"struct.blink::DataObject::Observer"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.50"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.50"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"struct.blink::DataObject::Observer"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"struct.blink::DataObject::Observer"* %59, inttoptr (i64 -1 to %"struct.blink::DataObject::Observer"*)
  %67 = select i1 %66, %"class.blink::Member.50"* %60, %"class.blink::Member.50"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %72, i64 0, i32 0, i32 0
  %74 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %73, align 8
  %75 = icmp eq %"struct.blink::DataObject::Observer"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.50"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.50"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.50"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %2, align 8
  %89 = ptrtoint %"struct.blink::DataObject::Observer"* %88 to i64
  %90 = bitcast %"class.blink::Member.50"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"struct.blink::DataObject::Observer"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #13
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.50"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #13
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.48"* %0, %"class.blink::Member.50"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.50"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.50"*, i8 } undef, %"class.blink::Member.50"* %117, 0
  %119 = insertvalue { %"class.blink::Member.50"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.50"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.48"*, %"class.blink::Member.50"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.48"* %0, i32 %35, %"class.blink::Member.50"* %1, i8* nonnull dereferenceable(1) %4) #13
  %37 = load i8, i8* %4, align 1, !range !18
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #13
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.50"*
  %44 = call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.48"* %0, %"class.blink::Member.50"* %43, i32 %40, %"class.blink::Member.50"* %1) #13
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.50"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.50"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE12ExpandBufferEjPS5_Rb(%"class.WTF::HashTable.48"*, i32, %"class.blink::Member.50"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !18
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %33 = icmp eq %"class.blink::Member.50"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.50"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #13
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #13
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.50"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.50"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.50"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.50"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.50"* %61, %"class.blink::Member.50"* %55
  %63 = bitcast %"class.blink::Member.50"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.50"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.50"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.48"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #13
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.50"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.48"* %0, %"class.blink::Member.50"* %42, i32 %1, %"class.blink::Member.50"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.50"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.50"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.50"* %87, %"class.blink::Member.50"* %82
  %89 = bitcast %"class.blink::Member.50"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.50"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.50"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.50"* %99, %"class.blink::Member.50"* %88
  %101 = bitcast %"class.blink::Member.50"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.50"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.50"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.50"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.50"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10DataObject8ObserverEEES5_NS_17IdentityExtractorENS_10MemberHashIS4_EENS_10HashTraitsIS5_EESA_NS1_13HeapAllocatorEE8RehashToEPS5_jSD_(%"class.WTF::HashTable.48"*, %"class.blink::Member.50"*, i32, %"class.blink::Member.50"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.50"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.50"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.50"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #13
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.48"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.50"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #13
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.50"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.50"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #13
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.48", %"class.WTF::HashTable.48"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.50"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.50"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.50"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.50"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.50"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %68, i64 0, i32 0, i32 0
  %71 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %70, align 8
  %72 = icmp eq %"struct.blink::DataObject::Observer"* %71, null
  %73 = inttoptr i64 %45 to %"struct.blink::DataObject::Observer"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.50"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.50"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.50"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.50"* %93, null
  %95 = ptrtoint %"class.blink::Member.50"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"struct.blink::DataObject::Observer"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"struct.blink::DataObject::Observer"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"struct.blink::DataObject::Observer"* %99, inttoptr (i64 -1 to %"struct.blink::DataObject::Observer"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.50"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %111, i64 0, i32 0, i32 0
  %114 = load %"struct.blink::DataObject::Observer"*, %"struct.blink::DataObject::Observer"** %113, align 8
  %115 = icmp eq %"struct.blink::DataObject::Observer"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.50"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.50"*, %"class.blink::Member.50"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.50"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.50"* %118, %"class.blink::Member.50"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.50"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.50"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.16, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES6_NS1_17IdentityExtractorENS1_10MemberHashIS5_EENS1_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([396 x i8], [396 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10DataObject8ObserverEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_10DataObject8ObserverEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10DataObject8ObserverEEES7_NS2_17IdentityExtractorENS2_10MemberHashIS6_EENS2_10HashTraitsIS7_EESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_10DataObject8ObserverEEES7_NS_17IdentityExtractorENS_10MemberHashIS6_EENS_10HashTraitsIS7_EESC_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.50"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %174, %20
  ret void

33:                                               ; preds = %174, %30
  %34 = phi i64 [ 0, %30 ], [ %175, %174 ]
  %35 = getelementptr inbounds %"class.blink::Member.50", %"class.blink::Member.50"* %3, i64 %34
  %36 = bitcast %"class.blink::Member.50"* %35 to i64*
  br i1 %28, label %37, label %104

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %174
    i64 0, label %174
  ]

39:                                               ; preds = %37
  %40 = inttoptr i64 %38 to i8*
  %41 = and i64 %38, -131072
  %42 = inttoptr i64 %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 4138
  %44 = load i8, i8* %43, align 2
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = getelementptr inbounds i8, i8* %42, i64 4160
  br label %86

48:                                               ; preds = %39
  %49 = getelementptr inbounds i8, i8* %42, i64 4096
  %50 = bitcast i8* %49 to %"class.blink::NormalPage"*
  %51 = getelementptr inbounds i8, i8* %42, i64 4400
  %52 = bitcast i8* %51 to i8**
  %53 = bitcast i8* %51 to i64*
  %54 = load i64, i64* %53, align 16
  %55 = sub i64 %38, %54
  %56 = lshr i64 %55, 3
  %57 = lshr i64 %55, 6
  %58 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %57
  %59 = load atomic i8, i8* %58 acquire, align 1
  %60 = trunc i64 %56 to i32
  %61 = and i32 %60, 7
  %62 = shl i32 2, %61
  %63 = trunc i32 %62 to i8
  %64 = add i8 %63, -1
  %65 = and i8 %64, %59
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %48, %67
  %68 = phi i64 [ %69, %67 ], [ %57, %48 ]
  %69 = add i64 %68, -1
  %70 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %69
  %71 = load atomic i8, i8* %70 acquire, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %67, label %73

73:                                               ; preds = %67, %48
  %74 = phi i64 [ %57, %48 ], [ %69, %67 ]
  %75 = phi i8 [ %65, %48 ], [ %71, %67 ]
  %76 = zext i8 %75 to i32
  %77 = tail call i32 @llvm.ctlz.i32(i32 %76, i1 true) #13, !range !19
  %78 = add nsw i32 %77, -24
  %79 = shl i64 %74, 3
  %80 = or i64 %79, 7
  %81 = sext i32 %78 to i64
  %82 = sub i64 %80, %81
  %83 = shl i64 %82, 3
  %84 = load i8*, i8** %52, align 16
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  br label %86

86:                                               ; preds = %73, %46
  %87 = phi i8* [ %47, %46 ], [ %85, %73 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = getelementptr inbounds i8, i8* %87, i64 4
  %90 = bitcast i8* %89 to i16*
  %91 = load atomic i16, i16* %90 acquire, align 2
  %92 = lshr i16 %91, 2
  %93 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %94 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %93, i64 0, i32 0
  %95 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %94, align 8
  %96 = zext i16 %92 to i64
  %97 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %95, i64 %96
  %98 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %98, i64 0, i32 0
  %100 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %99, align 8
  %101 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, i64 5
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %0, i8* nonnull %40, i8* %88, void (%"class.blink::Visitor"*, i8*)* %100) #13
  br label %174

104:                                              ; preds = %33
  %105 = load i64, i64* %36, align 8
  switch i64 %105, label %106 [
    i64 -1, label %174
    i64 0, label %174
  ]

106:                                              ; preds = %104
  %107 = load atomic i64, i64* %36 monotonic, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %174, label %109

109:                                              ; preds = %106
  %110 = inttoptr i64 %107 to i8*
  %111 = and i64 %107, -131072
  %112 = inttoptr i64 %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 4138
  %114 = load i8, i8* %113, align 2
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = getelementptr inbounds i8, i8* %112, i64 4160
  br label %156

118:                                              ; preds = %109
  %119 = getelementptr inbounds i8, i8* %112, i64 4096
  %120 = bitcast i8* %119 to %"class.blink::NormalPage"*
  %121 = getelementptr inbounds i8, i8* %112, i64 4400
  %122 = bitcast i8* %121 to i8**
  %123 = bitcast i8* %121 to i64*
  %124 = load i64, i64* %123, align 16
  %125 = sub i64 %107, %124
  %126 = lshr i64 %125, 3
  %127 = lshr i64 %125, 6
  %128 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %127
  %129 = load atomic i8, i8* %128 acquire, align 1
  %130 = trunc i64 %126 to i32
  %131 = and i32 %130, 7
  %132 = shl i32 2, %131
  %133 = trunc i32 %132 to i8
  %134 = add i8 %133, -1
  %135 = and i8 %134, %129
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %118, %137
  %138 = phi i64 [ %139, %137 ], [ %127, %118 ]
  %139 = add i64 %138, -1
  %140 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %139
  %141 = load atomic i8, i8* %140 acquire, align 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %137, label %143

143:                                              ; preds = %137, %118
  %144 = phi i64 [ %127, %118 ], [ %139, %137 ]
  %145 = phi i8 [ %135, %118 ], [ %141, %137 ]
  %146 = zext i8 %145 to i32
  %147 = tail call i32 @llvm.ctlz.i32(i32 %146, i1 true) #13, !range !19
  %148 = add nsw i32 %147, -24
  %149 = shl i64 %144, 3
  %150 = or i64 %149, 7
  %151 = sext i32 %148 to i64
  %152 = sub i64 %150, %151
  %153 = shl i64 %152, 3
  %154 = load i8*, i8** %122, align 16
  %155 = getelementptr inbounds i8, i8* %154, i64 %153
  br label %156

156:                                              ; preds = %143, %116
  %157 = phi i8* [ %117, %116 ], [ %155, %143 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  %159 = getelementptr inbounds i8, i8* %157, i64 4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 acquire, align 2
  %162 = lshr i16 %161, 2
  %163 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %164 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %163, i64 0, i32 0
  %165 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %164, align 8
  %166 = zext i16 %162 to i64
  %167 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %165, i64 %166
  %168 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %168, i64 0, i32 0
  %170 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %169, align 8
  %171 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %172 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %171, i64 5
  %173 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %172, align 8
  tail call void %173(%"class.blink::Visitor"* %0, i8* nonnull %110, i8* %158, void (%"class.blink::Visitor"*, i8*)* %170) #13
  br label %174

174:                                              ; preds = %104, %104, %37, %37, %156, %106, %86
  %175 = add nuw nsw i64 %34, 1
  %176 = icmp eq i64 %175, %23
  br i1 %176, label %32, label %33
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_10DataObjectEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableIPKcNS2_12KeyValuePairIS5_NS_6MemberINS_10SupplementINS_10DataObjectEEEEEEENS2_24KeyValuePairKeyExtractorENS2_7PtrHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS5_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #13
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_10DataObjectEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #13
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIPKcNS_12KeyValuePairIS4_N5blink6MemberINS6_10SupplementINS6_10DataObjectEEEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS6_13HeapAllocatorEEEE5TraceEPNS6_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %181, %20
  ret void

33:                                               ; preds = %181, %30
  %34 = phi i64 [ 0, %30 ], [ %182, %181 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %109

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %181
    i64 0, label %181
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.277"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %181, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = and i64 %42, -131072
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 4138
  %49 = load i8, i8* %48, align 2
  %50 = icmp eq i8 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 4160
  br label %91

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %47, i64 4096
  %55 = bitcast i8* %54 to %"class.blink::NormalPage"*
  %56 = getelementptr inbounds i8, i8* %47, i64 4400
  %57 = bitcast i8* %56 to i8**
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %58, align 16
  %60 = sub i64 %42, %59
  %61 = lshr i64 %60, 3
  %62 = lshr i64 %60, 6
  %63 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %62
  %64 = load atomic i8, i8* %63 acquire, align 1
  %65 = trunc i64 %61 to i32
  %66 = and i32 %65, 7
  %67 = shl i32 2, %66
  %68 = trunc i32 %67 to i8
  %69 = add i8 %68, -1
  %70 = and i8 %69, %64
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %53, %72
  %73 = phi i64 [ %74, %72 ], [ %62, %53 ]
  %74 = add i64 %73, -1
  %75 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %55, i64 0, i32 2, i32 0, i32 1, i64 %74
  %76 = load atomic i8, i8* %75 acquire, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %72, label %78

78:                                               ; preds = %72, %53
  %79 = phi i64 [ %62, %53 ], [ %74, %72 ]
  %80 = phi i8 [ %70, %53 ], [ %76, %72 ]
  %81 = zext i8 %80 to i32
  %82 = tail call i32 @llvm.ctlz.i32(i32 %81, i1 true) #13, !range !19
  %83 = add nsw i32 %82, -24
  %84 = shl i64 %79, 3
  %85 = or i64 %84, 7
  %86 = sext i32 %83 to i64
  %87 = sub i64 %85, %86
  %88 = shl i64 %87, 3
  %89 = load i8*, i8** %57, align 16
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  br label %91

91:                                               ; preds = %78, %51
  %92 = phi i8* [ %52, %51 ], [ %90, %78 ]
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = getelementptr inbounds i8, i8* %92, i64 4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 acquire, align 2
  %97 = lshr i16 %96, 2
  %98 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %99 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %98, i64 0, i32 0
  %100 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %99, align 8
  %101 = zext i16 %97 to i64
  %102 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %100, i64 %101
  %103 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %102, align 8
  %104 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %103, i64 0, i32 0
  %105 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %104, align 8
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %107 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %106, i64 5
  %108 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, align 8
  tail call void %108(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* %93, void (%"class.blink::Visitor"*, i8*)* %105) #13
  br label %181

109:                                              ; preds = %33
  %110 = load i64, i64* %36, align 8
  switch i64 %110, label %111 [
    i64 -1, label %181
    i64 0, label %181
  ]

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %113 = bitcast %"class.blink::Member.277"* %112 to i64*
  %114 = load atomic i64, i64* %113 monotonic, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %181, label %116

116:                                              ; preds = %111
  %117 = inttoptr i64 %114 to i8*
  %118 = and i64 %114, -131072
  %119 = inttoptr i64 %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 4138
  %121 = load i8, i8* %120, align 2
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, i8* %119, i64 4160
  br label %163

125:                                              ; preds = %116
  %126 = getelementptr inbounds i8, i8* %119, i64 4096
  %127 = bitcast i8* %126 to %"class.blink::NormalPage"*
  %128 = getelementptr inbounds i8, i8* %119, i64 4400
  %129 = bitcast i8* %128 to i8**
  %130 = bitcast i8* %128 to i64*
  %131 = load i64, i64* %130, align 16
  %132 = sub i64 %114, %131
  %133 = lshr i64 %132, 3
  %134 = lshr i64 %132, 6
  %135 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %134
  %136 = load atomic i8, i8* %135 acquire, align 1
  %137 = trunc i64 %133 to i32
  %138 = and i32 %137, 7
  %139 = shl i32 2, %138
  %140 = trunc i32 %139 to i8
  %141 = add i8 %140, -1
  %142 = and i8 %141, %136
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %125, %144
  %145 = phi i64 [ %146, %144 ], [ %134, %125 ]
  %146 = add i64 %145, -1
  %147 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %127, i64 0, i32 2, i32 0, i32 1, i64 %146
  %148 = load atomic i8, i8* %147 acquire, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %144, label %150

150:                                              ; preds = %144, %125
  %151 = phi i64 [ %134, %125 ], [ %146, %144 ]
  %152 = phi i8 [ %142, %125 ], [ %148, %144 ]
  %153 = zext i8 %152 to i32
  %154 = tail call i32 @llvm.ctlz.i32(i32 %153, i1 true) #13, !range !19
  %155 = add nsw i32 %154, -24
  %156 = shl i64 %151, 3
  %157 = or i64 %156, 7
  %158 = sext i32 %155 to i64
  %159 = sub i64 %157, %158
  %160 = shl i64 %159, 3
  %161 = load i8*, i8** %129, align 16
  %162 = getelementptr inbounds i8, i8* %161, i64 %160
  br label %163

163:                                              ; preds = %150, %123
  %164 = phi i8* [ %124, %123 ], [ %162, %150 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 8
  %166 = getelementptr inbounds i8, i8* %164, i64 4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 acquire, align 2
  %169 = lshr i16 %168, 2
  %170 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %171 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %170, i64 0, i32 0
  %172 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %171, align 8
  %173 = zext i16 %169 to i64
  %174 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %172, i64 %173
  %175 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %175, i64 0, i32 0
  %177 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %176, align 8
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  tail call void %180(%"class.blink::Visitor"* %0, i8* nonnull %117, i8* %165, void (%"class.blink::Visitor"*, i8*)* %177) #13
  br label %181

181:                                              ; preds = %109, %109, %37, %37, %163, %111, %39, %91
  %182 = add nuw nsw i64 %34, 1
  %183 = icmp eq i64 %182, %23
  br i1 %183, label %32, label %33
}

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #2

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE8PassPipeEv: argument 0"}
!6 = distinct !{!6, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE8PassPipeEv"}
!7 = !{!8, !5}
!8 = distinct !{!8, !9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!9 = distinct !{!9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink11WebDragData5ItemsEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink11WebDragData5ItemsEv"}
!18 = !{i8 0, i8 2}
!19 = !{i32 24, i32 33}
