; ModuleID = '../../third_party/angle/src/compiler/translator/ValidateOutputs.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/ValidateOutputs.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, [7 x i8] }>
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TIntermNode"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.12" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { i32*, i32*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i32* }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"**, %"class.std::__1::__compressed_pair.93" }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.52"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.52" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.53"*, i64, i32, %"class.std::__1::basic_string.61" }
%"class.sh::TVector.53" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.sh::TField"**, %"class.sh::TField"**, %"class.std::__1::__compressed_pair.56" }
%"class.sh::TField" = type <{ %"class.sh::TType"*, %"class.sh::ImmutableString", %"struct.sh::TSourceLoc", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.sh::TField"** }
%"class.std::__1::basic_string.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon.64 }
%union.anon.64 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TConstantUnion" = type { %union.anon.69, i32 }
%union.anon.69 = type { i32 }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.sh::TIntermSymbol"** }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.sh::(anonymous namespace)::ValidateOutputsTraverser" = type { %"class.sh::TIntermTraverser", i32, i8, i8, %"class.std::__1::vector.91", %"class.std::__1::vector.91", %"class.std::__1::vector.91", %"class.std::__1::set" }
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.19", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.sh::TVector", %"class.std::__1::vector.84" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.21" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.26", %"class.std::__1::vector.33", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map.41", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::unique_ptr.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::unique_ptr.35"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector", %"class.sh::TVector" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.86" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.98" }
%"class.std::__1::__tree.98" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.105", i8, [7 x i8] }>
%"class.sh::TVector.105" = type { %"class.std::__1::vector.106" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { i32*, i32*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i32* }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.113"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.113" = type opaque
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector" }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE = comdat any

$_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

@_ZTVN2sh12_GLOBAL__N_124ValidateOutputsTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateOutputsTraverser"*)* @_ZN2sh12_GLOBAL__N_124ValidateOutputsTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateOutputsTraverser"*)* @_ZN2sh12_GLOBAL__N_124ValidateOutputsTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::ValidateOutputsTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh12_GLOBAL__N_124ValidateOutputsTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [62 x i8] c"conflicting output locations with previously defined output '\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"output array locations would exceed MAX_DRAW_BUFFERS\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"output location must be < MAX_DRAW_BUFFERS\00", align 1
@.str.5 = private unnamed_addr constant [75 x i8] c"must explicitly specify all locations when using multiple fragment outputs\00", align 1
@.str.6 = private unnamed_addr constant [89 x i8] c"not allowed to specify yuv qualifier when using depth or multiple color fragment outputs\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh15ValidateOutputsEPNS_12TIntermBlockERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS2_4lessIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEEiPNS_12TDiagnosticsE(%"class.sh::TIntermBlock"*, %"class.std::__1::map"* dereferenceable(24), i32, %"class.sh::TDiagnostics"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.91", align 8
  %6 = alloca %"class.std::__1::vector.91", align 8
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = alloca %"class.sh::ImmutableString", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", align 8
  %11 = bitcast %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 256, i1 false)
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %12, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* null) #9
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ValidateOutputsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 1
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 2
  %16 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map"* dereferenceable(24) %1, i8 zeroext 7) #9
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %15, align 4
  %18 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 3
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 4
  %20 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 7, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  %24 = bitcast %"class.std::__1::vector.91"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 72, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"** %22, align 8
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermTraverser"* nonnull %12) #9
  %25 = getelementptr inbounds %"class.sh::TDiagnostics", %"class.sh::TDiagnostics"* %3, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.std::__1::vector.91"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %5, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %5, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = load i32, i32* %14, align 8
  %32 = sext i32 %31 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #9
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %4
  %35 = bitcast %"class.std::__1::vector.91"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #9
  br label %60

38:                                               ; preds = %4
  %39 = icmp slt i32 %31, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector.91"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %41) #10
  unreachable

42:                                               ; preds = %38
  %43 = shl nsw i64 %32, 3
  %44 = call i8* @_Znwm(i64 %43) #11
  %45 = bitcast i8* %44 to %"class.sh::TIntermSymbol"**
  %46 = bitcast %"class.std::__1::vector.91"* %5 to i8**
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %45, i64 %32
  store %"class.sh::TIntermSymbol"** %47, %"class.sh::TIntermSymbol"*** %30, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 %43, i1 false) #9
  %48 = bitcast %"class.sh::TIntermSymbol"*** %29 to i64*
  %49 = ptrtoint %"class.sh::TIntermSymbol"** %47 to i64
  store i64 %49, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector.91"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = call i8* @_Znwm(i64 %43) #11
  %55 = bitcast i8* %54 to %"class.sh::TIntermSymbol"**
  %56 = bitcast %"class.std::__1::vector.91"* %6 to i8**
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %55, i64 %32
  store %"class.sh::TIntermSymbol"** %57, %"class.sh::TIntermSymbol"*** %53, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 %43, i1 false) #9
  %58 = bitcast %"class.sh::TIntermSymbol"*** %52 to i64*
  %59 = ptrtoint %"class.sh::TIntermSymbol"** %57 to i64
  store i64 %59, i64* %58, align 8
  br label %60

60:                                               ; preds = %34, %42
  %61 = phi %"class.sh::TIntermSymbol"*** [ %37, %34 ], [ %52, %42 ]
  %62 = phi %"class.sh::TIntermSymbol"*** [ %36, %34 ], [ %51, %42 ]
  %63 = phi i8* [ %35, %34 ], [ %50, %42 ]
  %64 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 4, i32 0, i32 0
  %65 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %64, align 8
  %66 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 4, i32 0, i32 1
  %67 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %66, align 8
  %68 = icmp eq %"class.sh::TIntermSymbol"** %65, %67
  br i1 %68, label %98, label %69

69:                                               ; preds = %60
  %70 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  %71 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_ostream.base"* %71 to %"class.std::__1::basic_ostream"*
  %73 = bitcast %"class.sh::ImmutableString"* %8 to i8*
  %74 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %8, i64 0, i32 0
  %75 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %8, i64 0, i32 1
  %76 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %77 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %82 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  %83 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %84 = inttoptr i64 %81 to i8*
  %85 = getelementptr i8, i8* %84, i64 -24
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %88 = bitcast %"class.std::__1::basic_ostream.base"* %71 to i64*
  %89 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %77, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %77, i64 0, i32 0
  %95 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  %96 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %97 = bitcast %"class.std::__1::basic_ios.base"* %96 to %"class.std::__1::basic_ios"*
  br label %101

98:                                               ; preds = %201, %60
  %99 = load i8, i8* %15, align 4, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %204, label %247

101:                                              ; preds = %201, %69
  %102 = phi %"class.sh::TIntermSymbol"** [ %65, %69 ], [ %202, %201 ]
  %103 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %102, align 8
  %104 = bitcast %"class.sh::TIntermSymbol"* %103 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %105 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %104, align 8
  %106 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %105, i64 31
  %107 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %106, align 8
  %108 = call dereferenceable(184) %"class.sh::TType"* %107(%"class.sh::TIntermSymbol"* %103) #9
  %109 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %108, i64 0, i32 10, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %108, i64 0, i32 10, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = add i64 %110, -1
  %116 = getelementptr inbounds i32, i32* %114, i64 %115
  %117 = load i32, i32* %116, align 4
  br label %118

118:                                              ; preds = %112, %101
  %119 = phi i32 [ %117, %112 ], [ 1, %101 ]
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %108, i64 0, i32 7, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %108, i64 0, i32 7, i32 20
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 1
  %127 = select i1 %126, %"class.std::__1::vector.91"* %6, %"class.std::__1::vector.91"* %5
  %128 = add nsw i64 %123, %120
  %129 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %127, i64 0, i32 0, i32 1
  %130 = bitcast %"class.sh::TIntermSymbol"*** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::__1::vector.91"* %127 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 3
  %136 = icmp ugt i64 %128, %135
  %137 = inttoptr i64 %133 to %"class.sh::TIntermSymbol"**
  %138 = icmp eq i32 %119, 0
  br i1 %136, label %191, label %139

139:                                              ; preds = %118
  br i1 %138, label %201, label %140

140:                                              ; preds = %139
  %141 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %127, i64 0, i32 0, i32 0
  %142 = bitcast %"class.sh::TIntermSymbol"** %102 to i64*
  br label %143

143:                                              ; preds = %189, %140
  %144 = phi %"class.sh::TIntermSymbol"** [ %137, %140 ], [ %190, %189 ]
  %145 = phi i64 [ 0, %140 ], [ %187, %189 ]
  %146 = add nsw i64 %145, %123
  %147 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %144, i64 %146
  %148 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %147, align 8
  %149 = icmp eq %"class.sh::TIntermSymbol"* %148, null
  br i1 %149, label %183, label %150

150:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %70) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 280, i1 false) #9
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %7) #9
  %151 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %72, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i64 61) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %152 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %141, align 8
  %153 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %152, i64 %146
  %154 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %153, align 8
  %155 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %154) #9
  %156 = extractvalue { i8*, i64 } %155, 0
  store i8* %156, i8** %74, align 8
  %157 = extractvalue { i8*, i64 } %155, 1
  store i64 %157, i64* %75, align 8
  %158 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %151, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %8) #9
  %159 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %158, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  %160 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %102, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #9
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_stringbuf"* %77) #9
  %161 = load i8, i8* %79, align 1
  %162 = icmp slt i8 %161, 0
  %163 = load i8*, i8** %80, align 8
  %164 = select i1 %162, i8* %163, i8* %76
  %165 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %160, i64 0, i32 0, i32 0, i32 1
  %166 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %160) #9
  %167 = extractvalue { i8*, i64 } %166, 0
  %168 = icmp eq i8* %167, null
  %169 = select i1 %168, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %167
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %165, i8* %164, i8* %169) #9
  %170 = load i8, i8* %79, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %150
  %173 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %173) #11
  br label %174

174:                                              ; preds = %172, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #9
  store i64 %81, i64* %82, align 8
  %175 = load i64, i64* %86, align 8
  %176 = getelementptr inbounds i8, i8* %70, i64 %175
  %177 = bitcast i8* %176 to i64*
  store i64 %83, i64* %177, align 8
  store i64 %87, i64* %88, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %178 = load i8, i8* %92, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %181) #11
  br label %182

182:                                              ; preds = %180, %174
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %94) #9
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %95, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #9
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %97) #9
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %70) #9
  br label %186

183:                                              ; preds = %143
  %184 = load i64, i64* %142, align 8
  %185 = bitcast %"class.sh::TIntermSymbol"** %147 to i64*
  store i64 %184, i64* %185, align 8
  br label %186

186:                                              ; preds = %183, %182
  %187 = add nuw nsw i64 %145, 1
  %188 = icmp eq i64 %187, %120
  br i1 %188, label %201, label %189

189:                                              ; preds = %186
  %190 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %141, align 8
  br label %143

191:                                              ; preds = %118
  br i1 %138, label %201, label %192

192:                                              ; preds = %191
  %193 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %102, align 8
  %194 = icmp eq i32 %119, 1
  %195 = select i1 %194, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0)
  %196 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %193, i64 0, i32 0, i32 0, i32 1
  %197 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %193) #9
  %198 = extractvalue { i8*, i64 } %197, 0
  %199 = icmp eq i8* %198, null
  %200 = select i1 %199, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %198
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %196, i8* %195, i8* %200) #9
  br label %201

201:                                              ; preds = %186, %192, %191, %139
  %202 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %102, i64 1
  %203 = icmp eq %"class.sh::TIntermSymbol"** %202, %67
  br i1 %203, label %98, label %101

204:                                              ; preds = %98
  %205 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %64, align 8
  %206 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %66, align 8
  %207 = icmp eq %"class.sh::TIntermSymbol"** %205, %206
  br i1 %207, label %208, label %217

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5, i32 0, i32 1
  %210 = bitcast %"class.sh::TIntermSymbol"*** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5
  %213 = bitcast %"class.std::__1::vector.91"* %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = inttoptr i64 %214 to %"class.sh::TIntermSymbol"**
  %216 = inttoptr i64 %211 to %"class.sh::TIntermSymbol"**
  br label %225

217:                                              ; preds = %204
  %218 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5, i32 0, i32 0
  %219 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %218, align 8
  %220 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5, i32 0, i32 1
  %221 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %220, align 8
  %222 = icmp eq %"class.sh::TIntermSymbol"** %219, %221
  br i1 %222, label %223, label %233

223:                                              ; preds = %217
  %224 = ptrtoint %"class.sh::TIntermSymbol"** %219 to i64
  br label %225

225:                                              ; preds = %223, %208
  %226 = phi %"class.sh::TIntermSymbol"** [ %216, %208 ], [ %219, %223 ]
  %227 = phi %"class.sh::TIntermSymbol"** [ %215, %208 ], [ %219, %223 ]
  %228 = phi i64 [ %214, %208 ], [ %224, %223 ]
  %229 = phi i64 [ %211, %208 ], [ %224, %223 ]
  %230 = sub i64 %229, %228
  %231 = ashr exact i64 %230, 3
  %232 = icmp ugt i64 %231, 1
  br i1 %232, label %233, label %247

233:                                              ; preds = %225, %217
  %234 = phi %"class.sh::TIntermSymbol"** [ %226, %225 ], [ %221, %217 ]
  %235 = phi %"class.sh::TIntermSymbol"** [ %227, %225 ], [ %219, %217 ]
  %236 = icmp eq %"class.sh::TIntermSymbol"** %235, %234
  br i1 %236, label %247, label %237

237:                                              ; preds = %233, %237
  %238 = phi %"class.sh::TIntermSymbol"** [ %245, %237 ], [ %235, %233 ]
  %239 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %238, align 8
  %240 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %239, i64 0, i32 0, i32 0, i32 1
  %241 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %239) #9
  %242 = extractvalue { i8*, i64 } %241, 0
  %243 = icmp eq i8* %242, null
  %244 = select i1 %243, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %242
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %240, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.5, i64 0, i64 0), i8* %244) #9
  %245 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %238, i64 1
  %246 = icmp eq %"class.sh::TIntermSymbol"** %245, %234
  br i1 %246, label %247, label %237

247:                                              ; preds = %237, %233, %225, %98
  %248 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 6, i32 0, i32 0
  %249 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %248, align 8
  %250 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 6, i32 0, i32 1
  %251 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %250, align 8
  %252 = icmp eq %"class.sh::TIntermSymbol"** %249, %251
  br i1 %252, label %283, label %253

253:                                              ; preds = %247
  %254 = ptrtoint %"class.sh::TIntermSymbol"** %249 to i64
  %255 = ptrtoint %"class.sh::TIntermSymbol"** %251 to i64
  %256 = sub i64 %255, %254
  %257 = ashr exact i64 %256, 3
  %258 = icmp ult i64 %257, 2
  %259 = load i8, i8* %18, align 1
  %260 = icmp eq i8 %259, 0
  %261 = and i1 %258, %260
  br i1 %261, label %262, label %272

262:                                              ; preds = %253
  %263 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %64, align 8
  %264 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %66, align 8
  %265 = icmp eq %"class.sh::TIntermSymbol"** %263, %264
  br i1 %265, label %266, label %272

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5, i32 0, i32 0
  %268 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %267, align 8
  %269 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5, i32 0, i32 1
  %270 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %269, align 8
  %271 = icmp eq %"class.sh::TIntermSymbol"** %268, %270
  br i1 %271, label %283, label %272

272:                                              ; preds = %253, %266, %262
  br label %273

273:                                              ; preds = %272, %273
  %274 = phi %"class.sh::TIntermSymbol"** [ %281, %273 ], [ %249, %272 ]
  %275 = load %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %274, align 8
  %276 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %275, i64 0, i32 0, i32 0, i32 1
  %277 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %275) #9
  %278 = extractvalue { i8*, i64 } %277, 0
  %279 = icmp eq i8* %278, null
  %280 = select i1 %279, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %278
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %276, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.6, i64 0, i64 0), i8* %280) #9
  %281 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %274, i64 1
  %282 = icmp eq %"class.sh::TIntermSymbol"** %281, %251
  br i1 %282, label %283, label %273

283:                                              ; preds = %273, %266, %247
  %284 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %62, align 8
  %285 = icmp eq %"class.sh::TIntermSymbol"** %284, null
  br i1 %285, label %290, label %286

286:                                              ; preds = %283
  %287 = ptrtoint %"class.sh::TIntermSymbol"** %284 to i64
  %288 = bitcast %"class.sh::TIntermSymbol"*** %61 to i64*
  store i64 %287, i64* %288, align 8
  %289 = bitcast %"class.sh::TIntermSymbol"** %284 to i8*
  call void @_ZdlPv(i8* %289) #11
  br label %290

290:                                              ; preds = %286, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #9
  %291 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %28, align 8
  %292 = icmp eq %"class.sh::TIntermSymbol"** %291, null
  br i1 %292, label %297, label %293

293:                                              ; preds = %290
  %294 = ptrtoint %"class.sh::TIntermSymbol"** %291 to i64
  %295 = bitcast %"class.sh::TIntermSymbol"*** %29 to i64*
  store i64 %294, i64* %295, align 8
  %296 = bitcast %"class.sh::TIntermSymbol"** %291 to i8*
  call void @_ZdlPv(i8* %296) #11
  br label %297

297:                                              ; preds = %290, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %298 = load i32, i32* %25, align 8
  %299 = icmp eq i32 %298, %26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ValidateOutputsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %300 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 7, i32 0
  %301 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node"**
  %302 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %301, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.98"* %300, %"class.std::__1::__tree_node"* %302) #9
  %303 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %248, align 8
  %304 = icmp eq %"class.sh::TIntermSymbol"** %303, null
  br i1 %304, label %309, label %305

305:                                              ; preds = %297
  %306 = ptrtoint %"class.sh::TIntermSymbol"** %303 to i64
  %307 = bitcast %"class.sh::TIntermSymbol"*** %250 to i64*
  store i64 %306, i64* %307, align 8
  %308 = bitcast %"class.sh::TIntermSymbol"** %303 to i8*
  call void @_ZdlPv(i8* %308) #11
  br label %309

309:                                              ; preds = %305, %297
  %310 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5, i32 0, i32 0
  %311 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %310, align 8
  %312 = icmp eq %"class.sh::TIntermSymbol"** %311, null
  br i1 %312, label %318, label %313

313:                                              ; preds = %309
  %314 = ptrtoint %"class.sh::TIntermSymbol"** %311 to i64
  %315 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %10, i64 0, i32 5, i32 0, i32 1
  %316 = bitcast %"class.sh::TIntermSymbol"*** %315 to i64*
  store i64 %314, i64* %316, align 8
  %317 = bitcast %"class.sh::TIntermSymbol"** %311 to i8*
  call void @_ZdlPv(i8* %317) #11
  br label %318

318:                                              ; preds = %313, %309
  %319 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %64, align 8
  %320 = icmp eq %"class.sh::TIntermSymbol"** %319, null
  br i1 %320, label %325, label %321

321:                                              ; preds = %318
  %322 = ptrtoint %"class.sh::TIntermSymbol"** %319 to i64
  %323 = bitcast %"class.sh::TIntermSymbol"*** %66 to i64*
  store i64 %322, i64* %323, align 8
  %324 = bitcast %"class.sh::TIntermSymbol"** %319 to i8*
  call void @_ZdlPv(i8* %324) #11
  br label %325

325:                                              ; preds = %318, %321
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %11) #9
  ret i1 %299
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ValidateOutputsTraverserD2Ev(%"class.sh::(anonymous namespace)::ValidateOutputsTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ValidateOutputsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.98"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %7, align 8
  %9 = icmp eq %"class.sh::TIntermSymbol"** %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"class.sh::TIntermSymbol"** %8 to i64
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.sh::TIntermSymbol"*** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"class.sh::TIntermSymbol"** %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %1, %10
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %16, align 8
  %18 = icmp eq %"class.sh::TIntermSymbol"** %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"class.sh::TIntermSymbol"** %17 to i64
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 5, i32 0, i32 1
  %22 = bitcast %"class.sh::TIntermSymbol"*** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"class.sh::TIntermSymbol"** %17 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %15, %19
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 4, i32 0, i32 0
  %26 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %25, align 8
  %27 = icmp eq %"class.sh::TIntermSymbol"** %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"class.sh::TIntermSymbol"** %26 to i64
  %30 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 4, i32 0, i32 1
  %31 = bitcast %"class.sh::TIntermSymbol"*** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"class.sh::TIntermSymbol"** %26 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %24, %28
  %34 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %34) #9
  ret void
}

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

declare zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map"* dereferenceable(24), i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ValidateOutputsTraverserD0Ev(%"class.sh::(anonymous namespace)::ValidateOutputsTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_124ValidateOutputsTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.98"* %3, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %7, align 8
  %9 = icmp eq %"class.sh::TIntermSymbol"** %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"class.sh::TIntermSymbol"** %8 to i64
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.sh::TIntermSymbol"*** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"class.sh::TIntermSymbol"** %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %1
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %16, align 8
  %18 = icmp eq %"class.sh::TIntermSymbol"** %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"class.sh::TIntermSymbol"** %17 to i64
  %21 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 5, i32 0, i32 1
  %22 = bitcast %"class.sh::TIntermSymbol"*** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"class.sh::TIntermSymbol"** %17 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %19, %15
  %25 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 4, i32 0, i32 0
  %26 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %25, align 8
  %27 = icmp eq %"class.sh::TIntermSymbol"** %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"class.sh::TIntermSymbol"** %26 to i64
  %30 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 4, i32 0, i32 1
  %31 = bitcast %"class.sh::TIntermSymbol"*** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"class.sh::TIntermSymbol"** %26 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %24, %28
  %34 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %34) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_124ValidateOutputsTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::(anonymous namespace)::ValidateOutputsTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.sh::TIntermSymbol"* %1 to i64
  %4 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 1
  %5 = bitcast %"class.sh::TVariable"** %4 to %"class.sh::TSymbol"**
  %6 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 3
  br i1 %9, label %343, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7
  %12 = tail call dereferenceable(4) %"class.sh::TSymbolUniqueId"* @_ZNK2sh13TIntermSymbol8uniqueIdEv(%"class.sh::TIntermSymbol"* %1) #9
  %13 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %18, label %35, label %19

19:                                               ; preds = %10, %31
  %20 = phi %"class.std::__1::__tree_node"* [ %33, %31 ], [ %17, %10 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %14, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node"**
  br label %31

26:                                               ; preds = %19
  %27 = icmp slt i32 %22, %14
  br i1 %27, label %28, label %343

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::__tree_node_base"** %29 to %"class.std::__1::__tree_node"**
  br label %31

31:                                               ; preds = %28, %24
  %32 = phi %"class.std::__1::__tree_node"** [ %25, %24 ], [ %30, %28 ]
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node"* %33, null
  br i1 %34, label %35, label %19

35:                                               ; preds = %31, %10
  %36 = tail call dereferenceable(4) %"class.sh::TSymbolUniqueId"* @_ZNK2sh13TIntermSymbol8uniqueIdEv(%"class.sh::TIntermSymbol"* %1) #9
  %37 = getelementptr inbounds %"class.sh::TSymbolUniqueId", %"class.sh::TSymbolUniqueId"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %40 = icmp eq %"class.std::__1::__tree_node"* %39, null
  br i1 %40, label %69, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %65, %41
  %44 = phi %"class.std::__1::__tree_node"* [ %68, %65 ], [ %39, %41 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %67, %65 ], [ %42, %41 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %38, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0
  br label %71

55:                                               ; preds = %43
  %56 = icmp slt i32 %47, %38
  br i1 %56, label %57, label %63

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 1
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0
  br label %71

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0
  br label %71

65:                                               ; preds = %57, %49
  %66 = phi %"class.std::__1::__tree_node_base"* [ %51, %49 ], [ %59, %57 ]
  %67 = phi %"class.std::__1::__tree_node_base"** [ %50, %49 ], [ %58, %57 ]
  %68 = bitcast %"class.std::__1::__tree_node_base"* %66 to %"class.std::__1::__tree_node"*
  br label %43

69:                                               ; preds = %35
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  br label %71

71:                                               ; preds = %69, %63, %61, %53
  %72 = phi %"class.std::__1::__tree_end_node"* [ %15, %69 ], [ %54, %53 ], [ %62, %61 ], [ %64, %63 ]
  %73 = phi %"class.std::__1::__tree_node_base"** [ %70, %69 ], [ %50, %53 ], [ %58, %61 ], [ %45, %63 ]
  %74 = bitcast %"class.std::__1::__tree_node_base"** %73 to %"class.std::__1::__tree_node"**
  %75 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node"* %75, null
  br i1 %76, label %77, label %101

77:                                               ; preds = %71
  %78 = tail call i8* @_Znwm(i64 32) #11, !noalias !3
  %79 = getelementptr inbounds i8, i8* %78, i64 28
  %80 = bitcast i8* %79 to i32*
  store i32 %38, i32* %80, align 4, !noalias !3
  %81 = bitcast i8* %78 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds i8, i8* %78, i64 16
  %83 = bitcast i8* %82 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %83, align 8
  %84 = bitcast %"class.std::__1::__tree_node_base"** %73 to i8**
  store i8* %78, i8** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %77
  %91 = ptrtoint %"class.std::__1::__tree_node_base"* %88 to i64
  %92 = bitcast %"class.std::__1::set"* %11 to i64*
  store i64 %91, i64* %92, align 8
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  br label %94

94:                                               ; preds = %90, %77
  %95 = phi %"class.std::__1::__tree_node_base"* [ %81, %77 ], [ %93, %90 ]
  %96 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %97, %"class.std::__1::__tree_node_base"* %95) #9
  %98 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 1
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %71, %94
  %102 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1, i64 0, i32 0
  %103 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %104 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %104, i64 31
  %106 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %105, align 8
  %107 = tail call dereferenceable(184) %"class.sh::TType"* %106(%"class.sh::TIntermTyped"* %102) #9
  %108 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %107, i64 0, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 10
  br i1 %110, label %111, label %338

111:                                              ; preds = %101
  %112 = bitcast %"class.sh::TIntermSymbol"* %1 to %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)***
  %113 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %112, align 8
  %114 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %113, i64 31
  %115 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %114, align 8
  %116 = tail call dereferenceable(184) %"class.sh::TType"* %115(%"class.sh::TIntermSymbol"* %1) #9
  %117 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %116, i64 0, i32 7, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, -1
  br i1 %119, label %190, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 4
  %122 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 4, i32 0, i32 1
  %123 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %122, align 8
  %124 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %125 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %124, align 8
  %126 = icmp eq %"class.sh::TIntermSymbol"** %123, %125
  %127 = ptrtoint %"class.sh::TIntermSymbol"** %125 to i64
  br i1 %126, label %133, label %128

128:                                              ; preds = %120
  %129 = bitcast %"class.sh::TIntermSymbol"** %123 to i64*
  store i64 %3, i64* %129, align 8
  %130 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %123, i64 1
  %131 = ptrtoint %"class.sh::TIntermSymbol"** %130 to i64
  %132 = bitcast %"class.sh::TIntermSymbol"*** %122 to i64*
  store i64 %131, i64* %132, align 8
  br label %343

133:                                              ; preds = %120
  %134 = ptrtoint %"class.sh::TIntermSymbol"** %123 to i64
  %135 = bitcast %"class.sh::TIntermSymbol"*** %122 to i64*
  %136 = bitcast %"class.std::__1::vector.91"* %121 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %134, %137
  %139 = ashr exact i64 %138, 3
  %140 = add nsw i64 %139, 1
  %141 = icmp ugt i64 %140, 2305843009213693951
  br i1 %141, label %142, label %144

142:                                              ; preds = %133
  %143 = bitcast %"class.std::__1::vector.91"* %121 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #10
  unreachable

144:                                              ; preds = %133
  %145 = bitcast %"class.sh::TIntermSymbol"*** %124 to i64*
  %146 = sub i64 %127, %137
  %147 = ashr exact i64 %146, 3
  %148 = icmp ult i64 %147, 1152921504606846975
  br i1 %148, label %149, label %157

149:                                              ; preds = %144
  %150 = ashr exact i64 %146, 2
  %151 = icmp ult i64 %150, %140
  %152 = select i1 %151, i64 %140, i64 %150
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %149
  %155 = icmp ugt i64 %152, 2305843009213693951
  br i1 %155, label %156, label %157

156:                                              ; preds = %154
  tail call void @abort() #10
  unreachable

157:                                              ; preds = %154, %144
  %158 = phi i64 [ %152, %154 ], [ 2305843009213693951, %144 ]
  %159 = shl i64 %158, 3
  %160 = tail call i8* @_Znwm(i64 %159) #11
  %161 = bitcast i8* %160 to %"class.sh::TIntermSymbol"**
  br label %162

162:                                              ; preds = %157, %149
  %163 = phi i64 [ %158, %157 ], [ 0, %149 ]
  %164 = phi %"class.sh::TIntermSymbol"** [ %161, %157 ], [ null, %149 ]
  %165 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %164, i64 %139
  %166 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %164, i64 %163
  %167 = ptrtoint %"class.sh::TIntermSymbol"** %166 to i64
  %168 = bitcast %"class.sh::TIntermSymbol"** %165 to i64*
  store i64 %3, i64* %168, align 8
  %169 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %165, i64 1
  %170 = ptrtoint %"class.sh::TIntermSymbol"** %169 to i64
  %171 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %121, i64 0, i32 0, i32 0
  %172 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %171, align 8
  %173 = load i64, i64* %135, align 8
  %174 = ptrtoint %"class.sh::TIntermSymbol"** %172 to i64
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = sub nsw i64 0, %176
  %178 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %165, i64 %177
  %179 = ptrtoint %"class.sh::TIntermSymbol"** %178 to i64
  %180 = icmp sgt i64 %175, 0
  br i1 %180, label %181, label %185

181:                                              ; preds = %162
  %182 = bitcast %"class.sh::TIntermSymbol"** %178 to i8*
  %183 = bitcast %"class.sh::TIntermSymbol"** %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 %175, i1 false) #9
  %184 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %171, align 8
  br label %185

185:                                              ; preds = %181, %162
  %186 = phi %"class.sh::TIntermSymbol"** [ %172, %162 ], [ %184, %181 ]
  store i64 %179, i64* %136, align 8
  store i64 %170, i64* %135, align 8
  store i64 %167, i64* %145, align 8
  %187 = icmp eq %"class.sh::TIntermSymbol"** %186, null
  br i1 %187, label %343, label %188

188:                                              ; preds = %185
  %189 = bitcast %"class.sh::TIntermSymbol"** %186 to i8*
  tail call void @_ZdlPv(i8* %189) #11
  br label %343

190:                                              ; preds = %111
  %191 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*** %112, align 8
  %192 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %191, i64 31
  %193 = load %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TType"* (%"class.sh::TIntermSymbol"*)** %192, align 8
  %194 = tail call dereferenceable(184) %"class.sh::TType"* %193(%"class.sh::TIntermSymbol"* %1) #9
  %195 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %194, i64 0, i32 7, i32 9
  %196 = load i8, i8* %195, align 4
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %268, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 6
  %200 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 6, i32 0, i32 1
  %201 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %200, align 8
  %202 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %203 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %202, align 8
  %204 = icmp eq %"class.sh::TIntermSymbol"** %201, %203
  %205 = ptrtoint %"class.sh::TIntermSymbol"** %203 to i64
  br i1 %204, label %211, label %206

206:                                              ; preds = %198
  %207 = bitcast %"class.sh::TIntermSymbol"** %201 to i64*
  store i64 %3, i64* %207, align 8
  %208 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %201, i64 1
  %209 = ptrtoint %"class.sh::TIntermSymbol"** %208 to i64
  %210 = bitcast %"class.sh::TIntermSymbol"*** %200 to i64*
  store i64 %209, i64* %210, align 8
  br label %343

211:                                              ; preds = %198
  %212 = ptrtoint %"class.sh::TIntermSymbol"** %201 to i64
  %213 = bitcast %"class.sh::TIntermSymbol"*** %200 to i64*
  %214 = bitcast %"class.std::__1::vector.91"* %199 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %212, %215
  %217 = ashr exact i64 %216, 3
  %218 = add nsw i64 %217, 1
  %219 = icmp ugt i64 %218, 2305843009213693951
  br i1 %219, label %220, label %222

220:                                              ; preds = %211
  %221 = bitcast %"class.std::__1::vector.91"* %199 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %221) #10
  unreachable

222:                                              ; preds = %211
  %223 = bitcast %"class.sh::TIntermSymbol"*** %202 to i64*
  %224 = sub i64 %205, %215
  %225 = ashr exact i64 %224, 3
  %226 = icmp ult i64 %225, 1152921504606846975
  br i1 %226, label %227, label %235

227:                                              ; preds = %222
  %228 = ashr exact i64 %224, 2
  %229 = icmp ult i64 %228, %218
  %230 = select i1 %229, i64 %218, i64 %228
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %240, label %232

232:                                              ; preds = %227
  %233 = icmp ugt i64 %230, 2305843009213693951
  br i1 %233, label %234, label %235

234:                                              ; preds = %232
  tail call void @abort() #10
  unreachable

235:                                              ; preds = %232, %222
  %236 = phi i64 [ %230, %232 ], [ 2305843009213693951, %222 ]
  %237 = shl i64 %236, 3
  %238 = tail call i8* @_Znwm(i64 %237) #11
  %239 = bitcast i8* %238 to %"class.sh::TIntermSymbol"**
  br label %240

240:                                              ; preds = %235, %227
  %241 = phi i64 [ %236, %235 ], [ 0, %227 ]
  %242 = phi %"class.sh::TIntermSymbol"** [ %239, %235 ], [ null, %227 ]
  %243 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %242, i64 %217
  %244 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %242, i64 %241
  %245 = ptrtoint %"class.sh::TIntermSymbol"** %244 to i64
  %246 = bitcast %"class.sh::TIntermSymbol"** %243 to i64*
  store i64 %3, i64* %246, align 8
  %247 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %243, i64 1
  %248 = ptrtoint %"class.sh::TIntermSymbol"** %247 to i64
  %249 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %199, i64 0, i32 0, i32 0
  %250 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %249, align 8
  %251 = load i64, i64* %213, align 8
  %252 = ptrtoint %"class.sh::TIntermSymbol"** %250 to i64
  %253 = sub i64 %251, %252
  %254 = ashr exact i64 %253, 3
  %255 = sub nsw i64 0, %254
  %256 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %243, i64 %255
  %257 = ptrtoint %"class.sh::TIntermSymbol"** %256 to i64
  %258 = icmp sgt i64 %253, 0
  br i1 %258, label %259, label %263

259:                                              ; preds = %240
  %260 = bitcast %"class.sh::TIntermSymbol"** %256 to i8*
  %261 = bitcast %"class.sh::TIntermSymbol"** %250 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %261, i64 %253, i1 false) #9
  %262 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %249, align 8
  br label %263

263:                                              ; preds = %259, %240
  %264 = phi %"class.sh::TIntermSymbol"** [ %250, %240 ], [ %262, %259 ]
  store i64 %257, i64* %214, align 8
  store i64 %248, i64* %213, align 8
  store i64 %245, i64* %223, align 8
  %265 = icmp eq %"class.sh::TIntermSymbol"** %264, null
  br i1 %265, label %343, label %266

266:                                              ; preds = %263
  %267 = bitcast %"class.sh::TIntermSymbol"** %264 to i8*
  tail call void @_ZdlPv(i8* %267) #11
  br label %343

268:                                              ; preds = %190
  %269 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 5
  %270 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 5, i32 0, i32 1
  %271 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %270, align 8
  %272 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %273 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %272, align 8
  %274 = icmp eq %"class.sh::TIntermSymbol"** %271, %273
  %275 = ptrtoint %"class.sh::TIntermSymbol"** %273 to i64
  br i1 %274, label %281, label %276

276:                                              ; preds = %268
  %277 = bitcast %"class.sh::TIntermSymbol"** %271 to i64*
  store i64 %3, i64* %277, align 8
  %278 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %271, i64 1
  %279 = ptrtoint %"class.sh::TIntermSymbol"** %278 to i64
  %280 = bitcast %"class.sh::TIntermSymbol"*** %270 to i64*
  store i64 %279, i64* %280, align 8
  br label %343

281:                                              ; preds = %268
  %282 = ptrtoint %"class.sh::TIntermSymbol"** %271 to i64
  %283 = bitcast %"class.sh::TIntermSymbol"*** %270 to i64*
  %284 = bitcast %"class.std::__1::vector.91"* %269 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = sub i64 %282, %285
  %287 = ashr exact i64 %286, 3
  %288 = add nsw i64 %287, 1
  %289 = icmp ugt i64 %288, 2305843009213693951
  br i1 %289, label %290, label %292

290:                                              ; preds = %281
  %291 = bitcast %"class.std::__1::vector.91"* %269 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %291) #10
  unreachable

292:                                              ; preds = %281
  %293 = bitcast %"class.sh::TIntermSymbol"*** %272 to i64*
  %294 = sub i64 %275, %285
  %295 = ashr exact i64 %294, 3
  %296 = icmp ult i64 %295, 1152921504606846975
  br i1 %296, label %297, label %305

297:                                              ; preds = %292
  %298 = ashr exact i64 %294, 2
  %299 = icmp ult i64 %298, %288
  %300 = select i1 %299, i64 %288, i64 %298
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %310, label %302

302:                                              ; preds = %297
  %303 = icmp ugt i64 %300, 2305843009213693951
  br i1 %303, label %304, label %305

304:                                              ; preds = %302
  tail call void @abort() #10
  unreachable

305:                                              ; preds = %302, %292
  %306 = phi i64 [ %300, %302 ], [ 2305843009213693951, %292 ]
  %307 = shl i64 %306, 3
  %308 = tail call i8* @_Znwm(i64 %307) #11
  %309 = bitcast i8* %308 to %"class.sh::TIntermSymbol"**
  br label %310

310:                                              ; preds = %305, %297
  %311 = phi i64 [ %306, %305 ], [ 0, %297 ]
  %312 = phi %"class.sh::TIntermSymbol"** [ %309, %305 ], [ null, %297 ]
  %313 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %312, i64 %287
  %314 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %312, i64 %311
  %315 = ptrtoint %"class.sh::TIntermSymbol"** %314 to i64
  %316 = bitcast %"class.sh::TIntermSymbol"** %313 to i64*
  store i64 %3, i64* %316, align 8
  %317 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %313, i64 1
  %318 = ptrtoint %"class.sh::TIntermSymbol"** %317 to i64
  %319 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %269, i64 0, i32 0, i32 0
  %320 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %319, align 8
  %321 = load i64, i64* %283, align 8
  %322 = ptrtoint %"class.sh::TIntermSymbol"** %320 to i64
  %323 = sub i64 %321, %322
  %324 = ashr exact i64 %323, 3
  %325 = sub nsw i64 0, %324
  %326 = getelementptr inbounds %"class.sh::TIntermSymbol"*, %"class.sh::TIntermSymbol"** %313, i64 %325
  %327 = ptrtoint %"class.sh::TIntermSymbol"** %326 to i64
  %328 = icmp sgt i64 %323, 0
  br i1 %328, label %329, label %333

329:                                              ; preds = %310
  %330 = bitcast %"class.sh::TIntermSymbol"** %326 to i8*
  %331 = bitcast %"class.sh::TIntermSymbol"** %320 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %330, i8* align 8 %331, i64 %323, i1 false) #9
  %332 = load %"class.sh::TIntermSymbol"**, %"class.sh::TIntermSymbol"*** %319, align 8
  br label %333

333:                                              ; preds = %329, %310
  %334 = phi %"class.sh::TIntermSymbol"** [ %320, %310 ], [ %332, %329 ]
  store i64 %327, i64* %284, align 8
  store i64 %318, i64* %283, align 8
  store i64 %315, i64* %293, align 8
  %335 = icmp eq %"class.sh::TIntermSymbol"** %334, null
  br i1 %335, label %343, label %336

336:                                              ; preds = %333
  %337 = bitcast %"class.sh::TIntermSymbol"** %334 to i8*
  tail call void @_ZdlPv(i8* %337) #11
  br label %343

338:                                              ; preds = %101
  %339 = add i32 %109, -29
  %340 = icmp ult i32 %339, 2
  br i1 %340, label %341, label %343

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.sh::(anonymous namespace)::ValidateOutputsTraverser", %"class.sh::(anonymous namespace)::ValidateOutputsTraverser"* %0, i64 0, i32 3
  store i8 1, i8* %342, align 1
  br label %343

343:                                              ; preds = %26, %336, %333, %276, %266, %263, %206, %188, %185, %128, %338, %341, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

declare dereferenceable(4) %"class.sh::TSymbolUniqueId"* @_ZNK2sh13TIntermSymbol8uniqueIdEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* noalias sret) local_unnamed_addr #0 comdat {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 272, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #9
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %14, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %5, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #9
  %54 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %57 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #9
  store i32 24, i32* %56, align 8
  %58 = load i8*, i8** %16, align 8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = tail call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #9
  %64 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %66, align 8, !alias.scope !6
  %67 = bitcast i8* %62 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %67) #9
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %67, %"class.std::__1::locale"* dereferenceable(8) %63) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #9
  %68 = getelementptr inbounds i8, i8* %62, i64 40
  %69 = bitcast i8* %68 to %"class.std::__1::basic_streambuf"**
  %70 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %69, align 8, !noalias !6
  %71 = icmp eq %"class.std::__1::basic_streambuf"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %1
  %73 = bitcast %"class.std::__1::basic_streambuf"* %70 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %74 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %73, align 8, !noalias !9
  %75 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %74, i64 2
  %76 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %75, align 8, !noalias !9
  call void %76(%"class.std::__1::basic_streambuf"* nonnull %70, %"class.std::__1::locale"* dereferenceable(8) %63) #9, !noalias !9
  %77 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %3, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %77, align 8, !alias.scope !9, !noalias !6
  %78 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %70, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale"* dereferenceable(8) %78) #9
  %79 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %78, %"class.std::__1::locale"* dereferenceable(8) %63) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #9
  br label %80

80:                                               ; preds = %1, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #2

declare { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #8

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.98"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.98"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.98"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
