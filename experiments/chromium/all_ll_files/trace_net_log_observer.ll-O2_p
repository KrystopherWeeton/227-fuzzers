; ModuleID = '../../net/log/trace_net_log_observer.cc'
source_filename = "../../net/log/trace_net_log_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.net::TraceNetLogObserver" = type { %"class.net::NetLog::ThreadSafeObserver", %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", %"class.net::NetLog"*, %"class.base::WeakPtrFactory" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.net::NetLogEntry" = type { i32, %"struct.net::NetLogSource", i32, %"class.base::TimeTicks", %"class.base::Value" }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.14" }
%"union.absl::variant_internal::DestructibleUnionImpl.14" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.base::trace_event::ConvertableToTraceFormat"* }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.303", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.305", i64, i64 }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.315" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.329 }
%class.scoped_refptr.329 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::WeakPtr.330" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr.51", %"class.std::__1::vector.57", %"class.base::Lock", i8, %"class.std::__1::vector.65", %"class.std::__1::map", %"class.std::__1::vector.80", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", i32, [4 x i8], %"class.std::__1::unordered_map.107", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.131", %"class.std::__1::unordered_map.155", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic.183", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.232", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.262", %"class.std::__1::unique_ptr.286", i64, %"class.base::RepeatingCallback", %class.scoped_refptr.294, %"class.base::RepeatingCallback.296", %"class.base::RepeatingCallback.297", i64, i8, %"struct.std::__1::atomic.298", %"struct.std::__1::atomic.320", %"struct.std::__1::atomic.324", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.std::__1::unique_ptr.59"*, %"class.std::__1::unique_ptr.59"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::unique_ptr.59" = type opaque
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::unique_ptr.59"* }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.67" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"class.std::__1::unique_ptr.82"*, %"class.std::__1::unique_ptr.82"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::unique_ptr.82" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::unique_ptr.82"* }
%"class.std::__1::unordered_map.107" = type { %"class.std::__1::__hash_table.108" }
%"class.std::__1::__hash_table.108" = type <{ %"class.std::__1::unique_ptr.109", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base.112"** }
%"struct.std::__1::__hash_node_base.112" = type { %"struct.std::__1::__hash_node_base.112"* }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::__bucket_list_deallocator.114" }
%"class.std::__1::__bucket_list_deallocator.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base.112" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.88", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unordered_map.131" = type { %"class.std::__1::__hash_table.132" }
%"class.std::__1::__hash_table.132" = type <{ %"class.std::__1::unique_ptr.133", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.151", [4 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135", %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.std::__1::__hash_node_base.136"** }
%"struct.std::__1::__hash_node_base.136" = type { %"struct.std::__1::__hash_node_base.136"* }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::__bucket_list_deallocator.138" }
%"class.std::__1::__bucket_list_deallocator.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base.136" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unordered_map.155" = type { %"class.std::__1::__hash_table.156" }
%"class.std::__1::__hash_table.156" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base.160"** }
%"struct.std::__1::__hash_node_base.160" = type { %"struct.std::__1::__hash_node_base.160"* }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::__bucket_list_deallocator.162" }
%"class.std::__1::__bucket_list_deallocator.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.160" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.232", %"class.std::__1::unordered_set.239", %"class.std::__1::unordered_set.239" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.188", %"class.std::__1::vector.188", %"class.std::__1::vector.188" }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.std::__1::basic_string"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set", %"class.std::__1::vector.204", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.195" }
%"class.std::__1::__tree.195" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.196", %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.206" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.211" }
%"class.std::__1::__hash_table.211" = type <{ %"class.std::__1::unique_ptr.212", %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.229", [4 x i8] }>
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214", %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.215"** }
%"struct.std::__1::__hash_node_base.215" = type { %"struct.std::__1::__hash_node_base.215"* }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.std::__1::__bucket_list_deallocator.217" }
%"class.std::__1::__bucket_list_deallocator.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::__hash_node_base.215" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unordered_set.239" = type { %"class.std::__1::__hash_table.240" }
%"class.std::__1::__hash_table.240" = type <{ %"class.std::__1::unique_ptr.241", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.258", [4 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.244"** }
%"struct.std::__1::__hash_node_base.244" = type { %"struct.std::__1::__hash_node_base.244"* }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::__bucket_list_deallocator.246" }
%"class.std::__1::__bucket_list_deallocator.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base.244" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.234" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.261" }
%"class.base::ThreadLocalPointer.261" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.262" = type { %"class.std::__1::__hash_table.263" }
%"class.std::__1::__hash_table.263" = type <{ %"class.std::__1::unique_ptr.264", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.282", [4 x i8] }>
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266", %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::__hash_node_base.267"** }
%"struct.std::__1::__hash_node_base.267" = type { %"struct.std::__1::__hash_node_base.267"* }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.std::__1::__bucket_list_deallocator.269" }
%"class.std::__1::__bucket_list_deallocator.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base.267" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.292 }
%class.scoped_refptr.292 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.293", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.293" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.294 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.295" }>
%"class.base::RefCountedThreadSafe.295" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.296" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.297" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.298" = type { %"struct.std::__1::__atomic_base.299" }
%"struct.std::__1::__atomic_base.299" = type { %"struct.std::__1::__cxx_atomic_impl.300" }
%"struct.std::__1::__cxx_atomic_impl.300" = type { %"struct.std::__1::__cxx_atomic_base_impl.301" }
%"struct.std::__1::__cxx_atomic_base_impl.301" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon.319, i32, i64, i8, [7 x i8] }>
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.302" }
%"class.base::time_internal::TimeBase.302" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%union.anon.319 = type { i32 }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.320" = type { %"struct.std::__1::__atomic_base.321" }
%"struct.std::__1::__atomic_base.321" = type { %"struct.std::__1::__cxx_atomic_impl.322" }
%"struct.std::__1::__cxx_atomic_impl.322" = type { %"struct.std::__1::__cxx_atomic_base_impl.323" }
%"struct.std::__1::__cxx_atomic_base_impl.323" = type { void ()* }
%"struct.std::__1::atomic.324" = type { %"struct.std::__1::__atomic_base.325" }
%"struct.std::__1::__atomic_base.325" = type { %"struct.std::__1::__cxx_atomic_impl.326" }
%"struct.std::__1::__cxx_atomic_impl.326" = type { %"struct.std::__1::__cxx_atomic_base_impl.327" }
%"struct.std::__1::__cxx_atomic_base_impl.327" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"class.net::(anonymous namespace)::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.base::Value" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }

$_ZN20trace_event_internal13AddTraceEventIPKcNSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS3_14default_deleteIS7_EEEEEENS6_16TraceEventHandleEcPKhS2_S2_yjyS2_OT_S2_OT0_ = comdat any

@_ZTVN3net19TraceNetLogObserverE = hidden unnamed_addr constant { [7 x i8*], [6 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::TraceNetLogObserver"*, %"struct.net::NetLogEntry"*)* @_ZN3net19TraceNetLogObserver10OnAddEntryERKNS_11NetLogEntryE to i8*), i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZN3net19TraceNetLogObserverD2Ev to i8*), i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZN3net19TraceNetLogObserverD0Ev to i8*), i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZN3net19TraceNetLogObserver17OnTraceLogEnabledEv to i8*), i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZN3net19TraceNetLogObserver18OnTraceLogDisabledEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZThn24_N3net19TraceNetLogObserverD1Ev to i8*), i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZThn24_N3net19TraceNetLogObserverD0Ev to i8*), i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZThn24_N3net19TraceNetLogObserver17OnTraceLogEnabledEv to i8*), i8* bitcast (void (%"class.net::TraceNetLogObserver"*)* @_ZThn24_N3net19TraceNetLogObserver18OnTraceLogDisabledEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [12 x i8] c"source_type\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"params\00", align 1
@_ZTVN3net12_GLOBAL__N_111TracedValueE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::TracedValue"*)* @_ZN3net12_GLOBAL__N_111TracedValueD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::TracedValue"*)* @_ZN3net12_GLOBAL__N_111TracedValueD0Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::TracedValue"*, %"class.std::__1::basic_string"*)* @_ZNK3net12_GLOBAL__N_111TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"{}\00", align 1

@_ZN3net19TraceNetLogObserverC1Ev = hidden unnamed_addr alias void (%"class.net::TraceNetLogObserver"*), void (%"class.net::TraceNetLogObserver"*)* @_ZN3net19TraceNetLogObserverC2Ev
@_ZN3net19TraceNetLogObserverD1Ev = hidden unnamed_addr alias void (%"class.net::TraceNetLogObserver"*), void (%"class.net::TraceNetLogObserver"*)* @_ZN3net19TraceNetLogObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserverC2Ev(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0
  tail call void @_ZN3net6NetLog18ThreadSafeObserverC2Ev(%"class.net::NetLog::ThreadSafeObserver"* %2) #7
  %3 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 2
  store %"class.net::NetLog"* null, %"class.net::NetLog"** %5, align 8
  %6 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 3, i32 0
  %7 = ptrtoint %"class.net::TraceNetLogObserver"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %6, i64 %7) #7
  ret void
}

declare void @_ZN3net6NetLog18ThreadSafeObserverC2Ev(%"class.net::NetLog::ThreadSafeObserver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserverD2Ev(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #7
  %5 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0
  tail call void @_ZN3net6NetLog18ThreadSafeObserverD2Ev(%"class.net::NetLog::ThreadSafeObserver"* %5) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net6NetLog18ThreadSafeObserverD2Ev(%"class.net::NetLog::ThreadSafeObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N3net19TraceNetLogObserverD1Ev(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 -1, i32 2
  %3 = bitcast %"class.net::NetLog"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::NetLog"*, %"class.net::NetLog"** %2, i64 3
  %5 = bitcast %"class.net::NetLog"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::NetLog"*, %"class.net::NetLog"** %2, i64 5
  %7 = bitcast %"class.net::NetLog"** %6 to %"class.base::internal::WeakPtrFactoryBase"*
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %7) #7
  %8 = bitcast %"class.net::NetLog"** %2 to %"class.net::NetLog::ThreadSafeObserver"*
  tail call void @_ZN3net6NetLog18ThreadSafeObserverD2Ev(%"class.net::NetLog::ThreadSafeObserver"* %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserverD0Ev(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #7
  %5 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0
  tail call void @_ZN3net6NetLog18ThreadSafeObserverD2Ev(%"class.net::NetLog::ThreadSafeObserver"* %5) #7
  %6 = bitcast %"class.net::TraceNetLogObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N3net19TraceNetLogObserverD0Ev(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 -1, i32 2
  %3 = bitcast %"class.net::NetLog"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::NetLog"*, %"class.net::NetLog"** %2, i64 3
  %5 = bitcast %"class.net::NetLog"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3net19TraceNetLogObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::NetLog"*, %"class.net::NetLog"** %2, i64 5
  %7 = bitcast %"class.net::NetLog"** %6 to %"class.base::internal::WeakPtrFactoryBase"*
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %7) #7
  %8 = bitcast %"class.net::NetLog"** %2 to %"class.net::NetLog::ThreadSafeObserver"*
  tail call void @_ZN3net6NetLog18ThreadSafeObserverD2Ev(%"class.net::NetLog::ThreadSafeObserver"* %8) #7
  %9 = bitcast %"class.net::NetLog"** %2 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserver10OnAddEntryERKNS_11NetLogEntryE(%"class.net::TraceNetLogObserver"* nocapture readnone, %"struct.net::NetLogEntry"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca i8*, align 8
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca %"class.base::Value", align 8
  %13 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 4
  %15 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %3, %"class.base::Value"* %14) #7
  %16 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %114 [
    i32 1, label %18
    i32 2, label %50
    i32 0, label %82
  ]

18:                                               ; preds = %2
  %19 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), align 16
  %20 = and i8 %19, 25
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %114, label %22, !prof !2

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = call i8* @_ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE(i32 %27) #7
  %29 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = call i8* @_ZN3net6NetLog18SourceTypeToStringENS_16NetLogSourceTypeE(i32 %31) #7
  store i8* %32, i8** %4, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = call i8* @_Znwm(i64 40) #8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %6, %"class.base::Value"* nonnull dereferenceable(32) %3) #7
  %35 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_111TracedValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to %"class.base::Value"*
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* nonnull dereferenceable(32) %6) #7
  %38 = ptrtoint i8* %34 to i64
  %39 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %38, i64* %39, align 8
  %40 = call i64 @_ZN20trace_event_internal13AddTraceEventIPKcNSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS3_14default_deleteIS7_EEEEEENS6_16TraceEventHandleEcPKhS2_S2_yjyS2_OT_S2_OT0_(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), i8* %28, i8* null, i64 %25, i32 2, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8** nonnull dereferenceable(8) %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5)
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %41, align 8
  store %"class.base::trace_event::ConvertableToTraceFormat"* null, %"class.base::trace_event::ConvertableToTraceFormat"** %41, align 8
  %43 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %22
  %45 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %42 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %46, i64 1
  %48 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %47, align 8
  call void %48(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %42) #7
  br label %49

49:                                               ; preds = %22, %44
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  br label %114

50:                                               ; preds = %2
  %51 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), align 16
  %52 = and i8 %51, 25
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %114, label %54, !prof !2

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = call i8* @_ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE(i32 %59) #7
  %61 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #7
  %62 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = call i8* @_ZN3net6NetLog18SourceTypeToStringENS_16NetLogSourceTypeE(i32 %63) #7
  store i8* %64, i8** %7, align 8
  %65 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #7
  %66 = call i8* @_Znwm(i64 40) #8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %9, %"class.base::Value"* nonnull dereferenceable(32) %3) #7
  %67 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_111TracedValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 8
  %69 = bitcast i8* %68 to %"class.base::Value"*
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %69, %"class.base::Value"* nonnull dereferenceable(32) %9) #7
  %70 = ptrtoint i8* %66 to i64
  %71 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %70, i64* %71, align 8
  %72 = call i64 @_ZN20trace_event_internal13AddTraceEventIPKcNSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS3_14default_deleteIS7_EEEEEENS6_16TraceEventHandleEcPKhS2_S2_yjyS2_OT_S2_OT0_(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), i8* %60, i8* null, i64 %57, i32 2, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8** nonnull dereferenceable(8) %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8)
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %73, align 8
  store %"class.base::trace_event::ConvertableToTraceFormat"* null, %"class.base::trace_event::ConvertableToTraceFormat"** %73, align 8
  %75 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %54
  %77 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %74 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %78 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %78, i64 1
  %80 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %79, align 8
  call void %80(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %74) #7
  br label %81

81:                                               ; preds = %54, %76
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #7
  br label %114

82:                                               ; preds = %2
  %83 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), align 16
  %84 = and i8 %83, 25
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %114, label %86, !prof !2

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = call i8* @_ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE(i32 %91) #7
  %93 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #7
  %94 = getelementptr inbounds %"struct.net::NetLogEntry", %"struct.net::NetLogEntry"* %1, i64 0, i32 1, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = call i8* @_ZN3net6NetLog18SourceTypeToStringENS_16NetLogSourceTypeE(i32 %95) #7
  store i8* %96, i8** %10, align 8
  %97 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #7
  %98 = call i8* @_Znwm(i64 40) #8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %12, %"class.base::Value"* nonnull dereferenceable(32) %3) #7
  %99 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_111TracedValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 8
  %101 = bitcast i8* %100 to %"class.base::Value"*
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %101, %"class.base::Value"* nonnull dereferenceable(32) %12) #7
  %102 = ptrtoint i8* %98 to i64
  %103 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %102, i64* %103, align 8
  %104 = call i64 @_ZN20trace_event_internal13AddTraceEventIPKcNSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS3_14default_deleteIS7_EEEEEENS6_16TraceEventHandleEcPKhS2_S2_yjyS2_OT_S2_OT0_(i8 signext 110, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), i8* %92, i8* null, i64 %89, i32 2, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8** nonnull dereferenceable(8) %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %11)
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %105, align 8
  store %"class.base::trace_event::ConvertableToTraceFormat"* null, %"class.base::trace_event::ConvertableToTraceFormat"** %105, align 8
  %107 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %86
  %109 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %106 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %110 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %110, i64 1
  %112 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %111, align 8
  call void %112(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %106) #7
  br label %113

113:                                              ; preds = %86, %108
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #7
  br label %114

114:                                              ; preds = %113, %82, %81, %50, %49, %18, %2
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPKcNSt3__110unique_ptrIN4base11trace_event24ConvertableToTraceFormatENS3_14default_deleteIS7_EEEEEENS6_16TraceEventHandleEcPKhS2_S2_yjyS2_OT_S2_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8), i8*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #7
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247176190, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = bitcast i8** %8 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  %27 = load i64, i64* %26, align 8
  store %"class.base::trace_event::ConvertableToTraceFormat"* null, %"class.base::trace_event::ConvertableToTraceFormat"** %25, align 8
  %28 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #7
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #7
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #7
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #7
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #7
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #8
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  ret i64 %29
}

declare i8* @_ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE(i32) local_unnamed_addr #1

declare i8* @_ZN3net6NetLog18SourceTypeToStringENS_16NetLogSourceTypeE(i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserver18WatchForTraceStartEPNS_6NetLogE(%"class.net::TraceNetLogObserver"*, %"class.net::NetLog"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = alloca %"class.base::WeakPtr.330", align 8
  %6 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 2
  store %"class.net::NetLog"* %1, %"class.net::NetLog"** %6, align 8
  %7 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #7
  %8 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %7, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #7
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #7
  br label %14

14:                                               ; preds = %2, %12
  %15 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %7, i64 0, i32 3
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #7
  br i1 %18, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.net::TraceNetLogObserver"* %0 to void (%"class.net::TraceNetLogObserver"*)***
  %22 = load void (%"class.net::TraceNetLogObserver"*)**, void (%"class.net::TraceNetLogObserver"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.net::TraceNetLogObserver"*)*, void (%"class.net::TraceNetLogObserver"*)** %22, i64 3
  %24 = load void (%"class.net::TraceNetLogObserver"*)*, void (%"class.net::TraceNetLogObserver"*)** %23, align 8
  tail call void %24(%"class.net::TraceNetLogObserver"* %0) #7
  br label %25

25:                                               ; preds = %14, %20
  %26 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #7
  %27 = bitcast %"class.base::WeakPtr.330"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #7
  %28 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7, !noalias !3
  %29 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 3, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %29) #7, !noalias !3
  %30 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 3, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !3
  %32 = getelementptr inbounds %"class.base::WeakPtr.330", %"class.base::WeakPtr.330"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %32, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %31) #7
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7, !noalias !3
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.base::WeakPtr.330", %"class.base::WeakPtr.330"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %33, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %34) #7
  %35 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::WeakPtr.330", %"class.base::WeakPtr.330"* %5, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = inttoptr i64 %37 to %"class.net::TraceNetLogObserver"*
  %39 = icmp eq i64 %37, 0
  %40 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %38, i64 0, i32 1
  %41 = ptrtoint %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver"* %40 to i64
  %42 = select i1 %39, i64 0, i64 %41
  store i64 %42, i64* %35, align 8
  call void @_ZN4base11trace_event8TraceLog28AddAsyncEnabledStateObserverENS_7WeakPtrINS1_25AsyncEnabledStateObserverEEE(%"class.base::trace_event::TraceLog"* %26, %"class.base::WeakPtr"* nonnull %4) #7
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %43) #7
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %32) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #7
  ret void
}

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4base11trace_event8TraceLog28AddAsyncEnabledStateObserverENS_7WeakPtrINS1_25AsyncEnabledStateObserverEEE(%"class.base::trace_event::TraceLog"*, %"class.base::WeakPtr"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserver22StopWatchForTraceStartEv(%"class.net::TraceNetLogObserver"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #7
  %3 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 1
  tail call void @_ZN4base11trace_event8TraceLog31RemoveAsyncEnabledStateObserverEPNS1_25AsyncEnabledStateObserverE(%"class.base::trace_event::TraceLog"* %2, %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver"* %3) #7
  %4 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0
  %5 = tail call %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"* %4) #7
  %6 = icmp eq %"class.net::NetLog"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"* %4) #7
  tail call void @_ZN3net6NetLog14RemoveObserverEPNS0_18ThreadSafeObserverE(%"class.net::NetLog"* %8, %"class.net::NetLog::ThreadSafeObserver"* %4) #7
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 2
  store %"class.net::NetLog"* null, %"class.net::NetLog"** %10, align 8
  ret void
}

declare void @_ZN4base11trace_event8TraceLog31RemoveAsyncEnabledStateObserverEPNS1_25AsyncEnabledStateObserverE(%"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver"*) local_unnamed_addr #1

declare %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"*) local_unnamed_addr #1

declare void @_ZN3net6NetLog14RemoveObserverEPNS0_18ThreadSafeObserverE(%"class.net::NetLog"*, %"class.net::NetLog::ThreadSafeObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserver17OnTraceLogEnabledEv(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), align 16
  %3 = and i8 %2, 9
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 2
  %7 = load %"class.net::NetLog"*, %"class.net::NetLog"** %6, align 8
  %8 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0
  tail call void @_ZN3net6NetLog11AddObserverEPNS0_18ThreadSafeObserverENS_17NetLogCaptureModeE(%"class.net::NetLog"* %7, %"class.net::NetLog::ThreadSafeObserver"* %8, i32 0) #7
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN3net6NetLog11AddObserverEPNS0_18ThreadSafeObserverENS_17NetLogCaptureModeE(%"class.net::NetLog"*, %"class.net::NetLog::ThreadSafeObserver"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N3net19TraceNetLogObserver17OnTraceLogEnabledEv(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 -1, i32 2
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 88, i32 0), align 16
  %4 = and i8 %3, 9
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::NetLog"*, %"class.net::NetLog"** %2, i64 4
  %8 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  %9 = bitcast %"class.net::NetLog"** %2 to %"class.net::NetLog::ThreadSafeObserver"*
  tail call void @_ZN3net6NetLog11AddObserverEPNS0_18ThreadSafeObserverENS_17NetLogCaptureModeE(%"class.net::NetLog"* %8, %"class.net::NetLog::ThreadSafeObserver"* %9, i32 0) #7
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19TraceNetLogObserver18OnTraceLogDisabledEv(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 0, i32 0
  %3 = tail call %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"* %2) #7
  %4 = icmp eq %"class.net::NetLog"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"* %2) #7
  tail call void @_ZN3net6NetLog14RemoveObserverEPNS0_18ThreadSafeObserverE(%"class.net::NetLog"* %6, %"class.net::NetLog::ThreadSafeObserver"* %2) #7
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N3net19TraceNetLogObserver18OnTraceLogDisabledEv(%"class.net::TraceNetLogObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TraceNetLogObserver", %"class.net::TraceNetLogObserver"* %0, i64 -1, i32 2
  %3 = bitcast %"class.net::NetLog"** %2 to %"class.net::NetLog::ThreadSafeObserver"*
  %4 = tail call %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"* %3) #7
  %5 = icmp eq %"class.net::NetLog"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"* %3) #7
  tail call void @_ZN3net6NetLog14RemoveObserverEPNS0_18ThreadSafeObserverE(%"class.net::NetLog"* %7, %"class.net::NetLog::ThreadSafeObserver"* %3) #7
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_111TracedValueD2Ev(%"class.net::(anonymous namespace)::TracedValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::TracedValue", %"class.net::(anonymous namespace)::TracedValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_111TracedValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::TracedValue", %"class.net::(anonymous namespace)::TracedValue"* %0, i64 0, i32 1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_111TracedValueD0Ev(%"class.net::(anonymous namespace)::TracedValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::TracedValue", %"class.net::(anonymous namespace)::TracedValue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_111TracedValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::TracedValue", %"class.net::(anonymous namespace)::TracedValue"* %0, i64 0, i32 1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %3) #7
  %4 = bitcast %"class.net::(anonymous namespace)::TracedValue"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK3net12_GLOBAL__N_111TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::(anonymous namespace)::TracedValue"*, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::TracedValue", %"class.net::(anonymous namespace)::TracedValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::TracedValue", %"class.net::(anonymous namespace)::TracedValue"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #7
  %13 = call zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32) %9, %"class.std::__1::basic_string"* nonnull %3, i64 200) #7
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i8*, i8** %11, align 8
  %19 = load i64, i64* %12, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i8* %18, i8* %10
  %22 = select i1 %17, i64 %19, i64 %20
  %23 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %21, i64 %22) #7
  %24 = load i8, i8* %15, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %8
  %27 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %8, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  br label %31

29:                                               ; preds = %2
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %31

31:                                               ; preds = %29, %28
  ret void
}

declare zeroext i1 @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #1

declare void @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #1

declare zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN3net19TraceNetLogObserverEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN3net19TraceNetLogObserverEE10GetWeakPtrEv"}
