; ModuleID = '../../components/viz/service/display/delegated_ink_point_renderer_skia.cc'
source_filename = "../../components/viz/service/display/delegated_ink_point_renderer_skia.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%class.SkPaint = type <{ %class.sk_sp.216, %class.sk_sp.217, %class.sk_sp.218, %class.sk_sp.219, %class.sk_sp.220, %struct.SkRGBA4f, float, float, %union.anon.221, [4 x i8] }>
%class.sk_sp.216 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.217 = type { %class.SkShader* }
%class.SkShader = type opaque
%class.sk_sp.218 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.219 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.220 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.221 = type { %struct.anon.222 }
%struct.anon.222 = type { i32 }
%"class.viz::DelegatedInkPointRendererSkia" = type { %"class.viz::DelegatedInkPointRendererBase", %class.SkPath, %"class.gfx::RectF", %"class.gfx::RectF" }
%"class.viz::DelegatedInkPointRendererBase" = type { %"class.gfx::mojom::DelegatedInkPointRenderer", %"class.std::__1::unique_ptr", %"class.absl::optional", %"class.std::__1::unordered_map", %"class.mojo::Receiver" }
%"class.gfx::mojom::DelegatedInkPointRenderer" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1", %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.15", [4 x i8] }>
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.gfx::mojom::DelegatedInkPointRendererStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.142", %"class.base::WeakPtrFactory.192" }
%class.scoped_refptr = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.19, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.109", %"class.absl::optional.114", %"class.absl::optional.71", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.133", i8, [7 x i8], %class.scoped_refptr.19, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.23 }
%union.anon.23 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.40", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.19, %"class.std::__1::unique_ptr.48", %"class.absl::optional.57", %"struct.std::__1::atomic.67", i8, i8, i8, i8, i32, i32, %"class.absl::optional.71", %"class.std::__1::unique_ptr.76", i8, i64, %class.scoped_refptr.105, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.108" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.46 }
%class.scoped_refptr.46 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.47", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.19, i8, %"class.mojo::ScopedHandleBase.51", %class.scoped_refptr.52, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.53" }
%"class.mojo::ScopedHandleBase.51" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.52 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.53" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.57" = type { %"class.absl::optional_internal::optional_data.58" }
%"class.absl::optional_internal::optional_data.58" = type { %"class.absl::optional_internal::optional_data_base.59" }
%"class.absl::optional_internal::optional_data_base.59" = type { %"class.absl::optional_internal::optional_data_dtor_base.60" }
%"class.absl::optional_internal::optional_data_dtor_base.60" = type { i8, %union.anon.61 }
%union.anon.61 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.62", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.62" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__cxx_atomic_impl.69" }
%"struct.std::__1::__cxx_atomic_impl.69" = type { %"struct.std::__1::__cxx_atomic_base_impl.70" }
%"struct.std::__1::__cxx_atomic_base_impl.70" = type { i8 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.79", i8, i64, %class.scoped_refptr.80, %class.scoped_refptr.101 }
%"class.base::RepeatingCallback.79" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.80 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.90", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.81 }
%class.scoped_refptr.81 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%class.scoped_refptr.101 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.105 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.196", [4 x i8], %"class.base::RepeatingCallback.145", %class.scoped_refptr.19, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.197", [4 x i8] }>
%"class.base::RefCountedThreadSafe.196" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.145" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.108" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, [7 x i8], %union.anon.118 }
%union.anon.118 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.71" = type { %"class.absl::optional_internal::optional_data.72" }
%"class.absl::optional_internal::optional_data.72" = type { %"class.absl::optional_internal::optional_data_base.73" }
%"class.absl::optional_internal::optional_data_base.73" = type { %"class.absl::optional_internal::optional_data_dtor_base.74" }
%"class.absl::optional_internal::optional_data_dtor_base.74" = type { i8, %union.anon.75 }
%union.anon.75 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.119 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.119 = type { %"class.std::__1::map.121" }
%"class.std::__1::map.121" = type { %"class.std::__1::__tree.122" }
%"class.std::__1::__tree.122" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.132"*, i64 }
%"class.std::__1::unique_ptr.132" = type opaque
%"class.std::__1::map.133" = type { %"class.std::__1::__tree.134" }
%"class.std::__1::__tree.134" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%class.scoped_refptr.19 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.20" }>
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.145", %"class.base::OnceCallback.146", %"class.absl::optional.147", %"class.absl::optional.152", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.159", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.167", %"class.std::__1::map.178", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.187", i8, %class.scoped_refptr.19, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.188" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.146" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.147" = type { %"class.absl::optional_internal::optional_data.148" }
%"class.absl::optional_internal::optional_data.148" = type { %"class.absl::optional_internal::optional_data_base.149" }
%"class.absl::optional_internal::optional_data_base.149" = type { %"class.absl::optional_internal::optional_data_dtor_base.150" }
%"class.absl::optional_internal::optional_data_dtor_base.150" = type { i8, %union.anon.151 }
%union.anon.151 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.152" = type { %"class.absl::optional_internal::optional_data.153" }
%"class.absl::optional_internal::optional_data.153" = type { %"class.absl::optional_internal::optional_data_base.154" }
%"class.absl::optional_internal::optional_data_base.154" = type { %"class.absl::optional_internal::optional_data_dtor_base.155" }
%"class.absl::optional_internal::optional_data_dtor_base.155" = type { i8, %union.anon.156 }
%union.anon.156 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.19, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.157" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.157" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.162", %class.scoped_refptr.163 }
%"class.base::RepeatingCallback.162" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.163 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.167" = type { %"class.std::__1::__tree.168" }
%"class.std::__1::__tree.168" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.178" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.base::OnceCallback.187" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.188" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.192" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gfx::mojom::DelegatedInkPointRendererStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.gfx::mojom::DelegatedInkPointRenderer"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.41", %"struct.std::__1::atomic.41", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.193, %class.SkTDArray.194, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.193 = type { i8*, i32, i32 }
%class.SkTDArray.194 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.195 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.41" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.195 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.67", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.202, [384 x i64], %class.sk_sp.203, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.204", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.210" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.202 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.203 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.240", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.242", i64, i64 }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.253" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::DelegatedInkPoint"*, %"class.gfx::DelegatedInkPoint"*, %"class.std::__1::__compressed_pair.223" }
%"class.gfx::DelegatedInkPoint" = type <{ %"class.gfx::PointF", %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.gfx::DelegatedInkPoint"* }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %struct.SkPoint*, %struct.SkPoint*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %struct.SkPoint* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.197", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN3viz29DelegatedInkPointRendererSkiaD2Ev = comdat any

$_ZN3viz29DelegatedInkPointRendererSkiaD0Ev = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [53 x i8] c"DelegatedInkPointRendererSkia::DrawDelegatedInkTrail\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@__const._ZN3viz29DelegatedInkPointRendererSkia21DrawDelegatedInkTrailEP8SkCanvas.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.216 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.217 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.218 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.219 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.220 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.221 { %struct.anon.222 { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.2 = private unnamed_addr constant [69 x i8] c"Renderer.DelegatedInkTrail.LatencyImprovement.Skia.WithoutPrediction\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"Filtered and predicted points for delegated ink trail\00", align 1
@.str.4 = private unnamed_addr constant [51 x i8] c"DelegatedInkPointRendererSkia::FinalizePathForDraw\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"damage_rect\00", align 1
@_ZTVN3viz29DelegatedInkPointRendererSkiaE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::DelegatedInkPointRendererSkia"*)* @_ZN3viz29DelegatedInkPointRendererSkiaD2Ev to i8*), i8* bitcast (void (%"class.viz::DelegatedInkPointRendererSkia"*)* @_ZN3viz29DelegatedInkPointRendererSkiaD0Ev to i8*), i8* bitcast (void (%"class.viz::DelegatedInkPointRendererBase"*, %"class.gfx::DelegatedInkPoint"*)* @_ZN3viz29DelegatedInkPointRendererBase22StoreDelegatedInkPointERKN3gfx17DelegatedInkPointE to i8*), i8* bitcast (void (%"class.viz::DelegatedInkPointRendererBase"*)* @_ZN3viz29DelegatedInkPointRendererBase15ResetPredictionEv to i8*), i8* bitcast (void (%"class.viz::DelegatedInkPointRendererBase"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN3viz29DelegatedInkPointRendererBase23SetDelegatedInkMetadataENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.viz::DelegatedInkPointRendererSkia"*)* @_ZN3viz29DelegatedInkPointRendererSkia19FinalizePathForDrawEv to i8*), i8* bitcast ({ i64, i64 } (%"class.viz::DelegatedInkPointRendererSkia"*)* @_ZN3viz29DelegatedInkPointRendererSkia13GetDamageRectEv to i8*), i8* bitcast (i32 (%"class.viz::DelegatedInkPointRendererSkia"*)* @_ZNK3viz29DelegatedInkPointRendererSkia24GetPathPointCountForTestEv to i8*)] }, align 8
@_ZZN3viz29DelegatedInkPointRendererSkia15GetPointsToDrawEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz29DelegatedInkPointRendererSkia21DrawDelegatedInkTrailEP8SkCanvas(%"class.viz::DelegatedInkPointRendererSkia"*, %class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca %class.SkPaint, align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10, !prof !2

10:                                               ; preds = %2
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 1
  %13 = tail call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %12) #11
  store i32 %13, i32* %3, align 4
  %14 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %14, %10 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), %10 ]
  %18 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %10 ]
  %19 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %19, align 8
  %21 = icmp eq %"class.gfx::DelegatedInkMetadata"* %20, null
  br i1 %21, label %62, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %23, i64 0, i32 0, i32 0
  %25 = load %class.SkPathRef*, %class.SkPathRef** %24, align 8
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %25, i64 0, i32 4, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  %29 = icmp ne %class.SkCanvas* %1, null
  %30 = and i1 %29, %28
  br i1 %30, label %32, label %31

31:                                               ; preds = %22
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %19, align 8
  br label %59

32:                                               ; preds = %22
  %33 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %1) #11
  %34 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %19, align 8
  %36 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %35, i64 0, i32 5
  %37 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %36) #11
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %39 = extractvalue { <2 x float>, <2 x float> } %37, 0
  store <2 x float> %39, <2 x float>* %38, align 8
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %41 = extractvalue { <2 x float>, <2 x float> } %37, 1
  store <2 x float> %41, <2 x float>* %40, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* nonnull %1, %struct.SkRect* nonnull dereferenceable(16) %5, i32 1, i1 zeroext false) #11
  %42 = bitcast %class.SkPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 bitcast (%class.SkPaint* @__const._ZN3viz29DelegatedInkPointRendererSkia21DrawDelegatedInkTrailEP8SkCanvas.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %6) #11
  %43 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 8, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, -261122
  %46 = or i32 %45, 3073
  store i32 %46, i32* %43, align 8
  %47 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %19, align 8
  %48 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %47, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %6, i32 %49) #11
  %50 = load i32, i32* %43, align 8
  %51 = and i32 %50, -769
  store i32 %51, i32* %43, align 8
  call void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint* nonnull %6, i32 1) #11
  call void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint* nonnull %6, i8 zeroext 1) #11
  %52 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %19, align 8
  %53 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %52, i64 0, i32 1
  %54 = load double, double* %53, align 8
  %55 = fptrunc double %54 to float
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %6, float %55) #11
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %6, i8 zeroext 1) #11
  call void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas* nonnull %1, %class.SkPath* dereferenceable(16) %23, %class.SkPaint* nonnull dereferenceable(72) %6) #11
  call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* nonnull %1) #11
  %56 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* %23) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  %57 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %19, align 8
  store %"class.gfx::DelegatedInkMetadata"* null, %"class.gfx::DelegatedInkMetadata"** %19, align 8
  %58 = icmp eq %"class.gfx::DelegatedInkMetadata"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %31, %32
  %60 = phi %"class.gfx::DelegatedInkMetadata"* [ %20, %31 ], [ %57, %32 ]
  %61 = bitcast %"class.gfx::DelegatedInkMetadata"* %60 to i8*
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %15, %59, %32
  %63 = icmp eq i8* %18, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = load i8, i8* %18, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #11
  br label %68

68:                                               ; preds = %62, %64, %67
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #2 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #11
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #11
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #11
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #11
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %22
}

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #3

declare void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint*, i32) local_unnamed_addr #3

declare void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #3

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #3

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #3

declare void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #3

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3viz29DelegatedInkPointRendererSkia13GetDamageRectEv(%"class.viz::DelegatedInkPointRendererSkia"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::RectF", align 4
  %3 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 2, i32 1, i32 0
  %5 = load float, float* %4, align 4
  %6 = fcmp une float %5, 0.000000e+00
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 2, i32 1, i32 1
  %9 = load float, float* %8, align 4
  %10 = fcmp oeq float %9, 0.000000e+00
  br i1 %10, label %11, label %19

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fcmp une float %13, 0.000000e+00
  br i1 %14, label %15, label %26

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3, i32 1, i32 1
  %17 = load float, float* %16, align 4
  %18 = fcmp oeq float %17, 0.000000e+00
  br i1 %18, label %26, label %19

19:                                               ; preds = %15, %7
  %20 = bitcast %"class.gfx::RectF"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %21 = bitcast %"class.gfx::RectF"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 8 %21, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3
  call void @_ZN3gfx5RectF5UnionERKS0_(%"class.gfx::RectF"* nonnull %2, %"class.gfx::RectF"* dereferenceable(16) %22) #11
  %23 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %2) #11
  %24 = extractvalue { i64, i64 } %23, 0
  %25 = extractvalue { i64, i64 } %23, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  br label %26

26:                                               ; preds = %11, %15, %19
  %27 = phi i64 [ %24, %19 ], [ 0, %15 ], [ 0, %11 ]
  %28 = phi i64 [ %25, %19 ], [ 0, %15 ], [ 0, %11 ]
  %29 = insertvalue { i64, i64 } undef, i64 %27, 0
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1
  ret { i64, i64 } %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3gfx5RectF5UnionERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN3viz14GetImprovementEPKNSt3__16vectorIN3gfx17DelegatedInkPointENS0_9allocatorIS3_EEEEPKNS2_20DelegatedInkMetadataE(%"class.std::__1::vector"* nocapture readonly, %"class.gfx::DelegatedInkMetadata"* nocapture readonly) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::DelegatedInkPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %5 to %"class.gfx::DelegatedInkPoint"*
  %11 = getelementptr inbounds %"class.gfx::DelegatedInkPoint", %"class.gfx::DelegatedInkPoint"* %10, i64 -1, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %1, i64 0, i32 4, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %12, %14
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i64 [ %15, %9 ], [ 0, %2 ]
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz29DelegatedInkPointRendererSkia15GetPointsToDrawEv(%"class.std::__1::vector.228"* noalias sret, %"class.viz::DelegatedInkPointRendererSkia"*) local_unnamed_addr #6 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.gfx::DelegatedInkPoint", align 8
  %6 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %1, i64 0, i32 0
  %10 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN3viz29DelegatedInkPointRendererBase12FilterPointsEv(%"class.std::__1::vector"* nonnull sret %3, %"class.viz::DelegatedInkPointRendererBase"* %9) #11
  %11 = load atomic i64, i64* @_ZZN3viz29DelegatedInkPointRendererSkia15GetPointsToDrawEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %12 = inttoptr i64 %11 to %"class.base::HistogramBase"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #11
  %16 = ptrtoint %"class.base::HistogramBase"* %15 to i64
  store atomic i64 %16, i64* @_ZZN3viz29DelegatedInkPointRendererSkia15GetPointsToDrawEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %17

17:                                               ; preds = %2, %14
  %18 = phi %"class.base::HistogramBase"* [ %12, %2 ], [ %15, %14 ]
  %19 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = bitcast %"class.gfx::DelegatedInkPoint"** %8 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %26, align 8
  %28 = inttoptr i64 %21 to %"class.gfx::DelegatedInkPoint"*
  %29 = getelementptr inbounds %"class.gfx::DelegatedInkPoint", %"class.gfx::DelegatedInkPoint"* %28, i64 -1, i32 1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %27, i64 0, i32 4, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = sub nsw i64 %30, %32
  br label %34

34:                                               ; preds = %17, %25
  %35 = phi i64 [ %33, %25 ], [ 0, %17 ]
  %36 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %35, i64* %36, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %18, %"class.base::TimeDelta"* nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN3viz29DelegatedInkPointRendererBase13PredictPointsEPNSt3__16vectorIN3gfx17DelegatedInkPointENS1_9allocatorIS4_EEEE(%"class.viz::DelegatedInkPointRendererBase"* %9, %"class.std::__1::vector"* nonnull %3) #11
  %37 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %0, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::vector.228"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #11
  %40 = load %"class.gfx::DelegatedInkPoint"*, %"class.gfx::DelegatedInkPoint"** %7, align 8
  %41 = load %"class.gfx::DelegatedInkPoint"*, %"class.gfx::DelegatedInkPoint"** %8, align 8
  %42 = icmp eq %"class.gfx::DelegatedInkPoint"* %40, %41
  br i1 %42, label %55, label %43

43:                                               ; preds = %34
  %44 = bitcast %"class.gfx::DelegatedInkPoint"* %5 to i8*
  %45 = getelementptr inbounds %"class.gfx::DelegatedInkPoint", %"class.gfx::DelegatedInkPoint"* %5, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.gfx::DelegatedInkPoint", %"class.gfx::DelegatedInkPoint"* %5, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.gfx::DelegatedInkPoint", %"class.gfx::DelegatedInkPoint"* %5, i64 0, i32 1, i32 0, i32 0
  %48 = getelementptr inbounds %"class.gfx::DelegatedInkPoint", %"class.gfx::DelegatedInkPoint"* %5, i64 0, i32 0
  %49 = bitcast %struct.SkPoint** %37 to i64*
  %50 = bitcast %"class.std::__1::vector.228"* %0 to i64*
  %51 = bitcast %struct.SkPoint** %38 to i64*
  %52 = bitcast i64* %47 to i8*
  br label %62

53:                                               ; preds = %123
  %54 = load %"class.gfx::DelegatedInkPoint"*, %"class.gfx::DelegatedInkPoint"** %7, align 8
  br label %55

55:                                               ; preds = %53, %34
  %56 = phi %"class.gfx::DelegatedInkPoint"* [ %54, %53 ], [ %40, %34 ]
  %57 = icmp eq %"class.gfx::DelegatedInkPoint"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = ptrtoint %"class.gfx::DelegatedInkPoint"* %56 to i64
  store i64 %59, i64* %20, align 8
  %60 = bitcast %"class.gfx::DelegatedInkPoint"* %56 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void

62:                                               ; preds = %126, %43
  %63 = phi i64 [ 0, %43 ], [ %129, %126 ]
  %64 = phi %struct.SkPoint* [ null, %43 ], [ %128, %126 ]
  %65 = phi %struct.SkPoint* [ null, %43 ], [ %127, %126 ]
  %66 = phi %"class.gfx::DelegatedInkPoint"* [ %40, %43 ], [ %124, %126 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  store float 0xFFFFFFFFE0000000, float* %45, align 8
  store float 0xFFFFFFFFE0000000, float* %46, align 4
  %67 = bitcast %"class.gfx::DelegatedInkPoint"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 -86, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %67, i64 24, i1 false)
  %68 = call <2 x float> @_ZN3gfx15PointFToSkPointERKNS_6PointFE(%"class.gfx::PointF"* nonnull dereferenceable(8) %48) #11
  %69 = icmp ult %struct.SkPoint* %65, %64
  %70 = ptrtoint %struct.SkPoint* %64 to i64
  br i1 %69, label %71, label %75

71:                                               ; preds = %62
  %72 = bitcast %struct.SkPoint* %65 to <2 x float>*
  store <2 x float> %68, <2 x float>* %72, align 4
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %65, i64 1
  %74 = ptrtoint %struct.SkPoint* %73 to i64
  store i64 %74, i64* %49, align 8
  br label %123

75:                                               ; preds = %62
  %76 = ptrtoint %struct.SkPoint* %65 to i64
  %77 = load i64, i64* %50, align 8
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = add nsw i64 %79, 1
  %81 = icmp ugt i64 %80, 2305843009213693951
  br i1 %81, label %82, label %84

82:                                               ; preds = %75
  %83 = bitcast %"class.std::__1::vector.228"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #13
  unreachable

84:                                               ; preds = %75
  %85 = sub i64 %70, %77
  %86 = ashr exact i64 %85, 3
  %87 = icmp ult i64 %86, 1152921504606846975
  br i1 %87, label %88, label %96

88:                                               ; preds = %84
  %89 = ashr exact i64 %85, 2
  %90 = icmp ult i64 %89, %80
  %91 = select i1 %90, i64 %80, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = icmp ugt i64 %91, 2305843009213693951
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  call void @abort() #13
  unreachable

96:                                               ; preds = %93, %84
  %97 = phi i64 [ %91, %93 ], [ 2305843009213693951, %84 ]
  %98 = shl i64 %97, 3
  %99 = call i8* @_Znwm(i64 %98) #12
  %100 = bitcast i8* %99 to %struct.SkPoint*
  br label %101

101:                                              ; preds = %96, %88
  %102 = phi i64 [ %97, %96 ], [ 0, %88 ]
  %103 = phi %struct.SkPoint* [ %100, %96 ], [ null, %88 ]
  %104 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %103, i64 %79
  %105 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %103, i64 %102
  %106 = ptrtoint %struct.SkPoint* %105 to i64
  %107 = bitcast %struct.SkPoint* %104 to <2 x float>*
  store <2 x float> %68, <2 x float>* %107, align 4
  %108 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %104, i64 1
  %109 = ptrtoint %struct.SkPoint* %108 to i64
  %110 = sub i64 %63, %77
  %111 = ashr exact i64 %110, 3
  %112 = sub nsw i64 0, %111
  %113 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %104, i64 %112
  %114 = ptrtoint %struct.SkPoint* %113 to i64
  %115 = icmp sgt i64 %110, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %101
  %117 = bitcast %struct.SkPoint* %113 to i8*
  %118 = inttoptr i64 %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %118, i64 %110, i1 false) #11
  br label %119

119:                                              ; preds = %116, %101
  store i64 %114, i64* %50, align 8
  store i64 %109, i64* %49, align 8
  store i64 %106, i64* %51, align 8
  %120 = icmp eq i64 %77, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %77 to i8*
  call void @_ZdlPv(i8* %122) #12
  br label %123

123:                                              ; preds = %71, %119, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  %124 = getelementptr inbounds %"class.gfx::DelegatedInkPoint", %"class.gfx::DelegatedInkPoint"* %66, i64 1
  %125 = icmp eq %"class.gfx::DelegatedInkPoint"* %124, %41
  br i1 %125, label %53, label %126

126:                                              ; preds = %123
  %127 = load %struct.SkPoint*, %struct.SkPoint** %37, align 8
  %128 = load %struct.SkPoint*, %struct.SkPoint** %38, align 8
  %129 = ptrtoint %struct.SkPoint* %127 to i64
  br label %62
}

declare void @_ZN3viz29DelegatedInkPointRendererBase12FilterPointsEv(%"class.std::__1::vector"* sret, %"class.viz::DelegatedInkPointRendererBase"*) local_unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #3

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3viz29DelegatedInkPointRendererBase13PredictPointsEPNSt3__16vectorIN3gfx17DelegatedInkPointENS1_9allocatorIS4_EEEE(%"class.viz::DelegatedInkPointRendererBase"*, %"class.std::__1::vector"*) local_unnamed_addr #3

declare <2 x float> @_ZN3gfx15PointFToSkPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz29DelegatedInkPointRendererSkia19FinalizePathForDrawEv(%"class.viz::DelegatedInkPointRendererSkia"*) unnamed_addr #6 align 2 {
  %2 = alloca %"class.std::__1::vector.228", align 8
  %3 = alloca i64, align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { <2 x float>, <2 x float> }*
  %6 = bitcast <2 x i64>* %4 to %"class.gfx::RectF"*
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 1
  %11 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* %10) #11
  %12 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %12, align 8
  %14 = icmp eq %"class.gfx::DelegatedInkMetadata"* %13, null
  br i1 %14, label %15, label %26

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 2
  %19 = bitcast %"class.gfx::RectF"* %18 to i8*
  %20 = bitcast %"class.gfx::RectF"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 4 %20, i64 16, i1 false) #11
  %21 = bitcast %"class.viz::DelegatedInkPointRendererSkia"* %0 to void (%"class.viz::DelegatedInkPointRendererBase"*)***
  %22 = bitcast %"class.gfx::RectF"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  %23 = load void (%"class.viz::DelegatedInkPointRendererBase"*)**, void (%"class.viz::DelegatedInkPointRendererBase"*)*** %21, align 8
  %24 = getelementptr inbounds void (%"class.viz::DelegatedInkPointRendererBase"*)*, void (%"class.viz::DelegatedInkPointRendererBase"*)** %23, i64 3
  %25 = load void (%"class.viz::DelegatedInkPointRendererBase"*)*, void (%"class.viz::DelegatedInkPointRendererBase"*)** %24, align 8
  tail call void %25(%"class.viz::DelegatedInkPointRendererBase"* %16) #11
  br label %169

26:                                               ; preds = %1
  %27 = bitcast %"class.std::__1::vector.228"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %2, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector.228", %"class.std::__1::vector.228"* %2, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector.228"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  call void @_ZN3viz29DelegatedInkPointRendererSkia15GetPointsToDrawEv(%"class.std::__1::vector.228"* nonnull sret %2, %"class.viz::DelegatedInkPointRendererSkia"* %0)
  %31 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %32 = and i8 %31, 25
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %37, !prof !2

34:                                               ; preds = %26
  %35 = bitcast %struct.SkPoint** %29 to i64*
  %36 = bitcast %"class.std::__1::vector.228"* %2 to i64*
  br label %46

37:                                               ; preds = %26
  %38 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = bitcast %struct.SkPoint** %29 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.228"* %2 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  store i64 %44, i64* %3, align 8
  %45 = call i64 @_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64* nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %46

46:                                               ; preds = %34, %37
  %47 = phi i64* [ %36, %34 ], [ %41, %37 ]
  %48 = phi i64* [ %35, %34 ], [ %39, %37 ]
  %49 = load i64, i64* %48, align 8
  %50 = load i64, i64* %47, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, 2
  %54 = inttoptr i64 %50 to %struct.SkPoint*
  br i1 %53, label %55, label %61

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3
  %57 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 2
  %58 = bitcast %"class.gfx::RectF"* %57 to i8*
  %59 = bitcast %"class.gfx::RectF"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 4 %59, i64 16, i1 false) #11
  %60 = bitcast %"class.gfx::RectF"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  br label %162

61:                                               ; preds = %46
  %62 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %54, i64 0, i32 0
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %54, i64 0, i32 1
  %65 = load float, float* %64, align 4
  %66 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %10, float %63, float %65) #11
  %67 = load i64, i64* %48, align 8
  %68 = load i64, i64* %47, align 8
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = inttoptr i64 %68 to %struct.SkPoint*
  switch i64 %70, label %72 [
    i64 2, label %74
    i64 3, label %80
    i64 4, label %90
  ]

72:                                               ; preds = %61
  %73 = icmp ugt i64 %70, 1
  br i1 %73, label %104, label %119

74:                                               ; preds = %61
  %75 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1, i32 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1, i32 1
  %78 = load float, float* %77, align 4
  %79 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %10, float %76, float %78) #11
  br label %119

80:                                               ; preds = %61
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1, i32 0
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1, i32 1
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 2, i32 0
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 2, i32 1
  %88 = load float, float* %87, align 4
  %89 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %10, float %82, float %84, float %86, float %88) #11
  br label %119

90:                                               ; preds = %61
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1, i32 0
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 1, i32 1
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 2, i32 0
  %96 = load float, float* %95, align 4
  %97 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 2, i32 1
  %98 = load float, float* %97, align 4
  %99 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 3, i32 0
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 3, i32 1
  %102 = load float, float* %101, align 4
  %103 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %10, float %92, float %94, float %96, float %98, float %100, float %102) #11
  br label %119

104:                                              ; preds = %72, %104
  %105 = phi %struct.SkPoint* [ %118, %104 ], [ %71, %72 ]
  %106 = phi i64 [ %112, %104 ], [ 1, %72 ]
  %107 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %105, i64 %106, i32 0
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %105, i64 %106, i32 1
  %110 = load float, float* %109, align 4
  %111 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %10, float %108, float %110) #11
  %112 = add nuw i64 %106, 1
  %113 = load i64, i64* %48, align 8
  %114 = load i64, i64* %47, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %112, %116
  %118 = inttoptr i64 %114 to %struct.SkPoint*
  br i1 %117, label %104, label %119

119:                                              ; preds = %104, %72, %90, %80, %74
  %120 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #11
  %121 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #11
  %122 = call { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath* %10) #11
  %123 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %124 = extractvalue { <2 x float>, <2 x float> } %122, 0
  store <2 x float> %124, <2 x float>* %123, align 8
  %125 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %126 = extractvalue { <2 x float>, <2 x float> } %122, 1
  store <2 x float> %126, <2 x float>* %125, align 8
  %127 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nonnull dereferenceable(16) %8) #11
  %128 = bitcast <2 x i64>* %4 to <2 x float>*
  %129 = extractvalue { <2 x float>, <2 x float> } %127, 0
  store <2 x float> %129, <2 x float>* %128, align 16
  %130 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %131 = extractvalue { <2 x float>, <2 x float> } %127, 1
  store <2 x float> %131, <2 x float>* %130, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #11
  %132 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %12, align 8
  %133 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %132, i64 0, i32 1
  %134 = load double, double* %133, align 8
  %135 = fmul double %134, 5.000000e-01
  %136 = fptrunc double %135 to float
  %137 = fsub float -0.000000e+00, %136
  call void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nonnull %6, float %137, float %137, float %137, float %137) #11
  %138 = load %"class.gfx::DelegatedInkMetadata"*, %"class.gfx::DelegatedInkMetadata"** %12, align 8
  %139 = getelementptr inbounds %"class.gfx::DelegatedInkMetadata", %"class.gfx::DelegatedInkMetadata"* %138, i64 0, i32 5
  call void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"* nonnull %6, %"class.gfx::RectF"* dereferenceable(16) %139) #11
  %140 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %141 = and i8 %140, 25
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %154, label %143, !prof !2

143:                                              ; preds = %119
  %144 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #11
  call void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.gfx::RectF"* nonnull %6) #11
  %145 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9)
  %146 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %143, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #11
  br label %154

154:                                              ; preds = %119, %153
  %155 = load <2 x i64>, <2 x i64>* %4, align 16
  %156 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3
  %157 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 2
  %158 = bitcast %"class.gfx::RectF"* %157 to i8*
  %159 = bitcast %"class.gfx::RectF"* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 4 %159, i64 16, i1 false) #11
  %160 = bitcast %"class.gfx::RectF"* %156 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %160, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #11
  %161 = load %struct.SkPoint*, %struct.SkPoint** %28, align 8
  br label %162

162:                                              ; preds = %154, %55
  %163 = phi %struct.SkPoint* [ %161, %154 ], [ %54, %55 ]
  %164 = icmp eq %struct.SkPoint* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %162
  %166 = ptrtoint %struct.SkPoint* %163 to i64
  store i64 %166, i64* %48, align 8
  %167 = bitcast %struct.SkPoint* %163 to i8*
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %162, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %169

169:                                              ; preds = %168, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz29DelegatedInkPointRendererSkia13SetDamageRectEN3gfx5RectFE(%"class.viz::DelegatedInkPointRendererSkia"* nocapture, <2 x float>, <2 x float>) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 2
  %6 = bitcast %"class.gfx::RectF"* %5 to i8*
  %7 = bitcast %"class.gfx::RectF"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 16, i1 false)
  %8 = bitcast %"class.gfx::RectF"* %4 to <2 x float>*
  store <2 x float> %1, <2 x float>* %8, align 8
  %9 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 3, i32 1
  %10 = bitcast %"class.gfx::SizeF"* %9 to <2 x float>*
  store <2 x float> %2, <2 x float>* %10, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8)) local_unnamed_addr #2 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %22 = load i8, i8* %16, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %9, %53
  %25 = phi i64 [ %54, %53 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %31 = bitcast %"union.base::trace_event::TraceValue"* %30 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %32 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %31, align 8
  %33 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %32 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %36 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, i64 1
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, align 8
  call void %38(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %32) #11
  %39 = load i8, i8* %26, align 1
  br label %40

40:                                               ; preds = %34, %24
  %41 = phi i8 [ %27, %24 ], [ %39, %34 ]
  %42 = icmp eq i8 %41, 9
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.protozero::HeapBuffered"**
  %46 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %45, align 8
  %47 = icmp eq %"class.protozero::HeapBuffered"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %49) #11
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %50) #11
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %51) #11
  %52 = bitcast %"class.protozero::HeapBuffered"* %46 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %48, %43, %40, %29
  %54 = add nuw nsw i64 %25, 1
  %55 = load i8, i8* %16, align 8
  %56 = zext i8 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %24, label %58

58:                                               ; preds = %53, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %21
}

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath*) local_unnamed_addr #3

declare void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %29
}

declare void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::RectF"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3viz29DelegatedInkPointRendererSkia24GetPathPointCountForTestEv(%"class.viz::DelegatedInkPointRendererSkia"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %2) #11
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz29DelegatedInkPointRendererSkiaD2Ev(%"class.viz::DelegatedInkPointRendererSkia"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3viz29DelegatedInkPointRendererSkiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %3) #11
  %4 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 0
  tail call void @_ZN3viz29DelegatedInkPointRendererBaseD2Ev(%"class.viz::DelegatedInkPointRendererBase"* %4) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz29DelegatedInkPointRendererSkiaD0Ev(%"class.viz::DelegatedInkPointRendererSkia"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3viz29DelegatedInkPointRendererSkiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %3) #11
  %4 = getelementptr inbounds %"class.viz::DelegatedInkPointRendererSkia", %"class.viz::DelegatedInkPointRendererSkia"* %0, i64 0, i32 0
  tail call void @_ZN3viz29DelegatedInkPointRendererBaseD2Ev(%"class.viz::DelegatedInkPointRendererBase"* %4) #11
  %5 = bitcast %"class.viz::DelegatedInkPointRendererSkia"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #12
  ret void
}

declare void @_ZN3viz29DelegatedInkPointRendererBase22StoreDelegatedInkPointERKN3gfx17DelegatedInkPointE(%"class.viz::DelegatedInkPointRendererBase"*, %"class.gfx::DelegatedInkPoint"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN3viz29DelegatedInkPointRendererBase15ResetPredictionEv(%"class.viz::DelegatedInkPointRendererBase"*) unnamed_addr #3

declare void @_ZN3viz29DelegatedInkPointRendererBase23SetDelegatedInkMetadataENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE(%"class.viz::DelegatedInkPointRendererBase"*, %"class.gfx::DelegatedInkMetadata"*) unnamed_addr #3

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath*, float, float, float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath*, float, float, float, float, float, float) local_unnamed_addr #3

declare void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"*, float, float, float, float) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3viz29DelegatedInkPointRendererBaseD2Ev(%"class.viz::DelegatedInkPointRendererBase"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
