; ModuleID = '../../base/i18n/rtl.cc'
source_filename = "../../base/i18n/rtl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::__less" = type { i8 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::BasicStringPiece"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::basic_string.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.25 }
%struct.anon.25 = type { %"struct.std::__1::__padding.26", i8 }
%"struct.std::__1::__padding.26" = type { [1 x i8] }
%"class.std::__1::allocator.28" = type { i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" = type { %union.anon.33 }
%union.anon.33 = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" = type { i32*, i64, i64 }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short" = type { [5 x i32], %struct.anon.34 }
%struct.anon.34 = type { %"struct.std::__1::__padding.35", i8 }
%"struct.std::__1::__padding.35" = type { [3 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNKSt3__16__lessIA3_cN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEclERKS6_RA3_Kc = comdat any

$_ZNKSt3__16__lessIA3_cN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEclERA3_KcRKS6_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@.str = private unnamed_addr constant [3 x i8] c"es\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"es-ES\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"es-419\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"es-MX\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"../../base/i18n/rtl.cc\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"Failed to set the ICU default locale to \00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c". Falling back to en-US.\00", align 1
@_ZN4base4i18nL20g_icu_text_directionE = internal unnamed_addr global i32 0, align 4
@_ZN8switches17kForceUIDirectionE = external constant [0 x i8], align 1
@_ZN8switches18kForceDirectionLTRE = external constant [0 x i8], align 1
@_ZN8switches18kForceDirectionRTLE = external constant [0 x i8], align 1
@_ZZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKcE17kRTLLanguageCodes = internal constant [5 x [3 x i8]] [[3 x i8] c"ar\00", [3 x i8] c"fa\00", [3 x i8] c"he\00", [3 x i8] c"iw\00", [3 x i8] c"ur\00"], align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"-_\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"und\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZZN12_GLOBAL__N_121GetCharacterDirectionEiE10has_switch = internal unnamed_addr global i8 0, align 1
@_ZGVZN12_GLOBAL__N_121GetCharacterDirectionEiE10has_switch = internal global i64 0, align 8
@_ZN8switches19kForceTextDirectionE = external constant [0 x i8], align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN12_GLOBAL__N_121GetCharacterDirectionEi = private unnamed_addr constant [16 x i32] [i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 1, i32 1, i32 1], align 4
@switch.table._ZN4base4i18n34StripWrappingBidiControlCharactersERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE = private unnamed_addr constant [5 x i64] [i64 1, i64 1, i64 0, i64 1, i64 1], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n19GetConfiguredLocaleEv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #0 {
  %2 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #12
  tail call fastcc void @_ZN12_GLOBAL__N_115GetLocaleStringERKN6icu_696LocaleE(%"class.std::__1::basic_string"* sret %0, %"class.icu_69::Locale"* dereferenceable(224) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_115GetLocaleStringERKN6icu_696LocaleE(%"class.std::__1::basic_string"* noalias sret, %"class.icu_69::Locale"* dereferenceable(224)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 1, i64 0
  %6 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 3, i64 0
  %7 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 10
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = icmp eq i8* %5, null
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 24, i1 false)
  br i1 %16, label %22, label %18

18:                                               ; preds = %2
  %19 = load i8, i8* %5, align 1
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8* %5
  br label %22

22:                                               ; preds = %18, %2
  %23 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), %2 ], [ %21, %18 ]
  %24 = tail call i64 @strlen(i8* %23) #12
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #13
  unreachable

28:                                               ; preds = %22
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %24, 16
  %32 = and i64 %31, -16
  %33 = tail call i8* @_Znwm(i64 %32) #14
  store i8* %33, i8** %13, align 8
  %34 = or i64 %32, -9223372036854775808
  store i64 %34, i64* %15, align 8
  store i64 %24, i64* %14, align 8
  br label %41

35:                                               ; preds = %28
  %36 = trunc i64 %24 to i8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %40 = icmp eq i64 %24, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35, %30
  %42 = phi i8* [ %33, %30 ], [ %39, %35 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %23, i64 %24, i1 false) #12
  br label %43

43:                                               ; preds = %35, %41
  %44 = phi i8* [ %39, %35 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %24
  store i8 0, i8* %45, align 1
  %46 = icmp eq i8* %6, null
  %47 = load i8, i8* %6, align 1
  %48 = icmp eq i8 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 45) #12
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* nonnull %6) #12
  br label %52

52:                                               ; preds = %43, %50
  %53 = icmp eq i8* %12, null
  br i1 %53, label %91, label %54

54:                                               ; preds = %52
  %55 = load i8, i8* %12, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %91, label %57

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  %59 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = tail call i64 @strlen(i8* nonnull %12) #12
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* nonnull %12, i64 %60) #12
  %61 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1, !noalias !2
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8, !noalias !2
  %67 = select i1 %64, i8* %66, i8* %59
  %68 = call i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertENS_11__wrap_iterIPKcEEc(%"class.std::__1::basic_string"* nonnull %4, i8* %67, i8 signext 64) #12, !noalias !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %59, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #12, !noalias !2
  %69 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %71 to i64
  %78 = select i1 %72, i8* %74, i8* %58
  %79 = select i1 %72, i64 %76, i64 %77
  %80 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %78, i64 %79) #12
  %81 = load i8, i8* %70, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %57
  %84 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %57, %83
  %86 = load i8, i8* %62, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %89) #14
  br label %90

90:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  br label %91

91:                                               ; preds = %90, %52, %54
  ret void
}

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n18GetCanonicalLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::Locale", align 8
  %4 = bitcast %"class.icu_69::Locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %4) #12
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  call void @_ZN6icu_696Locale15createCanonicalEPKc(%"class.icu_69::Locale"* nonnull sret %3, i8* %12) #12
  call fastcc void @_ZN12_GLOBAL__N_115GetLocaleStringERKN6icu_696LocaleE(%"class.std::__1::basic_string"* sret %0, %"class.icu_69::Locale"* nonnull dereferenceable(224) %3)
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %4) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6icu_696Locale15createCanonicalEPKc(%"class.icu_69::Locale"* sret, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n13ICULocaleNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 0, i64 2, %"class.std::__1::allocator"* dereferenceable(1) %7) #12
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 2
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  %19 = icmp ne i32 %18, 0
  %20 = load i8, i8* %9, align 1
  br label %21

21:                                               ; preds = %2, %17
  %22 = phi i8 [ %20, %17 ], [ %10, %2 ]
  %23 = phi i1 [ %19, %17 ], [ true, %2 ]
  %24 = icmp slt i8 %22, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %21, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  %29 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %23, label %33, label %42

33:                                               ; preds = %28
  br i1 %32, label %37, label %34

34:                                               ; preds = %33
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #12
  br label %139

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %39, i64 %41) #12
  br label %139

42:                                               ; preds = %28
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %46 = select i1 %32, i8* %44, i8* %45
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %31 to i64
  %50 = select i1 %32, i64 %48, i64 %49
  %51 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %46, i64 %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  br i1 %51, label %52, label %57

52:                                               ; preds = %42
  %53 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 5, i8* %54, align 1
  %55 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #12
  %56 = getelementptr inbounds i8, i8* %55, i64 5
  store i8 0, i8* %56, align 1
  br label %139

57:                                               ; preds = %42
  %58 = load i8, i8* %30, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i8*, i8** %43, align 8
  %61 = select i1 %59, i8* %60, i8* %45
  %62 = load i64, i64* %47, align 8
  %63 = zext i8 %58 to i64
  %64 = select i1 %59, i64 %62, i64 %63
  %65 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %61, i64 %64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #12
  br i1 %65, label %66, label %131

66:                                               ; preds = %57
  %67 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #12
  %68 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #12
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %72 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %67, i64 0, i32 1, i64 0
  %73 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  %74 = call i64 @strlen(i8* %72) #12
  %75 = icmp ugt i64 %74, -17
  br i1 %75, label %76, label %78

76:                                               ; preds = %66
  %77 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %77) #13
  unreachable

78:                                               ; preds = %66
  %79 = icmp ult i64 %74, 23
  br i1 %79, label %86, label %80

80:                                               ; preds = %78
  %81 = add nuw i64 %74, 16
  %82 = and i64 %81, -16
  %83 = call i8* @_Znwm(i64 %82) #14
  store i8* %83, i8** %69, align 8
  %84 = or i64 %82, -9223372036854775808
  store i64 %84, i64* %71, align 8
  store i64 %74, i64* %70, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %91

86:                                               ; preds = %78
  %87 = trunc i64 %74 to i8
  %88 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  store i8 %87, i8* %89, align 1
  %90 = icmp eq i64 %74, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86, %80
  %92 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %88, %86 ], [ %85, %80 ]
  %93 = phi i8* [ %68, %86 ], [ %83, %80 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %93, i8* align 1 %72, i64 %74, i1 false) #12
  br label %94

94:                                               ; preds = %86, %91
  %95 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %88, %86 ], [ %92, %91 ]
  %96 = phi i8* [ %68, %86 ], [ %93, %91 ]
  %97 = getelementptr inbounds i8, i8* %96, i64 %74
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %67, i64 0, i32 3, i64 0
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = load i8*, i8** %69, align 8
  %103 = select i1 %101, i8* %102, i8* %68
  %104 = load i64, i64* %70, align 8
  %105 = zext i8 %100 to i64
  %106 = select i1 %101, i64 %104, i64 %105
  %107 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %103, i64 %106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  br i1 %107, label %108, label %121

108:                                              ; preds = %94
  %109 = icmp eq i8* %98, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = call i64 @strlen(i8* nonnull %98) #12
  br label %115

112:                                              ; preds = %108
  %113 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %114 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #12
  br label %115

115:                                              ; preds = %110, %112
  %116 = phi i64 [ 0, %112 ], [ %111, %110 ]
  %117 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %98, i64 %116, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #12
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %5, i8 signext 45) #12
  %119 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %98) #12
  %120 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %68, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #12
  br label %130

121:                                              ; preds = %94, %115
  %122 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  store i8 5, i8* %123, align 1
  %124 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5, i1 false) #12
  %125 = getelementptr inbounds i8, i8* %124, i64 5
  store i8 0, i8* %125, align 1
  %126 = load i8, i8* %99, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %121
  %129 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %118, %121, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #12
  br label %139

131:                                              ; preds = %57
  %132 = load i8, i8* %30, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %45, i64 24, i1 false) #12
  br label %139

136:                                              ; preds = %131
  %137 = load i8*, i8** %43, align 8
  %138 = load i64, i64* %47, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %137, i64 %138) #12
  br label %139

139:                                              ; preds = %136, %134, %37, %34, %130, %52
  ret void
}

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n19SetICUDefaultLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.icu_69::Locale", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = bitcast %"class.icu_69::Locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 224, i1 false)
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @_ZN4base4i18n13ICULocaleNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %7
  call void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"* nonnull %2, i8* %14, i8* null, i8* null, i8* null) #12
  %15 = load i8, i8* %9, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %1, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #12
  store i32 0, i32* %4, align 4
  %21 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %2, i64 0, i32 1, i64 0
  %22 = icmp eq i8* %21, null
  %23 = load i8, i8* %21, align 8
  %24 = icmp eq i8 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %19
  call void @_ZN6icu_696Locale10setDefaultERKS0_R10UErrorCode(%"class.icu_69::Locale"* nonnull dereferenceable(224) %2, i32* nonnull dereferenceable(4) %4) #12
  br label %50

27:                                               ; preds = %19
  %28 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %28, label %29, label %48

29:                                               ; preds = %27
  %30 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %30) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 147, i32 2) #12
  %31 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %32 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i64 40) #12
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %43 = zext i8 %36 to i64
  %44 = select i1 %37, i8* %39, i8* %42
  %45 = select i1 %37, i64 %41, i64 %43
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* %44, i64 %45) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %46, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i64 24) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %30) #12
  br label %48

48:                                               ; preds = %27, %29
  %49 = call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale5getUSEv() #12
  call void @_ZN6icu_696Locale10setDefaultERKS0_R10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224) %49, i32* nonnull dereferenceable(4) %4) #12
  br label %50

50:                                               ; preds = %48, %26
  store i32 0, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #12
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %6) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"*, i8*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN6icu_696Locale10setDefaultERKS0_R10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32* dereferenceable(4)) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale5getUSEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n5IsRTLEv() local_unnamed_addr #0 {
  %1 = load i32, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %8

3:                                                ; preds = %0
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #12
  %5 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %4, i64 0, i32 7
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @_ZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKc(i8* %6) #12
  store i32 %7, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  br label %8

8:                                                ; preds = %0, %3
  %9 = phi i32 [ %7, %3 ], [ %1, %0 ]
  %10 = icmp eq i32 %9, 1
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n8ICUIsRTLEv() local_unnamed_addr #0 {
  %1 = load i32, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %8

3:                                                ; preds = %0
  %4 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #12
  %5 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %4, i64 0, i32 7
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @_ZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKc(i8* %6)
  store i32 %7, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ %7, %3 ], [ %1, %0 ]
  %10 = icmp eq i32 %9, 1
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n16SetRTLForTestingEb(i1 zeroext) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 2, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %7 = select i1 %0, i16 25960, i16 28261
  store i16 %7, i16* %6, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 0, i8* %8, align 2
  call void @_ZN4base4i18n19SetICUDefaultLocaleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2)
  %9 = load i8, i8* %5, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKc(i8*) local_unnamed_addr #0 {
  %2 = alloca %"struct.std::__1::__less", align 1
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::vector.14", align 8
  %5 = tail call i32 @_ZN4base4i18n22GetForcedTextDirectionEv()
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %49

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.14"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 1
  %11 = icmp eq i8* %0, null
  %12 = bitcast %"class.std::__1::vector.14"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  br i1 %11, label %15, label %13

13:                                               ; preds = %7
  %14 = tail call i64 @strlen(i8* nonnull %0) #12
  br label %18

15:                                               ; preds = %7
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %18

18:                                               ; preds = %13, %15
  %19 = phi i64 [ 0, %15 ], [ %14, %13 ]
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.14"* nonnull sret %4, i8* %0, i64 %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2, i32 0, i32 0) #12
  %20 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #12
  br label %22

22:                                               ; preds = %22, %18
  %23 = phi i64 [ %32, %22 ], [ 5, %18 ]
  %24 = phi [3 x i8]* [ %31, %22 ], [ getelementptr inbounds ([5 x [3 x i8]], [5 x [3 x i8]]* @_ZZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKcE17kRTLLanguageCodes, i64 0, i64 0), %18 ]
  %25 = lshr i64 %23, 1
  %26 = getelementptr inbounds [3 x i8], [3 x i8]* %24, i64 %25
  %27 = call zeroext i1 @_ZNKSt3__16__lessIA3_cN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEclERA3_KcRKS6_(%"struct.std::__1::__less"* nonnull %2, [3 x i8]* dereferenceable(3) %26, %"class.base::BasicStringPiece"* dereferenceable(16) %20) #12
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %26, i64 1
  %29 = xor i64 %25, -1
  %30 = add i64 %23, %29
  %31 = select i1 %27, [3 x i8]* %28, [3 x i8]* %24
  %32 = select i1 %27, i64 %30, i64 %25
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %22

34:                                               ; preds = %22
  %35 = icmp eq [3 x i8]* %31, getelementptr inbounds ([5 x [3 x i8]], [5 x [3 x i8]]* @_ZZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKcE17kRTLLanguageCodes, i64 1, i64 0)
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #12
  br label %40

37:                                               ; preds = %34
  %38 = call zeroext i1 @_ZNKSt3__16__lessIA3_cN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEclERKS6_RA3_Kc(%"struct.std::__1::__less"* nonnull %2, %"class.base::BasicStringPiece"* dereferenceable(16) %20, [3 x i8]* dereferenceable(3) %31) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #12
  %39 = select i1 %38, i32 2, i32 1
  br label %40

40:                                               ; preds = %37, %36
  %41 = phi i32 [ 2, %36 ], [ %39, %37 ]
  %42 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %43 = icmp eq %"class.base::BasicStringPiece"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = ptrtoint %"class.base::BasicStringPiece"* %42 to i64
  %46 = bitcast %"class.base::BasicStringPiece"** %10 to i64*
  store i64 %45, i64* %46, align 8
  %47 = bitcast %"class.base::BasicStringPiece"* %42 to i8*
  call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  br label %49

49:                                               ; preds = %1, %48
  %50 = phi i32 [ %41, %48 ], [ %5, %1 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base4i18n22GetForcedTextDirectionEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %3 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceUIDirectionE, i64 0, i64 0)) #12
  br i1 %3, label %4, label %45

4:                                                ; preds = %0
  %5 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceUIDirectionE, i64 0, i64 0)) #12
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, %"class.base::CommandLine"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceUIDirectionE, i64 0, i64 0), i64 %9) #12
  %10 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionLTRE, i64 0, i64 0)) #12
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i64, i64* %7, align 8
  %16 = zext i8 %13 to i64
  %17 = select i1 %14, i64 %15, i64 %16
  %18 = icmp eq i64 %10, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %4
  %20 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %1, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionLTRE, i64 0, i64 0), i64 %10) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22

22:                                               ; preds = %19
  %23 = load i8, i8* %12, align 1
  %24 = load i64, i64* %7, align 8
  %25 = zext i8 %23 to i64
  br label %26

26:                                               ; preds = %22, %4
  %27 = phi i64 [ %25, %22 ], [ %16, %4 ]
  %28 = phi i64 [ %24, %22 ], [ %15, %4 ]
  %29 = phi i8 [ %23, %22 ], [ %13, %4 ]
  %30 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionRTLE, i64 0, i64 0)) #12
  %31 = icmp slt i8 %29, 0
  %32 = select i1 %31, i64 %28, i64 %27
  %33 = icmp eq i64 %30, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %26
  %35 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %1, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionRTLE, i64 0, i64 0), i64 %30) #12
  %36 = icmp ne i32 %35, 0
  br label %37

37:                                               ; preds = %34, %26, %19
  %38 = phi i32 [ 2, %19 ], [ 1, %26 ], [ 1, %34 ]
  %39 = phi i1 [ false, %19 ], [ true, %26 ], [ %36, %34 ]
  %40 = load i8, i8* %12, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %37, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  br i1 %39, label %45, label %46

45:                                               ; preds = %44, %0
  br label %46

46:                                               ; preds = %44, %45
  %47 = phi i32 [ 0, %45 ], [ %38, %44 ]
  ret i32 %47
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.14"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base4i18n25GetTextDirectionForLocaleEPKc(i8*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = tail call i32 @_ZN4base4i18n22GetForcedTextDirectionEv()
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #12
  store i32 0, i32* %2, align 4
  %7 = call i32 @uloc_getCharacterOrientation_69(i8* %0, i32* nonnull %2) #12
  %8 = icmp eq i32 %7, 1
  %9 = select i1 %8, i32 1, i32 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ %3, %1 ]
  ret i32 %11
}

declare i32 @uloc_getCharacterOrientation_69(i8*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base4i18n32GetFirstStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i16* %7, i16* %10
  %13 = select i1 %5, i64 %9, i64 %11
  br label %14

14:                                               ; preds = %37, %1
  %15 = phi i64 [ 0, %1 ], [ %39, %37 ]
  %16 = icmp ult i64 %15, %13
  br i1 %16, label %17, label %42

17:                                               ; preds = %14
  %18 = add nuw i64 %15, 1
  %19 = getelementptr inbounds i16, i16* %12, i64 %15
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 64512
  %23 = icmp ne i32 %22, 55296
  %24 = icmp eq i64 %18, %13
  %25 = or i1 %24, %23
  br i1 %25, label %37, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds i16, i16* %12, i64 %18
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 64512
  %31 = icmp eq i32 %30, 56320
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = add i64 %15, 2
  %34 = shl nuw nsw i32 %21, 10
  %35 = add nsw i32 %34, -56613888
  %36 = add nsw i32 %35, %29
  br label %37

37:                                               ; preds = %17, %26, %32
  %38 = phi i32 [ %21, %17 ], [ %36, %32 ], [ %21, %26 ]
  %39 = phi i64 [ %18, %17 ], [ %33, %32 ], [ %18, %26 ]
  %40 = tail call fastcc i32 @_ZN12_GLOBAL__N_121GetCharacterDirectionEi(i32 %38)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %14, label %42

42:                                               ; preds = %14, %37
  %43 = phi i32 [ %40, %37 ], [ 2, %14 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_121GetCharacterDirectionEi(i32) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_121GetCharacterDirectionEiE10has_switch to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12, !prof !5

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_121GetCharacterDirectionEiE10has_switch) #12
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %10 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kForceTextDirectionE, i64 0, i64 0)) #12
  %11 = zext i1 %10 to i8
  store i8 %11, i8* @_ZZN12_GLOBAL__N_121GetCharacterDirectionEiE10has_switch, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_121GetCharacterDirectionEiE10has_switch) #12
  br label %12

12:                                               ; preds = %5, %8, %1
  %13 = load i8, i8* @_ZZN12_GLOBAL__N_121GetCharacterDirectionEiE10has_switch, align 1, !range !6
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %57, label %15

15:                                               ; preds = %12
  %16 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kForceTextDirectionE, i64 0, i64 0)) #12
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kForceTextDirectionE, i64 0, i64 0), i64 %21) #12
  %22 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionRTLE, i64 0, i64 0)) #12
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = load i64, i64* %19, align 8
  %28 = zext i8 %25 to i64
  %29 = select i1 %26, i64 %27, i64 %28
  %30 = icmp eq i64 %22, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %15
  %32 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionRTLE, i64 0, i64 0), i64 %22) #12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %31
  %35 = load i8, i8* %24, align 1
  %36 = load i64, i64* %19, align 8
  %37 = zext i8 %35 to i64
  br label %38

38:                                               ; preds = %34, %15
  %39 = phi i64 [ %37, %34 ], [ %28, %15 ]
  %40 = phi i64 [ %36, %34 ], [ %27, %15 ]
  %41 = phi i8 [ %35, %34 ], [ %25, %15 ]
  %42 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionLTRE, i64 0, i64 0)) #12
  %43 = icmp slt i8 %41, 0
  %44 = select i1 %43, i64 %40, i64 %39
  %45 = icmp eq i64 %42, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %38
  %47 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches18kForceDirectionLTRE, i64 0, i64 0), i64 %42) #12
  %48 = icmp ne i32 %47, 0
  br label %49

49:                                               ; preds = %46, %38, %31
  %50 = phi i1 [ false, %31 ], [ true, %38 ], [ %48, %46 ]
  %51 = phi i32 [ 1, %31 ], [ 2, %38 ], [ 2, %46 ]
  %52 = load i8, i8* %24, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %49, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  br i1 %50, label %57, label %64

57:                                               ; preds = %12, %56
  %58 = call i32 @u_getIntPropertyValue_69(i32 %0, i32 4096) #12
  %59 = icmp ult i32 %58, 16
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = sext i32 %58 to i64
  %62 = getelementptr inbounds [16 x i32], [16 x i32]* @switch.table._ZN12_GLOBAL__N_121GetCharacterDirectionEi, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  ret i32 %63

64:                                               ; preds = %57, %56
  %65 = phi i32 [ %51, %56 ], [ 0, %57 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base4i18n31GetLastStrongCharacterDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i16* %7, i16* %10
  %13 = select i1 %5, i64 %9, i64 %11
  br label %14

14:                                               ; preds = %37, %1
  %15 = phi i64 [ %13, %1 ], [ %39, %37 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %14
  %18 = add i64 %15, -1
  %19 = getelementptr inbounds i16, i16* %12, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 64512
  %23 = icmp ne i32 %22, 56320
  %24 = icmp eq i64 %18, 0
  %25 = or i1 %24, %23
  br i1 %25, label %37, label %26

26:                                               ; preds = %17
  %27 = add i64 %15, -2
  %28 = getelementptr inbounds i16, i16* %12, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 64512
  %32 = icmp eq i32 %31, 55296
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = shl nuw nsw i32 %30, 10
  %35 = add nuw nsw i32 %21, -56613888
  %36 = add nsw i32 %35, %34
  br label %37

37:                                               ; preds = %17, %26, %33
  %38 = phi i32 [ %21, %17 ], [ %36, %33 ], [ %21, %26 ]
  %39 = phi i64 [ %18, %17 ], [ %27, %33 ], [ %18, %26 ]
  %40 = tail call fastcc i32 @_ZN12_GLOBAL__N_121GetCharacterDirectionEi(i32 %38)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %14, label %42

42:                                               ; preds = %14, %37
  %43 = phi i32 [ %40, %37 ], [ 2, %14 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base4i18n18GetStringDirectionERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i16* %7, i16* %10
  %13 = select i1 %5, i64 %9, i64 %11
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %51, label %15

15:                                               ; preds = %1, %46
  %16 = phi i32 [ %47, %46 ], [ 0, %1 ]
  %17 = phi i64 [ %39, %46 ], [ 0, %1 ]
  %18 = add nuw i64 %17, 1
  %19 = getelementptr inbounds i16, i16* %12, i64 %17
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 64512
  %23 = icmp ne i32 %22, 55296
  %24 = icmp eq i64 %18, %13
  %25 = or i1 %24, %23
  br i1 %25, label %37, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds i16, i16* %12, i64 %18
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 64512
  %31 = icmp eq i32 %30, 56320
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = add i64 %17, 2
  %34 = shl nuw nsw i32 %21, 10
  %35 = add nsw i32 %34, -56613888
  %36 = add nsw i32 %35, %29
  br label %37

37:                                               ; preds = %15, %26, %32
  %38 = phi i32 [ %21, %15 ], [ %36, %32 ], [ %21, %26 ]
  %39 = phi i64 [ %18, %15 ], [ %33, %32 ], [ %18, %26 ]
  %40 = tail call fastcc i32 @_ZN12_GLOBAL__N_121GetCharacterDirectionEi(i32 %38)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %37
  %43 = icmp eq i32 %16, 0
  %44 = icmp eq i32 %16, %40
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %37, %42
  %47 = phi i32 [ %16, %37 ], [ %40, %42 ]
  %48 = icmp ult i64 %39, %13
  br i1 %48, label %15, label %49

49:                                               ; preds = %46
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %1, %49
  br label %52

52:                                               ; preds = %42, %51, %49
  %53 = phi i32 [ 2, %51 ], [ %47, %49 ], [ 0, %42 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %273, label %14

14:                                               ; preds = %11
  %15 = load i32, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #12
  %19 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %18, i64 0, i32 7
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i32 @_ZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKc(i8* %20) #12
  store i32 %21, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  %22 = load i8, i8* %3, align 1
  br label %23

23:                                               ; preds = %14, %17
  %24 = phi i8 [ %22, %17 ], [ %4, %14 ]
  %25 = phi i32 [ %21, %17 ], [ %15, %14 ]
  %26 = icmp eq i32 %25, 1
  %27 = icmp slt i8 %24, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %33 = zext i8 %24 to i64
  %34 = select i1 %27, i16* %29, i16* %32
  %35 = select i1 %27, i64 %31, i64 %33
  br label %36

36:                                               ; preds = %59, %23
  %37 = phi i64 [ 0, %23 ], [ %61, %59 ]
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %202

39:                                               ; preds = %36
  %40 = add nuw i64 %37, 1
  %41 = getelementptr inbounds i16, i16* %34, i64 %37
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = and i32 %43, 64512
  %45 = icmp ne i32 %44, 55296
  %46 = icmp eq i64 %40, %35
  %47 = or i1 %46, %45
  br i1 %47, label %59, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds i16, i16* %34, i64 %40
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, 64512
  %53 = icmp eq i32 %52, 56320
  br i1 %53, label %54, label %59

54:                                               ; preds = %48
  %55 = add i64 %37, 2
  %56 = shl nuw nsw i32 %43, 10
  %57 = add nsw i32 %56, -56613888
  %58 = add nsw i32 %57, %51
  br label %59

59:                                               ; preds = %54, %48, %39
  %60 = phi i32 [ %43, %39 ], [ %58, %54 ], [ %43, %48 ]
  %61 = phi i64 [ %40, %39 ], [ %55, %54 ], [ %40, %48 ]
  %62 = tail call i32 @u_getIntPropertyValue_69(i32 %60, i32 4096) #12
  switch i32 %62, label %36 [
    i32 13, label %63
    i32 1, label %63
  ]

63:                                               ; preds = %59, %59
  %64 = load i8, i8* %3, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %26, label %134, label %66

66:                                               ; preds = %63
  br i1 %65, label %67, label %69

67:                                               ; preds = %66
  %68 = load i64, i64* %30, align 8
  br label %71

69:                                               ; preds = %66
  %70 = zext i8 %64 to i64
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %68, %67 ], [ %70, %69 ]
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %104, label %74

74:                                               ; preds = %71
  %75 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8235) #12
  %76 = load i8, i8* %3, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = zext i8 %76 to i64
  br label %86

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 9223372036854775807
  %84 = add nsw i64 %83, -1
  %85 = load i64, i64* %30, align 8
  br label %86

86:                                               ; preds = %80, %78
  %87 = phi i64 [ 10, %78 ], [ %84, %80 ]
  %88 = phi i64 [ %79, %78 ], [ %85, %80 ]
  %89 = icmp eq i64 %88, %87
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %87, i64 1, i64 %87, i64 %87, i64 0, i64 0) #12
  %91 = load i8, i8* %3, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %97, label %94

93:                                               ; preds = %86
  br i1 %77, label %97, label %94

94:                                               ; preds = %93, %90
  %95 = trunc i64 %88 to i8
  %96 = add i8 %95, 1
  store i8 %96, i8* %3, align 1
  br label %100

97:                                               ; preds = %93, %90
  %98 = load i16*, i16** %28, align 8
  %99 = add i64 %88, 1
  store i64 %99, i64* %30, align 8
  br label %100

100:                                              ; preds = %97, %94
  %101 = phi i16* [ %32, %94 ], [ %98, %97 ]
  %102 = getelementptr inbounds i16, i16* %101, i64 %88
  store i16 8236, i16* %102, align 2
  %103 = getelementptr inbounds i16, i16* %102, i64 1
  store i16 0, i16* %103, align 2
  br label %104

104:                                              ; preds = %71, %100
  %105 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8206)
  %106 = load i8, i8* %3, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = zext i8 %106 to i64
  br label %116

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 9223372036854775807
  %114 = add nsw i64 %113, -1
  %115 = load i64, i64* %30, align 8
  br label %116

116:                                              ; preds = %110, %108
  %117 = phi i64 [ 10, %108 ], [ %114, %110 ]
  %118 = phi i64 [ %109, %108 ], [ %115, %110 ]
  %119 = icmp eq i64 %118, %117
  br i1 %119, label %120, label %123

120:                                              ; preds = %116
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %117, i64 1, i64 %117, i64 %117, i64 0, i64 0) #12
  %121 = load i8, i8* %3, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %127, label %124

123:                                              ; preds = %116
  br i1 %107, label %127, label %124

124:                                              ; preds = %123, %120
  %125 = trunc i64 %118 to i8
  %126 = add i8 %125, 1
  store i8 %126, i8* %3, align 1
  br label %130

127:                                              ; preds = %123, %120
  %128 = load i16*, i16** %28, align 8
  %129 = add i64 %118, 1
  store i64 %129, i64* %30, align 8
  br label %130

130:                                              ; preds = %124, %127
  %131 = phi i16* [ %32, %124 ], [ %128, %127 ]
  %132 = getelementptr inbounds i16, i16* %131, i64 %118
  store i16 8206, i16* %132, align 2
  %133 = getelementptr inbounds i16, i16* %132, i64 1
  store i16 0, i16* %133, align 2
  br label %273

134:                                              ; preds = %63
  br i1 %65, label %135, label %137

135:                                              ; preds = %134
  %136 = load i64, i64* %30, align 8
  br label %139

137:                                              ; preds = %134
  %138 = zext i8 %64 to i64
  br label %139

139:                                              ; preds = %137, %135
  %140 = phi i64 [ %136, %135 ], [ %138, %137 ]
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %172, label %142

142:                                              ; preds = %139
  %143 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8235) #12
  %144 = load i8, i8* %3, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %142
  %147 = zext i8 %144 to i64
  br label %154

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, 9223372036854775807
  %152 = add nsw i64 %151, -1
  %153 = load i64, i64* %30, align 8
  br label %154

154:                                              ; preds = %148, %146
  %155 = phi i64 [ 10, %146 ], [ %152, %148 ]
  %156 = phi i64 [ %147, %146 ], [ %153, %148 ]
  %157 = icmp eq i64 %156, %155
  br i1 %157, label %158, label %161

158:                                              ; preds = %154
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %155, i64 1, i64 %155, i64 %155, i64 0, i64 0) #12
  %159 = load i8, i8* %3, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %165, label %162

161:                                              ; preds = %154
  br i1 %145, label %165, label %162

162:                                              ; preds = %161, %158
  %163 = trunc i64 %156 to i8
  %164 = add i8 %163, 1
  store i8 %164, i8* %3, align 1
  br label %168

165:                                              ; preds = %161, %158
  %166 = load i16*, i16** %28, align 8
  %167 = add i64 %156, 1
  store i64 %167, i64* %30, align 8
  br label %168

168:                                              ; preds = %165, %162
  %169 = phi i16* [ %32, %162 ], [ %166, %165 ]
  %170 = getelementptr inbounds i16, i16* %169, i64 %156
  store i16 8236, i16* %170, align 2
  %171 = getelementptr inbounds i16, i16* %170, i64 1
  store i16 0, i16* %171, align 2
  br label %172

172:                                              ; preds = %139, %168
  %173 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8207)
  %174 = load i8, i8* %3, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = zext i8 %174 to i64
  br label %184

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %180 = load i64, i64* %179, align 8
  %181 = and i64 %180, 9223372036854775807
  %182 = add nsw i64 %181, -1
  %183 = load i64, i64* %30, align 8
  br label %184

184:                                              ; preds = %178, %176
  %185 = phi i64 [ 10, %176 ], [ %182, %178 ]
  %186 = phi i64 [ %177, %176 ], [ %183, %178 ]
  %187 = icmp eq i64 %186, %185
  br i1 %187, label %188, label %191

188:                                              ; preds = %184
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %185, i64 1, i64 %185, i64 %185, i64 0, i64 0) #12
  %189 = load i8, i8* %3, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %195, label %192

191:                                              ; preds = %184
  br i1 %175, label %195, label %192

192:                                              ; preds = %191, %188
  %193 = trunc i64 %186 to i8
  %194 = add i8 %193, 1
  store i8 %194, i8* %3, align 1
  br label %198

195:                                              ; preds = %191, %188
  %196 = load i16*, i16** %28, align 8
  %197 = add i64 %186, 1
  store i64 %197, i64* %30, align 8
  br label %198

198:                                              ; preds = %192, %195
  %199 = phi i16* [ %32, %192 ], [ %196, %195 ]
  %200 = getelementptr inbounds i16, i16* %199, i64 %186
  store i16 8207, i16* %200, align 2
  %201 = getelementptr inbounds i16, i16* %200, i64 1
  store i16 0, i16* %201, align 2
  br label %273

202:                                              ; preds = %36
  br i1 %26, label %203, label %273

203:                                              ; preds = %202
  %204 = load i8, i8* %3, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %203
  %207 = load i64, i64* %30, align 8
  br label %210

208:                                              ; preds = %203
  %209 = zext i8 %204 to i64
  br label %210

210:                                              ; preds = %208, %206
  %211 = phi i64 [ %207, %206 ], [ %209, %208 ]
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %243, label %213

213:                                              ; preds = %210
  %214 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8234) #12
  %215 = load i8, i8* %3, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %213
  %218 = zext i8 %215 to i64
  br label %225

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %221 = load i64, i64* %220, align 8
  %222 = and i64 %221, 9223372036854775807
  %223 = add nsw i64 %222, -1
  %224 = load i64, i64* %30, align 8
  br label %225

225:                                              ; preds = %219, %217
  %226 = phi i64 [ 10, %217 ], [ %223, %219 ]
  %227 = phi i64 [ %218, %217 ], [ %224, %219 ]
  %228 = icmp eq i64 %227, %226
  br i1 %228, label %229, label %232

229:                                              ; preds = %225
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %226, i64 1, i64 %226, i64 %226, i64 0, i64 0) #12
  %230 = load i8, i8* %3, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %236, label %233

232:                                              ; preds = %225
  br i1 %216, label %236, label %233

233:                                              ; preds = %232, %229
  %234 = trunc i64 %227 to i8
  %235 = add i8 %234, 1
  store i8 %235, i8* %3, align 1
  br label %239

236:                                              ; preds = %232, %229
  %237 = load i16*, i16** %28, align 8
  %238 = add i64 %227, 1
  store i64 %238, i64* %30, align 8
  br label %239

239:                                              ; preds = %236, %233
  %240 = phi i16* [ %32, %233 ], [ %237, %236 ]
  %241 = getelementptr inbounds i16, i16* %240, i64 %227
  store i16 8236, i16* %241, align 2
  %242 = getelementptr inbounds i16, i16* %241, i64 1
  store i16 0, i16* %242, align 2
  br label %243

243:                                              ; preds = %210, %239
  %244 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8207)
  %245 = load i8, i8* %3, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %249, label %247

247:                                              ; preds = %243
  %248 = zext i8 %245 to i64
  br label %255

249:                                              ; preds = %243
  %250 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %251 = load i64, i64* %250, align 8
  %252 = and i64 %251, 9223372036854775807
  %253 = add nsw i64 %252, -1
  %254 = load i64, i64* %30, align 8
  br label %255

255:                                              ; preds = %249, %247
  %256 = phi i64 [ 10, %247 ], [ %253, %249 ]
  %257 = phi i64 [ %248, %247 ], [ %254, %249 ]
  %258 = icmp eq i64 %257, %256
  br i1 %258, label %259, label %262

259:                                              ; preds = %255
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %256, i64 1, i64 %256, i64 %256, i64 0, i64 0) #12
  %260 = load i8, i8* %3, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %266, label %263

262:                                              ; preds = %255
  br i1 %246, label %266, label %263

263:                                              ; preds = %262, %259
  %264 = trunc i64 %257 to i8
  %265 = add i8 %264, 1
  store i8 %265, i8* %3, align 1
  br label %269

266:                                              ; preds = %262, %259
  %267 = load i16*, i16** %28, align 8
  %268 = add i64 %257, 1
  store i64 %268, i64* %30, align 8
  br label %269

269:                                              ; preds = %263, %266
  %270 = phi i16* [ %32, %263 ], [ %267, %266 ]
  %271 = getelementptr inbounds i16, i16* %270, i64 %257
  store i16 8207, i16* %271, align 2
  %272 = getelementptr inbounds i16, i16* %271, i64 1
  store i16 0, i16* %272, align 2
  br label %273

273:                                              ; preds = %202, %198, %269, %130, %11
  %274 = phi i1 [ false, %11 ], [ false, %202 ], [ true, %198 ], [ true, %269 ], [ true, %130 ]
  ret i1 %274
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n28StringContainsStrongRTLCharsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i16* %7, i16* %10
  %13 = select i1 %5, i64 %9, i64 %11
  br label %14

14:                                               ; preds = %37, %1
  %15 = phi i64 [ 0, %1 ], [ %39, %37 ]
  %16 = icmp ult i64 %15, %13
  br i1 %16, label %17, label %41

17:                                               ; preds = %14
  %18 = add nuw i64 %15, 1
  %19 = getelementptr inbounds i16, i16* %12, i64 %15
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 64512
  %23 = icmp ne i32 %22, 55296
  %24 = icmp eq i64 %18, %13
  %25 = or i1 %24, %23
  br i1 %25, label %37, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds i16, i16* %12, i64 %18
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %29, 64512
  %31 = icmp eq i32 %30, 56320
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = add i64 %15, 2
  %34 = shl nuw nsw i32 %21, 10
  %35 = add nsw i32 %34, -56613888
  %36 = add nsw i32 %35, %29
  br label %37

37:                                               ; preds = %17, %26, %32
  %38 = phi i32 [ %21, %17 ], [ %36, %32 ], [ %21, %26 ]
  %39 = phi i64 [ %18, %17 ], [ %33, %32 ], [ %18, %26 ]
  %40 = tail call i32 @u_getIntPropertyValue_69(i32 %38, i32 4096) #12
  switch i32 %40, label %14 [
    i32 13, label %41
    i32 1, label %41
  ]

41:                                               ; preds = %37, %37, %14
  %42 = phi i1 [ false, %14 ], [ true, %37 ], [ true, %37 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n27WrapStringWithRTLFormattingEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %48, label %14

14:                                               ; preds = %11
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8235)
  %16 = load i8, i8* %3, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = zext i8 %16 to i64
  br label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  %25 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %20, %18
  %28 = phi i64 [ 10, %18 ], [ %24, %20 ]
  %29 = phi i64 [ %19, %18 ], [ %26, %20 ]
  %30 = icmp eq i64 %29, %28
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %28, i64 1, i64 %28, i64 %28, i64 0, i64 0) #12
  %32 = load i8, i8* %3, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %39, label %35

34:                                               ; preds = %27
  br i1 %17, label %39, label %35

35:                                               ; preds = %34, %31
  %36 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %37 = trunc i64 %29 to i8
  %38 = add i8 %37, 1
  store i8 %38, i8* %3, align 1
  br label %44

39:                                               ; preds = %34, %31
  %40 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = add i64 %29, 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %43, align 8
  br label %44

44:                                               ; preds = %35, %39
  %45 = phi i16* [ %36, %35 ], [ %41, %39 ]
  %46 = getelementptr inbounds i16, i16* %45, i64 %29
  store i16 8236, i16* %46, align 2
  %47 = getelementptr inbounds i16, i16* %46, i64 1
  store i16 0, i16* %47, align 2
  br label %48

48:                                               ; preds = %11, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"*, i64, i64, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #13
  unreachable

19:                                               ; preds = %14
  %20 = icmp eq i64 %2, 0
  br i1 %20, label %456, label %21

21:                                               ; preds = %19
  br i1 %8, label %22, label %27

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 9223372036854775807
  %26 = add nsw i64 %25, -1
  br label %27

27:                                               ; preds = %21, %22
  %28 = phi i64 [ %26, %22 ], [ 10, %21 ]
  %29 = sub i64 %28, %15
  %30 = icmp ult i64 %29, %2
  br i1 %30, label %353, label %31

31:                                               ; preds = %27
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %358, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = getelementptr inbounds i16, i16* %42, i64 %2
  %44 = icmp slt i64 %2, 0
  br i1 %44, label %45, label %189

45:                                               ; preds = %41
  %46 = icmp ult i64 %39, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %45
  %48 = add i64 %15, %2
  %49 = getelementptr i16, i16* %38, i64 %48
  %50 = getelementptr i16, i16* %38, i64 %15
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %42, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %39, -16
  %56 = sub i64 %39, %55
  %57 = getelementptr i16, i16* %42, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %42, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !7
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !7
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !10, !noalias !7
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !10, !noalias !7
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %42, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !7
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !7
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !10, !noalias !7
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !10, !noalias !7
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %42, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !7
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !7
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !10, !noalias !7
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !10, !noalias !7
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %42, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !7
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !7
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !10, !noalias !7
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !10, !noalias !7
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !12

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %42, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !7
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !7
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !10, !noalias !7
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !10, !noalias !7
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !14

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %39, %55
  br i1 %135, label %358, label %136

136:                                              ; preds = %134, %47, %45
  %137 = phi i64 [ %39, %47 ], [ %39, %45 ], [ %56, %134 ]
  %138 = phi i16* [ %42, %47 ], [ %42, %45 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %45 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !16

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %358, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %358, label %159, !llvm.loop !17

189:                                              ; preds = %41
  %190 = getelementptr inbounds i16, i16* %38, i64 %15
  %191 = getelementptr inbounds i16, i16* %43, i64 %39
  %192 = icmp ult i64 %39, 16
  br i1 %192, label %300, label %193

193:                                              ; preds = %189
  %194 = xor i64 %1, -1
  %195 = add i64 %15, %194
  %196 = add i64 %15, %2
  %197 = add i64 %196, -1
  %198 = getelementptr i16, i16* %38, i64 %197
  %199 = ptrtoint i16* %198 to i64
  %200 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %195, i64 2)
  %201 = extractvalue { i64, i1 } %200, 0
  %202 = extractvalue { i64, i1 } %200, 1
  %203 = icmp ugt i64 %201, %199
  %204 = or i1 %203, %202
  %205 = add i64 %15, -1
  %206 = getelementptr i16, i16* %38, i64 %205
  %207 = ptrtoint i16* %206 to i64
  %208 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %195, i64 2)
  %209 = extractvalue { i64, i1 } %208, 0
  %210 = extractvalue { i64, i1 } %208, 1
  %211 = icmp ugt i64 %209, %207
  %212 = or i1 %211, %210
  %213 = or i1 %204, %212
  br i1 %213, label %300, label %214

214:                                              ; preds = %193
  %215 = add i64 %2, %1
  %216 = getelementptr i16, i16* %38, i64 %215
  %217 = icmp ult i16* %216, %190
  %218 = icmp ult i16* %42, %191
  %219 = and i1 %217, %218
  br i1 %219, label %300, label %220

220:                                              ; preds = %214
  %221 = and i64 %39, -16
  %222 = sub i64 %39, %221
  %223 = sub i64 0, %221
  %224 = getelementptr i16, i16* %190, i64 %223
  %225 = sub i64 0, %221
  %226 = getelementptr i16, i16* %191, i64 %225
  %227 = add i64 %221, -16
  %228 = lshr exact i64 %227, 4
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %227, 0
  br i1 %231, label %278, label %232

232:                                              ; preds = %220
  %233 = sub nuw nsw i64 %229, %230
  %234 = getelementptr i16, i16* %190, i64 -1
  %235 = getelementptr i16, i16* %191, i64 -1
  %236 = getelementptr i16, i16* %190, i64 -1
  %237 = getelementptr i16, i16* %191, i64 -1
  br label %238

238:                                              ; preds = %238, %232
  %239 = phi i64 [ 0, %232 ], [ %273, %238 ]
  %240 = phi i64 [ %233, %232 ], [ %274, %238 ]
  %241 = sub i64 0, %239
  %242 = sub i64 0, %239
  %243 = getelementptr inbounds i16, i16* %235, i64 %242
  %244 = getelementptr inbounds i16, i16* %234, i64 %241
  %245 = getelementptr inbounds i16, i16* %244, i64 -7
  %246 = bitcast i16* %245 to <8 x i16>*
  %247 = load <8 x i16>, <8 x i16>* %246, align 2, !alias.scope !18
  %248 = getelementptr inbounds i16, i16* %244, i64 -8
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !18
  %252 = getelementptr inbounds i16, i16* %243, i64 -7
  %253 = bitcast i16* %252 to <8 x i16>*
  store <8 x i16> %247, <8 x i16>* %253, align 2, !alias.scope !21, !noalias !18
  %254 = getelementptr inbounds i16, i16* %243, i64 -8
  %255 = getelementptr inbounds i16, i16* %254, i64 -7
  %256 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %256, align 2, !alias.scope !21, !noalias !18
  %257 = sub nuw nsw i64 -16, %239
  %258 = sub nuw nsw i64 -16, %239
  %259 = getelementptr inbounds i16, i16* %237, i64 %258
  %260 = getelementptr inbounds i16, i16* %236, i64 %257
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !18
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !18
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !21, !noalias !18
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !21, !noalias !18
  %273 = add i64 %239, 32
  %274 = add i64 %240, -2
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %238, !llvm.loop !23

276:                                              ; preds = %238
  %277 = sub nuw nsw i64 -32, %239
  br label %278

278:                                              ; preds = %276, %220
  %279 = phi i64 [ 0, %220 ], [ %277, %276 ]
  %280 = icmp eq i64 %230, 0
  br i1 %280, label %298, label %281

281:                                              ; preds = %278
  %282 = getelementptr i16, i16* %190, i64 -1
  %283 = getelementptr i16, i16* %191, i64 -1
  %284 = getelementptr inbounds i16, i16* %283, i64 %279
  %285 = getelementptr inbounds i16, i16* %282, i64 %279
  %286 = getelementptr inbounds i16, i16* %285, i64 -7
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !18
  %289 = getelementptr inbounds i16, i16* %285, i64 -8
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !18
  %293 = getelementptr inbounds i16, i16* %284, i64 -7
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %294, align 2, !alias.scope !21, !noalias !18
  %295 = getelementptr inbounds i16, i16* %284, i64 -8
  %296 = getelementptr inbounds i16, i16* %295, i64 -7
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %297, align 2, !alias.scope !21, !noalias !18
  br label %298

298:                                              ; preds = %278, %281
  %299 = icmp eq i64 %39, %221
  br i1 %299, label %358, label %300

300:                                              ; preds = %298, %214, %193, %189
  %301 = phi i64 [ %39, %214 ], [ %39, %193 ], [ %39, %189 ], [ %222, %298 ]
  %302 = phi i16* [ %190, %214 ], [ %190, %193 ], [ %190, %189 ], [ %224, %298 ]
  %303 = phi i16* [ %191, %214 ], [ %191, %193 ], [ %191, %189 ], [ %226, %298 ]
  %304 = add i64 %301, -1
  %305 = and i64 %301, 7
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %318, label %307

307:                                              ; preds = %300, %307
  %308 = phi i64 [ %315, %307 ], [ %301, %300 ]
  %309 = phi i16* [ %313, %307 ], [ %302, %300 ]
  %310 = phi i16* [ %312, %307 ], [ %303, %300 ]
  %311 = phi i64 [ %316, %307 ], [ %305, %300 ]
  %312 = getelementptr inbounds i16, i16* %310, i64 -1
  %313 = getelementptr inbounds i16, i16* %309, i64 -1
  %314 = load i16, i16* %313, align 2
  store i16 %314, i16* %312, align 2
  %315 = add i64 %308, -1
  %316 = add i64 %311, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %307, !llvm.loop !24

318:                                              ; preds = %307, %300
  %319 = phi i64 [ %301, %300 ], [ %315, %307 ]
  %320 = phi i16* [ %302, %300 ], [ %313, %307 ]
  %321 = phi i16* [ %303, %300 ], [ %312, %307 ]
  %322 = icmp ult i64 %304, 7
  br i1 %322, label %358, label %323

323:                                              ; preds = %318, %323
  %324 = phi i64 [ %351, %323 ], [ %319, %318 ]
  %325 = phi i16* [ %349, %323 ], [ %320, %318 ]
  %326 = phi i16* [ %348, %323 ], [ %321, %318 ]
  %327 = getelementptr inbounds i16, i16* %326, i64 -1
  %328 = getelementptr inbounds i16, i16* %325, i64 -1
  %329 = load i16, i16* %328, align 2
  store i16 %329, i16* %327, align 2
  %330 = getelementptr inbounds i16, i16* %326, i64 -2
  %331 = getelementptr inbounds i16, i16* %325, i64 -2
  %332 = load i16, i16* %331, align 2
  store i16 %332, i16* %330, align 2
  %333 = getelementptr inbounds i16, i16* %326, i64 -3
  %334 = getelementptr inbounds i16, i16* %325, i64 -3
  %335 = load i16, i16* %334, align 2
  store i16 %335, i16* %333, align 2
  %336 = getelementptr inbounds i16, i16* %326, i64 -4
  %337 = getelementptr inbounds i16, i16* %325, i64 -4
  %338 = load i16, i16* %337, align 2
  store i16 %338, i16* %336, align 2
  %339 = getelementptr inbounds i16, i16* %326, i64 -5
  %340 = getelementptr inbounds i16, i16* %325, i64 -5
  %341 = load i16, i16* %340, align 2
  store i16 %341, i16* %339, align 2
  %342 = getelementptr inbounds i16, i16* %326, i64 -6
  %343 = getelementptr inbounds i16, i16* %325, i64 -6
  %344 = load i16, i16* %343, align 2
  store i16 %344, i16* %342, align 2
  %345 = getelementptr inbounds i16, i16* %326, i64 -7
  %346 = getelementptr inbounds i16, i16* %325, i64 -7
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %326, i64 -8
  %349 = getelementptr inbounds i16, i16* %325, i64 -8
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = add i64 %324, -8
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %358, label %323, !llvm.loop !25

353:                                              ; preds = %27
  %354 = add i64 %15, %2
  %355 = sub i64 %354, %28
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %28, i64 %355, i64 %15, i64 %1, i64 0, i64 %2)
  %356 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load i16*, i16** %356, align 8
  br label %358

358:                                              ; preds = %318, %323, %154, %159, %298, %134, %37, %353
  %359 = phi i16* [ %357, %353 ], [ %38, %37 ], [ %38, %134 ], [ %38, %298 ], [ %38, %159 ], [ %38, %154 ], [ %38, %323 ], [ %38, %318 ]
  %360 = getelementptr inbounds i16, i16* %359, i64 %1
  %361 = icmp ult i64 %2, 16
  br i1 %361, label %437, label %362

362:                                              ; preds = %358
  %363 = and i64 %2, -16
  %364 = sub i64 %2, %363
  %365 = getelementptr i16, i16* %360, i64 %363
  %366 = insertelement <8 x i16> undef, i16 %3, i32 0
  %367 = shufflevector <8 x i16> %366, <8 x i16> undef, <8 x i32> zeroinitializer
  %368 = insertelement <8 x i16> undef, i16 %3, i32 0
  %369 = shufflevector <8 x i16> %368, <8 x i16> undef, <8 x i32> zeroinitializer
  %370 = add i64 %363, -16
  %371 = lshr exact i64 %370, 4
  %372 = add nuw nsw i64 %371, 1
  %373 = and i64 %372, 7
  %374 = icmp ult i64 %370, 112
  br i1 %374, label %422, label %375

375:                                              ; preds = %362
  %376 = sub nsw i64 %372, %373
  br label %377

377:                                              ; preds = %377, %375
  %378 = phi i64 [ 0, %375 ], [ %419, %377 ]
  %379 = phi i64 [ %376, %375 ], [ %420, %377 ]
  %380 = getelementptr i16, i16* %360, i64 %378
  %381 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %381, align 2
  %382 = getelementptr i16, i16* %380, i64 8
  %383 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %383, align 2
  %384 = or i64 %378, 16
  %385 = getelementptr i16, i16* %360, i64 %384
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %386, align 2
  %387 = getelementptr i16, i16* %385, i64 8
  %388 = bitcast i16* %387 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %388, align 2
  %389 = or i64 %378, 32
  %390 = getelementptr i16, i16* %360, i64 %389
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %391, align 2
  %392 = getelementptr i16, i16* %390, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %393, align 2
  %394 = or i64 %378, 48
  %395 = getelementptr i16, i16* %360, i64 %394
  %396 = bitcast i16* %395 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %396, align 2
  %397 = getelementptr i16, i16* %395, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %398, align 2
  %399 = or i64 %378, 64
  %400 = getelementptr i16, i16* %360, i64 %399
  %401 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %401, align 2
  %402 = getelementptr i16, i16* %400, i64 8
  %403 = bitcast i16* %402 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %403, align 2
  %404 = or i64 %378, 80
  %405 = getelementptr i16, i16* %360, i64 %404
  %406 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %406, align 2
  %407 = getelementptr i16, i16* %405, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %408, align 2
  %409 = or i64 %378, 96
  %410 = getelementptr i16, i16* %360, i64 %409
  %411 = bitcast i16* %410 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %411, align 2
  %412 = getelementptr i16, i16* %410, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %413, align 2
  %414 = or i64 %378, 112
  %415 = getelementptr i16, i16* %360, i64 %414
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %416, align 2
  %417 = getelementptr i16, i16* %415, i64 8
  %418 = bitcast i16* %417 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %418, align 2
  %419 = add i64 %378, 128
  %420 = add i64 %379, -8
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %377, !llvm.loop !26

422:                                              ; preds = %377, %362
  %423 = phi i64 [ 0, %362 ], [ %419, %377 ]
  %424 = icmp eq i64 %373, 0
  br i1 %424, label %435, label %425

425:                                              ; preds = %422, %425
  %426 = phi i64 [ %432, %425 ], [ %423, %422 ]
  %427 = phi i64 [ %433, %425 ], [ %373, %422 ]
  %428 = getelementptr i16, i16* %360, i64 %426
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %429, align 2
  %430 = getelementptr i16, i16* %428, i64 8
  %431 = bitcast i16* %430 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %431, align 2
  %432 = add i64 %426, 16
  %433 = add i64 %427, -1
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %425, !llvm.loop !27

435:                                              ; preds = %425, %422
  %436 = icmp eq i64 %363, %2
  br i1 %436, label %446, label %437

437:                                              ; preds = %435, %358
  %438 = phi i64 [ %2, %358 ], [ %364, %435 ]
  %439 = phi i16* [ %360, %358 ], [ %365, %435 ]
  br label %440

440:                                              ; preds = %437, %440
  %441 = phi i64 [ %443, %440 ], [ %438, %437 ]
  %442 = phi i16* [ %444, %440 ], [ %439, %437 ]
  store i16 %3, i16* %442, align 2
  %443 = add i64 %441, -1
  %444 = getelementptr inbounds i16, i16* %442, i64 1
  %445 = icmp eq i64 %443, 0
  br i1 %445, label %446, label %440, !llvm.loop !28

446:                                              ; preds = %440, %435
  %447 = add i64 %15, %2
  %448 = load i8, i8* %6, align 1
  %449 = icmp slt i8 %448, 0
  br i1 %449, label %450, label %452

450:                                              ; preds = %446
  %451 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %447, i64* %451, align 8
  br label %454

452:                                              ; preds = %446
  %453 = trunc i64 %447 to i8
  store i8 %453, i8* %6, align 1
  br label %454

454:                                              ; preds = %450, %452
  %455 = getelementptr inbounds i16, i16* %359, i64 %447
  store i16 0, i16* %455, align 2
  br label %456

456:                                              ; preds = %19, %454
  ret %"class.std::__1::basic_string.21"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n27WrapStringWithLTRFormattingEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = zext i8 %4 to i64
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %8, %6 ], [ %10, %9 ]
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %48, label %14

14:                                               ; preds = %11
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8234)
  %16 = load i8, i8* %3, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = zext i8 %16 to i64
  br label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  %25 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %20, %18
  %28 = phi i64 [ 10, %18 ], [ %24, %20 ]
  %29 = phi i64 [ %19, %18 ], [ %26, %20 ]
  %30 = icmp eq i64 %29, %28
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %28, i64 1, i64 %28, i64 %28, i64 0, i64 0) #12
  %32 = load i8, i8* %3, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %39, label %35

34:                                               ; preds = %27
  br i1 %17, label %39, label %35

35:                                               ; preds = %34, %31
  %36 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %37 = trunc i64 %29 to i8
  %38 = add i8 %37, 1
  store i8 %38, i8* %3, align 1
  br label %44

39:                                               ; preds = %34, %31
  %40 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = add i64 %29, 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %43, align 8
  br label %44

44:                                               ; preds = %35, %39
  %45 = phi i16* [ %36, %35 ], [ %41, %39 ]
  %46 = getelementptr inbounds i16, i16* %45, i64 %29
  store i16 8236, i16* %46, align 2
  %47 = getelementptr inbounds i16, i16* %46, i64 1
  store i16 0, i16* %47, align 2
  br label %48

48:                                               ; preds = %11, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n32UnadjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string.21", align 8
  %3 = alloca %"class.std::__1::basic_string.21", align 8
  %4 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %1
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %83, label %16

16:                                               ; preds = %13
  br i1 %7, label %17, label %20

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %16
  %21 = zext i8 %6 to i64
  br label %22

22:                                               ; preds = %20, %17
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %26) #13
  unreachable

27:                                               ; preds = %22
  br i1 %7, label %28, label %33

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  br label %36

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %35 = zext i8 %6 to i64
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %32, %28 ], [ %35, %33 ]
  %38 = phi i16* [ %30, %28 ], [ %34, %33 ]
  %39 = load i16, i16* %38, align 2
  %40 = and i16 %39, -2
  %41 = icmp eq i16 %40, 8206
  %42 = zext i1 %41 to i64
  %43 = add i64 %37, -1
  %44 = icmp eq i64 %37, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %46) #13
  unreachable

47:                                               ; preds = %36
  br i1 %7, label %48, label %51

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i16*, i16** %49, align 8
  br label %53

51:                                               ; preds = %47
  %52 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  br label %53

53:                                               ; preds = %48, %51
  %54 = phi i16* [ %50, %48 ], [ %52, %51 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 %43
  %56 = load i16, i16* %55, align 2
  %57 = and i16 %56, -2
  %58 = icmp eq i16 %57, 8206
  %59 = add i64 %37, -2
  %60 = select i1 %58, i64 %59, i64 %43
  %61 = bitcast %"class.std::__1::basic_string.21"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #12
  %62 = xor i1 %41, true
  %63 = zext i1 %62 to i64
  %64 = add i64 %60, %63
  %65 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::allocator.28"*
  %66 = bitcast %"class.std::__1::basic_string.21"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"* nonnull %2, %"class.std::__1::basic_string.21"* dereferenceable(24) %0, i64 %42, i64 %64, %"class.std::__1::allocator.28"* dereferenceable(1) %65) #12
  %67 = bitcast %"class.std::__1::basic_string.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  call void @_ZN4base4i18n34StripWrappingBidiControlCharactersERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* nonnull sret %3, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %2)
  %68 = load i8, i8* %5, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %53
  %71 = bitcast %"class.std::__1::basic_string.21"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %70, %53
  %74 = bitcast %"class.std::__1::basic_string.21"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %67, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #12
  %75 = bitcast %"class.std::__1::basic_string.21"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %73
  %80 = bitcast %"class.std::__1::basic_string.21"* %2 to i8**
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %73, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  br label %83

83:                                               ; preds = %13, %82
  %84 = phi i1 [ true, %82 ], [ false, %13 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n34StripWrappingBidiControlCharactersERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* noalias sret, %"class.std::__1::basic_string.21"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string.21"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %189

12:                                               ; preds = %2
  br i1 %6, label %16, label %13

13:                                               ; preds = %12
  %14 = bitcast %"class.std::__1::basic_string.21"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string.21"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %212

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = icmp ult i64 %8, 11
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %22 = trunc i64 %8 to i8
  %23 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  store i8 %22, i8* %24, align 1
  br label %42

25:                                               ; preds = %16
  %26 = icmp ugt i64 %8, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #13
  unreachable

29:                                               ; preds = %25
  %30 = add nuw nsw i64 %8, 8
  %31 = and i64 %30, -8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @abort() #13
  unreachable

34:                                               ; preds = %29
  %35 = shl i64 %31, 1
  %36 = tail call i8* @_Znwm(i64 %35) #14
  %37 = bitcast i8* %36 to i16*
  %38 = bitcast %"class.std::__1::basic_string.21"* %0 to i8**
  store i8* %36, i8** %38, align 8
  %39 = or i64 %31, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %41, align 8
  br label %42

42:                                               ; preds = %34, %20
  %43 = phi i16* [ %21, %20 ], [ %37, %34 ]
  %44 = add nuw nsw i64 %8, 1
  %45 = add i64 %8, 1
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %136, label %47

47:                                               ; preds = %42
  %48 = add i64 %8, 1
  %49 = getelementptr i16, i16* %43, i64 %48
  %50 = getelementptr i16, i16* %18, i64 %48
  %51 = icmp ult i16* %43, %50
  %52 = icmp ult i16* %18, %49
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %47
  %55 = and i64 %45, -16
  %56 = sub i64 %44, %55
  %57 = getelementptr i16, i16* %18, i64 %55
  %58 = getelementptr i16, i16* %43, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %18, i64 %67
  %70 = getelementptr i16, i16* %43, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !30
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !30
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !33, !noalias !30
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !33, !noalias !30
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %18, i64 %79
  %81 = getelementptr i16, i16* %43, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !30
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !30
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !33, !noalias !30
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !33, !noalias !30
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %18, i64 %90
  %92 = getelementptr i16, i16* %43, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !30
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !30
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !33, !noalias !30
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !33, !noalias !30
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %18, i64 %101
  %103 = getelementptr i16, i16* %43, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !30
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !30
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !33, !noalias !30
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !33, !noalias !30
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !35

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %18, i64 %119
  %122 = getelementptr i16, i16* %43, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !30
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !30
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !33, !noalias !30
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !33, !noalias !30
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !36

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %45, %55
  br i1 %135, label %212, label %136

136:                                              ; preds = %134, %47, %42
  %137 = phi i64 [ %44, %47 ], [ %44, %42 ], [ %56, %134 ]
  %138 = phi i16* [ %18, %47 ], [ %18, %42 ], [ %57, %134 ]
  %139 = phi i16* [ %43, %47 ], [ %43, %42 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !37

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %212, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %212, label %159, !llvm.loop !38

189:                                              ; preds = %2
  %190 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i16*, i16** %190, align 8
  %192 = bitcast %"class.std::__1::basic_string.21"* %1 to i16*
  %193 = select i1 %6, i16* %191, i16* %192
  %194 = load i16, i16* %193, align 2
  %195 = add i16 %194, -8234
  %196 = icmp ult i16 %195, 5
  br i1 %196, label %197, label %201

197:                                              ; preds = %189
  %198 = sext i16 %195 to i64
  %199 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN4base4i18n34StripWrappingBidiControlCharactersERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE, i64 0, i64 %198
  %200 = load i64, i64* %199, align 8
  br label %201

201:                                              ; preds = %197, %189
  %202 = phi i64 [ 0, %189 ], [ %200, %197 ]
  %203 = add i64 %10, -1
  %204 = getelementptr inbounds i16, i16* %193, i64 %203
  %205 = load i16, i16* %204, align 2
  %206 = icmp eq i16 %205, 8236
  %207 = add i64 %10, -2
  %208 = select i1 %206, i64 %207, i64 %203
  %209 = xor i64 %202, 1
  %210 = add i64 %209, %208
  %211 = bitcast %"class.std::__1::basic_string.21"* %1 to %"class.std::__1::allocator.28"*
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"* %0, %"class.std::__1::basic_string.21"* dereferenceable(24) %1, i64 %202, i64 %210, %"class.std::__1::allocator.28"* dereferenceable(1) %211) #12
  br label %212

212:                                              ; preds = %154, %159, %134, %13, %201
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n37EnsureTerminatedDirectionalFormattingEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"*) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %13 = zext i8 %4 to i64
  br label %14

14:                                               ; preds = %6, %11
  %15 = phi i16* [ %8, %6 ], [ %12, %11 ]
  %16 = phi i64 [ %10, %6 ], [ %13, %11 ]
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %67, label %18

18:                                               ; preds = %14
  %19 = shl nsw i64 %16, 1
  %20 = add i64 %19, -2
  %21 = lshr exact i64 %20, 1
  %22 = add nuw i64 %21, 1
  %23 = and i64 %22, 1
  %24 = icmp eq i64 %20, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = sub nuw i64 %22, %23
  br label %50

27:                                               ; preds = %109, %18
  %28 = phi i32 [ undef, %18 ], [ %110, %109 ]
  %29 = phi i32 [ 0, %18 ], [ %110, %109 ]
  %30 = phi i16* [ %15, %18 ], [ %111, %109 ]
  %31 = icmp eq i64 %23, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %27
  %33 = load i16, i16* %30, align 2
  switch i16 %33, label %36 [
    i16 8234, label %34
    i16 8235, label %34
    i16 8237, label %34
    i16 8238, label %34
  ]

34:                                               ; preds = %32, %32, %32, %32
  %35 = add nsw i32 %29, 1
  br label %42

36:                                               ; preds = %32
  %37 = icmp eq i16 %33, 8236
  %38 = icmp sgt i32 %29, 0
  %39 = and i1 %38, %37
  %40 = zext i1 %39 to i32
  %41 = sub i32 %29, %40
  br label %42

42:                                               ; preds = %36, %34, %27
  %43 = phi i32 [ %28, %27 ], [ %35, %34 ], [ %41, %36 ]
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %47 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %49 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %68

50:                                               ; preds = %109, %25
  %51 = phi i32 [ 0, %25 ], [ %110, %109 ]
  %52 = phi i16* [ %15, %25 ], [ %111, %109 ]
  %53 = phi i64 [ %26, %25 ], [ %112, %109 ]
  %54 = load i16, i16* %52, align 2
  switch i16 %54, label %57 [
    i16 8234, label %55
    i16 8235, label %55
    i16 8237, label %55
    i16 8238, label %55
  ]

55:                                               ; preds = %50, %50, %50, %50
  %56 = add nsw i32 %51, 1
  br label %63

57:                                               ; preds = %50
  %58 = icmp eq i16 %54, 8236
  %59 = icmp sgt i32 %51, 0
  %60 = and i1 %59, %58
  %61 = zext i1 %60 to i32
  %62 = sub i32 %51, %61
  br label %63

63:                                               ; preds = %57, %55
  %64 = phi i32 [ %56, %55 ], [ %62, %57 ]
  %65 = getelementptr inbounds i16, i16* %52, i64 1
  %66 = load i16, i16* %65, align 2
  switch i16 %66, label %103 [
    i16 8234, label %101
    i16 8235, label %101
    i16 8237, label %101
    i16 8238, label %101
  ]

67:                                               ; preds = %93, %14, %42
  ret void

68:                                               ; preds = %99, %45
  %69 = phi i8 [ %4, %45 ], [ %100, %99 ]
  %70 = phi i32 [ 0, %45 ], [ %97, %99 ]
  %71 = icmp slt i8 %69, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = zext i8 %69 to i64
  br label %79

74:                                               ; preds = %68
  %75 = load i64, i64* %46, align 8
  %76 = and i64 %75, 9223372036854775807
  %77 = add nsw i64 %76, -1
  %78 = load i64, i64* %47, align 8
  br label %79

79:                                               ; preds = %74, %72
  %80 = phi i64 [ 10, %72 ], [ %77, %74 ]
  %81 = phi i64 [ %73, %72 ], [ %78, %74 ]
  %82 = icmp eq i64 %81, %80
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %80, i64 1, i64 %80, i64 %80, i64 0, i64 0) #12
  %84 = load i8, i8* %3, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %90, label %87

86:                                               ; preds = %79
  br i1 %71, label %90, label %87

87:                                               ; preds = %86, %83
  %88 = trunc i64 %81 to i8
  %89 = add i8 %88, 1
  store i8 %89, i8* %3, align 1
  br label %93

90:                                               ; preds = %86, %83
  %91 = load i16*, i16** %49, align 8
  %92 = add i64 %81, 1
  store i64 %92, i64* %47, align 8
  br label %93

93:                                               ; preds = %87, %90
  %94 = phi i16* [ %48, %87 ], [ %91, %90 ]
  %95 = getelementptr inbounds i16, i16* %94, i64 %81
  store i16 8236, i16* %95, align 2
  %96 = getelementptr inbounds i16, i16* %95, i64 1
  store i16 0, i16* %96, align 2
  %97 = add nuw nsw i32 %70, 1
  %98 = icmp eq i32 %97, %43
  br i1 %98, label %67, label %99

99:                                               ; preds = %93
  %100 = load i8, i8* %3, align 1
  br label %68

101:                                              ; preds = %63, %63, %63, %63
  %102 = add nsw i32 %64, 1
  br label %109

103:                                              ; preds = %63
  %104 = icmp eq i16 %66, 8236
  %105 = icmp sgt i32 %64, 0
  %106 = and i1 %105, %104
  %107 = zext i1 %106 to i32
  %108 = sub i32 %64, %107
  br label %109

109:                                              ; preds = %103, %101
  %110 = phi i32 [ %102, %101 ], [ %108, %103 ]
  %111 = getelementptr inbounds i16, i16* %52, i64 2
  %112 = add i64 %53, -2
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %27, label %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n26SanitizeUserSuppliedStringEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"*) local_unnamed_addr #0 {
  tail call void @_ZN4base4i18n37EnsureTerminatedDirectionalFormattingEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* %0)
  %2 = tail call zeroext i1 @_ZN4base4i18n30AdjustStringForLocaleDirectionEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* %0)
  ret void
}

declare i32 @u_getIntPropertyValue_69(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n25WrapPathWithLTRFormattingERKNS_8FilePathEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string.21"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.30", align 8
  %4 = alloca %"class.std::__1::basic_string.21", align 8
  %5 = bitcast %"class.std::__1::basic_string.21"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = zext i8 %7 to i64
  br label %18

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 9223372036854775807
  %15 = add nsw i64 %14, -1
  %16 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %11, %9
  %19 = phi i64 [ 10, %9 ], [ %15, %11 ]
  %20 = phi i64 [ %10, %9 ], [ %17, %11 ]
  %21 = icmp eq i64 %20, %19
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %1, i64 %19, i64 1, i64 %19, i64 %19, i64 0, i64 0) #12
  %23 = load i8, i8* %6, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %30, label %26

25:                                               ; preds = %18
  br i1 %8, label %30, label %26

26:                                               ; preds = %25, %22
  %27 = bitcast %"class.std::__1::basic_string.21"* %1 to i16*
  %28 = trunc i64 %20 to i8
  %29 = add i8 %28, 1
  store i8 %29, i8* %6, align 1
  br label %35

30:                                               ; preds = %25, %22
  %31 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = add i64 %20, 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %34, align 8
  br label %35

35:                                               ; preds = %26, %30
  %36 = phi i16* [ %27, %26 ], [ %32, %30 ]
  %37 = getelementptr inbounds i16, i16* %36, i64 %20
  store i16 8234, i16* %37, align 2
  %38 = getelementptr inbounds i16, i16* %37, i64 1
  store i16 0, i16* %38, align 2
  %39 = bitcast %"class.std::__1::basic_string.30"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.std::__1::basic_string.30", %"class.std::__1::basic_string.30"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string.30", %"class.std::__1::basic_string.30"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.base::FilePath"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::basic_string.30"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false)
  %45 = load i8, i8* %43, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.base::FilePath"* %0 to i8*
  %50 = select i1 %46, i8* %48, i8* %49
  %51 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %45 to i64
  %54 = select i1 %46, i64 %52, i64 %53
  call void @_ZN4base17SysNativeMBToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.30"* nonnull sret %3, i8* %50, i64 %54) #12
  %55 = bitcast %"class.std::__1::basic_string.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  %56 = bitcast %"class.std::__1::basic_string.30"* %3 to %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short", %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i32*, i32** %40, align 8
  %61 = bitcast %"class.std::__1::basic_string.30"* %3 to i32*
  %62 = select i1 %59, i32* %60, i32* %61
  %63 = load i64, i64* %41, align 8
  %64 = zext i8 %58 to i64
  %65 = select i1 %59, i64 %63, i64 %64
  call void @_ZN4base11WideToUTF16ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string.21"* nonnull sret %4, i32* %62, i64 %65) #12
  %66 = bitcast %"class.std::__1::basic_string.21"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::basic_string.21"* %4 to i16*
  %75 = zext i8 %68 to i64
  %76 = select i1 %69, i16* %71, i16* %74
  %77 = select i1 %69, i64 %73, i64 %75
  %78 = load i8, i8* %6, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %35
  %81 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 9223372036854775807
  %84 = add nsw i64 %83, -1
  %85 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  br label %89

87:                                               ; preds = %35
  %88 = zext i8 %78 to i64
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i64 [ %84, %80 ], [ 10, %87 ]
  %91 = phi i64 [ %86, %80 ], [ %88, %87 ]
  %92 = sub i64 %90, %91
  %93 = icmp ult i64 %92, %77
  br i1 %93, label %258, label %94

94:                                               ; preds = %89
  %95 = icmp eq i64 %77, 0
  br i1 %95, label %261, label %96

96:                                               ; preds = %94
  br i1 %79, label %97, label %100

97:                                               ; preds = %96
  %98 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i16*, i16** %98, align 8
  br label %102

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::basic_string.21"* %1 to i16*
  br label %102

102:                                              ; preds = %100, %97
  %103 = phi i16* [ %99, %97 ], [ %101, %100 ]
  %104 = getelementptr inbounds i16, i16* %103, i64 %91
  %105 = icmp ult i64 %77, 16
  br i1 %105, label %195, label %106

106:                                              ; preds = %102
  %107 = add i64 %77, %91
  %108 = getelementptr i16, i16* %103, i64 %107
  %109 = getelementptr i16, i16* %76, i64 %77
  %110 = icmp ult i16* %104, %109
  %111 = icmp ult i16* %76, %108
  %112 = and i1 %110, %111
  br i1 %112, label %195, label %113

113:                                              ; preds = %106
  %114 = and i64 %77, -16
  %115 = sub i64 %77, %114
  %116 = getelementptr i16, i16* %76, i64 %114
  %117 = getelementptr i16, i16* %104, i64 %114
  %118 = add i64 %114, -16
  %119 = lshr exact i64 %118, 4
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 48
  br i1 %122, label %174, label %123

123:                                              ; preds = %113
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i16, i16* %76, i64 %126
  %129 = getelementptr i16, i16* %104, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !39
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !39
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !42, !noalias !39
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !42, !noalias !39
  %138 = or i64 %126, 16
  %139 = getelementptr i16, i16* %76, i64 %138
  %140 = getelementptr i16, i16* %104, i64 %138
  %141 = bitcast i16* %139 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !39
  %143 = getelementptr i16, i16* %139, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !39
  %146 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %146, align 2, !alias.scope !42, !noalias !39
  %147 = getelementptr i16, i16* %140, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !42, !noalias !39
  %149 = or i64 %126, 32
  %150 = getelementptr i16, i16* %76, i64 %149
  %151 = getelementptr i16, i16* %104, i64 %149
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !39
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !39
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !42, !noalias !39
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !42, !noalias !39
  %160 = or i64 %126, 48
  %161 = getelementptr i16, i16* %76, i64 %160
  %162 = getelementptr i16, i16* %104, i64 %160
  %163 = bitcast i16* %161 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !39
  %165 = getelementptr i16, i16* %161, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 2, !alias.scope !39
  %168 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %168, align 2, !alias.scope !42, !noalias !39
  %169 = getelementptr i16, i16* %162, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %170, align 2, !alias.scope !42, !noalias !39
  %171 = add i64 %126, 64
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !44

174:                                              ; preds = %125, %113
  %175 = phi i64 [ 0, %113 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i16, i16* %76, i64 %178
  %181 = getelementptr i16, i16* %104, i64 %178
  %182 = bitcast i16* %180 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !39
  %184 = getelementptr i16, i16* %180, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !39
  %187 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %187, align 2, !alias.scope !42, !noalias !39
  %188 = getelementptr i16, i16* %181, i64 8
  %189 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %189, align 2, !alias.scope !42, !noalias !39
  %190 = add i64 %178, 16
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !45

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %77, %114
  br i1 %194, label %248, label %195

195:                                              ; preds = %193, %106, %102
  %196 = phi i64 [ %77, %106 ], [ %77, %102 ], [ %115, %193 ]
  %197 = phi i16* [ %76, %106 ], [ %76, %102 ], [ %116, %193 ]
  %198 = phi i16* [ %104, %106 ], [ %104, %102 ], [ %117, %193 ]
  %199 = add i64 %196, -1
  %200 = and i64 %196, 7
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %213, label %202

202:                                              ; preds = %195, %202
  %203 = phi i64 [ %208, %202 ], [ %196, %195 ]
  %204 = phi i16* [ %210, %202 ], [ %197, %195 ]
  %205 = phi i16* [ %209, %202 ], [ %198, %195 ]
  %206 = phi i64 [ %211, %202 ], [ %200, %195 ]
  %207 = load i16, i16* %204, align 2
  store i16 %207, i16* %205, align 2
  %208 = add i64 %203, -1
  %209 = getelementptr inbounds i16, i16* %205, i64 1
  %210 = getelementptr inbounds i16, i16* %204, i64 1
  %211 = add i64 %206, -1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %202, !llvm.loop !46

213:                                              ; preds = %202, %195
  %214 = phi i64 [ %196, %195 ], [ %208, %202 ]
  %215 = phi i16* [ %197, %195 ], [ %210, %202 ]
  %216 = phi i16* [ %198, %195 ], [ %209, %202 ]
  %217 = icmp ult i64 %199, 7
  br i1 %217, label %248, label %218

218:                                              ; preds = %213, %218
  %219 = phi i64 [ %244, %218 ], [ %214, %213 ]
  %220 = phi i16* [ %246, %218 ], [ %215, %213 ]
  %221 = phi i16* [ %245, %218 ], [ %216, %213 ]
  %222 = load i16, i16* %220, align 2
  store i16 %222, i16* %221, align 2
  %223 = getelementptr inbounds i16, i16* %221, i64 1
  %224 = getelementptr inbounds i16, i16* %220, i64 1
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %221, i64 2
  %227 = getelementptr inbounds i16, i16* %220, i64 2
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = getelementptr inbounds i16, i16* %221, i64 3
  %230 = getelementptr inbounds i16, i16* %220, i64 3
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = getelementptr inbounds i16, i16* %221, i64 4
  %233 = getelementptr inbounds i16, i16* %220, i64 4
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %221, i64 5
  %236 = getelementptr inbounds i16, i16* %220, i64 5
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %221, i64 6
  %239 = getelementptr inbounds i16, i16* %220, i64 6
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %221, i64 7
  %242 = getelementptr inbounds i16, i16* %220, i64 7
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = add i64 %219, -8
  %245 = getelementptr inbounds i16, i16* %221, i64 8
  %246 = getelementptr inbounds i16, i16* %220, i64 8
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %248, label %218, !llvm.loop !47

248:                                              ; preds = %213, %218, %193
  %249 = add i64 %91, %77
  %250 = load i8, i8* %6, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %249, i64* %253, align 8
  br label %256

254:                                              ; preds = %248
  %255 = trunc i64 %249 to i8
  store i8 %255, i8* %6, align 1
  br label %256

256:                                              ; preds = %254, %252
  %257 = getelementptr inbounds i16, i16* %103, i64 %249
  store i16 0, i16* %257, align 2
  br label %261

258:                                              ; preds = %89
  %259 = add i64 %91, %77
  %260 = sub i64 %259, %90
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.21"* %1, i64 %90, i64 %260, i64 %91, i64 %91, i64 0, i64 %77, i16* %76) #12
  br label %261

261:                                              ; preds = %94, %256, %258
  %262 = load i8, i8* %67, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %261
  %265 = bitcast %"class.std::__1::basic_string.21"* %4 to i8**
  %266 = load i8*, i8** %265, align 8
  call void @_ZdlPv(i8* %266) #14
  br label %267

267:                                              ; preds = %261, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  %268 = load i8, i8* %6, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = zext i8 %268 to i64
  br label %279

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %274 = load i64, i64* %273, align 8
  %275 = and i64 %274, 9223372036854775807
  %276 = add nsw i64 %275, -1
  %277 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %278 = load i64, i64* %277, align 8
  br label %279

279:                                              ; preds = %272, %270
  %280 = phi i64 [ 10, %270 ], [ %276, %272 ]
  %281 = phi i64 [ %271, %270 ], [ %278, %272 ]
  %282 = icmp eq i64 %281, %280
  br i1 %282, label %283, label %286

283:                                              ; preds = %279
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %1, i64 %280, i64 1, i64 %280, i64 %280, i64 0, i64 0) #12
  %284 = load i8, i8* %6, align 1
  %285 = icmp slt i8 %284, 0
  br i1 %285, label %291, label %287

286:                                              ; preds = %279
  br i1 %269, label %291, label %287

287:                                              ; preds = %286, %283
  %288 = bitcast %"class.std::__1::basic_string.21"* %1 to i16*
  %289 = trunc i64 %281 to i8
  %290 = add i8 %289, 1
  store i8 %290, i8* %6, align 1
  br label %296

291:                                              ; preds = %286, %283
  %292 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load i16*, i16** %292, align 8
  %294 = add i64 %281, 1
  %295 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %294, i64* %295, align 8
  br label %296

296:                                              ; preds = %287, %291
  %297 = phi i16* [ %288, %287 ], [ %293, %291 ]
  %298 = getelementptr inbounds i16, i16* %297, i64 %281
  store i16 8236, i16* %298, align 2
  %299 = getelementptr inbounds i16, i16* %298, i64 1
  store i16 0, i16* %299, align 2
  %300 = load i8, i8* %57, align 1
  %301 = icmp slt i8 %300, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %296
  %303 = bitcast %"class.std::__1::basic_string.30"* %3 to i8**
  %304 = load i8*, i8** %303, align 8
  call void @_ZdlPv(i8* %304) #14
  br label %305

305:                                              ; preds = %296, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  ret void
}

declare void @_ZN4base17SysNativeMBToWideENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.30"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11WideToUTF16ENS_16BasicStringPieceIwNSt3__111char_traitsIwEEEE(%"class.std::__1::basic_string.21"* sret, i32*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n35GetDisplayStringInLTRDirectionalityERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.std::__1::basic_string.21"* noalias sret, %"class.std::__1::basic_string.21"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = load i32, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = tail call dereferenceable(224) %"class.icu_69::Locale"* @_ZN6icu_696Locale10getDefaultEv() #12
  %7 = getelementptr inbounds %"class.icu_69::Locale", %"class.icu_69::Locale"* %6, i64 0, i32 7
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 @_ZN4base4i18n34GetTextDirectionForLocaleInStartUpEPKc(i8* %8) #12
  store i32 %9, i32* @_ZN4base4i18nL20g_icu_text_directionE, align 4
  br label %10

10:                                               ; preds = %2, %5
  %11 = phi i32 [ %9, %5 ], [ %3, %2 ]
  %12 = icmp eq i32 %11, 1
  %13 = bitcast %"class.std::__1::basic_string.21"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %12, label %53, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::basic_string.21"* %1 to i16*
  %23 = zext i8 %16 to i64
  %24 = select i1 %17, i16* %19, i16* %22
  %25 = select i1 %17, i64 %21, i64 %23
  br label %26

26:                                               ; preds = %49, %14
  %27 = phi i64 [ 0, %14 ], [ %51, %49 ]
  %28 = icmp ult i64 %27, %25
  br i1 %28, label %29, label %276

29:                                               ; preds = %26
  %30 = add nuw i64 %27, 1
  %31 = getelementptr inbounds i16, i16* %24, i64 %27
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = and i32 %33, 64512
  %35 = icmp ne i32 %34, 55296
  %36 = icmp eq i64 %30, %25
  %37 = or i1 %36, %35
  br i1 %37, label %49, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds i16, i16* %24, i64 %30
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %41, 64512
  %43 = icmp eq i32 %42, 56320
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = add i64 %27, 2
  %46 = shl nuw nsw i32 %33, 10
  %47 = add nsw i32 %46, -56613888
  %48 = add nsw i32 %47, %41
  br label %49

49:                                               ; preds = %44, %38, %29
  %50 = phi i32 [ %33, %29 ], [ %48, %44 ], [ %33, %38 ]
  %51 = phi i64 [ %30, %29 ], [ %45, %44 ], [ %30, %38 ]
  %52 = tail call fastcc i32 @_ZN12_GLOBAL__N_121GetCharacterDirectionEi(i32 %50) #12
  switch i32 %52, label %276 [
    i32 0, label %26
    i32 1, label %53
  ]

53:                                               ; preds = %49, %10
  %54 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %58 = bitcast %"class.std::__1::basic_string.21"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 -86, i64 24, i1 false)
  %59 = load i8, i8* %57, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %53
  %62 = bitcast %"class.std::__1::basic_string.21"* %0 to i8*
  %63 = bitcast %"class.std::__1::basic_string.21"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #12
  br label %237

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i16*, i16** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %68, 11
  br i1 %69, label %70, label %75

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %72 = trunc i64 %68 to i8
  %73 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  store i8 %72, i8* %74, align 1
  br label %90

75:                                               ; preds = %64
  %76 = icmp ugt i64 %68, 9223372036854775791
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %78) #13
  unreachable

79:                                               ; preds = %75
  %80 = add nuw nsw i64 %68, 8
  %81 = and i64 %80, -8
  %82 = icmp slt i64 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  tail call void @abort() #13
  unreachable

84:                                               ; preds = %79
  %85 = shl i64 %81, 1
  %86 = tail call i8* @_Znwm(i64 %85) #14
  %87 = bitcast i8* %86 to i16*
  %88 = bitcast %"class.std::__1::basic_string.21"* %0 to i8**
  store i8* %86, i8** %88, align 8
  %89 = or i64 %81, -9223372036854775808
  store i64 %89, i64* %56, align 8
  store i64 %68, i64* %55, align 8
  br label %90

90:                                               ; preds = %84, %70
  %91 = phi i16* [ %71, %70 ], [ %87, %84 ]
  %92 = add nuw nsw i64 %68, 1
  %93 = add i64 %68, 1
  %94 = icmp ult i64 %93, 16
  br i1 %94, label %184, label %95

95:                                               ; preds = %90
  %96 = add i64 %68, 1
  %97 = getelementptr i16, i16* %91, i64 %96
  %98 = getelementptr i16, i16* %66, i64 %96
  %99 = icmp ult i16* %91, %98
  %100 = icmp ult i16* %66, %97
  %101 = and i1 %99, %100
  br i1 %101, label %184, label %102

102:                                              ; preds = %95
  %103 = and i64 %93, -16
  %104 = sub i64 %92, %103
  %105 = getelementptr i16, i16* %66, i64 %103
  %106 = getelementptr i16, i16* %91, i64 %103
  %107 = add i64 %103, -16
  %108 = lshr exact i64 %107, 4
  %109 = add nuw nsw i64 %108, 1
  %110 = and i64 %109, 3
  %111 = icmp ult i64 %107, 48
  br i1 %111, label %163, label %112

112:                                              ; preds = %102
  %113 = sub nsw i64 %109, %110
  br label %114

114:                                              ; preds = %114, %112
  %115 = phi i64 [ 0, %112 ], [ %160, %114 ]
  %116 = phi i64 [ %113, %112 ], [ %161, %114 ]
  %117 = getelementptr i16, i16* %66, i64 %115
  %118 = getelementptr i16, i16* %91, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !48
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !48
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !51, !noalias !48
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !51, !noalias !48
  %127 = or i64 %115, 16
  %128 = getelementptr i16, i16* %66, i64 %127
  %129 = getelementptr i16, i16* %91, i64 %127
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !48
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !48
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !51, !noalias !48
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !51, !noalias !48
  %138 = or i64 %115, 32
  %139 = getelementptr i16, i16* %66, i64 %138
  %140 = getelementptr i16, i16* %91, i64 %138
  %141 = bitcast i16* %139 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !48
  %143 = getelementptr i16, i16* %139, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !48
  %146 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %146, align 2, !alias.scope !51, !noalias !48
  %147 = getelementptr i16, i16* %140, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !51, !noalias !48
  %149 = or i64 %115, 48
  %150 = getelementptr i16, i16* %66, i64 %149
  %151 = getelementptr i16, i16* %91, i64 %149
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !48
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !48
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !51, !noalias !48
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !51, !noalias !48
  %160 = add i64 %115, 64
  %161 = add i64 %116, -4
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %114, !llvm.loop !53

163:                                              ; preds = %114, %102
  %164 = phi i64 [ 0, %102 ], [ %160, %114 ]
  %165 = icmp eq i64 %110, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %163, %166
  %167 = phi i64 [ %179, %166 ], [ %164, %163 ]
  %168 = phi i64 [ %180, %166 ], [ %110, %163 ]
  %169 = getelementptr i16, i16* %66, i64 %167
  %170 = getelementptr i16, i16* %91, i64 %167
  %171 = bitcast i16* %169 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !48
  %173 = getelementptr i16, i16* %169, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !48
  %176 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %176, align 2, !alias.scope !51, !noalias !48
  %177 = getelementptr i16, i16* %170, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %178, align 2, !alias.scope !51, !noalias !48
  %179 = add i64 %167, 16
  %180 = add i64 %168, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %166, !llvm.loop !54

182:                                              ; preds = %166, %163
  %183 = icmp eq i64 %93, %103
  br i1 %183, label %237, label %184

184:                                              ; preds = %182, %95, %90
  %185 = phi i64 [ %92, %95 ], [ %92, %90 ], [ %104, %182 ]
  %186 = phi i16* [ %66, %95 ], [ %66, %90 ], [ %105, %182 ]
  %187 = phi i16* [ %91, %95 ], [ %91, %90 ], [ %106, %182 ]
  %188 = add i64 %185, -1
  %189 = and i64 %185, 7
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %202, label %191

191:                                              ; preds = %184, %191
  %192 = phi i64 [ %197, %191 ], [ %185, %184 ]
  %193 = phi i16* [ %199, %191 ], [ %186, %184 ]
  %194 = phi i16* [ %198, %191 ], [ %187, %184 ]
  %195 = phi i64 [ %200, %191 ], [ %189, %184 ]
  %196 = load i16, i16* %193, align 2
  store i16 %196, i16* %194, align 2
  %197 = add i64 %192, -1
  %198 = getelementptr inbounds i16, i16* %194, i64 1
  %199 = getelementptr inbounds i16, i16* %193, i64 1
  %200 = add i64 %195, -1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %191, !llvm.loop !55

202:                                              ; preds = %191, %184
  %203 = phi i64 [ %185, %184 ], [ %197, %191 ]
  %204 = phi i16* [ %186, %184 ], [ %199, %191 ]
  %205 = phi i16* [ %187, %184 ], [ %198, %191 ]
  %206 = icmp ult i64 %188, 7
  br i1 %206, label %237, label %207

207:                                              ; preds = %202, %207
  %208 = phi i64 [ %233, %207 ], [ %203, %202 ]
  %209 = phi i16* [ %235, %207 ], [ %204, %202 ]
  %210 = phi i16* [ %234, %207 ], [ %205, %202 ]
  %211 = load i16, i16* %209, align 2
  store i16 %211, i16* %210, align 2
  %212 = getelementptr inbounds i16, i16* %210, i64 1
  %213 = getelementptr inbounds i16, i16* %209, i64 1
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %210, i64 2
  %216 = getelementptr inbounds i16, i16* %209, i64 2
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %210, i64 3
  %219 = getelementptr inbounds i16, i16* %209, i64 3
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = getelementptr inbounds i16, i16* %210, i64 4
  %222 = getelementptr inbounds i16, i16* %209, i64 4
  %223 = load i16, i16* %222, align 2
  store i16 %223, i16* %221, align 2
  %224 = getelementptr inbounds i16, i16* %210, i64 5
  %225 = getelementptr inbounds i16, i16* %209, i64 5
  %226 = load i16, i16* %225, align 2
  store i16 %226, i16* %224, align 2
  %227 = getelementptr inbounds i16, i16* %210, i64 6
  %228 = getelementptr inbounds i16, i16* %209, i64 6
  %229 = load i16, i16* %228, align 2
  store i16 %229, i16* %227, align 2
  %230 = getelementptr inbounds i16, i16* %210, i64 7
  %231 = getelementptr inbounds i16, i16* %209, i64 7
  %232 = load i16, i16* %231, align 2
  store i16 %232, i16* %230, align 2
  %233 = add i64 %208, -8
  %234 = getelementptr inbounds i16, i16* %210, i64 8
  %235 = getelementptr inbounds i16, i16* %209, i64 8
  %236 = icmp eq i64 %233, 0
  br i1 %236, label %237, label %207, !llvm.loop !56

237:                                              ; preds = %202, %207, %182, %61
  %238 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %238, i64 0, i32 1, i32 1
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  %242 = load i64, i64* %55, align 8
  %243 = zext i8 %240 to i64
  %244 = select i1 %241, i64 %242, i64 %243
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %455, label %246

246:                                              ; preds = %237
  %247 = tail call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmmDs(%"class.std::__1::basic_string.21"* %0, i64 0, i64 1, i16 zeroext 8234) #12
  %248 = load i8, i8* %239, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  %251 = zext i8 %248 to i64
  br label %257

252:                                              ; preds = %246
  %253 = load i64, i64* %56, align 8
  %254 = and i64 %253, 9223372036854775807
  %255 = add nsw i64 %254, -1
  %256 = load i64, i64* %55, align 8
  br label %257

257:                                              ; preds = %252, %250
  %258 = phi i64 [ 10, %250 ], [ %255, %252 ]
  %259 = phi i64 [ %251, %250 ], [ %256, %252 ]
  %260 = icmp eq i64 %259, %258
  br i1 %260, label %261, label %264

261:                                              ; preds = %257
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"* %0, i64 %258, i64 1, i64 %258, i64 %258, i64 0, i64 0) #12
  %262 = load i8, i8* %239, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %269, label %265

264:                                              ; preds = %257
  br i1 %249, label %269, label %265

265:                                              ; preds = %264, %261
  %266 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %267 = trunc i64 %259 to i8
  %268 = add i8 %267, 1
  store i8 %268, i8* %239, align 1
  br label %272

269:                                              ; preds = %264, %261
  %270 = load i16*, i16** %54, align 8
  %271 = add i64 %259, 1
  store i64 %271, i64* %55, align 8
  br label %272

272:                                              ; preds = %269, %265
  %273 = phi i16* [ %266, %265 ], [ %270, %269 ]
  %274 = getelementptr inbounds i16, i16* %273, i64 %259
  store i16 8236, i16* %274, align 2
  %275 = getelementptr inbounds i16, i16* %274, i64 1
  store i16 0, i16* %275, align 2
  br label %455

276:                                              ; preds = %49, %26
  %277 = load i8, i8* %15, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %282, label %279

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::basic_string.21"* %0 to i8*
  %281 = bitcast %"class.std::__1::basic_string.21"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 24, i1 false) #12
  br label %455

282:                                              ; preds = %276
  %283 = load i16*, i16** %18, align 8
  %284 = load i64, i64* %20, align 8
  %285 = icmp ult i64 %284, 11
  br i1 %285, label %286, label %291

286:                                              ; preds = %282
  %287 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %288 = trunc i64 %284 to i8
  %289 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %289, i64 0, i32 1, i32 1
  store i8 %288, i8* %290, align 1
  br label %308

291:                                              ; preds = %282
  %292 = icmp ugt i64 %284, 9223372036854775791
  br i1 %292, label %293, label %295

293:                                              ; preds = %291
  %294 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %294) #13
  unreachable

295:                                              ; preds = %291
  %296 = add nuw nsw i64 %284, 8
  %297 = and i64 %296, -8
  %298 = icmp slt i64 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %295
  tail call void @abort() #13
  unreachable

300:                                              ; preds = %295
  %301 = shl i64 %297, 1
  %302 = tail call i8* @_Znwm(i64 %301) #14
  %303 = bitcast i8* %302 to i16*
  %304 = bitcast %"class.std::__1::basic_string.21"* %0 to i8**
  store i8* %302, i8** %304, align 8
  %305 = or i64 %297, -9223372036854775808
  %306 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %284, i64* %307, align 8
  br label %308

308:                                              ; preds = %300, %286
  %309 = phi i16* [ %287, %286 ], [ %303, %300 ]
  %310 = add nuw nsw i64 %284, 1
  %311 = add i64 %284, 1
  %312 = icmp ult i64 %311, 16
  br i1 %312, label %402, label %313

313:                                              ; preds = %308
  %314 = add i64 %284, 1
  %315 = getelementptr i16, i16* %309, i64 %314
  %316 = getelementptr i16, i16* %283, i64 %314
  %317 = icmp ult i16* %309, %316
  %318 = icmp ult i16* %283, %315
  %319 = and i1 %317, %318
  br i1 %319, label %402, label %320

320:                                              ; preds = %313
  %321 = and i64 %311, -16
  %322 = sub i64 %310, %321
  %323 = getelementptr i16, i16* %283, i64 %321
  %324 = getelementptr i16, i16* %309, i64 %321
  %325 = add i64 %321, -16
  %326 = lshr exact i64 %325, 4
  %327 = add nuw nsw i64 %326, 1
  %328 = and i64 %327, 3
  %329 = icmp ult i64 %325, 48
  br i1 %329, label %381, label %330

330:                                              ; preds = %320
  %331 = sub nsw i64 %327, %328
  br label %332

332:                                              ; preds = %332, %330
  %333 = phi i64 [ 0, %330 ], [ %378, %332 ]
  %334 = phi i64 [ %331, %330 ], [ %379, %332 ]
  %335 = getelementptr i16, i16* %283, i64 %333
  %336 = getelementptr i16, i16* %309, i64 %333
  %337 = bitcast i16* %335 to <8 x i16>*
  %338 = load <8 x i16>, <8 x i16>* %337, align 2, !alias.scope !57
  %339 = getelementptr i16, i16* %335, i64 8
  %340 = bitcast i16* %339 to <8 x i16>*
  %341 = load <8 x i16>, <8 x i16>* %340, align 2, !alias.scope !57
  %342 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %338, <8 x i16>* %342, align 2, !alias.scope !60, !noalias !57
  %343 = getelementptr i16, i16* %336, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  store <8 x i16> %341, <8 x i16>* %344, align 2, !alias.scope !60, !noalias !57
  %345 = or i64 %333, 16
  %346 = getelementptr i16, i16* %283, i64 %345
  %347 = getelementptr i16, i16* %309, i64 %345
  %348 = bitcast i16* %346 to <8 x i16>*
  %349 = load <8 x i16>, <8 x i16>* %348, align 2, !alias.scope !57
  %350 = getelementptr i16, i16* %346, i64 8
  %351 = bitcast i16* %350 to <8 x i16>*
  %352 = load <8 x i16>, <8 x i16>* %351, align 2, !alias.scope !57
  %353 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %349, <8 x i16>* %353, align 2, !alias.scope !60, !noalias !57
  %354 = getelementptr i16, i16* %347, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  store <8 x i16> %352, <8 x i16>* %355, align 2, !alias.scope !60, !noalias !57
  %356 = or i64 %333, 32
  %357 = getelementptr i16, i16* %283, i64 %356
  %358 = getelementptr i16, i16* %309, i64 %356
  %359 = bitcast i16* %357 to <8 x i16>*
  %360 = load <8 x i16>, <8 x i16>* %359, align 2, !alias.scope !57
  %361 = getelementptr i16, i16* %357, i64 8
  %362 = bitcast i16* %361 to <8 x i16>*
  %363 = load <8 x i16>, <8 x i16>* %362, align 2, !alias.scope !57
  %364 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %360, <8 x i16>* %364, align 2, !alias.scope !60, !noalias !57
  %365 = getelementptr i16, i16* %358, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  store <8 x i16> %363, <8 x i16>* %366, align 2, !alias.scope !60, !noalias !57
  %367 = or i64 %333, 48
  %368 = getelementptr i16, i16* %283, i64 %367
  %369 = getelementptr i16, i16* %309, i64 %367
  %370 = bitcast i16* %368 to <8 x i16>*
  %371 = load <8 x i16>, <8 x i16>* %370, align 2, !alias.scope !57
  %372 = getelementptr i16, i16* %368, i64 8
  %373 = bitcast i16* %372 to <8 x i16>*
  %374 = load <8 x i16>, <8 x i16>* %373, align 2, !alias.scope !57
  %375 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %371, <8 x i16>* %375, align 2, !alias.scope !60, !noalias !57
  %376 = getelementptr i16, i16* %369, i64 8
  %377 = bitcast i16* %376 to <8 x i16>*
  store <8 x i16> %374, <8 x i16>* %377, align 2, !alias.scope !60, !noalias !57
  %378 = add i64 %333, 64
  %379 = add i64 %334, -4
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %332, !llvm.loop !62

381:                                              ; preds = %332, %320
  %382 = phi i64 [ 0, %320 ], [ %378, %332 ]
  %383 = icmp eq i64 %328, 0
  br i1 %383, label %400, label %384

384:                                              ; preds = %381, %384
  %385 = phi i64 [ %397, %384 ], [ %382, %381 ]
  %386 = phi i64 [ %398, %384 ], [ %328, %381 ]
  %387 = getelementptr i16, i16* %283, i64 %385
  %388 = getelementptr i16, i16* %309, i64 %385
  %389 = bitcast i16* %387 to <8 x i16>*
  %390 = load <8 x i16>, <8 x i16>* %389, align 2, !alias.scope !57
  %391 = getelementptr i16, i16* %387, i64 8
  %392 = bitcast i16* %391 to <8 x i16>*
  %393 = load <8 x i16>, <8 x i16>* %392, align 2, !alias.scope !57
  %394 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %390, <8 x i16>* %394, align 2, !alias.scope !60, !noalias !57
  %395 = getelementptr i16, i16* %388, i64 8
  %396 = bitcast i16* %395 to <8 x i16>*
  store <8 x i16> %393, <8 x i16>* %396, align 2, !alias.scope !60, !noalias !57
  %397 = add i64 %385, 16
  %398 = add i64 %386, -1
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %400, label %384, !llvm.loop !63

400:                                              ; preds = %384, %381
  %401 = icmp eq i64 %311, %321
  br i1 %401, label %455, label %402

402:                                              ; preds = %400, %313, %308
  %403 = phi i64 [ %310, %313 ], [ %310, %308 ], [ %322, %400 ]
  %404 = phi i16* [ %283, %313 ], [ %283, %308 ], [ %323, %400 ]
  %405 = phi i16* [ %309, %313 ], [ %309, %308 ], [ %324, %400 ]
  %406 = add i64 %403, -1
  %407 = and i64 %403, 7
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %420, label %409

409:                                              ; preds = %402, %409
  %410 = phi i64 [ %415, %409 ], [ %403, %402 ]
  %411 = phi i16* [ %417, %409 ], [ %404, %402 ]
  %412 = phi i16* [ %416, %409 ], [ %405, %402 ]
  %413 = phi i64 [ %418, %409 ], [ %407, %402 ]
  %414 = load i16, i16* %411, align 2
  store i16 %414, i16* %412, align 2
  %415 = add i64 %410, -1
  %416 = getelementptr inbounds i16, i16* %412, i64 1
  %417 = getelementptr inbounds i16, i16* %411, i64 1
  %418 = add i64 %413, -1
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %409, !llvm.loop !64

420:                                              ; preds = %409, %402
  %421 = phi i64 [ %403, %402 ], [ %415, %409 ]
  %422 = phi i16* [ %404, %402 ], [ %417, %409 ]
  %423 = phi i16* [ %405, %402 ], [ %416, %409 ]
  %424 = icmp ult i64 %406, 7
  br i1 %424, label %455, label %425

425:                                              ; preds = %420, %425
  %426 = phi i64 [ %451, %425 ], [ %421, %420 ]
  %427 = phi i16* [ %453, %425 ], [ %422, %420 ]
  %428 = phi i16* [ %452, %425 ], [ %423, %420 ]
  %429 = load i16, i16* %427, align 2
  store i16 %429, i16* %428, align 2
  %430 = getelementptr inbounds i16, i16* %428, i64 1
  %431 = getelementptr inbounds i16, i16* %427, i64 1
  %432 = load i16, i16* %431, align 2
  store i16 %432, i16* %430, align 2
  %433 = getelementptr inbounds i16, i16* %428, i64 2
  %434 = getelementptr inbounds i16, i16* %427, i64 2
  %435 = load i16, i16* %434, align 2
  store i16 %435, i16* %433, align 2
  %436 = getelementptr inbounds i16, i16* %428, i64 3
  %437 = getelementptr inbounds i16, i16* %427, i64 3
  %438 = load i16, i16* %437, align 2
  store i16 %438, i16* %436, align 2
  %439 = getelementptr inbounds i16, i16* %428, i64 4
  %440 = getelementptr inbounds i16, i16* %427, i64 4
  %441 = load i16, i16* %440, align 2
  store i16 %441, i16* %439, align 2
  %442 = getelementptr inbounds i16, i16* %428, i64 5
  %443 = getelementptr inbounds i16, i16* %427, i64 5
  %444 = load i16, i16* %443, align 2
  store i16 %444, i16* %442, align 2
  %445 = getelementptr inbounds i16, i16* %428, i64 6
  %446 = getelementptr inbounds i16, i16* %427, i64 6
  %447 = load i16, i16* %446, align 2
  store i16 %447, i16* %445, align 2
  %448 = getelementptr inbounds i16, i16* %428, i64 7
  %449 = getelementptr inbounds i16, i16* %427, i64 7
  %450 = load i16, i16* %449, align 2
  store i16 %450, i16* %448, align 2
  %451 = add i64 %426, -8
  %452 = getelementptr inbounds i16, i16* %428, i64 8
  %453 = getelementptr inbounds i16, i16* %427, i64 8
  %454 = icmp eq i64 %451, 0
  br i1 %454, label %455, label %425, !llvm.loop !65

455:                                              ; preds = %420, %425, %400, %279, %272, %237
  ret void
}

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertENS_11__wrap_iterIPKcEEc(%"class.std::__1::basic_string"*, i8*, i8 signext) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNKSt3__16__lessIA3_cN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEclERKS6_RA3_Kc(%"struct.std::__1::__less"*, %"class.base::BasicStringPiece"* dereferenceable(16), [3 x i8]* dereferenceable(3)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0
  %10 = icmp eq [3 x i8]* %2, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @strlen(i8* nonnull %9) #12
  br label %16

13:                                               ; preds = %3
  %14 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi i64 [ 0, %13 ], [ %12, %11 ]
  %18 = icmp ugt i64 %8, %17
  %19 = select i1 %18, i64 %17, i64 %8
  %20 = call i32 @memcmp(i8* %6, i8* %9, i64 %19) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = icmp eq i64 %8, %17
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %8, %17
  %26 = select i1 %25, i32 -1, i32 1
  br label %27

27:                                               ; preds = %16, %22, %24
  %28 = phi i32 [ %26, %24 ], [ %20, %16 ], [ 0, %22 ]
  %29 = icmp slt i32 %28, 0
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNKSt3__16__lessIA3_cN4base16BasicStringPieceIcNS_11char_traitsIcEEEEEclERA3_KcRKS6_(%"struct.std::__1::__less"*, [3 x i8]* dereferenceable(3), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 0
  %6 = icmp eq [3 x i8]* %1, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @strlen(i8* nonnull %5) #12
  br label %12

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #12
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  br label %12

12:                                               ; preds = %7, %9
  %13 = phi i64 [ 0, %9 ], [ %8, %7 ]
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %13, %17
  %19 = select i1 %18, i64 %17, i64 %13
  %20 = call i32 @memcmp(i8* %5, i8* %15, i64 %19) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %12
  %23 = icmp eq i64 %13, %17
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = icmp ult i64 %13, %17
  %26 = select i1 %25, i32 -1, i32 1
  br label %27

27:                                               ; preds = %12, %22, %24
  %28 = phi i32 [ %26, %24 ], [ %20, %12 ], [ 0, %22 ]
  %29 = icmp slt i32 %28, 0
  ret i1 %29
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.21"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #14
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !66
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !66
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !69, !noalias !66
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !69, !noalias !66
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !66
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !66
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !69, !noalias !66
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !69, !noalias !66
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !66
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !66
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !69, !noalias !66
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !69, !noalias !66
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !66
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !66
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !69, !noalias !66
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !69, !noalias !66
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !71

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !66
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !66
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !69, !noalias !66
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !69, !noalias !66
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !72

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !73

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !74

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !75
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !75
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !78, !noalias !75
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !78, !noalias !75
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !75
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !75
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !78, !noalias !75
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !78, !noalias !75
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !75
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !75
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !78, !noalias !75
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !78, !noalias !75
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !75
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !75
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !78, !noalias !75
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !78, !noalias !75
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !80

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !75
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !75
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !78, !noalias !75
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !78, !noalias !75
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !81

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !82

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !83

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #14
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.21"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string.21"*, %"class.std::__1::basic_string.21"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.28"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string.21"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #13
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.21"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #13
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #13
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #14
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string.21"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !84
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !84
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !87, !noalias !84
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !87, !noalias !84
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !84
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !84
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !87, !noalias !84
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !87, !noalias !84
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !84
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !84
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !87, !noalias !84
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !87, !noalias !84
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !84
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !84
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !87, !noalias !84
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !87, !noalias !84
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !89

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !84
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !84
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !87, !noalias !84
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !87, !noalias !84
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !90

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !91

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !92

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.21"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.21"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.21"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.21"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !93
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !93
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !96, !noalias !93
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !96, !noalias !93
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !93
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !93
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !96, !noalias !93
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !96, !noalias !93
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !93
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !93
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !96, !noalias !93
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !96, !noalias !93
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !93
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !93
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !96, !noalias !93
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !96, !noalias !93
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !98

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !93
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !93
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !96, !noalias !93
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !96, !noalias !93
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !99

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !100

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !101

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !102

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !103

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !104

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !105
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !105
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !108, !noalias !105
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !108, !noalias !105
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !105
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !105
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !108, !noalias !105
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !108, !noalias !105
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !105
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !105
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !108, !noalias !105
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !108, !noalias !105
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !105
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !105
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !108, !noalias !105
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !108, !noalias !105
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !110

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !105
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !105
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !108, !noalias !105
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !108, !noalias !105
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !111

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !112

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !113

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.21"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EES6_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EES6_OS9_"}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !13}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !13}
!24 = distinct !{!24, !15}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13}
!27 = distinct !{!27, !15}
!28 = distinct !{!28, !29, !13}
!29 = !{!"llvm.loop.unroll.runtime.disable"}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !15}
!37 = distinct !{!37, !15}
!38 = distinct !{!38, !13}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !13}
!45 = distinct !{!45, !15}
!46 = distinct !{!46, !15}
!47 = distinct !{!47, !13}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !13}
!54 = distinct !{!54, !15}
!55 = distinct !{!55, !15}
!56 = distinct !{!56, !13}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !15}
!64 = distinct !{!64, !15}
!65 = distinct !{!65, !13}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !13}
!72 = distinct !{!72, !15}
!73 = distinct !{!73, !15}
!74 = distinct !{!74, !13}
!75 = !{!76}
!76 = distinct !{!76, !77}
!77 = distinct !{!77, !"LVerDomain"}
!78 = !{!79}
!79 = distinct !{!79, !77}
!80 = distinct !{!80, !13}
!81 = distinct !{!81, !15}
!82 = distinct !{!82, !15}
!83 = distinct !{!83, !13}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !15}
!91 = distinct !{!91, !15}
!92 = distinct !{!92, !13}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !13}
!99 = distinct !{!99, !15}
!100 = distinct !{!100, !15}
!101 = distinct !{!101, !13}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !15}
!104 = distinct !{!104, !29, !13}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !13}
!111 = distinct !{!111, !15}
!112 = distinct !{!112, !15}
!113 = distinct !{!113, !13}
