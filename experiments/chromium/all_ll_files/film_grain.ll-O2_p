; ModuleID = '../../third_party/libgav1/src/src/film_grain.cc'
source_filename = "../../third_party/libgav1/src/src/film_grain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.libgav1::FilmGrain" = type { %"struct.libgav1::FilmGrainParams"*, i8, i8, i32, i32, i32, i32, i32, i32, [5986 x i8], [5986 x i8], [5986 x i8], [263 x i8], i8*, i8*, %"class.std::__1::unique_ptr", [3 x %"class.libgav1::Array2DView"], %"class.std::__1::unique_ptr.1", [3 x %"class.libgav1::Array2D"], %"class.libgav1::ThreadPool"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr.1", i64, i64, %"class.libgav1::Array2DView" }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"class.libgav1::ThreadPool" = type { %"class.libgav1::Executor", %"class.std::__1::condition_variable", %"class.std::__1::mutex", %"class.libgav1::UnboundedQueue", %"class.std::__1::unique_ptr.9", i8, i32, [16 x i8] }
%"class.libgav1::Executor" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.7, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.7 = type { i64 }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.libgav1::UnboundedQueue" = type { %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64, %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64 }
%"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.libgav1::ThreadPool::WorkerThread"** }
%"class.libgav1::ThreadPool::WorkerThread" = type opaque
%"class.libgav1::FilmGrain.37" = type { %"struct.libgav1::FilmGrainParams"*, i8, i8, i32, i32, i32, i32, i32, i32, [5986 x i16], [5986 x i16], [5986 x i16], [263 x i8], i8*, i8*, %"class.std::__1::unique_ptr", [3 x %"class.libgav1::Array2DView.38"], %"class.std::__1::unique_ptr.39", [3 x %"class.libgav1::Array2D.45"], %"class.libgav1::ThreadPool"* }
%"class.libgav1::Array2DView.38" = type { i32, i32, i16* }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i16* }
%"class.libgav1::Array2D.45" = type { %"class.std::__1::unique_ptr.39", i64, i64, %"class.libgav1::Array2DView.38" }
%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array", %"struct.std::__1::array.15", %"struct.std::__1::array.15", %"struct.std::__1::array.16", %"struct.std::__1::array.17", %"class.libgav1::Array2D.18", %"class.libgav1::Array2D.26" }
%"struct.std::__1::array" = type { [8 x i8] }
%"struct.std::__1::array.15" = type { [8 x i8] }
%"struct.std::__1::array.16" = type { [8 x i8] }
%"struct.std::__1::array.17" = type { [8 x i16] }
%"class.libgav1::Array2D.18" = type { %"class.std::__1::unique_ptr.19", i64, i64, %"class.libgav1::Array2DView.25" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i8* }
%"class.libgav1::Array2DView.25" = type { i32, i32, i8* }
%"class.libgav1::Array2D.26" = type { %"class.std::__1::unique_ptr.27", i64, i64, %"class.libgav1::Array2DView.34" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon.30 }
%union.anon.30 = type { i32 }
%"class.libgav1::Array2DView.34" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.26", %"class.libgav1::Array2D" }
%"union.libgav1::CompoundMotionVector" = type { i64 }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%"class.libgav1::BlockingCounterImpl" = type <{ %"class.std::__1::mutex", %"class.std::__1::condition_variable", i32, i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %"class.libgav1::FilmGrain"*, %"struct.libgav1::dsp::Dsp", %"class.libgav1::BlockingCounterImpl"*, [2 x i8]*, i32, %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i8*, i64, i8*, i8*, i64 }
%"class.std::__1::__function::__default_alloc_func.53" = type { %class.anon.36 }
%class.anon.36 = type { %"class.libgav1::FilmGrain"*, %"struct.libgav1::dsp::Dsp", %"class.libgav1::BlockingCounterImpl"*, %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i64 }
%"class.std::__1::__function::__default_alloc_func.55" = type { %class.anon.46 }
%class.anon.46 = type { %"class.libgav1::FilmGrain.37"*, %"struct.libgav1::dsp::Dsp", %"class.libgav1::BlockingCounterImpl"*, [2 x i8]*, i32, %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i8*, i64, i8*, i8*, i64 }
%"class.std::__1::__function::__default_alloc_func.57" = type { %class.anon.47 }
%class.anon.47 = type { %"class.libgav1::FilmGrain.37"*, %"struct.libgav1::dsp::Dsp", %"class.libgav1::BlockingCounterImpl"*, %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i64 }

$_ZN7libgav19FilmGrainILi8EEC5ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE = comdat any

$_ZN7libgav19FilmGrainILi8EE17GenerateLumaGrainERKNS_15FilmGrainParamsEPa = comdat any

$_ZN7libgav19FilmGrainILi8EE20GenerateChromaGrainsERKNS_15FilmGrainParamsEiiPaS5_ = comdat any

$_ZN7libgav19FilmGrainILi8EE19ConstructNoiseImageEPKNS_11Array2DViewIaEEiiiiiPNS_7Array2DIaEE = comdat any

$_ZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_l = comdat any

$_ZN7libgav19FilmGrainILi8EE4InitEv = comdat any

$_ZN7libgav19FilmGrainILi8EE20AllocateNoiseStripesEv = comdat any

$_ZN7libgav19FilmGrainILi8EE18AllocateNoiseImageEv = comdat any

$_ZN7libgav19FilmGrainILi8EE22BlendNoiseChromaWorkerERKNS_3dsp3DspEPKNS_5PlaneEiPNSt3__16atomicIiEEiiPKhlSE_SE_lPhSF_l = comdat any

$_ZN7libgav19FilmGrainILi8EE20BlendNoiseLumaWorkerERKNS_3dsp3DspEPNSt3__16atomicIiEEiiPKhlPhl = comdat any

$_ZN7libgav19FilmGrainILi10EEC5ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE = comdat any

$_ZN7libgav19FilmGrainILi10EE17GenerateLumaGrainERKNS_15FilmGrainParamsEPs = comdat any

$_ZN7libgav19FilmGrainILi10EE20GenerateChromaGrainsERKNS_15FilmGrainParamsEiiPsS5_ = comdat any

$_ZN7libgav19FilmGrainILi10EE19ConstructNoiseImageEPKNS_11Array2DViewIsEEiiiiiPNS_7Array2DIsEE = comdat any

$_ZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_l = comdat any

$_ZN7libgav19FilmGrainILi10EE4InitEv = comdat any

$_ZN7libgav19FilmGrainILi10EE20AllocateNoiseStripesEv = comdat any

$_ZN7libgav19FilmGrainILi10EE18AllocateNoiseImageEv = comdat any

$_ZN7libgav19FilmGrainILi10EE22BlendNoiseChromaWorkerERKNS_3dsp3DspEPKNS_5PlaneEiPNSt3__16atomicIiEEiiPKhlSE_SE_lPhSF_l = comdat any

$_ZN7libgav19FilmGrainILi10EE20BlendNoiseLumaWorkerERKNS_3dsp3DspEPNSt3__16atomicIiEEiiPKhlPhl = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE_clEv = comdat any

$_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPvPKv = comdat any

$_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEvPv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE0_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE0_clEv = comdat any

$_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPvPKv = comdat any

$_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEvPv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE_clEv = comdat any

$_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPvPKv = comdat any

$_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEvPv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE0_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE0_clEv = comdat any

$_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPvPKv = comdat any

$_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEvPv = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = comdat any

@_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE = internal unnamed_addr constant [2048 x i16] [i16 56, i16 568, i16 -180, i16 172, i16 124, i16 -84, i16 172, i16 -64, i16 -900, i16 24, i16 820, i16 224, i16 1248, i16 996, i16 272, i16 -8, i16 -916, i16 -388, i16 -732, i16 -104, i16 -188, i16 800, i16 112, i16 -652, i16 -320, i16 -376, i16 140, i16 -252, i16 492, i16 -168, i16 44, i16 -788, i16 588, i16 -584, i16 500, i16 -228, i16 12, i16 680, i16 272, i16 -476, i16 972, i16 -100, i16 652, i16 368, i16 432, i16 -196, i16 -720, i16 -192, i16 1000, i16 -332, i16 652, i16 -136, i16 -552, i16 -604, i16 -4, i16 192, i16 -220, i16 -136, i16 1000, i16 -52, i16 372, i16 -96, i16 -624, i16 124, i16 -24, i16 396, i16 540, i16 -12, i16 -104, i16 640, i16 464, i16 244, i16 -208, i16 -84, i16 368, i16 -528, i16 -740, i16 248, i16 -968, i16 -848, i16 608, i16 376, i16 -60, i16 -292, i16 -40, i16 -156, i16 252, i16 -292, i16 248, i16 224, i16 -280, i16 400, i16 -244, i16 244, i16 -60, i16 76, i16 -80, i16 212, i16 532, i16 340, i16 128, i16 -36, i16 824, i16 -352, i16 -60, i16 -264, i16 -96, i16 -612, i16 416, i16 -704, i16 220, i16 -204, i16 640, i16 -160, i16 1220, i16 -408, i16 900, i16 336, i16 20, i16 -336, i16 -96, i16 -792, i16 304, i16 48, i16 -28, i16 -1232, i16 -1172, i16 -448, i16 104, i16 -292, i16 -520, i16 244, i16 60, i16 -948, i16 0, i16 -708, i16 268, i16 108, i16 356, i16 -548, i16 488, i16 -344, i16 -136, i16 488, i16 -196, i16 -224, i16 656, i16 -236, i16 -1128, i16 60, i16 4, i16 140, i16 276, i16 -676, i16 -376, i16 168, i16 -108, i16 464, i16 8, i16 564, i16 64, i16 240, i16 308, i16 -300, i16 -400, i16 -456, i16 -136, i16 56, i16 120, i16 -408, i16 -116, i16 436, i16 504, i16 -232, i16 328, i16 844, i16 -164, i16 -84, i16 784, i16 -168, i16 232, i16 -224, i16 348, i16 -376, i16 128, i16 568, i16 96, i16 -1244, i16 -288, i16 276, i16 848, i16 832, i16 -360, i16 656, i16 464, i16 -384, i16 -332, i16 -356, i16 728, i16 -388, i16 160, i16 -192, i16 468, i16 296, i16 224, i16 140, i16 -776, i16 -100, i16 280, i16 4, i16 196, i16 44, i16 -36, i16 -648, i16 932, i16 16, i16 1428, i16 28, i16 528, i16 808, i16 772, i16 20, i16 268, i16 88, i16 -332, i16 -284, i16 124, i16 -384, i16 -448, i16 208, i16 -228, i16 -1044, i16 -328, i16 660, i16 380, i16 -148, i16 -300, i16 588, i16 240, i16 540, i16 28, i16 136, i16 -88, i16 -436, i16 256, i16 296, i16 -1000, i16 1400, i16 0, i16 -48, i16 1056, i16 -136, i16 264, i16 -528, i16 -1108, i16 632, i16 -484, i16 -592, i16 -344, i16 796, i16 124, i16 -668, i16 -768, i16 388, i16 1296, i16 -232, i16 -188, i16 -200, i16 -288, i16 -4, i16 308, i16 100, i16 -168, i16 256, i16 -500, i16 204, i16 -508, i16 648, i16 -136, i16 372, i16 -272, i16 -120, i16 -1004, i16 -552, i16 -548, i16 -384, i16 548, i16 -296, i16 428, i16 -108, i16 -8, i16 -912, i16 -324, i16 -224, i16 -88, i16 -112, i16 -220, i16 -100, i16 996, i16 -796, i16 548, i16 360, i16 -216, i16 180, i16 428, i16 -200, i16 -212, i16 148, i16 96, i16 148, i16 284, i16 216, i16 -412, i16 -320, i16 120, i16 -300, i16 -384, i16 -604, i16 -572, i16 -332, i16 -8, i16 -180, i16 -176, i16 696, i16 116, i16 -88, i16 628, i16 76, i16 44, i16 -516, i16 240, i16 -208, i16 -40, i16 100, i16 -592, i16 344, i16 -308, i16 -452, i16 -228, i16 20, i16 916, i16 -1752, i16 -136, i16 -340, i16 -804, i16 140, i16 40, i16 512, i16 340, i16 248, i16 184, i16 -492, i16 896, i16 -156, i16 932, i16 -628, i16 328, i16 -688, i16 -448, i16 -616, i16 -752, i16 -100, i16 560, i16 -1020, i16 180, i16 -800, i16 -64, i16 76, i16 576, i16 1068, i16 396, i16 660, i16 552, i16 -108, i16 -28, i16 320, i16 -628, i16 312, i16 -92, i16 -92, i16 -472, i16 268, i16 16, i16 560, i16 516, i16 -672, i16 -52, i16 492, i16 -100, i16 260, i16 384, i16 284, i16 292, i16 304, i16 -148, i16 88, i16 -152, i16 1012, i16 1064, i16 -228, i16 164, i16 -376, i16 -684, i16 592, i16 -392, i16 156, i16 196, i16 -524, i16 -64, i16 -884, i16 160, i16 -176, i16 636, i16 648, i16 404, i16 -396, i16 -436, i16 864, i16 424, i16 -728, i16 988, i16 -604, i16 904, i16 -592, i16 296, i16 -224, i16 536, i16 -176, i16 -920, i16 436, i16 -48, i16 1176, i16 -884, i16 416, i16 -776, i16 -824, i16 -884, i16 524, i16 -548, i16 -564, i16 -68, i16 -164, i16 -96, i16 692, i16 364, i16 -692, i16 -1012, i16 -68, i16 260, i16 -480, i16 876, i16 -1116, i16 452, i16 -332, i16 -352, i16 892, i16 -1088, i16 1220, i16 -676, i16 12, i16 -292, i16 244, i16 496, i16 372, i16 -32, i16 280, i16 200, i16 112, i16 -440, i16 -96, i16 24, i16 -644, i16 -184, i16 56, i16 -432, i16 224, i16 -980, i16 272, i16 -260, i16 144, i16 -436, i16 420, i16 356, i16 364, i16 -528, i16 76, i16 172, i16 -744, i16 -368, i16 404, i16 -752, i16 -416, i16 684, i16 -688, i16 72, i16 540, i16 416, i16 92, i16 444, i16 480, i16 -72, i16 -1416, i16 164, i16 -1172, i16 -68, i16 24, i16 424, i16 264, i16 1040, i16 128, i16 -912, i16 -524, i16 -356, i16 64, i16 876, i16 -12, i16 4, i16 -88, i16 532, i16 272, i16 -524, i16 320, i16 276, i16 -508, i16 940, i16 24, i16 -400, i16 -120, i16 756, i16 60, i16 236, i16 -412, i16 100, i16 376, i16 -484, i16 400, i16 -100, i16 -740, i16 -108, i16 -260, i16 328, i16 -268, i16 224, i16 -200, i16 -416, i16 184, i16 -604, i16 -564, i16 -20, i16 296, i16 60, i16 892, i16 -888, i16 60, i16 164, i16 68, i16 -760, i16 216, i16 -296, i16 904, i16 -336, i16 -28, i16 404, i16 -356, i16 -568, i16 -208, i16 -1480, i16 -512, i16 296, i16 328, i16 -360, i16 -164, i16 -1560, i16 -776, i16 1156, i16 -428, i16 164, i16 -504, i16 -112, i16 120, i16 -216, i16 -148, i16 -264, i16 308, i16 32, i16 64, i16 -72, i16 72, i16 116, i16 176, i16 -64, i16 -272, i16 460, i16 -536, i16 -784, i16 -280, i16 348, i16 108, i16 -752, i16 -132, i16 524, i16 -540, i16 -776, i16 116, i16 -296, i16 -1196, i16 -288, i16 -560, i16 1040, i16 -472, i16 116, i16 -848, i16 -1116, i16 116, i16 636, i16 696, i16 284, i16 -176, i16 1016, i16 204, i16 -864, i16 -648, i16 -248, i16 356, i16 972, i16 -584, i16 -204, i16 264, i16 880, i16 528, i16 -24, i16 -184, i16 116, i16 448, i16 -144, i16 828, i16 524, i16 212, i16 -212, i16 52, i16 12, i16 200, i16 268, i16 -488, i16 -404, i16 -880, i16 824, i16 -672, i16 -40, i16 908, i16 -248, i16 500, i16 716, i16 -576, i16 492, i16 -576, i16 16, i16 720, i16 -108, i16 384, i16 124, i16 344, i16 280, i16 576, i16 -500, i16 252, i16 104, i16 -308, i16 196, i16 -188, i16 -8, i16 1268, i16 296, i16 1032, i16 -1196, i16 436, i16 316, i16 372, i16 -432, i16 -200, i16 -660, i16 704, i16 -224, i16 596, i16 -132, i16 268, i16 32, i16 -452, i16 884, i16 104, i16 -1008, i16 424, i16 -1348, i16 -280, i16 4, i16 -1168, i16 368, i16 476, i16 696, i16 300, i16 -8, i16 24, i16 180, i16 -592, i16 -196, i16 388, i16 304, i16 500, i16 724, i16 -160, i16 244, i16 -84, i16 272, i16 -256, i16 -420, i16 320, i16 208, i16 -144, i16 -156, i16 156, i16 364, i16 452, i16 28, i16 540, i16 316, i16 220, i16 -644, i16 -248, i16 464, i16 72, i16 360, i16 32, i16 -388, i16 496, i16 -680, i16 -48, i16 208, i16 -116, i16 -408, i16 60, i16 -604, i16 -392, i16 548, i16 -840, i16 784, i16 -460, i16 656, i16 -544, i16 -388, i16 -264, i16 908, i16 -800, i16 -628, i16 -612, i16 -568, i16 572, i16 -220, i16 164, i16 288, i16 -16, i16 -308, i16 308, i16 -112, i16 -636, i16 -760, i16 280, i16 -668, i16 432, i16 364, i16 240, i16 -196, i16 604, i16 340, i16 384, i16 196, i16 592, i16 -44, i16 -500, i16 432, i16 -580, i16 -132, i16 636, i16 -76, i16 392, i16 4, i16 -412, i16 540, i16 508, i16 328, i16 -356, i16 -36, i16 16, i16 -220, i16 -64, i16 -248, i16 -60, i16 24, i16 -192, i16 368, i16 1040, i16 92, i16 -24, i16 -1044, i16 -32, i16 40, i16 104, i16 148, i16 192, i16 -136, i16 -520, i16 56, i16 -816, i16 -224, i16 732, i16 392, i16 356, i16 212, i16 -80, i16 -424, i16 -1008, i16 -324, i16 588, i16 -1496, i16 576, i16 460, i16 -816, i16 -848, i16 56, i16 -580, i16 -92, i16 -1372, i16 -112, i16 -496, i16 200, i16 364, i16 52, i16 -140, i16 48, i16 -48, i16 -60, i16 84, i16 72, i16 40, i16 132, i16 -356, i16 -268, i16 -104, i16 -284, i16 -404, i16 732, i16 -520, i16 164, i16 -304, i16 -540, i16 120, i16 328, i16 -76, i16 -460, i16 756, i16 388, i16 588, i16 236, i16 -436, i16 -72, i16 -176, i16 -404, i16 -316, i16 -148, i16 716, i16 -604, i16 404, i16 -72, i16 -88, i16 -888, i16 -68, i16 944, i16 88, i16 -220, i16 -344, i16 960, i16 472, i16 460, i16 -232, i16 704, i16 120, i16 832, i16 -228, i16 692, i16 -508, i16 132, i16 -476, i16 844, i16 -748, i16 -364, i16 -44, i16 1116, i16 -1104, i16 -1056, i16 76, i16 428, i16 552, i16 -692, i16 60, i16 356, i16 96, i16 -384, i16 -188, i16 -612, i16 -576, i16 736, i16 508, i16 892, i16 352, i16 -1132, i16 504, i16 -24, i16 -352, i16 324, i16 332, i16 -600, i16 -312, i16 292, i16 508, i16 -144, i16 -8, i16 484, i16 48, i16 284, i16 -260, i16 -240, i16 256, i16 -100, i16 -292, i16 -204, i16 -44, i16 472, i16 -204, i16 908, i16 -188, i16 -1000, i16 -256, i16 92, i16 1164, i16 -392, i16 564, i16 356, i16 652, i16 -28, i16 -884, i16 256, i16 484, i16 -192, i16 760, i16 -176, i16 376, i16 -524, i16 -452, i16 -436, i16 860, i16 -736, i16 212, i16 124, i16 504, i16 -476, i16 468, i16 76, i16 -472, i16 552, i16 -692, i16 -944, i16 -620, i16 740, i16 -240, i16 400, i16 132, i16 20, i16 192, i16 -196, i16 264, i16 -668, i16 -1012, i16 -60, i16 296, i16 -316, i16 -828, i16 76, i16 -156, i16 284, i16 -768, i16 -448, i16 -832, i16 148, i16 248, i16 652, i16 616, i16 1236, i16 288, i16 -328, i16 -400, i16 -124, i16 588, i16 220, i16 520, i16 -696, i16 1032, i16 768, i16 -740, i16 -92, i16 -272, i16 296, i16 448, i16 -464, i16 412, i16 -200, i16 392, i16 440, i16 -200, i16 264, i16 -152, i16 -260, i16 320, i16 1032, i16 216, i16 320, i16 -8, i16 -64, i16 156, i16 -1016, i16 1084, i16 1172, i16 536, i16 484, i16 -432, i16 132, i16 372, i16 -52, i16 -256, i16 84, i16 116, i16 -352, i16 48, i16 116, i16 304, i16 -384, i16 412, i16 924, i16 -300, i16 528, i16 628, i16 180, i16 648, i16 44, i16 -980, i16 -220, i16 1320, i16 48, i16 332, i16 748, i16 524, i16 -268, i16 -720, i16 540, i16 -276, i16 564, i16 -344, i16 -208, i16 -196, i16 436, i16 896, i16 88, i16 -392, i16 132, i16 80, i16 -964, i16 -288, i16 568, i16 56, i16 -48, i16 -456, i16 888, i16 8, i16 552, i16 -156, i16 -292, i16 948, i16 288, i16 128, i16 -716, i16 -292, i16 1192, i16 -152, i16 876, i16 352, i16 -600, i16 -260, i16 -812, i16 -468, i16 -28, i16 -120, i16 -32, i16 -44, i16 1284, i16 496, i16 192, i16 464, i16 312, i16 -76, i16 -516, i16 -380, i16 -456, i16 -1012, i16 -48, i16 308, i16 -156, i16 36, i16 492, i16 -156, i16 -808, i16 188, i16 1652, i16 68, i16 -120, i16 -116, i16 316, i16 160, i16 -140, i16 352, i16 808, i16 -416, i16 592, i16 316, i16 -480, i16 56, i16 528, i16 -204, i16 -568, i16 372, i16 -232, i16 752, i16 -344, i16 744, i16 -4, i16 324, i16 -416, i16 -600, i16 768, i16 268, i16 -248, i16 -88, i16 -132, i16 -420, i16 -432, i16 80, i16 -288, i16 404, i16 -316, i16 -1216, i16 -588, i16 520, i16 -108, i16 92, i16 -320, i16 368, i16 -480, i16 -216, i16 -92, i16 1688, i16 -300, i16 180, i16 1020, i16 -176, i16 820, i16 -68, i16 -228, i16 -260, i16 436, i16 -904, i16 20, i16 40, i16 -508, i16 440, i16 -736, i16 312, i16 332, i16 204, i16 760, i16 -372, i16 728, i16 96, i16 -20, i16 -632, i16 -520, i16 -560, i16 336, i16 1076, i16 -64, i16 -532, i16 776, i16 584, i16 192, i16 396, i16 -728, i16 -520, i16 276, i16 -188, i16 80, i16 -52, i16 -612, i16 -252, i16 -48, i16 648, i16 212, i16 -688, i16 228, i16 -52, i16 -260, i16 428, i16 -412, i16 -272, i16 -404, i16 180, i16 816, i16 -796, i16 48, i16 152, i16 484, i16 -88, i16 -216, i16 988, i16 696, i16 188, i16 -528, i16 648, i16 -116, i16 -180, i16 316, i16 476, i16 12, i16 -564, i16 96, i16 476, i16 -252, i16 -364, i16 -376, i16 -392, i16 556, i16 -256, i16 -576, i16 260, i16 -352, i16 120, i16 -16, i16 -136, i16 -260, i16 -492, i16 72, i16 556, i16 660, i16 580, i16 616, i16 772, i16 436, i16 424, i16 -32, i16 -324, i16 -1268, i16 416, i16 -324, i16 -80, i16 920, i16 160, i16 228, i16 724, i16 32, i16 -516, i16 64, i16 384, i16 68, i16 -128, i16 136, i16 240, i16 248, i16 -204, i16 -68, i16 252, i16 -932, i16 -120, i16 -480, i16 -628, i16 -84, i16 192, i16 852, i16 -404, i16 -288, i16 -132, i16 204, i16 100, i16 168, i16 -68, i16 -196, i16 -868, i16 460, i16 1080, i16 380, i16 -80, i16 244, i16 0, i16 484, i16 -888, i16 64, i16 184, i16 352, i16 600, i16 460, i16 164, i16 604, i16 -196, i16 320, i16 -64, i16 588, i16 -184, i16 228, i16 12, i16 372, i16 48, i16 -848, i16 -344, i16 224, i16 208, i16 -200, i16 484, i16 128, i16 -20, i16 272, i16 -468, i16 -840, i16 384, i16 256, i16 -720, i16 -520, i16 -464, i16 -580, i16 112, i16 -120, i16 644, i16 -356, i16 -208, i16 -608, i16 -528, i16 704, i16 560, i16 -424, i16 392, i16 828, i16 40, i16 84, i16 200, i16 -152, i16 0, i16 -144, i16 584, i16 280, i16 -120, i16 80, i16 -556, i16 -972, i16 -196, i16 -472, i16 724, i16 80, i16 168, i16 -32, i16 88, i16 160, i16 -688, i16 0, i16 160, i16 356, i16 372, i16 -776, i16 740, i16 -128, i16 676, i16 -248, i16 -480, i16 4, i16 -364, i16 96, i16 544, i16 232, i16 -1032, i16 956, i16 236, i16 356, i16 20, i16 -40, i16 300, i16 24, i16 -676, i16 -596, i16 132, i16 1120, i16 -104, i16 532, i16 -1096, i16 568, i16 648, i16 444, i16 508, i16 380, i16 188, i16 -376, i16 -604, i16 1488, i16 424, i16 24, i16 756, i16 -220, i16 -192, i16 716, i16 120, i16 920, i16 688, i16 168, i16 44, i16 -460, i16 568, i16 284, i16 1144, i16 1160, i16 600, i16 424, i16 888, i16 656, i16 -356, i16 -320, i16 220, i16 316, i16 -176, i16 -724, i16 -188, i16 -816, i16 -628, i16 -348, i16 -228, i16 -380, i16 1012, i16 -452, i16 -660, i16 736, i16 928, i16 404, i16 -696, i16 -72, i16 -268, i16 -892, i16 128, i16 184, i16 -344, i16 -780, i16 360, i16 336, i16 400, i16 344, i16 428, i16 548, i16 -112, i16 136, i16 -228, i16 -216, i16 -820, i16 -516, i16 340, i16 92, i16 -136, i16 116, i16 -300, i16 376, i16 -244, i16 100, i16 -316, i16 -520, i16 -284, i16 -12, i16 824, i16 164, i16 -548, i16 -180, i16 -128, i16 116, i16 -924, i16 -828, i16 268, i16 -368, i16 -580, i16 620, i16 192, i16 160, i16 0, i16 -1676, i16 1068, i16 424, i16 -56, i16 -360, i16 468, i16 -156, i16 720, i16 288, i16 -528, i16 556, i16 -364, i16 548, i16 -148, i16 504, i16 316, i16 152, i16 -648, i16 -620, i16 -684, i16 -24, i16 -376, i16 -384, i16 -108, i16 -920, i16 -1032, i16 768, i16 180, i16 -264, i16 -508, i16 -1268, i16 -260, i16 -60, i16 300, i16 -240, i16 988, i16 724, i16 -376, i16 -576, i16 -212, i16 -736, i16 556, i16 192, i16 1092, i16 -620, i16 -880, i16 376, i16 -56, i16 -4, i16 -216, i16 -32, i16 836, i16 268, i16 396, i16 1332, i16 864, i16 -600, i16 100, i16 56, i16 -412, i16 -92, i16 356, i16 180, i16 884, i16 -468, i16 -436, i16 292, i16 -388, i16 -804, i16 -704, i16 -840, i16 368, i16 -348, i16 140, i16 -724, i16 1536, i16 940, i16 372, i16 112, i16 -372, i16 436, i16 -480, i16 1136, i16 296, i16 -32, i16 -228, i16 132, i16 -48, i16 -220, i16 868, i16 -1016, i16 -60, i16 -1044, i16 -464, i16 328, i16 916, i16 244, i16 12, i16 -736, i16 -296, i16 360, i16 468, i16 -376, i16 -108, i16 -92, i16 788, i16 368, i16 -56, i16 544, i16 400, i16 -672, i16 -420, i16 728, i16 16, i16 320, i16 44, i16 -284, i16 -380, i16 -796, i16 488, i16 132, i16 204, i16 -596, i16 -372, i16 88, i16 -152, i16 -908, i16 -636, i16 -572, i16 -624, i16 -116, i16 -692, i16 -200, i16 -56, i16 276, i16 -88, i16 484, i16 -324, i16 948, i16 864, i16 1000, i16 -456, i16 -184, i16 -276, i16 292, i16 -296, i16 156, i16 676, i16 320, i16 160, i16 908, i16 -84, i16 -1236, i16 -288, i16 -116, i16 260, i16 -372, i16 -644, i16 732, i16 -756, i16 -96, i16 84, i16 344, i16 -520, i16 348, i16 -688, i16 240, i16 -84, i16 216, i16 -1044, i16 -136, i16 -676, i16 -396, i16 -1500, i16 960, i16 -40, i16 176, i16 168, i16 1516, i16 420, i16 -504, i16 -344, i16 -364, i16 -360, i16 1216, i16 -940, i16 -380, i16 -212, i16 252, i16 -660, i16 -708, i16 484, i16 -444, i16 -152, i16 928, i16 -120, i16 1112, i16 476, i16 -260, i16 560, i16 -148, i16 -344, i16 108, i16 -196, i16 228, i16 -288, i16 504, i16 560, i16 -328, i16 -88, i16 288, i16 -1008, i16 460, i16 -228, i16 468, i16 -836, i16 -196, i16 76, i16 388, i16 232, i16 412, i16 -1168, i16 -716, i16 -644, i16 756, i16 -172, i16 -356, i16 -504, i16 116, i16 432, i16 528, i16 48, i16 476, i16 -168, i16 -608, i16 448, i16 160, i16 -532, i16 -272, i16 28, i16 -676, i16 -12, i16 828, i16 980, i16 456, i16 520, i16 104, i16 -104, i16 256, i16 -344, i16 -4, i16 -28, i16 -368, i16 -52, i16 -524, i16 -572, i16 -556, i16 -200, i16 768, i16 1124, i16 -208, i16 -512, i16 176, i16 232, i16 248, i16 -148, i16 -888, i16 604, i16 -600, i16 -304, i16 804, i16 -156, i16 -212, i16 488, i16 -192, i16 -804, i16 -256, i16 368, i16 -360, i16 -916, i16 -328, i16 228, i16 -240, i16 -448, i16 -472, i16 856, i16 -556, i16 -364, i16 572, i16 -12, i16 -156, i16 -368, i16 -340, i16 432, i16 252, i16 -752, i16 -152, i16 288, i16 268, i16 -580, i16 -848, i16 -592, i16 108, i16 -76, i16 244, i16 312, i16 -716, i16 592, i16 -80, i16 436, i16 360, i16 4, i16 -248, i16 160, i16 516, i16 584, i16 732, i16 44, i16 -468, i16 -280, i16 -292, i16 -156, i16 -588, i16 28, i16 308, i16 912, i16 24, i16 124, i16 156, i16 180, i16 -252, i16 944, i16 -924, i16 -772, i16 -520, i16 -428, i16 -624, i16 300, i16 -212, i16 -1144, i16 32, i16 -724, i16 800, i16 -1128, i16 -212, i16 -1288, i16 -848, i16 180, i16 -416, i16 440, i16 192, i16 -576, i16 -792, i16 -76, i16 -1080, i16 80, i16 -532, i16 -352, i16 -132, i16 380, i16 -820, i16 148, i16 1112, i16 128, i16 164, i16 456, i16 700, i16 -924, i16 144, i16 -668, i16 -384, i16 648, i16 -832, i16 508, i16 552, i16 -52, i16 -100, i16 -656, i16 208, i16 -568, i16 748, i16 -88, i16 680, i16 232, i16 300, i16 192, i16 -408, i16 -1012, i16 -152, i16 -252, i16 -268, i16 272, i16 -876, i16 -664, i16 -648, i16 -332, i16 -136, i16 16, i16 12, i16 1152, i16 -28, i16 332, i16 -536, i16 320, i16 -672, i16 -460, i16 -316, i16 532, i16 -260, i16 228, i16 -40, i16 1052, i16 -816, i16 180, i16 88, i16 -496, i16 -556, i16 -672, i16 -368, i16 428, i16 92, i16 356, i16 404, i16 -408, i16 252, i16 196, i16 -176, i16 -556, i16 792, i16 268, i16 32, i16 372, i16 40, i16 96, i16 -332, i16 328, i16 120, i16 372, i16 -900, i16 -40, i16 472, i16 -264, i16 -592, i16 952, i16 128, i16 656, i16 112, i16 664, i16 -232, i16 420, i16 4, i16 -344, i16 -464, i16 556, i16 244, i16 -416, i16 -32, i16 252, i16 0, i16 -412, i16 188, i16 -696, i16 508, i16 -476, i16 324, i16 -1096, i16 656, i16 -312, i16 560, i16 264, i16 -136, i16 304, i16 160, i16 -64, i16 -580, i16 248, i16 336, i16 -720, i16 560, i16 -348, i16 -288, i16 -276, i16 -196, i16 -500, i16 852, i16 -544, i16 -236, i16 -1128, i16 -992, i16 -776, i16 116, i16 56, i16 52, i16 860, i16 884, i16 212, i16 -12, i16 168, i16 1020, i16 512, i16 -552, i16 924, i16 -148, i16 716, i16 188, i16 164, i16 -340, i16 -520, i16 -184, i16 880, i16 -152, i16 -680, i16 -208, i16 -1156, i16 -300, i16 -528, i16 -472, i16 364, i16 100, i16 -744, i16 -1056, i16 -32, i16 540, i16 280, i16 144, i16 -676, i16 -32, i16 -232, i16 -280, i16 -224, i16 96, i16 568, i16 -76, i16 172, i16 148, i16 148, i16 104, i16 32, i16 -296, i16 -32, i16 788, i16 -80, i16 32, i16 -16, i16 280, i16 288, i16 944, i16 428, i16 -484], align 16
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEvPv, i8 0, %"class.std::type_info"* null }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEvPv, i8 0, %"class.std::type_info"* null }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEvPv, i8 0, %"class.std::type_info"* null }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEvPv, i8 0, %"class.std::type_info"* null }, comdat, align 8

@_ZN7libgav19FilmGrainILi8EEC1ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE = weak_odr hidden unnamed_addr alias void (%"class.libgav1::FilmGrain"*, %"struct.libgav1::FilmGrainParams"*, i1, i1, i32, i32, i32, i32, %"class.libgav1::ThreadPool"*), void (%"class.libgav1::FilmGrain"*, %"struct.libgav1::FilmGrainParams"*, i1, i1, i32, i32, i32, i32, %"class.libgav1::ThreadPool"*)* @_ZN7libgav19FilmGrainILi8EEC2ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE
@_ZN7libgav19FilmGrainILi10EEC1ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE = weak_odr hidden unnamed_addr alias void (%"class.libgav1::FilmGrain.37"*, %"struct.libgav1::FilmGrainParams"*, i1, i1, i32, i32, i32, i32, %"class.libgav1::ThreadPool"*), void (%"class.libgav1::FilmGrain.37"*, %"struct.libgav1::FilmGrainParams"*, i1, i1, i32, i32, i32, i32, %"class.libgav1::ThreadPool"*)* @_ZN7libgav19FilmGrainILi10EEC2ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi8EEC2ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE(%"class.libgav1::FilmGrain"*, %"struct.libgav1::FilmGrainParams"* dereferenceable(172), i1 zeroext, i1 zeroext, i32, i32, i32, i32, %"class.libgav1::ThreadPool"*) unnamed_addr #0 comdat($_ZN7libgav19FilmGrainILi8EEC5ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE) align 2 {
  %10 = zext i1 %2 to i8
  %11 = zext i1 %3 to i8
  %12 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 0
  store %"struct.libgav1::FilmGrainParams"* %1, %"struct.libgav1::FilmGrainParams"** %12, align 8
  %13 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 1
  store i8 %10, i8* %13, align 8
  %14 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 2
  store i8 %11, i8* %14, align 1
  %15 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  store i32 %4, i32* %15, align 4
  %16 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  store i32 %5, i32* %16, align 8
  %17 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  store i32 %6, i32* %17, align 4
  %18 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  store i32 %7, i32* %18, align 8
  %19 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 7
  %20 = icmp eq i32 %4, 0
  %21 = select i1 %20, i32 82, i32 44
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 8
  %23 = icmp eq i32 %5, 0
  %24 = select i1 %23, i32 73, i32 38
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 13
  %26 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 19
  %27 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 200, i1 false)
  store %"class.libgav1::ThreadPool"* %8, %"class.libgav1::ThreadPool"** %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi8EE17GenerateLumaGrainERKNS_15FilmGrainParamsEPa(%"struct.libgav1::FilmGrainParams"* dereferenceable(172), i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 22
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 4
  %6 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 20
  %7 = load i16, i16* %6, align 2
  %8 = shl i32 1, %5
  %9 = ashr i32 %8, 1
  br label %10

10:                                               ; preds = %15, %2
  %11 = phi i32 [ 0, %2 ], [ %18, %15 ]
  %12 = phi i8* [ %1, %2 ], [ %17, %15 ]
  %13 = phi i16 [ %7, %2 ], [ %16, %15 ]
  br label %20

14:                                               ; preds = %15
  ret void

15:                                               ; preds = %20
  %16 = trunc i32 %31 to i16
  %17 = getelementptr inbounds i8, i8* %12, i64 82
  %18 = add nuw nsw i32 %11, 1
  %19 = icmp eq i32 %18, 73
  br i1 %19, label %14, label %10

20:                                               ; preds = %20, %10
  %21 = phi i64 [ 0, %10 ], [ %43, %20 ]
  %22 = phi i16 [ %13, %10 ], [ %32, %20 ]
  %23 = zext i16 %22 to i32
  %24 = lshr i32 %23, 1
  %25 = xor i32 %24, %23
  %26 = lshr i32 %23, 3
  %27 = xor i32 %25, %26
  %28 = lshr i32 %23, 12
  %29 = xor i32 %27, %28
  %30 = shl nuw nsw i32 %29, 15
  %31 = or i32 %30, %24
  %32 = trunc i32 %31 to i16
  %33 = lshr i32 %31, 5
  %34 = and i32 %33, 2047
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i32
  %39 = add nsw i32 %9, %38
  %40 = ashr i32 %39, %5
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds i8, i8* %12, i64 %21
  store i8 %41, i8* %42, align 1
  %43 = add nuw nsw i64 %21, 1
  %44 = icmp eq i64 %43, 82
  br i1 %44, label %15, label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi8EE20GenerateChromaGrainsERKNS_15FilmGrainParamsEiiPaS5_(%"struct.libgav1::FilmGrainParams"* dereferenceable(172), i32, i32, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 22
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 4
  %9 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = mul nsw i32 %2, %1
  %18 = sext i32 %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 %18, i1 false)
  br label %60

19:                                               ; preds = %12, %5
  %20 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 20
  %21 = load i16, i16* %20, align 2
  %22 = xor i16 %21, -19164
  %23 = sext i32 %1 to i64
  %24 = shl i32 1, %8
  %25 = ashr i32 %24, 1
  br label %26

26:                                               ; preds = %55, %19
  %27 = phi i16 [ %22, %19 ], [ %56, %55 ]
  %28 = phi i8* [ %3, %19 ], [ %57, %55 ]
  %29 = phi i32 [ 0, %19 ], [ %58, %55 ]
  br label %30

30:                                               ; preds = %30, %26
  %31 = phi i64 [ %53, %30 ], [ 0, %26 ]
  %32 = phi i16 [ %42, %30 ], [ %27, %26 ]
  %33 = zext i16 %32 to i32
  %34 = lshr i32 %33, 1
  %35 = xor i32 %34, %33
  %36 = lshr i32 %33, 3
  %37 = xor i32 %35, %36
  %38 = lshr i32 %33, 12
  %39 = xor i32 %37, %38
  %40 = shl nuw nsw i32 %39, 15
  %41 = or i32 %40, %34
  %42 = trunc i32 %41 to i16
  %43 = lshr i32 %41, 5
  %44 = and i32 %43, 2047
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = sext i16 %47 to i32
  %49 = add nsw i32 %25, %48
  %50 = ashr i32 %49, %8
  %51 = trunc i32 %50 to i8
  %52 = getelementptr inbounds i8, i8* %28, i64 %31
  store i8 %51, i8* %52, align 1
  %53 = add nuw nsw i64 %31, 1
  %54 = icmp slt i64 %53, %23
  br i1 %54, label %30, label %55

55:                                               ; preds = %30
  %56 = trunc i32 %41 to i16
  %57 = getelementptr inbounds i8, i8* %28, i64 %23
  %58 = add nuw nsw i32 %29, 1
  %59 = icmp slt i32 %58, %2
  br i1 %59, label %26, label %60

60:                                               ; preds = %55, %16
  %61 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 7
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 2
  %66 = load i8, i8* %65, align 2, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %64
  %69 = mul nsw i32 %2, %1
  %70 = sext i32 %69 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 %70, i1 false)
  br label %112

71:                                               ; preds = %64, %60
  %72 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 20
  %73 = load i16, i16* %72, align 2
  %74 = xor i16 %73, 18904
  %75 = sext i32 %1 to i64
  %76 = shl i32 1, %8
  %77 = ashr i32 %76, 1
  br label %78

78:                                               ; preds = %107, %71
  %79 = phi i16 [ %74, %71 ], [ %108, %107 ]
  %80 = phi i8* [ %4, %71 ], [ %109, %107 ]
  %81 = phi i32 [ 0, %71 ], [ %110, %107 ]
  br label %82

82:                                               ; preds = %82, %78
  %83 = phi i64 [ %105, %82 ], [ 0, %78 ]
  %84 = phi i16 [ %94, %82 ], [ %79, %78 ]
  %85 = zext i16 %84 to i32
  %86 = lshr i32 %85, 1
  %87 = xor i32 %86, %85
  %88 = lshr i32 %85, 3
  %89 = xor i32 %87, %88
  %90 = lshr i32 %85, 12
  %91 = xor i32 %89, %90
  %92 = shl nuw nsw i32 %91, 15
  %93 = or i32 %92, %86
  %94 = trunc i32 %93 to i16
  %95 = lshr i32 %93, 5
  %96 = and i32 %95, 2047
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = sext i16 %99 to i32
  %101 = add nsw i32 %77, %100
  %102 = ashr i32 %101, %8
  %103 = trunc i32 %102 to i8
  %104 = getelementptr inbounds i8, i8* %80, i64 %83
  store i8 %103, i8* %104, align 1
  %105 = add nuw nsw i64 %83, 1
  %106 = icmp slt i64 %105, %75
  br i1 %106, label %82, label %107

107:                                              ; preds = %82
  %108 = trunc i32 %93 to i16
  %109 = getelementptr inbounds i8, i8* %80, i64 %75
  %110 = add nuw nsw i32 %81, 1
  %111 = icmp slt i32 %110, %2
  br i1 %111, label %78, label %112

112:                                              ; preds = %107, %68
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi8EE19ConstructNoiseImageEPKNS_11Array2DViewIaEEiiiiiPNS_7Array2DIaEE(%"class.libgav1::Array2DView"*, i32, i32, i32, i32, i32, %"class.libgav1::Array2D"*) local_unnamed_addr #0 comdat align 2 {
  %8 = add nsw i32 %3, %1
  %9 = ashr i32 %8, %3
  %10 = add nsw i32 %4, %2
  %11 = ashr i32 %10, %4
  %12 = lshr i32 32, %4
  %13 = getelementptr inbounds %"class.libgav1::Array2DView", %"class.libgav1::Array2DView"* %0, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.libgav1::Array2D", %"class.libgav1::Array2D"* %6, i64 0, i32 3, i32 1
  %16 = getelementptr inbounds %"class.libgav1::Array2D", %"class.libgav1::Array2D"* %6, i64 0, i32 3, i32 2
  %17 = sext i32 %9 to i64
  %18 = icmp slt i32 %11, %12
  %19 = select i1 %18, i32 %11, i32 %12
  %20 = sext i32 %19 to i64
  br label %21

21:                                               ; preds = %21, %7
  %22 = phi i64 [ %32, %21 ], [ 0, %7 ]
  %23 = load i32, i32* %15, align 4
  %24 = sext i32 %23 to i64
  %25 = mul nsw i64 %22, %24
  %26 = load i8*, i8** %16, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = trunc i64 %22 to i32
  %29 = mul nsw i32 %9, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %14, i64 %30
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %31, i64 %17, i1 false)
  %32 = add nuw nsw i64 %22, 1
  %33 = icmp slt i64 %32, %20
  br i1 %33, label %21, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.libgav1::Array2DView", %"class.libgav1::Array2DView"* %0, i64 0, i32 1
  %36 = trunc i64 %32 to i32
  %37 = sub nsw i32 0, %12
  %38 = and i32 %11, %37
  %39 = icmp sgt i32 %38, %36
  br i1 %39, label %40, label %72

40:                                               ; preds = %34
  %41 = sext i32 %5 to i64
  %42 = sext i32 %12 to i64
  %43 = and i64 %32, 4294967295
  %44 = sext i32 %38 to i64
  br label %45

45:                                               ; preds = %40, %65
  %46 = phi i64 [ %43, %40 ], [ %67, %65 ]
  %47 = phi i64 [ 1, %40 ], [ %66, %65 ]
  %48 = load i32, i32* %35, align 4
  %49 = sext i32 %48 to i64
  %50 = mul nsw i64 %47, %49
  %51 = load i8*, i8** %13, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  br label %53

53:                                               ; preds = %53, %45
  %54 = phi i64 [ %63, %53 ], [ %41, %45 ]
  %55 = add nsw i64 %54, %46
  %56 = load i32, i32* %15, align 4
  %57 = sext i32 %56 to i64
  %58 = mul nsw i64 %55, %57
  %59 = load i8*, i8** %16, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = mul nsw i64 %54, %17
  %62 = getelementptr inbounds i8, i8* %52, i64 %61
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %62, i64 %17, i1 false)
  %63 = add nsw i64 %54, 1
  %64 = icmp slt i64 %63, %42
  br i1 %64, label %53, label %65

65:                                               ; preds = %53
  %66 = add nuw i64 %47, 1
  %67 = add nsw i64 %46, %42
  %68 = icmp slt i64 %67, %44
  br i1 %68, label %45, label %69

69:                                               ; preds = %65
  %70 = trunc i64 %67 to i32
  %71 = and i64 %66, 4294967295
  br label %72

72:                                               ; preds = %69, %34
  %73 = phi i32 [ %36, %34 ], [ %70, %69 ]
  %74 = phi i64 [ 1, %34 ], [ %71, %69 ]
  %75 = sub i32 %11, %73
  %76 = icmp sgt i32 %75, %5
  br i1 %76, label %77, label %125

77:                                               ; preds = %72
  %78 = load i32, i32* %35, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %74, %79
  %81 = load i8*, i8** %13, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %80
  %83 = sext i32 %5 to i64
  %84 = sext i32 %73 to i64
  %85 = sext i32 %75 to i64
  %86 = sub nsw i64 %85, %83
  %87 = xor i64 %83, -1
  %88 = and i64 %86, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %77
  %91 = add nsw i64 %83, %84
  %92 = load i32, i32* %15, align 4
  %93 = sext i32 %92 to i64
  %94 = mul nsw i64 %91, %93
  %95 = load i8*, i8** %16, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 %94
  %97 = mul nsw i64 %83, %17
  %98 = getelementptr inbounds i8, i8* %82, i64 %97
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %98, i64 %17, i1 false)
  %99 = add nsw i64 %83, 1
  br label %100

100:                                              ; preds = %77, %90
  %101 = phi i64 [ %83, %77 ], [ %99, %90 ]
  %102 = sub nsw i64 0, %85
  %103 = icmp eq i64 %87, %102
  br i1 %103, label %125, label %104

104:                                              ; preds = %100, %104
  %105 = phi i64 [ %123, %104 ], [ %101, %100 ]
  %106 = add nsw i64 %105, %84
  %107 = load i32, i32* %15, align 4
  %108 = sext i32 %107 to i64
  %109 = mul nsw i64 %106, %108
  %110 = load i8*, i8** %16, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 %109
  %112 = mul nsw i64 %105, %17
  %113 = getelementptr inbounds i8, i8* %82, i64 %112
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %111, i8* align 1 %113, i64 %17, i1 false)
  %114 = add nsw i64 %105, 1
  %115 = add nsw i64 %114, %84
  %116 = load i32, i32* %15, align 4
  %117 = sext i32 %116 to i64
  %118 = mul nsw i64 %115, %117
  %119 = load i8*, i8** %16, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %118
  %121 = mul nsw i64 %114, %17
  %122 = getelementptr inbounds i8, i8* %82, i64 %121
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %120, i8* align 1 %122, i64 %17, i1 false)
  %123 = add nsw i64 %105, 2
  %124 = icmp eq i64 %123, %85
  br i1 %124, label %125, label %104

125:                                              ; preds = %100, %104, %72
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_l(%"class.libgav1::FilmGrain"*, i8*, i64, i8*, i8*, i64, i8*, i64, i8*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %12 = alloca %"struct.libgav1::dsp::Dsp", align 8
  %13 = alloca %"class.std::__1::unique_lock", align 8
  %14 = alloca %"class.std::__1::unique_lock", align 8
  %15 = alloca %"struct.libgav1::dsp::Dsp", align 8
  %16 = alloca [2 x i8], align 1
  %17 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %18 = alloca %"struct.std::__1::atomic", align 4
  %19 = alloca %"class.std::__1::function", align 8
  %20 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %21 = alloca %"struct.std::__1::atomic", align 4
  %22 = alloca %"class.std::__1::function", align 8
  %23 = tail call zeroext i1 @_ZN7libgav19FilmGrainILi8EE4InitEv(%"class.libgav1::FilmGrain"* %0)
  br i1 %23, label %24, label %707

24:                                               ; preds = %11
  %25 = tail call zeroext i1 @_ZN7libgav19FilmGrainILi8EE20AllocateNoiseStripesEv(%"class.libgav1::FilmGrain"* %0)
  br i1 %25, label %26, label %707

26:                                               ; preds = %24
  %27 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #9
  %28 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 0
  %29 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %30 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %29, i64 0, i32 5
  %31 = load i8, i8* %30, align 1
  %32 = icmp ne i8 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %29, i64 0, i32 3
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 2, i64 %36
  %38 = load void (i8*, i32, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i32, i8*)** %37, align 8
  %39 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 9, i64 0
  %40 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %29, i64 0, i32 20
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 0
  %48 = bitcast %"class.libgav1::Array2DView"* %47 to i8*
  tail call void %38(i8* %39, i32 %42, i32 %44, i32 %46, i32 0, i32 0, i8* %48) #9
  br label %49

49:                                               ; preds = %33, %26
  %50 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 1
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %90

53:                                               ; preds = %49
  %54 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %55 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %54, i64 0, i32 3
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 2, i64 %57
  %59 = load void (i8*, i32, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i32, i8*)** %58, align 8
  %60 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 10, i64 0
  %61 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %54, i64 0, i32 20
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 1
  %73 = bitcast %"class.libgav1::Array2DView"* %72 to i8*
  tail call void %59(i8* %60, i32 %63, i32 %65, i32 %67, i32 %69, i32 %71, i8* %73) #9
  %74 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %75 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %74, i64 0, i32 3
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 2, i64 %77
  %79 = load void (i8*, i32, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i32, i8*)** %78, align 8
  %80 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 11, i64 0
  %81 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %74, i64 0, i32 20
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = load i32, i32* %64, align 4
  %85 = load i32, i32* %66, align 8
  %86 = load i32, i32* %68, align 4
  %87 = load i32, i32* %70, align 8
  %88 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 2
  %89 = bitcast %"class.libgav1::Array2DView"* %88 to i8*
  tail call void %79(i8* %80, i32 %83, i32 %84, i32 %85, i32 %86, i32 %87, i8* %89) #9
  br label %90

90:                                               ; preds = %49, %53
  %91 = tail call zeroext i1 @_ZN7libgav19FilmGrainILi8EE18AllocateNoiseImageEv(%"class.libgav1::FilmGrain"* %0)
  br i1 %91, label %92, label %707

92:                                               ; preds = %90
  br i1 %32, label %93, label %239

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %97 = load i32, i32* %96, align 8
  %98 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %99 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %98, i64 0, i32 3
  %100 = load i8, i8* %99, align 1, !range !2
  %101 = shl nuw nsw i8 %100, 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 0, i32 2
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0, i32 3, i32 1
  %106 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0, i32 3, i32 2
  %107 = sext i32 %95 to i64
  %108 = icmp slt i32 %97, 32
  %109 = select i1 %108, i32 %97, i32 32
  %110 = sext i32 %109 to i64
  br label %111

111:                                              ; preds = %111, %93
  %112 = phi i64 [ %122, %111 ], [ 0, %93 ]
  %113 = load i32, i32* %105, align 4
  %114 = sext i32 %113 to i64
  %115 = mul nsw i64 %112, %114
  %116 = load i8*, i8** %106, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 %115
  %118 = trunc i64 %112 to i32
  %119 = mul nsw i32 %95, %118
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %104, i64 %120
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %117, i8* align 1 %121, i64 %107, i1 false) #9
  %122 = add nuw nsw i64 %112, 1
  %123 = icmp slt i64 %122, %110
  br i1 %123, label %111, label %124

124:                                              ; preds = %111
  %125 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 0
  %126 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %127 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 0, i32 1
  %128 = trunc i64 %122 to i32
  %129 = and i32 %97, -32
  %130 = icmp sgt i32 %129, %128
  br i1 %130, label %131, label %175

131:                                              ; preds = %124
  %132 = zext i8 %101 to i64
  %133 = and i64 %122, 4294967295
  %134 = sext i32 %129 to i64
  %135 = sub nuw nsw i64 -2, %112
  %136 = add i64 %135, %134
  %137 = lshr i64 %136, 5
  %138 = add nuw nsw i64 %137, 2
  br label %139

139:                                              ; preds = %168, %131
  %140 = phi i64 [ %133, %131 ], [ %170, %168 ]
  %141 = phi i64 [ 1, %131 ], [ %169, %168 ]
  %142 = load i32, i32* %127, align 4
  %143 = sext i32 %142 to i64
  %144 = mul nsw i64 %141, %143
  %145 = load i8*, i8** %103, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 %144
  br label %147

147:                                              ; preds = %147, %139
  %148 = phi i64 [ %132, %139 ], [ %166, %147 ]
  %149 = add nsw i64 %148, %140
  %150 = load i32, i32* %105, align 4
  %151 = sext i32 %150 to i64
  %152 = mul nsw i64 %149, %151
  %153 = load i8*, i8** %106, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 %152
  %155 = mul nsw i64 %148, %107
  %156 = getelementptr inbounds i8, i8* %146, i64 %155
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %156, i64 %107, i1 false) #9
  %157 = or i64 %148, 1
  %158 = add nsw i64 %157, %140
  %159 = load i32, i32* %105, align 4
  %160 = sext i32 %159 to i64
  %161 = mul nsw i64 %158, %160
  %162 = load i8*, i8** %106, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %161
  %164 = mul nsw i64 %157, %107
  %165 = getelementptr inbounds i8, i8* %146, i64 %164
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 %165, i64 %107, i1 false) #9
  %166 = add nuw nsw i64 %148, 2
  %167 = icmp eq i64 %166, 32
  br i1 %167, label %168, label %147

168:                                              ; preds = %147
  %169 = add nuw nsw i64 %141, 1
  %170 = add nuw nsw i64 %140, 32
  %171 = icmp eq i64 %169, %138
  br i1 %171, label %172, label %139

172:                                              ; preds = %168
  %173 = trunc i64 %170 to i32
  %174 = and i64 %138, 4294967295
  br label %175

175:                                              ; preds = %172, %124
  %176 = phi i32 [ %128, %124 ], [ %173, %172 ]
  %177 = phi i64 [ 1, %124 ], [ %174, %172 ]
  %178 = sub i32 %97, %176
  %179 = icmp sgt i32 %178, %102
  br i1 %179, label %180, label %227

180:                                              ; preds = %175
  %181 = load i32, i32* %127, align 4
  %182 = sext i32 %181 to i64
  %183 = mul nsw i64 %177, %182
  %184 = load i8*, i8** %103, align 8
  %185 = getelementptr inbounds i8, i8* %184, i64 %183
  %186 = zext i8 %101 to i64
  %187 = sext i32 %176 to i64
  %188 = sext i32 %178 to i64
  %189 = xor i64 %186, -1
  %190 = and i64 %188, 1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %202, label %192

192:                                              ; preds = %180
  %193 = add nsw i64 %186, %187
  %194 = load i32, i32* %105, align 4
  %195 = sext i32 %194 to i64
  %196 = mul nsw i64 %193, %195
  %197 = load i8*, i8** %106, align 8
  %198 = getelementptr inbounds i8, i8* %197, i64 %196
  %199 = mul nsw i64 %186, %107
  %200 = getelementptr inbounds i8, i8* %185, i64 %199
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %198, i8* align 1 %200, i64 %107, i1 false) #9
  %201 = or i64 %186, 1
  br label %202

202:                                              ; preds = %180, %192
  %203 = phi i64 [ %186, %180 ], [ %201, %192 ]
  %204 = sub nsw i64 0, %188
  %205 = icmp eq i64 %189, %204
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %206
  %207 = phi i64 [ %225, %206 ], [ %203, %202 ]
  %208 = add nsw i64 %207, %187
  %209 = load i32, i32* %105, align 4
  %210 = sext i32 %209 to i64
  %211 = mul nsw i64 %208, %210
  %212 = load i8*, i8** %106, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 %211
  %214 = mul nsw i64 %207, %107
  %215 = getelementptr inbounds i8, i8* %185, i64 %214
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %213, i8* align 1 %215, i64 %107, i1 false) #9
  %216 = add nuw nsw i64 %207, 1
  %217 = add nsw i64 %216, %187
  %218 = load i32, i32* %105, align 4
  %219 = sext i32 %218 to i64
  %220 = mul nsw i64 %217, %219
  %221 = load i8*, i8** %106, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 %220
  %223 = mul nsw i64 %216, %107
  %224 = getelementptr inbounds i8, i8* %185, i64 %223
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %222, i8* align 1 %224, i64 %107, i1 false) #9
  %225 = add nuw nsw i64 %207, 2
  %226 = icmp eq i64 %225, %188
  br i1 %226, label %227, label %206

227:                                              ; preds = %202, %206, %175
  %228 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %229 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %228, i64 0, i32 3
  %230 = load i8, i8* %229, align 1, !range !2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %239, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 3
  %234 = load void (i8*, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i8*)** %233, align 8
  %235 = bitcast %"class.libgav1::Array2DView"* %125 to i8*
  %236 = load i32, i32* %94, align 4
  %237 = load i32, i32* %96, align 8
  %238 = bitcast %"class.libgav1::Array2D"* %126 to i8*
  tail call void %234(i8* %235, i32 %236, i32 %237, i32 0, i32 0, i8* %238) #9
  br label %239

239:                                              ; preds = %227, %232, %92
  %240 = load i8, i8* %50, align 8, !range !2
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %291

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 1
  %244 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %245 = load i32, i32* %244, align 4
  %246 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %247 = load i32, i32* %246, align 8
  %248 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %251 = load i32, i32* %250, align 8
  %252 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %253 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %252, i64 0, i32 3
  %254 = load i8, i8* %253, align 1, !range !2
  %255 = zext i8 %254 to i32
  %256 = sub nsw i32 1, %251
  %257 = shl i32 %255, %256
  %258 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 1
  tail call void @_ZN7libgav19FilmGrainILi8EE19ConstructNoiseImageEPKNS_11Array2DViewIaEEiiiiiPNS_7Array2DIaEE(%"class.libgav1::Array2DView"* %243, i32 %245, i32 %247, i32 %249, i32 %251, i32 %257, %"class.libgav1::Array2D"* %258)
  %259 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 2
  %260 = load i32, i32* %244, align 4
  %261 = load i32, i32* %246, align 8
  %262 = load i32, i32* %248, align 4
  %263 = load i32, i32* %250, align 8
  %264 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %265 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %264, i64 0, i32 3
  %266 = load i8, i8* %265, align 1, !range !2
  %267 = zext i8 %266 to i32
  %268 = sub nsw i32 1, %263
  %269 = shl i32 %267, %268
  %270 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 2
  tail call void @_ZN7libgav19FilmGrainILi8EE19ConstructNoiseImageEPKNS_11Array2DViewIaEEiiiiiPNS_7Array2DIaEE(%"class.libgav1::Array2DView"* %259, i32 %260, i32 %261, i32 %262, i32 %263, i32 %269, %"class.libgav1::Array2D"* %270)
  %271 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %272 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %271, i64 0, i32 3
  %273 = load i8, i8* %272, align 1, !range !2
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %291, label %275

275:                                              ; preds = %242
  %276 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 3
  %277 = load void (i8*, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i8*)** %276, align 8
  %278 = bitcast %"class.libgav1::Array2DView"* %243 to i8*
  %279 = load i32, i32* %244, align 4
  %280 = load i32, i32* %246, align 8
  %281 = load i32, i32* %248, align 4
  %282 = load i32, i32* %250, align 8
  %283 = bitcast %"class.libgav1::Array2D"* %258 to i8*
  tail call void %277(i8* %278, i32 %279, i32 %280, i32 %281, i32 %282, i8* %283) #9
  %284 = load void (i8*, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i8*)** %276, align 8
  %285 = bitcast %"class.libgav1::Array2DView"* %259 to i8*
  %286 = load i32, i32* %244, align 4
  %287 = load i32, i32* %246, align 8
  %288 = load i32, i32* %248, align 4
  %289 = load i32, i32* %250, align 8
  %290 = bitcast %"class.libgav1::Array2D"* %270 to i8*
  tail call void %284(i8* %285, i32 %286, i32 %287, i32 %288, i32 %289, i8* %290) #9
  br label %291

291:                                              ; preds = %242, %239, %275
  %292 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %293 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %292, i64 0, i32 4
  %294 = load i8, i8* %293, align 4, !range !2
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %301, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 2
  %298 = load i8, i8* %297, align 1, !range !2
  %299 = icmp eq i8 %298, 0
  %300 = select i1 %299, i32 240, i32 235
  br label %301

301:                                              ; preds = %291, %296
  %302 = phi i32 [ 16, %296 ], [ 0, %291 ]
  %303 = phi i32 [ 235, %296 ], [ 255, %291 ]
  %304 = phi i32 [ %300, %296 ], [ 255, %291 ]
  %305 = load i8, i8* %50, align 8, !range !2
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %307, label %566

307:                                              ; preds = %301
  %308 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %308) #9
  store i8 -86, i8* %308, align 1
  %309 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 1
  store i8 -86, i8* %309, align 1
  %310 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %292, i64 0, i32 2
  %311 = load i8, i8* %310, align 2, !range !2
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %314, label %313

313:                                              ; preds = %307
  store i8 1, i8* %308, align 1
  store i8 2, i8* %309, align 1
  br label %367

314:                                              ; preds = %307
  %315 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %316 = load i32, i32* %315, align 8
  %317 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %318 = load i32, i32* %317, align 8
  %319 = add nsw i32 %318, %316
  %320 = ashr i32 %319, %318
  %321 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %322 = load i32, i32* %321, align 4
  %323 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %324 = load i32, i32* %323, align 4
  %325 = add nsw i32 %324, %322
  %326 = ashr i32 %325, %324
  %327 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %292, i64 0, i32 6
  %328 = load i8, i8* %327, align 2
  %329 = icmp eq i8 %328, 0
  br i1 %329, label %330, label %342

330:                                              ; preds = %314
  %331 = icmp eq i8* %3, %8
  br i1 %331, label %345, label %332

332:                                              ; preds = %330
  %333 = sext i32 %326 to i64
  br label %334

334:                                              ; preds = %334, %332
  %335 = phi i8* [ %339, %334 ], [ %8, %332 ]
  %336 = phi i8* [ %338, %334 ], [ %3, %332 ]
  %337 = phi i32 [ %340, %334 ], [ 0, %332 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %335, i8* align 1 %336, i64 %333, i1 false) #9
  %338 = getelementptr inbounds i8, i8* %336, i64 %5
  %339 = getelementptr inbounds i8, i8* %335, i64 %10
  %340 = add nuw nsw i32 %337, 1
  %341 = icmp slt i32 %340, %320
  br i1 %341, label %334, label %343

342:                                              ; preds = %314
  store i8 1, i8* %308, align 1
  br label %345

343:                                              ; preds = %334
  %344 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  br label %345

345:                                              ; preds = %343, %330, %342
  %346 = phi %"struct.libgav1::FilmGrainParams"* [ %292, %342 ], [ %292, %330 ], [ %344, %343 ]
  %347 = phi i32 [ 1, %342 ], [ 0, %330 ], [ 0, %343 ]
  %348 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %346, i64 0, i32 7
  %349 = load i8, i8* %348, align 1
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %351, label %363

351:                                              ; preds = %345
  %352 = icmp eq i8* %4, %9
  br i1 %352, label %367, label %353

353:                                              ; preds = %351
  %354 = sext i32 %326 to i64
  br label %355

355:                                              ; preds = %355, %353
  %356 = phi i8* [ %360, %355 ], [ %9, %353 ]
  %357 = phi i8* [ %359, %355 ], [ %4, %353 ]
  %358 = phi i32 [ %361, %355 ], [ 0, %353 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %356, i8* align 1 %357, i64 %354, i1 false) #9
  %359 = getelementptr inbounds i8, i8* %357, i64 %5
  %360 = getelementptr inbounds i8, i8* %356, i64 %10
  %361 = add nuw nsw i32 %358, 1
  %362 = icmp slt i32 %361, %320
  br i1 %362, label %355, label %367

363:                                              ; preds = %345
  %364 = add nuw nsw i32 %347, 1
  %365 = zext i32 %347 to i64
  %366 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 %365
  store i8 2, i8* %366, align 1
  br label %367

367:                                              ; preds = %355, %351, %363, %313
  %368 = phi i32 [ 2, %313 ], [ %364, %363 ], [ %347, %351 ], [ %347, %355 ]
  %369 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 19
  %370 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %369, align 8
  %371 = icmp ne %"class.libgav1::ThreadPool"* %370, null
  %372 = icmp sgt i32 %368, 0
  %373 = and i1 %372, %371
  br i1 %373, label %374, label %512

374:                                              ; preds = %367
  %375 = tail call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* nonnull %370) #9
  %376 = bitcast %"class.libgav1::BlockingCounterImpl"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %376) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %376, i8 -86, i64 96, i1 false)
  %377 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %376, i8 0, i64 88, i1 false) #9
  store i32 %375, i32* %377, align 8
  %378 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 3
  store i8 0, i8* %378, align 4
  %379 = bitcast %"struct.std::__1::atomic"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %379) #9
  %380 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %380, align 4
  %381 = icmp sgt i32 %375, 0
  br i1 %381, label %382, label %388

382:                                              ; preds = %374
  %383 = bitcast %"struct.libgav1::dsp::Dsp"* %27 to i8*
  %384 = bitcast %"struct.libgav1::dsp::Dsp"* %12 to i8*
  %385 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %19, i64 0, i32 0, i32 1, i32 0
  %386 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %19, i64 0, i32 0, i32 2
  %387 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %19, i64 0, i32 0, i32 0, i32 0
  br label %465

388:                                              ; preds = %509, %374
  %389 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %390 = load i32, i32* %389, align 8
  %391 = sdiv i32 %390, 8
  %392 = and i32 %390, 7
  %393 = mul nsw i32 %391, %368
  %394 = icmp eq i32 %392, 0
  %395 = select i1 %394, i32 0, i32 %368
  %396 = add nsw i32 %395, %393
  %397 = atomicrmw add i32* %380, i32 1 monotonic
  %398 = icmp slt i32 %397, %396
  br i1 %398, label %399, label %446

399:                                              ; preds = %388
  %400 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 13
  %401 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 14
  %402 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %403 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %404 = bitcast %"class.libgav1::Array2D"* %403 to i8*
  %405 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %406 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  br label %407

407:                                              ; preds = %444, %399
  %408 = phi i32 [ %390, %399 ], [ %445, %444 ]
  %409 = phi i32 [ %397, %399 ], [ %442, %444 ]
  %410 = srem i32 %409, %368
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 %411
  %413 = load i8, i8* %412, align 1
  %414 = sdiv i32 %409, %368
  %415 = shl nsw i32 %414, 3
  %416 = sub nsw i32 %408, %415
  %417 = icmp slt i32 %416, 8
  %418 = select i1 %417, i32 %416, i32 8
  %419 = sext i32 %415 to i64
  %420 = mul nsw i64 %419, %2
  %421 = getelementptr inbounds i8, i8* %1, i64 %420
  %422 = icmp eq i8 %413, 1
  %423 = select i1 %422, i8** %400, i8** %401
  %424 = select i1 %422, i8* %3, i8* %4
  %425 = select i1 %422, i8* %8, i8* %9
  %426 = load i8*, i8** %423, align 8
  %427 = load i32, i32* %402, align 8
  %428 = ashr i32 %415, %427
  %429 = sext i32 %428 to i64
  %430 = mul nsw i64 %429, %5
  %431 = getelementptr inbounds i8, i8* %424, i64 %430
  %432 = mul nsw i64 %429, %10
  %433 = getelementptr inbounds i8, i8* %425, i64 %432
  %434 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %435 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %434, i64 0, i32 2
  %436 = load i8, i8* %435, align 2, !range !2
  %437 = zext i8 %436 to i64
  %438 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 6, i64 %437
  %439 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %438, align 8
  %440 = load i32, i32* %405, align 4
  %441 = load i32, i32* %406, align 4
  call void %439(i8 zeroext %413, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %434, i8* %404, i32 %302, i32 %304, i32 %440, i32 %418, i32 %415, i32 %441, i32 %427, i8* %426, i8* %421, i64 %2, i8* %431, i64 %5, i8* %433, i64 %10) #9
  %442 = atomicrmw add i32* %380, i32 1 monotonic
  %443 = icmp slt i32 %442, %396
  br i1 %443, label %444, label %446

444:                                              ; preds = %407
  %445 = load i32, i32* %389, align 8
  br label %407

446:                                              ; preds = %407, %388
  %447 = bitcast %"class.std::__1::unique_lock"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %447) #9
  %448 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %13, i64 0, i32 0
  %449 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %13, i64 0, i32 1
  %450 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %447, i8 -86, i64 16, i1 false) #9
  store %"class.std::__1::mutex"* %450, %"class.std::__1::mutex"** %448, align 8
  store i8 1, i8* %449, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %450) #9
  %451 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 1
  %452 = load i32, i32* %377, align 8
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %462, label %454

454:                                              ; preds = %446, %454
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %451, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %13) #9
  %455 = load i32, i32* %377, align 8
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %454

457:                                              ; preds = %454
  %458 = load i8, i8* %449, align 8, !range !2
  %459 = icmp eq i8 %458, 0
  br i1 %459, label %464, label %460

460:                                              ; preds = %457
  %461 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %448, align 8
  br label %462

462:                                              ; preds = %460, %446
  %463 = phi %"class.std::__1::mutex"* [ %461, %460 ], [ %450, %446 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %463) #9
  br label %464

464:                                              ; preds = %457, %462
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %379) #9
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %451) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %376) #9
  br label %565

465:                                              ; preds = %509, %382
  %466 = phi i32 [ 0, %382 ], [ %510, %509 ]
  %467 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %369, align 8
  call void @llvm.lifetime.start.p0i8(i64 3688, i8* nonnull %384)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %384, i8* align 8 %383, i64 3688, i1 false)
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %385, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %386, align 8
  %468 = call i8* @_Znwm(i64 3800) #10, !noalias !3
  %469 = bitcast i8* %468 to %"class.libgav1::FilmGrain"**
  store %"class.libgav1::FilmGrain"* %0, %"class.libgav1::FilmGrain"** %469, align 8
  %470 = getelementptr inbounds i8, i8* %468, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %470, i8* nonnull align 8 %384, i64 3688, i1 false)
  %471 = getelementptr inbounds i8, i8* %468, i64 3696
  %472 = bitcast i8* %471 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %17, %"class.libgav1::BlockingCounterImpl"** %472, align 8
  %473 = getelementptr inbounds i8, i8* %468, i64 3704
  %474 = bitcast i8* %473 to [2 x i8]**
  store [2 x i8]* %16, [2 x i8]** %474, align 8
  %475 = getelementptr inbounds i8, i8* %468, i64 3712
  %476 = bitcast i8* %475 to i32*
  store i32 %368, i32* %476, align 8
  %477 = getelementptr inbounds i8, i8* %468, i64 3720
  %478 = bitcast i8* %477 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %18, %"struct.std::__1::atomic"** %478, align 8
  %479 = getelementptr inbounds i8, i8* %468, i64 3728
  %480 = bitcast i8* %479 to i32*
  store i32 %302, i32* %480, align 8
  %481 = getelementptr inbounds i8, i8* %468, i64 3732
  %482 = bitcast i8* %481 to i32*
  store i32 %304, i32* %482, align 4
  %483 = getelementptr inbounds i8, i8* %468, i64 3736
  %484 = bitcast i8* %483 to i8**
  store i8* %1, i8** %484, align 8
  %485 = getelementptr inbounds i8, i8* %468, i64 3744
  %486 = bitcast i8* %485 to i64*
  store i64 %2, i64* %486, align 8
  %487 = getelementptr inbounds i8, i8* %468, i64 3752
  %488 = bitcast i8* %487 to i8**
  store i8* %3, i8** %488, align 8
  %489 = getelementptr inbounds i8, i8* %468, i64 3760
  %490 = bitcast i8* %489 to i8**
  store i8* %4, i8** %490, align 8
  %491 = getelementptr inbounds i8, i8* %468, i64 3768
  %492 = bitcast i8* %491 to i64*
  store i64 %5, i64* %492, align 8
  %493 = getelementptr inbounds i8, i8* %468, i64 3776
  %494 = bitcast i8* %493 to i8**
  store i8* %8, i8** %494, align 8
  %495 = getelementptr inbounds i8, i8* %468, i64 3784
  %496 = bitcast i8* %495 to i8**
  store i8* %9, i8** %496, align 8
  %497 = getelementptr inbounds i8, i8* %468, i64 3792
  %498 = bitcast i8* %497 to i64*
  store i64 %10, i64* %498, align 8
  store i8* %468, i8** %387, align 8
  call void @llvm.lifetime.end.p0i8(i64 3688, i8* nonnull %384)
  %499 = bitcast %"class.libgav1::ThreadPool"* %467 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %500 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %499, align 8
  %501 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %500, i64 2
  %502 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %501, align 8
  call void %502(%"class.libgav1::ThreadPool"* %467, %"class.std::__1::function"* nonnull %19) #9
  %503 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %386, align 8
  %504 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %503, i64 0, i32 1
  %505 = load void (i8*)*, void (i8*)** %504, align 8
  %506 = icmp eq void (i8*)* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %465
  %508 = load i8*, i8** %387, align 8
  call void %505(i8* %508) #9
  br label %509

509:                                              ; preds = %465, %507
  %510 = add nuw nsw i32 %466, 1
  %511 = icmp eq i32 %510, %375
  br i1 %511, label %388, label %465

512:                                              ; preds = %367
  %513 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %514 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %513, i64 0, i32 6
  %515 = load i8, i8* %514, align 2
  %516 = icmp eq i8 %515, 0
  %517 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %513, i64 0, i32 2
  %518 = load i8, i8* %517, align 2, !range !2
  br i1 %516, label %519, label %521

519:                                              ; preds = %512
  %520 = icmp eq i8 %518, 0
  br i1 %520, label %539, label %521

521:                                              ; preds = %512, %519
  %522 = phi i8 [ 1, %519 ], [ %518, %512 ]
  %523 = zext i8 %522 to i64
  %524 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 6, i64 %523
  %525 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %524, align 8
  %526 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %527 = bitcast %"class.libgav1::Array2D"* %526 to i8*
  %528 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %529 = load i32, i32* %528, align 4
  %530 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %531 = load i32, i32* %530, align 8
  %532 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %533 = load i32, i32* %532, align 4
  %534 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %535 = load i32, i32* %534, align 8
  %536 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 13
  %537 = load i8*, i8** %536, align 8
  tail call void %525(i8 zeroext 1, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %513, i8* %527, i32 %302, i32 %304, i32 %529, i32 %531, i32 0, i32 %533, i32 %535, i8* %537, i8* %1, i64 %2, i8* %3, i64 %5, i8* %8, i64 %10) #9
  %538 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  br label %539

539:                                              ; preds = %519, %521
  %540 = phi %"struct.libgav1::FilmGrainParams"* [ %513, %519 ], [ %538, %521 ]
  %541 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %540, i64 0, i32 7
  %542 = load i8, i8* %541, align 1
  %543 = icmp eq i8 %542, 0
  %544 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %540, i64 0, i32 2
  %545 = load i8, i8* %544, align 2, !range !2
  br i1 %543, label %546, label %548

546:                                              ; preds = %539
  %547 = icmp eq i8 %545, 0
  br i1 %547, label %565, label %548

548:                                              ; preds = %539, %546
  %549 = phi i8 [ 1, %546 ], [ %545, %539 ]
  %550 = zext i8 %549 to i64
  %551 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 6, i64 %550
  %552 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %551, align 8
  %553 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %554 = bitcast %"class.libgav1::Array2D"* %553 to i8*
  %555 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %556 = load i32, i32* %555, align 4
  %557 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %558 = load i32, i32* %557, align 8
  %559 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %560 = load i32, i32* %559, align 4
  %561 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %562 = load i32, i32* %561, align 8
  %563 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 14
  %564 = load i8*, i8** %563, align 8
  tail call void %552(i8 zeroext 2, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %540, i8* %554, i32 %302, i32 %304, i32 %556, i32 %558, i32 0, i32 %560, i32 %562, i8* %564, i8* %1, i64 %2, i8* %4, i64 %5, i8* %9, i64 %10) #9
  br label %565

565:                                              ; preds = %546, %548, %464
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %308) #9
  br label %566

566:                                              ; preds = %301, %565
  br i1 %32, label %567, label %691

567:                                              ; preds = %566
  %568 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 19
  %569 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %568, align 8
  %570 = icmp eq %"class.libgav1::ThreadPool"* %569, null
  br i1 %570, label %677, label %571

571:                                              ; preds = %567
  %572 = call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* nonnull %569) #9
  %573 = bitcast %"class.libgav1::BlockingCounterImpl"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %573) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %573, i8 -86, i64 96, i1 false)
  %574 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %573, i8 0, i64 88, i1 false) #9
  store i32 %572, i32* %574, align 8
  %575 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 3
  store i8 0, i8* %575, align 4
  %576 = bitcast %"struct.std::__1::atomic"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %576) #9
  %577 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %577, align 4
  %578 = icmp sgt i32 %572, 0
  br i1 %578, label %579, label %585

579:                                              ; preds = %571
  %580 = bitcast %"struct.libgav1::dsp::Dsp"* %27 to i8*
  %581 = bitcast %"struct.libgav1::dsp::Dsp"* %15 to i8*
  %582 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 1, i32 0
  %583 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 2
  %584 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 0, i32 0
  br label %642

585:                                              ; preds = %674, %571
  %586 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %587 = load i32, i32* %586, align 8
  %588 = sdiv i32 %587, 8
  %589 = and i32 %587, 7
  %590 = icmp ne i32 %589, 0
  %591 = zext i1 %590 to i32
  %592 = add nsw i32 %588, %591
  %593 = atomicrmw add i32* %577, i32 1 monotonic
  %594 = icmp slt i32 %593, %592
  br i1 %594, label %595, label %623

595:                                              ; preds = %585
  %596 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 5
  %597 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %598 = bitcast %"class.libgav1::Array2D"* %597 to i8*
  %599 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %600 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 12, i64 0
  br label %601

601:                                              ; preds = %621, %595
  %602 = phi i32 [ %587, %595 ], [ %622, %621 ]
  %603 = phi i32 [ %593, %595 ], [ %619, %621 ]
  %604 = shl nsw i32 %603, 3
  %605 = sub nsw i32 %602, %604
  %606 = icmp slt i32 %605, 8
  %607 = select i1 %606, i32 %605, i32 8
  %608 = sext i32 %604 to i64
  %609 = mul nsw i64 %608, %2
  %610 = getelementptr inbounds i8, i8* %1, i64 %609
  %611 = mul nsw i64 %608, %7
  %612 = getelementptr inbounds i8, i8* %6, i64 %611
  %613 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %596, align 8
  %614 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %615 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %614, i64 0, i32 14
  %616 = load i8, i8* %615, align 4
  %617 = zext i8 %616 to i32
  %618 = load i32, i32* %599, align 4
  call void %613(i8* %598, i32 %302, i32 %303, i32 %617, i32 %618, i32 %607, i32 %604, i8* %600, i8* %610, i64 %2, i8* %612, i64 %7) #9
  %619 = atomicrmw add i32* %577, i32 1 monotonic
  %620 = icmp slt i32 %619, %592
  br i1 %620, label %621, label %623

621:                                              ; preds = %601
  %622 = load i32, i32* %586, align 8
  br label %601

623:                                              ; preds = %601, %585
  %624 = bitcast %"class.std::__1::unique_lock"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %624) #9
  %625 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %14, i64 0, i32 0
  %626 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %14, i64 0, i32 1
  %627 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %624, i8 -86, i64 16, i1 false) #9
  store %"class.std::__1::mutex"* %627, %"class.std::__1::mutex"** %625, align 8
  store i8 1, i8* %626, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %627) #9
  %628 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 1
  %629 = load i32, i32* %574, align 8
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %639, label %631

631:                                              ; preds = %623, %631
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %628, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %14) #9
  %632 = load i32, i32* %574, align 8
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %634, label %631

634:                                              ; preds = %631
  %635 = load i8, i8* %626, align 8, !range !2
  %636 = icmp eq i8 %635, 0
  br i1 %636, label %641, label %637

637:                                              ; preds = %634
  %638 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %625, align 8
  br label %639

639:                                              ; preds = %637, %623
  %640 = phi %"class.std::__1::mutex"* [ %638, %637 ], [ %627, %623 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %640) #9
  br label %641

641:                                              ; preds = %634, %639
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %624) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %576) #9
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %628) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %573) #9
  br label %707

642:                                              ; preds = %674, %579
  %643 = phi i32 [ 0, %579 ], [ %675, %674 ]
  %644 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %568, align 8
  call void @llvm.lifetime.start.p0i8(i64 3688, i8* nonnull %581)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %581, i8* align 8 %580, i64 3688, i1 false)
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE0_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %582, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %583, align 8
  %645 = call i8* @_Znwm(i64 3752) #10, !noalias !8
  %646 = bitcast i8* %645 to %"class.libgav1::FilmGrain"**
  store %"class.libgav1::FilmGrain"* %0, %"class.libgav1::FilmGrain"** %646, align 8
  %647 = getelementptr inbounds i8, i8* %645, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %647, i8* nonnull align 8 %581, i64 3688, i1 false)
  %648 = getelementptr inbounds i8, i8* %645, i64 3696
  %649 = bitcast i8* %648 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %20, %"class.libgav1::BlockingCounterImpl"** %649, align 8
  %650 = getelementptr inbounds i8, i8* %645, i64 3704
  %651 = bitcast i8* %650 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %21, %"struct.std::__1::atomic"** %651, align 8
  %652 = getelementptr inbounds i8, i8* %645, i64 3712
  %653 = bitcast i8* %652 to i32*
  store i32 %302, i32* %653, align 8
  %654 = getelementptr inbounds i8, i8* %645, i64 3716
  %655 = bitcast i8* %654 to i32*
  store i32 %303, i32* %655, align 4
  %656 = getelementptr inbounds i8, i8* %645, i64 3720
  %657 = bitcast i8* %656 to i8**
  store i8* %1, i8** %657, align 8
  %658 = getelementptr inbounds i8, i8* %645, i64 3728
  %659 = bitcast i8* %658 to i64*
  store i64 %2, i64* %659, align 8
  %660 = getelementptr inbounds i8, i8* %645, i64 3736
  %661 = bitcast i8* %660 to i8**
  store i8* %6, i8** %661, align 8
  %662 = getelementptr inbounds i8, i8* %645, i64 3744
  %663 = bitcast i8* %662 to i64*
  store i64 %7, i64* %663, align 8
  store i8* %645, i8** %584, align 8
  call void @llvm.lifetime.end.p0i8(i64 3688, i8* nonnull %581)
  %664 = bitcast %"class.libgav1::ThreadPool"* %644 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %665 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %664, align 8
  %666 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %665, i64 2
  %667 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %666, align 8
  call void %667(%"class.libgav1::ThreadPool"* %644, %"class.std::__1::function"* nonnull %22) #9
  %668 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %583, align 8
  %669 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %668, i64 0, i32 1
  %670 = load void (i8*)*, void (i8*)** %669, align 8
  %671 = icmp eq void (i8*)* %670, null
  br i1 %671, label %674, label %672

672:                                              ; preds = %642
  %673 = load i8*, i8** %584, align 8
  call void %670(i8* %673) #9
  br label %674

674:                                              ; preds = %642, %672
  %675 = add nuw nsw i32 %643, 1
  %676 = icmp eq i32 %675, %572
  br i1 %676, label %585, label %642

677:                                              ; preds = %567
  %678 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 5
  %679 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %678, align 8
  %680 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %681 = bitcast %"class.libgav1::Array2D"* %680 to i8*
  %682 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %683 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %682, i64 0, i32 14
  %684 = load i8, i8* %683, align 4
  %685 = zext i8 %684 to i32
  %686 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %687 = load i32, i32* %686, align 4
  %688 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %689 = load i32, i32* %688, align 8
  %690 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 12, i64 0
  call void %679(i8* %681, i32 %302, i32 %303, i32 %685, i32 %687, i32 %689, i32 0, i8* %690, i8* %1, i64 %2, i8* %6, i64 %7) #9
  br label %707

691:                                              ; preds = %566
  %692 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %693 = load i32, i32* %692, align 8
  %694 = icmp eq i8* %1, %6
  br i1 %694, label %707, label %695

695:                                              ; preds = %691
  %696 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %697 = load i32, i32* %696, align 4
  %698 = sext i32 %697 to i64
  br label %699

699:                                              ; preds = %699, %695
  %700 = phi i8* [ %704, %699 ], [ %6, %695 ]
  %701 = phi i8* [ %703, %699 ], [ %1, %695 ]
  %702 = phi i32 [ %705, %699 ], [ 0, %695 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %700, i8* align 1 %701, i64 %698, i1 false) #9
  %703 = getelementptr inbounds i8, i8* %701, i64 %2
  %704 = getelementptr inbounds i8, i8* %700, i64 %7
  %705 = add nuw nsw i32 %702, 1
  %706 = icmp slt i32 %705, %693
  br i1 %706, label %699, label %707

707:                                              ; preds = %699, %691, %90, %641, %677, %24, %11
  %708 = phi i1 [ false, %11 ], [ false, %24 ], [ false, %90 ], [ true, %641 ], [ true, %677 ], [ true, %691 ], [ true, %699 ]
  ret i1 %708
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi8EE4InitEv(%"class.libgav1::FilmGrain"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 8) #9
  %3 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 0
  %4 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %5 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %4, i64 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  br i1 %7, label %8, label %61

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 9, i64 0
  %10 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %4, i64 0, i32 22
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 4
  %13 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %4, i64 0, i32 20
  %14 = load i16, i16* %13, align 2
  %15 = shl i32 1, %12
  %16 = ashr i32 %15, 1
  br label %17

17:                                               ; preds = %21, %8
  %18 = phi i32 [ 0, %8 ], [ %24, %21 ]
  %19 = phi i8* [ %9, %8 ], [ %23, %21 ]
  %20 = phi i16 [ %14, %8 ], [ %22, %21 ]
  br label %26

21:                                               ; preds = %26
  %22 = trunc i32 %37 to i16
  %23 = getelementptr inbounds i8, i8* %19, i64 82
  %24 = add nuw nsw i32 %18, 1
  %25 = icmp eq i32 %24, 73
  br i1 %25, label %51, label %17

26:                                               ; preds = %26, %17
  %27 = phi i64 [ 0, %17 ], [ %49, %26 ]
  %28 = phi i16 [ %20, %17 ], [ %38, %26 ]
  %29 = zext i16 %28 to i32
  %30 = lshr i32 %29, 1
  %31 = xor i32 %30, %29
  %32 = lshr i32 %29, 3
  %33 = xor i32 %31, %32
  %34 = lshr i32 %29, 12
  %35 = xor i32 %33, %34
  %36 = shl nuw nsw i32 %35, 15
  %37 = or i32 %36, %30
  %38 = trunc i32 %37 to i16
  %39 = lshr i32 %37, 5
  %40 = and i32 %39, 2047
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i32
  %45 = add nsw i32 %16, %44
  %46 = ashr i32 %45, %12
  %47 = trunc i32 %46 to i8
  %48 = getelementptr inbounds i8, i8* %19, i64 %27
  store i8 %47, i8* %48, align 1
  %49 = add nuw nsw i64 %27, 1
  %50 = icmp eq i64 %49, 82
  br i1 %50, label %21, label %26

51:                                               ; preds = %21
  %52 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %53 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %52, i64 0, i32 15
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = zext i8 %54 to i64
  %58 = add nsw i64 %57, -1
  %59 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 0, i64 %58
  %60 = load void (%"struct.libgav1::FilmGrainParams"*, i8*)*, void (%"struct.libgav1::FilmGrainParams"*, i8*)** %59, align 8
  tail call void %60(%"struct.libgav1::FilmGrainParams"* dereferenceable(172) %52, i8* %9) #9
  br label %61

61:                                               ; preds = %1, %51, %56
  %62 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %88

65:                                               ; preds = %61
  %66 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %67 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 7
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 8
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 10, i64 0
  %72 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 11, i64 0
  tail call void @_ZN7libgav19FilmGrainILi8EE20GenerateChromaGrainsERKNS_15FilmGrainParamsEiiPaS5_(%"struct.libgav1::FilmGrainParams"* dereferenceable(172) %66, i32 %68, i32 %70, i8* %71, i8* %72)
  %73 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %74 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %73, i64 0, i32 15
  %75 = load i8, i8* %74, align 1
  %76 = or i8 %75, %6
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %65
  %79 = zext i1 %7 to i64
  %80 = zext i8 %75 to i64
  %81 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 1, i64 %79, i64 %80
  %82 = load void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*, void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)** %81, align 8
  %83 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 9, i64 0
  %84 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  tail call void %82(%"struct.libgav1::FilmGrainParams"* dereferenceable(172) %73, i8* %83, i32 %85, i32 %87, i8* %71, i8* %72) #9
  br label %88

88:                                               ; preds = %65, %61, %78
  %89 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  br i1 %7, label %94, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %89, i64 0, i32 2
  %92 = load i8, i8* %91, align 2, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %103, label %94

94:                                               ; preds = %88, %90
  %95 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 4
  %96 = load void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)** %95, align 8
  %97 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %89, i64 0, i32 5
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %89, i64 0, i32 8, i64 0
  %101 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %89, i64 0, i32 9, i64 0
  %102 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 12, i64 0
  tail call void %96(i32 %99, i8* %100, i8* %101, i8* %102) #9
  br label %103

103:                                              ; preds = %90, %94
  %104 = load i8, i8* %62, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %167

106:                                              ; preds = %103
  %107 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %108 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %107, i64 0, i32 2
  %109 = load i8, i8* %108, align 2, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 12, i64 0
  %113 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 13
  store i8* %112, i8** %113, align 8
  %114 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 14
  store i8* %112, i8** %114, align 8
  br label %167

115:                                              ; preds = %106
  %116 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %107, i64 0, i32 6
  %117 = load i8, i8* %116, align 2
  %118 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %107, i64 0, i32 7
  %119 = load i8, i8* %118, align 1
  %120 = or i8 %117, %119
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %167, label %122

122:                                              ; preds = %115
  %123 = icmp ne i8 %117, 0
  %124 = zext i1 %123 to i64
  %125 = icmp ne i8 %119, 0
  %126 = zext i1 %125 to i64
  %127 = add nuw nsw i64 %126, %124
  %128 = mul nuw nsw i64 %127, 263
  %129 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %128, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %130 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  store i8* %129, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %122
  tail call void @_ZdaPv(i8* nonnull %131) #10
  %134 = load i8*, i8** %130, align 8
  br label %135

135:                                              ; preds = %122, %133
  %136 = phi i8* [ %129, %122 ], [ %134, %133 ]
  %137 = icmp eq i8* %136, null
  br i1 %137, label %167, label %138

138:                                              ; preds = %135
  %139 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %140 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %139, i64 0, i32 6
  %141 = load i8, i8* %140, align 2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %153, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 13
  store i8* %136, i8** %144, align 8
  %145 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 4
  %146 = load void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)** %145, align 8
  %147 = load i8, i8* %140, align 2
  %148 = zext i8 %147 to i32
  %149 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %139, i64 0, i32 10, i64 0
  %150 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %139, i64 0, i32 11, i64 0
  tail call void %146(i32 %148, i8* %149, i8* %150, i8* nonnull %136) #9
  %151 = getelementptr inbounds i8, i8* %136, i64 263
  %152 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  br label %153

153:                                              ; preds = %138, %143
  %154 = phi %"struct.libgav1::FilmGrainParams"* [ %152, %143 ], [ %139, %138 ]
  %155 = phi i8* [ %151, %143 ], [ %136, %138 ]
  %156 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %154, i64 0, i32 7
  %157 = load i8, i8* %156, align 1
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 14
  store i8* %155, i8** %160, align 8
  %161 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 4
  %162 = load void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)** %161, align 8
  %163 = load i8, i8* %156, align 1
  %164 = zext i8 %163 to i32
  %165 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %154, i64 0, i32 12, i64 0
  %166 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %154, i64 0, i32 13, i64 0
  tail call void %162(i32 %164, i8* %165, i8* %166, i8* %155) #9
  br label %167

167:                                              ; preds = %115, %135, %111, %103, %159, %153
  %168 = phi i1 [ true, %153 ], [ true, %159 ], [ true, %103 ], [ true, %111 ], [ false, %135 ], [ true, %115 ]
  ret i1 %168
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi8EE20AllocateNoiseStripesEv(%"class.libgav1::FilmGrain"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  %5 = ashr i32 %4, 1
  %6 = add nsw i32 %5, 15
  %7 = ashr i32 %6, 4
  %8 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 0
  %9 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %8, align 8
  %10 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %9, i64 0, i32 5
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = mul nsw i32 %7, 34
  %15 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = mul nsw i32 %14, %16
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %18, 7
  br label %20

20:                                               ; preds = %1, %13
  %21 = phi i64 [ %19, %13 ], [ 7, %1 ]
  %22 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %40

25:                                               ; preds = %20
  %26 = shl nsw i32 %7, 1
  %27 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = lshr i32 34, %28
  %30 = mul nsw i32 %26, %29
  %31 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %32
  %36 = ashr i32 %35, %34
  %37 = mul nsw i32 %30, %36
  %38 = sext i32 %37 to i64
  %39 = add nsw i64 %21, %38
  br label %40

40:                                               ; preds = %20, %25
  %41 = phi i64 [ %21, %20 ], [ %39, %25 ]
  %42 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %41, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %43 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  store i8* %42, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %40
  tail call void @_ZdaPv(i8* nonnull %44) #10
  %47 = load i8*, i8** %43, align 8
  br label %48

48:                                               ; preds = %40, %46
  %49 = phi i8* [ %42, %40 ], [ %47, %46 ]
  %50 = icmp eq i8* %49, null
  br i1 %50, label %91, label %51

51:                                               ; preds = %48
  %52 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %8, align 8
  %53 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %52, i64 0, i32 5
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, 34
  %60 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 0, i32 0
  store i32 %7, i32* %60, align 8
  %61 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 0, i32 1
  store i32 %59, i32* %61, align 4
  %62 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 0, i32 2
  store i8* %49, i8** %62, align 8
  %63 = mul nsw i32 %7, 34
  %64 = mul nsw i32 %63, %58
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %49, i64 %65
  br label %67

67:                                               ; preds = %51, %56
  %68 = phi i8* [ %66, %56 ], [ %49, %51 ]
  %69 = load i8, i8* %22, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %91

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = lshr i32 34, %73
  %75 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, %76
  %80 = ashr i32 %79, %78
  %81 = mul i32 %80, %74
  %82 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 1, i32 0
  store i32 %7, i32* %82, align 8
  %83 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 1, i32 1
  store i32 %81, i32* %83, align 4
  %84 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 1, i32 2
  store i8* %68, i8** %84, align 8
  %85 = mul i32 %81, %7
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %68, i64 %86
  %88 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 2, i32 0
  store i32 %7, i32* %88, align 8
  %89 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 2, i32 1
  store i32 %81, i32* %89, align 4
  %90 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 16, i64 2, i32 2
  store i8* %87, i8** %90, align 8
  br label %91

91:                                               ; preds = %71, %67, %48
  %92 = phi i1 [ false, %48 ], [ true, %67 ], [ true, %71 ]
  ret i1 %92
}

declare %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi8EE18AllocateNoiseImageEv(%"class.libgav1::FilmGrain"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 0
  %3 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %2, align 8
  %4 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %3, i64 0, i32 5
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %43, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %9 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 7
  %14 = mul nsw i32 %13, %10
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %15
  br i1 %19, label %23, label %20

20:                                               ; preds = %7
  %21 = bitcast %"class.libgav1::Array2D"* %8 to i64*
  %22 = load i64, i64* %21, align 8
  br label %36

23:                                               ; preds = %7
  %24 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %15, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %25 = getelementptr inbounds %"class.libgav1::Array2D", %"class.libgav1::Array2D"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8* %24, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  tail call void @_ZdaPv(i8* nonnull %26) #10
  %29 = load i8*, i8** %25, align 8
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %24, %23 ]
  %32 = icmp eq i8* %31, null
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = ptrtoint i8* %31 to i64
  %35 = load i64, i64* %16, align 8
  store i64 %35, i64* %17, align 8
  br label %36

36:                                               ; preds = %20, %33
  %37 = phi i64 [ %22, %20 ], [ %34, %33 ]
  %38 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0, i32 3, i32 0
  store i32 %10, i32* %38, align 8
  %39 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0, i32 3, i32 1
  store i32 %13, i32* %39, align 4
  %40 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0, i32 3, i32 2
  %41 = bitcast i8** %40 to i64*
  store i64 %37, i64* %41, align 8
  br label %43

42:                                               ; preds = %30
  store i64 0, i64* %17, align 8
  br label %133

43:                                               ; preds = %36, %1
  %44 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %133

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 1
  %49 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = add nsw i32 %52, %50
  %54 = ashr i32 %53, %52
  %55 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, %56
  %60 = ashr i32 %59, %58
  %61 = add nsw i32 %60, 7
  %62 = mul nsw i32 %61, %54
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 1, i32 2
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = icmp ult i64 %66, %63
  br i1 %67, label %71, label %68

68:                                               ; preds = %47
  %69 = bitcast %"class.libgav1::Array2D"* %48 to i64*
  %70 = load i64, i64* %69, align 8
  br label %96

71:                                               ; preds = %47
  %72 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %63, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %73 = getelementptr inbounds %"class.libgav1::Array2D", %"class.libgav1::Array2D"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  store i8* %72, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  tail call void @_ZdaPv(i8* nonnull %74) #10
  %77 = load i8*, i8** %73, align 8
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi i8* [ %77, %76 ], [ %72, %71 ]
  %80 = icmp eq i8* %79, null
  br i1 %80, label %95, label %81

81:                                               ; preds = %78
  %82 = ptrtoint i8* %79 to i64
  %83 = load i64, i64* %64, align 8
  store i64 %83, i64* %65, align 8
  %84 = load i32, i32* %49, align 8
  %85 = load i32, i32* %51, align 8
  %86 = load i32, i32* %55, align 4
  %87 = load i32, i32* %57, align 4
  %88 = add nsw i32 %85, %84
  %89 = ashr i32 %88, %85
  %90 = add nsw i32 %87, %86
  %91 = ashr i32 %90, %87
  %92 = add nsw i32 %91, 7
  %93 = mul nsw i32 %92, %89
  %94 = sext i32 %93 to i64
  br label %96

95:                                               ; preds = %78
  store i64 0, i64* %65, align 8
  br label %133

96:                                               ; preds = %68, %81
  %97 = phi i64 [ %63, %68 ], [ %94, %81 ]
  %98 = phi i32 [ %61, %68 ], [ %92, %81 ]
  %99 = phi i32 [ %54, %68 ], [ %89, %81 ]
  %100 = phi i64 [ %70, %68 ], [ %82, %81 ]
  %101 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 1, i32 3, i32 0
  store i32 %54, i32* %101, align 8
  %102 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 1, i32 3, i32 1
  store i32 %61, i32* %102, align 4
  %103 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 1, i32 3, i32 2
  %104 = bitcast i8** %103 to i64*
  store i64 %100, i64* %104, align 8
  %105 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 2
  %106 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 2, i32 2
  store i64 %97, i64* %106, align 8
  %107 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 2, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = icmp ult i64 %108, %97
  br i1 %109, label %113, label %110

110:                                              ; preds = %96
  %111 = bitcast %"class.libgav1::Array2D"* %105 to i64*
  %112 = load i64, i64* %111, align 8
  br label %126

113:                                              ; preds = %96
  %114 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %97, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %115 = getelementptr inbounds %"class.libgav1::Array2D", %"class.libgav1::Array2D"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  store i8* %114, i8** %115, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  tail call void @_ZdaPv(i8* nonnull %116) #10
  %119 = load i8*, i8** %115, align 8
  br label %120

120:                                              ; preds = %118, %113
  %121 = phi i8* [ %119, %118 ], [ %114, %113 ]
  %122 = icmp eq i8* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %120
  %124 = ptrtoint i8* %121 to i64
  %125 = load i64, i64* %106, align 8
  store i64 %125, i64* %107, align 8
  br label %126

126:                                              ; preds = %110, %123
  %127 = phi i64 [ %112, %110 ], [ %124, %123 ]
  %128 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 2, i32 3, i32 0
  store i32 %99, i32* %128, align 8
  %129 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 2, i32 3, i32 1
  store i32 %98, i32* %129, align 4
  %130 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 2, i32 3, i32 2
  %131 = bitcast i8** %130 to i64*
  store i64 %127, i64* %131, align 8
  br label %133

132:                                              ; preds = %120
  store i64 0, i64* %107, align 8
  br label %133

133:                                              ; preds = %43, %126, %132, %95, %42
  %134 = phi i1 [ false, %42 ], [ false, %95 ], [ false, %132 ], [ true, %126 ], [ true, %43 ]
  ret i1 %134
}

declare i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi8EE22BlendNoiseChromaWorkerERKNS_3dsp3DspEPKNS_5PlaneEiPNSt3__16atomicIiEEiiPKhlSE_SE_lPhSF_l(%"class.libgav1::FilmGrain"*, %"struct.libgav1::dsp::Dsp"* dereferenceable(3688), i8*, i32, %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i8*, i64, i8*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %16 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = sdiv i32 %17, 8
  %19 = and i32 %17, 7
  %20 = mul nsw i32 %18, %3
  %21 = icmp eq i32 %19, 0
  %22 = select i1 %21, i32 0, i32 %3
  %23 = add nsw i32 %22, %20
  %24 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  %26 = icmp slt i32 %25, %23
  br i1 %26, label %27, label %73

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 13
  %29 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 14
  %30 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %33 = bitcast %"class.libgav1::Array2D"* %32 to i8*
  %34 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 3
  br label %36

36:                                               ; preds = %27, %36
  %37 = phi i32 [ %25, %27 ], [ %71, %36 ]
  %38 = srem i32 %37, %3
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %2, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = sdiv i32 %37, %3
  %43 = shl nsw i32 %42, 3
  %44 = load i32, i32* %16, align 8
  %45 = sub nsw i32 %44, %43
  %46 = icmp slt i32 %45, 8
  %47 = select i1 %46, i32 %45, i32 8
  %48 = sext i32 %43 to i64
  %49 = mul nsw i64 %48, %8
  %50 = getelementptr inbounds i8, i8* %7, i64 %49
  %51 = icmp eq i8 %41, 1
  %52 = select i1 %51, i8** %28, i8** %29
  %53 = select i1 %51, i8* %9, i8* %10
  %54 = select i1 %51, i8* %12, i8* %13
  %55 = load i8*, i8** %52, align 8
  %56 = load i32, i32* %30, align 8
  %57 = ashr i32 %43, %56
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %58, %11
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  %61 = mul nsw i64 %58, %14
  %62 = getelementptr inbounds i8, i8* %54, i64 %61
  %63 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %31, align 8
  %64 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 11, i32 6, i64 %66
  %68 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %67, align 8
  %69 = load i32, i32* %34, align 4
  %70 = load i32, i32* %35, align 4
  tail call void %68(i8 zeroext %41, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %63, i8* %33, i32 %5, i32 %6, i32 %69, i32 %47, i32 %43, i32 %70, i32 %56, i8* %55, i8* %50, i64 %8, i8* %60, i64 %11, i8* %62, i64 %14) #9
  %71 = atomicrmw add i32* %24, i32 1 monotonic
  %72 = icmp slt i32 %71, %23
  br i1 %72, label %36, label %73

73:                                               ; preds = %36, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi8EE20BlendNoiseLumaWorkerERKNS_3dsp3DspEPNSt3__16atomicIiEEiiPKhlPhl(%"class.libgav1::FilmGrain"*, %"struct.libgav1::dsp::Dsp"* dereferenceable(3688), %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %10 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = sdiv i32 %11, 8
  %13 = and i32 %11, 7
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i32
  %16 = add nsw i32 %12, %15
  %17 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  %19 = icmp slt i32 %18, %16
  br i1 %19, label %20, label %47

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 11, i32 5
  %22 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 18, i64 0
  %23 = bitcast %"class.libgav1::Array2D"* %22 to i8*
  %24 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 0
  %25 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %0, i64 0, i32 12, i64 0
  br label %27

27:                                               ; preds = %20, %27
  %28 = phi i32 [ %18, %20 ], [ %45, %27 ]
  %29 = shl nsw i32 %28, 3
  %30 = load i32, i32* %10, align 8
  %31 = sub nsw i32 %30, %29
  %32 = icmp slt i32 %31, 8
  %33 = select i1 %32, i32 %31, i32 8
  %34 = sext i32 %29 to i64
  %35 = mul nsw i64 %34, %6
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = mul nsw i64 %34, %8
  %38 = getelementptr inbounds i8, i8* %7, i64 %37
  %39 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %21, align 8
  %40 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %24, align 8
  %41 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %40, i64 0, i32 14
  %42 = load i8, i8* %41, align 4
  %43 = zext i8 %42 to i32
  %44 = load i32, i32* %25, align 4
  tail call void %39(i8* %23, i32 %3, i32 %4, i32 %43, i32 %44, i32 %33, i32 %29, i8* %26, i8* %36, i64 %6, i8* %38, i64 %8) #9
  %45 = atomicrmw add i32* %17, i32 1 monotonic
  %46 = icmp slt i32 %45, %16
  br i1 %46, label %27, label %47

47:                                               ; preds = %27, %9
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi10EEC2ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE(%"class.libgav1::FilmGrain.37"*, %"struct.libgav1::FilmGrainParams"* dereferenceable(172), i1 zeroext, i1 zeroext, i32, i32, i32, i32, %"class.libgav1::ThreadPool"*) unnamed_addr #0 comdat($_ZN7libgav19FilmGrainILi10EEC5ERKNS_15FilmGrainParamsEbbiiiiPNS_10ThreadPoolE) align 2 {
  %10 = zext i1 %2 to i8
  %11 = zext i1 %3 to i8
  %12 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 0
  store %"struct.libgav1::FilmGrainParams"* %1, %"struct.libgav1::FilmGrainParams"** %12, align 8
  %13 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 1
  store i8 %10, i8* %13, align 8
  %14 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 2
  store i8 %11, i8* %14, align 1
  %15 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  store i32 %4, i32* %15, align 4
  %16 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  store i32 %5, i32* %16, align 8
  %17 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  store i32 %6, i32* %17, align 4
  %18 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  store i32 %7, i32* %18, align 8
  %19 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 7
  %20 = icmp eq i32 %4, 0
  %21 = select i1 %20, i32 82, i32 44
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 8
  %23 = icmp eq i32 %5, 0
  %24 = select i1 %23, i32 73, i32 38
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 13
  %26 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 19
  %27 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 200, i1 false)
  store %"class.libgav1::ThreadPool"* %8, %"class.libgav1::ThreadPool"** %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi10EE17GenerateLumaGrainERKNS_15FilmGrainParamsEPs(%"struct.libgav1::FilmGrainParams"* dereferenceable(172), i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 22
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 2
  %6 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 20
  %7 = load i16, i16* %6, align 2
  %8 = shl i32 1, %5
  %9 = ashr i32 %8, 1
  br label %10

10:                                               ; preds = %15, %2
  %11 = phi i32 [ 0, %2 ], [ %18, %15 ]
  %12 = phi i16* [ %1, %2 ], [ %17, %15 ]
  %13 = phi i16 [ %7, %2 ], [ %16, %15 ]
  br label %20

14:                                               ; preds = %15
  ret void

15:                                               ; preds = %20
  %16 = trunc i32 %31 to i16
  %17 = getelementptr inbounds i16, i16* %12, i64 82
  %18 = add nuw nsw i32 %11, 1
  %19 = icmp eq i32 %18, 73
  br i1 %19, label %14, label %10

20:                                               ; preds = %20, %10
  %21 = phi i64 [ 0, %10 ], [ %43, %20 ]
  %22 = phi i16 [ %13, %10 ], [ %32, %20 ]
  %23 = zext i16 %22 to i32
  %24 = lshr i32 %23, 1
  %25 = xor i32 %24, %23
  %26 = lshr i32 %23, 3
  %27 = xor i32 %25, %26
  %28 = lshr i32 %23, 12
  %29 = xor i32 %27, %28
  %30 = shl nuw nsw i32 %29, 15
  %31 = or i32 %30, %24
  %32 = trunc i32 %31 to i16
  %33 = lshr i32 %31, 5
  %34 = and i32 %33, 2047
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i32
  %39 = add nsw i32 %9, %38
  %40 = ashr i32 %39, %5
  %41 = trunc i32 %40 to i16
  %42 = getelementptr inbounds i16, i16* %12, i64 %21
  store i16 %41, i16* %42, align 2
  %43 = add nuw nsw i64 %21, 1
  %44 = icmp eq i64 %43, 82
  br i1 %44, label %15, label %20
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi10EE20GenerateChromaGrainsERKNS_15FilmGrainParamsEiiPsS5_(%"struct.libgav1::FilmGrainParams"* dereferenceable(172), i32, i32, i16*, i16*) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 22
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 2
  %9 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = bitcast i16* %3 to i8*
  %18 = mul nsw i32 %2, %1
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %20, i1 false)
  br label %62

21:                                               ; preds = %12, %5
  %22 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 20
  %23 = load i16, i16* %22, align 2
  %24 = xor i16 %23, -19164
  %25 = sext i32 %1 to i64
  %26 = shl i32 1, %8
  %27 = ashr i32 %26, 1
  br label %28

28:                                               ; preds = %57, %21
  %29 = phi i16 [ %24, %21 ], [ %58, %57 ]
  %30 = phi i16* [ %3, %21 ], [ %59, %57 ]
  %31 = phi i32 [ 0, %21 ], [ %60, %57 ]
  br label %32

32:                                               ; preds = %32, %28
  %33 = phi i64 [ %55, %32 ], [ 0, %28 ]
  %34 = phi i16 [ %44, %32 ], [ %29, %28 ]
  %35 = zext i16 %34 to i32
  %36 = lshr i32 %35, 1
  %37 = xor i32 %36, %35
  %38 = lshr i32 %35, 3
  %39 = xor i32 %37, %38
  %40 = lshr i32 %35, 12
  %41 = xor i32 %39, %40
  %42 = shl nuw nsw i32 %41, 15
  %43 = or i32 %42, %36
  %44 = trunc i32 %43 to i16
  %45 = lshr i32 %43, 5
  %46 = and i32 %45, 2047
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = sext i16 %49 to i32
  %51 = add nsw i32 %27, %50
  %52 = ashr i32 %51, %8
  %53 = trunc i32 %52 to i16
  %54 = getelementptr inbounds i16, i16* %30, i64 %33
  store i16 %53, i16* %54, align 2
  %55 = add nuw nsw i64 %33, 1
  %56 = icmp slt i64 %55, %25
  br i1 %56, label %32, label %57

57:                                               ; preds = %32
  %58 = trunc i32 %43 to i16
  %59 = getelementptr inbounds i16, i16* %30, i64 %25
  %60 = add nuw nsw i32 %31, 1
  %61 = icmp slt i32 %60, %2
  br i1 %61, label %28, label %62

62:                                               ; preds = %57, %16
  %63 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 7
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 2
  %68 = load i8, i8* %67, align 2, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = bitcast i16* %4 to i8*
  %72 = mul nsw i32 %2, %1
  %73 = sext i32 %72 to i64
  %74 = shl nsw i64 %73, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %71, i8 0, i64 %74, i1 false)
  br label %116

75:                                               ; preds = %66, %62
  %76 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %0, i64 0, i32 20
  %77 = load i16, i16* %76, align 2
  %78 = xor i16 %77, 18904
  %79 = sext i32 %1 to i64
  %80 = shl i32 1, %8
  %81 = ashr i32 %80, 1
  br label %82

82:                                               ; preds = %111, %75
  %83 = phi i16 [ %78, %75 ], [ %112, %111 ]
  %84 = phi i16* [ %4, %75 ], [ %113, %111 ]
  %85 = phi i32 [ 0, %75 ], [ %114, %111 ]
  br label %86

86:                                               ; preds = %86, %82
  %87 = phi i64 [ %109, %86 ], [ 0, %82 ]
  %88 = phi i16 [ %98, %86 ], [ %83, %82 ]
  %89 = zext i16 %88 to i32
  %90 = lshr i32 %89, 1
  %91 = xor i32 %90, %89
  %92 = lshr i32 %89, 3
  %93 = xor i32 %91, %92
  %94 = lshr i32 %89, 12
  %95 = xor i32 %93, %94
  %96 = shl nuw nsw i32 %95, 15
  %97 = or i32 %96, %90
  %98 = trunc i32 %97 to i16
  %99 = lshr i32 %97, 5
  %100 = and i32 %99, 2047
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = sext i16 %103 to i32
  %105 = add nsw i32 %81, %104
  %106 = ashr i32 %105, %8
  %107 = trunc i32 %106 to i16
  %108 = getelementptr inbounds i16, i16* %84, i64 %87
  store i16 %107, i16* %108, align 2
  %109 = add nuw nsw i64 %87, 1
  %110 = icmp slt i64 %109, %79
  br i1 %110, label %86, label %111

111:                                              ; preds = %86
  %112 = trunc i32 %97 to i16
  %113 = getelementptr inbounds i16, i16* %84, i64 %79
  %114 = add nuw nsw i32 %85, 1
  %115 = icmp slt i32 %114, %2
  br i1 %115, label %82, label %116

116:                                              ; preds = %111, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi10EE19ConstructNoiseImageEPKNS_11Array2DViewIsEEiiiiiPNS_7Array2DIsEE(%"class.libgav1::Array2DView.38"*, i32, i32, i32, i32, i32, %"class.libgav1::Array2D.45"*) local_unnamed_addr #0 comdat align 2 {
  %8 = add nsw i32 %3, %1
  %9 = ashr i32 %8, %3
  %10 = add nsw i32 %4, %2
  %11 = ashr i32 %10, %4
  %12 = lshr i32 32, %4
  %13 = getelementptr inbounds %"class.libgav1::Array2DView.38", %"class.libgav1::Array2DView.38"* %0, i64 0, i32 2
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.libgav1::Array2D.45", %"class.libgav1::Array2D.45"* %6, i64 0, i32 3, i32 1
  %16 = getelementptr inbounds %"class.libgav1::Array2D.45", %"class.libgav1::Array2D.45"* %6, i64 0, i32 3, i32 2
  %17 = sext i32 %9 to i64
  %18 = shl nsw i64 %17, 1
  %19 = icmp slt i32 %11, %12
  %20 = select i1 %19, i32 %11, i32 %12
  %21 = sext i32 %20 to i64
  br label %22

22:                                               ; preds = %22, %7
  %23 = phi i64 [ %35, %22 ], [ 0, %7 ]
  %24 = load i32, i32* %15, align 4
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %23, %25
  %27 = load i16*, i16** %16, align 8
  %28 = getelementptr inbounds i16, i16* %27, i64 %26
  %29 = bitcast i16* %28 to i8*
  %30 = trunc i64 %23 to i32
  %31 = mul nsw i32 %9, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %14, i64 %32
  %34 = bitcast i16* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %29, i8* align 2 %34, i64 %18, i1 false)
  %35 = add nuw nsw i64 %23, 1
  %36 = icmp slt i64 %35, %21
  br i1 %36, label %22, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.libgav1::Array2DView.38", %"class.libgav1::Array2DView.38"* %0, i64 0, i32 1
  %39 = trunc i64 %35 to i32
  %40 = sub nsw i32 0, %12
  %41 = and i32 %11, %40
  %42 = icmp sgt i32 %41, %39
  br i1 %42, label %43, label %77

43:                                               ; preds = %37
  %44 = sext i32 %5 to i64
  %45 = sext i32 %12 to i64
  %46 = and i64 %35, 4294967295
  %47 = sext i32 %41 to i64
  br label %48

48:                                               ; preds = %43, %70
  %49 = phi i64 [ %46, %43 ], [ %72, %70 ]
  %50 = phi i64 [ 1, %43 ], [ %71, %70 ]
  %51 = load i32, i32* %38, align 4
  %52 = sext i32 %51 to i64
  %53 = mul nsw i64 %50, %52
  %54 = load i16*, i16** %13, align 8
  %55 = getelementptr inbounds i16, i16* %54, i64 %53
  br label %56

56:                                               ; preds = %56, %48
  %57 = phi i64 [ %68, %56 ], [ %44, %48 ]
  %58 = add nsw i64 %57, %49
  %59 = load i32, i32* %15, align 4
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %58, %60
  %62 = load i16*, i16** %16, align 8
  %63 = getelementptr inbounds i16, i16* %62, i64 %61
  %64 = bitcast i16* %63 to i8*
  %65 = mul nsw i64 %57, %17
  %66 = getelementptr inbounds i16, i16* %55, i64 %65
  %67 = bitcast i16* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %64, i8* align 2 %67, i64 %18, i1 false)
  %68 = add nsw i64 %57, 1
  %69 = icmp slt i64 %68, %45
  br i1 %69, label %56, label %70

70:                                               ; preds = %56
  %71 = add nuw i64 %50, 1
  %72 = add nsw i64 %49, %45
  %73 = icmp slt i64 %72, %47
  br i1 %73, label %48, label %74

74:                                               ; preds = %70
  %75 = trunc i64 %72 to i32
  %76 = and i64 %71, 4294967295
  br label %77

77:                                               ; preds = %74, %37
  %78 = phi i32 [ %39, %37 ], [ %75, %74 ]
  %79 = phi i64 [ 1, %37 ], [ %76, %74 ]
  %80 = sub i32 %11, %78
  %81 = icmp sgt i32 %80, %5
  br i1 %81, label %82, label %136

82:                                               ; preds = %77
  %83 = load i32, i32* %38, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %79, %84
  %86 = load i16*, i16** %13, align 8
  %87 = getelementptr inbounds i16, i16* %86, i64 %85
  %88 = sext i32 %5 to i64
  %89 = sext i32 %78 to i64
  %90 = sext i32 %80 to i64
  %91 = sub nsw i64 %90, %88
  %92 = xor i64 %88, -1
  %93 = and i64 %91, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %107, label %95

95:                                               ; preds = %82
  %96 = add nsw i64 %88, %89
  %97 = load i32, i32* %15, align 4
  %98 = sext i32 %97 to i64
  %99 = mul nsw i64 %96, %98
  %100 = load i16*, i16** %16, align 8
  %101 = getelementptr inbounds i16, i16* %100, i64 %99
  %102 = bitcast i16* %101 to i8*
  %103 = mul nsw i64 %88, %17
  %104 = getelementptr inbounds i16, i16* %87, i64 %103
  %105 = bitcast i16* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %102, i8* align 2 %105, i64 %18, i1 false)
  %106 = add nsw i64 %88, 1
  br label %107

107:                                              ; preds = %82, %95
  %108 = phi i64 [ %88, %82 ], [ %106, %95 ]
  %109 = sub nsw i64 0, %90
  %110 = icmp eq i64 %92, %109
  br i1 %110, label %136, label %111

111:                                              ; preds = %107, %111
  %112 = phi i64 [ %134, %111 ], [ %108, %107 ]
  %113 = add nsw i64 %112, %89
  %114 = load i32, i32* %15, align 4
  %115 = sext i32 %114 to i64
  %116 = mul nsw i64 %113, %115
  %117 = load i16*, i16** %16, align 8
  %118 = getelementptr inbounds i16, i16* %117, i64 %116
  %119 = bitcast i16* %118 to i8*
  %120 = mul nsw i64 %112, %17
  %121 = getelementptr inbounds i16, i16* %87, i64 %120
  %122 = bitcast i16* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %119, i8* align 2 %122, i64 %18, i1 false)
  %123 = add nsw i64 %112, 1
  %124 = add nsw i64 %123, %89
  %125 = load i32, i32* %15, align 4
  %126 = sext i32 %125 to i64
  %127 = mul nsw i64 %124, %126
  %128 = load i16*, i16** %16, align 8
  %129 = getelementptr inbounds i16, i16* %128, i64 %127
  %130 = bitcast i16* %129 to i8*
  %131 = mul nsw i64 %123, %17
  %132 = getelementptr inbounds i16, i16* %87, i64 %131
  %133 = bitcast i16* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %130, i8* align 2 %133, i64 %18, i1 false)
  %134 = add nsw i64 %112, 2
  %135 = icmp eq i64 %134, %90
  br i1 %135, label %136, label %111

136:                                              ; preds = %107, %111, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_l(%"class.libgav1::FilmGrain.37"*, i8*, i64, i8*, i8*, i64, i8*, i64, i8*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %12 = alloca %"struct.libgav1::dsp::Dsp", align 8
  %13 = alloca %"class.std::__1::unique_lock", align 8
  %14 = alloca %"class.std::__1::unique_lock", align 8
  %15 = alloca %"struct.libgav1::dsp::Dsp", align 8
  %16 = alloca [2 x i8], align 1
  %17 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %18 = alloca %"struct.std::__1::atomic", align 4
  %19 = alloca %"class.std::__1::function", align 8
  %20 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %21 = alloca %"struct.std::__1::atomic", align 4
  %22 = alloca %"class.std::__1::function", align 8
  %23 = tail call zeroext i1 @_ZN7libgav19FilmGrainILi10EE4InitEv(%"class.libgav1::FilmGrain.37"* %0)
  br i1 %23, label %24, label %726

24:                                               ; preds = %11
  %25 = tail call zeroext i1 @_ZN7libgav19FilmGrainILi10EE20AllocateNoiseStripesEv(%"class.libgav1::FilmGrain.37"* %0)
  br i1 %25, label %26, label %726

26:                                               ; preds = %24
  %27 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 10) #9
  %28 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 0
  %29 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %30 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %29, i64 0, i32 5
  %31 = load i8, i8* %30, align 1
  %32 = icmp ne i8 %31, 0
  br i1 %32, label %33, label %50

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %29, i64 0, i32 3
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 2, i64 %36
  %38 = load void (i8*, i32, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i32, i8*)** %37, align 8
  %39 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 9, i64 0
  %40 = bitcast i16* %39 to i8*
  %41 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %29, i64 0, i32 20
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 0
  %49 = bitcast %"class.libgav1::Array2DView.38"* %48 to i8*
  tail call void %38(i8* %40, i32 %43, i32 %45, i32 %47, i32 0, i32 0, i8* %49) #9
  br label %50

50:                                               ; preds = %33, %26
  %51 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 1
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %93

54:                                               ; preds = %50
  %55 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %56 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %55, i64 0, i32 3
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 2, i64 %58
  %60 = load void (i8*, i32, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i32, i8*)** %59, align 8
  %61 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 10, i64 0
  %62 = bitcast i16* %61 to i8*
  %63 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %55, i64 0, i32 20
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 1
  %75 = bitcast %"class.libgav1::Array2DView.38"* %74 to i8*
  tail call void %60(i8* %62, i32 %65, i32 %67, i32 %69, i32 %71, i32 %73, i8* %75) #9
  %76 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %77 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %76, i64 0, i32 3
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 2, i64 %79
  %81 = load void (i8*, i32, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i32, i8*)** %80, align 8
  %82 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 11, i64 0
  %83 = bitcast i16* %82 to i8*
  %84 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %76, i64 0, i32 20
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = load i32, i32* %66, align 4
  %88 = load i32, i32* %68, align 8
  %89 = load i32, i32* %70, align 4
  %90 = load i32, i32* %72, align 8
  %91 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 2
  %92 = bitcast %"class.libgav1::Array2DView.38"* %91 to i8*
  tail call void %81(i8* %83, i32 %86, i32 %87, i32 %88, i32 %89, i32 %90, i8* %92) #9
  br label %93

93:                                               ; preds = %50, %54
  %94 = tail call zeroext i1 @_ZN7libgav19FilmGrainILi10EE18AllocateNoiseImageEv(%"class.libgav1::FilmGrain.37"* %0)
  br i1 %94, label %95, label %726

95:                                               ; preds = %93
  br i1 %32, label %96, label %255

96:                                               ; preds = %95
  %97 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %100 = load i32, i32* %99, align 8
  %101 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %102 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %101, i64 0, i32 3
  %103 = load i8, i8* %102, align 1, !range !2
  %104 = shl nuw nsw i8 %103, 1
  %105 = zext i8 %104 to i32
  %106 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 0, i32 2
  %107 = load i16*, i16** %106, align 8
  %108 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0, i32 3, i32 1
  %109 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0, i32 3, i32 2
  %110 = sext i32 %98 to i64
  %111 = shl nsw i64 %110, 1
  %112 = icmp slt i32 %100, 32
  %113 = select i1 %112, i32 %100, i32 32
  %114 = sext i32 %113 to i64
  br label %115

115:                                              ; preds = %115, %96
  %116 = phi i64 [ %128, %115 ], [ 0, %96 ]
  %117 = load i32, i32* %108, align 4
  %118 = sext i32 %117 to i64
  %119 = mul nsw i64 %116, %118
  %120 = load i16*, i16** %109, align 8
  %121 = getelementptr inbounds i16, i16* %120, i64 %119
  %122 = bitcast i16* %121 to i8*
  %123 = trunc i64 %116 to i32
  %124 = mul nsw i32 %98, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i16, i16* %107, i64 %125
  %127 = bitcast i16* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %122, i8* align 2 %127, i64 %111, i1 false) #9
  %128 = add nuw nsw i64 %116, 1
  %129 = icmp slt i64 %128, %114
  br i1 %129, label %115, label %130

130:                                              ; preds = %115
  %131 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 0
  %132 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %133 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 0, i32 1
  %134 = trunc i64 %128 to i32
  %135 = and i32 %100, -32
  %136 = icmp sgt i32 %135, %134
  br i1 %136, label %137, label %185

137:                                              ; preds = %130
  %138 = zext i8 %104 to i64
  %139 = and i64 %128, 4294967295
  %140 = sext i32 %135 to i64
  %141 = sub nuw nsw i64 -2, %116
  %142 = add i64 %141, %140
  %143 = lshr i64 %142, 5
  %144 = add nuw nsw i64 %143, 2
  br label %145

145:                                              ; preds = %178, %137
  %146 = phi i64 [ %139, %137 ], [ %180, %178 ]
  %147 = phi i64 [ 1, %137 ], [ %179, %178 ]
  %148 = load i32, i32* %133, align 4
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %147, %149
  %151 = load i16*, i16** %106, align 8
  %152 = getelementptr inbounds i16, i16* %151, i64 %150
  br label %153

153:                                              ; preds = %153, %145
  %154 = phi i64 [ %138, %145 ], [ %176, %153 ]
  %155 = add nsw i64 %154, %146
  %156 = load i32, i32* %108, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %155, %157
  %159 = load i16*, i16** %109, align 8
  %160 = getelementptr inbounds i16, i16* %159, i64 %158
  %161 = bitcast i16* %160 to i8*
  %162 = mul nsw i64 %154, %110
  %163 = getelementptr inbounds i16, i16* %152, i64 %162
  %164 = bitcast i16* %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %161, i8* align 2 %164, i64 %111, i1 false) #9
  %165 = or i64 %154, 1
  %166 = add nsw i64 %165, %146
  %167 = load i32, i32* %108, align 4
  %168 = sext i32 %167 to i64
  %169 = mul nsw i64 %166, %168
  %170 = load i16*, i16** %109, align 8
  %171 = getelementptr inbounds i16, i16* %170, i64 %169
  %172 = bitcast i16* %171 to i8*
  %173 = mul nsw i64 %165, %110
  %174 = getelementptr inbounds i16, i16* %152, i64 %173
  %175 = bitcast i16* %174 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %172, i8* align 2 %175, i64 %111, i1 false) #9
  %176 = add nuw nsw i64 %154, 2
  %177 = icmp eq i64 %176, 32
  br i1 %177, label %178, label %153

178:                                              ; preds = %153
  %179 = add nuw nsw i64 %147, 1
  %180 = add nuw nsw i64 %146, 32
  %181 = icmp eq i64 %179, %144
  br i1 %181, label %182, label %145

182:                                              ; preds = %178
  %183 = trunc i64 %180 to i32
  %184 = and i64 %144, 4294967295
  br label %185

185:                                              ; preds = %182, %130
  %186 = phi i32 [ %134, %130 ], [ %183, %182 ]
  %187 = phi i64 [ 1, %130 ], [ %184, %182 ]
  %188 = sub i32 %100, %186
  %189 = icmp sgt i32 %188, %105
  br i1 %189, label %190, label %243

190:                                              ; preds = %185
  %191 = load i32, i32* %133, align 4
  %192 = sext i32 %191 to i64
  %193 = mul nsw i64 %187, %192
  %194 = load i16*, i16** %106, align 8
  %195 = getelementptr inbounds i16, i16* %194, i64 %193
  %196 = zext i8 %104 to i64
  %197 = sext i32 %186 to i64
  %198 = sext i32 %188 to i64
  %199 = xor i64 %196, -1
  %200 = and i64 %198, 1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %214, label %202

202:                                              ; preds = %190
  %203 = add nsw i64 %196, %197
  %204 = load i32, i32* %108, align 4
  %205 = sext i32 %204 to i64
  %206 = mul nsw i64 %203, %205
  %207 = load i16*, i16** %109, align 8
  %208 = getelementptr inbounds i16, i16* %207, i64 %206
  %209 = bitcast i16* %208 to i8*
  %210 = mul nsw i64 %196, %110
  %211 = getelementptr inbounds i16, i16* %195, i64 %210
  %212 = bitcast i16* %211 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %209, i8* align 2 %212, i64 %111, i1 false) #9
  %213 = or i64 %196, 1
  br label %214

214:                                              ; preds = %190, %202
  %215 = phi i64 [ %196, %190 ], [ %213, %202 ]
  %216 = sub nsw i64 0, %198
  %217 = icmp eq i64 %199, %216
  br i1 %217, label %243, label %218

218:                                              ; preds = %214, %218
  %219 = phi i64 [ %241, %218 ], [ %215, %214 ]
  %220 = add nsw i64 %219, %197
  %221 = load i32, i32* %108, align 4
  %222 = sext i32 %221 to i64
  %223 = mul nsw i64 %220, %222
  %224 = load i16*, i16** %109, align 8
  %225 = getelementptr inbounds i16, i16* %224, i64 %223
  %226 = bitcast i16* %225 to i8*
  %227 = mul nsw i64 %219, %110
  %228 = getelementptr inbounds i16, i16* %195, i64 %227
  %229 = bitcast i16* %228 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %226, i8* align 2 %229, i64 %111, i1 false) #9
  %230 = add nuw nsw i64 %219, 1
  %231 = add nsw i64 %230, %197
  %232 = load i32, i32* %108, align 4
  %233 = sext i32 %232 to i64
  %234 = mul nsw i64 %231, %233
  %235 = load i16*, i16** %109, align 8
  %236 = getelementptr inbounds i16, i16* %235, i64 %234
  %237 = bitcast i16* %236 to i8*
  %238 = mul nsw i64 %230, %110
  %239 = getelementptr inbounds i16, i16* %195, i64 %238
  %240 = bitcast i16* %239 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %237, i8* align 2 %240, i64 %111, i1 false) #9
  %241 = add nuw nsw i64 %219, 2
  %242 = icmp eq i64 %241, %198
  br i1 %242, label %243, label %218

243:                                              ; preds = %214, %218, %185
  %244 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %245 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %244, i64 0, i32 3
  %246 = load i8, i8* %245, align 1, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %255, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 3
  %250 = load void (i8*, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i8*)** %249, align 8
  %251 = bitcast %"class.libgav1::Array2DView.38"* %131 to i8*
  %252 = load i32, i32* %97, align 4
  %253 = load i32, i32* %99, align 8
  %254 = bitcast %"class.libgav1::Array2D.45"* %132 to i8*
  tail call void %250(i8* %251, i32 %252, i32 %253, i32 0, i32 0, i8* %254) #9
  br label %255

255:                                              ; preds = %243, %248, %95
  %256 = load i8, i8* %51, align 8, !range !2
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %258, label %307

258:                                              ; preds = %255
  %259 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 1
  %260 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %263 = load i32, i32* %262, align 8
  %264 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %267 = load i32, i32* %266, align 8
  %268 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %269 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %268, i64 0, i32 3
  %270 = load i8, i8* %269, align 1, !range !2
  %271 = zext i8 %270 to i32
  %272 = sub nsw i32 1, %267
  %273 = shl i32 %271, %272
  %274 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 1
  tail call void @_ZN7libgav19FilmGrainILi10EE19ConstructNoiseImageEPKNS_11Array2DViewIsEEiiiiiPNS_7Array2DIsEE(%"class.libgav1::Array2DView.38"* %259, i32 %261, i32 %263, i32 %265, i32 %267, i32 %273, %"class.libgav1::Array2D.45"* %274)
  %275 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 2
  %276 = load i32, i32* %260, align 4
  %277 = load i32, i32* %262, align 8
  %278 = load i32, i32* %264, align 4
  %279 = load i32, i32* %266, align 8
  %280 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %281 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %280, i64 0, i32 3
  %282 = load i8, i8* %281, align 1, !range !2
  %283 = zext i8 %282 to i32
  %284 = sub nsw i32 1, %279
  %285 = shl i32 %283, %284
  %286 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 2
  tail call void @_ZN7libgav19FilmGrainILi10EE19ConstructNoiseImageEPKNS_11Array2DViewIsEEiiiiiPNS_7Array2DIsEE(%"class.libgav1::Array2DView.38"* %275, i32 %276, i32 %277, i32 %278, i32 %279, i32 %285, %"class.libgav1::Array2D.45"* %286)
  %287 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %288 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %287, i64 0, i32 3
  %289 = load i8, i8* %288, align 1, !range !2
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %307, label %291

291:                                              ; preds = %258
  %292 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 3
  %293 = load void (i8*, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i8*)** %292, align 8
  %294 = bitcast %"class.libgav1::Array2DView.38"* %259 to i8*
  %295 = load i32, i32* %260, align 4
  %296 = load i32, i32* %262, align 8
  %297 = load i32, i32* %264, align 4
  %298 = load i32, i32* %266, align 8
  %299 = bitcast %"class.libgav1::Array2D.45"* %274 to i8*
  tail call void %293(i8* %294, i32 %295, i32 %296, i32 %297, i32 %298, i8* %299) #9
  %300 = load void (i8*, i32, i32, i32, i32, i8*)*, void (i8*, i32, i32, i32, i32, i8*)** %292, align 8
  %301 = bitcast %"class.libgav1::Array2DView.38"* %275 to i8*
  %302 = load i32, i32* %260, align 4
  %303 = load i32, i32* %262, align 8
  %304 = load i32, i32* %264, align 4
  %305 = load i32, i32* %266, align 8
  %306 = bitcast %"class.libgav1::Array2D.45"* %286 to i8*
  tail call void %300(i8* %301, i32 %302, i32 %303, i32 %304, i32 %305, i8* %306) #9
  br label %307

307:                                              ; preds = %258, %255, %291
  %308 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %309 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %308, i64 0, i32 4
  %310 = load i8, i8* %309, align 4, !range !2
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %317, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 2
  %314 = load i8, i8* %313, align 1, !range !2
  %315 = icmp eq i8 %314, 0
  %316 = select i1 %315, i32 960, i32 940
  br label %317

317:                                              ; preds = %307, %312
  %318 = phi i32 [ 64, %312 ], [ 0, %307 ]
  %319 = phi i32 [ 940, %312 ], [ 1023, %307 ]
  %320 = phi i32 [ %316, %312 ], [ 1023, %307 ]
  %321 = load i8, i8* %51, align 8, !range !2
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %323, label %584

323:                                              ; preds = %317
  %324 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %324) #9
  store i8 -86, i8* %324, align 1
  %325 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 1
  store i8 -86, i8* %325, align 1
  %326 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %308, i64 0, i32 2
  %327 = load i8, i8* %326, align 2, !range !2
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %330, label %329

329:                                              ; preds = %323
  store i8 1, i8* %324, align 1
  store i8 2, i8* %325, align 1
  br label %385

330:                                              ; preds = %323
  %331 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %332 = load i32, i32* %331, align 8
  %333 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %334 = load i32, i32* %333, align 8
  %335 = add nsw i32 %334, %332
  %336 = ashr i32 %335, %334
  %337 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %338 = load i32, i32* %337, align 4
  %339 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %340 = load i32, i32* %339, align 4
  %341 = add nsw i32 %340, %338
  %342 = ashr i32 %341, %340
  %343 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %308, i64 0, i32 6
  %344 = load i8, i8* %343, align 2
  %345 = icmp eq i8 %344, 0
  br i1 %345, label %346, label %359

346:                                              ; preds = %330
  %347 = icmp eq i8* %3, %8
  br i1 %347, label %362, label %348

348:                                              ; preds = %346
  %349 = sext i32 %342 to i64
  %350 = shl nsw i64 %349, 1
  br label %351

351:                                              ; preds = %351, %348
  %352 = phi i8* [ %356, %351 ], [ %8, %348 ]
  %353 = phi i8* [ %355, %351 ], [ %3, %348 ]
  %354 = phi i32 [ %357, %351 ], [ 0, %348 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %352, i8* align 1 %353, i64 %350, i1 false) #9
  %355 = getelementptr inbounds i8, i8* %353, i64 %5
  %356 = getelementptr inbounds i8, i8* %352, i64 %10
  %357 = add nuw nsw i32 %354, 1
  %358 = icmp slt i32 %357, %336
  br i1 %358, label %351, label %360

359:                                              ; preds = %330
  store i8 1, i8* %324, align 1
  br label %362

360:                                              ; preds = %351
  %361 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  br label %362

362:                                              ; preds = %360, %346, %359
  %363 = phi %"struct.libgav1::FilmGrainParams"* [ %308, %359 ], [ %308, %346 ], [ %361, %360 ]
  %364 = phi i32 [ 1, %359 ], [ 0, %346 ], [ 0, %360 ]
  %365 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %363, i64 0, i32 7
  %366 = load i8, i8* %365, align 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %368, label %381

368:                                              ; preds = %362
  %369 = icmp eq i8* %4, %9
  br i1 %369, label %385, label %370

370:                                              ; preds = %368
  %371 = sext i32 %342 to i64
  %372 = shl nsw i64 %371, 1
  br label %373

373:                                              ; preds = %373, %370
  %374 = phi i8* [ %378, %373 ], [ %9, %370 ]
  %375 = phi i8* [ %377, %373 ], [ %4, %370 ]
  %376 = phi i32 [ %379, %373 ], [ 0, %370 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %374, i8* align 1 %375, i64 %372, i1 false) #9
  %377 = getelementptr inbounds i8, i8* %375, i64 %5
  %378 = getelementptr inbounds i8, i8* %374, i64 %10
  %379 = add nuw nsw i32 %376, 1
  %380 = icmp slt i32 %379, %336
  br i1 %380, label %373, label %385

381:                                              ; preds = %362
  %382 = add nuw nsw i32 %364, 1
  %383 = zext i32 %364 to i64
  %384 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 %383
  store i8 2, i8* %384, align 1
  br label %385

385:                                              ; preds = %373, %368, %381, %329
  %386 = phi i32 [ 2, %329 ], [ %382, %381 ], [ %364, %368 ], [ %364, %373 ]
  %387 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 19
  %388 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %387, align 8
  %389 = icmp ne %"class.libgav1::ThreadPool"* %388, null
  %390 = icmp sgt i32 %386, 0
  %391 = and i1 %390, %389
  br i1 %391, label %392, label %530

392:                                              ; preds = %385
  %393 = tail call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* nonnull %388) #9
  %394 = bitcast %"class.libgav1::BlockingCounterImpl"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %394) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %394, i8 -86, i64 96, i1 false)
  %395 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %394, i8 0, i64 88, i1 false) #9
  store i32 %393, i32* %395, align 8
  %396 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 3
  store i8 0, i8* %396, align 4
  %397 = bitcast %"struct.std::__1::atomic"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %397) #9
  %398 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %398, align 4
  %399 = icmp sgt i32 %393, 0
  br i1 %399, label %400, label %406

400:                                              ; preds = %392
  %401 = bitcast %"struct.libgav1::dsp::Dsp"* %27 to i8*
  %402 = bitcast %"struct.libgav1::dsp::Dsp"* %12 to i8*
  %403 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %19, i64 0, i32 0, i32 1, i32 0
  %404 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %19, i64 0, i32 0, i32 2
  %405 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %19, i64 0, i32 0, i32 0, i32 0
  br label %483

406:                                              ; preds = %527, %392
  %407 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %408 = load i32, i32* %407, align 8
  %409 = sdiv i32 %408, 8
  %410 = and i32 %408, 7
  %411 = mul nsw i32 %409, %386
  %412 = icmp eq i32 %410, 0
  %413 = select i1 %412, i32 0, i32 %386
  %414 = add nsw i32 %413, %411
  %415 = atomicrmw add i32* %398, i32 1 monotonic
  %416 = icmp slt i32 %415, %414
  br i1 %416, label %417, label %464

417:                                              ; preds = %406
  %418 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 13
  %419 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 14
  %420 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %421 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %422 = bitcast %"class.libgav1::Array2D.45"* %421 to i8*
  %423 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %424 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  br label %425

425:                                              ; preds = %462, %417
  %426 = phi i32 [ %408, %417 ], [ %463, %462 ]
  %427 = phi i32 [ %415, %417 ], [ %460, %462 ]
  %428 = srem i32 %427, %386
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 %429
  %431 = load i8, i8* %430, align 1
  %432 = sdiv i32 %427, %386
  %433 = shl nsw i32 %432, 3
  %434 = sub nsw i32 %426, %433
  %435 = icmp slt i32 %434, 8
  %436 = select i1 %435, i32 %434, i32 8
  %437 = sext i32 %433 to i64
  %438 = mul nsw i64 %437, %2
  %439 = getelementptr inbounds i8, i8* %1, i64 %438
  %440 = icmp eq i8 %431, 1
  %441 = select i1 %440, i8** %418, i8** %419
  %442 = select i1 %440, i8* %3, i8* %4
  %443 = select i1 %440, i8* %8, i8* %9
  %444 = load i8*, i8** %441, align 8
  %445 = load i32, i32* %420, align 8
  %446 = ashr i32 %433, %445
  %447 = sext i32 %446 to i64
  %448 = mul nsw i64 %447, %5
  %449 = getelementptr inbounds i8, i8* %442, i64 %448
  %450 = mul nsw i64 %447, %10
  %451 = getelementptr inbounds i8, i8* %443, i64 %450
  %452 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %453 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %452, i64 0, i32 2
  %454 = load i8, i8* %453, align 2, !range !2
  %455 = zext i8 %454 to i64
  %456 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 6, i64 %455
  %457 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %456, align 8
  %458 = load i32, i32* %423, align 4
  %459 = load i32, i32* %424, align 4
  call void %457(i8 zeroext %431, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %452, i8* %422, i32 %318, i32 %320, i32 %458, i32 %436, i32 %433, i32 %459, i32 %445, i8* %444, i8* %439, i64 %2, i8* %449, i64 %5, i8* %451, i64 %10) #9
  %460 = atomicrmw add i32* %398, i32 1 monotonic
  %461 = icmp slt i32 %460, %414
  br i1 %461, label %462, label %464

462:                                              ; preds = %425
  %463 = load i32, i32* %407, align 8
  br label %425

464:                                              ; preds = %425, %406
  %465 = bitcast %"class.std::__1::unique_lock"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %465) #9
  %466 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %13, i64 0, i32 0
  %467 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %13, i64 0, i32 1
  %468 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %465, i8 -86, i64 16, i1 false) #9
  store %"class.std::__1::mutex"* %468, %"class.std::__1::mutex"** %466, align 8
  store i8 1, i8* %467, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %468) #9
  %469 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %17, i64 0, i32 1
  %470 = load i32, i32* %395, align 8
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %480, label %472

472:                                              ; preds = %464, %472
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %469, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %13) #9
  %473 = load i32, i32* %395, align 8
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %472

475:                                              ; preds = %472
  %476 = load i8, i8* %467, align 8, !range !2
  %477 = icmp eq i8 %476, 0
  br i1 %477, label %482, label %478

478:                                              ; preds = %475
  %479 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %466, align 8
  br label %480

480:                                              ; preds = %478, %464
  %481 = phi %"class.std::__1::mutex"* [ %479, %478 ], [ %468, %464 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %481) #9
  br label %482

482:                                              ; preds = %475, %480
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %465) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %397) #9
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %469) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %394) #9
  br label %583

483:                                              ; preds = %527, %400
  %484 = phi i32 [ 0, %400 ], [ %528, %527 ]
  %485 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %387, align 8
  call void @llvm.lifetime.start.p0i8(i64 3688, i8* nonnull %402)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %402, i8* align 8 %401, i64 3688, i1 false)
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %403, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %404, align 8
  %486 = call i8* @_Znwm(i64 3800) #10, !noalias !13
  %487 = bitcast i8* %486 to %"class.libgav1::FilmGrain.37"**
  store %"class.libgav1::FilmGrain.37"* %0, %"class.libgav1::FilmGrain.37"** %487, align 8
  %488 = getelementptr inbounds i8, i8* %486, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %488, i8* nonnull align 8 %402, i64 3688, i1 false)
  %489 = getelementptr inbounds i8, i8* %486, i64 3696
  %490 = bitcast i8* %489 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %17, %"class.libgav1::BlockingCounterImpl"** %490, align 8
  %491 = getelementptr inbounds i8, i8* %486, i64 3704
  %492 = bitcast i8* %491 to [2 x i8]**
  store [2 x i8]* %16, [2 x i8]** %492, align 8
  %493 = getelementptr inbounds i8, i8* %486, i64 3712
  %494 = bitcast i8* %493 to i32*
  store i32 %386, i32* %494, align 8
  %495 = getelementptr inbounds i8, i8* %486, i64 3720
  %496 = bitcast i8* %495 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %18, %"struct.std::__1::atomic"** %496, align 8
  %497 = getelementptr inbounds i8, i8* %486, i64 3728
  %498 = bitcast i8* %497 to i32*
  store i32 %318, i32* %498, align 8
  %499 = getelementptr inbounds i8, i8* %486, i64 3732
  %500 = bitcast i8* %499 to i32*
  store i32 %320, i32* %500, align 4
  %501 = getelementptr inbounds i8, i8* %486, i64 3736
  %502 = bitcast i8* %501 to i8**
  store i8* %1, i8** %502, align 8
  %503 = getelementptr inbounds i8, i8* %486, i64 3744
  %504 = bitcast i8* %503 to i64*
  store i64 %2, i64* %504, align 8
  %505 = getelementptr inbounds i8, i8* %486, i64 3752
  %506 = bitcast i8* %505 to i8**
  store i8* %3, i8** %506, align 8
  %507 = getelementptr inbounds i8, i8* %486, i64 3760
  %508 = bitcast i8* %507 to i8**
  store i8* %4, i8** %508, align 8
  %509 = getelementptr inbounds i8, i8* %486, i64 3768
  %510 = bitcast i8* %509 to i64*
  store i64 %5, i64* %510, align 8
  %511 = getelementptr inbounds i8, i8* %486, i64 3776
  %512 = bitcast i8* %511 to i8**
  store i8* %8, i8** %512, align 8
  %513 = getelementptr inbounds i8, i8* %486, i64 3784
  %514 = bitcast i8* %513 to i8**
  store i8* %9, i8** %514, align 8
  %515 = getelementptr inbounds i8, i8* %486, i64 3792
  %516 = bitcast i8* %515 to i64*
  store i64 %10, i64* %516, align 8
  store i8* %486, i8** %405, align 8
  call void @llvm.lifetime.end.p0i8(i64 3688, i8* nonnull %402)
  %517 = bitcast %"class.libgav1::ThreadPool"* %485 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %518 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %517, align 8
  %519 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %518, i64 2
  %520 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %519, align 8
  call void %520(%"class.libgav1::ThreadPool"* %485, %"class.std::__1::function"* nonnull %19) #9
  %521 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %404, align 8
  %522 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %521, i64 0, i32 1
  %523 = load void (i8*)*, void (i8*)** %522, align 8
  %524 = icmp eq void (i8*)* %523, null
  br i1 %524, label %527, label %525

525:                                              ; preds = %483
  %526 = load i8*, i8** %405, align 8
  call void %523(i8* %526) #9
  br label %527

527:                                              ; preds = %483, %525
  %528 = add nuw nsw i32 %484, 1
  %529 = icmp eq i32 %528, %393
  br i1 %529, label %406, label %483

530:                                              ; preds = %385
  %531 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %532 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %531, i64 0, i32 6
  %533 = load i8, i8* %532, align 2
  %534 = icmp eq i8 %533, 0
  %535 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %531, i64 0, i32 2
  %536 = load i8, i8* %535, align 2, !range !2
  br i1 %534, label %537, label %539

537:                                              ; preds = %530
  %538 = icmp eq i8 %536, 0
  br i1 %538, label %557, label %539

539:                                              ; preds = %530, %537
  %540 = phi i8 [ 1, %537 ], [ %536, %530 ]
  %541 = zext i8 %540 to i64
  %542 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 6, i64 %541
  %543 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %542, align 8
  %544 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %545 = bitcast %"class.libgav1::Array2D.45"* %544 to i8*
  %546 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %547 = load i32, i32* %546, align 4
  %548 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %549 = load i32, i32* %548, align 8
  %550 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %551 = load i32, i32* %550, align 4
  %552 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %553 = load i32, i32* %552, align 8
  %554 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 13
  %555 = load i8*, i8** %554, align 8
  tail call void %543(i8 zeroext 1, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %531, i8* %545, i32 %318, i32 %320, i32 %547, i32 %549, i32 0, i32 %551, i32 %553, i8* %555, i8* %1, i64 %2, i8* %3, i64 %5, i8* %8, i64 %10) #9
  %556 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  br label %557

557:                                              ; preds = %537, %539
  %558 = phi %"struct.libgav1::FilmGrainParams"* [ %531, %537 ], [ %556, %539 ]
  %559 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %558, i64 0, i32 7
  %560 = load i8, i8* %559, align 1
  %561 = icmp eq i8 %560, 0
  %562 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %558, i64 0, i32 2
  %563 = load i8, i8* %562, align 2, !range !2
  br i1 %561, label %564, label %566

564:                                              ; preds = %557
  %565 = icmp eq i8 %563, 0
  br i1 %565, label %583, label %566

566:                                              ; preds = %557, %564
  %567 = phi i8 [ 1, %564 ], [ %563, %557 ]
  %568 = zext i8 %567 to i64
  %569 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 6, i64 %568
  %570 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %569, align 8
  %571 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %572 = bitcast %"class.libgav1::Array2D.45"* %571 to i8*
  %573 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %574 = load i32, i32* %573, align 4
  %575 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %576 = load i32, i32* %575, align 8
  %577 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %578 = load i32, i32* %577, align 4
  %579 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %580 = load i32, i32* %579, align 8
  %581 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 14
  %582 = load i8*, i8** %581, align 8
  tail call void %570(i8 zeroext 2, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %558, i8* %572, i32 %318, i32 %320, i32 %574, i32 %576, i32 0, i32 %578, i32 %580, i8* %582, i8* %1, i64 %2, i8* %4, i64 %5, i8* %9, i64 %10) #9
  br label %583

583:                                              ; preds = %564, %566, %482
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %324) #9
  br label %584

584:                                              ; preds = %317, %583
  br i1 %32, label %585, label %709

585:                                              ; preds = %584
  %586 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 19
  %587 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %586, align 8
  %588 = icmp eq %"class.libgav1::ThreadPool"* %587, null
  br i1 %588, label %695, label %589

589:                                              ; preds = %585
  %590 = call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* nonnull %587) #9
  %591 = bitcast %"class.libgav1::BlockingCounterImpl"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %591) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %591, i8 -86, i64 96, i1 false)
  %592 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %591, i8 0, i64 88, i1 false) #9
  store i32 %590, i32* %592, align 8
  %593 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 3
  store i8 0, i8* %593, align 4
  %594 = bitcast %"struct.std::__1::atomic"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %594) #9
  %595 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %595, align 4
  %596 = icmp sgt i32 %590, 0
  br i1 %596, label %597, label %603

597:                                              ; preds = %589
  %598 = bitcast %"struct.libgav1::dsp::Dsp"* %27 to i8*
  %599 = bitcast %"struct.libgav1::dsp::Dsp"* %15 to i8*
  %600 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 1, i32 0
  %601 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 2
  %602 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %22, i64 0, i32 0, i32 0, i32 0
  br label %660

603:                                              ; preds = %692, %589
  %604 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %605 = load i32, i32* %604, align 8
  %606 = sdiv i32 %605, 8
  %607 = and i32 %605, 7
  %608 = icmp ne i32 %607, 0
  %609 = zext i1 %608 to i32
  %610 = add nsw i32 %606, %609
  %611 = atomicrmw add i32* %595, i32 1 monotonic
  %612 = icmp slt i32 %611, %610
  br i1 %612, label %613, label %641

613:                                              ; preds = %603
  %614 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 5
  %615 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %616 = bitcast %"class.libgav1::Array2D.45"* %615 to i8*
  %617 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %618 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 12, i64 0
  br label %619

619:                                              ; preds = %639, %613
  %620 = phi i32 [ %605, %613 ], [ %640, %639 ]
  %621 = phi i32 [ %611, %613 ], [ %637, %639 ]
  %622 = shl nsw i32 %621, 3
  %623 = sub nsw i32 %620, %622
  %624 = icmp slt i32 %623, 8
  %625 = select i1 %624, i32 %623, i32 8
  %626 = sext i32 %622 to i64
  %627 = mul nsw i64 %626, %2
  %628 = getelementptr inbounds i8, i8* %1, i64 %627
  %629 = mul nsw i64 %626, %7
  %630 = getelementptr inbounds i8, i8* %6, i64 %629
  %631 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %614, align 8
  %632 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %633 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %632, i64 0, i32 14
  %634 = load i8, i8* %633, align 4
  %635 = zext i8 %634 to i32
  %636 = load i32, i32* %617, align 4
  call void %631(i8* %616, i32 %318, i32 %319, i32 %635, i32 %636, i32 %625, i32 %622, i8* %618, i8* %628, i64 %2, i8* %630, i64 %7) #9
  %637 = atomicrmw add i32* %595, i32 1 monotonic
  %638 = icmp slt i32 %637, %610
  br i1 %638, label %639, label %641

639:                                              ; preds = %619
  %640 = load i32, i32* %604, align 8
  br label %619

641:                                              ; preds = %619, %603
  %642 = bitcast %"class.std::__1::unique_lock"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %642) #9
  %643 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %14, i64 0, i32 0
  %644 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %14, i64 0, i32 1
  %645 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %642, i8 -86, i64 16, i1 false) #9
  store %"class.std::__1::mutex"* %645, %"class.std::__1::mutex"** %643, align 8
  store i8 1, i8* %644, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %645) #9
  %646 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %20, i64 0, i32 1
  %647 = load i32, i32* %592, align 8
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %657, label %649

649:                                              ; preds = %641, %649
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %646, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %14) #9
  %650 = load i32, i32* %592, align 8
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %649

652:                                              ; preds = %649
  %653 = load i8, i8* %644, align 8, !range !2
  %654 = icmp eq i8 %653, 0
  br i1 %654, label %659, label %655

655:                                              ; preds = %652
  %656 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %643, align 8
  br label %657

657:                                              ; preds = %655, %641
  %658 = phi %"class.std::__1::mutex"* [ %656, %655 ], [ %645, %641 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %658) #9
  br label %659

659:                                              ; preds = %652, %657
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %642) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %594) #9
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %646) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %591) #9
  br label %726

660:                                              ; preds = %692, %597
  %661 = phi i32 [ 0, %597 ], [ %693, %692 ]
  %662 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %586, align 8
  call void @llvm.lifetime.start.p0i8(i64 3688, i8* nonnull %599)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %599, i8* align 8 %598, i64 3688, i1 false)
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE0_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %600, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %601, align 8
  %663 = call i8* @_Znwm(i64 3752) #10, !noalias !18
  %664 = bitcast i8* %663 to %"class.libgav1::FilmGrain.37"**
  store %"class.libgav1::FilmGrain.37"* %0, %"class.libgav1::FilmGrain.37"** %664, align 8
  %665 = getelementptr inbounds i8, i8* %663, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %665, i8* nonnull align 8 %599, i64 3688, i1 false)
  %666 = getelementptr inbounds i8, i8* %663, i64 3696
  %667 = bitcast i8* %666 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %20, %"class.libgav1::BlockingCounterImpl"** %667, align 8
  %668 = getelementptr inbounds i8, i8* %663, i64 3704
  %669 = bitcast i8* %668 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %21, %"struct.std::__1::atomic"** %669, align 8
  %670 = getelementptr inbounds i8, i8* %663, i64 3712
  %671 = bitcast i8* %670 to i32*
  store i32 %318, i32* %671, align 8
  %672 = getelementptr inbounds i8, i8* %663, i64 3716
  %673 = bitcast i8* %672 to i32*
  store i32 %319, i32* %673, align 4
  %674 = getelementptr inbounds i8, i8* %663, i64 3720
  %675 = bitcast i8* %674 to i8**
  store i8* %1, i8** %675, align 8
  %676 = getelementptr inbounds i8, i8* %663, i64 3728
  %677 = bitcast i8* %676 to i64*
  store i64 %2, i64* %677, align 8
  %678 = getelementptr inbounds i8, i8* %663, i64 3736
  %679 = bitcast i8* %678 to i8**
  store i8* %6, i8** %679, align 8
  %680 = getelementptr inbounds i8, i8* %663, i64 3744
  %681 = bitcast i8* %680 to i64*
  store i64 %7, i64* %681, align 8
  store i8* %663, i8** %602, align 8
  call void @llvm.lifetime.end.p0i8(i64 3688, i8* nonnull %599)
  %682 = bitcast %"class.libgav1::ThreadPool"* %662 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %683 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %682, align 8
  %684 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %683, i64 2
  %685 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %684, align 8
  call void %685(%"class.libgav1::ThreadPool"* %662, %"class.std::__1::function"* nonnull %22) #9
  %686 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %601, align 8
  %687 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %686, i64 0, i32 1
  %688 = load void (i8*)*, void (i8*)** %687, align 8
  %689 = icmp eq void (i8*)* %688, null
  br i1 %689, label %692, label %690

690:                                              ; preds = %660
  %691 = load i8*, i8** %602, align 8
  call void %688(i8* %691) #9
  br label %692

692:                                              ; preds = %660, %690
  %693 = add nuw nsw i32 %661, 1
  %694 = icmp eq i32 %693, %590
  br i1 %694, label %603, label %660

695:                                              ; preds = %585
  %696 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %27, i64 0, i32 11, i32 5
  %697 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %696, align 8
  %698 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %699 = bitcast %"class.libgav1::Array2D.45"* %698 to i8*
  %700 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %28, align 8
  %701 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %700, i64 0, i32 14
  %702 = load i8, i8* %701, align 4
  %703 = zext i8 %702 to i32
  %704 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %705 = load i32, i32* %704, align 4
  %706 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %707 = load i32, i32* %706, align 8
  %708 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 12, i64 0
  call void %697(i8* %699, i32 %318, i32 %319, i32 %703, i32 %705, i32 %707, i32 0, i8* %708, i8* %1, i64 %2, i8* %6, i64 %7) #9
  br label %726

709:                                              ; preds = %584
  %710 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %711 = load i32, i32* %710, align 8
  %712 = icmp eq i8* %1, %6
  br i1 %712, label %726, label %713

713:                                              ; preds = %709
  %714 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %715 = load i32, i32* %714, align 4
  %716 = sext i32 %715 to i64
  %717 = shl nsw i64 %716, 1
  br label %718

718:                                              ; preds = %718, %713
  %719 = phi i8* [ %723, %718 ], [ %6, %713 ]
  %720 = phi i8* [ %722, %718 ], [ %1, %713 ]
  %721 = phi i32 [ %724, %718 ], [ 0, %713 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %719, i8* align 1 %720, i64 %717, i1 false) #9
  %722 = getelementptr inbounds i8, i8* %720, i64 %2
  %723 = getelementptr inbounds i8, i8* %719, i64 %7
  %724 = add nuw nsw i32 %721, 1
  %725 = icmp slt i32 %724, %711
  br i1 %725, label %718, label %726

726:                                              ; preds = %718, %709, %93, %659, %695, %24, %11
  %727 = phi i1 [ false, %11 ], [ false, %24 ], [ false, %93 ], [ true, %659 ], [ true, %695 ], [ true, %709 ], [ true, %718 ]
  ret i1 %727
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi10EE4InitEv(%"class.libgav1::FilmGrain.37"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call %"struct.libgav1::dsp::Dsp"* @_ZN7libgav13dsp11GetDspTableEi(i32 10) #9
  %3 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 0
  %4 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %5 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %4, i64 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  br i1 %7, label %8, label %62

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 9, i64 0
  %10 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %4, i64 0, i32 22
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 2
  %13 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %4, i64 0, i32 20
  %14 = load i16, i16* %13, align 2
  %15 = shl i32 1, %12
  %16 = ashr i32 %15, 1
  br label %17

17:                                               ; preds = %21, %8
  %18 = phi i32 [ 0, %8 ], [ %24, %21 ]
  %19 = phi i16* [ %9, %8 ], [ %23, %21 ]
  %20 = phi i16 [ %14, %8 ], [ %22, %21 ]
  br label %26

21:                                               ; preds = %26
  %22 = trunc i32 %37 to i16
  %23 = getelementptr inbounds i16, i16* %19, i64 82
  %24 = add nuw nsw i32 %18, 1
  %25 = icmp eq i32 %24, 73
  br i1 %25, label %51, label %17

26:                                               ; preds = %26, %17
  %27 = phi i64 [ 0, %17 ], [ %49, %26 ]
  %28 = phi i16 [ %20, %17 ], [ %38, %26 ]
  %29 = zext i16 %28 to i32
  %30 = lshr i32 %29, 1
  %31 = xor i32 %30, %29
  %32 = lshr i32 %29, 3
  %33 = xor i32 %31, %32
  %34 = lshr i32 %29, 12
  %35 = xor i32 %33, %34
  %36 = shl nuw nsw i32 %35, 15
  %37 = or i32 %36, %30
  %38 = trunc i32 %37 to i16
  %39 = lshr i32 %37, 5
  %40 = and i32 %39, 2047
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [2048 x i16], [2048 x i16]* @_ZN7libgav112_GLOBAL__N_117kGaussianSequenceE, i64 0, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i32
  %45 = add nsw i32 %16, %44
  %46 = ashr i32 %45, %12
  %47 = trunc i32 %46 to i16
  %48 = getelementptr inbounds i16, i16* %19, i64 %27
  store i16 %47, i16* %48, align 2
  %49 = add nuw nsw i64 %27, 1
  %50 = icmp eq i64 %49, 82
  br i1 %50, label %21, label %26

51:                                               ; preds = %21
  %52 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %53 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %52, i64 0, i32 15
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = zext i8 %54 to i64
  %58 = add nsw i64 %57, -1
  %59 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 0, i64 %58
  %60 = load void (%"struct.libgav1::FilmGrainParams"*, i8*)*, void (%"struct.libgav1::FilmGrainParams"*, i8*)** %59, align 8
  %61 = bitcast i16* %9 to i8*
  tail call void %60(%"struct.libgav1::FilmGrainParams"* dereferenceable(172) %52, i8* %61) #9
  br label %62

62:                                               ; preds = %1, %51, %56
  %63 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %92

66:                                               ; preds = %62
  %67 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %68 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 7
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 8
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 10, i64 0
  %73 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 11, i64 0
  tail call void @_ZN7libgav19FilmGrainILi10EE20GenerateChromaGrainsERKNS_15FilmGrainParamsEiiPsS5_(%"struct.libgav1::FilmGrainParams"* dereferenceable(172) %67, i32 %69, i32 %71, i16* %72, i16* %73)
  %74 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %75 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %74, i64 0, i32 15
  %76 = load i8, i8* %75, align 1
  %77 = or i8 %76, %6
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %92, label %79

79:                                               ; preds = %66
  %80 = zext i1 %7 to i64
  %81 = zext i8 %76 to i64
  %82 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 1, i64 %80, i64 %81
  %83 = load void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*, void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)** %82, align 8
  %84 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 9, i64 0
  %85 = bitcast i16* %84 to i8*
  %86 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = bitcast i16* %72 to i8*
  %91 = bitcast i16* %73 to i8*
  tail call void %83(%"struct.libgav1::FilmGrainParams"* dereferenceable(172) %74, i8* %85, i32 %87, i32 %89, i8* %90, i8* %91) #9
  br label %92

92:                                               ; preds = %66, %62, %79
  %93 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  br i1 %7, label %98, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %93, i64 0, i32 2
  %96 = load i8, i8* %95, align 2, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %92, %94
  %99 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 4
  %100 = load void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)** %99, align 8
  %101 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %93, i64 0, i32 5
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %93, i64 0, i32 8, i64 0
  %105 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %93, i64 0, i32 9, i64 0
  %106 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 12, i64 0
  tail call void %100(i32 %103, i8* %104, i8* %105, i8* %106) #9
  br label %107

107:                                              ; preds = %94, %98
  %108 = load i8, i8* %63, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %171

110:                                              ; preds = %107
  %111 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %112 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %111, i64 0, i32 2
  %113 = load i8, i8* %112, align 2, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 12, i64 0
  %117 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 13
  store i8* %116, i8** %117, align 8
  %118 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 14
  store i8* %116, i8** %118, align 8
  br label %171

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %111, i64 0, i32 6
  %121 = load i8, i8* %120, align 2
  %122 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %111, i64 0, i32 7
  %123 = load i8, i8* %122, align 1
  %124 = or i8 %121, %123
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %171, label %126

126:                                              ; preds = %119
  %127 = icmp ne i8 %121, 0
  %128 = zext i1 %127 to i64
  %129 = icmp ne i8 %123, 0
  %130 = zext i1 %129 to i64
  %131 = add nuw nsw i64 %130, %128
  %132 = mul nuw nsw i64 %131, 263
  %133 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %132, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %134 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  store i8* %133, i8** %134, align 8
  %136 = icmp eq i8* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %126
  tail call void @_ZdaPv(i8* nonnull %135) #10
  %138 = load i8*, i8** %134, align 8
  br label %139

139:                                              ; preds = %126, %137
  %140 = phi i8* [ %133, %126 ], [ %138, %137 ]
  %141 = icmp eq i8* %140, null
  br i1 %141, label %171, label %142

142:                                              ; preds = %139
  %143 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  %144 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %143, i64 0, i32 6
  %145 = load i8, i8* %144, align 2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %157, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 13
  store i8* %140, i8** %148, align 8
  %149 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 4
  %150 = load void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)** %149, align 8
  %151 = load i8, i8* %144, align 2
  %152 = zext i8 %151 to i32
  %153 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %143, i64 0, i32 10, i64 0
  %154 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %143, i64 0, i32 11, i64 0
  tail call void %150(i32 %152, i8* %153, i8* %154, i8* nonnull %140) #9
  %155 = getelementptr inbounds i8, i8* %140, i64 263
  %156 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %3, align 8
  br label %157

157:                                              ; preds = %142, %147
  %158 = phi %"struct.libgav1::FilmGrainParams"* [ %156, %147 ], [ %143, %142 ]
  %159 = phi i8* [ %155, %147 ], [ %140, %142 ]
  %160 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %158, i64 0, i32 7
  %161 = load i8, i8* %160, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 14
  store i8* %159, i8** %164, align 8
  %165 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %2, i64 0, i32 11, i32 4
  %166 = load void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)** %165, align 8
  %167 = load i8, i8* %160, align 1
  %168 = zext i8 %167 to i32
  %169 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %158, i64 0, i32 12, i64 0
  %170 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %158, i64 0, i32 13, i64 0
  tail call void %166(i32 %168, i8* %169, i8* %170, i8* %159) #9
  br label %171

171:                                              ; preds = %119, %139, %115, %107, %163, %157
  %172 = phi i1 [ true, %157 ], [ true, %163 ], [ true, %107 ], [ true, %115 ], [ false, %139 ], [ true, %119 ]
  ret i1 %172
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi10EE20AllocateNoiseStripesEv(%"class.libgav1::FilmGrain.37"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  %5 = ashr i32 %4, 1
  %6 = add nsw i32 %5, 15
  %7 = ashr i32 %6, 4
  %8 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 0
  %9 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %8, align 8
  %10 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %9, i64 0, i32 5
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = mul nsw i32 %7, 34
  %15 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = mul nsw i32 %14, %16
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %18, 7
  br label %20

20:                                               ; preds = %1, %13
  %21 = phi i64 [ %19, %13 ], [ 7, %1 ]
  %22 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %40

25:                                               ; preds = %20
  %26 = shl nsw i32 %7, 1
  %27 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = lshr i32 34, %28
  %30 = mul nsw i32 %26, %29
  %31 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %32
  %36 = ashr i32 %35, %34
  %37 = mul nsw i32 %30, %36
  %38 = sext i32 %37 to i64
  %39 = add nsw i64 %21, %38
  br label %40

40:                                               ; preds = %20, %25
  %41 = phi i64 [ %21, %20 ], [ %39, %25 ]
  %42 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %41, i64 2)
  %43 = extractvalue { i64, i1 } %42, 1
  %44 = extractvalue { i64, i1 } %42, 0
  %45 = select i1 %43, i64 -1, i64 %44
  %46 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %45, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %47 = bitcast i8* %46 to i16*
  %48 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = bitcast i16** %48 to i8**
  store i8* %46, i8** %50, align 8
  %51 = icmp eq i16* %49, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %40
  %53 = bitcast i16* %49 to i8*
  tail call void @_ZdaPv(i8* %53) #10
  %54 = load i16*, i16** %48, align 8
  br label %55

55:                                               ; preds = %40, %52
  %56 = phi i16* [ %47, %40 ], [ %54, %52 ]
  %57 = icmp eq i16* %56, null
  br i1 %57, label %98, label %58

58:                                               ; preds = %55
  %59 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %8, align 8
  %60 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %59, i64 0, i32 5
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = mul nsw i32 %65, 34
  %67 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 0, i32 0
  store i32 %7, i32* %67, align 8
  %68 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 0, i32 1
  store i32 %66, i32* %68, align 4
  %69 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 0, i32 2
  store i16* %56, i16** %69, align 8
  %70 = mul nsw i32 %7, 34
  %71 = mul nsw i32 %70, %65
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %56, i64 %72
  br label %74

74:                                               ; preds = %58, %63
  %75 = phi i16* [ %73, %63 ], [ %56, %58 ]
  %76 = load i8, i8* %22, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %98

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = lshr i32 34, %80
  %82 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = add nsw i32 %85, %83
  %87 = ashr i32 %86, %85
  %88 = mul i32 %87, %81
  %89 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 1, i32 0
  store i32 %7, i32* %89, align 8
  %90 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 1, i32 1
  store i32 %88, i32* %90, align 4
  %91 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 1, i32 2
  store i16* %75, i16** %91, align 8
  %92 = mul i32 %88, %7
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i16, i16* %75, i64 %93
  %95 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 2, i32 0
  store i32 %7, i32* %95, align 8
  %96 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 2, i32 1
  store i32 %88, i32* %96, align 4
  %97 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 16, i64 2, i32 2
  store i16* %94, i16** %97, align 8
  br label %98

98:                                               ; preds = %78, %74, %55
  %99 = phi i1 [ false, %55 ], [ true, %74 ], [ true, %78 ]
  ret i1 %99
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN7libgav19FilmGrainILi10EE18AllocateNoiseImageEv(%"class.libgav1::FilmGrain.37"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 0
  %3 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %2, align 8
  %4 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %3, i64 0, i32 5
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %9 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 7
  %14 = mul nsw i32 %13, %10
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %15
  br i1 %19, label %23, label %20

20:                                               ; preds = %7
  %21 = bitcast %"class.libgav1::Array2D.45"* %8 to i64*
  %22 = load i64, i64* %21, align 8
  br label %45

23:                                               ; preds = %7
  %24 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %15, i64 2) #9
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 -1, i64 %26
  %28 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %27, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %29 = getelementptr inbounds %"class.libgav1::Array2D.45", %"class.libgav1::Array2D.45"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = bitcast %"class.libgav1::Array2D.45"* %8 to i8**
  store i8* %28, i8** %31, align 8
  %32 = icmp eq i16* %30, null
  %33 = bitcast i8* %28 to i16*
  %34 = ptrtoint i8* %28 to i64
  br i1 %32, label %39, label %35

35:                                               ; preds = %23
  %36 = bitcast i16* %30 to i8*
  tail call void @_ZdaPv(i8* %36) #10
  %37 = load i16*, i16** %29, align 8
  %38 = ptrtoint i16* %37 to i64
  br label %39

39:                                               ; preds = %35, %23
  %40 = phi i64 [ %38, %35 ], [ %34, %23 ]
  %41 = phi i16* [ %37, %35 ], [ %33, %23 ]
  %42 = icmp eq i16* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = load i64, i64* %16, align 8
  store i64 %44, i64* %17, align 8
  br label %45

45:                                               ; preds = %20, %43
  %46 = phi i64 [ %22, %20 ], [ %40, %43 ]
  %47 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0, i32 3, i32 0
  store i32 %10, i32* %47, align 8
  %48 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0, i32 3, i32 1
  store i32 %13, i32* %48, align 4
  %49 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0, i32 3, i32 2
  %50 = bitcast i16** %49 to i64*
  store i64 %46, i64* %50, align 8
  br label %52

51:                                               ; preds = %39
  store i64 0, i64* %17, align 8
  br label %160

52:                                               ; preds = %45, %1
  %53 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 1
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %160

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 1
  %58 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = add nsw i32 %61, %59
  %63 = ashr i32 %62, %61
  %64 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, %65
  %69 = ashr i32 %68, %67
  %70 = add nsw i32 %69, 7
  %71 = mul nsw i32 %70, %63
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 1, i32 2
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 1, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %75, %72
  br i1 %76, label %80, label %77

77:                                               ; preds = %56
  %78 = bitcast %"class.libgav1::Array2D.45"* %57 to i64*
  %79 = load i64, i64* %78, align 8
  br label %114

80:                                               ; preds = %56
  %81 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %72, i64 2) #9
  %82 = extractvalue { i64, i1 } %81, 1
  %83 = extractvalue { i64, i1 } %81, 0
  %84 = select i1 %82, i64 -1, i64 %83
  %85 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %84, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %86 = getelementptr inbounds %"class.libgav1::Array2D.45", %"class.libgav1::Array2D.45"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i16*, i16** %86, align 8
  %88 = bitcast %"class.libgav1::Array2D.45"* %57 to i8**
  store i8* %85, i8** %88, align 8
  %89 = icmp eq i16* %87, null
  %90 = bitcast i8* %85 to i16*
  %91 = ptrtoint i8* %85 to i64
  br i1 %89, label %96, label %92

92:                                               ; preds = %80
  %93 = bitcast i16* %87 to i8*
  tail call void @_ZdaPv(i8* %93) #10
  %94 = load i16*, i16** %86, align 8
  %95 = ptrtoint i16* %94 to i64
  br label %96

96:                                               ; preds = %92, %80
  %97 = phi i64 [ %95, %92 ], [ %91, %80 ]
  %98 = phi i16* [ %94, %92 ], [ %90, %80 ]
  %99 = icmp eq i16* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = load i64, i64* %73, align 8
  store i64 %101, i64* %74, align 8
  %102 = load i32, i32* %58, align 8
  %103 = load i32, i32* %60, align 8
  %104 = load i32, i32* %64, align 4
  %105 = load i32, i32* %66, align 4
  %106 = add nsw i32 %103, %102
  %107 = ashr i32 %106, %103
  %108 = add nsw i32 %105, %104
  %109 = ashr i32 %108, %105
  %110 = add nsw i32 %109, 7
  %111 = mul nsw i32 %110, %107
  %112 = sext i32 %111 to i64
  br label %114

113:                                              ; preds = %96
  store i64 0, i64* %74, align 8
  br label %160

114:                                              ; preds = %77, %100
  %115 = phi i64 [ %72, %77 ], [ %112, %100 ]
  %116 = phi i32 [ %70, %77 ], [ %110, %100 ]
  %117 = phi i32 [ %63, %77 ], [ %107, %100 ]
  %118 = phi i64 [ %79, %77 ], [ %97, %100 ]
  %119 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 1, i32 3, i32 0
  store i32 %63, i32* %119, align 8
  %120 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 1, i32 3, i32 1
  store i32 %70, i32* %120, align 4
  %121 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 1, i32 3, i32 2
  %122 = bitcast i16** %121 to i64*
  store i64 %118, i64* %122, align 8
  %123 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 2
  %124 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 2, i32 2
  store i64 %115, i64* %124, align 8
  %125 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 2, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = icmp ult i64 %126, %115
  br i1 %127, label %131, label %128

128:                                              ; preds = %114
  %129 = bitcast %"class.libgav1::Array2D.45"* %123 to i64*
  %130 = load i64, i64* %129, align 8
  br label %153

131:                                              ; preds = %114
  %132 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %115, i64 2) #9
  %133 = extractvalue { i64, i1 } %132, 1
  %134 = extractvalue { i64, i1 } %132, 0
  %135 = select i1 %133, i64 -1, i64 %134
  %136 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %135, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #10
  %137 = getelementptr inbounds %"class.libgav1::Array2D.45", %"class.libgav1::Array2D.45"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i16*, i16** %137, align 8
  %139 = bitcast %"class.libgav1::Array2D.45"* %123 to i8**
  store i8* %136, i8** %139, align 8
  %140 = icmp eq i16* %138, null
  %141 = bitcast i8* %136 to i16*
  %142 = ptrtoint i8* %136 to i64
  br i1 %140, label %147, label %143

143:                                              ; preds = %131
  %144 = bitcast i16* %138 to i8*
  tail call void @_ZdaPv(i8* %144) #10
  %145 = load i16*, i16** %137, align 8
  %146 = ptrtoint i16* %145 to i64
  br label %147

147:                                              ; preds = %143, %131
  %148 = phi i64 [ %146, %143 ], [ %142, %131 ]
  %149 = phi i16* [ %145, %143 ], [ %141, %131 ]
  %150 = icmp eq i16* %149, null
  br i1 %150, label %159, label %151

151:                                              ; preds = %147
  %152 = load i64, i64* %124, align 8
  store i64 %152, i64* %125, align 8
  br label %153

153:                                              ; preds = %128, %151
  %154 = phi i64 [ %130, %128 ], [ %148, %151 ]
  %155 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 2, i32 3, i32 0
  store i32 %117, i32* %155, align 8
  %156 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 2, i32 3, i32 1
  store i32 %116, i32* %156, align 4
  %157 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 2, i32 3, i32 2
  %158 = bitcast i16** %157 to i64*
  store i64 %154, i64* %158, align 8
  br label %160

159:                                              ; preds = %147
  store i64 0, i64* %125, align 8
  br label %160

160:                                              ; preds = %52, %153, %159, %113, %51
  %161 = phi i1 [ false, %51 ], [ false, %113 ], [ false, %159 ], [ true, %153 ], [ true, %52 ]
  ret i1 %161
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi10EE22BlendNoiseChromaWorkerERKNS_3dsp3DspEPKNS_5PlaneEiPNSt3__16atomicIiEEiiPKhlSE_SE_lPhSF_l(%"class.libgav1::FilmGrain.37"*, %"struct.libgav1::dsp::Dsp"* dereferenceable(3688), i8*, i32, %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i8*, i64, i8*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %16 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = sdiv i32 %17, 8
  %19 = and i32 %17, 7
  %20 = mul nsw i32 %18, %3
  %21 = icmp eq i32 %19, 0
  %22 = select i1 %21, i32 0, i32 %3
  %23 = add nsw i32 %22, %20
  %24 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  %26 = icmp slt i32 %25, %23
  br i1 %26, label %27, label %73

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 13
  %29 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 14
  %30 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %33 = bitcast %"class.libgav1::Array2D.45"* %32 to i8*
  %34 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 3
  br label %36

36:                                               ; preds = %27, %36
  %37 = phi i32 [ %25, %27 ], [ %71, %36 ]
  %38 = srem i32 %37, %3
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %2, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = sdiv i32 %37, %3
  %43 = shl nsw i32 %42, 3
  %44 = load i32, i32* %16, align 8
  %45 = sub nsw i32 %44, %43
  %46 = icmp slt i32 %45, 8
  %47 = select i1 %46, i32 %45, i32 8
  %48 = sext i32 %43 to i64
  %49 = mul nsw i64 %48, %8
  %50 = getelementptr inbounds i8, i8* %7, i64 %49
  %51 = icmp eq i8 %41, 1
  %52 = select i1 %51, i8** %28, i8** %29
  %53 = select i1 %51, i8* %9, i8* %10
  %54 = select i1 %51, i8* %12, i8* %13
  %55 = load i8*, i8** %52, align 8
  %56 = load i32, i32* %30, align 8
  %57 = ashr i32 %43, %56
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %58, %11
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  %61 = mul nsw i64 %58, %14
  %62 = getelementptr inbounds i8, i8* %54, i64 %61
  %63 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %31, align 8
  %64 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 11, i32 6, i64 %66
  %68 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %67, align 8
  %69 = load i32, i32* %34, align 4
  %70 = load i32, i32* %35, align 4
  tail call void %68(i8 zeroext %41, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %63, i8* %33, i32 %5, i32 %6, i32 %69, i32 %47, i32 %43, i32 %70, i32 %56, i8* %55, i8* %50, i64 %8, i8* %60, i64 %11, i8* %62, i64 %14) #9
  %71 = atomicrmw add i32* %24, i32 1 monotonic
  %72 = icmp slt i32 %71, %23
  br i1 %72, label %36, label %73

73:                                               ; preds = %36, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav19FilmGrainILi10EE20BlendNoiseLumaWorkerERKNS_3dsp3DspEPNSt3__16atomicIiEEiiPKhlPhl(%"class.libgav1::FilmGrain.37"*, %"struct.libgav1::dsp::Dsp"* dereferenceable(3688), %"struct.std::__1::atomic"*, i32, i32, i8*, i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %10 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = sdiv i32 %11, 8
  %13 = and i32 %11, 7
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i32
  %16 = add nsw i32 %12, %15
  %17 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  %19 = icmp slt i32 %18, %16
  br i1 %19, label %20, label %47

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %1, i64 0, i32 11, i32 5
  %22 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 18, i64 0
  %23 = bitcast %"class.libgav1::Array2D.45"* %22 to i8*
  %24 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 0
  %25 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %0, i64 0, i32 12, i64 0
  br label %27

27:                                               ; preds = %20, %27
  %28 = phi i32 [ %18, %20 ], [ %45, %27 ]
  %29 = shl nsw i32 %28, 3
  %30 = load i32, i32* %10, align 8
  %31 = sub nsw i32 %30, %29
  %32 = icmp slt i32 %31, 8
  %33 = select i1 %32, i32 %31, i32 8
  %34 = sext i32 %29 to i64
  %35 = mul nsw i64 %34, %6
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = mul nsw i64 %34, %8
  %38 = getelementptr inbounds i8, i8* %7, i64 %37
  %39 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %21, align 8
  %40 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %24, align 8
  %41 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %40, i64 0, i32 14
  %42 = load i8, i8* %41, align 4
  %43 = zext i8 %42 to i32
  %44 = load i32, i32* %25, align 4
  tail call void %39(i8* %23, i32 %3, i32 %4, i32 %43, i32 %44, i32 %33, i32 %29, i8* %26, i8* %36, i64 %6, i8* %38, i64 %8) #9
  %45 = atomicrmw add i32* %17, i32 1 monotonic
  %46 = icmp slt i32 %45, %16
  br i1 %46, label %27, label %47

47:                                               ; preds = %27, %9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %3 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0
  tail call void @_ZZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE_clEv(%class.anon* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE_clEv(%class.anon*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %3 = load %"class.libgav1::FilmGrain"*, %"class.libgav1::FilmGrain"** %2, align 8
  %4 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %5 = load [2 x i8]*, [2 x i8]** %4, align 8
  %6 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 5
  %9 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %8, align 8
  %10 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 9
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 10
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 11
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 12
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 13
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 14
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 15
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = sdiv i32 %31, 8
  %33 = and i32 %31, 7
  %34 = mul nsw i32 %32, %7
  %35 = icmp eq i32 %33, 0
  %36 = select i1 %35, i32 0, i32 %7
  %37 = add nsw i32 %36, %34
  %38 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  %40 = icmp slt i32 %39, %37
  br i1 %40, label %41, label %87

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 13
  %43 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 14
  %44 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 4
  %45 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 0
  %46 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 18, i64 0
  %47 = bitcast %"class.libgav1::Array2D"* %46 to i8*
  %48 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 5
  %49 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 3
  br label %50

50:                                               ; preds = %50, %41
  %51 = phi i32 [ %39, %41 ], [ %85, %50 ]
  %52 = srem i32 %51, %7
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sdiv i32 %51, %7
  %57 = shl nsw i32 %56, 3
  %58 = load i32, i32* %30, align 8
  %59 = sub nsw i32 %58, %57
  %60 = icmp slt i32 %59, 8
  %61 = select i1 %60, i32 %59, i32 8
  %62 = sext i32 %57 to i64
  %63 = mul nsw i64 %17, %62
  %64 = getelementptr inbounds i8, i8* %15, i64 %63
  %65 = icmp eq i8 %55, 1
  %66 = select i1 %65, i8** %42, i8** %43
  %67 = select i1 %65, i8* %19, i8* %21
  %68 = select i1 %65, i8* %25, i8* %27
  %69 = load i8*, i8** %66, align 8
  %70 = load i32, i32* %44, align 8
  %71 = ashr i32 %57, %70
  %72 = sext i32 %71 to i64
  %73 = mul nsw i64 %23, %72
  %74 = getelementptr inbounds i8, i8* %67, i64 %73
  %75 = mul nsw i64 %29, %72
  %76 = getelementptr inbounds i8, i8* %68, i64 %75
  %77 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %45, align 8
  %78 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %77, i64 0, i32 2
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1, i32 11, i32 6, i64 %80
  %82 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %81, align 8
  %83 = load i32, i32* %48, align 4
  %84 = load i32, i32* %49, align 4
  tail call void %82(i8 zeroext %55, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %77, i8* %47, i32 %11, i32 %13, i32 %83, i32 %61, i32 %57, i32 %84, i32 %70, i8* %69, i8* %64, i64 %17, i8* %74, i64 %23, i8* %76, i64 %29) #9
  %85 = atomicrmw add i32* %38, i32 1 monotonic
  %86 = icmp slt i32 %85, %37
  br i1 %86, label %50, label %87

87:                                               ; preds = %50, %1
  %88 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %89 = load %"class.libgav1::BlockingCounterImpl"*, %"class.libgav1::BlockingCounterImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %89, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %90) #9
  %91 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %89, i64 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = add nsw i32 %92, -1
  store i32 %93, i32* %91, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %89, i64 0, i32 1
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %96) #9
  br label %97

97:                                               ; preds = %87, %95
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %90) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #5

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPvPKv(i8*) #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 3800) #10, !noalias !23
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 3800, i1 false) #9
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEvPv(i8*) #0 comdat align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE0_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.53"**
  %3 = load %"class.std::__1::__function::__default_alloc_func.53"*, %"class.std::__1::__function::__default_alloc_func.53"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.53", %"class.std::__1::__function::__default_alloc_func.53"* %3, i64 0, i32 0
  tail call void @_ZZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE0_clEv(%class.anon.36* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE0_clEv(%class.anon.36*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 0
  %3 = load %"class.libgav1::FilmGrain"*, %"class.libgav1::FilmGrain"** %2, align 8
  %4 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 3
  %5 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %4, align 8
  %6 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 6
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 9
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = sdiv i32 %19, 8
  %21 = and i32 %19, 7
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i32
  %24 = add nsw i32 %20, %23
  %25 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  %27 = icmp slt i32 %26, %24
  br i1 %27, label %28, label %55

28:                                               ; preds = %1
  %29 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 1, i32 11, i32 5
  %30 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 18, i64 0
  %31 = bitcast %"class.libgav1::Array2D"* %30 to i8*
  %32 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 5
  %34 = getelementptr inbounds %"class.libgav1::FilmGrain", %"class.libgav1::FilmGrain"* %3, i64 0, i32 12, i64 0
  br label %35

35:                                               ; preds = %35, %28
  %36 = phi i32 [ %26, %28 ], [ %53, %35 ]
  %37 = shl nsw i32 %36, 3
  %38 = load i32, i32* %18, align 8
  %39 = sub nsw i32 %38, %37
  %40 = icmp slt i32 %39, 8
  %41 = select i1 %40, i32 %39, i32 8
  %42 = sext i32 %37 to i64
  %43 = mul nsw i64 %13, %42
  %44 = getelementptr inbounds i8, i8* %11, i64 %43
  %45 = mul nsw i64 %17, %42
  %46 = getelementptr inbounds i8, i8* %15, i64 %45
  %47 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %29, align 8
  %48 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %32, align 8
  %49 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %48, i64 0, i32 14
  %50 = load i8, i8* %49, align 4
  %51 = zext i8 %50 to i32
  %52 = load i32, i32* %33, align 4
  tail call void %47(i8* %31, i32 %7, i32 %9, i32 %51, i32 %52, i32 %41, i32 %37, i8* %34, i8* %44, i64 %13, i8* %46, i64 %17) #9
  %53 = atomicrmw add i32* %25, i32 1 monotonic
  %54 = icmp slt i32 %53, %24
  br i1 %54, label %35, label %55

55:                                               ; preds = %35, %1
  %56 = getelementptr inbounds %class.anon.36, %class.anon.36* %0, i64 0, i32 2
  %57 = load %"class.libgav1::BlockingCounterImpl"*, %"class.libgav1::BlockingCounterImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %57, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %58) #9
  %59 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %57, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add nsw i32 %60, -1
  store i32 %61, i32* %59, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %57, i64 0, i32 1
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %64) #9
  br label %65

65:                                               ; preds = %55, %63
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %58) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPvPKv(i8*) #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 3752) #10, !noalias !28
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 3752, i1 false) #9
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEvPv(i8*) #0 comdat align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.55"**
  %3 = load %"class.std::__1::__function::__default_alloc_func.55"*, %"class.std::__1::__function::__default_alloc_func.55"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.55", %"class.std::__1::__function::__default_alloc_func.55"* %3, i64 0, i32 0
  tail call void @_ZZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE_clEv(%class.anon.46* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE_clEv(%class.anon.46*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 0
  %3 = load %"class.libgav1::FilmGrain.37"*, %"class.libgav1::FilmGrain.37"** %2, align 8
  %4 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 3
  %5 = load [2 x i8]*, [2 x i8]** %4, align 8
  %6 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 5
  %9 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %8, align 8
  %10 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 9
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 10
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 11
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 12
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 13
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 14
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 15
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = sdiv i32 %31, 8
  %33 = and i32 %31, 7
  %34 = mul nsw i32 %32, %7
  %35 = icmp eq i32 %33, 0
  %36 = select i1 %35, i32 0, i32 %7
  %37 = add nsw i32 %36, %34
  %38 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  %40 = icmp slt i32 %39, %37
  br i1 %40, label %41, label %87

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 13
  %43 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 14
  %44 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 4
  %45 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 0
  %46 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 18, i64 0
  %47 = bitcast %"class.libgav1::Array2D.45"* %46 to i8*
  %48 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 5
  %49 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 3
  br label %50

50:                                               ; preds = %50, %41
  %51 = phi i32 [ %39, %41 ], [ %85, %50 ]
  %52 = srem i32 %51, %7
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = sdiv i32 %51, %7
  %57 = shl nsw i32 %56, 3
  %58 = load i32, i32* %30, align 8
  %59 = sub nsw i32 %58, %57
  %60 = icmp slt i32 %59, 8
  %61 = select i1 %60, i32 %59, i32 8
  %62 = sext i32 %57 to i64
  %63 = mul nsw i64 %17, %62
  %64 = getelementptr inbounds i8, i8* %15, i64 %63
  %65 = icmp eq i8 %55, 1
  %66 = select i1 %65, i8** %42, i8** %43
  %67 = select i1 %65, i8* %19, i8* %21
  %68 = select i1 %65, i8* %25, i8* %27
  %69 = load i8*, i8** %66, align 8
  %70 = load i32, i32* %44, align 8
  %71 = ashr i32 %57, %70
  %72 = sext i32 %71 to i64
  %73 = mul nsw i64 %23, %72
  %74 = getelementptr inbounds i8, i8* %67, i64 %73
  %75 = mul nsw i64 %29, %72
  %76 = getelementptr inbounds i8, i8* %68, i64 %75
  %77 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %45, align 8
  %78 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %77, i64 0, i32 2
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 1, i32 11, i32 6, i64 %80
  %82 = load void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*, void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)** %81, align 8
  %83 = load i32, i32* %48, align 4
  %84 = load i32, i32* %49, align 4
  tail call void %82(i8 zeroext %55, %"struct.libgav1::FilmGrainParams"* dereferenceable(172) %77, i8* %47, i32 %11, i32 %13, i32 %83, i32 %61, i32 %57, i32 %84, i32 %70, i8* %69, i8* %64, i64 %17, i8* %74, i64 %23, i8* %76, i64 %29) #9
  %85 = atomicrmw add i32* %38, i32 1 monotonic
  %86 = icmp slt i32 %85, %37
  br i1 %86, label %50, label %87

87:                                               ; preds = %50, %1
  %88 = getelementptr inbounds %class.anon.46, %class.anon.46* %0, i64 0, i32 2
  %89 = load %"class.libgav1::BlockingCounterImpl"*, %"class.libgav1::BlockingCounterImpl"** %88, align 8
  %90 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %89, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %90) #9
  %91 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %89, i64 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = add nsw i32 %92, -1
  store i32 %93, i32* %91, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %89, i64 0, i32 1
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %96) #9
  br label %97

97:                                               ; preds = %87, %95
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %90) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEPvPKv(i8*) #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 3800) #10, !noalias !33
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 3800, i1 false) #9
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEEvPv(i8*) #0 comdat align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlSA_SA_lPhlSB_SB_lEUlvE0_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.57"**
  %3 = load %"class.std::__1::__function::__default_alloc_func.57"*, %"class.std::__1::__function::__default_alloc_func.57"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %3, i64 0, i32 0
  tail call void @_ZZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE0_clEv(%class.anon.47* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS3_S3_lPhlS4_S4_lENKUlvE0_clEv(%class.anon.47*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 0
  %3 = load %"class.libgav1::FilmGrain.37"*, %"class.libgav1::FilmGrain.37"** %2, align 8
  %4 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 3
  %5 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %4, align 8
  %6 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 6
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 9
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = sdiv i32 %19, 8
  %21 = and i32 %19, 7
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i32
  %24 = add nsw i32 %20, %23
  %25 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  %27 = icmp slt i32 %26, %24
  br i1 %27, label %28, label %55

28:                                               ; preds = %1
  %29 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 1, i32 11, i32 5
  %30 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 18, i64 0
  %31 = bitcast %"class.libgav1::Array2D.45"* %30 to i8*
  %32 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 5
  %34 = getelementptr inbounds %"class.libgav1::FilmGrain.37", %"class.libgav1::FilmGrain.37"* %3, i64 0, i32 12, i64 0
  br label %35

35:                                               ; preds = %35, %28
  %36 = phi i32 [ %26, %28 ], [ %53, %35 ]
  %37 = shl nsw i32 %36, 3
  %38 = load i32, i32* %18, align 8
  %39 = sub nsw i32 %38, %37
  %40 = icmp slt i32 %39, 8
  %41 = select i1 %40, i32 %39, i32 8
  %42 = sext i32 %37 to i64
  %43 = mul nsw i64 %13, %42
  %44 = getelementptr inbounds i8, i8* %11, i64 %43
  %45 = mul nsw i64 %17, %42
  %46 = getelementptr inbounds i8, i8* %15, i64 %45
  %47 = load void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)** %29, align 8
  %48 = load %"struct.libgav1::FilmGrainParams"*, %"struct.libgav1::FilmGrainParams"** %32, align 8
  %49 = getelementptr inbounds %"struct.libgav1::FilmGrainParams", %"struct.libgav1::FilmGrainParams"* %48, i64 0, i32 14
  %50 = load i8, i8* %49, align 4
  %51 = zext i8 %50 to i32
  %52 = load i32, i32* %33, align 4
  tail call void %47(i8* %31, i32 %7, i32 %9, i32 %51, i32 %52, i32 %41, i32 %37, i8* %34, i8* %44, i64 %13, i8* %46, i64 %17) #9
  %53 = atomicrmw add i32* %25, i32 1 monotonic
  %54 = icmp slt i32 %53, %24
  br i1 %54, label %35, label %55

55:                                               ; preds = %35, %1
  %56 = getelementptr inbounds %class.anon.47, %class.anon.47* %0, i64 0, i32 2
  %57 = load %"class.libgav1::BlockingCounterImpl"*, %"class.libgav1::BlockingCounterImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %57, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %58) #9
  %59 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %57, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add nsw i32 %60, -1
  store i32 %61, i32* %59, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %57, i64 0, i32 1
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %64) #9
  br label %65

65:                                               ; preds = %55, %63
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %58) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEPvPKv(i8*) #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 3752) #10, !noalias !38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 3752, i1 false) #9
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEEvPv(i8*) #0 comdat align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!11 = distinct !{!11, !12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!16 = distinct !{!16, !17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!26 = distinct !{!26, !27, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!31 = distinct !{!31, !32, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi8EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!36 = distinct !{!36, !37, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!41 = distinct !{!41, !42, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav19FilmGrainILi10EE8AddNoiseEPKhlS8_S8_lPhlS9_S9_lEUlvE0_FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
