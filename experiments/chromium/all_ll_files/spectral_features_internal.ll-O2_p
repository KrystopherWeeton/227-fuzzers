; ModuleID = '../../third_party/webrtc/modules/audio_processing/agc2/rnn_vad/spectral_features_internal.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/agc2/rnn_vad/spectral_features_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [240 x float] }
%"struct.std::__1::array.3" = type { [19 x i32] }
%"class.webrtc::rnn_vad::SpectralCorrelator" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"struct.std::__1::array.6" = type { [484 x float] }

@_ZN6webrtc7rnn_vad12_GLOBAL__N_125kOpusBandWeights24kHz20msE = internal unnamed_addr constant %"struct.std::__1::array" { [240 x float] [float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 0.000000e+00, float 1.250000e-01, float 2.500000e-01, float 3.750000e-01, float 5.000000e-01, float 6.250000e-01, float 7.500000e-01, float 8.750000e-01, float 0.000000e+00, float 1.250000e-01, float 2.500000e-01, float 3.750000e-01, float 5.000000e-01, float 6.250000e-01, float 7.500000e-01, float 8.750000e-01, float 0.000000e+00, float 1.250000e-01, float 2.500000e-01, float 3.750000e-01, float 5.000000e-01, float 6.250000e-01, float 7.500000e-01, float 8.750000e-01, float 0.000000e+00, float 1.250000e-01, float 2.500000e-01, float 3.750000e-01, float 5.000000e-01, float 6.250000e-01, float 7.500000e-01, float 8.750000e-01, float 0.000000e+00, float 6.250000e-02, float 1.250000e-01, float 1.875000e-01, float 2.500000e-01, float 3.125000e-01, float 3.750000e-01, float 4.375000e-01, float 5.000000e-01, float 5.625000e-01, float 6.250000e-01, float 6.875000e-01, float 7.500000e-01, float 8.125000e-01, float 8.750000e-01, float 9.375000e-01, float 0.000000e+00, float 6.250000e-02, float 1.250000e-01, float 1.875000e-01, float 2.500000e-01, float 3.125000e-01, float 3.750000e-01, float 4.375000e-01, float 5.000000e-01, float 5.625000e-01, float 6.250000e-01, float 6.875000e-01, float 7.500000e-01, float 8.125000e-01, float 8.750000e-01, float 9.375000e-01, float 0.000000e+00, float 6.250000e-02, float 1.250000e-01, float 1.875000e-01, float 2.500000e-01, float 3.125000e-01, float 3.750000e-01, float 4.375000e-01, float 5.000000e-01, float 5.625000e-01, float 6.250000e-01, float 6.875000e-01, float 7.500000e-01, float 8.125000e-01, float 8.750000e-01, float 9.375000e-01, float 0.000000e+00, float 0x3FA5555680000000, float 0x3FB55554C0000000, float 1.250000e-01, float 0x3FC5555820000000, float 0x3FCAAAA7E0000000, float 2.500000e-01, float 0x3FD2AAAC20000000, float 0x3FD55553E0000000, float 3.750000e-01, float 0x3FDAAAAC20000000, float 0x3FDD5553E0000000, float 5.000000e-01, float 0x3FE1555600000000, float 0x3FE2AAAA00000000, float 6.250000e-01, float 0x3FE5555600000000, float 0x3FE6AAAA00000000, float 7.500000e-01, float 0x3FE9555600000000, float 0x3FEAAAAA00000000, float 8.750000e-01, float 0x3FED555600000000, float 0x3FEEAAAA00000000, float 0.000000e+00, float 0x3FA5555680000000, float 0x3FB55554C0000000, float 1.250000e-01, float 0x3FC5555820000000, float 0x3FCAAAA7E0000000, float 2.500000e-01, float 0x3FD2AAAC20000000, float 0x3FD55553E0000000, float 3.750000e-01, float 0x3FDAAAAC20000000, float 0x3FDD5553E0000000, float 5.000000e-01, float 0x3FE1555600000000, float 0x3FE2AAAA00000000, float 6.250000e-01, float 0x3FE5555600000000, float 0x3FE6AAAA00000000, float 7.500000e-01, float 0x3FE9555600000000, float 0x3FEAAAAA00000000, float 8.750000e-01, float 0x3FED555600000000, float 0x3FEEAAAA00000000, float 0.000000e+00, float 3.125000e-02, float 6.250000e-02, float 9.375000e-02, float 1.250000e-01, float 1.562500e-01, float 1.875000e-01, float 2.187500e-01, float 2.500000e-01, float 2.812500e-01, float 3.125000e-01, float 3.437500e-01, float 3.750000e-01, float 4.062500e-01, float 4.375000e-01, float 4.687500e-01, float 5.000000e-01, float 5.312500e-01, float 5.625000e-01, float 5.937500e-01, float 6.250000e-01, float 6.562500e-01, float 6.875000e-01, float 7.187500e-01, float 7.500000e-01, float 7.812500e-01, float 8.125000e-01, float 8.437500e-01, float 8.750000e-01, float 9.062500e-01, float 9.375000e-01, float 9.687500e-01, float 0.000000e+00, float 0x3F95555320000000, float 0x3FA5555680000000, float 6.250000e-02, float 0x3FB55554C0000000, float 0x3FBAAAB040000000, float 1.250000e-01, float 0x3FC2AAA7E0000000, float 0x3FC5555820000000, float 1.875000e-01, float 0x3FCAAAA7E0000000, float 0x3FCD555820000000, float 2.500000e-01, float 0x3FD15553E0000000, float 0x3FD2AAAC20000000, float 3.125000e-01, float 0x3FD55553E0000000, float 0x3FD6AAAC20000000, float 3.750000e-01, float 0x3FD95553E0000000, float 0x3FDAAAAC20000000, float 4.375000e-01, float 0x3FDD5553E0000000, float 0x3FDEAAAC20000000, float 5.000000e-01, float 0x3FE0AAAA00000000, float 0x3FE1555600000000, float 5.625000e-01, float 0x3FE2AAAA00000000, float 0x3FE3555600000000, float 6.250000e-01, float 0x3FE4AAAA00000000, float 0x3FE5555600000000, float 6.875000e-01, float 0x3FE6AAAA00000000, float 0x3FE7555600000000, float 7.500000e-01, float 0x3FE8AAAA00000000, float 0x3FE9555600000000, float 8.125000e-01, float 0x3FEAAAAA00000000, float 0x3FEB555600000000, float 8.750000e-01, float 0x3FECAAAA00000000, float 0x3FED555600000000, float 9.375000e-01, float 0x3FEEAAAA00000000, float 0x3FEF555600000000] }, align 4
@_ZZNK6webrtc7rnn_vad18SpectralCorrelator23ComputeCrossCorrelationEN3rtc9ArrayViewIKfLln4711EEES5_NS3_IfLl20EEEE26kOpusScaleNumBins24kHz20ms = internal unnamed_addr constant %"struct.std::__1::array.3" { [19 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 8, i32 8, i32 8, i32 8, i32 16, i32 16, i32 16, i32 24, i32 24, i32 32, i32 48] }, align 4

@_ZN6webrtc7rnn_vad18SpectralCorrelatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::rnn_vad::SpectralCorrelator"*), void (%"class.webrtc::rnn_vad::SpectralCorrelator"*)* @_ZN6webrtc7rnn_vad18SpectralCorrelatorC2Ev
@_ZN6webrtc7rnn_vad18SpectralCorrelatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::rnn_vad::SpectralCorrelator"*), void (%"class.webrtc::rnn_vad::SpectralCorrelator"*)* @_ZN6webrtc7rnn_vad18SpectralCorrelatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad18SpectralCorrelatorC2Ev(%"class.webrtc::rnn_vad::SpectralCorrelator"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 960) #6
  %3 = getelementptr inbounds %"class.webrtc::rnn_vad::SpectralCorrelator", %"class.webrtc::rnn_vad::SpectralCorrelator"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast float** %3 to i8**
  store i8* %2, i8** %4, align 8
  %5 = bitcast %"class.webrtc::rnn_vad::SpectralCorrelator"* %0 to i8**
  store i8* %2, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 960
  %7 = getelementptr inbounds %"class.webrtc::rnn_vad::SpectralCorrelator", %"class.webrtc::rnn_vad::SpectralCorrelator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast float** %7 to i8**
  store i8* %6, i8** %8, align 8
  %9 = bitcast float** %3 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2, i8* align 4 bitcast (%"struct.std::__1::array"* @_ZN6webrtc7rnn_vad12_GLOBAL__N_125kOpusBandWeights24kHz20msE to i8*), i64 960, i1 false) #7
  %10 = ptrtoint i8* %6 to i64
  store i64 %10, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad18SpectralCorrelatorD2Ev(%"class.webrtc::rnn_vad::SpectralCorrelator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rnn_vad::SpectralCorrelator", %"class.webrtc::rnn_vad::SpectralCorrelator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::rnn_vad::SpectralCorrelator", %"class.webrtc::rnn_vad::SpectralCorrelator"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6webrtc7rnn_vad18SpectralCorrelator22ComputeAutoCorrelationEN3rtc9ArrayViewIKfLln4711EEENS3_IfLl20EEE(%"class.webrtc::rnn_vad::SpectralCorrelator"* nocapture readonly, float*, i64, float*) local_unnamed_addr #1 align 2 {
  %5 = icmp eq i64 %2, 0
  %6 = select i1 %5, float* null, float* %1
  store float 0.000000e+00, float* %3, align 4
  %7 = getelementptr inbounds %"class.webrtc::rnn_vad::SpectralCorrelator", %"class.webrtc::rnn_vad::SpectralCorrelator"* %0, i64 0, i32 0, i32 0, i32 0
  br label %13

8:                                                ; preds = %25
  %9 = trunc i64 %47 to i32
  br label %10

10:                                               ; preds = %13, %8
  %11 = phi i32 [ %15, %13 ], [ %9, %8 ]
  %12 = icmp eq i64 %16, 19
  br i1 %12, label %51, label %13

13:                                               ; preds = %10, %4
  %14 = phi i64 [ 0, %4 ], [ %16, %10 ]
  %15 = phi i32 [ 0, %4 ], [ %11, %10 ]
  %16 = add nuw nsw i64 %14, 1
  %17 = getelementptr inbounds float, float* %3, i64 %16
  store float 0.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* @_ZZNK6webrtc7rnn_vad18SpectralCorrelator23ComputeCrossCorrelationEN3rtc9ArrayViewIKfLln4711EEES5_NS3_IfLl20EEEE26kOpusScaleNumBins24kHz20ms, i64 0, i32 0, i64 %14
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %10

21:                                               ; preds = %13
  %22 = getelementptr inbounds float, float* %3, i64 %14
  %23 = sext i32 %15 to i64
  %24 = load float, float* %22, align 4
  br label %25

25:                                               ; preds = %25, %21
  %26 = phi float [ 0.000000e+00, %21 ], [ %46, %25 ]
  %27 = phi float [ %24, %21 ], [ %45, %25 ]
  %28 = phi i64 [ %23, %21 ], [ %47, %25 ]
  %29 = phi i32 [ %15, %21 ], [ %48, %25 ]
  %30 = phi i32 [ 0, %21 ], [ %49, %25 ]
  %31 = shl nsw i32 %29, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %6, i64 %32
  %34 = bitcast float* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = fmul <2 x float> %35, %35
  %37 = extractelement <2 x float> %36, i32 0
  %38 = extractelement <2 x float> %36, i32 1
  %39 = fadd float %37, %38
  %40 = load float*, float** %7, align 8
  %41 = getelementptr inbounds float, float* %40, i64 %28
  %42 = load float, float* %41, align 4
  %43 = fmul float %42, %39
  %44 = fsub float %39, %43
  %45 = fadd float %27, %44
  store float %45, float* %22, align 4
  %46 = fadd float %26, %43
  store float %46, float* %17, align 4
  %47 = add nsw i64 %28, 1
  %48 = add nsw i32 %29, 1
  %49 = add nuw nsw i32 %30, 1
  %50 = icmp eq i32 %49, %19
  br i1 %50, label %8, label %25

51:                                               ; preds = %10
  %52 = load float, float* %3, align 4
  %53 = fmul float %52, 2.000000e+00
  store float %53, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6webrtc7rnn_vad18SpectralCorrelator23ComputeCrossCorrelationEN3rtc9ArrayViewIKfLln4711EEES5_NS3_IfLl20EEE(%"class.webrtc::rnn_vad::SpectralCorrelator"* nocapture readonly, float*, i64, float*, i64, float*) local_unnamed_addr #1 align 2 {
  store float 0.000000e+00, float* %5, align 4
  %7 = getelementptr inbounds %"class.webrtc::rnn_vad::SpectralCorrelator", %"class.webrtc::rnn_vad::SpectralCorrelator"* %0, i64 0, i32 0, i32 0, i32 0
  br label %16

8:                                                ; preds = %28
  %9 = trunc i64 %53 to i32
  br label %10

10:                                               ; preds = %8, %16
  %11 = phi i32 [ %18, %16 ], [ %9, %8 ]
  %12 = icmp eq i64 %19, 19
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load float, float* %5, align 4
  %15 = fmul float %14, 2.000000e+00
  store float %15, float* %5, align 4
  ret void

16:                                               ; preds = %10, %6
  %17 = phi i64 [ 0, %6 ], [ %19, %10 ]
  %18 = phi i32 [ 0, %6 ], [ %11, %10 ]
  %19 = add nuw nsw i64 %17, 1
  %20 = getelementptr inbounds float, float* %5, i64 %19
  store float 0.000000e+00, float* %20, align 4
  %21 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* @_ZZNK6webrtc7rnn_vad18SpectralCorrelator23ComputeCrossCorrelationEN3rtc9ArrayViewIKfLln4711EEES5_NS3_IfLl20EEEE26kOpusScaleNumBins24kHz20ms, i64 0, i32 0, i64 %17
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %10

24:                                               ; preds = %16
  %25 = getelementptr inbounds float, float* %5, i64 %17
  %26 = sext i32 %18 to i64
  %27 = load float, float* %25, align 4
  br label %28

28:                                               ; preds = %24, %28
  %29 = phi float [ 0.000000e+00, %24 ], [ %52, %28 ]
  %30 = phi float [ %27, %24 ], [ %51, %28 ]
  %31 = phi i64 [ %26, %24 ], [ %53, %28 ]
  %32 = phi i32 [ %18, %24 ], [ %54, %28 ]
  %33 = phi i32 [ 0, %24 ], [ %55, %28 ]
  %34 = shl nsw i32 %32, 1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds float, float* %1, i64 %35
  %37 = getelementptr inbounds float, float* %3, i64 %35
  %38 = bitcast float* %36 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  %40 = bitcast float* %37 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  %42 = fmul <2 x float> %39, %41
  %43 = extractelement <2 x float> %42, i32 0
  %44 = extractelement <2 x float> %42, i32 1
  %45 = fadd float %43, %44
  %46 = load float*, float** %7, align 8
  %47 = getelementptr inbounds float, float* %46, i64 %31
  %48 = load float, float* %47, align 4
  %49 = fmul float %48, %45
  %50 = fsub float %45, %49
  %51 = fadd float %30, %50
  store float %51, float* %25, align 4
  %52 = fadd float %49, %29
  store float %52, float* %20, align 4
  %53 = add nsw i64 %31, 1
  %54 = add nsw i32 %32, 1
  %55 = add nuw nsw i32 %33, 1
  %56 = icmp slt i32 %55, %22
  br i1 %56, label %28, label %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad35ComputeSmoothedLogMagnitudeSpectrumEN3rtc9ArrayViewIKfLln4711EEENS2_IfLl22EEE(float*, i64, float*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = icmp eq i64 %1, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = bitcast i32* %4 to i8*
  %13 = bitcast i32* %4 to float*
  %14 = bitcast float* %5 to i8*
  %15 = bitcast float* %6 to i8*
  br label %29

16:                                               ; preds = %29, %3
  %17 = phi i32 [ -1073741824, %3 ], [ %49, %29 ]
  %18 = phi float [ -2.000000e+00, %3 ], [ %56, %29 ]
  %19 = phi float [ -2.000000e+00, %3 ], [ %51, %29 ]
  %20 = trunc i64 %1 to i32
  %21 = icmp slt i32 %20, 22
  br i1 %21, label %22, label %57

22:                                               ; preds = %16
  %23 = bitcast i32* %7 to i8*
  %24 = bitcast float* %8 to i8*
  %25 = bitcast float* %9 to i8*
  %26 = bitcast i32* %7 to float*
  %27 = shl i64 %1, 32
  %28 = ashr exact i64 %27, 32
  br label %58

29:                                               ; preds = %29, %11
  %30 = phi i32 [ -1073741824, %11 ], [ %49, %29 ]
  %31 = phi float [ -2.000000e+00, %11 ], [ %56, %29 ]
  %32 = phi i64 [ 0, %11 ], [ %54, %29 ]
  %33 = phi float [ -2.000000e+00, %11 ], [ %51, %29 ]
  %34 = getelementptr inbounds float, float* %0, i64 %32
  %35 = load float, float* %34, align 4
  %36 = fadd float %35, 0x3F847AE140000000
  %37 = tail call float @log10f(float %36) #7
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store float %37, float* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  %38 = fadd float %31, -7.000000e+00
  store float %38, float* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  %39 = fadd float %33, -1.500000e+00
  store float %39, float* %6, align 4
  %40 = fcmp olt float %39, %37
  %41 = select i1 %40, float* %13, float* %6
  %42 = load float, float* %41, align 4
  %43 = fcmp olt float %38, %42
  %44 = select i1 %43, float* %41, float* %5
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %47 = bitcast i32 %46 to float
  %48 = fcmp olt float %31, %47
  %49 = select i1 %48, i32 %46, i32 %30
  %50 = fcmp olt float %39, %47
  %51 = select i1 %50, float %47, float %39
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  %52 = getelementptr inbounds float, float* %2, i64 %32
  %53 = bitcast float* %52 to i32*
  store i32 %46, i32* %53, align 4
  %54 = add nuw i64 %32, 1
  %55 = icmp eq i64 %54, %1
  %56 = bitcast i32 %49 to float
  br i1 %55, label %16, label %29

57:                                               ; preds = %58, %16
  ret void

58:                                               ; preds = %58, %22
  %59 = phi i32 [ %17, %22 ], [ %74, %58 ]
  %60 = phi float [ %18, %22 ], [ %81, %58 ]
  %61 = phi i64 [ %28, %22 ], [ %79, %58 ]
  %62 = phi float [ %19, %22 ], [ %76, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  store i32 -1073741824, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %63 = fadd float %60, -7.000000e+00
  store float %63, float* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)
  %64 = fadd float %62, -1.500000e+00
  store float %64, float* %9, align 4
  %65 = fcmp olt float %64, -2.000000e+00
  %66 = select i1 %65, float* %26, float* %9
  %67 = load float, float* %66, align 4
  %68 = fcmp olt float %63, %67
  %69 = select i1 %68, float* %66, float* %8
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  %72 = bitcast i32 %71 to float
  %73 = fcmp olt float %60, %72
  %74 = select i1 %73, i32 %71, i32 %59
  %75 = fcmp olt float %64, %72
  %76 = select i1 %75, float %72, float %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  %77 = getelementptr inbounds float, float* %2, i64 %61
  %78 = bitcast float* %77 to i32*
  store i32 %71, i32* %78, align 4
  %79 = add nsw i64 %61, 1
  %80 = icmp eq i64 %79, 22
  %81 = bitcast i32 %74 to float
  br i1 %80, label %57, label %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad15ComputeDctTableEv(%"struct.std::__1::array.6"* noalias nocapture sret) local_unnamed_addr #0 {
  %2 = bitcast %"struct.std::__1::array.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 1936, i1 false)
  br label %3

3:                                                ; preds = %10, %1
  %4 = phi i64 [ 0, %1 ], [ %16, %10 ]
  %5 = trunc i64 %4 to i32
  %6 = sitofp i32 %5 to double
  %7 = fadd double %6, 5.000000e-01
  %8 = mul nuw nsw i64 %4, 22
  br label %18

9:                                                ; preds = %10
  ret void

10:                                               ; preds = %18
  %11 = getelementptr inbounds %"struct.std::__1::array.6", %"struct.std::__1::array.6"* %0, i64 0, i32 0, i64 %8
  %12 = load float, float* %11, align 4
  %13 = fpext float %12 to double
  %14 = fmul double %13, 0x3FE6A09E667F3BCD
  %15 = fptrunc double %14 to float
  store float %15, float* %11, align 4
  %16 = add nuw nsw i64 %4, 1
  %17 = icmp eq i64 %16, 22
  br i1 %17, label %9, label %3

18:                                               ; preds = %18, %3
  %19 = phi i64 [ 0, %3 ], [ %39, %18 ]
  %20 = trunc i64 %19 to i32
  %21 = sitofp i32 %20 to double
  %22 = fmul double %7, %21
  %23 = fmul double %22, 0x400921FB54442D18
  %24 = fdiv double %23, 2.200000e+01
  %25 = tail call double @cos(double %24) #7
  %26 = fptrunc double %25 to float
  %27 = add nuw nsw i64 %19, %8
  %28 = getelementptr inbounds %"struct.std::__1::array.6", %"struct.std::__1::array.6"* %0, i64 0, i32 0, i64 %27
  store float %26, float* %28, align 4
  %29 = or i64 %19, 1
  %30 = trunc i64 %29 to i32
  %31 = sitofp i32 %30 to double
  %32 = fmul double %7, %31
  %33 = fmul double %32, 0x400921FB54442D18
  %34 = fdiv double %33, 2.200000e+01
  %35 = tail call double @cos(double %34) #7
  %36 = fptrunc double %35 to float
  %37 = add nuw nsw i64 %29, %8
  %38 = getelementptr inbounds %"struct.std::__1::array.6", %"struct.std::__1::array.6"* %0, i64 0, i32 0, i64 %37
  store float %36, float* %38, align 4
  %39 = add nuw nsw i64 %19, 2
  %40 = icmp eq i64 %39, 22
  br i1 %40, label %10, label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare double @cos(double) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc7rnn_vad10ComputeDctEN3rtc9ArrayViewIKfLln4711EEENS2_IS3_Ll484EEENS2_IfLln4711EEE(float*, i64, float*, float*, i64) local_unnamed_addr #1 {
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %5
  %8 = and i64 %1, 1
  %9 = icmp eq i64 %1, 1
  %10 = sub i64 %1, %8
  %11 = icmp eq i64 %8, 0
  br label %13

12:                                               ; preds = %30, %5
  ret void

13:                                               ; preds = %30, %7
  %14 = phi i64 [ 0, %7 ], [ %33, %30 ]
  %15 = getelementptr inbounds float, float* %3, i64 %14
  store float 0.000000e+00, float* %15, align 4
  switch i64 %1, label %35 [
    i64 0, label %30
    i64 1, label %16
  ]

16:                                               ; preds = %35, %13
  %17 = phi float [ undef, %13 ], [ %57, %35 ]
  %18 = phi float [ 0.000000e+00, %13 ], [ %57, %35 ]
  %19 = phi i64 [ 0, %13 ], [ %58, %35 ]
  br i1 %11, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds float, float* %0, i64 %19
  %22 = load float, float* %21, align 4
  %23 = mul i64 %19, 22
  %24 = add i64 %23, %14
  %25 = and i64 %24, 4294967295
  %26 = getelementptr inbounds float, float* %2, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fmul float %22, %27
  %29 = fadd float %18, %28
  store float %29, float* %15, align 4
  br label %30

30:                                               ; preds = %20, %16, %13
  %31 = phi float [ 0.000000e+00, %13 ], [ %17, %16 ], [ %29, %20 ]
  %32 = fmul float %31, 0x3FD34BF640000000
  store float %32, float* %15, align 4
  %33 = add nuw i64 %14, 1
  %34 = icmp eq i64 %33, %4
  br i1 %34, label %12, label %13

35:                                               ; preds = %13, %35
  %36 = phi float [ %57, %35 ], [ 0.000000e+00, %13 ]
  %37 = phi i64 [ %58, %35 ], [ 0, %13 ]
  %38 = phi i64 [ %59, %35 ], [ %10, %13 ]
  %39 = getelementptr inbounds float, float* %0, i64 %37
  %40 = load float, float* %39, align 4
  %41 = mul i64 %37, 22
  %42 = add i64 %41, %14
  %43 = and i64 %42, 4294967295
  %44 = getelementptr inbounds float, float* %2, i64 %43
  %45 = load float, float* %44, align 4
  %46 = fmul float %40, %45
  %47 = fadd float %36, %46
  store float %47, float* %15, align 4
  %48 = or i64 %37, 1
  %49 = getelementptr inbounds float, float* %0, i64 %48
  %50 = load float, float* %49, align 4
  %51 = mul i64 %48, 22
  %52 = add i64 %51, %14
  %53 = and i64 %52, 4294967295
  %54 = getelementptr inbounds float, float* %2, i64 %53
  %55 = load float, float* %54, align 4
  %56 = fmul float %50, %55
  %57 = fadd float %47, %56
  store float %57, float* %15, align 4
  %58 = add nuw i64 %37, 2
  %59 = add i64 %38, -2
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %16, label %35
}

; Function Attrs: nofree nounwind
declare float @log10f(float) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
