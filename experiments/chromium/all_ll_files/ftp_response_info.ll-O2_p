; ModuleID = '../../net/ftp/ftp_response_info.cc'
source_filename = "../../net/ftp/ftp_response_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::FtpResponseInfo" = type <{ i8, [7 x i8], %"class.base::Time", %"class.base::Time", i64, i8, i8, %"class.net::IPEndPoint", [2 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }

@_ZN3net15FtpResponseInfoC1Ev = hidden unnamed_addr alias void (%"class.net::FtpResponseInfo"*), void (%"class.net::FtpResponseInfo"*)* @_ZN3net15FtpResponseInfoC2Ev
@_ZN3net15FtpResponseInfoD1Ev = hidden unnamed_addr alias void (%"class.net::FtpResponseInfo"*), void (%"class.net::FtpResponseInfo"*)* @_ZN3net15FtpResponseInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpResponseInfoC2Ev(%"class.net::FtpResponseInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %0, i64 0, i32 4
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  store i64 -1, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %0, i64 0, i32 5
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %0, i64 0, i32 7
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %7) #4
  ret void
}

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15FtpResponseInfoD2Ev(%"class.net::FtpResponseInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %0, i64 0, i32 7
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %2) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
