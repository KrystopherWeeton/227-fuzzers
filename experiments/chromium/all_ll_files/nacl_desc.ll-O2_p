; ModuleID = '../../native_client/src/trusted/desc/posix/nacl_desc.c'
source_filename = "../../native_client/src/trusted/desc/posix/nacl_desc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }

@.str = private unnamed_addr constant [129 x i8] c"NaClAbiStatHostDescStatXlateCtor: Unusual NaCl descriptor type (not constructible). The NaCl app has a file with st_mode = 0%o.\0A\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../native_client/src/trusted/desc/posix/nacl_desc.c\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"length < kMaxSyncSocketMessageLength\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClAbiStatHostDescStatXlateCtor(%struct.nacl_abi_stat* nocapture, %struct.stat64* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.stat64, %struct.stat64* %1, i64 0, i32 1
  %4 = bitcast %struct.nacl_abi_stat* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 104, i1 false)
  %5 = load i64, i64* %3, align 8
  %6 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 1
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %struct.stat64, %struct.stat64* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 61440
  %10 = add nsw i32 %9, -4096
  %11 = lshr exact i32 %10, 12
  switch i32 %11, label %16 [
    i32 7, label %18
    i32 3, label %12
    i32 9, label %13
    i32 0, label %14
    i32 1, label %15
  ]

12:                                               ; preds = %2
  br label %18

13:                                               ; preds = %2
  br label %18

14:                                               ; preds = %2
  br label %18

15:                                               ; preds = %2
  br label %18

16:                                               ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str, i64 0, i64 0), i32 %8) #4
  %17 = load i32, i32* %7, align 8
  br label %18

18:                                               ; preds = %2, %16, %15, %14, %13, %12
  %19 = phi i32 [ %17, %16 ], [ %8, %15 ], [ %8, %14 ], [ %8, %13 ], [ %8, %12 ], [ %8, %2 ]
  %20 = phi i32 [ 126976, %16 ], [ 8192, %15 ], [ 4096, %14 ], [ 40960, %13 ], [ 16384, %12 ], [ 32768, %2 ]
  %21 = and i32 %19, 256
  %22 = or i32 %21, %20
  %23 = and i32 %19, 128
  %24 = or i32 %22, %23
  %25 = and i32 %19, 64
  %26 = or i32 %24, %25
  %27 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %struct.stat64, %struct.stat64* %1, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 3
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 4
  store i32 -1, i32* %32, align 8
  %33 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 5
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 6
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %struct.stat64, %struct.stat64* %1, i64 0, i32 8
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 7
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 8
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 9
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %struct.stat64, %struct.stat64* %1, i64 0, i32 11, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 10
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %struct.stat64, %struct.stat64* %1, i64 0, i32 12, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 12
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %struct.stat64, %struct.stat64* %1, i64 0, i32 13, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 14
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 11
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 13
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %0, i64 0, i32 15
  store i64 0, i64* %51, align 8
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClDescReadFromHandle(i32, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = icmp ult i64 %2, 2147483647
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 106, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0)) #4
  br label %6

6:                                                ; preds = %3, %5
  %7 = tail call i64 @read(i32 %0, i8* %1, i64 %2) #4
  ret i64 %7
}

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClDescWriteToHandle(i32, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = icmp ult i64 %2, 2147483647
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 114, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0)) #4
  br label %6

6:                                                ; preds = %3, %5
  %7 = tail call i64 @write(i32 %0, i8* %1, i64 %2) #4
  ret i64 %7
}

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
