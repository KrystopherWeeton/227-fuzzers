; ModuleID = '../../third_party/angle/src/compiler/translator/tree_util/IntermNodePatternMatcher.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_util/IntermNodePatternMatcher.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::IntermNodePatternMatcher" = type { i32 }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.0"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.0" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.2", i8, [7 x i8] }>
%"class.sh::TVector.2" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.8", i8, [7 x i8] }>
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector.8" = type { %"class.std::__1::vector.9" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.sh::TIntermNode"** }
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector.16"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector.16" = type opaque
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TConstantUnion" = type { %union.anon.17, i32 }
%union.anon.17 = type { i32 }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.8", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermOperator" = type <{ %"class.sh::TIntermExpression", i8, [7 x i8] }>
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.8" }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>

@_ZN2sh24IntermNodePatternMatcherC1Ej = hidden unnamed_addr alias void (%"class.sh::IntermNodePatternMatcher"*, i32), void (%"class.sh::IntermNodePatternMatcher"*, i32)* @_ZN2sh24IntermNodePatternMatcherC2Ej

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2sh24IntermNodePatternMatcherC2Ej(%"class.sh::IntermNodePatternMatcher"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher40IsDynamicIndexingOfNonSSBOVectorOrMatrixEPNS_13TIntermBinaryE(%"class.sh::TIntermBinary"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 45
  br i1 %4, label %5, label %30

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %0, i64 0, i32 2
  %7 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %8 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %9, i64 31
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.sh::TType"* %11(%"class.sh::TIntermTyped"* %7) #4
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %12, i64 0, i32 10, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %30

16:                                               ; preds = %5
  %17 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %18 = bitcast %"class.sh::TIntermTyped"* %17 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, i64 31
  %21 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.sh::TType"* %21(%"class.sh::TIntermTyped"* %17) #4
  %23 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 90
  br i1 %25, label %30, label %26

26:                                               ; preds = %16
  %27 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %28 = tail call zeroext i1 @_ZN2sh22IsInShaderStorageBlockEPNS_12TIntermTypedE(%"class.sh::TIntermTyped"* %27) #4
  %29 = xor i1 %28, true
  br label %30

30:                                               ; preds = %16, %1, %5, %26
  %31 = phi i1 [ false, %16 ], [ %29, %26 ], [ false, %5 ], [ false, %1 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher33IsDynamicIndexingOfVectorOrMatrixEPNS_13TIntermBinaryE(%"class.sh::TIntermBinary"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 45
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %0, i64 0, i32 2
  %7 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %8 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %9, i64 31
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.sh::TType"* %11(%"class.sh::TIntermTyped"* %7) #4
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %12, i64 0, i32 10, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %5
  %17 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %18 = bitcast %"class.sh::TIntermTyped"* %17 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, i64 31
  %21 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.sh::TType"* %21(%"class.sh::TIntermTyped"* %17) #4
  %23 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 90
  br label %26

26:                                               ; preds = %5, %16, %1
  %27 = phi i1 [ false, %5 ], [ false, %1 ], [ %25, %16 ]
  ret i1 %27
}

declare zeroext i1 @_ZN2sh22IsInShaderStorageBlockEPNS_12TIntermTypedE(%"class.sh::TIntermTyped"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher33IsDynamicIndexingOfSwizzledVectorEPNS_13TIntermBinaryE(%"class.sh::TIntermBinary"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 45
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %0, i64 0, i32 2
  %7 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %8 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %9, i64 31
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.sh::TType"* %11(%"class.sh::TIntermTyped"* %7) #4
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %12, i64 0, i32 10, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %35

16:                                               ; preds = %5
  %17 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %18 = bitcast %"class.sh::TIntermTyped"* %17 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, i64 31
  %21 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.sh::TType"* %21(%"class.sh::TIntermTyped"* %17) #4
  %23 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 90
  br i1 %25, label %35, label %26

26:                                               ; preds = %16
  %27 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %6, align 8
  %28 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %27, i64 0, i32 0
  %29 = bitcast %"class.sh::TIntermTyped"* %27 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %30 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %30, i64 12
  %32 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %31, align 8
  %33 = tail call %"class.sh::TIntermSwizzle"* %32(%"class.sh::TIntermNode"* %28) #4
  %34 = icmp ne %"class.sh::TIntermSwizzle"* %33, null
  br label %35

35:                                               ; preds = %16, %1, %5, %26
  %36 = phi i1 [ false, %16 ], [ %34, %26 ], [ false, %5 ], [ false, %1 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher13matchInternalEPNS_13TIntermBinaryEPNS_11TIntermNodeE(%"class.sh::IntermNodePatternMatcher"* nocapture readonly, %"class.sh::TIntermBinary"*, %"class.sh::TIntermNode"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.sh::TIntermBinary"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, i64 31
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.sh::TType"* %13(%"class.sh::TIntermTyped"* %9) #4
  %15 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %14, i64 0, i32 10, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, -118
  %22 = icmp ne %"class.sh::TIntermNode"* %2, null
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = bitcast %"class.sh::TIntermNode"* %2 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %26 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %26, i64 8
  %28 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %27, align 8
  %29 = tail call %"class.sh::TIntermBlock"* %28(%"class.sh::TIntermNode"* nonnull %2) #4
  %30 = icmp eq %"class.sh::TIntermBlock"* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %8, %24, %3, %18
  %32 = load i32, i32* %4, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 3
  %37 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %36, align 8
  %38 = bitcast %"class.sh::TIntermTyped"* %37 to i1 (%"class.sh::TIntermTyped"*)***
  %39 = load i1 (%"class.sh::TIntermTyped"*)**, i1 (%"class.sh::TIntermTyped"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %39, i64 30
  %41 = load i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.sh::TIntermTyped"* %37) #4
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 8
  switch i8 %45, label %46 [
    i8 36, label %47
    i8 38, label %47
  ]

46:                                               ; preds = %43, %31, %35
  br label %47

47:                                               ; preds = %43, %43, %24, %46
  %48 = phi i1 [ false, %46 ], [ true, %24 ], [ true, %43 ], [ true, %43 ]
  ret i1 %48
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher5matchEPNS_12TIntermUnaryE(%"class.sh::IntermNodePatternMatcher"* nocapture readonly, %"class.sh::TIntermUnary"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %1, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 12
  br i1 %10, label %12, label %11

11:                                               ; preds = %2, %7
  br label %12

12:                                               ; preds = %7, %11
  %13 = phi i1 [ false, %11 ], [ true, %7 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher5matchEPNS_13TIntermBinaryEPNS_11TIntermNodeE(%"class.sh::IntermNodePatternMatcher"* nocapture readonly, %"class.sh::TIntermBinary"*, %"class.sh::TIntermNode"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.sh::TIntermBinary"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, i64 31
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.sh::TType"* %13(%"class.sh::TIntermTyped"* %9) #4
  %15 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %14, i64 0, i32 10, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, -118
  %22 = icmp ne %"class.sh::TIntermNode"* %2, null
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = bitcast %"class.sh::TIntermNode"* %2 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %26 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %26, i64 8
  %28 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %27, align 8
  %29 = tail call %"class.sh::TIntermBlock"* %28(%"class.sh::TIntermNode"* nonnull %2) #4
  %30 = icmp eq %"class.sh::TIntermBlock"* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %24, %18, %8, %3
  %32 = load i32, i32* %4, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 3
  %37 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %36, align 8
  %38 = bitcast %"class.sh::TIntermTyped"* %37 to i1 (%"class.sh::TIntermTyped"*)***
  %39 = load i1 (%"class.sh::TIntermTyped"*)**, i1 (%"class.sh::TIntermTyped"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %39, i64 30
  %41 = load i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.sh::TIntermTyped"* %37) #4
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 8
  switch i8 %45, label %46 [
    i8 36, label %47
    i8 38, label %47
  ]

46:                                               ; preds = %43, %35, %31
  br label %47

47:                                               ; preds = %24, %43, %43, %46
  %48 = phi i1 [ false, %46 ], [ true, %24 ], [ true, %43 ], [ true, %43 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher5matchEPNS_13TIntermBinaryEPNS_11TIntermNodeEb(%"class.sh::IntermNodePatternMatcher"* nocapture readonly, %"class.sh::TIntermBinary"*, %"class.sh::TIntermNode"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.sh::TIntermBinary"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %12 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, i64 31
  %14 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %13, align 8
  %15 = tail call dereferenceable(184) %"class.sh::TType"* %14(%"class.sh::TIntermTyped"* %10) #4
  %16 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %15, i64 0, i32 10, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, -118
  %23 = icmp ne %"class.sh::TIntermNode"* %2, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = bitcast %"class.sh::TIntermNode"* %2 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %27 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %27, i64 8
  %29 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %28, align 8
  %30 = tail call %"class.sh::TIntermBlock"* %29(%"class.sh::TIntermNode"* nonnull %2) #4
  %31 = icmp eq %"class.sh::TIntermBlock"* %30, null
  br i1 %31, label %79, label %32

32:                                               ; preds = %25, %19, %9, %4
  %33 = load i32, i32* %5, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 3
  %38 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %37, align 8
  %39 = bitcast %"class.sh::TIntermTyped"* %38 to i1 (%"class.sh::TIntermTyped"*)***
  %40 = load i1 (%"class.sh::TIntermTyped"*)**, i1 (%"class.sh::TIntermTyped"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %40, i64 30
  %42 = load i1 (%"class.sh::TIntermTyped"*)*, i1 (%"class.sh::TIntermTyped"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.sh::TIntermTyped"* %38) #4
  br i1 %43, label %44, label %47

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 1
  %46 = load i8, i8* %45, align 8
  switch i8 %46, label %47 [
    i8 36, label %79
    i8 38, label %79
  ]

47:                                               ; preds = %44, %36, %32
  %48 = load i32, i32* %5, align 4
  %49 = and i32 %48, 4
  %50 = icmp eq i32 %49, 0
  %51 = xor i1 %3, true
  %52 = or i1 %50, %51
  br i1 %52, label %78, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 0, i32 1
  %55 = load i8, i8* %54, align 8
  %56 = icmp eq i8 %55, 45
  br i1 %56, label %57, label %78

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 2
  %59 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %58, align 8
  %60 = bitcast %"class.sh::TIntermTyped"* %59 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %61 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %61, i64 31
  %63 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %62, align 8
  %64 = tail call dereferenceable(184) %"class.sh::TType"* %63(%"class.sh::TIntermTyped"* %59) #4
  %65 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %64, i64 0, i32 10, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %78

68:                                               ; preds = %57
  %69 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %58, align 8
  %70 = bitcast %"class.sh::TIntermTyped"* %69 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %71 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %70, align 8
  %72 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %71, i64 31
  %73 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %72, align 8
  %74 = tail call dereferenceable(184) %"class.sh::TType"* %73(%"class.sh::TIntermTyped"* %69) #4
  %75 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 90
  br i1 %77, label %78, label %79

78:                                               ; preds = %68, %53, %57, %47
  br label %79

79:                                               ; preds = %68, %44, %44, %25, %78
  %80 = phi i1 [ false, %78 ], [ true, %68 ], [ true, %25 ], [ true, %44 ], [ true, %44 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher5matchEPNS_16TIntermAggregateEPNS_11TIntermNodeE(%"class.sh::IntermNodePatternMatcher"* nocapture readonly, %"class.sh::TIntermAggregate"*, %"class.sh::TIntermNode"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 2
  %7 = icmp ne i32 %6, 0
  %8 = icmp ne %"class.sh::TIntermNode"* %2, null
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %46

10:                                               ; preds = %3
  %11 = bitcast %"class.sh::TIntermNode"* %2 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %12 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %12, i64 13
  %14 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %13, align 8
  %15 = tail call %"class.sh::TIntermBinary"* %14(%"class.sh::TIntermNode"* nonnull %2) #4
  %16 = icmp eq %"class.sh::TIntermBinary"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %15, i64 0, i32 0, i32 1
  %19 = load i8, i8* %18, align 8
  %20 = or i8 %19, 1
  %21 = icmp eq i8 %20, -117
  br label %22

22:                                               ; preds = %17, %10
  %23 = phi i1 [ false, %10 ], [ %21, %17 ]
  %24 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0
  %25 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %26 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %26, i64 31
  %28 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %27, align 8
  %29 = tail call dereferenceable(184) %"class.sh::TType"* %28(%"class.sh::TIntermExpression"* %24) #4
  %30 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %29, i64 0, i32 10, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  %33 = or i1 %23, %32
  br i1 %33, label %46, label %34

34:                                               ; preds = %22
  %35 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TIntermOperator"*
  %36 = tail call zeroext i1 @_ZNK2sh15TIntermOperator13isConstructorEv(%"class.sh::TIntermOperator"* %35) #4
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = tail call zeroext i1 @_ZNK2sh15TIntermOperator14isFunctionCallEv(%"class.sh::TIntermOperator"* %35) #4
  br i1 %38, label %39, label %46

39:                                               ; preds = %37, %34
  %40 = bitcast %"class.sh::TIntermNode"* %2 to %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)***
  %41 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %41, i64 8
  %43 = load %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBlock"* (%"class.sh::TIntermNode"*)** %42, align 8
  %44 = tail call %"class.sh::TIntermBlock"* %43(%"class.sh::TIntermNode"* nonnull %2) #4
  %45 = icmp eq %"class.sh::TIntermBlock"* %44, null
  br i1 %45, label %168, label %46

46:                                               ; preds = %22, %39, %37, %3
  %47 = load i32, i32* %4, align 4
  %48 = trunc i32 %47 to i8
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %168

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 1
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, -119
  br i1 %53, label %54, label %168

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0
  %56 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %57 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %57, i64 31
  %59 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %58, align 8
  %60 = tail call dereferenceable(184) %"class.sh::TType"* %59(%"class.sh::TIntermExpression"* %55) #4
  %61 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %60, i64 0, i32 8
  %62 = load i8, i8* %61, align 8
  %63 = icmp ugt i8 %62, 1
  br i1 %63, label %64, label %112

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %60, i64 0, i32 9
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 1
  br i1 %67, label %68, label %112

68:                                               ; preds = %64
  %69 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)***
  %70 = load %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)** %70, i64 32
  %72 = load %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)** %71, align 8
  %73 = tail call %"class.sh::TVector.8"* %72(%"class.sh::TIntermAggregate"* %1) #4
  %74 = getelementptr inbounds %"class.sh::TVector.8", %"class.sh::TVector.8"* %73, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.sh::TIntermNode"*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.sh::TVector.8"* %73 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %76, %78
  br i1 %79, label %112, label %80

80:                                               ; preds = %68, %105
  %81 = phi i64 [ %108, %105 ], [ %78, %68 ]
  %82 = phi i64 [ %106, %105 ], [ 0, %68 ]
  %83 = inttoptr i64 %81 to %"class.sh::TIntermNode"**
  %84 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %83, i64 %82
  %85 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %84, align 8
  %86 = bitcast %"class.sh::TIntermNode"* %85 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %87 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %87, i64 4
  %89 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %88, align 8
  %90 = tail call %"class.sh::TIntermTyped"* %89(%"class.sh::TIntermNode"* %85) #4
  %91 = icmp eq %"class.sh::TIntermTyped"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %80
  %93 = bitcast %"class.sh::TIntermTyped"* %90 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %94 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %94, i64 31
  %96 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %95, align 8
  %97 = tail call dereferenceable(184) %"class.sh::TType"* %96(%"class.sh::TIntermTyped"* nonnull %90) #4
  %98 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %97, i64 0, i32 8
  %99 = load i8, i8* %98, align 8
  %100 = icmp ugt i8 %99, 1
  %101 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %97, i64 0, i32 9
  %102 = load i8, i8* %101, align 1
  %103 = icmp ugt i8 %102, 1
  %104 = and i1 %100, %103
  br i1 %104, label %168, label %105

105:                                              ; preds = %92, %80
  %106 = add nuw i64 %82, 1
  %107 = load i64, i64* %75, align 8
  %108 = load i64, i64* %77, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %80, label %112

112:                                              ; preds = %105, %68, %54, %64
  %113 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %56, align 8
  %114 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %113, i64 31
  %115 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %114, align 8
  %116 = tail call dereferenceable(184) %"class.sh::TType"* %115(%"class.sh::TIntermExpression"* %55) #4
  %117 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %116, i64 0, i32 8
  %118 = load i8, i8* %117, align 8
  %119 = icmp ugt i8 %118, 1
  br i1 %119, label %120, label %168

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %116, i64 0, i32 9
  %122 = load i8, i8* %121, align 1
  %123 = icmp ugt i8 %122, 1
  br i1 %123, label %124, label %168

124:                                              ; preds = %120
  %125 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)***
  %126 = load %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)** %126, i64 32
  %128 = load %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermAggregate"*)** %127, align 8
  %129 = tail call %"class.sh::TVector.8"* %128(%"class.sh::TIntermAggregate"* %1) #4
  %130 = getelementptr inbounds %"class.sh::TVector.8", %"class.sh::TVector.8"* %129, i64 0, i32 0, i32 0, i32 1
  %131 = bitcast %"class.sh::TIntermNode"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.sh::TVector.8"* %129 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %132, %134
  br i1 %135, label %168, label %136

136:                                              ; preds = %124, %161
  %137 = phi i64 [ %164, %161 ], [ %134, %124 ]
  %138 = phi i64 [ %162, %161 ], [ 0, %124 ]
  %139 = inttoptr i64 %137 to %"class.sh::TIntermNode"**
  %140 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %139, i64 %138
  %141 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %140, align 8
  %142 = bitcast %"class.sh::TIntermNode"* %141 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %143 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %142, align 8
  %144 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %143, i64 4
  %145 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %144, align 8
  %146 = tail call %"class.sh::TIntermTyped"* %145(%"class.sh::TIntermNode"* %141) #4
  %147 = icmp eq %"class.sh::TIntermTyped"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %136
  %149 = bitcast %"class.sh::TIntermTyped"* %146 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %150 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %150, i64 31
  %152 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %151, align 8
  %153 = tail call dereferenceable(184) %"class.sh::TType"* %152(%"class.sh::TIntermTyped"* nonnull %146) #4
  %154 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %153, i64 0, i32 8
  %155 = load i8, i8* %154, align 8
  %156 = icmp ugt i8 %155, 1
  %157 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %153, i64 0, i32 9
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 1
  %160 = and i1 %156, %159
  br i1 %160, label %168, label %161

161:                                              ; preds = %148, %136
  %162 = add nuw i64 %138, 1
  %163 = load i64, i64* %131, align 8
  %164 = load i64, i64* %133, align 8
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 3
  %167 = icmp ult i64 %162, %166
  br i1 %167, label %136, label %168

168:                                              ; preds = %92, %161, %148, %124, %112, %46, %120, %50, %39
  %169 = phi i1 [ true, %39 ], [ false, %50 ], [ false, %120 ], [ false, %46 ], [ false, %112 ], [ false, %124 ], [ false, %161 ], [ true, %148 ], [ true, %92 ]
  ret i1 %169
}

declare zeroext i1 @_ZNK2sh15TIntermOperator13isConstructorEv(%"class.sh::TIntermOperator"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2sh15TIntermOperator14isFunctionCallEv(%"class.sh::TIntermOperator"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher5matchEPNS_14TIntermTernaryE(%"class.sh::IntermNodePatternMatcher"* nocapture readonly, %"class.sh::TIntermTernary"* nocapture readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh24IntermNodePatternMatcher5matchEPNS_18TIntermDeclarationE(%"class.sh::IntermNodePatternMatcher"* nocapture readonly, %"class.sh::TIntermDeclaration"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sh::IntermNodePatternMatcher", %"class.sh::IntermNodePatternMatcher"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.sh::TIntermDeclaration"* %1 to %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)***
  %9 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %9, i64 27
  %11 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %10, align 8
  %12 = tail call %"class.sh::TVector.8"* %11(%"class.sh::TIntermDeclaration"* %1) #4
  %13 = getelementptr inbounds %"class.sh::TVector.8", %"class.sh::TVector.8"* %12, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.sh::TIntermNode"*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.sh::TVector.8"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %114, label %21

21:                                               ; preds = %7
  %22 = load i32, i32* %3, align 4
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i32 [ %22, %21 ], [ %4, %2 ]
  %25 = and i32 %24, 16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %76, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.sh::TIntermDeclaration"* %1 to %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)***
  %29 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %29, i64 27
  %31 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %30, align 8
  %32 = tail call %"class.sh::TVector.8"* %31(%"class.sh::TIntermDeclaration"* %1) #4
  %33 = getelementptr inbounds %"class.sh::TVector.8", %"class.sh::TVector.8"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %33, align 8
  %35 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %34, align 8
  %36 = bitcast %"class.sh::TIntermNode"* %35 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %37 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %37, i64 4
  %39 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %38, align 8
  %40 = tail call %"class.sh::TIntermTyped"* %39(%"class.sh::TIntermNode"* %35) #4
  %41 = bitcast %"class.sh::TIntermTyped"* %40 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %42, i64 31
  %44 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %43, align 8
  %45 = tail call dereferenceable(184) %"class.sh::TType"* %44(%"class.sh::TIntermTyped"* %40) #4
  %46 = tail call zeroext i1 @_ZNK2sh5TType27isStructureContainingArraysEv(%"class.sh::TType"* %45) #4
  br i1 %46, label %114, label %47

47:                                               ; preds = %27
  %48 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*** %28, align 8
  %49 = getelementptr inbounds %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %48, i64 27
  %50 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %49, align 8
  %51 = tail call %"class.sh::TVector.8"* %50(%"class.sh::TIntermDeclaration"* %1) #4
  %52 = getelementptr inbounds %"class.sh::TVector.8", %"class.sh::TVector.8"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %52, align 8
  %54 = getelementptr inbounds %"class.sh::TVector.8", %"class.sh::TVector.8"* %51, i64 0, i32 0, i32 0, i32 1
  %55 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %54, align 8
  %56 = icmp eq %"class.sh::TIntermNode"** %53, %55
  br i1 %56, label %76, label %59

57:                                               ; preds = %59
  %58 = icmp eq %"class.sh::TIntermNode"** %75, %55
  br i1 %58, label %76, label %59

59:                                               ; preds = %47, %57
  %60 = phi %"class.sh::TIntermNode"** [ %75, %57 ], [ %53, %47 ]
  %61 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %60, align 8
  %62 = bitcast %"class.sh::TIntermNode"* %61 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %63 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %63, i64 4
  %65 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %64, align 8
  %66 = tail call %"class.sh::TIntermTyped"* %65(%"class.sh::TIntermNode"* %61) #4
  %67 = bitcast %"class.sh::TIntermTyped"* %66 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %68 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %67, align 8
  %69 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %68, i64 31
  %70 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %69, align 8
  %71 = tail call dereferenceable(184) %"class.sh::TType"* %70(%"class.sh::TIntermTyped"* %66) #4
  %72 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %71, i64 0, i32 10, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  %75 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %60, i64 1
  br i1 %74, label %57, label %114

76:                                               ; preds = %57, %47, %23
  %77 = load i32, i32* %3, align 4
  %78 = and i32 %77, 32
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %114, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.sh::TIntermDeclaration"* %1 to %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)***
  %82 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %82, i64 27
  %84 = load %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.8"* (%"class.sh::TIntermDeclaration"*)** %83, align 8
  %85 = tail call %"class.sh::TVector.8"* %84(%"class.sh::TIntermDeclaration"* %1) #4
  %86 = getelementptr inbounds %"class.sh::TVector.8", %"class.sh::TVector.8"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %86, align 8
  %88 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %87, align 8
  %89 = bitcast %"class.sh::TIntermNode"* %88 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %90 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %90, i64 4
  %92 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %91, align 8
  %93 = tail call %"class.sh::TIntermTyped"* %92(%"class.sh::TIntermNode"* %88) #4
  %94 = bitcast %"class.sh::TIntermTyped"* %93 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %95 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %94, align 8
  %96 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %95, i64 31
  %97 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %96, align 8
  %98 = tail call dereferenceable(184) %"class.sh::TType"* %97(%"class.sh::TIntermTyped"* %93) #4
  %99 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 90
  br i1 %101, label %102, label %113

102:                                              ; preds = %80
  %103 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %94, align 8
  %104 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %103, i64 31
  %105 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %104, align 8
  %106 = tail call dereferenceable(184) %"class.sh::TType"* %105(%"class.sh::TIntermTyped"* %93) #4
  %107 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %106, i64 0, i32 13
  %108 = bitcast %"class.sh::TStructure"** %107 to %"class.sh::TSymbol"**
  %109 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %108, align 8
  %110 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %109, i64 0, i32 2
  %111 = load i8, i8* %110, align 4
  %112 = icmp eq i8 %111, 3
  br i1 %112, label %114, label %113

113:                                              ; preds = %80, %102
  br label %114

114:                                              ; preds = %59, %76, %113, %102, %27, %7
  %115 = phi i1 [ true, %7 ], [ true, %27 ], [ true, %102 ], [ false, %113 ], [ false, %76 ], [ true, %59 ]
  ret i1 %115
}

declare zeroext i1 @_ZNK2sh5TType27isStructureContainingArraysEv(%"class.sh::TType"*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
