; ModuleID = '../../components/sync/engine/cycle/model_neutral_state.cc'
source_filename = "../../components/sync/engine/cycle/model_neutral_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.syncer::ModelNeutralState" = type <{ %"class.syncer::EnumSet", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.syncer::SyncerError", %"class.syncer::SyncerError", %"class.syncer::SyncerError", i8, [7 x i8] }>
%"class.syncer::EnumSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.syncer::SyncerError" = type { i32, i32, i32 }

@_ZN6syncer17ModelNeutralStateC1Ev = hidden unnamed_addr alias void (%"struct.syncer::ModelNeutralState"*), void (%"struct.syncer::ModelNeutralState"*)* @_ZN6syncer17ModelNeutralStateC2Ev
@_ZN6syncer17ModelNeutralStateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.syncer::ModelNeutralState"*, %"struct.syncer::ModelNeutralState"*), void (%"struct.syncer::ModelNeutralState"*, %"struct.syncer::ModelNeutralState"*)* @_ZN6syncer17ModelNeutralStateC2ERKS0_
@_ZN6syncer17ModelNeutralStateD1Ev = hidden unnamed_addr alias void (%"struct.syncer::ModelNeutralState"*), void (%"struct.syncer::ModelNeutralState"*)* @_ZN6syncer17ModelNeutralStateD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6syncer17ModelNeutralStateC2Ev(%"struct.syncer::ModelNeutralState"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.syncer::ModelNeutralState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 89, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer17ModelNeutralStateC2ERKS0_(%"struct.syncer::ModelNeutralState"* nocapture, %"struct.syncer::ModelNeutralState"* nocapture readonly dereferenceable(96)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.syncer::ModelNeutralState"* %0 to i8*
  %4 = bitcast %"struct.syncer::ModelNeutralState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 89, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6syncer17ModelNeutralStateD2Ev(%"struct.syncer::ModelNeutralState"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6syncer14HasSyncerErrorERKNS_17ModelNeutralStateE(%"struct.syncer::ModelNeutralState"* dereferenceable(96)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %"struct.syncer::ModelNeutralState", %"struct.syncer::ModelNeutralState"* %0, i64 0, i32 12
  %3 = tail call zeroext i1 @_ZNK6syncer11SyncerError13IsActualErrorEv(%"class.syncer::SyncerError"* %2) #5
  %4 = getelementptr inbounds %"struct.syncer::ModelNeutralState", %"struct.syncer::ModelNeutralState"* %0, i64 0, i32 13
  %5 = tail call zeroext i1 @_ZNK6syncer11SyncerError13IsActualErrorEv(%"class.syncer::SyncerError"* %4) #5
  %6 = getelementptr inbounds %"struct.syncer::ModelNeutralState", %"struct.syncer::ModelNeutralState"* %0, i64 0, i32 14
  %7 = tail call zeroext i1 @_ZNK6syncer11SyncerError13IsActualErrorEv(%"class.syncer::SyncerError"* %6) #5
  br i1 %3, label %10, label %8

8:                                                ; preds = %1
  %9 = or i1 %5, %7
  ret i1 %9

10:                                               ; preds = %1
  ret i1 true
}

declare zeroext i1 @_ZNK6syncer11SyncerError13IsActualErrorEv(%"class.syncer::SyncerError"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
