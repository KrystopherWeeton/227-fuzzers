; ModuleID = '../../components/autofill/core/common/field_data_manager.cc'
source_filename = "../../components/autofill/core/common/field_data_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::FieldDataManager" = type { %"class.base::RefCounted", %"class.std::__1::map" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.10" }
%"struct.std::__1::pair.10" = type { %"class.autofill::FieldRendererId", [4 x i8], %"struct.std::__1::pair" }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.std::__1::pair" = type <{ %"class.absl::optional", i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN8autofill16FieldDataManagerC1Ev = hidden unnamed_addr alias void (%"class.autofill::FieldDataManager"*), void (%"class.autofill::FieldDataManager"*)* @_ZN8autofill16FieldDataManagerC2Ev
@_ZN8autofill16FieldDataManagerD1Ev = hidden unnamed_addr alias void (%"class.autofill::FieldDataManager"*), void (%"class.autofill::FieldDataManager"*)* @_ZN8autofill16FieldDataManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16FieldDataManagerC2Ev(%"class.autofill::FieldDataManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16FieldDataManager9ClearDataEv(%"class.autofill::FieldDataManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %9, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8autofill16FieldDataManager12HasFieldDataENS_15FieldRendererIdE(%"class.autofill::FieldDataManager"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %21, %2
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.std::__1::__tree_end_node"* [ %3, %28 ], [ %18, %23 ]
  %31 = icmp ne %"class.std::__1::__tree_end_node"* %30, %3
  ret i1 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill16FieldDataManager12GetUserInputENS_15FieldRendererIdE(%"class.std::__1::basic_string"* noalias sret, %"class.autofill::FieldDataManager"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [15 x i8], align 8
  %5 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::__tree_node"* %7 to %"class.std::__1::__tree_node_base"*
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi %"class.std::__1::__tree_node_base"* [ %28, %27 ], [ %10, %9 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %29, %27 ], [ %7, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, %2
  br i1 %16, label %17, label %21

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %32, label %27

21:                                               ; preds = %11
  %22 = icmp ult i32 %15, %2
  br i1 %22, label %23, label %30

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23, %17
  %28 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %25, %23 ]
  %29 = bitcast %"class.std::__1::__tree_node_base"* %28 to %"class.std::__1::__tree_node"*
  br label %11

30:                                               ; preds = %21
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %12, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %23, %17, %30, %3
  tail call void @abort() #9
  unreachable

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %12, i64 1, i32 1
  %35 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %35)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 15, i1 false)
  %36 = bitcast %"class.std::__1::__tree_node_base"** %34 to i8*
  %37 = load i8, i8* %36, align 8, !range !2, !noalias !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %224, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, i64 1
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %47 = bitcast %"class.std::__1::__tree_node_base"** %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #8
  br label %230

48:                                               ; preds = %39
  %49 = bitcast %"class.std::__1::__tree_node_base"** %40 to i16**
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, i64 2
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, 11
  br i1 %54, label %55, label %60

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %57 = trunc i64 %53 to i8
  %58 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  store i8 %57, i8* %59, align 1
  br label %77

60:                                               ; preds = %48
  %61 = icmp ugt i64 %53, 9223372036854775791
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %63) #9
  unreachable

64:                                               ; preds = %60
  %65 = add nuw nsw i64 %53, 8
  %66 = and i64 %65, -8
  %67 = icmp slt i64 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %64
  tail call void @abort() #9
  unreachable

69:                                               ; preds = %64
  %70 = shl i64 %66, 1
  %71 = tail call i8* @_Znwm(i64 %70) #10
  %72 = bitcast i8* %71 to i16*
  %73 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %71, i8** %73, align 8
  %74 = or i64 %66, -9223372036854775808
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %53, i64* %76, align 8
  br label %77

77:                                               ; preds = %69, %55
  %78 = phi i16* [ %56, %55 ], [ %72, %69 ]
  %79 = add nuw nsw i64 %53, 1
  %80 = add i64 %53, 1
  %81 = icmp ult i64 %80, 16
  br i1 %81, label %171, label %82

82:                                               ; preds = %77
  %83 = add i64 %53, 1
  %84 = getelementptr i16, i16* %78, i64 %83
  %85 = getelementptr i16, i16* %50, i64 %83
  %86 = icmp ult i16* %78, %85
  %87 = icmp ult i16* %50, %84
  %88 = and i1 %86, %87
  br i1 %88, label %171, label %89

89:                                               ; preds = %82
  %90 = and i64 %80, -16
  %91 = sub i64 %79, %90
  %92 = getelementptr i16, i16* %50, i64 %90
  %93 = getelementptr i16, i16* %78, i64 %90
  %94 = add i64 %90, -16
  %95 = lshr exact i64 %94, 4
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 48
  br i1 %98, label %150, label %99

99:                                               ; preds = %89
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %147, %101 ]
  %103 = phi i64 [ %100, %99 ], [ %148, %101 ]
  %104 = getelementptr i16, i16* %50, i64 %102
  %105 = getelementptr i16, i16* %78, i64 %102
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !6
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !6
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !9, !noalias !6
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !9, !noalias !6
  %114 = or i64 %102, 16
  %115 = getelementptr i16, i16* %50, i64 %114
  %116 = getelementptr i16, i16* %78, i64 %114
  %117 = bitcast i16* %115 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !6
  %119 = getelementptr i16, i16* %115, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !6
  %122 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %122, align 2, !alias.scope !9, !noalias !6
  %123 = getelementptr i16, i16* %116, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %124, align 2, !alias.scope !9, !noalias !6
  %125 = or i64 %102, 32
  %126 = getelementptr i16, i16* %50, i64 %125
  %127 = getelementptr i16, i16* %78, i64 %125
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !6
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !6
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !9, !noalias !6
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !9, !noalias !6
  %136 = or i64 %102, 48
  %137 = getelementptr i16, i16* %50, i64 %136
  %138 = getelementptr i16, i16* %78, i64 %136
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !6
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !6
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !9, !noalias !6
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !9, !noalias !6
  %147 = add i64 %102, 64
  %148 = add i64 %103, -4
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %101, !llvm.loop !11

150:                                              ; preds = %101, %89
  %151 = phi i64 [ 0, %89 ], [ %147, %101 ]
  %152 = icmp eq i64 %97, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %150, %153
  %154 = phi i64 [ %166, %153 ], [ %151, %150 ]
  %155 = phi i64 [ %167, %153 ], [ %97, %150 ]
  %156 = getelementptr i16, i16* %50, i64 %154
  %157 = getelementptr i16, i16* %78, i64 %154
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !6
  %160 = getelementptr i16, i16* %156, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !6
  %163 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %163, align 2, !alias.scope !9, !noalias !6
  %164 = getelementptr i16, i16* %157, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %165, align 2, !alias.scope !9, !noalias !6
  %166 = add i64 %154, 16
  %167 = add i64 %155, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %153, !llvm.loop !13

169:                                              ; preds = %153, %150
  %170 = icmp eq i64 %80, %90
  br i1 %170, label %230, label %171

171:                                              ; preds = %169, %82, %77
  %172 = phi i64 [ %79, %82 ], [ %79, %77 ], [ %91, %169 ]
  %173 = phi i16* [ %50, %82 ], [ %50, %77 ], [ %92, %169 ]
  %174 = phi i16* [ %78, %82 ], [ %78, %77 ], [ %93, %169 ]
  %175 = add i64 %172, -1
  %176 = and i64 %172, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %171, %178
  %179 = phi i64 [ %184, %178 ], [ %172, %171 ]
  %180 = phi i16* [ %186, %178 ], [ %173, %171 ]
  %181 = phi i16* [ %185, %178 ], [ %174, %171 ]
  %182 = phi i64 [ %187, %178 ], [ %176, %171 ]
  %183 = load i16, i16* %180, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %179, -1
  %185 = getelementptr inbounds i16, i16* %181, i64 1
  %186 = getelementptr inbounds i16, i16* %180, i64 1
  %187 = add i64 %182, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !15

189:                                              ; preds = %178, %171
  %190 = phi i64 [ %172, %171 ], [ %184, %178 ]
  %191 = phi i16* [ %173, %171 ], [ %186, %178 ]
  %192 = phi i16* [ %174, %171 ], [ %185, %178 ]
  %193 = icmp ult i64 %175, 7
  br i1 %193, label %230, label %194

194:                                              ; preds = %189, %194
  %195 = phi i64 [ %220, %194 ], [ %190, %189 ]
  %196 = phi i16* [ %222, %194 ], [ %191, %189 ]
  %197 = phi i16* [ %221, %194 ], [ %192, %189 ]
  %198 = load i16, i16* %196, align 2
  store i16 %198, i16* %197, align 2
  %199 = getelementptr inbounds i16, i16* %197, i64 1
  %200 = getelementptr inbounds i16, i16* %196, i64 1
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %197, i64 2
  %203 = getelementptr inbounds i16, i16* %196, i64 2
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %197, i64 3
  %206 = getelementptr inbounds i16, i16* %196, i64 3
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %197, i64 4
  %209 = getelementptr inbounds i16, i16* %196, i64 4
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %197, i64 5
  %212 = getelementptr inbounds i16, i16* %196, i64 5
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %197, i64 6
  %215 = getelementptr inbounds i16, i16* %196, i64 6
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %197, i64 7
  %218 = getelementptr inbounds i16, i16* %196, i64 7
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = add i64 %195, -8
  %221 = getelementptr inbounds i16, i16* %197, i64 8
  %222 = getelementptr inbounds i16, i16* %196, i64 8
  %223 = icmp eq i64 %220, 0
  br i1 %223, label %230, label %194, !llvm.loop !16

224:                                              ; preds = %33
  %225 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* null, i8** %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast i64* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* nonnull align 8 %35, i64 15, i1 false)
  %228 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %229 = getelementptr inbounds i8, i8* %228, i64 23
  store i8 0, i8* %229, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 15, i1 false), !noalias !3
  br label %230

230:                                              ; preds = %189, %194, %169, %224, %45
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %35)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8autofill16FieldDataManager22GetFieldPropertiesMaskENS_15FieldRendererIdE(%"class.autofill::FieldDataManager"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br label %9

9:                                                ; preds = %25, %7
  %10 = phi %"class.std::__1::__tree_node_base"* [ %26, %25 ], [ %8, %7 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %27, %25 ], [ %5, %7 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %30, label %25

19:                                               ; preds = %9
  %20 = icmp ult i32 %13, %1
  br i1 %20, label %21, label %28

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21, %15
  %26 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %23, %21 ]
  %27 = bitcast %"class.std::__1::__tree_node_base"* %26 to %"class.std::__1::__tree_node"*
  br label %9

28:                                               ; preds = %19
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %21, %15, %28, %2
  tail call void @abort() #9
  unreachable

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 1, i32 1
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, i64 4
  %34 = bitcast %"class.std::__1::__tree_node_base"** %33 to i32*
  %35 = load i32, i32* %34, align 8
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill16FieldDataManager15FindMachedValueERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.autofill::FieldDataManager"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = load i8, i8* %11, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i16* %18, i64 %22) #8
  %23 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %24, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %365

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  %35 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %37 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = bitcast i64* %32 to i8*
  %40 = getelementptr inbounds i8, i8* %30, i64 23
  %41 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %45 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %51

51:                                               ; preds = %29, %362
  %52 = phi %"class.std::__1::__tree_end_node"* [ %24, %29 ], [ %363, %362 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %34)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 15, i1 false)
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to i8*
  %55 = load i8, i8* %54, align 8, !range !2, !noalias !17
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %236, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 6
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::__tree_end_node"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %64, i64 24, i1 false) #8
  br label %237

65:                                               ; preds = %57
  %66 = bitcast %"class.std::__1::__tree_end_node"* %58 to i16**
  %67 = load i16*, i16** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 7
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %70, 11
  br i1 %71, label %72, label %74

72:                                               ; preds = %65
  %73 = trunc i64 %70 to i8
  store i8 %73, i8* %38, align 1
  br label %88

74:                                               ; preds = %65
  %75 = icmp ugt i64 %70, 9223372036854775791
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %77) #9
  unreachable

78:                                               ; preds = %74
  %79 = add nuw nsw i64 %70, 8
  %80 = and i64 %79, -8
  %81 = icmp slt i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  call void @abort() #9
  unreachable

83:                                               ; preds = %78
  %84 = shl i64 %80, 1
  %85 = call i8* @_Znwm(i64 %84) #10
  %86 = bitcast i8* %85 to i16*
  store i8* %85, i8** %35, align 8
  %87 = or i64 %80, -9223372036854775808
  store i64 %87, i64* %33, align 8
  store i64 %70, i64* %32, align 8
  br label %88

88:                                               ; preds = %83, %72
  %89 = phi i16* [ %36, %72 ], [ %86, %83 ]
  %90 = add nuw nsw i64 %70, 1
  %91 = add i64 %70, 1
  %92 = icmp ult i64 %91, 16
  br i1 %92, label %183, label %93

93:                                               ; preds = %88
  %94 = getelementptr i16, i16* %89, i64 1
  %95 = getelementptr i16, i16* %94, i64 %70
  %96 = getelementptr i16, i16* %67, i64 1
  %97 = getelementptr i16, i16* %96, i64 %70
  %98 = icmp ult i16* %89, %97
  %99 = icmp ult i16* %67, %95
  %100 = and i1 %98, %99
  br i1 %100, label %183, label %101

101:                                              ; preds = %93
  %102 = and i64 %91, -16
  %103 = sub i64 %90, %102
  %104 = getelementptr i16, i16* %67, i64 %102
  %105 = getelementptr i16, i16* %89, i64 %102
  %106 = add i64 %102, -16
  %107 = lshr exact i64 %106, 4
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 3
  %110 = icmp ult i64 %106, 48
  br i1 %110, label %162, label %111

111:                                              ; preds = %101
  %112 = sub nsw i64 %108, %109
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i64 [ 0, %111 ], [ %159, %113 ]
  %115 = phi i64 [ %112, %111 ], [ %160, %113 ]
  %116 = getelementptr i16, i16* %67, i64 %114
  %117 = getelementptr i16, i16* %89, i64 %114
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !20
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !20
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !23, !noalias !20
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !23, !noalias !20
  %126 = or i64 %114, 16
  %127 = getelementptr i16, i16* %67, i64 %126
  %128 = getelementptr i16, i16* %89, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !20
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !20
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !23, !noalias !20
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !23, !noalias !20
  %137 = or i64 %114, 32
  %138 = getelementptr i16, i16* %67, i64 %137
  %139 = getelementptr i16, i16* %89, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !20
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !20
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !23, !noalias !20
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !23, !noalias !20
  %148 = or i64 %114, 48
  %149 = getelementptr i16, i16* %67, i64 %148
  %150 = getelementptr i16, i16* %89, i64 %148
  %151 = bitcast i16* %149 to <8 x i16>*
  %152 = load <8 x i16>, <8 x i16>* %151, align 2, !alias.scope !20
  %153 = getelementptr i16, i16* %149, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !20
  %156 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %152, <8 x i16>* %156, align 2, !alias.scope !23, !noalias !20
  %157 = getelementptr i16, i16* %150, i64 8
  %158 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %158, align 2, !alias.scope !23, !noalias !20
  %159 = add i64 %114, 64
  %160 = add i64 %115, -4
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %113, !llvm.loop !25

162:                                              ; preds = %113, %101
  %163 = phi i64 [ 0, %101 ], [ %159, %113 ]
  %164 = icmp eq i64 %109, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %162, %165
  %166 = phi i64 [ %178, %165 ], [ %163, %162 ]
  %167 = phi i64 [ %179, %165 ], [ %109, %162 ]
  %168 = getelementptr i16, i16* %67, i64 %166
  %169 = getelementptr i16, i16* %89, i64 %166
  %170 = bitcast i16* %168 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !20
  %172 = getelementptr i16, i16* %168, i64 8
  %173 = bitcast i16* %172 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !20
  %175 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %175, align 2, !alias.scope !23, !noalias !20
  %176 = getelementptr i16, i16* %169, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %177, align 2, !alias.scope !23, !noalias !20
  %178 = add i64 %166, 16
  %179 = add i64 %167, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %165, !llvm.loop !26

181:                                              ; preds = %165, %162
  %182 = icmp eq i64 %91, %102
  br i1 %182, label %237, label %183

183:                                              ; preds = %181, %93, %88
  %184 = phi i64 [ %90, %93 ], [ %90, %88 ], [ %103, %181 ]
  %185 = phi i16* [ %67, %93 ], [ %67, %88 ], [ %104, %181 ]
  %186 = phi i16* [ %89, %93 ], [ %89, %88 ], [ %105, %181 ]
  %187 = add i64 %184, -1
  %188 = and i64 %184, 7
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %196, %190 ], [ %184, %183 ]
  %192 = phi i16* [ %198, %190 ], [ %185, %183 ]
  %193 = phi i16* [ %197, %190 ], [ %186, %183 ]
  %194 = phi i64 [ %199, %190 ], [ %188, %183 ]
  %195 = load i16, i16* %192, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %191, -1
  %197 = getelementptr inbounds i16, i16* %193, i64 1
  %198 = getelementptr inbounds i16, i16* %192, i64 1
  %199 = add i64 %194, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %190, !llvm.loop !27

201:                                              ; preds = %190, %183
  %202 = phi i64 [ %184, %183 ], [ %196, %190 ]
  %203 = phi i16* [ %185, %183 ], [ %198, %190 ]
  %204 = phi i16* [ %186, %183 ], [ %197, %190 ]
  %205 = icmp ult i64 %187, 7
  br i1 %205, label %237, label %206

206:                                              ; preds = %201, %206
  %207 = phi i64 [ %232, %206 ], [ %202, %201 ]
  %208 = phi i16* [ %234, %206 ], [ %203, %201 ]
  %209 = phi i16* [ %233, %206 ], [ %204, %201 ]
  %210 = load i16, i16* %208, align 2
  store i16 %210, i16* %209, align 2
  %211 = getelementptr inbounds i16, i16* %209, i64 1
  %212 = getelementptr inbounds i16, i16* %208, i64 1
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %209, i64 2
  %215 = getelementptr inbounds i16, i16* %208, i64 2
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %209, i64 3
  %218 = getelementptr inbounds i16, i16* %208, i64 3
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %209, i64 4
  %221 = getelementptr inbounds i16, i16* %208, i64 4
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %209, i64 5
  %224 = getelementptr inbounds i16, i16* %208, i64 5
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = getelementptr inbounds i16, i16* %209, i64 6
  %227 = getelementptr inbounds i16, i16* %208, i64 6
  %228 = load i16, i16* %227, align 2
  store i16 %228, i16* %226, align 2
  %229 = getelementptr inbounds i16, i16* %209, i64 7
  %230 = getelementptr inbounds i16, i16* %208, i64 7
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = add i64 %207, -8
  %233 = getelementptr inbounds i16, i16* %209, i64 8
  %234 = getelementptr inbounds i16, i16* %208, i64 8
  %235 = icmp eq i64 %232, 0
  br i1 %235, label %237, label %206, !llvm.loop !28

236:                                              ; preds = %51
  store i8* null, i8** %35, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %34, i64 15, i1 false)
  store i8 0, i8* %40, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 15, i1 false), !noalias !17
  br label %237

237:                                              ; preds = %201, %206, %181, %236, %63
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %34)
  %238 = load i8, i8* %38, align 1
  %239 = icmp slt i8 %238, 0
  %240 = load i64, i64* %32, align 8
  %241 = zext i8 %238 to i64
  %242 = select i1 %239, i64 %240, i64 %241
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %327, label %244

244:                                              ; preds = %237
  %245 = icmp ugt i64 %242, 2
  br i1 %245, label %246, label %327

246:                                              ; preds = %244
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  %247 = load i16*, i16** %31, align 8
  %248 = select i1 %239, i16* %247, i16* %36
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i16* %248, i64 %242) #8
  %249 = load i8, i8* %43, align 1
  %250 = icmp slt i8 %249, 0
  %251 = load i16*, i16** %8, align 8
  %252 = select i1 %250, i16* %251, i16* %44
  %253 = load i8, i8* %46, align 1
  %254 = icmp slt i8 %253, 0
  %255 = load i16*, i16** %47, align 8
  %256 = load i64, i64* %48, align 8
  %257 = zext i8 %253 to i64
  %258 = select i1 %254, i16* %255, i16* %49
  %259 = select i1 %254, i64 %256, i64 %257
  %260 = icmp eq i64 %259, 0
  %261 = bitcast i16* %255 to i8*
  br i1 %260, label %320, label %262

262:                                              ; preds = %246
  %263 = load i64, i64* %9, align 8
  %264 = zext i8 %249 to i64
  %265 = select i1 %250, i64 %263, i64 %264
  %266 = getelementptr inbounds i16, i16* %252, i64 %265
  %267 = shl nuw i64 %259, 1
  %268 = ashr exact i64 %267, 1
  %269 = ptrtoint i16* %266 to i64
  %270 = ptrtoint i16* %252 to i64
  %271 = shl nuw i64 %265, 1
  %272 = ashr exact i64 %271, 1
  %273 = icmp slt i64 %272, %268
  br i1 %273, label %313, label %274

274:                                              ; preds = %262
  %275 = load i16, i16* %258, align 2
  br label %276

276:                                              ; preds = %305, %274
  %277 = phi i64 [ %272, %274 ], [ %309, %305 ]
  %278 = phi i16* [ %252, %274 ], [ %306, %305 ]
  %279 = sub nsw i64 %277, %268
  %280 = add nsw i64 %279, 1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %313, label %282

282:                                              ; preds = %276, %287
  %283 = phi i64 [ %289, %287 ], [ %280, %276 ]
  %284 = phi i16* [ %288, %287 ], [ %278, %276 ]
  %285 = load i16, i16* %284, align 2
  %286 = icmp eq i16 %285, %275
  br i1 %286, label %291, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds i16, i16* %284, i64 1
  %289 = add i64 %283, -1
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %313, label %282

291:                                              ; preds = %282
  %292 = icmp eq i16* %284, null
  br i1 %292, label %313, label %293

293:                                              ; preds = %291, %300
  %294 = phi i16* [ %298, %300 ], [ %284, %291 ]
  %295 = phi i16* [ %301, %300 ], [ %258, %291 ]
  %296 = phi i64 [ %297, %300 ], [ %268, %291 ]
  %297 = add i64 %296, -1
  %298 = getelementptr inbounds i16, i16* %294, i64 1
  %299 = icmp eq i64 %297, 0
  br i1 %299, label %311, label %300

300:                                              ; preds = %293
  %301 = getelementptr inbounds i16, i16* %295, i64 1
  %302 = load i16, i16* %298, align 2
  %303 = load i16, i16* %301, align 2
  %304 = icmp eq i16 %303, %302
  br i1 %304, label %293, label %305

305:                                              ; preds = %300
  %306 = getelementptr inbounds i16, i16* %284, i64 1
  %307 = ptrtoint i16* %306 to i64
  %308 = sub i64 %269, %307
  %309 = ashr exact i64 %308, 1
  %310 = icmp slt i64 %309, %268
  br i1 %310, label %313, label %276

311:                                              ; preds = %293
  %312 = ptrtoint i16* %284 to i64
  br label %313

313:                                              ; preds = %305, %291, %276, %287, %311, %262
  %314 = phi i64 [ %312, %311 ], [ %269, %262 ], [ %269, %287 ], [ %269, %276 ], [ %269, %291 ], [ %269, %305 ]
  %315 = phi i16* [ %284, %311 ], [ %266, %262 ], [ %266, %287 ], [ %266, %276 ], [ %266, %291 ], [ %266, %305 ]
  %316 = icmp eq i16* %315, %266
  %317 = sub i64 %314, %270
  %318 = ashr exact i64 %317, 1
  %319 = select i1 %316, i64 -1, i64 %318
  br label %320

320:                                              ; preds = %313, %246
  %321 = phi i64 [ 0, %246 ], [ %319, %313 ]
  %322 = icmp ne i64 %321, -1
  br i1 %254, label %323, label %324

323:                                              ; preds = %320
  call void @_ZdlPv(i8* %261) #10
  br label %324

324:                                              ; preds = %323, %320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  %325 = zext i1 %322 to i32
  %326 = load i8, i8* %38, align 1
  br label %327

327:                                              ; preds = %324, %244, %237
  %328 = phi i8 [ %238, %237 ], [ %238, %244 ], [ %326, %324 ]
  %329 = phi i32 [ 3, %237 ], [ 0, %244 ], [ %325, %324 ]
  %330 = icmp slt i8 %328, 0
  br i1 %330, label %331, label %333

331:                                              ; preds = %327
  %332 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %332) #10
  br label %333

333:                                              ; preds = %327, %331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  switch i32 %329, label %365 [
    i32 0, label %334
    i32 3, label %334
  ]

334:                                              ; preds = %333, %333
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 1, i32 0
  %336 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %335, align 8
  %337 = icmp eq %"class.std::__1::__tree_node_base"* %336, null
  br i1 %337, label %338, label %346

338:                                              ; preds = %334
  %339 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node_base"*
  %340 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 2
  %341 = bitcast %"class.std::__1::__tree_end_node"* %340 to %"class.std::__1::__tree_end_node"**
  %342 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %342, i64 0, i32 0
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  %345 = icmp eq %"class.std::__1::__tree_node_base"* %344, %339
  br i1 %345, label %362, label %353

346:                                              ; preds = %334, %346
  %347 = phi %"class.std::__1::__tree_node_base"* [ %349, %346 ], [ %336, %334 ]
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 0, i32 0
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %348, align 8
  %350 = icmp eq %"class.std::__1::__tree_node_base"* %349, null
  br i1 %350, label %351, label %346

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 0
  br label %362

353:                                              ; preds = %338, %353
  %354 = phi %"class.std::__1::__tree_end_node"** [ %357, %353 ], [ %341, %338 ]
  %355 = bitcast %"class.std::__1::__tree_end_node"** %354 to %"class.std::__1::__tree_node_base"**
  %356 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %356, i64 0, i32 2
  %358 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %357, align 8
  %359 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %358, i64 0, i32 0
  %360 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %359, align 8
  %361 = icmp eq %"class.std::__1::__tree_node_base"* %360, %356
  br i1 %361, label %362, label %353

362:                                              ; preds = %353, %338, %351
  %363 = phi %"class.std::__1::__tree_end_node"* [ %352, %351 ], [ %342, %338 ], [ %358, %353 ]
  %364 = icmp eq %"class.std::__1::__tree_end_node"* %363, %25
  br i1 %364, label %365, label %51

365:                                              ; preds = %333, %362, %27
  %366 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %28, %27 ], [ %42, %362 ], [ %42, %333 ]
  %367 = phi i1 [ false, %27 ], [ true, %333 ], [ false, %362 ]
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %366, i64 0, i32 1, i32 1
  %369 = load i8, i8* %368, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %365
  %372 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %373 = load i8*, i8** %372, align 8
  call void @_ZdlPv(i8* %373) #10
  br label %374

374:                                              ; preds = %365, %371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret i1 %367
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16FieldDataManager18UpdateFieldDataMapENS_15FieldRendererIdERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEj(%"class.autofill::FieldDataManager"*, i32, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional", align 8
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.absl::optional", align 8
  %8 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %311, label %12

12:                                               ; preds = %4, %12
  %13 = phi %"class.std::__1::__tree_end_node"* [ %23, %12 ], [ %8, %4 ]
  %14 = phi %"class.std::__1::__tree_node"* [ %24, %12 ], [ %10, %4 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %16, %1
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__tree_node_base"** %18 to %"class.std::__1::__tree_node"**
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node"**
  %22 = select i1 %17, %"class.std::__1::__tree_node"** %19, %"class.std::__1::__tree_node"** %21
  %23 = select i1 %17, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %20
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %22, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %26, label %12

26:                                               ; preds = %12
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %23, %8
  br i1 %27, label %311, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %31, %1
  br i1 %32, label %311, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #8
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #8
  br label %220

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp ult i64 %47, 11
  br i1 %48, label %49, label %54

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string"* %35 to i16*
  %51 = trunc i64 %47 to i8
  %52 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  store i8 %51, i8* %53, align 1
  br label %71

54:                                               ; preds = %43
  %55 = icmp ugt i64 %47, 9223372036854775791
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::basic_string"* %35 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %57) #9
  unreachable

58:                                               ; preds = %54
  %59 = add nuw nsw i64 %47, 8
  %60 = and i64 %59, -8
  %61 = icmp slt i64 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  tail call void @abort() #9
  unreachable

63:                                               ; preds = %58
  %64 = shl i64 %60, 1
  %65 = tail call i8* @_Znwm(i64 %64) #10
  %66 = bitcast i8* %65 to i16*
  %67 = bitcast %"class.std::__1::basic_string"* %35 to i8**
  store i8* %65, i8** %67, align 8
  %68 = or i64 %60, -9223372036854775808
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %47, i64* %70, align 8
  br label %71

71:                                               ; preds = %63, %49
  %72 = phi i16* [ %50, %49 ], [ %66, %63 ]
  %73 = add nuw nsw i64 %47, 1
  %74 = add i64 %47, 1
  %75 = icmp ult i64 %74, 16
  br i1 %75, label %165, label %76

76:                                               ; preds = %71
  %77 = add i64 %47, 1
  %78 = getelementptr i16, i16* %72, i64 %77
  %79 = getelementptr i16, i16* %45, i64 %77
  %80 = icmp ult i16* %72, %79
  %81 = icmp ult i16* %45, %78
  %82 = and i1 %80, %81
  br i1 %82, label %165, label %83

83:                                               ; preds = %76
  %84 = and i64 %74, -16
  %85 = sub i64 %73, %84
  %86 = getelementptr i16, i16* %45, i64 %84
  %87 = getelementptr i16, i16* %72, i64 %84
  %88 = add i64 %84, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %83
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %45, i64 %96
  %99 = getelementptr i16, i16* %72, i64 %96
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !29
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !29
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !32, !noalias !29
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !32, !noalias !29
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %45, i64 %108
  %110 = getelementptr i16, i16* %72, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !29
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !29
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !32, !noalias !29
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !32, !noalias !29
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %45, i64 %119
  %121 = getelementptr i16, i16* %72, i64 %119
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !29
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !29
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !32, !noalias !29
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !32, !noalias !29
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %45, i64 %130
  %132 = getelementptr i16, i16* %72, i64 %130
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !29
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !29
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !32, !noalias !29
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !32, !noalias !29
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !34

144:                                              ; preds = %95, %83
  %145 = phi i64 [ 0, %83 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %45, i64 %148
  %151 = getelementptr i16, i16* %72, i64 %148
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !29
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !29
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !32, !noalias !29
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !32, !noalias !29
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !35

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %74, %84
  br i1 %164, label %218, label %165

165:                                              ; preds = %163, %76, %71
  %166 = phi i64 [ %73, %76 ], [ %73, %71 ], [ %85, %163 ]
  %167 = phi i16* [ %45, %76 ], [ %45, %71 ], [ %86, %163 ]
  %168 = phi i16* [ %72, %76 ], [ %72, %71 ], [ %87, %163 ]
  %169 = add i64 %166, -1
  %170 = and i64 %166, 7
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %165, %172
  %173 = phi i64 [ %178, %172 ], [ %166, %165 ]
  %174 = phi i16* [ %180, %172 ], [ %167, %165 ]
  %175 = phi i16* [ %179, %172 ], [ %168, %165 ]
  %176 = phi i64 [ %181, %172 ], [ %170, %165 ]
  %177 = load i16, i16* %174, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %173, -1
  %179 = getelementptr inbounds i16, i16* %175, i64 1
  %180 = getelementptr inbounds i16, i16* %174, i64 1
  %181 = add i64 %176, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !36

183:                                              ; preds = %172, %165
  %184 = phi i64 [ %166, %165 ], [ %178, %172 ]
  %185 = phi i16* [ %167, %165 ], [ %180, %172 ]
  %186 = phi i16* [ %168, %165 ], [ %179, %172 ]
  %187 = icmp ult i64 %169, 7
  br i1 %187, label %218, label %188

188:                                              ; preds = %183, %188
  %189 = phi i64 [ %214, %188 ], [ %184, %183 ]
  %190 = phi i16* [ %216, %188 ], [ %185, %183 ]
  %191 = phi i16* [ %215, %188 ], [ %186, %183 ]
  %192 = load i16, i16* %190, align 2
  store i16 %192, i16* %191, align 2
  %193 = getelementptr inbounds i16, i16* %191, i64 1
  %194 = getelementptr inbounds i16, i16* %190, i64 1
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %191, i64 2
  %197 = getelementptr inbounds i16, i16* %190, i64 2
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %191, i64 3
  %200 = getelementptr inbounds i16, i16* %190, i64 3
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %191, i64 4
  %203 = getelementptr inbounds i16, i16* %190, i64 4
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %191, i64 5
  %206 = getelementptr inbounds i16, i16* %190, i64 5
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %191, i64 6
  %209 = getelementptr inbounds i16, i16* %190, i64 6
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %191, i64 7
  %212 = getelementptr inbounds i16, i16* %190, i64 7
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %189, -8
  %215 = getelementptr inbounds i16, i16* %191, i64 8
  %216 = getelementptr inbounds i16, i16* %190, i64 8
  %217 = icmp eq i64 %214, 0
  br i1 %217, label %218, label %188, !llvm.loop !37

218:                                              ; preds = %183, %188, %163
  %219 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  br label %220

220:                                              ; preds = %218, %40
  %221 = phi %"class.std::__1::__tree_node"* [ %219, %218 ], [ %10, %40 ]
  %222 = icmp eq %"class.std::__1::__tree_node"* %221, null
  br i1 %222, label %246, label %223

223:                                              ; preds = %220
  %224 = bitcast %"class.std::__1::__tree_node"* %221 to %"class.std::__1::__tree_node_base"*
  br label %225

225:                                              ; preds = %241, %223
  %226 = phi %"class.std::__1::__tree_node_base"* [ %242, %241 ], [ %224, %223 ]
  %227 = phi %"class.std::__1::__tree_node"* [ %243, %241 ], [ %221, %223 ]
  %228 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = icmp ugt i32 %229, %1
  br i1 %230, label %231, label %235

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %227, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, null
  br i1 %234, label %246, label %241

235:                                              ; preds = %225
  %236 = icmp ult i32 %229, %1
  br i1 %236, label %237, label %244

237:                                              ; preds = %235
  %238 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %227, i64 0, i32 0, i32 1
  %239 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %238, align 8
  %240 = icmp eq %"class.std::__1::__tree_node_base"* %239, null
  br i1 %240, label %246, label %241

241:                                              ; preds = %237, %231
  %242 = phi %"class.std::__1::__tree_node_base"* [ %233, %231 ], [ %239, %237 ]
  %243 = bitcast %"class.std::__1::__tree_node_base"* %242 to %"class.std::__1::__tree_node"*
  br label %225

244:                                              ; preds = %235
  %245 = icmp eq %"class.std::__1::__tree_node_base"* %226, null
  br i1 %245, label %246, label %247

246:                                              ; preds = %237, %231, %244, %220
  tail call void @abort() #9
  unreachable

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %226, i64 1, i32 1
  %249 = bitcast %"class.std::__1::__tree_node_base"** %248 to i8*
  %250 = load i8, i8* %249, align 8, !range !2
  %251 = icmp eq i8 %250, 0
  %252 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, i64 1
  br i1 %251, label %267, label %253

253:                                              ; preds = %247
  %254 = bitcast %"class.std::__1::__tree_node_base"** %252 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %254, i64 0, i32 1, i32 1
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %253
  %259 = bitcast %"class.std::__1::__tree_node_base"** %252 to i8**
  %260 = load i8*, i8** %259, align 8
  tail call void @_ZdlPv(i8* %260) #10
  br label %261

261:                                              ; preds = %258, %253
  %262 = bitcast %"class.std::__1::__tree_node_base"** %252 to i8*
  %263 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 24, i1 false) #8
  %264 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %264, i64 0, i32 1, i32 1
  store i8 0, i8* %265, align 1
  %266 = bitcast %"class.std::__1::basic_string"* %35 to i16*
  store i16 0, i16* %266, align 8
  br label %270

267:                                              ; preds = %247
  %268 = bitcast %"class.std::__1::__tree_node_base"** %252 to i8*
  %269 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %268, i8* align 8 %269, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %249, align 8
  br label %270

270:                                              ; preds = %267, %261
  %271 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %271, i64 0, i32 1, i32 1
  %273 = load i8, i8* %272, align 1
  %274 = icmp slt i8 %273, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %270
  %276 = bitcast %"class.std::__1::basic_string"* %35 to i8**
  %277 = load i8*, i8** %276, align 8
  tail call void @_ZdlPv(i8* %277) #10
  br label %278

278:                                              ; preds = %270, %275
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #8
  %279 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %280 = icmp eq %"class.std::__1::__tree_node"* %279, null
  br i1 %280, label %304, label %281

281:                                              ; preds = %278
  %282 = bitcast %"class.std::__1::__tree_node"* %279 to %"class.std::__1::__tree_node_base"*
  br label %283

283:                                              ; preds = %299, %281
  %284 = phi %"class.std::__1::__tree_node_base"* [ %300, %299 ], [ %282, %281 ]
  %285 = phi %"class.std::__1::__tree_node"* [ %301, %299 ], [ %279, %281 ]
  %286 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i32, i32* %286, align 4
  %288 = icmp ugt i32 %287, %1
  br i1 %288, label %289, label %293

289:                                              ; preds = %283
  %290 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 0, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %304, label %299

293:                                              ; preds = %283
  %294 = icmp ult i32 %287, %1
  br i1 %294, label %295, label %302

295:                                              ; preds = %293
  %296 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %285, i64 0, i32 0, i32 1
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = icmp eq %"class.std::__1::__tree_node_base"* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %295, %289
  %300 = phi %"class.std::__1::__tree_node_base"* [ %291, %289 ], [ %297, %295 ]
  %301 = bitcast %"class.std::__1::__tree_node_base"* %300 to %"class.std::__1::__tree_node"*
  br label %283

302:                                              ; preds = %293
  %303 = icmp eq %"class.std::__1::__tree_node_base"* %284, null
  br i1 %303, label %304, label %305

304:                                              ; preds = %295, %289, %302, %278
  tail call void @abort() #9
  unreachable

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %284, i64 1, i32 1
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %306, i64 4
  %308 = bitcast %"class.std::__1::__tree_node_base"** %307 to i32*
  %309 = load i32, i32* %308, align 8
  %310 = or i32 %309, %3
  store i32 %310, i32* %308, align 8
  br label %614

311:                                              ; preds = %28, %26, %4
  %312 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %312)
  %313 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %313) #8
  store i8 1, i8* %313, align 8
  %314 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %315 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %315, i64 0, i32 1, i32 1
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %311
  %320 = bitcast %"class.std::__1::basic_string"* %314 to i8*
  %321 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %320, i8* align 8 %321, i64 24, i1 false) #8
  br label %497

322:                                              ; preds = %311
  %323 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load i16*, i16** %323, align 8
  %325 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %326 = load i64, i64* %325, align 8
  %327 = icmp ult i64 %326, 11
  br i1 %327, label %328, label %333

328:                                              ; preds = %322
  %329 = bitcast %"class.std::__1::basic_string"* %314 to i16*
  %330 = trunc i64 %326 to i8
  %331 = bitcast %"class.std::__1::basic_string"* %314 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  store i8 %330, i8* %332, align 1
  br label %350

333:                                              ; preds = %322
  %334 = icmp ugt i64 %326, 9223372036854775791
  br i1 %334, label %335, label %337

335:                                              ; preds = %333
  %336 = bitcast %"class.std::__1::basic_string"* %314 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %336) #9
  unreachable

337:                                              ; preds = %333
  %338 = add nuw nsw i64 %326, 8
  %339 = and i64 %338, -8
  %340 = icmp slt i64 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %337
  tail call void @abort() #9
  unreachable

342:                                              ; preds = %337
  %343 = shl i64 %339, 1
  %344 = tail call i8* @_Znwm(i64 %343) #10
  %345 = bitcast i8* %344 to i16*
  %346 = bitcast %"class.std::__1::basic_string"* %314 to i8**
  store i8* %344, i8** %346, align 8
  %347 = or i64 %339, -9223372036854775808
  %348 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %347, i64* %348, align 8
  %349 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %326, i64* %349, align 8
  br label %350

350:                                              ; preds = %342, %328
  %351 = phi i16* [ %329, %328 ], [ %345, %342 ]
  %352 = add nuw nsw i64 %326, 1
  %353 = add i64 %326, 1
  %354 = icmp ult i64 %353, 16
  br i1 %354, label %444, label %355

355:                                              ; preds = %350
  %356 = add i64 %326, 1
  %357 = getelementptr i16, i16* %351, i64 %356
  %358 = getelementptr i16, i16* %324, i64 %356
  %359 = icmp ult i16* %351, %358
  %360 = icmp ult i16* %324, %357
  %361 = and i1 %359, %360
  br i1 %361, label %444, label %362

362:                                              ; preds = %355
  %363 = and i64 %353, -16
  %364 = sub i64 %352, %363
  %365 = getelementptr i16, i16* %324, i64 %363
  %366 = getelementptr i16, i16* %351, i64 %363
  %367 = add i64 %363, -16
  %368 = lshr exact i64 %367, 4
  %369 = add nuw nsw i64 %368, 1
  %370 = and i64 %369, 3
  %371 = icmp ult i64 %367, 48
  br i1 %371, label %423, label %372

372:                                              ; preds = %362
  %373 = sub nsw i64 %369, %370
  br label %374

374:                                              ; preds = %374, %372
  %375 = phi i64 [ 0, %372 ], [ %420, %374 ]
  %376 = phi i64 [ %373, %372 ], [ %421, %374 ]
  %377 = getelementptr i16, i16* %324, i64 %375
  %378 = getelementptr i16, i16* %351, i64 %375
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !38
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !38
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !41, !noalias !38
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !41, !noalias !38
  %387 = or i64 %375, 16
  %388 = getelementptr i16, i16* %324, i64 %387
  %389 = getelementptr i16, i16* %351, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !38
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !38
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !41, !noalias !38
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !41, !noalias !38
  %398 = or i64 %375, 32
  %399 = getelementptr i16, i16* %324, i64 %398
  %400 = getelementptr i16, i16* %351, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !38
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !38
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !41, !noalias !38
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !41, !noalias !38
  %409 = or i64 %375, 48
  %410 = getelementptr i16, i16* %324, i64 %409
  %411 = getelementptr i16, i16* %351, i64 %409
  %412 = bitcast i16* %410 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !38
  %414 = getelementptr i16, i16* %410, i64 8
  %415 = bitcast i16* %414 to <8 x i16>*
  %416 = load <8 x i16>, <8 x i16>* %415, align 2, !alias.scope !38
  %417 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %417, align 2, !alias.scope !41, !noalias !38
  %418 = getelementptr i16, i16* %411, i64 8
  %419 = bitcast i16* %418 to <8 x i16>*
  store <8 x i16> %416, <8 x i16>* %419, align 2, !alias.scope !41, !noalias !38
  %420 = add i64 %375, 64
  %421 = add i64 %376, -4
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %423, label %374, !llvm.loop !43

423:                                              ; preds = %374, %362
  %424 = phi i64 [ 0, %362 ], [ %420, %374 ]
  %425 = icmp eq i64 %370, 0
  br i1 %425, label %442, label %426

426:                                              ; preds = %423, %426
  %427 = phi i64 [ %439, %426 ], [ %424, %423 ]
  %428 = phi i64 [ %440, %426 ], [ %370, %423 ]
  %429 = getelementptr i16, i16* %324, i64 %427
  %430 = getelementptr i16, i16* %351, i64 %427
  %431 = bitcast i16* %429 to <8 x i16>*
  %432 = load <8 x i16>, <8 x i16>* %431, align 2, !alias.scope !38
  %433 = getelementptr i16, i16* %429, i64 8
  %434 = bitcast i16* %433 to <8 x i16>*
  %435 = load <8 x i16>, <8 x i16>* %434, align 2, !alias.scope !38
  %436 = bitcast i16* %430 to <8 x i16>*
  store <8 x i16> %432, <8 x i16>* %436, align 2, !alias.scope !41, !noalias !38
  %437 = getelementptr i16, i16* %430, i64 8
  %438 = bitcast i16* %437 to <8 x i16>*
  store <8 x i16> %435, <8 x i16>* %438, align 2, !alias.scope !41, !noalias !38
  %439 = add i64 %427, 16
  %440 = add i64 %428, -1
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %442, label %426, !llvm.loop !44

442:                                              ; preds = %426, %423
  %443 = icmp eq i64 %353, %363
  br i1 %443, label %497, label %444

444:                                              ; preds = %442, %355, %350
  %445 = phi i64 [ %352, %355 ], [ %352, %350 ], [ %364, %442 ]
  %446 = phi i16* [ %324, %355 ], [ %324, %350 ], [ %365, %442 ]
  %447 = phi i16* [ %351, %355 ], [ %351, %350 ], [ %366, %442 ]
  %448 = add i64 %445, -1
  %449 = and i64 %445, 7
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %462, label %451

451:                                              ; preds = %444, %451
  %452 = phi i64 [ %457, %451 ], [ %445, %444 ]
  %453 = phi i16* [ %459, %451 ], [ %446, %444 ]
  %454 = phi i16* [ %458, %451 ], [ %447, %444 ]
  %455 = phi i64 [ %460, %451 ], [ %449, %444 ]
  %456 = load i16, i16* %453, align 2
  store i16 %456, i16* %454, align 2
  %457 = add i64 %452, -1
  %458 = getelementptr inbounds i16, i16* %454, i64 1
  %459 = getelementptr inbounds i16, i16* %453, i64 1
  %460 = add i64 %455, -1
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %462, label %451, !llvm.loop !45

462:                                              ; preds = %451, %444
  %463 = phi i64 [ %445, %444 ], [ %457, %451 ]
  %464 = phi i16* [ %446, %444 ], [ %459, %451 ]
  %465 = phi i16* [ %447, %444 ], [ %458, %451 ]
  %466 = icmp ult i64 %448, 7
  br i1 %466, label %497, label %467

467:                                              ; preds = %462, %467
  %468 = phi i64 [ %493, %467 ], [ %463, %462 ]
  %469 = phi i16* [ %495, %467 ], [ %464, %462 ]
  %470 = phi i16* [ %494, %467 ], [ %465, %462 ]
  %471 = load i16, i16* %469, align 2
  store i16 %471, i16* %470, align 2
  %472 = getelementptr inbounds i16, i16* %470, i64 1
  %473 = getelementptr inbounds i16, i16* %469, i64 1
  %474 = load i16, i16* %473, align 2
  store i16 %474, i16* %472, align 2
  %475 = getelementptr inbounds i16, i16* %470, i64 2
  %476 = getelementptr inbounds i16, i16* %469, i64 2
  %477 = load i16, i16* %476, align 2
  store i16 %477, i16* %475, align 2
  %478 = getelementptr inbounds i16, i16* %470, i64 3
  %479 = getelementptr inbounds i16, i16* %469, i64 3
  %480 = load i16, i16* %479, align 2
  store i16 %480, i16* %478, align 2
  %481 = getelementptr inbounds i16, i16* %470, i64 4
  %482 = getelementptr inbounds i16, i16* %469, i64 4
  %483 = load i16, i16* %482, align 2
  store i16 %483, i16* %481, align 2
  %484 = getelementptr inbounds i16, i16* %470, i64 5
  %485 = getelementptr inbounds i16, i16* %469, i64 5
  %486 = load i16, i16* %485, align 2
  store i16 %486, i16* %484, align 2
  %487 = getelementptr inbounds i16, i16* %470, i64 6
  %488 = getelementptr inbounds i16, i16* %469, i64 6
  %489 = load i16, i16* %488, align 2
  store i16 %489, i16* %487, align 2
  %490 = getelementptr inbounds i16, i16* %470, i64 7
  %491 = getelementptr inbounds i16, i16* %469, i64 7
  %492 = load i16, i16* %491, align 2
  store i16 %492, i16* %490, align 2
  %493 = add i64 %468, -8
  %494 = getelementptr inbounds i16, i16* %470, i64 8
  %495 = getelementptr inbounds i16, i16* %469, i64 8
  %496 = icmp eq i64 %493, 0
  br i1 %496, label %497, label %467, !llvm.loop !46

497:                                              ; preds = %462, %467, %442, %319
  %498 = bitcast %"class.std::__1::basic_string"* %314 to i8*
  %499 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %500 = bitcast %union.anon.9* %499 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %503 = bitcast i64* %502 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %312, i8* align 8 %503, i64 15, i1 false)
  %504 = getelementptr inbounds i8, i8* %313, i64 31
  %505 = load i8, i8* %504, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %498, i8 0, i64 24, i1 false) #8, !noalias !47
  %506 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1
  %507 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %508 = icmp eq %"class.std::__1::__tree_node"* %507, null
  br i1 %508, label %537, label %509

509:                                              ; preds = %497
  %510 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %511

511:                                              ; preds = %533, %509
  %512 = phi %"class.std::__1::__tree_node"* [ %536, %533 ], [ %507, %509 ]
  %513 = phi %"class.std::__1::__tree_node_base"** [ %535, %533 ], [ %510, %509 ]
  %514 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %512, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load i32, i32* %514, align 4
  %516 = icmp ugt i32 %515, %1
  br i1 %516, label %517, label %523

517:                                              ; preds = %511
  %518 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %512, i64 0, i32 0, i32 0, i32 0
  %519 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %518, align 8
  %520 = icmp eq %"class.std::__1::__tree_node_base"* %519, null
  br i1 %520, label %521, label %533

521:                                              ; preds = %517
  %522 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %512, i64 0, i32 0, i32 0
  br label %539

523:                                              ; preds = %511
  %524 = icmp ult i32 %515, %1
  br i1 %524, label %525, label %531

525:                                              ; preds = %523
  %526 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %512, i64 0, i32 0, i32 1
  %527 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %526, align 8
  %528 = icmp eq %"class.std::__1::__tree_node_base"* %527, null
  br i1 %528, label %529, label %533

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %512, i64 0, i32 0, i32 0
  br label %539

531:                                              ; preds = %523
  %532 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %512, i64 0, i32 0, i32 0
  br label %539

533:                                              ; preds = %525, %517
  %534 = phi %"class.std::__1::__tree_node_base"* [ %519, %517 ], [ %527, %525 ]
  %535 = phi %"class.std::__1::__tree_node_base"** [ %518, %517 ], [ %526, %525 ]
  %536 = bitcast %"class.std::__1::__tree_node_base"* %534 to %"class.std::__1::__tree_node"*
  br label %511

537:                                              ; preds = %497
  %538 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  br label %539

539:                                              ; preds = %537, %531, %529, %521
  %540 = phi %"class.std::__1::__tree_end_node"* [ %8, %537 ], [ %522, %521 ], [ %530, %529 ], [ %532, %531 ]
  %541 = phi %"class.std::__1::__tree_node_base"** [ %538, %537 ], [ %518, %521 ], [ %526, %529 ], [ %513, %531 ]
  %542 = bitcast %"class.std::__1::__tree_node_base"** %541 to %"class.std::__1::__tree_node"**
  %543 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %542, align 8
  %544 = icmp eq %"class.std::__1::__tree_node"* %543, null
  br i1 %544, label %545, label %572

545:                                              ; preds = %539
  %546 = tail call i8* @_Znwm(i64 80) #10, !noalias !50
  %547 = getelementptr inbounds i8, i8* %546, i64 32
  %548 = bitcast i8* %547 to i32*
  store i32 %1, i32* %548, align 8, !noalias !50
  %549 = getelementptr inbounds i8, i8* %546, i64 40
  store i8 0, i8* %549, align 8, !noalias !50
  %550 = getelementptr inbounds i8, i8* %546, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %550, i8 0, i64 28, i1 false) #8, !noalias !50
  %551 = bitcast i8* %546 to %"class.std::__1::__tree_node"*
  %552 = bitcast i8* %546 to %"class.std::__1::__tree_node_base"*
  %553 = getelementptr inbounds i8, i8* %546, i64 16
  %554 = bitcast i8* %553 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %546, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %540, %"class.std::__1::__tree_end_node"** %554, align 8
  %555 = bitcast %"class.std::__1::__tree_node_base"** %541 to i8**
  store i8* %546, i8** %555, align 8
  %556 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %506, i64 0, i32 0, i32 0
  %557 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %556, align 8
  %558 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %557, i64 0, i32 0
  %559 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %558, align 8
  %560 = icmp eq %"class.std::__1::__tree_node_base"* %559, null
  br i1 %560, label %565, label %561

561:                                              ; preds = %545
  %562 = ptrtoint %"class.std::__1::__tree_node_base"* %559 to i64
  %563 = bitcast %"class.std::__1::map"* %506 to i64*
  store i64 %562, i64* %563, align 8
  %564 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %541, align 8
  br label %565

565:                                              ; preds = %561, %545
  %566 = phi %"class.std::__1::__tree_node_base"* [ %552, %545 ], [ %564, %561 ]
  %567 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %568 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %567, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %568, %"class.std::__1::__tree_node_base"* %566) #8
  %569 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %570 = load i64, i64* %569, align 8
  %571 = add i64 %570, 1
  store i64 %571, i64* %569, align 8
  br label %572

572:                                              ; preds = %565, %539
  %573 = phi %"class.std::__1::__tree_node"* [ %551, %565 ], [ %543, %539 ]
  %574 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %573, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = load i8, i8* %574, align 8, !range !2
  %576 = icmp eq i8 %575, 0
  %577 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %573, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %576, label %593, label %578

578:                                              ; preds = %572
  %579 = bitcast %"class.std::__1::basic_string"* %577 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %580 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %579, i64 0, i32 1, i32 1
  %581 = load i8, i8* %580, align 1
  %582 = icmp slt i8 %581, 0
  br i1 %582, label %583, label %586

583:                                              ; preds = %578
  %584 = bitcast %"class.std::__1::basic_string"* %577 to i8**
  %585 = load i8*, i8** %584, align 8
  tail call void @_ZdlPv(i8* %585) #10
  br label %586

586:                                              ; preds = %583, %578
  %587 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %573, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %588 = bitcast %union.anon.9* %587 to i64*
  store i64 %501, i64* %588, align 8
  %589 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %573, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %590 = bitcast i64* %589 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %590, i8* nonnull align 8 %312, i64 15, i1 false)
  %591 = bitcast %"class.std::__1::__tree_node"* %573 to i8*
  %592 = getelementptr inbounds i8, i8* %591, i64 71
  store i8 %505, i8* %592, align 1
  br label %600

593:                                              ; preds = %572
  %594 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %573, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %595 = bitcast %union.anon.9* %594 to i64*
  store i64 %501, i64* %595, align 8
  %596 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %573, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %597 = bitcast i64* %596 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %597, i8* nonnull align 8 %312, i64 15, i1 false)
  %598 = bitcast %"class.std::__1::__tree_node"* %573 to i8*
  %599 = getelementptr inbounds i8, i8* %598, i64 71
  store i8 %505, i8* %599, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 0, i64 15, i1 false)
  store i8 1, i8* %574, align 8
  br label %600

600:                                              ; preds = %593, %586
  %601 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %573, i64 0, i32 2, i32 0, i32 2, i32 1
  store i32 %3, i32* %601, align 8
  %602 = load i8, i8* %313, align 8, !range !2
  %603 = icmp eq i8 %602, 0
  br i1 %603, label %613, label %604

604:                                              ; preds = %600
  %605 = bitcast %"class.std::__1::basic_string"* %314 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %605, i64 0, i32 1, i32 1
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %604
  %610 = bitcast %"class.std::__1::basic_string"* %314 to i8**
  %611 = load i8*, i8** %610, align 8
  tail call void @_ZdlPv(i8* %611) #10
  br label %612

612:                                              ; preds = %609, %604
  store i8 0, i8* %313, align 8
  br label %613

613:                                              ; preds = %600, %612
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %313) #8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %312)
  br label %614

614:                                              ; preds = %613, %305
  %615 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %315, %613 ], [ %36, %305 ]
  %616 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %615, i64 0, i32 1, i32 1
  %617 = load i8, i8* %616, align 1
  %618 = icmp slt i8 %617, 0
  %619 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %620 = load i64, i64* %619, align 8
  %621 = zext i8 %617 to i64
  %622 = select i1 %618, i64 %620, i64 %621
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %657

624:                                              ; preds = %614
  %625 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %626 = icmp eq %"class.std::__1::__tree_node"* %625, null
  br i1 %626, label %650, label %627

627:                                              ; preds = %624
  %628 = bitcast %"class.std::__1::__tree_node"* %625 to %"class.std::__1::__tree_node_base"*
  br label %629

629:                                              ; preds = %645, %627
  %630 = phi %"class.std::__1::__tree_node_base"* [ %646, %645 ], [ %628, %627 ]
  %631 = phi %"class.std::__1::__tree_node"* [ %647, %645 ], [ %625, %627 ]
  %632 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %631, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load i32, i32* %632, align 4
  %634 = icmp ugt i32 %633, %1
  br i1 %634, label %635, label %639

635:                                              ; preds = %629
  %636 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %631, i64 0, i32 0, i32 0, i32 0
  %637 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %636, align 8
  %638 = icmp eq %"class.std::__1::__tree_node_base"* %637, null
  br i1 %638, label %650, label %645

639:                                              ; preds = %629
  %640 = icmp ult i32 %633, %1
  br i1 %640, label %641, label %648

641:                                              ; preds = %639
  %642 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %631, i64 0, i32 0, i32 1
  %643 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %642, align 8
  %644 = icmp eq %"class.std::__1::__tree_node_base"* %643, null
  br i1 %644, label %650, label %645

645:                                              ; preds = %641, %635
  %646 = phi %"class.std::__1::__tree_node_base"* [ %637, %635 ], [ %643, %641 ]
  %647 = bitcast %"class.std::__1::__tree_node_base"* %646 to %"class.std::__1::__tree_node"*
  br label %629

648:                                              ; preds = %639
  %649 = icmp eq %"class.std::__1::__tree_node_base"* %630, null
  br i1 %649, label %650, label %651

650:                                              ; preds = %641, %635, %648, %624
  tail call void @abort() #9
  unreachable

651:                                              ; preds = %648
  %652 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %630, i64 1, i32 1
  %653 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %652, i64 4
  %654 = bitcast %"class.std::__1::__tree_node_base"** %653 to i32*
  %655 = load i32, i32* %654, align 8
  %656 = and i32 %655, -36
  store i32 %656, i32* %654, align 8
  br label %657

657:                                              ; preds = %651, %614
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16FieldDataManager31UpdateFieldDataMapWithNullValueENS_15FieldRendererIdEj(%"class.autofill::FieldDataManager"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1
  br label %91

10:                                               ; preds = %3, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ %4, %3 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %22, %10 ], [ %6, %3 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %14, %1
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %4
  br i1 %25, label %61, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, %1
  br i1 %30, label %61, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::__tree_node"* %6 to %"class.std::__1::__tree_node_base"*
  br label %33

33:                                               ; preds = %49, %31
  %34 = phi %"class.std::__1::__tree_node_base"* [ %50, %49 ], [ %32, %31 ]
  %35 = phi %"class.std::__1::__tree_node"* [ %51, %49 ], [ %6, %31 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %37, %1
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %54, label %49

43:                                               ; preds = %33
  %44 = icmp ult i32 %37, %1
  br i1 %44, label %45, label %52

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45, %39
  %50 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %47, %45 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"* %50 to %"class.std::__1::__tree_node"*
  br label %33

52:                                               ; preds = %43
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %45, %39, %52
  tail call void @abort() #9
  unreachable

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 1, i32 1
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, i64 4
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = or i32 %59, %2
  store i32 %60, i32* %58, align 8
  br label %145

61:                                               ; preds = %26, %24
  %62 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1
  br i1 %7, label %91, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %87, %63
  %66 = phi %"class.std::__1::__tree_node"* [ %90, %87 ], [ %6, %63 ]
  %67 = phi %"class.std::__1::__tree_node_base"** [ %89, %87 ], [ %64, %63 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp ugt i32 %69, %1
  br i1 %70, label %71, label %77

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %75, label %87

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  br label %94

77:                                               ; preds = %65
  %78 = icmp ult i32 %69, %1
  br i1 %78, label %79, label %85

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 1
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  br label %94

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  br label %94

87:                                               ; preds = %79, %71
  %88 = phi %"class.std::__1::__tree_node_base"* [ %73, %71 ], [ %81, %79 ]
  %89 = phi %"class.std::__1::__tree_node_base"** [ %72, %71 ], [ %80, %79 ]
  %90 = bitcast %"class.std::__1::__tree_node_base"* %88 to %"class.std::__1::__tree_node"*
  br label %65

91:                                               ; preds = %8, %61
  %92 = phi %"class.std::__1::map"* [ %9, %8 ], [ %62, %61 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %94

94:                                               ; preds = %91, %85, %83, %75
  %95 = phi %"class.std::__1::map"* [ %92, %91 ], [ %62, %75 ], [ %62, %83 ], [ %62, %85 ]
  %96 = phi %"class.std::__1::__tree_end_node"* [ %4, %91 ], [ %76, %75 ], [ %84, %83 ], [ %86, %85 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %93, %91 ], [ %72, %75 ], [ %80, %83 ], [ %67, %85 ]
  %98 = bitcast %"class.std::__1::__tree_node_base"** %97 to %"class.std::__1::__tree_node"**
  %99 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node"* %99, null
  br i1 %100, label %101, label %128

101:                                              ; preds = %94
  %102 = tail call i8* @_Znwm(i64 80) #10, !noalias !53
  %103 = getelementptr inbounds i8, i8* %102, i64 32
  %104 = bitcast i8* %103 to i32*
  store i32 %1, i32* %104, align 8, !noalias !53
  %105 = getelementptr inbounds i8, i8* %102, i64 40
  store i8 0, i8* %105, align 8, !noalias !53
  %106 = getelementptr inbounds i8, i8* %102, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 28, i1 false) #8, !noalias !53
  %107 = bitcast i8* %102 to %"class.std::__1::__tree_node"*
  %108 = bitcast i8* %102 to %"class.std::__1::__tree_node_base"*
  %109 = getelementptr inbounds i8, i8* %102, i64 16
  %110 = bitcast i8* %109 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %96, %"class.std::__1::__tree_end_node"** %110, align 8
  %111 = bitcast %"class.std::__1::__tree_node_base"** %97 to i8**
  store i8* %102, i8** %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %95, i64 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, null
  br i1 %116, label %121, label %117

117:                                              ; preds = %101
  %118 = ptrtoint %"class.std::__1::__tree_node_base"* %115 to i64
  %119 = bitcast %"class.std::__1::map"* %95 to i64*
  store i64 %118, i64* %119, align 8
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  br label %121

121:                                              ; preds = %117, %101
  %122 = phi %"class.std::__1::__tree_node_base"* [ %108, %101 ], [ %120, %117 ]
  %123 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"* %122) #8
  %125 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %125, align 8
  br label %128

128:                                              ; preds = %94, %121
  %129 = phi %"class.std::__1::__tree_node"* [ %107, %121 ], [ %99, %94 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %143, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = bitcast %"class.std::__1::basic_string"* %134 to i8**
  %141 = load i8*, i8** %140, align 8
  tail call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %139, %133
  store i8 0, i8* %130, align 8
  br label %143

143:                                              ; preds = %128, %142
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %129, i64 0, i32 2, i32 0, i32 2, i32 1
  store i32 %2, i32* %144, align 8
  br label %145

145:                                              ; preds = %143, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill16FieldDataManager11DidUserTypeENS_15FieldRendererIdE(%"class.autofill::FieldDataManager"* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %59, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %59, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %59, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br label %30

30:                                               ; preds = %46, %28
  %31 = phi %"class.std::__1::__tree_node_base"* [ %47, %46 ], [ %29, %28 ]
  %32 = phi %"class.std::__1::__tree_node"* [ %48, %46 ], [ %5, %28 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp ugt i32 %34, %1
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %51, label %46

40:                                               ; preds = %30
  %41 = icmp ult i32 %34, %1
  br i1 %41, label %42, label %49

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %36
  %47 = phi %"class.std::__1::__tree_node_base"* [ %38, %36 ], [ %44, %42 ]
  %48 = bitcast %"class.std::__1::__tree_node_base"* %47 to %"class.std::__1::__tree_node"*
  br label %30

49:                                               ; preds = %40
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %42, %36, %49
  tail call void @abort() #9
  unreachable

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 1, i32 1
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, i64 4
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 1
  %58 = icmp ne i32 %57, 0
  br label %59

59:                                               ; preds = %23, %21, %2, %52
  %60 = phi i1 [ %58, %52 ], [ false, %2 ], [ false, %21 ], [ false, %23 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill16FieldDataManager26WasAutofilledOnUserTriggerENS_15FieldRendererIdE(%"class.autofill::FieldDataManager"* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %59, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %59, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %59, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br label %30

30:                                               ; preds = %46, %28
  %31 = phi %"class.std::__1::__tree_node_base"* [ %47, %46 ], [ %29, %28 ]
  %32 = phi %"class.std::__1::__tree_node"* [ %48, %46 ], [ %5, %28 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp ugt i32 %34, %1
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %51, label %46

40:                                               ; preds = %30
  %41 = icmp ult i32 %34, %1
  br i1 %41, label %42, label %49

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %36
  %47 = phi %"class.std::__1::__tree_node_base"* [ %38, %36 ], [ %44, %42 ]
  %48 = bitcast %"class.std::__1::__tree_node_base"* %47 to %"class.std::__1::__tree_node"*
  br label %30

49:                                               ; preds = %40
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %42, %36, %49
  tail call void @abort() #9
  unreachable

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 1, i32 1
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, i64 4
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 2
  %58 = icmp ne i32 %57, 0
  br label %59

59:                                               ; preds = %23, %21, %2, %52
  %60 = phi i1 [ %58, %52 ], [ false, %2 ], [ false, %21 ], [ false, %23 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill16FieldDataManagerD2Ev(%"class.autofill::FieldDataManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.autofill::FieldDataManager", %"class.autofill::FieldDataManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE7destroyEPNS_11__tree_nodeISF_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %13, %19, %4
  %23 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %2, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_: argument 0"}
!5 = distinct !{!5, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_: argument 0"}
!19 = distinct !{!19, !"_ZNKR4absl8optionalINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEE8value_orIS7_EES7_OT_"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !12}
!26 = distinct !{!26, !14}
!27 = distinct !{!27, !14}
!28 = distinct !{!28, !12}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !12}
!35 = distinct !{!35, !14}
!36 = distinct !{!36, !14}
!37 = distinct !{!37, !12}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !12}
!44 = distinct !{!44, !14}
!45 = distinct !{!45, !14}
!46 = distinct !{!46, !12}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__19make_pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEERjEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSC_IT0_E4typeEEEOSD_OSG_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__19make_pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEERjEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSC_IT0_E4typeEEEOSD_OSG_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSA_ISY_EEEEEEDpOT_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSA_ISY_EEEEEEDpOT_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSA_ISY_EEEEEEDpOT_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill15FieldRendererIdENS_4pairIN4absl8optionalINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEjEEEENS_19__map_value_compareIS3_SF_NS_4lessIS3_EELb1EEENSA_ISF_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISF_PvEENS_22__tree_node_destructorINSA_ISY_EEEEEEDpOT_"}
