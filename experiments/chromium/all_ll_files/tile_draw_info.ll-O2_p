; ModuleID = '../../cc/tiles/tile_draw_info.cc'
source_filename = "../../cc/tiles/tile_draw_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::TileDrawInfo" = type <{ i32, i32, %"class.cc::ResourcePool::InUsePoolResource", i8, i8, i8, [5 x i8] }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.3" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.0", i64 }
%"class.util::IdType.0" = type { %"class.base::StrongAlias.1" }
%"class.base::StrongAlias.1" = type { i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.9" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@.str = private unnamed_addr constant [15 x i8] c"is_solid_color\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"is_transparent\00", align 1

@_ZN2cc12TileDrawInfoC1Ev = hidden unnamed_addr alias void (%"class.cc::TileDrawInfo"*), void (%"class.cc::TileDrawInfo"*)* @_ZN2cc12TileDrawInfoC2Ev
@_ZN2cc12TileDrawInfoD1Ev = hidden unnamed_addr alias void (%"class.cc::TileDrawInfo"*), void (%"class.cc::TileDrawInfo"*)* @_ZN2cc12TileDrawInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc12TileDrawInfoC2Ev(%"class.cc::TileDrawInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 2, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 2, i32 1
  %6 = bitcast %"class.cc::ResourcePool::PoolResource"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 11, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc12TileDrawInfoD2Ev(%"class.cc::TileDrawInfo"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc12TileDrawInfo11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::TileDrawInfo"* nocapture readonly, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i1 zeroext %5) #6
  %6 = load i32, i32* %3, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %10, 16777216
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi i1 [ false, %2 ], [ %11, %8 ]
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i1 zeroext %13) #6
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc12TileDrawInfo11SetResourceENS_12ResourcePool17InUsePoolResourceEbb(%"class.cc::TileDrawInfo"* nocapture, %"class.cc::ResourcePool::InUsePoolResource"* nocapture, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %5 = zext i1 %2 to i8
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 5
  store i8 %5, i8* %9, align 2
  %10 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 3
  store i8 %6, i8* %10, align 8
  %11 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %1, i64 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 2, i32 0
  store i8 %12, i8* %13, align 8
  %14 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %1, i64 0, i32 1
  %15 = bitcast %"class.cc::ResourcePool::PoolResource"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 2, i32 1
  %18 = bitcast %"class.cc::ResourcePool::PoolResource"** %17 to i64*
  store i64 %16, i64* %18, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %14, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.cc::ResourcePool::InUsePoolResource"* @_ZN2cc12TileDrawInfo11GetResourceEv(%"class.cc::TileDrawInfo"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %0, i64 0, i32 2
  ret %"class.cc::ResourcePool::InUsePoolResource"* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc12TileDrawInfo12TakeResourceEv(%"class.cc::ResourcePool::InUsePoolResource"* noalias nocapture sret, %"class.cc::TileDrawInfo"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %1, i64 0, i32 4
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %1, i64 0, i32 5
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %1, i64 0, i32 3
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %1, i64 0, i32 2, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  store i8 %9, i8* %6, align 8
  %10 = getelementptr inbounds %"class.cc::TileDrawInfo", %"class.cc::TileDrawInfo"* %1, i64 0, i32 2, i32 1
  %11 = bitcast %"class.cc::ResourcePool::PoolResource"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.cc::ResourcePool::PoolResource"** %7 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.cc::ResourcePool::PoolResource"* null, %"class.cc::ResourcePool::PoolResource"** %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
