; ModuleID = '../../third_party/pdfium/core/fpdfapi/parser/cpdf_security_handler.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/parser/cpdf_security_handler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_SecurityHandler = type { %"class.fxcrt::Retainable", i8, i32, i32, i32, i64, i32, i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.1", %"class.std::__1::unique_ptr.19", [32 x i8] }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.1" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.5" }
%"class.fxcrt::RetainPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.51", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_CryptoHandler* }
%class.CPDF_CryptoHandler = type { i64, i32, %"class.std::__1::unique_ptr.22", [32 x i8] }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %struct.CRYPT_aes_context* }
%struct.CRYPT_aes_context = type { i32, i32, [120 x i32], [120 x i32], [8 x i32] }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr.27"*, %"class.fxcrt::RetainPtr.27"*, %"class.std::__1::__compressed_pair.33" }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.fxcrt::RetainPtr.27"* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.38" }
%"class.fxcrt::RetainPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.fxcrt::StringDataTemplate.42"* }
%"class.fxcrt::StringDataTemplate.42" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%struct.CRYPT_sha2_context = type { i64, [8 x i64], [128 x i8] }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { i8*, i8*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i8* }
%"class.pdfium::span.46" = type { %"class.fxcrt::UnownedPtr.47", i64 }
%"class.fxcrt::UnownedPtr.47" = type { i8* }
%struct.CRYPT_md5_context = type { [2 x i32], [4 x i32], [64 x i8] }
%class.CPDF_String = type <{ %class.CPDF_Object, %"class.fxcrt::ByteString", i8, [7 x i8] }>
%struct.CRYPT_sha1_context = type { i64, i32, [5 x i32], [64 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_ = comdat any

$_ZNSt3__16vectorIh16FxAllocAllocatorIhEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZNSt3__16vectorIh16FxAllocAllocatorIhEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_ = comdat any

$_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm = comdat any

@_ZTV20CPDF_SecurityHandler = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_SecurityHandler*)* @_ZN20CPDF_SecurityHandlerD2Ev to i8*), i8* bitcast (void (%class.CPDF_SecurityHandler*)* @_ZN20CPDF_SecurityHandlerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"Filter\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Standard\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"StmF\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"StrF\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"OE\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"UE\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"Perms\00", align 1
@_ZN12_GLOBAL__N_116kDefaultPasscodeE = internal constant [32 x i8] c"(\BFN^Nu\8AAd\00NV\FF\FA\01\08..\00\B6\D0h>\80/\0C\A9\FEdSiz", align 16
@.str.12 = private unnamed_addr constant [16 x i8] c"EncryptMetadata\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"hello\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"CF\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"Identity\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"Length\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"CFM\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"AESV2\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"AESV3\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN20CPDF_SecurityHandlerC1Ev = hidden unnamed_addr alias void (%class.CPDF_SecurityHandler*), void (%class.CPDF_SecurityHandler*)* @_ZN20CPDF_SecurityHandlerC2Ev
@_ZN20CPDF_SecurityHandlerD1Ev = hidden unnamed_addr alias void (%class.CPDF_SecurityHandler*), void (%class.CPDF_SecurityHandler*)* @_ZN20CPDF_SecurityHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandlerC2Ev(%class.CPDF_SecurityHandler*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV20CPDF_SecurityHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 28, i1 false)
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %6) #9
  %8 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9
  %9 = bitcast %"class.fxcrt::RetainPtr.1"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandlerD2Ev(%class.CPDF_SecurityHandler*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV20CPDF_SecurityHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %3, align 8
  store %class.CPDF_CryptoHandler* null, %class.CPDF_CryptoHandler** %3, align 8
  %5 = icmp eq %class.CPDF_CryptoHandler* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN18CPDF_CryptoHandlerD1Ev(%class.CPDF_CryptoHandler* nonnull %4) #9
  %7 = bitcast %class.CPDF_CryptoHandler* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %9, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %9, align 8
  %11 = icmp eq %class.CPDF_Dictionary* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %10, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %10, i64 0, i32 0, i32 0
  %19 = bitcast %class.CPDF_Dictionary* %10 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  tail call void %22(%"class.fxcrt::Retainable"* nonnull %18) #9
  br label %23

23:                                               ; preds = %8, %12, %17
  %24 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 8
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %24) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandlerD0Ev(%class.CPDF_SecurityHandler*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV20CPDF_SecurityHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %3, align 8
  store %class.CPDF_CryptoHandler* null, %class.CPDF_CryptoHandler** %3, align 8
  %5 = icmp eq %class.CPDF_CryptoHandler* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN18CPDF_CryptoHandlerD1Ev(%class.CPDF_CryptoHandler* nonnull %4) #9
  %7 = bitcast %class.CPDF_CryptoHandler* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %9, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %9, align 8
  %11 = icmp eq %class.CPDF_Dictionary* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %10, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %10, i64 0, i32 0, i32 0
  %19 = bitcast %class.CPDF_Dictionary* %10 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  tail call void %22(%"class.fxcrt::Retainable"* nonnull %18) #9
  br label %23

23:                                               ; preds = %8, %12, %17
  %24 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 8
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %24) #9
  %25 = bitcast %class.CPDF_SecurityHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler6OnInitEPK15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringE(%class.CPDF_SecurityHandler*, %class.CPDF_Dictionary*, %class.CPDF_Array*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = icmp eq %class.CPDF_Array* %2, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  call void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CPDF_Array* nonnull %2, i64 0) #9
  %9 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 8
  %10 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %16

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8
  store %"class.fxcrt::StringDataTemplate"* null, %"class.fxcrt::StringDataTemplate"** %12, align 8
  %14 = icmp eq %"class.fxcrt::StringDataTemplate"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN5fxcrt18StringDataTemplateIcE7ReleaseEv(%"class.fxcrt::StringDataTemplate"* nonnull %13) #9
  br label %16

16:                                               ; preds = %15, %11, %7
  %17 = call zeroext i1 @_ZN20CPDF_SecurityHandler8LoadDictEPK15CPDF_Dictionary(%class.CPDF_SecurityHandler* %0, %class.CPDF_Dictionary* %1)
  br i1 %17, label %18, label %51

18:                                               ; preds = %16
  %19 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %51, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %23, align 8
  %25 = icmp eq %"class.fxcrt::StringDataTemplate"* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %24, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = call zeroext i1 @_ZN20CPDF_SecurityHandler13CheckPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %3, i1 zeroext true) #9
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 1
  store i8 1, i8* %33, align 8
  br label %36

34:                                               ; preds = %22, %26, %30
  %35 = call zeroext i1 @_ZN20CPDF_SecurityHandler13CheckPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %3, i1 zeroext false) #9
  br i1 %35, label %36, label %51

36:                                               ; preds = %32, %34
  %37 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  %38 = call i8* @_Znwm(i64 56) #10
  %39 = bitcast i8* %38 to %class.CPDF_CryptoHandler*
  %40 = load i32, i32* %19, align 4
  %41 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  %42 = load i64, i64* %37, align 8
  call void @_ZN18CPDF_CryptoHandlerC1ENS_6CipherEPKhm(%class.CPDF_CryptoHandler* nonnull %39, i32 %40, i8* %41, i64 %42) #9
  %43 = ptrtoint i8* %38 to i64
  %44 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 10
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.19"* %44 to i64*
  store i64 %43, i64* %47, align 8
  %48 = icmp eq %class.CPDF_CryptoHandler* %46, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %36
  call void @_ZN18CPDF_CryptoHandlerD1Ev(%class.CPDF_CryptoHandler* nonnull %46) #9
  %50 = bitcast %class.CPDF_CryptoHandler* %46 to i8*
  call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %49, %36, %34, %18, %16
  %52 = phi i1 [ false, %16 ], [ true, %18 ], [ false, %34 ], [ true, %36 ], [ true, %49 ]
  ret i1 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler8LoadDictEPK15CPDF_Dictionary(%class.CPDF_SecurityHandler* nocapture, %class.CPDF_Dictionary*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %12, %2
  %17 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %17, align 8
  store %class.CPDF_Dictionary* %1, %class.CPDF_Dictionary** %17, align 8
  %19 = icmp eq %class.CPDF_Dictionary* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %18, i64 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %18, i64 0, i32 0, i32 0
  %27 = bitcast %class.CPDF_Dictionary* %18 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  tail call void %30(%"class.fxcrt::Retainable"* nonnull %26) #9
  br label %31

31:                                               ; preds = %16, %20, %25
  %32 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  %33 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #9
  %34 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 2
  store i32 %33, i32* %34, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  %35 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #9
  %36 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #9
  %37 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  store i32 %36, i32* %37, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  %38 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #9
  %39 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5, i32 -1) #9
  %40 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 4
  store i32 %39, i32* %40, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  %41 = load i32, i32* %34, align 4
  %42 = icmp slt i32 %41, 4
  br i1 %42, label %43, label %48

43:                                               ; preds = %31
  %44 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  %45 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 6
  %46 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  %47 = call fastcc zeroext i1 @_ZL13LoadCryptInfoPK15CPDF_DictionaryRKN5fxcrt10ByteStringEPN18CPDF_CryptoHandler6CipherEPm(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6, i32* %45, i64* %46)
  br label %62

48:                                               ; preds = %31
  %49 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %50, align 8
  %51 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %52 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  %53 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %53, align 8
  %54 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %9, %class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  %55 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #9
  br i1 %55, label %56, label %60

56:                                               ; preds = %48
  %57 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 6
  %58 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  %59 = call fastcc zeroext i1 @_ZL13LoadCryptInfoPK15CPDF_DictionaryRKN5fxcrt10ByteStringEPN18CPDF_CryptoHandler6CipherEPm(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9, i32* %57, i64* %58)
  br label %60

60:                                               ; preds = %48, %56
  %61 = phi i1 [ %59, %56 ], [ false, %48 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %62

62:                                               ; preds = %60, %43
  %63 = phi %"class.fxcrt::ByteString"* [ %7, %60 ], [ %6, %43 ]
  %64 = phi i8* [ %49, %60 ], [ %44, %43 ]
  %65 = phi i1 [ %61, %60 ], [ %47, %43 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #9
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler13CheckSecurityERKN5fxcrt10ByteStringE(%class.CPDF_SecurityHandler*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %3, align 8
  %5 = icmp eq %"class.fxcrt::StringDataTemplate"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZN20CPDF_SecurityHandler13CheckPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext true)
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 1
  store i8 1, i8* %13, align 8
  br label %16

14:                                               ; preds = %2, %10, %6
  %15 = tail call zeroext i1 @_ZN20CPDF_SecurityHandler13CheckPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext false)
  br label %16

16:                                               ; preds = %14, %12
  %17 = phi i1 [ %15, %14 ], [ true, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandler17InitCryptoHandlerEv(%class.CPDF_SecurityHandler*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 6
  %3 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  %4 = tail call i8* @_Znwm(i64 56) #10
  %5 = bitcast i8* %4 to %class.CPDF_CryptoHandler*
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  %8 = load i64, i64* %3, align 8
  tail call void @_ZN18CPDF_CryptoHandlerC1ENS_6CipherEPKhm(%class.CPDF_CryptoHandler* nonnull %5, i32 %6, i8* %7, i64 %8) #9
  %9 = ptrtoint i8* %4 to i64
  %10 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.19"* %10 to i64*
  store i64 %9, i64* %13, align 8
  %14 = icmp eq %class.CPDF_CryptoHandler* %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  tail call void @_ZN18CPDF_CryptoHandlerD1Ev(%class.CPDF_CryptoHandler* nonnull %12) #9
  %16 = bitcast %class.CPDF_CryptoHandler* %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler13CheckPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = tail call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckPasswordImplERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext %2)
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 7
  store i32 1, i32* %12, align 4
  br label %57

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %14, align 8, !noalias !2
  %16 = icmp eq %"class.fxcrt::StringDataTemplate"* %15, null
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 3, i64 0
  %18 = select i1 %16, i8* null, i8* %17
  br i1 %16, label %57, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %15, i64 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !2
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %57, label %26

24:                                               ; preds = %26
  %25 = icmp eq i8* %30, %22
  br i1 %25, label %57, label %26

26:                                               ; preds = %19, %24
  %27 = phi i8* [ %30, %24 ], [ %17, %19 ]
  %28 = load i8, i8* %27, align 1
  %29 = icmp sgt i8 %28, 0
  %30 = getelementptr inbounds i8, i8* %27, i64 1
  br i1 %29, label %24, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 4
  br i1 %34, label %35, label %46

35:                                               ; preds = %31
  %36 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %37, align 8
  %38 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  %39 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %39, align 8
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  store i64 %21, i64* %40, align 8
  call void @_ZN5fxcrt10WideString10FromLatin1ENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* nonnull sret %5, %"class.fxcrt::StringViewTemplate"* nonnull %6) #9
  call void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* nonnull sret %4, %"class.fxcrt::WideString"* nonnull %5) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  %41 = call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckPasswordImplERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i1 zeroext %2)
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 7
  store i32 2, i32* %43, align 4
  br label %44

44:                                               ; preds = %35, %42
  %45 = phi i1 [ true, %42 ], [ false, %35 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %57

46:                                               ; preds = %31
  %47 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %48, align 8
  %49 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %50, align 8
  %51 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %9, i64 0, i32 0, i32 1
  store i64 %21, i64* %51, align 8
  call void @_ZN5fxcrt10WideString8FromUTF8ENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* nonnull sret %8, %"class.fxcrt::StringViewTemplate"* nonnull %9) #9
  call void @_ZNK5fxcrt10WideString8ToLatin1Ev(%"class.fxcrt::ByteString"* nonnull sret %7, %"class.fxcrt::WideString"* nonnull %8) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  %52 = call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckPasswordImplERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, i1 zeroext %2)
  br i1 %52, label %53, label %55

53:                                               ; preds = %46
  %54 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 7
  store i32 3, i32* %54, align 4
  br label %55

55:                                               ; preds = %46, %53
  %56 = phi i1 [ true, %53 ], [ false, %46 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %57

57:                                               ; preds = %24, %13, %19, %44, %55, %11
  %58 = phi i1 [ true, %11 ], [ %45, %44 ], [ %56, %55 ], [ false, %19 ], [ false, %13 ], [ false, %24 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK20CPDF_SecurityHandler14GetPermissionsEv(%class.CPDF_SecurityHandler* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i32 [ %9, %7 ], [ -1, %1 ]
  %12 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %12, align 8
  %14 = icmp eq %class.CPDF_Dictionary* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %2, %class.CPDF_Dictionary* nonnull %13, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #9
  %18 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %19 = and i32 %11, 3900
  %20 = or i32 %19, -3904
  %21 = select i1 %18, i32 %20, i32 %11
  ret i32 %21

22:                                               ; preds = %10
  ret i32 %11
}

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL13LoadCryptInfoPK15CPDF_DictionaryRKN5fxcrt10ByteStringEPN18CPDF_CryptoHandler6CipherEPm(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32* nocapture, i64* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  %14 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  store i32 1, i32* %2, align 4
  store i64 0, i64* %3, align 8
  %15 = icmp sgt i32 %14, 3
  br i1 %15, label %16, label %56

16:                                               ; preds = %4
  %17 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0)) #9
  %18 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %19 = icmp eq %class.CPDF_Dictionary* %18, null
  br i1 %19, label %79, label %20

20:                                               ; preds = %16
  %21 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0)) #9
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  store i32 0, i32* %2, align 4
  br label %77

23:                                               ; preds = %20
  %24 = call %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %18, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #9
  %25 = icmp eq %class.CPDF_Dictionary* %24, null
  br i1 %25, label %79, label %26

26:                                               ; preds = %23
  %27 = icmp eq i32 %14, 4
  br i1 %27, label %28, label %35

28:                                               ; preds = %26
  %29 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)) #9
  %30 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* nonnull %24, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, i32 0) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %28
  %33 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)) #9
  %34 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8, i32 128) #9
  br label %38

35:                                               ; preds = %26
  %36 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)) #9
  %37 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9, i32 256) #9
  br label %38

38:                                               ; preds = %35, %32
  %39 = phi %"class.fxcrt::ByteString"* [ %8, %32 ], [ %9, %35 ]
  %40 = phi i8* [ %33, %32 ], [ %36, %35 ]
  %41 = phi i32 [ %34, %32 ], [ %37, %35 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %38, %28
  %43 = phi i32 [ %30, %28 ], [ %41, %38 ]
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %79, label %45

45:                                               ; preds = %42
  %46 = icmp slt i32 %43, 40
  %47 = shl nsw i32 %43, 3
  %48 = select i1 %46, i32 %47, i32 %43
  %49 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %50, align 8
  %51 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %10, %class.CPDF_Dictionary* nonnull %24, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %52 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #9
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  %54 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #9
  br i1 %54, label %55, label %61

55:                                               ; preds = %53, %45
  store i32 2, i32* %2, align 4
  br label %61

56:                                               ; preds = %4
  %57 = icmp sgt i32 %14, 1
  br i1 %57, label %58, label %67

58:                                               ; preds = %56
  %59 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0)) #9
  %60 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12, i32 40) #9
  br label %61

61:                                               ; preds = %55, %53, %58
  %62 = phi %"class.fxcrt::ByteString"* [ %12, %58 ], [ %10, %53 ], [ %10, %55 ]
  %63 = phi i8* [ %59, %58 ], [ %49, %53 ], [ %49, %55 ]
  %64 = phi i32 [ %60, %58 ], [ %48, %53 ], [ %48, %55 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %62) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  %65 = sdiv i32 %64, 8
  %66 = icmp ugt i32 %65, 32
  br i1 %66, label %79, label %67

67:                                               ; preds = %56, %61
  %68 = phi i32 [ 5, %56 ], [ %65, %61 ]
  %69 = load i32, i32* %2, align 4
  %70 = sext i32 %68 to i64
  switch i32 %69, label %79 [
    i32 2, label %76
    i32 3, label %71
    i32 1, label %73
    i32 0, label %77
  ]

71:                                               ; preds = %67
  %72 = icmp eq i32 %68, 32
  br i1 %72, label %77, label %79

73:                                               ; preds = %67
  %74 = add nsw i64 %70, -5
  %75 = icmp ult i64 %74, 12
  br i1 %75, label %77, label %79

76:                                               ; preds = %67
  switch i64 %70, label %79 [
    i64 32, label %77
    i64 24, label %77
    i64 16, label %77
  ]

77:                                               ; preds = %76, %76, %76, %67, %22, %71, %73
  %78 = phi i64 [ 32, %71 ], [ %70, %73 ], [ %70, %76 ], [ 0, %22 ], [ %70, %67 ], [ %70, %76 ], [ %70, %76 ]
  store i64 %78, i64* %3, align 8
  br label %79

79:                                               ; preds = %76, %67, %42, %23, %71, %73, %16, %61, %77
  %80 = phi i1 [ true, %77 ], [ false, %61 ], [ false, %76 ], [ false, %16 ], [ false, %73 ], [ false, %71 ], [ false, %23 ], [ false, %42 ], [ false, %67 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler8LoadDictEPK15CPDF_DictionaryPN18CPDF_CryptoHandler6CipherEPm(%class.CPDF_SecurityHandler* nocapture, %class.CPDF_Dictionary*, i32* nocapture, i64* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8
  br label %19

19:                                               ; preds = %15, %4
  %20 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %20, align 8
  store %class.CPDF_Dictionary* %1, %class.CPDF_Dictionary** %20, align 8
  %22 = icmp eq %class.CPDF_Dictionary* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %21, i64 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %21, i64 0, i32 0, i32 0
  %30 = bitcast %class.CPDF_Dictionary* %21 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  tail call void %33(%"class.fxcrt::Retainable"* nonnull %29) #9
  br label %34

34:                                               ; preds = %19, %23, %28
  %35 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  %36 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  %37 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 2
  store i32 %36, i32* %37, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  %38 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #9
  %39 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #9
  %40 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  store i32 %39, i32* %40, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  %41 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #9
  %42 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, i32 -1) #9
  %43 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 4
  store i32 %42, i32* %43, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  %44 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %45, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  %46 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  %47 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %47, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  %48 = load i32, i32* %37, align 4
  %49 = icmp sgt i32 %48, 3
  br i1 %49, label %50, label %58

50:                                               ; preds = %34
  %51 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  %52 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %10, %class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #9
  %53 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %54 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #9
  %55 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %12, %class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %13) #9
  %56 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %8, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #9
  %57 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #9
  br i1 %57, label %58, label %65

58:                                               ; preds = %50, %34
  %59 = call fastcc zeroext i1 @_ZL13LoadCryptInfoPK15CPDF_DictionaryRKN5fxcrt10ByteStringEPN18CPDF_CryptoHandler6CipherEPm(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8, i32* %2, i64* %3)
  br i1 %59, label %60, label %65

60:                                               ; preds = %58
  %61 = load i32, i32* %2, align 4
  %62 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 6
  store i32 %61, i32* %62, align 8
  %63 = load i64, i64* %3, align 8
  %64 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  store i64 %63, i64* %64, align 8
  br label %65

65:                                               ; preds = %50, %58, %60
  %66 = phi i1 [ true, %60 ], [ false, %50 ], [ false, %58 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler20AES256_CheckPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %struct.CRYPT_sha2_context, align 8
  %10 = alloca [32 x i8], align 16
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %struct.CRYPT_aes_context, align 4
  %14 = alloca [16 x i8], align 16
  %15 = alloca %"class.fxcrt::ByteString", align 8
  %16 = alloca %"class.fxcrt::ByteString", align 8
  %17 = alloca [16 x i8], align 16
  %18 = alloca [16 x i8], align 16
  %19 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %20, align 8
  %21 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  %23 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CPDF_Dictionary* %22, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %24 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %20, align 8
  %25 = icmp eq %"class.fxcrt::StringDataTemplate"* %24, null
  br i1 %25, label %201, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %24, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, 48
  br i1 %29, label %201, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %32, align 8
  %33 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  %34 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_Dictionary* %33, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  %35 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %36 = icmp eq %"class.fxcrt::StringDataTemplate"* %35, null
  br i1 %36, label %199, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %35, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %39, 48
  br i1 %40, label %199, label %41

41:                                               ; preds = %37
  br i1 %2, label %42, label %47

42:                                               ; preds = %41
  %43 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %20, align 8
  %44 = icmp eq %"class.fxcrt::StringDataTemplate"* %43, null
  %45 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %43, i64 0, i32 3, i64 0
  %46 = select i1 %44, i8* null, i8* %45
  br label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %35, i64 0, i32 3, i64 0
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %46, %42 ], [ %48, %47 ]
  %51 = bitcast %struct.CRYPT_sha2_context* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %51) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 200, i1 false)
  %52 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #9
  %53 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %52, i8 -86, i64 32, i1 false)
  %54 = load i32, i32* %53, align 8
  %55 = icmp sgt i32 %54, 5
  br i1 %55, label %56, label %60

56:                                               ; preds = %49
  %57 = getelementptr inbounds i8, i8* %50, i64 32
  %58 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %35, i64 0, i32 3, i64 0
  %59 = select i1 %2, i8* %58, i8* null
  call fastcc void @_ZN12_GLOBAL__N_114Revision6_HashERKN5fxcrt10ByteStringEPKhS5_Ph(%"class.fxcrt::ByteString"* dereferenceable(8) %1, i8* %57, i8* %59, i8* nonnull %52)
  br label %79

60:                                               ; preds = %49
  call void @_Z17CRYPT_SHA256StartP18CRYPT_sha2_context(%struct.CRYPT_sha2_context* nonnull %9) #9
  %61 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %61, align 8
  %63 = icmp eq %"class.fxcrt::StringDataTemplate"* %62, null
  %64 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %62, i64 0, i32 3, i64 0
  %65 = select i1 %63, i8* null, i8* %64
  br i1 %63, label %70, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %62, i64 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %60, %66
  %71 = phi i32 [ %69, %66 ], [ 0, %60 ]
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %65, i32 %71) #9
  %72 = getelementptr inbounds i8, i8* %50, i64 32
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %72, i32 8) #9
  br i1 %2, label %73, label %78

73:                                               ; preds = %70
  %74 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %75 = icmp eq %"class.fxcrt::StringDataTemplate"* %74, null
  %76 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %74, i64 0, i32 3, i64 0
  %77 = select i1 %75, i8* null, i8* %76
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %77, i32 48) #9
  br label %78

78:                                               ; preds = %73, %70
  call void @_Z18CRYPT_SHA256FinishP18CRYPT_sha2_contextPh(%struct.CRYPT_sha2_context* nonnull %9, i8* nonnull %52) #9
  br label %79

79:                                               ; preds = %78, %56
  %80 = call i32 @bcmp(i8* nonnull %52, i8* %50, i64 32)
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %197

82:                                               ; preds = %79
  %83 = load i32, i32* %53, align 8
  %84 = icmp sgt i32 %83, 5
  br i1 %84, label %85, label %94

85:                                               ; preds = %82
  %86 = getelementptr inbounds i8, i8* %50, i64 40
  br i1 %2, label %87, label %92

87:                                               ; preds = %85
  %88 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %89 = icmp eq %"class.fxcrt::StringDataTemplate"* %88, null
  %90 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %88, i64 0, i32 3, i64 0
  %91 = select i1 %89, i8* null, i8* %90
  br label %92

92:                                               ; preds = %85, %87
  %93 = phi i8* [ %91, %87 ], [ null, %85 ]
  call fastcc void @_ZN12_GLOBAL__N_114Revision6_HashERKN5fxcrt10ByteStringEPKhS5_Ph(%"class.fxcrt::ByteString"* dereferenceable(8) %1, i8* %86, i8* %93, i8* nonnull %52)
  br label %113

94:                                               ; preds = %82
  call void @_Z17CRYPT_SHA256StartP18CRYPT_sha2_context(%struct.CRYPT_sha2_context* nonnull %9) #9
  %95 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %95, align 8
  %97 = icmp eq %"class.fxcrt::StringDataTemplate"* %96, null
  %98 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %96, i64 0, i32 3, i64 0
  %99 = select i1 %97, i8* null, i8* %98
  br i1 %97, label %104, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %96, i64 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = trunc i64 %102 to i32
  br label %104

104:                                              ; preds = %94, %100
  %105 = phi i32 [ %103, %100 ], [ 0, %94 ]
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %99, i32 %105) #9
  %106 = getelementptr inbounds i8, i8* %50, i64 40
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %106, i32 8) #9
  br i1 %2, label %107, label %112

107:                                              ; preds = %104
  %108 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %32, align 8
  %109 = icmp eq %"class.fxcrt::StringDataTemplate"* %108, null
  %110 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %108, i64 0, i32 3, i64 0
  %111 = select i1 %109, i8* null, i8* %110
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %111, i32 48) #9
  br label %112

112:                                              ; preds = %107, %104
  call void @_Z18CRYPT_SHA256FinishP18CRYPT_sha2_contextPh(%struct.CRYPT_sha2_context* nonnull %9, i8* nonnull %52) #9
  br label %113

113:                                              ; preds = %112, %92
  %114 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #9
  %115 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %115, align 8
  %116 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  %117 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #9
  %118 = select i1 %2, [3 x i8]* @.str.9, [3 x i8]* @.str.10
  %119 = getelementptr inbounds [3 x i8], [3 x i8]* %118, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* nonnull %119) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %11, %class.CPDF_Dictionary* %116, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #9
  %120 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %115, align 8
  %121 = icmp eq %"class.fxcrt::StringDataTemplate"* %120, null
  br i1 %121, label %195, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %120, i64 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = icmp ult i64 %124, 32
  br i1 %125, label %195, label %126

126:                                              ; preds = %122
  %127 = bitcast %struct.CRYPT_aes_context* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1000, i8* nonnull %127) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 0, i64 1000, i1 false)
  call void @_Z15CRYPT_AESSetKeyP17CRYPT_aes_contextPKhj(%struct.CRYPT_aes_context* nonnull %13, i8* nonnull %52, i32 32) #9
  %128 = getelementptr inbounds [16 x i8], [16 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %128, i8 0, i64 16, i1 false)
  call void @_Z14CRYPT_AESSetIVP17CRYPT_aes_contextPKh(%struct.CRYPT_aes_context* nonnull %13, i8* nonnull %128) #9
  %129 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  %130 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %115, align 8
  %131 = icmp eq %"class.fxcrt::StringDataTemplate"* %130, null
  %132 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %130, i64 0, i32 3, i64 0
  %133 = select i1 %131, i8* null, i8* %132
  call void @_Z16CRYPT_AESDecryptP17CRYPT_aes_contextPhPKhj(%struct.CRYPT_aes_context* nonnull %13, i8* %129, i8* %133, i32 32) #9
  call void @_Z15CRYPT_AESSetKeyP17CRYPT_aes_contextPKhj(%struct.CRYPT_aes_context* nonnull %13, i8* %129, i32 32) #9
  call void @_Z14CRYPT_AESSetIVP17CRYPT_aes_contextPKh(%struct.CRYPT_aes_context* nonnull %13, i8* nonnull %128) #9
  %134 = bitcast %"class.fxcrt::ByteString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #9
  %135 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %135, align 8
  %136 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  %137 = bitcast %"class.fxcrt::ByteString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %15, %class.CPDF_Dictionary* %136, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %16) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #9
  %138 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %135, align 8
  %139 = icmp eq %"class.fxcrt::StringDataTemplate"* %138, null
  br i1 %139, label %193, label %140

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %138, i64 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %193, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds [16 x i8], [16 x i8]* %17, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %145, i8 0, i64 16, i1 false)
  %146 = load i64, i64* %141, align 8
  %147 = icmp ult i64 %146, 16
  %148 = select i1 %147, i64 %146, i64 16
  %149 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %138, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %145, i8* align 1 %149, i64 %148, i1 false)
  %150 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #9
  %151 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 8
  %152 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 9
  %153 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 10
  %154 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %150, i8 -86, i64 16, i1 false)
  call void @_Z16CRYPT_AESDecryptP17CRYPT_aes_contextPhPKhj(%struct.CRYPT_aes_context* nonnull %13, i8* nonnull %150, i8* nonnull %145, i32 16) #9
  %155 = load i8, i8* %152, align 1
  %156 = icmp eq i8 %155, 97
  %157 = load i8, i8* %153, align 2
  %158 = icmp eq i8 %157, 100
  %159 = and i1 %156, %158
  %160 = load i8, i8* %154, align 1
  %161 = icmp eq i8 %160, 98
  %162 = and i1 %159, %161
  br i1 %162, label %163, label %191

163:                                              ; preds = %144
  %164 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 3
  %165 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 2
  %166 = getelementptr inbounds [16 x i8], [16 x i8]* %18, i64 0, i64 1
  %167 = load i8, i8* %164, align 1
  %168 = zext i8 %167 to i32
  %169 = shl nuw i32 %168, 24
  %170 = load i8, i8* %165, align 2
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 16
  %173 = or i32 %172, %169
  %174 = load i8, i8* %166, align 1
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 8
  %177 = or i32 %173, %176
  %178 = load i8, i8* %150, align 16
  %179 = zext i8 %178 to i32
  %180 = or i32 %177, %179
  %181 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 4
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %180, %182
  br i1 %183, label %184, label %191

184:                                              ; preds = %163
  %185 = load i8, i8* %151, align 8
  %186 = icmp eq i8 %185, 70
  br i1 %186, label %191, label %187

187:                                              ; preds = %184
  %188 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  %189 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #9
  %190 = call zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary* %188, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i1 zeroext true) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #9
  br label %191

191:                                              ; preds = %184, %187, %163, %144
  %192 = phi i1 [ false, %144 ], [ false, %163 ], [ true, %184 ], [ %190, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #9
  br label %193

193:                                              ; preds = %126, %140, %191
  %194 = phi i1 [ %192, %191 ], [ false, %140 ], [ false, %126 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #9
  call void @llvm.lifetime.end.p0i8(i64 1000, i8* nonnull %127) #9
  br label %195

195:                                              ; preds = %113, %122, %193
  %196 = phi i1 [ %194, %193 ], [ false, %122 ], [ false, %113 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #9
  br label %197

197:                                              ; preds = %79, %195
  %198 = phi i1 [ %196, %195 ], [ false, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #9
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %51) #9
  br label %199

199:                                              ; preds = %30, %37, %197
  %200 = phi i1 [ %198, %197 ], [ false, %37 ], [ false, %30 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %201

201:                                              ; preds = %3, %26, %199
  %202 = phi i1 [ %200, %199 ], [ false, %26 ], [ false, %3 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  ret i1 %202
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114Revision6_HashERKN5fxcrt10ByteStringEPKhS5_Ph(%"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i8*, i8*, i8*) unnamed_addr #0 {
  %5 = alloca %struct.CRYPT_sha2_context, align 8
  %6 = alloca [32 x i8], align 16
  %7 = alloca %"class.std::__1::vector.72", align 8
  %8 = alloca %"class.std::__1::vector.72", align 8
  %9 = alloca %struct.CRYPT_aes_context, align 4
  %10 = alloca %"class.std::__1::vector.72", align 8
  %11 = bitcast %struct.CRYPT_sha2_context* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 200, i1 false)
  call void @_Z17CRYPT_SHA256StartP18CRYPT_sha2_context(%struct.CRYPT_sha2_context* nonnull %5) #9
  %12 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8
  %14 = icmp eq %"class.fxcrt::StringDataTemplate"* %13, null
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 3, i64 0
  %16 = select i1 %14, i8* null, i8* %15
  br i1 %14, label %21, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %13, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  br label %21

21:                                               ; preds = %4, %17
  %22 = phi i32 [ %20, %17 ], [ 0, %4 ]
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %5, i8* %16, i32 %22) #9
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %5, i8* %1, i32 8) #9
  %23 = icmp ne i8* %2, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %5, i8* nonnull %2, i32 48) #9
  br label %25

25:                                               ; preds = %24, %21
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #9
  %27 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 32, i1 false)
  call void @_Z18CRYPT_SHA256FinishP18CRYPT_sha2_contextPh(%struct.CRYPT_sha2_context* nonnull %5, i8* nonnull %26) #9
  %28 = bitcast %"class.std::__1::vector.72"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %7, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #9
  %31 = bitcast %"class.std::__1::vector.72"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #9
  %34 = bitcast %struct.CRYPT_aes_context* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1000, i8* nonnull %34) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 0, i64 1000, i1 false)
  %35 = bitcast i8** %30 to i64*
  %36 = bitcast %"class.std::__1::vector.72"* %7 to i64*
  %37 = bitcast %"class.std::__1::vector.72"* %10 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %10, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %10, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds i8, i8* %2, i64 48
  %41 = bitcast i8** %33 to i64*
  %42 = bitcast %"class.std::__1::vector.72"* %8 to i64*
  %43 = bitcast i8** %39 to i64*
  br label %44

44:                                               ; preds = %228, %25
  %45 = phi i8* [ null, %25 ], [ %88, %228 ]
  %46 = phi i32 [ 0, %25 ], [ %73, %228 ]
  %47 = phi i32 [ 0, %25 ], [ %223, %228 ]
  %48 = phi i32 [ 32, %25 ], [ %201, %228 ]
  %49 = phi i8* [ %27, %25 ], [ %222, %228 ]
  %50 = phi i8* [ %26, %25 ], [ %217, %228 ]
  %51 = icmp ult i32 %47, 64
  br i1 %51, label %60, label %52

52:                                               ; preds = %44
  %53 = add nsw i32 %46, -1
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %45, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = add nuw nsw i32 %57, 32
  %59 = icmp ult i32 %47, %58
  br i1 %59, label %60, label %229

60:                                               ; preds = %44, %52
  %61 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8
  %62 = icmp eq %"class.fxcrt::StringDataTemplate"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %61, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  br label %66

66:                                               ; preds = %60, %63
  %67 = phi i64 [ %65, %63 ], [ 0, %60 ]
  %68 = sext i32 %48 to i64
  %69 = trunc i64 %67 to i32
  %70 = add i32 %48, %69
  %71 = shl i32 %70, 6
  %72 = add i32 %71, 3072
  %73 = select i1 %23, i32 %72, i32 %71
  %74 = sext i32 %73 to i64
  %75 = load i64, i64* %35, align 8
  %76 = load i64, i64* %36, align 8
  %77 = sub i64 %75, %76
  %78 = icmp ult i64 %77, %74
  %79 = inttoptr i64 %76 to i8*
  br i1 %78, label %80, label %83

80:                                               ; preds = %66
  %81 = sub i64 %74, %77
  call void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm(%"class.std::__1::vector.72"* nonnull %7, i64 %81) #9
  %82 = load i8*, i8** %29, align 8
  br label %87

83:                                               ; preds = %66
  %84 = icmp ugt i64 %77, %74
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %79, i64 %74
  store i8* %86, i8** %30, align 8
  br label %87

87:                                               ; preds = %80, %83, %85
  %88 = phi i8* [ %82, %80 ], [ %79, %83 ], [ %79, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #9
  %89 = getelementptr inbounds i8, i8* %50, i64 %68
  br label %174

90:                                               ; preds = %193
  call void @_Z15CRYPT_AESSetKeyP17CRYPT_aes_contextPKhj(%struct.CRYPT_aes_context* nonnull %9, i8* %50, i32 16) #9
  call void @_Z14CRYPT_AESSetIVP17CRYPT_aes_contextPKh(%struct.CRYPT_aes_context* nonnull %9, i8* %49) #9
  %91 = load i8*, i8** %38, align 8
  call void @_Z16CRYPT_AESEncryptP17CRYPT_aes_contextPhPKhj(%struct.CRYPT_aes_context* nonnull %9, i8* %88, i8* %91, i32 %73) #9
  %92 = load i8, i8* %88, align 1
  %93 = zext i8 %92 to i64
  %94 = shl nuw nsw i64 %93, 24
  %95 = getelementptr inbounds i8, i8* %88, i64 1
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i64
  %98 = shl nuw nsw i64 %97, 16
  %99 = getelementptr inbounds i8, i8* %88, i64 2
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = shl nuw nsw i64 %101, 8
  %103 = getelementptr inbounds i8, i8* %88, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = or i64 %98, %94
  %107 = or i64 %106, %102
  %108 = or i64 %107, %105
  %109 = urem i64 %108, 3
  %110 = getelementptr inbounds i8, i8* %88, i64 4
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = shl nuw nsw i64 %112, 24
  %114 = getelementptr inbounds i8, i8* %88, i64 5
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i64
  %117 = shl nuw nsw i64 %116, 16
  %118 = getelementptr inbounds i8, i8* %88, i64 6
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = shl nuw nsw i64 %120, 8
  %122 = getelementptr inbounds i8, i8* %88, i64 7
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = shl nuw nsw i64 %109, 32
  %126 = or i64 %117, %113
  %127 = or i64 %126, %125
  %128 = or i64 %127, %121
  %129 = or i64 %128, %124
  %130 = urem i64 %129, 3
  %131 = getelementptr inbounds i8, i8* %88, i64 8
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = shl nuw nsw i64 %133, 24
  %135 = getelementptr inbounds i8, i8* %88, i64 9
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i64
  %138 = shl nuw nsw i64 %137, 16
  %139 = getelementptr inbounds i8, i8* %88, i64 10
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = shl nuw nsw i64 %141, 8
  %143 = getelementptr inbounds i8, i8* %88, i64 11
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = shl nuw nsw i64 %130, 32
  %147 = or i64 %138, %134
  %148 = or i64 %147, %142
  %149 = or i64 %148, %145
  %150 = or i64 %149, %146
  %151 = urem i64 %150, 3
  %152 = getelementptr inbounds i8, i8* %88, i64 12
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = shl nuw nsw i64 %154, 24
  %156 = getelementptr inbounds i8, i8* %88, i64 13
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = shl nuw nsw i64 %158, 16
  %160 = getelementptr inbounds i8, i8* %88, i64 14
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = shl nuw nsw i64 %162, 8
  %164 = getelementptr inbounds i8, i8* %88, i64 15
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = shl nuw nsw i64 %151, 32
  %168 = or i64 %159, %155
  %169 = or i64 %168, %163
  %170 = or i64 %169, %166
  %171 = or i64 %170, %167
  %172 = urem i64 %171, 3
  %173 = trunc i64 %172 to i32
  switch i32 %173, label %199 [
    i32 0, label %200
    i32 1, label %198
  ]

174:                                              ; preds = %196, %87
  %175 = phi i8* [ null, %87 ], [ %197, %196 ]
  %176 = phi i32 [ 0, %87 ], [ %194, %196 ]
  %177 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %12, align 8
  %178 = icmp eq %"class.fxcrt::StringDataTemplate"* %177, null
  %179 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %177, i64 0, i32 3, i64 0
  %180 = select i1 %178, i8* null, i8* %179
  br i1 %178, label %184, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %177, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  br label %184

184:                                              ; preds = %174, %181
  %185 = phi i64 [ %183, %181 ], [ 0, %174 ]
  %186 = getelementptr inbounds i8, i8* %180, i64 %185
  %187 = call i8* @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.72"* nonnull %10, i8* %175, i8* %180, i8* %186)
  %188 = load i8*, i8** %39, align 8
  %189 = call i8* @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector.72"* nonnull %10, i8* %188, i8* %50, i8* %89)
  br i1 %23, label %190, label %193

190:                                              ; preds = %184
  %191 = load i8*, i8** %39, align 8
  %192 = call i8* @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.72"* nonnull %10, i8* %191, i8* nonnull %2, i8* %40)
  br label %193

193:                                              ; preds = %184, %190
  %194 = add nuw nsw i32 %176, 1
  %195 = icmp eq i32 %194, 64
  br i1 %195, label %90, label %196

196:                                              ; preds = %193
  %197 = load i8*, i8** %39, align 8
  br label %174

198:                                              ; preds = %90
  br label %200

199:                                              ; preds = %90
  br label %200

200:                                              ; preds = %90, %199, %198
  %201 = phi i32 [ 64, %199 ], [ 48, %198 ], [ 32, %90 ]
  %202 = phi i32 [ 2, %199 ], [ 1, %198 ], [ %173, %90 ]
  %203 = zext i32 %201 to i64
  %204 = load i64, i64* %41, align 8
  %205 = load i64, i64* %42, align 8
  %206 = sub i64 %204, %205
  %207 = icmp ult i64 %206, %203
  %208 = inttoptr i64 %205 to i8*
  br i1 %207, label %209, label %212

209:                                              ; preds = %200
  %210 = sub i64 %203, %206
  call void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm(%"class.std::__1::vector.72"* nonnull %8, i64 %210) #9
  %211 = load i8*, i8** %32, align 8
  br label %216

212:                                              ; preds = %200
  %213 = icmp ugt i64 %206, %203
  br i1 %213, label %214, label %216

214:                                              ; preds = %212
  %215 = getelementptr inbounds i8, i8* %208, i64 %203
  store i8* %215, i8** %33, align 8
  br label %216

216:                                              ; preds = %209, %212, %214
  %217 = phi i8* [ %211, %209 ], [ %208, %212 ], [ %208, %214 ]
  switch i32 %202, label %221 [
    i32 0, label %218
    i32 1, label %219
    i32 2, label %220
  ]

218:                                              ; preds = %216
  call void @_Z20CRYPT_SHA256GeneratePKhjPh(i8* %88, i32 %73, i8* %217) #9
  br label %221

219:                                              ; preds = %216
  call void @_Z20CRYPT_SHA384GeneratePKhjPh(i8* %88, i32 %73, i8* %217) #9
  br label %221

220:                                              ; preds = %216
  call void @_Z20CRYPT_SHA512GeneratePKhjPh(i8* %88, i32 %73, i8* %217) #9
  br label %221

221:                                              ; preds = %216, %219, %220, %218
  %222 = getelementptr inbounds i8, i8* %217, i64 16
  %223 = add nuw nsw i32 %47, 1
  %224 = load i8*, i8** %38, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %228, label %226

226:                                              ; preds = %221
  %227 = ptrtoint i8* %224 to i64
  store i64 %227, i64* %43, align 8
  call void @_Z7FX_FreePv(i8* nonnull %224) #9
  br label %228

228:                                              ; preds = %221, %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #9
  br label %44

229:                                              ; preds = %52
  %230 = icmp eq i8* %3, null
  br i1 %230, label %232, label %231

231:                                              ; preds = %229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 1 %50, i64 32, i1 false)
  br label %232

232:                                              ; preds = %229, %231
  call void @llvm.lifetime.end.p0i8(i64 1000, i8* nonnull %34) #9
  %233 = load i8*, i8** %32, align 8
  %234 = icmp eq i8* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %232
  %236 = ptrtoint i8* %233 to i64
  store i64 %236, i64* %41, align 8
  call void @_Z7FX_FreePv(i8* nonnull %233) #9
  br label %237

237:                                              ; preds = %232, %235
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %238 = load i8*, i8** %29, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = ptrtoint i8* %238 to i64
  store i64 %241, i64* %35, align 8
  call void @_Z7FX_FreePv(i8* nonnull %238) #9
  br label %242

242:                                              ; preds = %237, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %11) #9
  ret void
}

declare void @_Z17CRYPT_SHA256StartP18CRYPT_sha2_context(%struct.CRYPT_sha2_context*) local_unnamed_addr #1

declare void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context*, i8*, i32) local_unnamed_addr #1

declare void @_Z18CRYPT_SHA256FinishP18CRYPT_sha2_contextPh(%struct.CRYPT_sha2_context*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare void @_Z15CRYPT_AESSetKeyP17CRYPT_aes_contextPKhj(%struct.CRYPT_aes_context*, i8*, i32) local_unnamed_addr #1

declare void @_Z14CRYPT_AESSetIVP17CRYPT_aes_contextPKh(%struct.CRYPT_aes_context*, i8*) local_unnamed_addr #1

declare void @_Z16CRYPT_AESDecryptP17CRYPT_aes_contextPhPKhj(%struct.CRYPT_aes_context*, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20CPDF_SecurityHandler19IsMetadataEncryptedEv(%class.CPDF_SecurityHandler* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #9
  %6 = call zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary* %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2, i1 zeroext true) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler17CheckPasswordImplERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 4
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN20CPDF_SecurityHandler20AES256_CheckPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext %2)
  br label %23

10:                                               ; preds = %3
  br i1 %2, label %11, label %19

11:                                               ; preds = %10
  %12 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %13, align 8
  call void @_ZNK20CPDF_SecurityHandler15GetUserPasswordERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #9
  %14 = call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckUserPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i1 zeroext false) #9
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckUserPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i1 zeroext true) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi i1 [ true, %11 ], [ %16, %15 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br label %23

19:                                               ; preds = %10
  %20 = tail call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckUserPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext false)
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = tail call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckUserPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i1 zeroext true)
  br label %23

23:                                               ; preds = %19, %21, %17, %8
  %24 = phi i1 [ %9, %8 ], [ %18, %17 ], [ true, %19 ], [ %22, %21 ]
  ret i1 %24
}

declare void @_ZN5fxcrt10WideString10FromLatin1ENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* sret, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

declare void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::WideString"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

declare void @_ZN5fxcrt10WideString8FromUTF8ENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* sret, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

declare void @_ZNK5fxcrt10WideString8ToLatin1Ev(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::WideString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler18CheckOwnerPasswordERKN5fxcrt10ByteStringE(%class.CPDF_SecurityHandler*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %5, align 8
  call void @_ZNK20CPDF_SecurityHandler15GetUserPasswordERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %3, %class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1)
  %6 = call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckUserPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3, i1 zeroext false)
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = call zeroext i1 @_ZN20CPDF_SecurityHandler17CheckUserPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3, i1 zeroext true)
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi i1 [ true, %2 ], [ %8, %7 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_SecurityHandler17CheckUserPasswordERKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca [32 x i8], align 16
  %7 = alloca %"class.pdfium::span.46", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = alloca [32 x i8], align 16
  %10 = alloca [32 x i8], align 16
  %11 = alloca %"class.pdfium::span.46", align 8
  %12 = alloca %"class.pdfium::span", align 8
  %13 = alloca %struct.CRYPT_md5_context, align 4
  %14 = alloca %"class.pdfium::span", align 8
  %15 = alloca %"class.pdfium::span", align 8
  %16 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %16, align 8
  %18 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  %19 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 8
  tail call fastcc void @_ZN12_GLOBAL__N_114CalcEncryptKeyEPK15CPDF_DictionaryRKN5fxcrt10ByteStringEPhmbS6_(%class.CPDF_Dictionary* %17, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i8* %18, i64 %20, i1 zeroext %2, %"class.fxcrt::ByteString"* dereferenceable(8) %21)
  %22 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %23, align 8
  %24 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %16, align 8
  %25 = icmp eq %class.CPDF_Dictionary* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %3
  %27 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_Dictionary* nonnull %24, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

28:                                               ; preds = %3
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  br label %29

29:                                               ; preds = %28, %26
  %30 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %23, align 8
  %31 = icmp eq %"class.fxcrt::StringDataTemplate"* %30, null
  br i1 %31, label %167, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, 16
  br i1 %35, label %167, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #9
  %38 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 32, i1 false)
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %37, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i64 32, i1 false)
  %42 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %7, i64 0, i32 0, i32 0
  store i8* %37, i8** %42, align 8
  %43 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %7, i64 0, i32 1
  store i64 32, i64* %43, align 8
  %44 = load i64, i64* %19, align 8
  %45 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 0, i32 0
  store i8* %18, i8** %45, align 8
  %46 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  store i64 %44, i64* %46, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %7, %"class.pdfium::span"* nonnull %8) #9
  %47 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %23, align 8
  %48 = icmp eq %"class.fxcrt::StringDataTemplate"* %47, null
  %49 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %47, i64 0, i32 3
  %50 = select i1 %48, [1 x i8]* @.str.20, [1 x i8]* %49
  %51 = getelementptr inbounds [1 x i8], [1 x i8]* %50, i64 0, i64 0
  %52 = call i32 @memcmp(i8* %51, i8* nonnull %37, i64 16) #11
  br label %164

53:                                               ; preds = %36
  %54 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 0, i64 32, i1 false)
  %55 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 0, i64 32, i1 false)
  %56 = load i64, i64* %33, align 8
  %57 = icmp ult i64 %56, 32
  %58 = select i1 %57, i64 %56, i64 32
  %59 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %30, i64 0, i32 3, i64 0
  %60 = and i64 %58, 4294967295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %54, i8* align 1 %59, i64 %60, i1 false)
  %61 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %11, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %11, i64 0, i32 1
  %63 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 1
  br label %65

65:                                               ; preds = %147, %53
  %66 = phi i32 [ 19, %53 ], [ %148, %147 ]
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %147, label %69

69:                                               ; preds = %65
  %70 = trunc i32 %66 to i8
  %71 = icmp ult i64 %67, 32
  br i1 %71, label %72, label %74

72:                                               ; preds = %134, %69
  %73 = phi i64 [ 0, %69 ], [ %75, %134 ]
  br label %150

74:                                               ; preds = %69
  %75 = and i64 %67, -32
  %76 = insertelement <16 x i8> undef, i8 %70, i32 0
  %77 = shufflevector <16 x i8> %76, <16 x i8> undef, <16 x i32> zeroinitializer
  %78 = insertelement <16 x i8> undef, i8 %70, i32 0
  %79 = shufflevector <16 x i8> %78, <16 x i8> undef, <16 x i32> zeroinitializer
  %80 = add i64 %75, -32
  %81 = lshr exact i64 %80, 5
  %82 = add nuw nsw i64 %81, 1
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %80, 0
  br i1 %84, label %118, label %85

85:                                               ; preds = %74
  %86 = sub nuw nsw i64 %82, %83
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ 0, %85 ], [ %115, %87 ]
  %89 = phi i64 [ %86, %85 ], [ %116, %87 ]
  %90 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1
  %93 = getelementptr inbounds i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1
  %96 = xor <16 x i8> %92, %77
  %97 = xor <16 x i8> %95, %79
  %98 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %88
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %99, align 16
  %100 = getelementptr inbounds i8, i8* %98, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %101, align 16
  %102 = or i64 %88, 32
  %103 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %102
  %104 = bitcast i8* %103 to <16 x i8>*
  %105 = load <16 x i8>, <16 x i8>* %104, align 1
  %106 = getelementptr inbounds i8, i8* %103, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  %108 = load <16 x i8>, <16 x i8>* %107, align 1
  %109 = xor <16 x i8> %105, %77
  %110 = xor <16 x i8> %108, %79
  %111 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %102
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %112, align 16
  %113 = getelementptr inbounds i8, i8* %111, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %114, align 16
  %115 = add i64 %88, 64
  %116 = add i64 %89, -2
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %87, !llvm.loop !6

118:                                              ; preds = %87, %74
  %119 = phi i64 [ 0, %74 ], [ %115, %87 ]
  %120 = icmp eq i64 %83, 0
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %119
  %123 = bitcast i8* %122 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 1
  %125 = getelementptr inbounds i8, i8* %122, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  %127 = load <16 x i8>, <16 x i8>* %126, align 1
  %128 = xor <16 x i8> %124, %77
  %129 = xor <16 x i8> %127, %79
  %130 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %119
  %131 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %131, align 16
  %132 = getelementptr inbounds i8, i8* %130, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %133, align 16
  br label %134

134:                                              ; preds = %118, %121
  %135 = icmp eq i64 %67, %75
  br i1 %135, label %147, label %72

136:                                              ; preds = %147
  %137 = bitcast %struct.CRYPT_md5_context* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %137) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %137, i8 -86, i64 88, i1 false)
  call void @_Z14CRYPT_MD5Startv(%struct.CRYPT_md5_context* nonnull sret %13) #9
  %138 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %14, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i8** %138, align 8
  %139 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %14, i64 0, i32 1
  store i64 32, i64* %139, align 8
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %13, %"class.pdfium::span"* nonnull %14) #9
  %140 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %140, align 8
  %142 = icmp eq %"class.fxcrt::StringDataTemplate"* %141, null
  br i1 %142, label %162, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %141, i64 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %162, label %158

147:                                              ; preds = %150, %134, %65
  store i8* %54, i8** %61, align 8
  store i64 32, i64* %62, align 8
  store i8* %55, i8** %63, align 8
  store i64 %67, i64* %64, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %11, %"class.pdfium::span"* nonnull %12) #9
  %148 = add nsw i32 %66, -1
  %149 = icmp eq i32 %66, 0
  br i1 %149, label %136, label %65

150:                                              ; preds = %72, %150
  %151 = phi i64 [ %156, %150 ], [ %73, %72 ]
  %152 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = xor i8 %153, %70
  %155 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %151
  store i8 %154, i8* %155, align 1
  %156 = add nuw i64 %151, 1
  %157 = icmp ult i64 %156, %67
  br i1 %157, label %150, label %147, !llvm.loop !8

158:                                              ; preds = %143
  %159 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %141, i64 0, i32 3, i64 0
  %160 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %15, i64 0, i32 0, i32 0
  store i8* %159, i8** %160, align 8, !alias.scope !10
  %161 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %15, i64 0, i32 1
  store i64 %145, i64* %161, align 8, !alias.scope !10
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %13, %"class.pdfium::span"* nonnull %15) #9
  br label %162

162:                                              ; preds = %136, %158, %143
  call void @_Z15CRYPT_MD5FinishP17CRYPT_md5_contextPh(%struct.CRYPT_md5_context* nonnull %13, i8* nonnull %37) #9
  %163 = call i32 @bcmp(i8* nonnull %54, i8* nonnull %37, i64 16)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %137) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #9
  br label %164

164:                                              ; preds = %162, %41
  %165 = phi i32 [ %52, %41 ], [ %163, %162 ]
  %166 = icmp eq i32 %165, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #9
  br label %167

167:                                              ; preds = %29, %32, %164
  %168 = phi i1 [ %166, %164 ], [ false, %32 ], [ false, %29 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  ret i1 %168
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114CalcEncryptKeyEPK15CPDF_DictionaryRKN5fxcrt10ByteStringEPhmbS6_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i8* nocapture, i64, i1 zeroext, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %7 = alloca [32 x i8], align 16
  %8 = alloca %struct.CRYPT_md5_context, align 4
  %9 = alloca %"class.pdfium::span", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.pdfium::span", align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = alloca %"class.pdfium::span", align 8
  %16 = alloca %"class.pdfium::span", align 8
  %17 = alloca %"class.fxcrt::ByteString", align 8
  %18 = alloca %"class.fxcrt::ByteString", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.pdfium::span", align 8
  %21 = alloca [16 x i8], align 16
  %22 = alloca %"class.pdfium::span", align 8
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 32, i1 false)
  %25 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8
  %26 = icmp eq %"class.fxcrt::StringDataTemplate"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %6
  %28 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 32
  %31 = select i1 %30, i64 %29, i64 32
  br label %32

32:                                               ; preds = %27, %6
  %33 = phi i64 [ 0, %6 ], [ %31, %27 ]
  %34 = sub nuw nsw i64 32, %33
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %25, i64 0, i32 3, i64 0
  %36 = select i1 %26, i8* null, i8* %35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %23, i8* align 1 %36, i64 %33, i1 false) #9
  %37 = icmp eq i64 %34, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = icmp ult i64 %33, 32
  br i1 %39, label %41, label %40, !prof !15

40:                                               ; preds = %38
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !16
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !17
  unreachable

41:                                               ; preds = %38
  %42 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i64 %34, i1 false) #9
  br label %43

43:                                               ; preds = %32, %41
  %44 = bitcast %struct.CRYPT_md5_context* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %44, i8 -86, i64 88, i1 false)
  call void @_Z14CRYPT_MD5Startv(%struct.CRYPT_md5_context* nonnull sret %8) #9
  %45 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 0, i32 0
  store i8* %23, i8** %45, align 8
  %46 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 1
  store i64 32, i64* %46, align 8
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %8, %"class.pdfium::span"* nonnull %9) #9
  %47 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %48, align 8
  %49 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %10, %class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  %50 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %48, align 8, !noalias !18
  %51 = icmp eq %"class.fxcrt::StringDataTemplate"* %50, null
  %52 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %50, i64 0, i32 3, i64 0
  %53 = select i1 %51, i8* null, i8* %52
  br i1 %51, label %57, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %50, i64 0, i32 1
  %56 = load i64, i64* %55, align 8, !noalias !18
  br label %57

57:                                               ; preds = %43, %54
  %58 = phi i64 [ %56, %54 ], [ 0, %43 ]
  %59 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 0, i32 0
  store i8* %53, i8** %59, align 8, !alias.scope !21
  %60 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 1
  store i64 %58, i64* %60, align 8, !alias.scope !21
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %8, %"class.pdfium::span"* nonnull %12) #9
  %61 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #9
  %62 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #9
  %63 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  store i32 %63, i32* %13, align 4
  %64 = ptrtoint i32* %13 to i64
  %65 = bitcast %"class.pdfium::span"* %15 to i64*
  store i64 %64, i64* %65, align 8, !alias.scope !24
  %66 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %15, i64 0, i32 1
  store i64 4, i64* %66, align 8, !alias.scope !24
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %8, %"class.pdfium::span"* nonnull %15) #9
  %67 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %67, align 8
  %69 = icmp eq %"class.fxcrt::StringDataTemplate"* %68, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %57
  %71 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %68, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %68, i64 0, i32 3, i64 0
  %76 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 0, i32 0
  store i8* %75, i8** %76, align 8, !alias.scope !27
  %77 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 1
  store i64 %72, i64* %77, align 8, !alias.scope !27
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %8, %"class.pdfium::span"* nonnull %16) #9
  br label %78

78:                                               ; preds = %57, %74, %70
  %79 = bitcast %"class.fxcrt::ByteString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #9
  %80 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %17) #9
  %81 = icmp sgt i32 %80, 2
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  %82 = xor i1 %81, true
  %83 = or i1 %82, %4
  br i1 %83, label %92, label %84

84:                                               ; preds = %78
  %85 = bitcast %"class.fxcrt::ByteString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #9
  %86 = call zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %18, i1 zeroext true) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #9
  br i1 %86, label %92, label %87

87:                                               ; preds = %84
  %88 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #9
  store i32 -1, i32* %19, align 4
  %89 = ptrtoint i32* %19 to i64
  %90 = bitcast %"class.pdfium::span"* %20 to i64*
  store i64 %89, i64* %90, align 8, !alias.scope !32
  %91 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %20, i64 0, i32 1
  store i64 4, i64* %91, align 8, !alias.scope !32
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %8, %"class.pdfium::span"* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #9
  br label %92

92:                                               ; preds = %84, %78, %87
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 -86, i64 16, i1 false)
  call void @_Z15CRYPT_MD5FinishP17CRYPT_md5_contextPh(%struct.CRYPT_md5_context* nonnull %8, i8* nonnull %93) #9
  %94 = icmp ult i64 %3, 16
  %95 = select i1 %94, i64 %3, i64 16
  br i1 %81, label %96, label %103

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %22, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %22, i64 0, i32 1
  br label %99

99:                                               ; preds = %99, %96
  %100 = phi i32 [ 0, %96 ], [ %101, %99 ]
  store i8* %93, i8** %97, align 8
  store i64 %95, i64* %98, align 8
  call void @_Z17CRYPT_MD5GenerateN6pdfium4spanIKhEEPh(%"class.pdfium::span"* nonnull %22, i8* nonnull %93) #9
  %101 = add nuw nsw i32 %100, 1
  %102 = icmp eq i32 %101, 50
  br i1 %102, label %103, label %99

103:                                              ; preds = %99, %92
  %104 = icmp ult i64 %3, 17
  %105 = sub i64 %3, %95
  %106 = select i1 %104, i64 0, i64 %105
  %107 = getelementptr i8, i8* %2, i64 %95
  call void @llvm.memset.p0i8.i64(i8* align 1 %107, i8 0, i64 %106, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* nonnull align 16 %93, i64 %95, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #9
  ret void
}

declare void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"*, %"class.pdfium::span"*) local_unnamed_addr #1

declare void @_Z14CRYPT_MD5Startv(%struct.CRYPT_md5_context* sret) local_unnamed_addr #1

declare void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context*, %"class.pdfium::span"*) local_unnamed_addr #1

declare void @_Z15CRYPT_MD5FinishP17CRYPT_md5_contextPh(%struct.CRYPT_md5_context*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20CPDF_SecurityHandler15GetUserPasswordERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* noalias sret, %class.CPDF_SecurityHandler* nocapture readonly, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca [32 x i8], align 16
  %7 = alloca [16 x i8], align 16
  %8 = alloca %"class.pdfium::span", align 8
  %9 = alloca %"class.pdfium::span", align 8
  %10 = alloca [32 x i8], align 16
  %11 = alloca [32 x i8], align 16
  %12 = alloca %"class.pdfium::span.46", align 8
  %13 = alloca %"class.pdfium::span", align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca %"class.pdfium::span.46", align 8
  %16 = alloca %"class.pdfium::span", align 8
  %17 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %18, align 8
  %19 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %19, align 8
  %21 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_Dictionary* %20, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %22 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %18, align 8
  %23 = icmp eq %"class.fxcrt::StringDataTemplate"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %22, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, 32
  br i1 %27, label %28, label %29

28:                                               ; preds = %24, %3
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %0) #9
  br label %192

29:                                               ; preds = %24
  %30 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -86, i64 32, i1 false)
  %32 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %31, align 8
  %33 = icmp eq %"class.fxcrt::StringDataTemplate"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %32, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, 32
  %38 = select i1 %37, i64 %36, i64 32
  br label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ 0, %29 ], [ %38, %34 ]
  %41 = sub nuw nsw i64 32, %40
  %42 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %32, i64 0, i32 3, i64 0
  %43 = select i1 %33, i8* null, i8* %42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %30, i8* align 1 %43, i64 %40, i1 false) #9
  %44 = icmp eq i64 %41, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = icmp ult i64 %40, 32
  br i1 %46, label %48, label %47, !prof !15

47:                                               ; preds = %45
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !16
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !17
  unreachable

48:                                               ; preds = %45
  %49 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i64 %41, i1 false) #9
  br label %50

50:                                               ; preds = %39, %48
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #9
  %52 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -86, i64 16, i1 false)
  store i8* %30, i8** %52, align 8
  %53 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  store i64 32, i64* %53, align 8
  call void @_Z17CRYPT_MD5GenerateN6pdfium4spanIKhEEPh(%"class.pdfium::span"* nonnull %8, i8* nonnull %51) #9
  %54 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %1, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, 2
  br i1 %56, label %57, label %66

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 1
  br label %60

60:                                               ; preds = %60, %57
  %61 = phi i32 [ 0, %57 ], [ %62, %60 ]
  store i8* %51, i8** %58, align 8
  store i64 16, i64* %59, align 8
  call void @_Z17CRYPT_MD5GenerateN6pdfium4spanIKhEEPh(%"class.pdfium::span"* nonnull %9, i8* nonnull %51) #9
  %62 = add nuw nsw i32 %61, 1
  %63 = icmp eq i32 %62, 50
  br i1 %63, label %64, label %60

64:                                               ; preds = %60
  %65 = load i32, i32* %54, align 8
  br label %66

66:                                               ; preds = %64, %50
  %67 = phi i32 [ %65, %64 ], [ %55, %50 ]
  %68 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #9
  %69 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %1, i64 0, i32 5
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %70, 16
  %72 = select i1 %71, i64 %70, i64 16
  %73 = sub nuw nsw i64 32, %72
  %74 = getelementptr [32 x i8], [32 x i8]* %10, i64 0, i64 %72
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 0, i64 %73, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %68, i8* nonnull align 16 %51, i64 %72, i1 false)
  %75 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #9
  %76 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %18, align 8
  %77 = icmp eq %"class.fxcrt::StringDataTemplate"* %76, null
  %78 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %76, i64 0, i32 3
  %79 = select i1 %77, [1 x i8]* @.str.20, [1 x i8]* %78
  %80 = getelementptr inbounds [1 x i8], [1 x i8]* %79, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %75, i8* align 1 %80, i64 32, i1 false)
  %81 = icmp eq i32 %67, 2
  br i1 %81, label %88, label %82

82:                                               ; preds = %66
  %83 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  %84 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %15, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %15, i64 0, i32 1
  %86 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %16, i64 0, i32 1
  br label %94

88:                                               ; preds = %66
  %89 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %12, i64 0, i32 0, i32 0
  store i8* %75, i8** %89, align 8
  %90 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %12, i64 0, i32 1
  store i64 32, i64* %90, align 8
  %91 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %13, i64 0, i32 0, i32 0
  store i8* %68, i8** %91, align 8
  %92 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %13, i64 0, i32 1
  store i64 %70, i64* %92, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %12, %"class.pdfium::span"* nonnull %13) #9
  br label %93

93:                                               ; preds = %165, %88
  br label %178

94:                                               ; preds = %167, %82
  %95 = phi i64 [ %70, %82 ], [ %169, %167 ]
  %96 = phi i32 [ 19, %82 ], [ %168, %167 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %83, i8 0, i64 32, i1 false)
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %165, label %98

98:                                               ; preds = %94
  %99 = trunc i32 %96 to i8
  %100 = icmp ult i64 %95, 32
  br i1 %100, label %101, label %103

101:                                              ; preds = %163, %98
  %102 = phi i64 [ 0, %98 ], [ %104, %163 ]
  br label %170

103:                                              ; preds = %98
  %104 = and i64 %95, -32
  %105 = insertelement <16 x i8> undef, i8 %99, i32 0
  %106 = shufflevector <16 x i8> %105, <16 x i8> undef, <16 x i32> zeroinitializer
  %107 = insertelement <16 x i8> undef, i8 %99, i32 0
  %108 = shufflevector <16 x i8> %107, <16 x i8> undef, <16 x i32> zeroinitializer
  %109 = add i64 %104, -32
  %110 = lshr exact i64 %109, 5
  %111 = add nuw nsw i64 %110, 1
  %112 = and i64 %111, 1
  %113 = icmp eq i64 %109, 0
  br i1 %113, label %147, label %114

114:                                              ; preds = %103
  %115 = sub nuw nsw i64 %111, %112
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i64 [ 0, %114 ], [ %144, %116 ]
  %118 = phi i64 [ %115, %114 ], [ %145, %116 ]
  %119 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %117
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 16
  %122 = getelementptr inbounds i8, i8* %119, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 16
  %125 = xor <16 x i8> %121, %106
  %126 = xor <16 x i8> %124, %108
  %127 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 %117
  %128 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %128, align 16
  %129 = getelementptr inbounds i8, i8* %127, i64 16
  %130 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %130, align 16
  %131 = or i64 %117, 32
  %132 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %131
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 16
  %135 = getelementptr inbounds i8, i8* %132, i64 16
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 16
  %138 = xor <16 x i8> %134, %106
  %139 = xor <16 x i8> %137, %108
  %140 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 %131
  %141 = bitcast i8* %140 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %141, align 16
  %142 = getelementptr inbounds i8, i8* %140, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %143, align 16
  %144 = add i64 %117, 64
  %145 = add i64 %118, -2
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %116, !llvm.loop !35

147:                                              ; preds = %116, %103
  %148 = phi i64 [ 0, %103 ], [ %144, %116 ]
  %149 = icmp eq i64 %112, 0
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %148
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 16
  %154 = getelementptr inbounds i8, i8* %151, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  %156 = load <16 x i8>, <16 x i8>* %155, align 16
  %157 = xor <16 x i8> %153, %106
  %158 = xor <16 x i8> %156, %108
  %159 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 %148
  %160 = bitcast i8* %159 to <16 x i8>*
  store <16 x i8> %157, <16 x i8>* %160, align 16
  %161 = getelementptr inbounds i8, i8* %159, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %158, <16 x i8>* %162, align 16
  br label %163

163:                                              ; preds = %147, %150
  %164 = icmp eq i64 %95, %104
  br i1 %164, label %165, label %101

165:                                              ; preds = %170, %163, %94
  store i8* %75, i8** %84, align 8
  store i64 32, i64* %85, align 8
  store i8* %83, i8** %86, align 8
  store i64 %95, i64* %87, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %15, %"class.pdfium::span"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #9
  %166 = icmp eq i32 %96, 0
  br i1 %166, label %93, label %167

167:                                              ; preds = %165
  %168 = add nsw i32 %96, -1
  %169 = load i64, i64* %69, align 8
  br label %94

170:                                              ; preds = %101, %170
  %171 = phi i64 [ %176, %170 ], [ %102, %101 ]
  %172 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = xor i8 %173, %99
  %175 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 %171
  store i8 %174, i8* %175, align 1
  %176 = add nuw i64 %171, 1
  %177 = icmp ult i64 %176, %95
  br i1 %177, label %170, label %165, !llvm.loop !36

178:                                              ; preds = %93, %185
  %179 = phi i64 [ %182, %185 ], [ 32, %93 ]
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %191, label %181

181:                                              ; preds = %178
  %182 = add nsw i64 %179, -1
  %183 = icmp ult i64 %182, 32
  br i1 %183, label %185, label %184, !prof !15

184:                                              ; preds = %181
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !16
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !17
  unreachable

185:                                              ; preds = %181
  %186 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 %182
  %187 = load i8, i8* %186, align 1
  %188 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %182
  %189 = load i8, i8* %188, align 1
  %190 = icmp eq i8 %187, %189
  br i1 %190, label %178, label %191

191:                                              ; preds = %178, %185
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* %0, i8* nonnull %75, i64 %179) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #9
  br label %192

192:                                              ; preds = %191, %28
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  ret void
}

declare void @_Z17CRYPT_MD5GenerateN6pdfium4spanIKhEEPh(%"class.pdfium::span"*, i8*) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20CPDF_SecurityHandler18GetEncodedPasswordEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* noalias sret, %class.CPDF_SecurityHandler* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %1, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %23 [
    i32 1, label %12
    i32 2, label %15
    i32 3, label %19
  ]

12:                                               ; preds = %3
  %13 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %14 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 16, i1 false)
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4) #9
  br label %26

15:                                               ; preds = %3
  %16 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %18 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %18, i64 16, i1 false)
  call void @_ZN5fxcrt10WideString10FromLatin1ENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* nonnull sret %5, %"class.fxcrt::StringViewTemplate"* nonnull %6) #9
  call void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* sret %0, %"class.fxcrt::WideString"* nonnull %5) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %26

19:                                               ; preds = %3
  %20 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %22 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %22, i64 16, i1 false)
  call void @_ZN5fxcrt10WideString8FromUTF8ENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* nonnull sret %7, %"class.fxcrt::StringViewTemplate"* nonnull %8) #9
  call void @_ZNK5fxcrt10WideString8ToLatin1Ev(%"class.fxcrt::ByteString"* sret %0, %"class.fxcrt::WideString"* nonnull %7) #9
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %26

23:                                               ; preds = %3
  %24 = bitcast %"class.fxcrt::StringViewTemplate"* %9 to i8*
  %25 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 16, i1 false)
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %0, %"class.fxcrt::StringViewTemplate"* nonnull %9) #9
  br label %26

26:                                               ; preds = %23, %19, %15, %12
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandler16OnCreateInternalEP15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringES8_b(%class.CPDF_SecurityHandler*, %class.CPDF_Dictionary*, %class.CPDF_Array*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca [4 x i32], align 16
  %11 = alloca %struct.CRYPT_sha2_context, align 8
  %12 = alloca [32 x i8], align 16
  %13 = alloca [16 x i8], align 16
  %14 = alloca %"class.pdfium::span", align 8
  %15 = alloca %"class.pdfium::span", align 8
  %16 = alloca [32 x i8], align 16
  %17 = alloca %"class.pdfium::span.46", align 8
  %18 = alloca %"class.pdfium::span", align 8
  %19 = alloca [32 x i8], align 16
  %20 = alloca %"class.pdfium::span.46", align 8
  %21 = alloca %"class.pdfium::span", align 8
  %22 = alloca %"class.fxcrt::ByteString", align 8
  %23 = alloca %"class.fxcrt::ByteString", align 8
  %24 = alloca i8, align 1
  %25 = alloca %"class.fxcrt::ByteString", align 8
  %26 = alloca %"class.fxcrt::ByteString", align 8
  %27 = alloca [32 x i8], align 16
  %28 = alloca %"class.pdfium::span.46", align 8
  %29 = alloca %"class.pdfium::span", align 8
  %30 = alloca %"class.fxcrt::ByteString", align 8
  %31 = alloca %"class.fxcrt::ByteString", align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.CRYPT_md5_context, align 4
  %34 = alloca %"class.pdfium::span", align 8
  %35 = alloca %"class.pdfium::span", align 8
  %36 = alloca [32 x i8], align 16
  %37 = alloca %"class.pdfium::span.46", align 8
  %38 = alloca %"class.pdfium::span", align 8
  %39 = alloca [32 x i8], align 16
  %40 = alloca %"class.pdfium::span.46", align 8
  %41 = alloca %"class.pdfium::span", align 8
  %42 = alloca %"class.pdfium::span", align 8
  %43 = alloca %"class.fxcrt::ByteString", align 8
  %44 = alloca %"class.fxcrt::ByteString", align 8
  %45 = alloca i8, align 1
  %46 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #9
  store i32 0, i32* %7, align 4
  %47 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  store i64 0, i64* %8, align 8
  %48 = call zeroext i1 @_ZN20CPDF_SecurityHandler8LoadDictEPK15CPDF_DictionaryPN18CPDF_CryptoHandler6CipherEPm(%class.CPDF_SecurityHandler* %0, %class.CPDF_Dictionary* %1, i32* nonnull %7, i64* nonnull %8)
  br i1 %48, label %49, label %366

49:                                               ; preds = %6
  %50 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %51, align 8
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %9, %"class.fxcrt::ByteString"* dereferenceable(8) %4) #9
  br i1 %5, label %52, label %62

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %53, align 8
  %55 = icmp eq %"class.fxcrt::StringDataTemplate"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %54, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %52, %56
  %61 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* nonnull %9, %"class.fxcrt::ByteString"* dereferenceable(8) %3) #9
  br label %62

62:                                               ; preds = %60, %56, %49
  %63 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = icmp sgt i32 %64, 4
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = bitcast [4 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #9
  %68 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 0
  %69 = bitcast [4 x i32]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %69, i8 -86, i64 16, i1 false)
  call void @_Z20FX_Random_GenerateMTPji(i32* nonnull %68, i32 4) #9
  %70 = bitcast %struct.CRYPT_sha2_context* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %70) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 200, i1 false)
  call void @_Z17CRYPT_SHA256StartP18CRYPT_sha2_context(%struct.CRYPT_sha2_context* nonnull %11) #9
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %11, i8* nonnull %67, i32 16) #9
  %71 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  call void @_Z18CRYPT_SHA256FinishP18CRYPT_sha2_contextPh(%struct.CRYPT_sha2_context* nonnull %11, i8* %71) #9
  call void @_ZN20CPDF_SecurityHandler18AES256_SetPasswordEP15CPDF_DictionaryRKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* dereferenceable(8) %3, i1 zeroext false)
  br i1 %5, label %72, label %73

72:                                               ; preds = %66
  call void @_ZN20CPDF_SecurityHandler18AES256_SetPasswordEP15CPDF_DictionaryRKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler* %0, %class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9, i1 zeroext true)
  br label %73

73:                                               ; preds = %72, %66
  call void @_ZN20CPDF_SecurityHandler15AES256_SetPermsEP15CPDF_Dictionary(%class.CPDF_SecurityHandler* %0, %class.CPDF_Dictionary* %1)
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %70) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #9
  br label %365

74:                                               ; preds = %62
  br i1 %5, label %75, label %230

75:                                               ; preds = %74
  %76 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %76, i8 -86, i64 32, i1 false)
  %77 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %51, align 8
  %78 = icmp eq %"class.fxcrt::StringDataTemplate"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 32
  %83 = select i1 %82, i64 %81, i64 32
  br label %84

84:                                               ; preds = %79, %75
  %85 = phi i64 [ 0, %75 ], [ %83, %79 ]
  %86 = sub nuw nsw i64 32, %85
  %87 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %77, i64 0, i32 3, i64 0
  %88 = select i1 %78, i8* null, i8* %87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %76, i8* align 1 %88, i64 %85, i1 false) #9
  %89 = icmp eq i64 %86, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %84
  %91 = icmp ult i64 %85, 32
  br i1 %91, label %93, label %92, !prof !15

92:                                               ; preds = %90
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !16
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !17
  unreachable

93:                                               ; preds = %90
  %94 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 %85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i64 %86, i1 false) #9
  br label %95

95:                                               ; preds = %84, %93
  %96 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #9
  %97 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %14, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %96, i8 -86, i64 16, i1 false)
  store i8* %76, i8** %97, align 8
  %98 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %14, i64 0, i32 1
  store i64 32, i64* %98, align 8
  call void @_Z17CRYPT_MD5GenerateN6pdfium4spanIKhEEPh(%"class.pdfium::span"* nonnull %14, i8* nonnull %96) #9
  %99 = load i32, i32* %63, align 8
  %100 = icmp sgt i32 %99, 2
  br i1 %100, label %101, label %108

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %15, i64 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %15, i64 0, i32 1
  br label %104

104:                                              ; preds = %104, %101
  %105 = phi i32 [ 0, %101 ], [ %106, %104 ]
  store i8* %96, i8** %102, align 8
  store i64 16, i64* %103, align 8
  call void @_Z17CRYPT_MD5GenerateN6pdfium4spanIKhEEPh(%"class.pdfium::span"* nonnull %15, i8* nonnull %96) #9
  %106 = add nuw nsw i32 %105, 1
  %107 = icmp eq i32 %106, 50
  br i1 %107, label %108, label %104

108:                                              ; preds = %104, %95
  %109 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #9
  %110 = load i64, i64* %8, align 8
  %111 = icmp ugt i64 %110, 31
  %112 = sub i64 32, %110
  %113 = select i1 %111, i64 0, i64 %112
  %114 = getelementptr [32 x i8], [32 x i8]* %16, i64 0, i64 %110
  call void @llvm.memset.p0i8.i64(i8* align 1 %114, i8 -86, i64 %113, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %109, i8* nonnull align 16 %96, i64 %110, i1 false)
  %115 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %115, align 8
  %117 = icmp eq %"class.fxcrt::StringDataTemplate"* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %116, i64 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = icmp ult i64 %120, 32
  %122 = select i1 %121, i64 %120, i64 32
  br label %123

123:                                              ; preds = %118, %108
  %124 = phi i64 [ 0, %108 ], [ %122, %118 ]
  %125 = sub nuw nsw i64 32, %124
  %126 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %116, i64 0, i32 3, i64 0
  %127 = select i1 %117, i8* null, i8* %126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %76, i8* align 1 %127, i64 %124, i1 false) #9
  %128 = icmp eq i64 %125, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %123
  %130 = icmp ult i64 %124, 32
  br i1 %130, label %132, label %131, !prof !15

131:                                              ; preds = %129
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !16
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !17
  unreachable

132:                                              ; preds = %129
  %133 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 %124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %133, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i64 %125, i1 false) #9
  br label %134

134:                                              ; preds = %123, %132
  %135 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %17, i64 0, i32 0, i32 0
  store i8* %76, i8** %135, align 8
  %136 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %17, i64 0, i32 1
  store i64 32, i64* %136, align 8
  %137 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %18, i64 0, i32 0, i32 0
  store i8* %109, i8** %137, align 8
  %138 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %18, i64 0, i32 1
  store i64 %110, i64* %138, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %17, %"class.pdfium::span"* nonnull %18) #9
  %139 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %139) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %139, i8 -86, i64 32, i1 false)
  %140 = load i32, i32* %63, align 8
  %141 = icmp sgt i32 %140, 2
  br i1 %141, label %142, label %226

142:                                              ; preds = %134
  %143 = icmp eq i64 %110, 0
  %144 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %20, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %20, i64 0, i32 1
  %146 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %21, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %21, i64 0, i32 1
  %148 = add i64 %110, -32
  %149 = lshr i64 %148, 5
  %150 = add nuw nsw i64 %149, 1
  %151 = icmp ult i64 %110, 32
  %152 = and i64 %110, -32
  %153 = and i64 %150, 1
  %154 = icmp eq i64 %149, 0
  %155 = sub nuw nsw i64 %150, %153
  %156 = icmp eq i64 %153, 0
  %157 = icmp eq i64 %110, %152
  br label %158

158:                                              ; preds = %215, %142
  %159 = phi i8 [ 1, %142 ], [ %216, %215 ]
  br i1 %143, label %215, label %160

160:                                              ; preds = %158
  br i1 %151, label %161, label %163

161:                                              ; preds = %214, %160
  %162 = phi i64 [ 0, %160 ], [ %152, %214 ]
  br label %218

163:                                              ; preds = %160
  %164 = insertelement <16 x i8> undef, i8 %159, i32 0
  %165 = shufflevector <16 x i8> %164, <16 x i8> undef, <16 x i32> zeroinitializer
  %166 = insertelement <16 x i8> undef, i8 %159, i32 0
  %167 = shufflevector <16 x i8> %166, <16 x i8> undef, <16 x i32> zeroinitializer
  br i1 %154, label %199, label %168

168:                                              ; preds = %163, %168
  %169 = phi i64 [ %196, %168 ], [ 0, %163 ]
  %170 = phi i64 [ %197, %168 ], [ %155, %163 ]
  %171 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 %169
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 16
  %174 = getelementptr inbounds i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 16
  %177 = xor <16 x i8> %173, %165
  %178 = xor <16 x i8> %176, %167
  %179 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 %169
  %180 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %180, align 16
  %181 = getelementptr inbounds i8, i8* %179, i64 16
  %182 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 16
  %183 = or i64 %169, 32
  %184 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 %183
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 16
  %187 = getelementptr inbounds i8, i8* %184, i64 16
  %188 = bitcast i8* %187 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 16
  %190 = xor <16 x i8> %186, %165
  %191 = xor <16 x i8> %189, %167
  %192 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 %183
  %193 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %193, align 16
  %194 = getelementptr inbounds i8, i8* %192, i64 16
  %195 = bitcast i8* %194 to <16 x i8>*
  store <16 x i8> %191, <16 x i8>* %195, align 16
  %196 = add i64 %169, 64
  %197 = add i64 %170, -2
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %168, !llvm.loop !37

199:                                              ; preds = %168, %163
  %200 = phi i64 [ 0, %163 ], [ %196, %168 ]
  br i1 %156, label %214, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 %200
  %203 = bitcast i8* %202 to <16 x i8>*
  %204 = load <16 x i8>, <16 x i8>* %203, align 16
  %205 = getelementptr inbounds i8, i8* %202, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  %207 = load <16 x i8>, <16 x i8>* %206, align 16
  %208 = xor <16 x i8> %204, %165
  %209 = xor <16 x i8> %207, %167
  %210 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 %200
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 16
  %212 = getelementptr inbounds i8, i8* %210, i64 16
  %213 = bitcast i8* %212 to <16 x i8>*
  store <16 x i8> %209, <16 x i8>* %213, align 16
  br label %214

214:                                              ; preds = %199, %201
  br i1 %157, label %215, label %161

215:                                              ; preds = %218, %214, %158
  store i8* %76, i8** %144, align 8
  store i64 32, i64* %145, align 8
  store i8* %139, i8** %146, align 8
  store i64 %110, i64* %147, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %20, %"class.pdfium::span"* nonnull %21) #9
  %216 = add nuw nsw i8 %159, 1
  %217 = icmp eq i8 %216, 20
  br i1 %217, label %226, label %158

218:                                              ; preds = %161, %218
  %219 = phi i64 [ %224, %218 ], [ %162, %161 ]
  %220 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = xor i8 %221, %159
  %223 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i64 0, i64 %219
  store i8 %222, i8* %223, align 1
  %224 = add nuw i64 %219, 1
  %225 = icmp eq i64 %224, %110
  br i1 %225, label %215, label %218, !llvm.loop !38

226:                                              ; preds = %215, %134
  %227 = bitcast %"class.fxcrt::ByteString"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)) #9
  %228 = bitcast %"class.fxcrt::ByteString"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #9
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %23, i8* nonnull %76, i64 32) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #9
  store i8 0, i8* %24, align 1
  %229 = call %class.CPDF_String* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %22, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %23, i8* nonnull dereferenceable(1) %24)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #9
  br label %230

230:                                              ; preds = %226, %74
  %231 = bitcast %"class.fxcrt::ByteString"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #9
  %232 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %232, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %25) #9
  %233 = icmp eq %class.CPDF_Array* %2, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %230
  %235 = bitcast %"class.fxcrt::ByteString"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #9
  call void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* nonnull sret %26, %class.CPDF_Array* nonnull %2, i64 0) #9
  %236 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* nonnull %25, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %26) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #9
  br label %237

237:                                              ; preds = %230, %234
  %238 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %239 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %238, align 8
  %240 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  %241 = load i64, i64* %8, align 8
  call fastcc void @_ZN12_GLOBAL__N_114CalcEncryptKeyEPK15CPDF_DictionaryRKN5fxcrt10ByteStringEPhmbS6_(%class.CPDF_Dictionary* %239, %"class.fxcrt::ByteString"* dereferenceable(8) %3, i8* %240, i64 %241, i1 zeroext false, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %25)
  %242 = load i32, i32* %63, align 8
  %243 = icmp slt i32 %242, 3
  br i1 %243, label %244, label %253

244:                                              ; preds = %237
  %245 = getelementptr inbounds [32 x i8], [32 x i8]* %27, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %245) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %245, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i64 32, i1 false)
  %246 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %28, i64 0, i32 0, i32 0
  store i8* %245, i8** %246, align 8
  %247 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %28, i64 0, i32 1
  store i64 32, i64* %247, align 8
  %248 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %29, i64 0, i32 0, i32 0
  store i8* %240, i8** %248, align 8
  %249 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %29, i64 0, i32 1
  store i64 %241, i64* %249, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %28, %"class.pdfium::span"* nonnull %29) #9
  %250 = bitcast %"class.fxcrt::ByteString"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #9
  %251 = bitcast %"class.fxcrt::ByteString"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #9
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %31, i8* nonnull %245, i64 32) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #9
  store i8 0, i8* %32, align 1
  %252 = call %class.CPDF_String* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %30, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %31, i8* nonnull dereferenceable(1) %32)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %245) #9
  br label %364

253:                                              ; preds = %237
  %254 = bitcast %struct.CRYPT_md5_context* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %254) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %254, i8 -86, i64 88, i1 false)
  call void @_Z14CRYPT_MD5Startv(%struct.CRYPT_md5_context* nonnull sret %33) #9
  %255 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %34, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN12_GLOBAL__N_116kDefaultPasscodeE, i64 0, i64 0), i8** %255, align 8
  %256 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %34, i64 0, i32 1
  store i64 32, i64* %256, align 8
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %33, %"class.pdfium::span"* nonnull %34) #9
  %257 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %232, align 8
  %258 = icmp eq %"class.fxcrt::StringDataTemplate"* %257, null
  br i1 %258, label %267, label %259

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %257, i64 0, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %267, label %263

263:                                              ; preds = %259
  %264 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %257, i64 0, i32 3, i64 0
  %265 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %35, i64 0, i32 0, i32 0
  store i8* %264, i8** %265, align 8, !alias.scope !39
  %266 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %35, i64 0, i32 1
  store i64 %261, i64* %266, align 8, !alias.scope !39
  call void @_Z15CRYPT_MD5UpdateP17CRYPT_md5_contextN6pdfium4spanIKhEE(%struct.CRYPT_md5_context* nonnull %33, %"class.pdfium::span"* nonnull %35) #9
  br label %267

267:                                              ; preds = %253, %263, %259
  %268 = getelementptr inbounds [32 x i8], [32 x i8]* %36, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %268) #9
  %269 = getelementptr inbounds [32 x i8], [32 x i8]* %36, i64 0, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %268, i8 -86, i64 32, i1 false)
  call void @_Z15CRYPT_MD5FinishP17CRYPT_md5_contextPh(%struct.CRYPT_md5_context* nonnull %33, i8* nonnull %268) #9
  %270 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %37, i64 0, i32 0, i32 0
  store i8* %268, i8** %270, align 8
  %271 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %37, i64 0, i32 1
  store i64 16, i64* %271, align 8
  %272 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %38, i64 0, i32 0, i32 0
  store i8* %240, i8** %272, align 8
  %273 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %38, i64 0, i32 1
  store i64 %241, i64* %273, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %37, %"class.pdfium::span"* nonnull %38) #9
  %274 = getelementptr inbounds [32 x i8], [32 x i8]* %39, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %274) #9
  %275 = icmp eq i64 %241, 0
  %276 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %40, i64 0, i32 0, i32 0
  %277 = getelementptr inbounds %"class.pdfium::span.46", %"class.pdfium::span.46"* %40, i64 0, i32 1
  %278 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %41, i64 0, i32 0, i32 0
  %279 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %41, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %274, i8 -86, i64 32, i1 false)
  %280 = add i64 %241, -32
  %281 = lshr i64 %280, 5
  %282 = add nuw nsw i64 %281, 1
  %283 = icmp ult i64 %241, 32
  %284 = and i64 %241, -32
  %285 = and i64 %282, 1
  %286 = icmp eq i64 %281, 0
  %287 = sub nuw nsw i64 %282, %285
  %288 = icmp eq i64 %285, 0
  %289 = icmp eq i64 %241, %284
  br label %290

290:                                              ; preds = %353, %267
  %291 = phi i8 [ 1, %267 ], [ %354, %353 ]
  br i1 %275, label %353, label %292

292:                                              ; preds = %290
  br i1 %283, label %293, label %295

293:                                              ; preds = %346, %292
  %294 = phi i64 [ 0, %292 ], [ %284, %346 ]
  br label %356

295:                                              ; preds = %292
  %296 = insertelement <16 x i8> undef, i8 %291, i32 0
  %297 = shufflevector <16 x i8> %296, <16 x i8> undef, <16 x i32> zeroinitializer
  %298 = insertelement <16 x i8> undef, i8 %291, i32 0
  %299 = shufflevector <16 x i8> %298, <16 x i8> undef, <16 x i32> zeroinitializer
  br i1 %286, label %331, label %300

300:                                              ; preds = %295, %300
  %301 = phi i64 [ %328, %300 ], [ 0, %295 ]
  %302 = phi i64 [ %329, %300 ], [ %287, %295 ]
  %303 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1
  %306 = getelementptr inbounds i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1
  %309 = xor <16 x i8> %305, %297
  %310 = xor <16 x i8> %308, %299
  %311 = getelementptr inbounds [32 x i8], [32 x i8]* %39, i64 0, i64 %301
  %312 = bitcast i8* %311 to <16 x i8>*
  store <16 x i8> %309, <16 x i8>* %312, align 16
  %313 = getelementptr inbounds i8, i8* %311, i64 16
  %314 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %310, <16 x i8>* %314, align 16
  %315 = or i64 %301, 32
  %316 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %315
  %317 = bitcast i8* %316 to <16 x i8>*
  %318 = load <16 x i8>, <16 x i8>* %317, align 1
  %319 = getelementptr inbounds i8, i8* %316, i64 16
  %320 = bitcast i8* %319 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1
  %322 = xor <16 x i8> %318, %297
  %323 = xor <16 x i8> %321, %299
  %324 = getelementptr inbounds [32 x i8], [32 x i8]* %39, i64 0, i64 %315
  %325 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %322, <16 x i8>* %325, align 16
  %326 = getelementptr inbounds i8, i8* %324, i64 16
  %327 = bitcast i8* %326 to <16 x i8>*
  store <16 x i8> %323, <16 x i8>* %327, align 16
  %328 = add i64 %301, 64
  %329 = add i64 %302, -2
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %300, !llvm.loop !44

331:                                              ; preds = %300, %295
  %332 = phi i64 [ 0, %295 ], [ %328, %300 ]
  br i1 %288, label %346, label %333

333:                                              ; preds = %331
  %334 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %332
  %335 = bitcast i8* %334 to <16 x i8>*
  %336 = load <16 x i8>, <16 x i8>* %335, align 1
  %337 = getelementptr inbounds i8, i8* %334, i64 16
  %338 = bitcast i8* %337 to <16 x i8>*
  %339 = load <16 x i8>, <16 x i8>* %338, align 1
  %340 = xor <16 x i8> %336, %297
  %341 = xor <16 x i8> %339, %299
  %342 = getelementptr inbounds [32 x i8], [32 x i8]* %39, i64 0, i64 %332
  %343 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %340, <16 x i8>* %343, align 16
  %344 = getelementptr inbounds i8, i8* %342, i64 16
  %345 = bitcast i8* %344 to <16 x i8>*
  store <16 x i8> %341, <16 x i8>* %345, align 16
  br label %346

346:                                              ; preds = %331, %333
  br i1 %289, label %353, label %293

347:                                              ; preds = %353
  %348 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %42, i64 0, i32 0, i32 0
  store i8* %268, i8** %348, align 8
  %349 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %42, i64 0, i32 1
  store i64 16, i64* %349, align 8
  call void @_Z17CRYPT_MD5GenerateN6pdfium4spanIKhEEPh(%"class.pdfium::span"* nonnull %42, i8* %269) #9
  %350 = bitcast %"class.fxcrt::ByteString"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #9
  %351 = bitcast %"class.fxcrt::ByteString"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %351) #9
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %44, i8* nonnull %268, i64 32) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %45) #9
  store i8 0, i8* %45, align 1
  %352 = call %class.CPDF_String* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %43, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %44, i8* nonnull dereferenceable(1) %45)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %45) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %351) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %43) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %274) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %268) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %254) #9
  br label %364

353:                                              ; preds = %356, %346, %290
  store i8* %268, i8** %276, align 8
  store i64 16, i64* %277, align 8
  store i8* %274, i8** %278, align 8
  store i64 %241, i64* %279, align 8
  call void @_Z23CRYPT_ArcFourCryptBlockN6pdfium4spanIhEENS0_IKhEE(%"class.pdfium::span.46"* nonnull %40, %"class.pdfium::span"* nonnull %41) #9
  %354 = add nuw nsw i8 %291, 1
  %355 = icmp eq i8 %354, 20
  br i1 %355, label %347, label %290

356:                                              ; preds = %293, %356
  %357 = phi i64 [ %362, %356 ], [ %294, %293 ]
  %358 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 %357
  %359 = load i8, i8* %358, align 1
  %360 = xor i8 %359, %291
  %361 = getelementptr inbounds [32 x i8], [32 x i8]* %39, i64 0, i64 %357
  store i8 %360, i8* %361, align 1
  %362 = add nuw i64 %357, 1
  %363 = icmp eq i64 %362, %241
  br i1 %363, label %353, label %356, !llvm.loop !45

364:                                              ; preds = %347, %244
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #9
  br label %365

365:                                              ; preds = %364, %73
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  br label %366

366:                                              ; preds = %6, %365
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #9
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_Z20FX_Random_GenerateMTPji(i32*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandler18AES256_SetPasswordEP15CPDF_DictionaryRKN5fxcrt10ByteStringEb(%class.CPDF_SecurityHandler*, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.CRYPT_sha1_context, align 8
  %6 = alloca [20 x i8], align 16
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %struct.CRYPT_sha2_context, align 8
  %10 = alloca [48 x i8], align 16
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca i8, align 1
  %14 = alloca %struct.CRYPT_aes_context, align 4
  %15 = alloca [16 x i8], align 16
  %16 = alloca %"class.fxcrt::ByteString", align 8
  %17 = alloca %"class.fxcrt::ByteString", align 8
  %18 = alloca i8, align 1
  %19 = bitcast %struct.CRYPT_sha1_context* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 96, i1 false)
  call void @_Z15CRYPT_SHA1StartP18CRYPT_sha1_context(%struct.CRYPT_sha1_context* nonnull %5) #9
  %20 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  call void @_Z16CRYPT_SHA1UpdateP18CRYPT_sha1_contextPKhj(%struct.CRYPT_sha1_context* nonnull %5, i8* %20, i32 32) #9
  call void @_Z16CRYPT_SHA1UpdateP18CRYPT_sha1_contextPKhj(%struct.CRYPT_sha1_context* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i32 5) #9
  %21 = getelementptr inbounds [20 x i8], [20 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #9
  %22 = getelementptr inbounds [20 x i8], [20 x i8]* %6, i64 0, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 20, i1 false)
  call void @_Z16CRYPT_SHA1FinishP18CRYPT_sha1_contextPh(%struct.CRYPT_sha1_context* nonnull %5, i8* nonnull %21) #9
  %23 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %24, align 8
  %25 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #9
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  %26 = bitcast %struct.CRYPT_sha2_context* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 200, i1 false)
  %27 = getelementptr inbounds [48 x i8], [48 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 48, i1 false)
  %28 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 5
  br i1 %30, label %31, label %39

31:                                               ; preds = %4
  br i1 %3, label %32, label %37

32:                                               ; preds = %31
  %33 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8
  %34 = icmp eq %"class.fxcrt::StringDataTemplate"* %33, null
  %35 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %33, i64 0, i32 3, i64 0
  %36 = select i1 %34, i8* null, i8* %35
  br label %37

37:                                               ; preds = %31, %32
  %38 = phi i8* [ %36, %32 ], [ null, %31 ]
  call fastcc void @_ZN12_GLOBAL__N_114Revision6_HashERKN5fxcrt10ByteStringEPKhS5_Ph(%"class.fxcrt::ByteString"* dereferenceable(8) %2, i8* nonnull %21, i8* %38, i8* nonnull %27)
  br label %63

39:                                               ; preds = %4
  call void @_Z17CRYPT_SHA256StartP18CRYPT_sha2_context(%struct.CRYPT_sha2_context* nonnull %9) #9
  %40 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %40, align 8
  %42 = icmp eq %"class.fxcrt::StringDataTemplate"* %41, null
  %43 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %41, i64 0, i32 3, i64 0
  %44 = select i1 %42, i8* null, i8* %43
  br i1 %42, label %49, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %41, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  br label %49

49:                                               ; preds = %39, %45
  %50 = phi i32 [ %48, %45 ], [ 0, %39 ]
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %44, i32 %50) #9
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* nonnull %21, i32 8) #9
  br i1 %3, label %51, label %62

51:                                               ; preds = %49
  %52 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8
  %53 = icmp eq %"class.fxcrt::StringDataTemplate"* %52, null
  %54 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %52, i64 0, i32 3, i64 0
  %55 = select i1 %53, i8* null, i8* %54
  br i1 %53, label %60, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %52, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  br label %60

60:                                               ; preds = %51, %56
  %61 = phi i32 [ %59, %56 ], [ 0, %51 ]
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %55, i32 %61) #9
  br label %62

62:                                               ; preds = %60, %49
  call void @_Z18CRYPT_SHA256FinishP18CRYPT_sha2_contextPh(%struct.CRYPT_sha2_context* nonnull %9, i8* nonnull %27) #9
  br label %63

63:                                               ; preds = %62, %37
  %64 = getelementptr inbounds [48 x i8], [48 x i8]* %10, i64 0, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %64, i8* nonnull align 16 %21, i64 16, i1 false)
  %65 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #9
  %66 = select i1 %3, [2 x i8]* @.str.7, [2 x i8]* @.str.8
  %67 = getelementptr inbounds [2 x i8], [2 x i8]* %66, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* nonnull %67) #9
  %68 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %12, i8* nonnull %27, i64 48) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #9
  store i8 0, i8* %13, align 1
  %69 = call %class.CPDF_String* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12, i8* nonnull dereferenceable(1) %13)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9
  %70 = load i32, i32* %28, align 8
  %71 = icmp sgt i32 %70, 5
  br i1 %71, label %72, label %80

72:                                               ; preds = %63
  br i1 %3, label %73, label %78

73:                                               ; preds = %72
  %74 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8
  %75 = icmp eq %"class.fxcrt::StringDataTemplate"* %74, null
  %76 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %74, i64 0, i32 3, i64 0
  %77 = select i1 %75, i8* null, i8* %76
  br label %78

78:                                               ; preds = %72, %73
  %79 = phi i8* [ %77, %73 ], [ null, %72 ]
  call fastcc void @_ZN12_GLOBAL__N_114Revision6_HashERKN5fxcrt10ByteStringEPKhS5_Ph(%"class.fxcrt::ByteString"* dereferenceable(8) %2, i8* %22, i8* %79, i8* nonnull %27)
  br label %104

80:                                               ; preds = %63
  call void @_Z17CRYPT_SHA256StartP18CRYPT_sha2_context(%struct.CRYPT_sha2_context* nonnull %9) #9
  %81 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %81, align 8
  %83 = icmp eq %"class.fxcrt::StringDataTemplate"* %82, null
  %84 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %82, i64 0, i32 3, i64 0
  %85 = select i1 %83, i8* null, i8* %84
  br i1 %83, label %90, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %82, i64 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i32
  br label %90

90:                                               ; preds = %80, %86
  %91 = phi i32 [ %89, %86 ], [ 0, %80 ]
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %85, i32 %91) #9
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %22, i32 8) #9
  br i1 %3, label %92, label %103

92:                                               ; preds = %90
  %93 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8
  %94 = icmp eq %"class.fxcrt::StringDataTemplate"* %93, null
  %95 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %93, i64 0, i32 3, i64 0
  %96 = select i1 %94, i8* null, i8* %95
  br i1 %94, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %93, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  br label %101

101:                                              ; preds = %92, %97
  %102 = phi i32 [ %100, %97 ], [ 0, %92 ]
  call void @_Z18CRYPT_SHA256UpdateP18CRYPT_sha2_contextPKhj(%struct.CRYPT_sha2_context* nonnull %9, i8* %96, i32 %102) #9
  br label %103

103:                                              ; preds = %101, %90
  call void @_Z18CRYPT_SHA256FinishP18CRYPT_sha2_contextPh(%struct.CRYPT_sha2_context* nonnull %9, i8* nonnull %27) #9
  br label %104

104:                                              ; preds = %103, %78
  %105 = bitcast %struct.CRYPT_aes_context* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1000, i8* nonnull %105) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %105, i8 0, i64 1000, i1 false)
  call void @_Z15CRYPT_AESSetKeyP17CRYPT_aes_contextPKhj(%struct.CRYPT_aes_context* nonnull %14, i8* nonnull %27, i32 32) #9
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %106, i8 0, i64 16, i1 false)
  call void @_Z14CRYPT_AESSetIVP17CRYPT_aes_contextPKh(%struct.CRYPT_aes_context* nonnull %14, i8* nonnull %106) #9
  call void @_Z16CRYPT_AESEncryptP17CRYPT_aes_contextPhPKhj(%struct.CRYPT_aes_context* nonnull %14, i8* nonnull %27, i8* %20, i32 32) #9
  %107 = bitcast %"class.fxcrt::ByteString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #9
  %108 = select i1 %3, [3 x i8]* @.str.9, [3 x i8]* @.str.10
  %109 = getelementptr inbounds [3 x i8], [3 x i8]* %108, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %16, i8* nonnull %109) #9
  %110 = bitcast %"class.fxcrt::ByteString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #9
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %17, i8* nonnull %27, i64 32) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #9
  store i8 0, i8* %18, align 1
  %111 = call %class.CPDF_String* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %16, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %17, i8* nonnull dereferenceable(1) %18)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #9
  call void @llvm.lifetime.end.p0i8(i64 1000, i8* nonnull %105) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %26) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %19) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandler15AES256_SetPermsEP15CPDF_Dictionary(%class.CPDF_SecurityHandler*, %class.CPDF_Dictionary*) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i8], align 16
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %struct.CRYPT_aes_context, align 4
  %6 = alloca [16 x i8], align 16
  %7 = alloca [16 x i8], align 16
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca i8, align 1
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 1
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 2
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 3
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 4
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 8
  %17 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 9
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 10
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 11
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 12
  %21 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 16, i1 false)
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i8
  store i8 %23, i8* %11, align 16
  %24 = lshr i32 %22, 8
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %12, align 1
  %26 = lshr i32 %22, 16
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %13, align 2
  %28 = lshr i32 %22, 24
  %29 = trunc i32 %28 to i8
  store i8 %29, i8* %14, align 1
  %30 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  %31 = bitcast i8* %15 to i32*
  store i32 -1, i32* %31, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)) #9
  %32 = call zeroext i1 @_ZNK15CPDF_Dictionary13GetBooleanForERKN5fxcrt10ByteStringEb(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i1 zeroext true) #9
  %33 = select i1 %32, i8 84, i8 70
  store i8 %33, i8* %16, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  store i8 97, i8* %17, align 1
  store i8 100, i8* %18, align 2
  store i8 98, i8* %19, align 1
  %34 = bitcast i8* %20 to i32*
  call void @_Z20FX_Random_GenerateMTPji(i32* %34, i32 1) #9
  %35 = bitcast %struct.CRYPT_aes_context* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1000, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 1000, i1 false)
  %36 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  call void @_Z15CRYPT_AESSetKeyP17CRYPT_aes_contextPKhj(%struct.CRYPT_aes_context* nonnull %5, i8* %36, i32 32) #9
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false)
  call void @_Z14CRYPT_AESSetIVP17CRYPT_aes_contextPKh(%struct.CRYPT_aes_context* nonnull %5, i8* nonnull %37) #9
  %38 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -86, i64 16, i1 false)
  call void @_Z16CRYPT_AESEncryptP17CRYPT_aes_contextPhPKhj(%struct.CRYPT_aes_context* nonnull %5, i8* nonnull %38, i8* nonnull %11, i32 16) #9
  %39 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #9
  %40 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %9, i8* nonnull %38, i64 16) #9
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #9
  store i8 0, i8* %10, align 1
  %41 = call %class.CPDF_String* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9, i8* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 1000, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_String* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_StringJN5fxcrt10ByteStringEbEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS6_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::ByteString"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.fxcrt::WeakPtr", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.27", align 8
  %7 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !15

10:                                               ; preds = %4
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !46
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !47
  unreachable

11:                                               ; preds = %4
  %12 = bitcast %"class.fxcrt::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = tail call i8* @_Znwm(i64 40) #10, !noalias !48
  %14 = bitcast i8* %13 to %class.CPDF_String*
  %15 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %15, align 8, !noalias !48
  %17 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %16 to i64
  %18 = bitcast %"class.fxcrt::WeakPtr"* %5 to i64*
  store i64 %17, i64* %18, align 8, !noalias !48
  %19 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %16, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %16, i64 0, i32 0
  %22 = load i64, i64* %21, align 8, !noalias !48
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8, !noalias !48
  br label %24

24:                                               ; preds = %11, %20
  %25 = load i8, i8* %3, align 1, !range !5, !noalias !48
  %26 = icmp ne i8 %25, 0
  call void @_ZN11CPDF_StringC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_b(%class.CPDF_String* nonnull %14, %"class.fxcrt::WeakPtr"* nonnull %5, %"class.fxcrt::ByteString"* dereferenceable(8) %2, i1 zeroext %26) #9, !noalias !48
  %27 = ptrtoint i8* %13 to i64
  %28 = getelementptr inbounds i8, i8* %13, i64 8
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !48
  %31 = add nsw i64 %30, 1
  store i64 %31, i64* %29, align 8, !noalias !48
  %32 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %32, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %32, align 8
  %34 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %33, null
  br i1 %34, label %66, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %33, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %66

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %41, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %41, align 8
  %43 = icmp eq %"class.fxcrt::StringPoolTemplate"* %42, null
  br i1 %43, label %64, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %44, %48
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %51, %48 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %53) #9
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i8*
  call void @_ZdlPv(i8* %54) #10
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %51, null
  br i1 %55, label %56, label %48

56:                                               ; preds = %48, %44
  %57 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %57, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"** %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"struct.std::__1::__hash_node_base"** %58 to i8*
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %60, %56
  %63 = bitcast %"class.fxcrt::StringPoolTemplate"* %42 to i8*
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %62, %40
  %65 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %33 to i8*
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %24, %35, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  %67 = bitcast %"class.fxcrt::RetainPtr.27"* %6 to i64*
  store i64 %27, i64* %67, align 8
  %68 = load i64, i64* %29, align 8
  %69 = add nsw i64 %68, 1
  store i64 %69, i64* %29, align 8
  %70 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.27"* nonnull %6) #9
  %71 = bitcast %class.CPDF_Object* %70 to %class.CPDF_String*
  %72 = getelementptr inbounds %"class.fxcrt::RetainPtr.27", %"class.fxcrt::RetainPtr.27"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %class.CPDF_Object*, %class.CPDF_Object** %72, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %72, align 8
  %74 = icmp eq %class.CPDF_Object* %73, null
  br i1 %74, label %86, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %73, i64 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = add nsw i64 %77, -1
  store i64 %78, i64* %76, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %73, i64 0, i32 0
  %82 = bitcast %class.CPDF_Object* %73 to void (%"class.fxcrt::Retainable"*)***
  %83 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %83, i64 1
  %85 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %84, align 8
  call void %85(%"class.fxcrt::Retainable"* nonnull %81) #9
  br label %86

86:                                               ; preds = %80, %75, %66
  %87 = load i64, i64* %29, align 8
  %88 = add nsw i64 %87, -1
  store i64 %88, i64* %29, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast i8* %13 to %"class.fxcrt::Retainable"*
  %92 = bitcast i8* %13 to void (%"class.fxcrt::Retainable"*)***
  %93 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %93, i64 1
  %95 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %94, align 8
  call void %95(%"class.fxcrt::Retainable"* nonnull %91) #9
  br label %96

96:                                               ; preds = %86, %90
  ret %class.CPDF_String* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandler8OnCreateEP15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringES8_(%class.CPDF_SecurityHandler*, %class.CPDF_Dictionary*, %class.CPDF_Array*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN20CPDF_SecurityHandler16OnCreateInternalEP15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringES8_b(%class.CPDF_SecurityHandler* %0, %class.CPDF_Dictionary* %1, %class.CPDF_Array* %2, %"class.fxcrt::ByteString"* dereferenceable(8) %3, %"class.fxcrt::ByteString"* dereferenceable(8) %4, i1 zeroext true)
  %6 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 6
  %7 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  %8 = tail call i8* @_Znwm(i64 56) #10
  %9 = bitcast i8* %8 to %class.CPDF_CryptoHandler*
  %10 = load i32, i32* %6, align 4
  %11 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  %12 = load i64, i64* %7, align 8
  tail call void @_ZN18CPDF_CryptoHandlerC1ENS_6CipherEPKhm(%class.CPDF_CryptoHandler* nonnull %9, i32 %10, i8* %11, i64 %12) #9
  %13 = ptrtoint i8* %8 to i64
  %14 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.19"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %class.CPDF_CryptoHandler* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %5
  tail call void @_ZN18CPDF_CryptoHandlerD1Ev(%class.CPDF_CryptoHandler* nonnull %16) #9
  %20 = bitcast %class.CPDF_CryptoHandler* %16 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %5, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_SecurityHandler8OnCreateEP15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringE(%class.CPDF_SecurityHandler*, %class.CPDF_Dictionary*, %class.CPDF_Array*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @_ZN20CPDF_SecurityHandler16OnCreateInternalEP15CPDF_DictionaryPK10CPDF_ArrayRKN5fxcrt10ByteStringES8_b(%class.CPDF_SecurityHandler* %0, %class.CPDF_Dictionary* %1, %class.CPDF_Array* %2, %"class.fxcrt::ByteString"* dereferenceable(8) %3, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5, i1 zeroext false)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 6
  %8 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 5
  %9 = call i8* @_Znwm(i64 56) #10
  %10 = bitcast i8* %9 to %class.CPDF_CryptoHandler*
  %11 = load i32, i32* %7, align 4
  %12 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 11, i64 0
  %13 = load i64, i64* %8, align 8
  call void @_ZN18CPDF_CryptoHandlerC1ENS_6CipherEPKhm(%class.CPDF_CryptoHandler* nonnull %10, i32 %11, i8* %12, i64 %13) #9
  %14 = ptrtoint i8* %9 to i64
  %15 = getelementptr inbounds %class.CPDF_SecurityHandler, %class.CPDF_SecurityHandler* %0, i64 0, i32 10
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.CPDF_CryptoHandler*, %class.CPDF_CryptoHandler** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.19"* %15 to i64*
  store i64 %14, i64* %18, align 8
  %19 = icmp eq %class.CPDF_CryptoHandler* %17, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %4
  call void @_ZN18CPDF_CryptoHandlerD1Ev(%class.CPDF_CryptoHandler* nonnull %17) #9
  %21 = bitcast %class.CPDF_CryptoHandler* %17 to i8*
  call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %4, %20
  ret void
}

declare void @_Z15CRYPT_SHA1StartP18CRYPT_sha1_context(%struct.CRYPT_sha1_context*) local_unnamed_addr #1

declare void @_Z16CRYPT_SHA1UpdateP18CRYPT_sha1_contextPKhj(%struct.CRYPT_sha1_context*, i8*, i32) local_unnamed_addr #1

declare void @_Z16CRYPT_SHA1FinishP18CRYPT_sha1_contextPh(%struct.CRYPT_sha1_context*, i8*) local_unnamed_addr #1

declare void @_Z16CRYPT_AESEncryptP17CRYPT_aes_contextPhPKhj(%struct.CRYPT_aes_context*, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN5fxcrt18StringDataTemplateIcE7ReleaseEv(%"class.fxcrt::StringDataTemplate"*) local_unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZNK15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.72"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %623

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !51
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !51
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !54, !noalias !51
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !54, !noalias !51
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !51
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !51
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !54, !noalias !51
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !54, !noalias !51
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !51
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !51
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !54, !noalias !51
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !54, !noalias !51
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !51
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !51
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !54, !noalias !51
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !54, !noalias !51
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !56

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !51
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !51
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !54, !noalias !51
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !54, !noalias !51
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !57

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !59

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %623

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !60
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !60
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !63, !noalias !60
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !63, !noalias !60
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !60
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !60
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !63, !noalias !60
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !63, !noalias !60
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !60
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !60
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !63, !noalias !60
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !63, !noalias !60
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !60
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !60
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !63, !noalias !60
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !63, !noalias !60
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !65

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !60
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !60
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !63, !noalias !60
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !63, !noalias !60
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !66

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #9
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !67

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %623, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #9
  br label %623

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp slt i64 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #12
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 4611686018427387903
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %291, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 9223372036854775807, %279 ], [ %284, %281 ]
  %290 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %289, i64 1) #9
  br label %291

291:                                              ; preds = %281, %287
  %292 = phi i64 [ %288, %287 ], [ %285, %281 ]
  %293 = phi i64 [ %289, %287 ], [ 0, %281 ]
  %294 = phi i8* [ %290, %287 ], [ null, %281 ]
  %295 = getelementptr inbounds i8, i8* %294, i64 %292
  %296 = getelementptr inbounds i8, i8* %294, i64 %293
  %297 = getelementptr inbounds i8, i8* %295, i64 %9
  %298 = icmp ult i64 %9, 32
  br i1 %298, label %384, label %299

299:                                              ; preds = %291
  %300 = icmp ult i8* %295, %3
  %301 = icmp ugt i8* %297, %2
  %302 = and i1 %300, %301
  br i1 %302, label %384, label %303

303:                                              ; preds = %299
  %304 = and i64 %9, -32
  %305 = getelementptr i8, i8* %295, i64 %304
  %306 = getelementptr i8, i8* %2, i64 %304
  %307 = add i64 %304, -32
  %308 = lshr exact i64 %307, 5
  %309 = add nuw nsw i64 %308, 1
  %310 = and i64 %309, 3
  %311 = icmp ult i64 %307, 96
  br i1 %311, label %363, label %312

312:                                              ; preds = %303
  %313 = sub nsw i64 %309, %310
  br label %314

314:                                              ; preds = %314, %312
  %315 = phi i64 [ 0, %312 ], [ %360, %314 ]
  %316 = phi i64 [ %313, %312 ], [ %361, %314 ]
  %317 = getelementptr i8, i8* %295, i64 %315
  %318 = getelementptr i8, i8* %2, i64 %315
  %319 = bitcast i8* %318 to <16 x i8>*
  %320 = load <16 x i8>, <16 x i8>* %319, align 1, !alias.scope !68
  %321 = getelementptr i8, i8* %318, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  %323 = load <16 x i8>, <16 x i8>* %322, align 1, !alias.scope !68
  %324 = bitcast i8* %317 to <16 x i8>*
  store <16 x i8> %320, <16 x i8>* %324, align 1, !alias.scope !71, !noalias !68
  %325 = getelementptr i8, i8* %317, i64 16
  %326 = bitcast i8* %325 to <16 x i8>*
  store <16 x i8> %323, <16 x i8>* %326, align 1, !alias.scope !71, !noalias !68
  %327 = or i64 %315, 32
  %328 = getelementptr i8, i8* %295, i64 %327
  %329 = getelementptr i8, i8* %2, i64 %327
  %330 = bitcast i8* %329 to <16 x i8>*
  %331 = load <16 x i8>, <16 x i8>* %330, align 1, !alias.scope !68
  %332 = getelementptr i8, i8* %329, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !68
  %335 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %331, <16 x i8>* %335, align 1, !alias.scope !71, !noalias !68
  %336 = getelementptr i8, i8* %328, i64 16
  %337 = bitcast i8* %336 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %337, align 1, !alias.scope !71, !noalias !68
  %338 = or i64 %315, 64
  %339 = getelementptr i8, i8* %295, i64 %338
  %340 = getelementptr i8, i8* %2, i64 %338
  %341 = bitcast i8* %340 to <16 x i8>*
  %342 = load <16 x i8>, <16 x i8>* %341, align 1, !alias.scope !68
  %343 = getelementptr i8, i8* %340, i64 16
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !68
  %346 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %342, <16 x i8>* %346, align 1, !alias.scope !71, !noalias !68
  %347 = getelementptr i8, i8* %339, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %348, align 1, !alias.scope !71, !noalias !68
  %349 = or i64 %315, 96
  %350 = getelementptr i8, i8* %295, i64 %349
  %351 = getelementptr i8, i8* %2, i64 %349
  %352 = bitcast i8* %351 to <16 x i8>*
  %353 = load <16 x i8>, <16 x i8>* %352, align 1, !alias.scope !68
  %354 = getelementptr i8, i8* %351, i64 16
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !68
  %357 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %353, <16 x i8>* %357, align 1, !alias.scope !71, !noalias !68
  %358 = getelementptr i8, i8* %350, i64 16
  %359 = bitcast i8* %358 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %359, align 1, !alias.scope !71, !noalias !68
  %360 = add i64 %315, 128
  %361 = add i64 %316, -4
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %314, !llvm.loop !73

363:                                              ; preds = %314, %303
  %364 = phi i64 [ 0, %303 ], [ %360, %314 ]
  %365 = icmp eq i64 %310, 0
  br i1 %365, label %382, label %366

366:                                              ; preds = %363, %366
  %367 = phi i64 [ %379, %366 ], [ %364, %363 ]
  %368 = phi i64 [ %380, %366 ], [ %310, %363 ]
  %369 = getelementptr i8, i8* %295, i64 %367
  %370 = getelementptr i8, i8* %2, i64 %367
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1, !alias.scope !68
  %373 = getelementptr i8, i8* %370, i64 16
  %374 = bitcast i8* %373 to <16 x i8>*
  %375 = load <16 x i8>, <16 x i8>* %374, align 1, !alias.scope !68
  %376 = bitcast i8* %369 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %376, align 1, !alias.scope !71, !noalias !68
  %377 = getelementptr i8, i8* %369, i64 16
  %378 = bitcast i8* %377 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %378, align 1, !alias.scope !71, !noalias !68
  %379 = add i64 %367, 32
  %380 = add i64 %368, -1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %366, !llvm.loop !74

382:                                              ; preds = %366, %363
  %383 = icmp eq i64 %9, %304
  br i1 %383, label %394, label %384

384:                                              ; preds = %382, %299, %291
  %385 = phi i8* [ %295, %299 ], [ %295, %291 ], [ %305, %382 ]
  %386 = phi i8* [ %2, %299 ], [ %2, %291 ], [ %306, %382 ]
  br label %387

387:                                              ; preds = %384, %387
  %388 = phi i8* [ %391, %387 ], [ %385, %384 ]
  %389 = phi i8* [ %392, %387 ], [ %386, %384 ]
  %390 = load i8, i8* %389, align 1
  store i8 %390, i8* %388, align 1
  %391 = getelementptr inbounds i8, i8* %388, i64 1
  %392 = getelementptr inbounds i8, i8* %389, i64 1
  %393 = icmp eq i8* %297, %391
  br i1 %393, label %394, label %387, !llvm.loop !75

394:                                              ; preds = %387, %382
  %395 = ptrtoint i8* %296 to i64
  %396 = load i8*, i8** %7, align 8
  %397 = icmp eq i8* %396, %1
  br i1 %397, label %507, label %398

398:                                              ; preds = %394
  %399 = ptrtoint i8* %396 to i64
  %400 = ptrtoint i8* %1 to i64
  %401 = sub i64 %400, %399
  %402 = icmp ult i64 %401, 16
  br i1 %402, label %497, label %403

403:                                              ; preds = %398
  %404 = sub i64 %292, %5
  %405 = getelementptr i8, i8* %396, i64 %404
  %406 = ptrtoint i8* %405 to i64
  %407 = getelementptr i8, i8* %294, i64 %406
  %408 = icmp ult i8* %407, %1
  %409 = icmp ult i8* %396, %295
  %410 = and i1 %408, %409
  br i1 %410, label %497, label %411

411:                                              ; preds = %403
  %412 = and i64 %401, -16
  %413 = sub i64 0, %412
  %414 = getelementptr i8, i8* %295, i64 %413
  %415 = sub i64 0, %412
  %416 = getelementptr i8, i8* %1, i64 %415
  %417 = add i64 %412, -16
  %418 = lshr exact i64 %417, 4
  %419 = add nuw nsw i64 %418, 1
  %420 = and i64 %419, 3
  %421 = icmp ult i64 %417, 48
  br i1 %421, label %474, label %422

422:                                              ; preds = %411
  %423 = sub nsw i64 %419, %420
  %424 = getelementptr i8, i8* %295, i64 -1
  %425 = getelementptr inbounds i8, i8* %424, i64 -8
  %426 = getelementptr inbounds i8, i8* %1, i64 -16
  %427 = getelementptr inbounds i8, i8* %425, i64 -7
  %428 = getelementptr i8, i8* %295, i64 -1
  %429 = getelementptr inbounds i8, i8* %428, i64 -8
  %430 = getelementptr inbounds i8, i8* %1, i64 -16
  %431 = getelementptr inbounds i8, i8* %429, i64 -7
  %432 = getelementptr i8, i8* %295, i64 -1
  %433 = getelementptr inbounds i8, i8* %432, i64 -8
  %434 = getelementptr inbounds i8, i8* %1, i64 -16
  %435 = getelementptr inbounds i8, i8* %433, i64 -7
  %436 = getelementptr i8, i8* %295, i64 -1
  %437 = getelementptr inbounds i8, i8* %436, i64 -8
  %438 = getelementptr inbounds i8, i8* %1, i64 -16
  %439 = getelementptr inbounds i8, i8* %437, i64 -7
  br label %440

440:                                              ; preds = %440, %422
  %441 = phi i64 [ 0, %422 ], [ %471, %440 ]
  %442 = phi i64 [ %423, %422 ], [ %472, %440 ]
  %443 = sub i64 0, %441
  %444 = sub i64 0, %441
  %445 = getelementptr inbounds i8, i8* %426, i64 %444
  %446 = bitcast i8* %445 to <2 x i64>*
  %447 = load <2 x i64>, <2 x i64>* %446, align 1, !alias.scope !76
  %448 = getelementptr inbounds i8, i8* %427, i64 %443
  %449 = bitcast i8* %448 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %449, align 1, !alias.scope !79, !noalias !76
  %450 = sub nuw nsw i64 -16, %441
  %451 = sub nuw nsw i64 -16, %441
  %452 = getelementptr inbounds i8, i8* %430, i64 %451
  %453 = bitcast i8* %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 1, !alias.scope !76
  %455 = getelementptr inbounds i8, i8* %431, i64 %450
  %456 = bitcast i8* %455 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %456, align 1, !alias.scope !79, !noalias !76
  %457 = sub nuw nsw i64 -32, %441
  %458 = sub nuw nsw i64 -32, %441
  %459 = getelementptr inbounds i8, i8* %434, i64 %458
  %460 = bitcast i8* %459 to <2 x i64>*
  %461 = load <2 x i64>, <2 x i64>* %460, align 1, !alias.scope !76
  %462 = getelementptr inbounds i8, i8* %435, i64 %457
  %463 = bitcast i8* %462 to <2 x i64>*
  store <2 x i64> %461, <2 x i64>* %463, align 1, !alias.scope !79, !noalias !76
  %464 = sub nuw nsw i64 -48, %441
  %465 = sub nuw nsw i64 -48, %441
  %466 = getelementptr inbounds i8, i8* %438, i64 %465
  %467 = bitcast i8* %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 1, !alias.scope !76
  %469 = getelementptr inbounds i8, i8* %439, i64 %464
  %470 = bitcast i8* %469 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %470, align 1, !alias.scope !79, !noalias !76
  %471 = add i64 %441, 64
  %472 = add i64 %442, -4
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %440, !llvm.loop !81

474:                                              ; preds = %440, %411
  %475 = phi i64 [ 0, %411 ], [ %471, %440 ]
  %476 = icmp eq i64 %420, 0
  br i1 %476, label %495, label %477

477:                                              ; preds = %474
  %478 = getelementptr i8, i8* %295, i64 -1
  %479 = getelementptr inbounds i8, i8* %478, i64 -8
  %480 = getelementptr inbounds i8, i8* %1, i64 -16
  %481 = getelementptr inbounds i8, i8* %479, i64 -7
  br label %482

482:                                              ; preds = %482, %477
  %483 = phi i64 [ %475, %477 ], [ %492, %482 ]
  %484 = phi i64 [ %420, %477 ], [ %493, %482 ]
  %485 = sub i64 0, %483
  %486 = sub i64 0, %483
  %487 = getelementptr inbounds i8, i8* %480, i64 %486
  %488 = bitcast i8* %487 to <2 x i64>*
  %489 = load <2 x i64>, <2 x i64>* %488, align 1, !alias.scope !76
  %490 = getelementptr inbounds i8, i8* %481, i64 %485
  %491 = bitcast i8* %490 to <2 x i64>*
  store <2 x i64> %489, <2 x i64>* %491, align 1, !alias.scope !79, !noalias !76
  %492 = add i64 %483, 16
  %493 = add i64 %484, -1
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %495, label %482, !llvm.loop !82

495:                                              ; preds = %482, %474
  %496 = icmp eq i64 %401, %412
  br i1 %496, label %507, label %497

497:                                              ; preds = %495, %403, %398
  %498 = phi i8* [ %295, %403 ], [ %295, %398 ], [ %414, %495 ]
  %499 = phi i8* [ %1, %403 ], [ %1, %398 ], [ %416, %495 ]
  br label %500

500:                                              ; preds = %497, %500
  %501 = phi i8* [ %503, %500 ], [ %498, %497 ]
  %502 = phi i8* [ %504, %500 ], [ %499, %497 ]
  %503 = getelementptr inbounds i8, i8* %501, i64 -1
  %504 = getelementptr inbounds i8, i8* %502, i64 -1
  %505 = load i8, i8* %504, align 1
  store i8 %505, i8* %503, align 1
  %506 = icmp eq i8* %504, %396
  br i1 %506, label %507, label %500, !llvm.loop !83

507:                                              ; preds = %500, %495, %394
  %508 = phi i8* [ %295, %394 ], [ %414, %495 ], [ %503, %500 ]
  %509 = load i8*, i8** %15, align 8
  %510 = icmp eq i8* %509, %1
  br i1 %510, label %616, label %511

511:                                              ; preds = %507
  %512 = ptrtoint i8* %509 to i64
  %513 = sub i64 %512, %5
  %514 = icmp ult i64 %513, 32
  br i1 %514, label %606, label %515

515:                                              ; preds = %511
  %516 = add i64 %292, %8
  %517 = sub i64 %516, %5
  %518 = sub i64 %517, %6
  %519 = getelementptr i8, i8* %509, i64 %518
  %520 = ptrtoint i8* %519 to i64
  %521 = getelementptr i8, i8* %294, i64 %520
  %522 = icmp ult i8* %297, %509
  %523 = icmp ugt i8* %521, %1
  %524 = and i1 %522, %523
  br i1 %524, label %606, label %525

525:                                              ; preds = %515
  %526 = and i64 %513, -32
  %527 = getelementptr i8, i8* %297, i64 %526
  %528 = getelementptr i8, i8* %1, i64 %526
  %529 = add i64 %526, -32
  %530 = lshr exact i64 %529, 5
  %531 = add nuw nsw i64 %530, 1
  %532 = and i64 %531, 3
  %533 = icmp ult i64 %529, 96
  br i1 %533, label %585, label %534

534:                                              ; preds = %525
  %535 = sub nsw i64 %531, %532
  br label %536

536:                                              ; preds = %536, %534
  %537 = phi i64 [ 0, %534 ], [ %582, %536 ]
  %538 = phi i64 [ %535, %534 ], [ %583, %536 ]
  %539 = getelementptr i8, i8* %297, i64 %537
  %540 = getelementptr i8, i8* %1, i64 %537
  %541 = bitcast i8* %540 to <16 x i8>*
  %542 = load <16 x i8>, <16 x i8>* %541, align 1, !alias.scope !84
  %543 = getelementptr i8, i8* %540, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  %545 = load <16 x i8>, <16 x i8>* %544, align 1, !alias.scope !84
  %546 = bitcast i8* %539 to <16 x i8>*
  store <16 x i8> %542, <16 x i8>* %546, align 1, !alias.scope !87, !noalias !84
  %547 = getelementptr i8, i8* %539, i64 16
  %548 = bitcast i8* %547 to <16 x i8>*
  store <16 x i8> %545, <16 x i8>* %548, align 1, !alias.scope !87, !noalias !84
  %549 = or i64 %537, 32
  %550 = getelementptr i8, i8* %297, i64 %549
  %551 = getelementptr i8, i8* %1, i64 %549
  %552 = bitcast i8* %551 to <16 x i8>*
  %553 = load <16 x i8>, <16 x i8>* %552, align 1, !alias.scope !84
  %554 = getelementptr i8, i8* %551, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  %556 = load <16 x i8>, <16 x i8>* %555, align 1, !alias.scope !84
  %557 = bitcast i8* %550 to <16 x i8>*
  store <16 x i8> %553, <16 x i8>* %557, align 1, !alias.scope !87, !noalias !84
  %558 = getelementptr i8, i8* %550, i64 16
  %559 = bitcast i8* %558 to <16 x i8>*
  store <16 x i8> %556, <16 x i8>* %559, align 1, !alias.scope !87, !noalias !84
  %560 = or i64 %537, 64
  %561 = getelementptr i8, i8* %297, i64 %560
  %562 = getelementptr i8, i8* %1, i64 %560
  %563 = bitcast i8* %562 to <16 x i8>*
  %564 = load <16 x i8>, <16 x i8>* %563, align 1, !alias.scope !84
  %565 = getelementptr i8, i8* %562, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  %567 = load <16 x i8>, <16 x i8>* %566, align 1, !alias.scope !84
  %568 = bitcast i8* %561 to <16 x i8>*
  store <16 x i8> %564, <16 x i8>* %568, align 1, !alias.scope !87, !noalias !84
  %569 = getelementptr i8, i8* %561, i64 16
  %570 = bitcast i8* %569 to <16 x i8>*
  store <16 x i8> %567, <16 x i8>* %570, align 1, !alias.scope !87, !noalias !84
  %571 = or i64 %537, 96
  %572 = getelementptr i8, i8* %297, i64 %571
  %573 = getelementptr i8, i8* %1, i64 %571
  %574 = bitcast i8* %573 to <16 x i8>*
  %575 = load <16 x i8>, <16 x i8>* %574, align 1, !alias.scope !84
  %576 = getelementptr i8, i8* %573, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  %578 = load <16 x i8>, <16 x i8>* %577, align 1, !alias.scope !84
  %579 = bitcast i8* %572 to <16 x i8>*
  store <16 x i8> %575, <16 x i8>* %579, align 1, !alias.scope !87, !noalias !84
  %580 = getelementptr i8, i8* %572, i64 16
  %581 = bitcast i8* %580 to <16 x i8>*
  store <16 x i8> %578, <16 x i8>* %581, align 1, !alias.scope !87, !noalias !84
  %582 = add i64 %537, 128
  %583 = add i64 %538, -4
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %585, label %536, !llvm.loop !89

585:                                              ; preds = %536, %525
  %586 = phi i64 [ 0, %525 ], [ %582, %536 ]
  %587 = icmp eq i64 %532, 0
  br i1 %587, label %604, label %588

588:                                              ; preds = %585, %588
  %589 = phi i64 [ %601, %588 ], [ %586, %585 ]
  %590 = phi i64 [ %602, %588 ], [ %532, %585 ]
  %591 = getelementptr i8, i8* %297, i64 %589
  %592 = getelementptr i8, i8* %1, i64 %589
  %593 = bitcast i8* %592 to <16 x i8>*
  %594 = load <16 x i8>, <16 x i8>* %593, align 1, !alias.scope !84
  %595 = getelementptr i8, i8* %592, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  %597 = load <16 x i8>, <16 x i8>* %596, align 1, !alias.scope !84
  %598 = bitcast i8* %591 to <16 x i8>*
  store <16 x i8> %594, <16 x i8>* %598, align 1, !alias.scope !87, !noalias !84
  %599 = getelementptr i8, i8* %591, i64 16
  %600 = bitcast i8* %599 to <16 x i8>*
  store <16 x i8> %597, <16 x i8>* %600, align 1, !alias.scope !87, !noalias !84
  %601 = add i64 %589, 32
  %602 = add i64 %590, -1
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %604, label %588, !llvm.loop !90

604:                                              ; preds = %588, %585
  %605 = icmp eq i64 %513, %526
  br i1 %605, label %616, label %606

606:                                              ; preds = %604, %515, %511
  %607 = phi i8* [ %297, %515 ], [ %297, %511 ], [ %527, %604 ]
  %608 = phi i8* [ %1, %515 ], [ %1, %511 ], [ %528, %604 ]
  br label %609

609:                                              ; preds = %606, %609
  %610 = phi i8* [ %614, %609 ], [ %607, %606 ]
  %611 = phi i8* [ %613, %609 ], [ %608, %606 ]
  %612 = load i8, i8* %611, align 1
  store i8 %612, i8* %610, align 1
  %613 = getelementptr inbounds i8, i8* %611, i64 1
  %614 = getelementptr inbounds i8, i8* %610, i64 1
  %615 = icmp eq i8* %613, %509
  br i1 %615, label %616, label %609, !llvm.loop !91

616:                                              ; preds = %609, %604, %507
  %617 = phi i8* [ %297, %507 ], [ %527, %604 ], [ %614, %609 ]
  %618 = ptrtoint i8* %508 to i64
  %619 = ptrtoint i8* %617 to i64
  %620 = load i8*, i8** %7, align 8
  store i64 %618, i64* %269, align 8
  store i64 %619, i64* %20, align 8
  store i64 %395, i64* %13, align 8
  %621 = icmp eq i8* %620, null
  br i1 %621, label %623, label %622

622:                                              ; preds = %616
  tail call void @_Z7FX_FreePv(i8* nonnull %620) #9
  br label %623

623:                                              ; preds = %622, %616, %136, %263, %267, %4
  %624 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %295, %616 ], [ %295, %622 ]
  ret i8* %624
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector.72"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %623

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !92
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !92
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !95, !noalias !92
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !95, !noalias !92
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !92
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !92
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !95, !noalias !92
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !95, !noalias !92
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !92
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !92
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !95, !noalias !92
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !95, !noalias !92
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !92
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !92
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !95, !noalias !92
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !95, !noalias !92
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !97

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !92
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !92
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !95, !noalias !92
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !95, !noalias !92
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !98

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !99

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %623

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !100
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !100
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !103, !noalias !100
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !103, !noalias !100
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !100
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !100
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !103, !noalias !100
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !103, !noalias !100
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !100
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !100
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !103, !noalias !100
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !103, !noalias !100
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !100
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !100
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !103, !noalias !100
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !103, !noalias !100
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !105

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !100
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !100
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !103, !noalias !100
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !103, !noalias !100
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !106

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #9
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !107

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %623, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #9
  br label %623

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp slt i64 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #12
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 4611686018427387903
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %291, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 9223372036854775807, %279 ], [ %284, %281 ]
  %290 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %289, i64 1) #9
  br label %291

291:                                              ; preds = %281, %287
  %292 = phi i64 [ %288, %287 ], [ %285, %281 ]
  %293 = phi i64 [ %289, %287 ], [ 0, %281 ]
  %294 = phi i8* [ %290, %287 ], [ null, %281 ]
  %295 = getelementptr inbounds i8, i8* %294, i64 %292
  %296 = getelementptr inbounds i8, i8* %294, i64 %293
  %297 = getelementptr inbounds i8, i8* %295, i64 %9
  %298 = icmp ult i64 %9, 32
  br i1 %298, label %384, label %299

299:                                              ; preds = %291
  %300 = icmp ult i8* %295, %3
  %301 = icmp ugt i8* %297, %2
  %302 = and i1 %300, %301
  br i1 %302, label %384, label %303

303:                                              ; preds = %299
  %304 = and i64 %9, -32
  %305 = getelementptr i8, i8* %295, i64 %304
  %306 = getelementptr i8, i8* %2, i64 %304
  %307 = add i64 %304, -32
  %308 = lshr exact i64 %307, 5
  %309 = add nuw nsw i64 %308, 1
  %310 = and i64 %309, 3
  %311 = icmp ult i64 %307, 96
  br i1 %311, label %363, label %312

312:                                              ; preds = %303
  %313 = sub nsw i64 %309, %310
  br label %314

314:                                              ; preds = %314, %312
  %315 = phi i64 [ 0, %312 ], [ %360, %314 ]
  %316 = phi i64 [ %313, %312 ], [ %361, %314 ]
  %317 = getelementptr i8, i8* %295, i64 %315
  %318 = getelementptr i8, i8* %2, i64 %315
  %319 = bitcast i8* %318 to <16 x i8>*
  %320 = load <16 x i8>, <16 x i8>* %319, align 1, !alias.scope !108
  %321 = getelementptr i8, i8* %318, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  %323 = load <16 x i8>, <16 x i8>* %322, align 1, !alias.scope !108
  %324 = bitcast i8* %317 to <16 x i8>*
  store <16 x i8> %320, <16 x i8>* %324, align 1, !alias.scope !111, !noalias !108
  %325 = getelementptr i8, i8* %317, i64 16
  %326 = bitcast i8* %325 to <16 x i8>*
  store <16 x i8> %323, <16 x i8>* %326, align 1, !alias.scope !111, !noalias !108
  %327 = or i64 %315, 32
  %328 = getelementptr i8, i8* %295, i64 %327
  %329 = getelementptr i8, i8* %2, i64 %327
  %330 = bitcast i8* %329 to <16 x i8>*
  %331 = load <16 x i8>, <16 x i8>* %330, align 1, !alias.scope !108
  %332 = getelementptr i8, i8* %329, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !108
  %335 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %331, <16 x i8>* %335, align 1, !alias.scope !111, !noalias !108
  %336 = getelementptr i8, i8* %328, i64 16
  %337 = bitcast i8* %336 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %337, align 1, !alias.scope !111, !noalias !108
  %338 = or i64 %315, 64
  %339 = getelementptr i8, i8* %295, i64 %338
  %340 = getelementptr i8, i8* %2, i64 %338
  %341 = bitcast i8* %340 to <16 x i8>*
  %342 = load <16 x i8>, <16 x i8>* %341, align 1, !alias.scope !108
  %343 = getelementptr i8, i8* %340, i64 16
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !108
  %346 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %342, <16 x i8>* %346, align 1, !alias.scope !111, !noalias !108
  %347 = getelementptr i8, i8* %339, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %348, align 1, !alias.scope !111, !noalias !108
  %349 = or i64 %315, 96
  %350 = getelementptr i8, i8* %295, i64 %349
  %351 = getelementptr i8, i8* %2, i64 %349
  %352 = bitcast i8* %351 to <16 x i8>*
  %353 = load <16 x i8>, <16 x i8>* %352, align 1, !alias.scope !108
  %354 = getelementptr i8, i8* %351, i64 16
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !108
  %357 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %353, <16 x i8>* %357, align 1, !alias.scope !111, !noalias !108
  %358 = getelementptr i8, i8* %350, i64 16
  %359 = bitcast i8* %358 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %359, align 1, !alias.scope !111, !noalias !108
  %360 = add i64 %315, 128
  %361 = add i64 %316, -4
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %314, !llvm.loop !113

363:                                              ; preds = %314, %303
  %364 = phi i64 [ 0, %303 ], [ %360, %314 ]
  %365 = icmp eq i64 %310, 0
  br i1 %365, label %382, label %366

366:                                              ; preds = %363, %366
  %367 = phi i64 [ %379, %366 ], [ %364, %363 ]
  %368 = phi i64 [ %380, %366 ], [ %310, %363 ]
  %369 = getelementptr i8, i8* %295, i64 %367
  %370 = getelementptr i8, i8* %2, i64 %367
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1, !alias.scope !108
  %373 = getelementptr i8, i8* %370, i64 16
  %374 = bitcast i8* %373 to <16 x i8>*
  %375 = load <16 x i8>, <16 x i8>* %374, align 1, !alias.scope !108
  %376 = bitcast i8* %369 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %376, align 1, !alias.scope !111, !noalias !108
  %377 = getelementptr i8, i8* %369, i64 16
  %378 = bitcast i8* %377 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %378, align 1, !alias.scope !111, !noalias !108
  %379 = add i64 %367, 32
  %380 = add i64 %368, -1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %366, !llvm.loop !114

382:                                              ; preds = %366, %363
  %383 = icmp eq i64 %9, %304
  br i1 %383, label %394, label %384

384:                                              ; preds = %382, %299, %291
  %385 = phi i8* [ %295, %299 ], [ %295, %291 ], [ %305, %382 ]
  %386 = phi i8* [ %2, %299 ], [ %2, %291 ], [ %306, %382 ]
  br label %387

387:                                              ; preds = %384, %387
  %388 = phi i8* [ %391, %387 ], [ %385, %384 ]
  %389 = phi i8* [ %392, %387 ], [ %386, %384 ]
  %390 = load i8, i8* %389, align 1
  store i8 %390, i8* %388, align 1
  %391 = getelementptr inbounds i8, i8* %388, i64 1
  %392 = getelementptr inbounds i8, i8* %389, i64 1
  %393 = icmp eq i8* %297, %391
  br i1 %393, label %394, label %387, !llvm.loop !115

394:                                              ; preds = %387, %382
  %395 = ptrtoint i8* %296 to i64
  %396 = load i8*, i8** %7, align 8
  %397 = icmp eq i8* %396, %1
  br i1 %397, label %507, label %398

398:                                              ; preds = %394
  %399 = ptrtoint i8* %396 to i64
  %400 = ptrtoint i8* %1 to i64
  %401 = sub i64 %400, %399
  %402 = icmp ult i64 %401, 16
  br i1 %402, label %497, label %403

403:                                              ; preds = %398
  %404 = sub i64 %292, %5
  %405 = getelementptr i8, i8* %396, i64 %404
  %406 = ptrtoint i8* %405 to i64
  %407 = getelementptr i8, i8* %294, i64 %406
  %408 = icmp ult i8* %407, %1
  %409 = icmp ult i8* %396, %295
  %410 = and i1 %408, %409
  br i1 %410, label %497, label %411

411:                                              ; preds = %403
  %412 = and i64 %401, -16
  %413 = sub i64 0, %412
  %414 = getelementptr i8, i8* %295, i64 %413
  %415 = sub i64 0, %412
  %416 = getelementptr i8, i8* %1, i64 %415
  %417 = add i64 %412, -16
  %418 = lshr exact i64 %417, 4
  %419 = add nuw nsw i64 %418, 1
  %420 = and i64 %419, 3
  %421 = icmp ult i64 %417, 48
  br i1 %421, label %474, label %422

422:                                              ; preds = %411
  %423 = sub nsw i64 %419, %420
  %424 = getelementptr i8, i8* %295, i64 -1
  %425 = getelementptr inbounds i8, i8* %424, i64 -8
  %426 = getelementptr inbounds i8, i8* %1, i64 -16
  %427 = getelementptr inbounds i8, i8* %425, i64 -7
  %428 = getelementptr i8, i8* %295, i64 -1
  %429 = getelementptr inbounds i8, i8* %428, i64 -8
  %430 = getelementptr inbounds i8, i8* %1, i64 -16
  %431 = getelementptr inbounds i8, i8* %429, i64 -7
  %432 = getelementptr i8, i8* %295, i64 -1
  %433 = getelementptr inbounds i8, i8* %432, i64 -8
  %434 = getelementptr inbounds i8, i8* %1, i64 -16
  %435 = getelementptr inbounds i8, i8* %433, i64 -7
  %436 = getelementptr i8, i8* %295, i64 -1
  %437 = getelementptr inbounds i8, i8* %436, i64 -8
  %438 = getelementptr inbounds i8, i8* %1, i64 -16
  %439 = getelementptr inbounds i8, i8* %437, i64 -7
  br label %440

440:                                              ; preds = %440, %422
  %441 = phi i64 [ 0, %422 ], [ %471, %440 ]
  %442 = phi i64 [ %423, %422 ], [ %472, %440 ]
  %443 = sub i64 0, %441
  %444 = sub i64 0, %441
  %445 = getelementptr inbounds i8, i8* %426, i64 %444
  %446 = bitcast i8* %445 to <2 x i64>*
  %447 = load <2 x i64>, <2 x i64>* %446, align 1, !alias.scope !116
  %448 = getelementptr inbounds i8, i8* %427, i64 %443
  %449 = bitcast i8* %448 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %449, align 1, !alias.scope !119, !noalias !116
  %450 = sub nuw nsw i64 -16, %441
  %451 = sub nuw nsw i64 -16, %441
  %452 = getelementptr inbounds i8, i8* %430, i64 %451
  %453 = bitcast i8* %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 1, !alias.scope !116
  %455 = getelementptr inbounds i8, i8* %431, i64 %450
  %456 = bitcast i8* %455 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %456, align 1, !alias.scope !119, !noalias !116
  %457 = sub nuw nsw i64 -32, %441
  %458 = sub nuw nsw i64 -32, %441
  %459 = getelementptr inbounds i8, i8* %434, i64 %458
  %460 = bitcast i8* %459 to <2 x i64>*
  %461 = load <2 x i64>, <2 x i64>* %460, align 1, !alias.scope !116
  %462 = getelementptr inbounds i8, i8* %435, i64 %457
  %463 = bitcast i8* %462 to <2 x i64>*
  store <2 x i64> %461, <2 x i64>* %463, align 1, !alias.scope !119, !noalias !116
  %464 = sub nuw nsw i64 -48, %441
  %465 = sub nuw nsw i64 -48, %441
  %466 = getelementptr inbounds i8, i8* %438, i64 %465
  %467 = bitcast i8* %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 1, !alias.scope !116
  %469 = getelementptr inbounds i8, i8* %439, i64 %464
  %470 = bitcast i8* %469 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %470, align 1, !alias.scope !119, !noalias !116
  %471 = add i64 %441, 64
  %472 = add i64 %442, -4
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %440, !llvm.loop !121

474:                                              ; preds = %440, %411
  %475 = phi i64 [ 0, %411 ], [ %471, %440 ]
  %476 = icmp eq i64 %420, 0
  br i1 %476, label %495, label %477

477:                                              ; preds = %474
  %478 = getelementptr i8, i8* %295, i64 -1
  %479 = getelementptr inbounds i8, i8* %478, i64 -8
  %480 = getelementptr inbounds i8, i8* %1, i64 -16
  %481 = getelementptr inbounds i8, i8* %479, i64 -7
  br label %482

482:                                              ; preds = %482, %477
  %483 = phi i64 [ %475, %477 ], [ %492, %482 ]
  %484 = phi i64 [ %420, %477 ], [ %493, %482 ]
  %485 = sub i64 0, %483
  %486 = sub i64 0, %483
  %487 = getelementptr inbounds i8, i8* %480, i64 %486
  %488 = bitcast i8* %487 to <2 x i64>*
  %489 = load <2 x i64>, <2 x i64>* %488, align 1, !alias.scope !116
  %490 = getelementptr inbounds i8, i8* %481, i64 %485
  %491 = bitcast i8* %490 to <2 x i64>*
  store <2 x i64> %489, <2 x i64>* %491, align 1, !alias.scope !119, !noalias !116
  %492 = add i64 %483, 16
  %493 = add i64 %484, -1
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %495, label %482, !llvm.loop !122

495:                                              ; preds = %482, %474
  %496 = icmp eq i64 %401, %412
  br i1 %496, label %507, label %497

497:                                              ; preds = %495, %403, %398
  %498 = phi i8* [ %295, %403 ], [ %295, %398 ], [ %414, %495 ]
  %499 = phi i8* [ %1, %403 ], [ %1, %398 ], [ %416, %495 ]
  br label %500

500:                                              ; preds = %497, %500
  %501 = phi i8* [ %503, %500 ], [ %498, %497 ]
  %502 = phi i8* [ %504, %500 ], [ %499, %497 ]
  %503 = getelementptr inbounds i8, i8* %501, i64 -1
  %504 = getelementptr inbounds i8, i8* %502, i64 -1
  %505 = load i8, i8* %504, align 1
  store i8 %505, i8* %503, align 1
  %506 = icmp eq i8* %504, %396
  br i1 %506, label %507, label %500, !llvm.loop !123

507:                                              ; preds = %500, %495, %394
  %508 = phi i8* [ %295, %394 ], [ %414, %495 ], [ %503, %500 ]
  %509 = load i8*, i8** %15, align 8
  %510 = icmp eq i8* %509, %1
  br i1 %510, label %616, label %511

511:                                              ; preds = %507
  %512 = ptrtoint i8* %509 to i64
  %513 = sub i64 %512, %5
  %514 = icmp ult i64 %513, 32
  br i1 %514, label %606, label %515

515:                                              ; preds = %511
  %516 = add i64 %292, %8
  %517 = sub i64 %516, %5
  %518 = sub i64 %517, %6
  %519 = getelementptr i8, i8* %509, i64 %518
  %520 = ptrtoint i8* %519 to i64
  %521 = getelementptr i8, i8* %294, i64 %520
  %522 = icmp ult i8* %297, %509
  %523 = icmp ugt i8* %521, %1
  %524 = and i1 %522, %523
  br i1 %524, label %606, label %525

525:                                              ; preds = %515
  %526 = and i64 %513, -32
  %527 = getelementptr i8, i8* %297, i64 %526
  %528 = getelementptr i8, i8* %1, i64 %526
  %529 = add i64 %526, -32
  %530 = lshr exact i64 %529, 5
  %531 = add nuw nsw i64 %530, 1
  %532 = and i64 %531, 3
  %533 = icmp ult i64 %529, 96
  br i1 %533, label %585, label %534

534:                                              ; preds = %525
  %535 = sub nsw i64 %531, %532
  br label %536

536:                                              ; preds = %536, %534
  %537 = phi i64 [ 0, %534 ], [ %582, %536 ]
  %538 = phi i64 [ %535, %534 ], [ %583, %536 ]
  %539 = getelementptr i8, i8* %297, i64 %537
  %540 = getelementptr i8, i8* %1, i64 %537
  %541 = bitcast i8* %540 to <16 x i8>*
  %542 = load <16 x i8>, <16 x i8>* %541, align 1, !alias.scope !124
  %543 = getelementptr i8, i8* %540, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  %545 = load <16 x i8>, <16 x i8>* %544, align 1, !alias.scope !124
  %546 = bitcast i8* %539 to <16 x i8>*
  store <16 x i8> %542, <16 x i8>* %546, align 1, !alias.scope !127, !noalias !124
  %547 = getelementptr i8, i8* %539, i64 16
  %548 = bitcast i8* %547 to <16 x i8>*
  store <16 x i8> %545, <16 x i8>* %548, align 1, !alias.scope !127, !noalias !124
  %549 = or i64 %537, 32
  %550 = getelementptr i8, i8* %297, i64 %549
  %551 = getelementptr i8, i8* %1, i64 %549
  %552 = bitcast i8* %551 to <16 x i8>*
  %553 = load <16 x i8>, <16 x i8>* %552, align 1, !alias.scope !124
  %554 = getelementptr i8, i8* %551, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  %556 = load <16 x i8>, <16 x i8>* %555, align 1, !alias.scope !124
  %557 = bitcast i8* %550 to <16 x i8>*
  store <16 x i8> %553, <16 x i8>* %557, align 1, !alias.scope !127, !noalias !124
  %558 = getelementptr i8, i8* %550, i64 16
  %559 = bitcast i8* %558 to <16 x i8>*
  store <16 x i8> %556, <16 x i8>* %559, align 1, !alias.scope !127, !noalias !124
  %560 = or i64 %537, 64
  %561 = getelementptr i8, i8* %297, i64 %560
  %562 = getelementptr i8, i8* %1, i64 %560
  %563 = bitcast i8* %562 to <16 x i8>*
  %564 = load <16 x i8>, <16 x i8>* %563, align 1, !alias.scope !124
  %565 = getelementptr i8, i8* %562, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  %567 = load <16 x i8>, <16 x i8>* %566, align 1, !alias.scope !124
  %568 = bitcast i8* %561 to <16 x i8>*
  store <16 x i8> %564, <16 x i8>* %568, align 1, !alias.scope !127, !noalias !124
  %569 = getelementptr i8, i8* %561, i64 16
  %570 = bitcast i8* %569 to <16 x i8>*
  store <16 x i8> %567, <16 x i8>* %570, align 1, !alias.scope !127, !noalias !124
  %571 = or i64 %537, 96
  %572 = getelementptr i8, i8* %297, i64 %571
  %573 = getelementptr i8, i8* %1, i64 %571
  %574 = bitcast i8* %573 to <16 x i8>*
  %575 = load <16 x i8>, <16 x i8>* %574, align 1, !alias.scope !124
  %576 = getelementptr i8, i8* %573, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  %578 = load <16 x i8>, <16 x i8>* %577, align 1, !alias.scope !124
  %579 = bitcast i8* %572 to <16 x i8>*
  store <16 x i8> %575, <16 x i8>* %579, align 1, !alias.scope !127, !noalias !124
  %580 = getelementptr i8, i8* %572, i64 16
  %581 = bitcast i8* %580 to <16 x i8>*
  store <16 x i8> %578, <16 x i8>* %581, align 1, !alias.scope !127, !noalias !124
  %582 = add i64 %537, 128
  %583 = add i64 %538, -4
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %585, label %536, !llvm.loop !129

585:                                              ; preds = %536, %525
  %586 = phi i64 [ 0, %525 ], [ %582, %536 ]
  %587 = icmp eq i64 %532, 0
  br i1 %587, label %604, label %588

588:                                              ; preds = %585, %588
  %589 = phi i64 [ %601, %588 ], [ %586, %585 ]
  %590 = phi i64 [ %602, %588 ], [ %532, %585 ]
  %591 = getelementptr i8, i8* %297, i64 %589
  %592 = getelementptr i8, i8* %1, i64 %589
  %593 = bitcast i8* %592 to <16 x i8>*
  %594 = load <16 x i8>, <16 x i8>* %593, align 1, !alias.scope !124
  %595 = getelementptr i8, i8* %592, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  %597 = load <16 x i8>, <16 x i8>* %596, align 1, !alias.scope !124
  %598 = bitcast i8* %591 to <16 x i8>*
  store <16 x i8> %594, <16 x i8>* %598, align 1, !alias.scope !127, !noalias !124
  %599 = getelementptr i8, i8* %591, i64 16
  %600 = bitcast i8* %599 to <16 x i8>*
  store <16 x i8> %597, <16 x i8>* %600, align 1, !alias.scope !127, !noalias !124
  %601 = add i64 %589, 32
  %602 = add i64 %590, -1
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %604, label %588, !llvm.loop !130

604:                                              ; preds = %588, %585
  %605 = icmp eq i64 %513, %526
  br i1 %605, label %616, label %606

606:                                              ; preds = %604, %515, %511
  %607 = phi i8* [ %297, %515 ], [ %297, %511 ], [ %527, %604 ]
  %608 = phi i8* [ %1, %515 ], [ %1, %511 ], [ %528, %604 ]
  br label %609

609:                                              ; preds = %606, %609
  %610 = phi i8* [ %614, %609 ], [ %607, %606 ]
  %611 = phi i8* [ %613, %609 ], [ %608, %606 ]
  %612 = load i8, i8* %611, align 1
  store i8 %612, i8* %610, align 1
  %613 = getelementptr inbounds i8, i8* %611, i64 1
  %614 = getelementptr inbounds i8, i8* %610, i64 1
  %615 = icmp eq i8* %613, %509
  br i1 %615, label %616, label %609, !llvm.loop !131

616:                                              ; preds = %609, %604, %507
  %617 = phi i8* [ %297, %507 ], [ %527, %604 ], [ %614, %609 ]
  %618 = ptrtoint i8* %508 to i64
  %619 = ptrtoint i8* %617 to i64
  %620 = load i8*, i8** %7, align 8
  store i64 %618, i64* %269, align 8
  store i64 %619, i64* %20, align 8
  store i64 %395, i64* %13, align 8
  %621 = icmp eq i8* %620, null
  br i1 %621, label %623, label %622

622:                                              ; preds = %616
  tail call void @_Z7FX_FreePv(i8* nonnull %620) #9
  br label %623

623:                                              ; preds = %622, %616, %136, %263, %267, %4
  %624 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %295, %616 ], [ %295, %622 ]
  ret i8* %624
}

declare void @_Z20CRYPT_SHA256GeneratePKhjPh(i8*, i32, i8*) local_unnamed_addr #1

declare void @_Z20CRYPT_SHA384GeneratePKhjPh(i8*, i32, i8*) local_unnamed_addr #1

declare void @_Z20CRYPT_SHA512GeneratePKhjPh(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIh16FxAllocAllocatorIhEE8__appendEm(%"class.std::__1::vector.72"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #9
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %178

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %39, i64 1) #9
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #9
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = ptrtoint i8* %54 to i64
  %56 = load i8*, i8** %6, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = icmp eq i8* %56, %54
  br i1 %58, label %172, label %59

59:                                               ; preds = %41
  %60 = ptrtoint i8* %56 to i64
  %61 = sub i64 %60, %55
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %158, label %63

63:                                               ; preds = %59
  %64 = sub i64 %8, %57
  %65 = sub i64 %64, %24
  %66 = getelementptr i8, i8* %54, i64 %65
  %67 = ptrtoint i8* %66 to i64
  %68 = getelementptr i8, i8* %43, i64 %67
  %69 = icmp ult i8* %68, %56
  %70 = icmp ult i8* %54, %44
  %71 = and i1 %69, %70
  br i1 %71, label %158, label %72

72:                                               ; preds = %63
  %73 = and i64 %61, -16
  %74 = sub i64 0, %73
  %75 = getelementptr i8, i8* %44, i64 %74
  %76 = sub i64 0, %73
  %77 = getelementptr i8, i8* %56, i64 %76
  %78 = add i64 %73, -16
  %79 = lshr exact i64 %78, 4
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp ult i64 %78, 48
  br i1 %82, label %135, label %83

83:                                               ; preds = %72
  %84 = sub nsw i64 %80, %81
  %85 = getelementptr i8, i8* %44, i64 -1
  %86 = getelementptr inbounds i8, i8* %85, i64 -8
  %87 = getelementptr inbounds i8, i8* %56, i64 -16
  %88 = getelementptr inbounds i8, i8* %86, i64 -7
  %89 = getelementptr i8, i8* %44, i64 -1
  %90 = getelementptr inbounds i8, i8* %89, i64 -8
  %91 = getelementptr inbounds i8, i8* %56, i64 -16
  %92 = getelementptr inbounds i8, i8* %90, i64 -7
  %93 = getelementptr i8, i8* %44, i64 -1
  %94 = getelementptr inbounds i8, i8* %93, i64 -8
  %95 = getelementptr inbounds i8, i8* %56, i64 -16
  %96 = getelementptr inbounds i8, i8* %94, i64 -7
  %97 = getelementptr i8, i8* %44, i64 -1
  %98 = getelementptr inbounds i8, i8* %97, i64 -8
  %99 = getelementptr inbounds i8, i8* %56, i64 -16
  %100 = getelementptr inbounds i8, i8* %98, i64 -7
  br label %101

101:                                              ; preds = %101, %83
  %102 = phi i64 [ 0, %83 ], [ %132, %101 ]
  %103 = phi i64 [ %84, %83 ], [ %133, %101 ]
  %104 = sub i64 0, %102
  %105 = sub i64 0, %102
  %106 = getelementptr inbounds i8, i8* %87, i64 %105
  %107 = bitcast i8* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 1, !alias.scope !132
  %109 = getelementptr inbounds i8, i8* %88, i64 %104
  %110 = bitcast i8* %109 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %110, align 1, !alias.scope !135, !noalias !132
  %111 = sub nuw nsw i64 -16, %102
  %112 = sub nuw nsw i64 -16, %102
  %113 = getelementptr inbounds i8, i8* %91, i64 %112
  %114 = bitcast i8* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 1, !alias.scope !132
  %116 = getelementptr inbounds i8, i8* %92, i64 %111
  %117 = bitcast i8* %116 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %117, align 1, !alias.scope !135, !noalias !132
  %118 = sub nuw nsw i64 -32, %102
  %119 = sub nuw nsw i64 -32, %102
  %120 = getelementptr inbounds i8, i8* %95, i64 %119
  %121 = bitcast i8* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 1, !alias.scope !132
  %123 = getelementptr inbounds i8, i8* %96, i64 %118
  %124 = bitcast i8* %123 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %124, align 1, !alias.scope !135, !noalias !132
  %125 = sub nuw nsw i64 -48, %102
  %126 = sub nuw nsw i64 -48, %102
  %127 = getelementptr inbounds i8, i8* %99, i64 %126
  %128 = bitcast i8* %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 1, !alias.scope !132
  %130 = getelementptr inbounds i8, i8* %100, i64 %125
  %131 = bitcast i8* %130 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %131, align 1, !alias.scope !135, !noalias !132
  %132 = add i64 %102, 64
  %133 = add i64 %103, -4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %101, !llvm.loop !137

135:                                              ; preds = %101, %72
  %136 = phi i64 [ 0, %72 ], [ %132, %101 ]
  %137 = icmp eq i64 %81, 0
  br i1 %137, label %156, label %138

138:                                              ; preds = %135
  %139 = getelementptr i8, i8* %44, i64 -1
  %140 = getelementptr inbounds i8, i8* %139, i64 -8
  %141 = getelementptr inbounds i8, i8* %56, i64 -16
  %142 = getelementptr inbounds i8, i8* %140, i64 -7
  br label %143

143:                                              ; preds = %143, %138
  %144 = phi i64 [ %136, %138 ], [ %153, %143 ]
  %145 = phi i64 [ %81, %138 ], [ %154, %143 ]
  %146 = sub i64 0, %144
  %147 = sub i64 0, %144
  %148 = getelementptr inbounds i8, i8* %141, i64 %147
  %149 = bitcast i8* %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 1, !alias.scope !132
  %151 = getelementptr inbounds i8, i8* %142, i64 %146
  %152 = bitcast i8* %151 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %152, align 1, !alias.scope !135, !noalias !132
  %153 = add i64 %144, 16
  %154 = add i64 %145, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %143, !llvm.loop !138

156:                                              ; preds = %143, %135
  %157 = icmp eq i64 %61, %73
  br i1 %157, label %168, label %158

158:                                              ; preds = %156, %63, %59
  %159 = phi i8* [ %44, %63 ], [ %44, %59 ], [ %75, %156 ]
  %160 = phi i8* [ %56, %63 ], [ %56, %59 ], [ %77, %156 ]
  br label %161

161:                                              ; preds = %158, %161
  %162 = phi i8* [ %164, %161 ], [ %159, %158 ]
  %163 = phi i8* [ %165, %161 ], [ %160, %158 ]
  %164 = getelementptr inbounds i8, i8* %162, i64 -1
  %165 = getelementptr inbounds i8, i8* %163, i64 -1
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = icmp eq i8* %165, %54
  br i1 %167, label %168, label %161, !llvm.loop !139

168:                                              ; preds = %161, %156
  %169 = phi i8* [ %75, %156 ], [ %164, %161 ]
  %170 = ptrtoint i8* %169 to i64
  %171 = load i64, i64* %23, align 8
  br label %172

172:                                              ; preds = %41, %168
  %173 = phi i64 [ %170, %168 ], [ %45, %41 ]
  %174 = phi i64 [ %171, %168 ], [ %55, %41 ]
  store i64 %173, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = inttoptr i64 %174 to i8*
  tail call void @_Z7FX_FreePv(i8* nonnull %177) #9
  br label %178

178:                                              ; preds = %176, %172, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN18CPDF_CryptoHandlerD1Ev(%class.CPDF_CryptoHandler*) unnamed_addr #2

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::RetainPtr.27"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN11CPDF_StringC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_b(%class.CPDF_String*, %"class.fxcrt::WeakPtr"*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext) unnamed_addr #1

declare void @_ZN18CPDF_CryptoHandlerC1ENS_6CipherEPKhm(%class.CPDF_CryptoHandler*, i32, i8*, i64) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !9, !7}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m: argument 0"}
!12 = distinct !{!12, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m"}
!13 = distinct !{!13, !14, !"_ZNK5fxcrt10ByteString8raw_spanEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5fxcrt10ByteString8raw_spanEv"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{i32 -2144183273}
!17 = !{i32 -2144183252}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5fxcrt10ByteString8raw_spanEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5fxcrt10ByteString8raw_spanEv"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m: argument 0"}
!23 = distinct !{!23, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6pdfium8as_bytesIjEENS_4spanIKhEENS1_IT_EE: argument 0"}
!26 = distinct !{!26, !"_ZN6pdfium8as_bytesIjEENS_4spanIKhEENS1_IT_EE"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m: argument 0"}
!29 = distinct !{!29, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m"}
!30 = distinct !{!30, !31, !"_ZNK5fxcrt10ByteString8raw_spanEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5fxcrt10ByteString8raw_spanEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6pdfium8as_bytesIKjEENS_4spanIKhEENS2_IT_EE: argument 0"}
!34 = distinct !{!34, !"_ZN6pdfium8as_bytesIKjEENS_4spanIKhEENS2_IT_EE"}
!35 = distinct !{!35, !7}
!36 = distinct !{!36, !9, !7}
!37 = distinct !{!37, !7}
!38 = distinct !{!38, !9, !7}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m: argument 0"}
!41 = distinct !{!41, !"_ZN6pdfium9make_spanIKhEENS_4spanIT_EEPS3_m"}
!42 = distinct !{!42, !43, !"_ZNK5fxcrt10ByteString8raw_spanEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5fxcrt10ByteString8raw_spanEv"}
!44 = distinct !{!44, !7}
!45 = distinct !{!45, !9, !7}
!46 = !{i32 -2143068357}
!47 = !{i32 -2143068336}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6pdfium10MakeRetainI11CPDF_StringJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEES5_bEEENS2_9RetainPtrIT_EEDpOT0_: argument 0"}
!50 = distinct !{!50, !"_ZN6pdfium10MakeRetainI11CPDF_StringJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEES5_bEEENS2_9RetainPtrIT_EEDpOT0_"}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !7}
!57 = distinct !{!57, !58}
!58 = !{!"llvm.loop.unroll.disable"}
!59 = distinct !{!59, !7}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !7}
!66 = distinct !{!66, !58}
!67 = distinct !{!67, !7}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !7}
!74 = distinct !{!74, !58}
!75 = distinct !{!75, !7}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !7}
!82 = distinct !{!82, !58}
!83 = distinct !{!83, !7}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !7}
!90 = distinct !{!90, !58}
!91 = distinct !{!91, !7}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !7}
!98 = distinct !{!98, !58}
!99 = distinct !{!99, !7}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !7}
!106 = distinct !{!106, !58}
!107 = distinct !{!107, !7}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !7}
!114 = distinct !{!114, !58}
!115 = distinct !{!115, !7}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !7}
!122 = distinct !{!122, !58}
!123 = distinct !{!123, !7}
!124 = !{!125}
!125 = distinct !{!125, !126}
!126 = distinct !{!126, !"LVerDomain"}
!127 = !{!128}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !7}
!130 = distinct !{!130, !58}
!131 = distinct !{!131, !7}
!132 = !{!133}
!133 = distinct !{!133, !134}
!134 = distinct !{!134, !"LVerDomain"}
!135 = !{!136}
!136 = distinct !{!136, !134}
!137 = distinct !{!137, !7}
!138 = distinct !{!138, !58}
!139 = distinct !{!139, !7}
