; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/encoder/mcomp.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/encoder/mcomp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.MV = type { i16, i16 }
%union.int_mv = type { i32 }
%struct.macroblock = type { [400 x i16], [400 x i16], [256 x i8], i8*, [25 x %struct.block], %struct.yv12_buffer_config, %struct.macroblockd, %struct.PARTITION_INFO*, %struct.PARTITION_INFO*, %struct.PARTITION_INFO*, [4 x i32], %struct.search_site*, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32, i32, [2 x i32*], [2 x i32*], [10 x i32]*, [10 x i32]*, [10 x [10 x i32]]*, i32*, [8 x [3 x [12 x i32]]]*, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.mv_context*, i32, i32, i32, i32, i32, i32, %union.int_mv, i32, i32, i8, i32, [4 x [8 x [3 x [12 x i32]]]], [2 x [2047 x i32]], [5 x i32], [4 x i32], i64, i64, [4 x i32], [20 x i32], [20 x i32], i32, [20 x i32], i32, i32, i32, i32, i32, [1024 x i32], void (i16*, i16*, i32)*, void (i16*, i16*, i32)*, void (i16*, i16*, i32)*, void (%struct.block*, %struct.blockd*)*, i32, i32, [8 x i8] }
%struct.block = type { i16*, i16*, i16*, i16*, i16*, i16*, i16*, i16*, i16, i8**, i32, i32 }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.macroblockd = type { [384 x i8], [400 x i16], [400 x i16], [25 x i8], [7 x i8], [16 x i16], [16 x i16], [16 x i16], [16 x i16], [25 x %struct.blockd], i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.modeinfo*, i32, i32, i32, i32, [3 x i8*], [3 x i8*], [2 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES*, i8, i8, i8, i8, [3 x i8], [2 x [4 x i8]], i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], i32, i32, i32, i32, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, i8*, i32, %struct.vpx_internal_error_info, [16 x i8], [704 x i8] }
%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%union.b_mode_info = type { i32 }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.PARTITION_INFO = type { i32, [16 x %struct.anon] }
%struct.anon = type { i32, %union.int_mv }
%struct.search_site = type { %struct.MV, i32 }
%struct.mv_context = type { [19 x i8] }
%struct.variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8*, i32, i32)* }

@__const.vp8_hex_search.hex = private unnamed_addr constant [6 x %struct.MV] [%struct.MV { i16 -1, i16 -2 }, %struct.MV { i16 1, i16 -2 }, %struct.MV { i16 2, i16 0 }, %struct.MV { i16 1, i16 2 }, %struct.MV { i16 -1, i16 2 }, %struct.MV { i16 -2, i16 0 }], align 16
@__const.vp8_hex_search.neighbors = private unnamed_addr constant [4 x %struct.MV] [%struct.MV { i16 0, i16 -1 }, %struct.MV { i16 -1, i16 0 }, %struct.MV { i16 1, i16 0 }, %struct.MV { i16 0, i16 1 }], align 16
@next_chkpts = internal unnamed_addr constant [6 x [3 x %struct.MV]] [[3 x %struct.MV] [%struct.MV { i16 -2, i16 0 }, %struct.MV { i16 -1, i16 -2 }, %struct.MV { i16 1, i16 -2 }], [3 x %struct.MV] [%struct.MV { i16 -1, i16 -2 }, %struct.MV { i16 1, i16 -2 }, %struct.MV { i16 2, i16 0 }], [3 x %struct.MV] [%struct.MV { i16 1, i16 -2 }, %struct.MV { i16 2, i16 0 }, %struct.MV { i16 1, i16 2 }], [3 x %struct.MV] [%struct.MV { i16 2, i16 0 }, %struct.MV { i16 1, i16 2 }, %struct.MV { i16 -1, i16 2 }], [3 x %struct.MV] [%struct.MV { i16 1, i16 2 }, %struct.MV { i16 -1, i16 2 }, %struct.MV { i16 -2, i16 0 }], [3 x %struct.MV] [%struct.MV { i16 -1, i16 2 }, %struct.MV { i16 -2, i16 0 }, %struct.MV { i16 -1, i16 -2 }]], align 16
@__const.vp8_refining_search_sadx4.neighbors = private unnamed_addr constant [4 x %struct.MV] [%struct.MV { i16 -1, i16 0 }, %struct.MV { i16 0, i16 -1 }, %struct.MV { i16 0, i16 1 }, %struct.MV { i16 1, i16 0 }], align 16

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp8_mv_bit_cost(%union.int_mv* nocapture readonly, %union.int_mv* nocapture readonly, i32** nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = bitcast %union.int_mv* %0 to %struct.MV*
  %6 = bitcast %union.int_mv* %0 to i16*
  %7 = load i16, i16* %6, align 4
  %8 = sext i16 %7 to i32
  %9 = bitcast %union.int_mv* %1 to %struct.MV*
  %10 = bitcast %union.int_mv* %1 to i16*
  %11 = load i16, i16* %10, align 4
  %12 = sext i16 %11 to i32
  %13 = sub nsw i32 %8, %12
  %14 = ashr i32 %13, 1
  %15 = icmp slt i32 %14, 2047
  %16 = select i1 %15, i32 %14, i32 2047
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  %19 = getelementptr inbounds %struct.MV, %struct.MV* %5, i64 0, i32 1
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = getelementptr inbounds %struct.MV, %struct.MV* %9, i64 0, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = sub nsw i32 %21, %24
  %26 = ashr i32 %25, 1
  %27 = icmp slt i32 %26, 2047
  %28 = select i1 %27, i32 %26, i32 2047
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = load i32*, i32** %2, align 8
  %32 = zext i32 %18 to i64
  %33 = getelementptr inbounds i32, i32* %31, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i32*, i32** %2, i64 1
  %36 = load i32*, i32** %35, align 8
  %37 = zext i32 %30 to i64
  %38 = getelementptr inbounds i32, i32* %36, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %39, %34
  %41 = mul nsw i32 %40, %3
  %42 = ashr i32 %41, 7
  ret i32 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_init_dsmotion_compensation(%struct.macroblock* nocapture, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 11
  %4 = load %struct.search_site*, %struct.search_site** %3, align 8
  %5 = getelementptr inbounds %struct.search_site, %struct.search_site* %4, i64 0, i32 0, i32 1
  store i16 0, i16* %5, align 2
  %6 = load %struct.search_site*, %struct.search_site** %3, align 8
  %7 = getelementptr inbounds %struct.search_site, %struct.search_site* %6, i64 0, i32 0, i32 0
  store i16 0, i16* %7, align 4
  %8 = load %struct.search_site*, %struct.search_site** %3, align 8
  %9 = getelementptr inbounds %struct.search_site, %struct.search_site* %8, i64 0, i32 1
  store i32 0, i32* %9, align 4
  br label %10

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %45, %10 ]
  %12 = phi i32 [ 128, %2 ], [ %46, %10 ]
  %13 = load %struct.search_site*, %struct.search_site** %3, align 8
  %14 = getelementptr inbounds %struct.search_site, %struct.search_site* %13, i64 %11, i32 0, i32 1
  store i16 0, i16* %14, align 2
  %15 = sub nsw i32 0, %12
  %16 = trunc i32 %15 to i16
  %17 = load %struct.search_site*, %struct.search_site** %3, align 8
  %18 = getelementptr inbounds %struct.search_site, %struct.search_site* %17, i64 %11, i32 0, i32 0
  store i16 %16, i16* %18, align 4
  %19 = mul nsw i32 %15, %1
  %20 = load %struct.search_site*, %struct.search_site** %3, align 8
  %21 = getelementptr inbounds %struct.search_site, %struct.search_site* %20, i64 %11, i32 1
  store i32 %19, i32* %21, align 4
  %22 = add nuw nsw i64 %11, 1
  %23 = load %struct.search_site*, %struct.search_site** %3, align 8
  %24 = getelementptr inbounds %struct.search_site, %struct.search_site* %23, i64 %22, i32 0, i32 1
  store i16 0, i16* %24, align 2
  %25 = trunc i32 %12 to i16
  %26 = load %struct.search_site*, %struct.search_site** %3, align 8
  %27 = getelementptr inbounds %struct.search_site, %struct.search_site* %26, i64 %22, i32 0, i32 0
  store i16 %25, i16* %27, align 4
  %28 = mul nsw i32 %12, %1
  %29 = load %struct.search_site*, %struct.search_site** %3, align 8
  %30 = getelementptr inbounds %struct.search_site, %struct.search_site* %29, i64 %22, i32 1
  store i32 %28, i32* %30, align 4
  %31 = add nuw nsw i64 %11, 2
  %32 = load %struct.search_site*, %struct.search_site** %3, align 8
  %33 = getelementptr inbounds %struct.search_site, %struct.search_site* %32, i64 %31, i32 0, i32 1
  store i16 %16, i16* %33, align 2
  %34 = load %struct.search_site*, %struct.search_site** %3, align 8
  %35 = getelementptr inbounds %struct.search_site, %struct.search_site* %34, i64 %31, i32 0, i32 0
  store i16 0, i16* %35, align 4
  %36 = load %struct.search_site*, %struct.search_site** %3, align 8
  %37 = getelementptr inbounds %struct.search_site, %struct.search_site* %36, i64 %31, i32 1
  store i32 %15, i32* %37, align 4
  %38 = add nuw nsw i64 %11, 3
  %39 = load %struct.search_site*, %struct.search_site** %3, align 8
  %40 = getelementptr inbounds %struct.search_site, %struct.search_site* %39, i64 %38, i32 0, i32 1
  store i16 %25, i16* %40, align 2
  %41 = load %struct.search_site*, %struct.search_site** %3, align 8
  %42 = getelementptr inbounds %struct.search_site, %struct.search_site* %41, i64 %38, i32 0, i32 0
  store i16 0, i16* %42, align 4
  %43 = load %struct.search_site*, %struct.search_site** %3, align 8
  %44 = getelementptr inbounds %struct.search_site, %struct.search_site* %43, i64 %38, i32 1
  store i32 %12, i32* %44, align 4
  %45 = add nuw nsw i64 %11, 4
  %46 = lshr i32 %12, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %10

48:                                               ; preds = %10
  %49 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 12
  store i32 33, i32* %49, align 16
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 13
  store i32 4, i32* %50, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_init3smotion_compensation(%struct.macroblock*, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 11
  %4 = load %struct.search_site*, %struct.search_site** %3, align 8
  %5 = getelementptr inbounds %struct.search_site, %struct.search_site* %4, i64 0, i32 0, i32 1
  store i16 0, i16* %5, align 2
  %6 = load %struct.search_site*, %struct.search_site** %3, align 8
  %7 = getelementptr inbounds %struct.search_site, %struct.search_site* %6, i64 0, i32 0, i32 0
  store i16 0, i16* %7, align 4
  %8 = load %struct.search_site*, %struct.search_site** %3, align 8
  %9 = getelementptr inbounds %struct.search_site, %struct.search_site* %8, i64 0, i32 1
  store i32 0, i32* %9, align 4
  br label %10

10:                                               ; preds = %2, %10
  %11 = phi i64 [ 1, %2 ], [ %77, %10 ]
  %12 = phi i32 [ 128, %2 ], [ %78, %10 ]
  %13 = load %struct.search_site*, %struct.search_site** %3, align 8
  %14 = getelementptr inbounds %struct.search_site, %struct.search_site* %13, i64 %11, i32 0, i32 1
  store i16 0, i16* %14, align 2
  %15 = sub nsw i32 0, %12
  %16 = trunc i32 %15 to i16
  %17 = load %struct.search_site*, %struct.search_site** %3, align 8
  %18 = getelementptr inbounds %struct.search_site, %struct.search_site* %17, i64 %11, i32 0, i32 0
  store i16 %16, i16* %18, align 4
  %19 = mul nsw i32 %15, %1
  %20 = load %struct.search_site*, %struct.search_site** %3, align 8
  %21 = getelementptr inbounds %struct.search_site, %struct.search_site* %20, i64 %11, i32 1
  store i32 %19, i32* %21, align 4
  %22 = add nuw nsw i64 %11, 1
  %23 = load %struct.search_site*, %struct.search_site** %3, align 8
  %24 = getelementptr inbounds %struct.search_site, %struct.search_site* %23, i64 %22, i32 0, i32 1
  store i16 0, i16* %24, align 2
  %25 = trunc i32 %12 to i16
  %26 = load %struct.search_site*, %struct.search_site** %3, align 8
  %27 = getelementptr inbounds %struct.search_site, %struct.search_site* %26, i64 %22, i32 0, i32 0
  store i16 %25, i16* %27, align 4
  %28 = mul nsw i32 %12, %1
  %29 = load %struct.search_site*, %struct.search_site** %3, align 8
  %30 = getelementptr inbounds %struct.search_site, %struct.search_site* %29, i64 %22, i32 1
  store i32 %28, i32* %30, align 4
  %31 = add nuw nsw i64 %11, 2
  %32 = load %struct.search_site*, %struct.search_site** %3, align 8
  %33 = getelementptr inbounds %struct.search_site, %struct.search_site* %32, i64 %31, i32 0, i32 1
  store i16 %16, i16* %33, align 2
  %34 = load %struct.search_site*, %struct.search_site** %3, align 8
  %35 = getelementptr inbounds %struct.search_site, %struct.search_site* %34, i64 %31, i32 0, i32 0
  store i16 0, i16* %35, align 4
  %36 = load %struct.search_site*, %struct.search_site** %3, align 8
  %37 = getelementptr inbounds %struct.search_site, %struct.search_site* %36, i64 %31, i32 1
  store i32 %15, i32* %37, align 4
  %38 = add nuw nsw i64 %11, 3
  %39 = load %struct.search_site*, %struct.search_site** %3, align 8
  %40 = getelementptr inbounds %struct.search_site, %struct.search_site* %39, i64 %38, i32 0, i32 1
  store i16 %25, i16* %40, align 2
  %41 = load %struct.search_site*, %struct.search_site** %3, align 8
  %42 = getelementptr inbounds %struct.search_site, %struct.search_site* %41, i64 %38, i32 0, i32 0
  store i16 0, i16* %42, align 4
  %43 = load %struct.search_site*, %struct.search_site** %3, align 8
  %44 = getelementptr inbounds %struct.search_site, %struct.search_site* %43, i64 %38, i32 1
  store i32 %12, i32* %44, align 4
  %45 = add nuw nsw i64 %11, 4
  %46 = load %struct.search_site*, %struct.search_site** %3, align 8
  %47 = getelementptr inbounds %struct.search_site, %struct.search_site* %46, i64 %45, i32 0, i32 1
  store i16 %16, i16* %47, align 2
  %48 = load %struct.search_site*, %struct.search_site** %3, align 8
  %49 = getelementptr inbounds %struct.search_site, %struct.search_site* %48, i64 %45, i32 0, i32 0
  store i16 %16, i16* %49, align 4
  %50 = sub nsw i32 %19, %12
  %51 = load %struct.search_site*, %struct.search_site** %3, align 8
  %52 = getelementptr inbounds %struct.search_site, %struct.search_site* %51, i64 %45, i32 1
  store i32 %50, i32* %52, align 4
  %53 = add nuw nsw i64 %11, 5
  %54 = load %struct.search_site*, %struct.search_site** %3, align 8
  %55 = getelementptr inbounds %struct.search_site, %struct.search_site* %54, i64 %53, i32 0, i32 1
  store i16 %25, i16* %55, align 2
  %56 = load %struct.search_site*, %struct.search_site** %3, align 8
  %57 = getelementptr inbounds %struct.search_site, %struct.search_site* %56, i64 %53, i32 0, i32 0
  store i16 %16, i16* %57, align 4
  %58 = add nsw i32 %19, %12
  %59 = load %struct.search_site*, %struct.search_site** %3, align 8
  %60 = getelementptr inbounds %struct.search_site, %struct.search_site* %59, i64 %53, i32 1
  store i32 %58, i32* %60, align 4
  %61 = add nuw nsw i64 %11, 6
  %62 = load %struct.search_site*, %struct.search_site** %3, align 8
  %63 = getelementptr inbounds %struct.search_site, %struct.search_site* %62, i64 %61, i32 0, i32 1
  store i16 %16, i16* %63, align 2
  %64 = load %struct.search_site*, %struct.search_site** %3, align 8
  %65 = getelementptr inbounds %struct.search_site, %struct.search_site* %64, i64 %61, i32 0, i32 0
  store i16 %25, i16* %65, align 4
  %66 = sub nsw i32 %28, %12
  %67 = load %struct.search_site*, %struct.search_site** %3, align 8
  %68 = getelementptr inbounds %struct.search_site, %struct.search_site* %67, i64 %61, i32 1
  store i32 %66, i32* %68, align 4
  %69 = add nuw nsw i64 %11, 7
  %70 = load %struct.search_site*, %struct.search_site** %3, align 8
  %71 = getelementptr inbounds %struct.search_site, %struct.search_site* %70, i64 %69, i32 0, i32 1
  store i16 %25, i16* %71, align 2
  %72 = load %struct.search_site*, %struct.search_site** %3, align 8
  %73 = getelementptr inbounds %struct.search_site, %struct.search_site* %72, i64 %69, i32 0, i32 0
  store i16 %25, i16* %73, align 4
  %74 = add nsw i32 %28, %12
  %75 = load %struct.search_site*, %struct.search_site** %3, align 8
  %76 = getelementptr inbounds %struct.search_site, %struct.search_site* %75, i64 %69, i32 1
  store i32 %74, i32* %76, align 4
  %77 = add nuw nsw i64 %11, 8
  %78 = lshr i32 %12, 1
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %10

80:                                               ; preds = %10
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 12
  store i32 65, i32* %81, align 16
  %82 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 13
  store i32 8, i32* %82, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_find_best_sub_pixel_step_iteratively(%struct.macroblock*, %struct.block* nocapture readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, %union.int_mv* nocapture readonly, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, i32* nocapture, i32*) local_unnamed_addr #3 {
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %13 = load i8**, i8*** %12, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = bitcast %union.int_mv* %4 to %struct.MV*
  %20 = bitcast %union.int_mv* %4 to i16*
  %21 = load i16, i16* %20, align 4
  %22 = ashr i16 %21, 1
  %23 = sext i16 %22 to i32
  %24 = getelementptr inbounds %struct.MV, %struct.MV* %19, i64 0, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = ashr i16 %25, 1
  %27 = sext i16 %26 to i32
  %28 = bitcast %union.int_mv* %3 to %struct.MV*
  %29 = bitcast %union.int_mv* %3 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = sext i16 %30 to i32
  %32 = shl nsw i32 %31, 2
  %33 = getelementptr inbounds %struct.MV, %struct.MV* %28, i64 0, i32 1
  %34 = load i16, i16* %33, align 2
  %35 = sext i16 %34 to i32
  %36 = shl nsw i32 %35, 2
  %37 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #4
  store i32 -1431655766, i32* %11, align 4
  %38 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %39 = load i32, i32* %38, align 16
  %40 = shl nsw i32 %39, 2
  %41 = add nsw i16 %26, -1023
  %42 = sext i16 %41 to i32
  %43 = icmp sgt i32 %40, %42
  %44 = select i1 %43, i32 %40, i32 %42
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %46 = load i32, i32* %45, align 4
  %47 = shl nsw i32 %46, 2
  %48 = add nsw i16 %26, 1023
  %49 = sext i16 %48 to i32
  %50 = icmp slt i32 %47, %49
  %51 = select i1 %50, i32 %47, i32 %49
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %53 = load i32, i32* %52, align 8
  %54 = shl nsw i32 %53, 2
  %55 = add nsw i16 %22, -1023
  %56 = sext i16 %55 to i32
  %57 = icmp sgt i32 %54, %56
  %58 = select i1 %57, i32 %54, i32 %56
  %59 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %60 = load i32, i32* %59, align 4
  %61 = shl nsw i32 %60, 2
  %62 = add nsw i16 %22, 1023
  %63 = sext i16 %62 to i32
  %64 = icmp slt i32 %61, %63
  %65 = select i1 %64, i32 %61, i32 %63
  %66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %67 = load i32, i32* %66, align 16
  %68 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %69, i64 %72
  %74 = mul nsw i32 %67, %31
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = sext i16 %34 to i64
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = add nsw i32 %31, -3
  %80 = icmp slt i32 %79, %53
  %81 = sub nsw i32 %31, %53
  %82 = select i1 %80, i32 %81, i32 3
  %83 = add nsw i32 %31, 3
  %84 = icmp sgt i32 %83, %60
  %85 = sub nsw i32 %60, %31
  %86 = select i1 %84, i32 %85, i32 3
  %87 = add nsw i32 %35, -3
  %88 = icmp slt i32 %87, %39
  %89 = sub nsw i32 %35, %39
  %90 = select i1 %88, i32 %89, i32 3
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 6
  %93 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %92, align 8
  %94 = sub nsw i64 0, %91
  %95 = getelementptr inbounds i8, i8* %78, i64 %94
  %96 = mul nsw i32 %67, %82
  %97 = sext i32 %96 to i64
  %98 = sub nsw i64 0, %97
  %99 = getelementptr inbounds i8, i8* %95, i64 %98
  %100 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 0
  %101 = add nsw i32 %82, 16
  %102 = add nsw i32 %101, %86
  tail call void %93(i8* %99, i32 %67, i8* %100, i32 32, i32 %102) #4
  %103 = shl nsw i32 %82, 5
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 %104
  %106 = getelementptr inbounds i8, i8* %105, i64 %91
  %107 = load i16, i16* %29, align 4
  %108 = sext i16 %107 to i32
  %109 = shl nsw i32 %108, 5
  %110 = load i16, i16* %33, align 2
  %111 = sext i16 %110 to i32
  %112 = add nsw i32 %109, %111
  %113 = shl i16 %107, 3
  store i16 %113, i16* %29, align 4
  %114 = shl i16 %110, 3
  store i16 %114, i16* %33, align 2
  %115 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %116 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %115, align 8
  %117 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %118 = load i32, i32* %117, align 4
  %119 = tail call i32 %116(i8* %106, i32 32, i8* %18, i32 %118, i32* %9) #4
  store i32 %119, i32* %8, align 4
  %120 = icmp eq i32** %7, null
  br i1 %120, label %155, label %121

121:                                              ; preds = %10
  %122 = load i16, i16* %29, align 4
  %123 = sext i16 %122 to i32
  %124 = load i16, i16* %20, align 4
  %125 = sext i16 %124 to i32
  %126 = sub nsw i32 %123, %125
  %127 = ashr i32 %126, 1
  %128 = icmp slt i32 %127, 2047
  %129 = select i1 %128, i32 %127, i32 2047
  %130 = icmp sgt i32 %129, 0
  %131 = select i1 %130, i32 %129, i32 0
  %132 = load i16, i16* %33, align 2
  %133 = sext i16 %132 to i32
  %134 = load i16, i16* %24, align 2
  %135 = sext i16 %134 to i32
  %136 = sub nsw i32 %133, %135
  %137 = ashr i32 %136, 1
  %138 = icmp slt i32 %137, 2047
  %139 = select i1 %138, i32 %137, i32 2047
  %140 = icmp sgt i32 %139, 0
  %141 = select i1 %140, i32 %139, i32 0
  %142 = load i32*, i32** %7, align 8
  %143 = zext i32 %131 to i64
  %144 = getelementptr inbounds i32, i32* %142, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds i32*, i32** %7, i64 1
  %147 = load i32*, i32** %146, align 8
  %148 = zext i32 %141 to i64
  %149 = getelementptr inbounds i32, i32* %147, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = add nsw i32 %150, %145
  %152 = mul nsw i32 %151, %5
  %153 = add nsw i32 %152, 128
  %154 = ashr i32 %153, 8
  br label %155

155:                                              ; preds = %10, %121
  %156 = phi i32 [ %154, %121 ], [ 0, %10 ]
  %157 = add i32 %156, %119
  %158 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 2
  %159 = getelementptr inbounds i32*, i32** %7, i64 1
  br label %160

160:                                              ; preds = %531, %155
  %161 = phi i32 [ %32, %155 ], [ %532, %531 ]
  %162 = phi i32 [ %36, %155 ], [ %533, %531 ]
  %163 = phi i32 [ %157, %155 ], [ %534, %531 ]
  %164 = phi i32 [ 4, %155 ], [ %165, %531 ]
  %165 = add nsw i32 %164, -1
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %538, label %167

167:                                              ; preds = %160
  %168 = add nsw i32 %162, -2
  %169 = icmp slt i32 %168, %44
  %170 = icmp sgt i32 %168, %51
  %171 = or i1 %169, %170
  %172 = icmp slt i32 %161, %58
  %173 = or i1 %172, %171
  %174 = icmp sgt i32 %161, %65
  %175 = or i1 %174, %173
  br i1 %175, label %212, label %176

176:                                              ; preds = %167
  %177 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %178 = lshr i32 %161, 2
  %179 = shl i32 %178, 5
  %180 = ashr i32 %168, 2
  %181 = sub i32 %179, %112
  %182 = add i32 %181, %180
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %106, i64 %183
  %185 = shl i32 %168, 1
  %186 = and i32 %185, 6
  %187 = shl i32 %161, 1
  %188 = and i32 %187, 6
  %189 = load i32, i32* %117, align 4
  %190 = call i32 %177(i8* %184, i32 32, i32 %186, i32 %188, i8* %18, i32 %189, i32* nonnull %11) #4
  br i1 %120, label %206, label %191

191:                                              ; preds = %176
  %192 = load i32*, i32** %7, align 8
  %193 = sub nsw i32 %161, %23
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32* %192, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = load i32*, i32** %159, align 8
  %198 = sub nsw i32 %168, %27
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i32, i32* %197, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = add nsw i32 %201, %196
  %203 = mul nsw i32 %202, %5
  %204 = add nsw i32 %203, 128
  %205 = ashr i32 %204, 8
  br label %206

206:                                              ; preds = %176, %191
  %207 = phi i32 [ %205, %191 ], [ 0, %176 ]
  %208 = add nsw i32 %207, %190
  %209 = icmp ult i32 %208, %163
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  store i32 %190, i32* %8, align 4
  %211 = load i32, i32* %11, align 4
  store i32 %211, i32* %9, align 4
  br label %212

212:                                              ; preds = %167, %206, %210
  %213 = phi i32 [ %168, %210 ], [ %162, %206 ], [ %162, %167 ]
  %214 = phi i32 [ %208, %210 ], [ %163, %206 ], [ %163, %167 ]
  %215 = phi i32 [ %208, %210 ], [ %208, %206 ], [ -1, %167 ]
  %216 = add nsw i32 %162, 2
  %217 = icmp slt i32 %216, %44
  %218 = icmp sgt i32 %216, %51
  %219 = or i1 %217, %218
  %220 = or i1 %172, %219
  %221 = or i1 %174, %220
  br i1 %221, label %258, label %222

222:                                              ; preds = %212
  %223 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %224 = lshr i32 %161, 2
  %225 = shl i32 %224, 5
  %226 = ashr i32 %216, 2
  %227 = sub i32 %225, %112
  %228 = add i32 %227, %226
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %106, i64 %229
  %231 = shl i32 %216, 1
  %232 = and i32 %231, 6
  %233 = shl i32 %161, 1
  %234 = and i32 %233, 6
  %235 = load i32, i32* %117, align 4
  %236 = call i32 %223(i8* %230, i32 32, i32 %232, i32 %234, i8* %18, i32 %235, i32* nonnull %11) #4
  br i1 %120, label %252, label %237

237:                                              ; preds = %222
  %238 = load i32*, i32** %7, align 8
  %239 = sub nsw i32 %161, %23
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i32, i32* %238, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = load i32*, i32** %159, align 8
  %244 = sub nsw i32 %216, %27
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i32, i32* %243, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = add nsw i32 %247, %242
  %249 = mul nsw i32 %248, %5
  %250 = add nsw i32 %249, 128
  %251 = ashr i32 %250, 8
  br label %252

252:                                              ; preds = %222, %237
  %253 = phi i32 [ %251, %237 ], [ 0, %222 ]
  %254 = add nsw i32 %253, %236
  %255 = icmp ult i32 %254, %214
  br i1 %255, label %256, label %258

256:                                              ; preds = %252
  store i32 %236, i32* %8, align 4
  %257 = load i32, i32* %11, align 4
  store i32 %257, i32* %9, align 4
  br label %258

258:                                              ; preds = %212, %252, %256
  %259 = phi i32 [ %216, %256 ], [ %213, %252 ], [ %213, %212 ]
  %260 = phi i32 [ %254, %256 ], [ %214, %252 ], [ %214, %212 ]
  %261 = phi i32 [ %254, %256 ], [ %254, %252 ], [ -1, %212 ]
  %262 = icmp slt i32 %162, %44
  %263 = icmp sgt i32 %162, %51
  %264 = or i1 %262, %263
  br i1 %264, label %351, label %265

265:                                              ; preds = %258
  %266 = add nsw i32 %161, -2
  %267 = icmp slt i32 %266, %58
  %268 = icmp sgt i32 %266, %65
  %269 = or i1 %267, %268
  br i1 %269, label %306, label %270

270:                                              ; preds = %265
  %271 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %272 = lshr i32 %266, 2
  %273 = shl i32 %272, 5
  %274 = ashr i32 %162, 2
  %275 = sub nsw i32 %274, %112
  %276 = add i32 %275, %273
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* %106, i64 %277
  %279 = shl i32 %162, 1
  %280 = and i32 %279, 6
  %281 = shl i32 %266, 1
  %282 = and i32 %281, 6
  %283 = load i32, i32* %117, align 4
  %284 = call i32 %271(i8* %278, i32 32, i32 %280, i32 %282, i8* %18, i32 %283, i32* nonnull %11) #4
  br i1 %120, label %300, label %285

285:                                              ; preds = %270
  %286 = load i32*, i32** %7, align 8
  %287 = sub nsw i32 %266, %23
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i32, i32* %286, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = load i32*, i32** %159, align 8
  %292 = sub nsw i32 %162, %27
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i32, i32* %291, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = add nsw i32 %295, %290
  %297 = mul nsw i32 %296, %5
  %298 = add nsw i32 %297, 128
  %299 = ashr i32 %298, 8
  br label %300

300:                                              ; preds = %270, %285
  %301 = phi i32 [ %299, %285 ], [ 0, %270 ]
  %302 = add nsw i32 %301, %284
  %303 = icmp ult i32 %302, %260
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  store i32 %284, i32* %8, align 4
  %305 = load i32, i32* %11, align 4
  store i32 %305, i32* %9, align 4
  br label %306

306:                                              ; preds = %265, %300, %304
  %307 = phi i32 [ %161, %265 ], [ %161, %300 ], [ %266, %304 ]
  %308 = phi i32 [ %259, %265 ], [ %259, %300 ], [ %162, %304 ]
  %309 = phi i32 [ %260, %265 ], [ %260, %300 ], [ %302, %304 ]
  %310 = phi i32 [ -1, %265 ], [ %302, %300 ], [ %302, %304 ]
  %311 = add nsw i32 %161, 2
  %312 = icmp slt i32 %311, %58
  %313 = icmp sgt i32 %311, %65
  %314 = or i1 %312, %313
  br i1 %314, label %351, label %315

315:                                              ; preds = %306
  %316 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %317 = lshr i32 %311, 2
  %318 = shl i32 %317, 5
  %319 = ashr i32 %162, 2
  %320 = sub nsw i32 %319, %112
  %321 = add i32 %320, %318
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i8, i8* %106, i64 %322
  %324 = shl i32 %162, 1
  %325 = and i32 %324, 6
  %326 = shl i32 %311, 1
  %327 = and i32 %326, 6
  %328 = load i32, i32* %117, align 4
  %329 = call i32 %316(i8* %323, i32 32, i32 %325, i32 %327, i8* %18, i32 %328, i32* nonnull %11) #4
  br i1 %120, label %345, label %330

330:                                              ; preds = %315
  %331 = load i32*, i32** %7, align 8
  %332 = sub nsw i32 %311, %23
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i32, i32* %331, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = load i32*, i32** %159, align 8
  %337 = sub nsw i32 %162, %27
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds i32, i32* %336, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = add nsw i32 %340, %335
  %342 = mul nsw i32 %341, %5
  %343 = add nsw i32 %342, 128
  %344 = ashr i32 %343, 8
  br label %345

345:                                              ; preds = %315, %330
  %346 = phi i32 [ %344, %330 ], [ 0, %315 ]
  %347 = add nsw i32 %346, %329
  %348 = icmp ult i32 %347, %309
  br i1 %348, label %349, label %351

349:                                              ; preds = %345
  store i32 %329, i32* %8, align 4
  %350 = load i32, i32* %11, align 4
  store i32 %350, i32* %9, align 4
  br label %351

351:                                              ; preds = %258, %306, %345, %349
  %352 = phi i32 [ %310, %349 ], [ %310, %345 ], [ %310, %306 ], [ -1, %258 ]
  %353 = phi i32 [ %311, %349 ], [ %307, %345 ], [ %307, %306 ], [ %161, %258 ]
  %354 = phi i32 [ %162, %349 ], [ %308, %345 ], [ %308, %306 ], [ %259, %258 ]
  %355 = phi i32 [ %347, %349 ], [ %309, %345 ], [ %309, %306 ], [ %260, %258 ]
  %356 = phi i32 [ %347, %349 ], [ %347, %345 ], [ -1, %306 ], [ -1, %258 ]
  %357 = icmp uge i32 %215, %261
  %358 = zext i1 %357 to i32
  %359 = icmp ult i32 %352, %356
  %360 = select i1 %359, i32 0, i32 2
  %361 = or i32 %360, %358
  switch i32 %361, label %530 [
    i32 0, label %362
    i32 1, label %404
    i32 2, label %446
    i32 3, label %488
  ]

362:                                              ; preds = %351
  br i1 %171, label %531, label %363

363:                                              ; preds = %362
  %364 = add nsw i32 %161, -2
  %365 = icmp slt i32 %364, %58
  %366 = icmp sgt i32 %364, %65
  %367 = or i1 %365, %366
  br i1 %367, label %531, label %368

368:                                              ; preds = %363
  %369 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %370 = lshr i32 %364, 2
  %371 = shl i32 %370, 5
  %372 = ashr i32 %168, 2
  %373 = sub nsw i32 %372, %112
  %374 = add i32 %373, %371
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds i8, i8* %106, i64 %375
  %377 = shl i32 %168, 1
  %378 = and i32 %377, 6
  %379 = shl i32 %364, 1
  %380 = and i32 %379, 6
  %381 = load i32, i32* %117, align 4
  %382 = call i32 %369(i8* %376, i32 32, i32 %378, i32 %380, i8* %18, i32 %381, i32* nonnull %11) #4
  br i1 %120, label %398, label %383

383:                                              ; preds = %368
  %384 = load i32*, i32** %7, align 8
  %385 = sub nsw i32 %364, %23
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds i32, i32* %384, i64 %386
  %388 = load i32, i32* %387, align 4
  %389 = load i32*, i32** %159, align 8
  %390 = sub nsw i32 %168, %27
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i32, i32* %389, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = add nsw i32 %393, %388
  %395 = mul nsw i32 %394, %5
  %396 = add nsw i32 %395, 128
  %397 = ashr i32 %396, 8
  br label %398

398:                                              ; preds = %368, %383
  %399 = phi i32 [ %397, %383 ], [ 0, %368 ]
  %400 = add nsw i32 %399, %382
  %401 = icmp ult i32 %400, %355
  br i1 %401, label %402, label %531

402:                                              ; preds = %398
  store i32 %382, i32* %8, align 4
  %403 = load i32, i32* %11, align 4
  store i32 %403, i32* %9, align 4
  br label %531

404:                                              ; preds = %351
  br i1 %219, label %531, label %405

405:                                              ; preds = %404
  %406 = add nsw i32 %161, -2
  %407 = icmp slt i32 %406, %58
  %408 = icmp sgt i32 %406, %65
  %409 = or i1 %407, %408
  br i1 %409, label %531, label %410

410:                                              ; preds = %405
  %411 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %412 = lshr i32 %406, 2
  %413 = shl i32 %412, 5
  %414 = ashr i32 %216, 2
  %415 = sub nsw i32 %414, %112
  %416 = add i32 %415, %413
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds i8, i8* %106, i64 %417
  %419 = shl i32 %216, 1
  %420 = and i32 %419, 6
  %421 = shl i32 %406, 1
  %422 = and i32 %421, 6
  %423 = load i32, i32* %117, align 4
  %424 = call i32 %411(i8* %418, i32 32, i32 %420, i32 %422, i8* %18, i32 %423, i32* nonnull %11) #4
  br i1 %120, label %440, label %425

425:                                              ; preds = %410
  %426 = load i32*, i32** %7, align 8
  %427 = sub nsw i32 %406, %23
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i32, i32* %426, i64 %428
  %430 = load i32, i32* %429, align 4
  %431 = load i32*, i32** %159, align 8
  %432 = sub nsw i32 %216, %27
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds i32, i32* %431, i64 %433
  %435 = load i32, i32* %434, align 4
  %436 = add nsw i32 %435, %430
  %437 = mul nsw i32 %436, %5
  %438 = add nsw i32 %437, 128
  %439 = ashr i32 %438, 8
  br label %440

440:                                              ; preds = %410, %425
  %441 = phi i32 [ %439, %425 ], [ 0, %410 ]
  %442 = add nsw i32 %441, %424
  %443 = icmp ult i32 %442, %355
  br i1 %443, label %444, label %531

444:                                              ; preds = %440
  store i32 %424, i32* %8, align 4
  %445 = load i32, i32* %11, align 4
  store i32 %445, i32* %9, align 4
  br label %531

446:                                              ; preds = %351
  br i1 %171, label %531, label %447

447:                                              ; preds = %446
  %448 = add nsw i32 %161, 2
  %449 = icmp slt i32 %448, %58
  %450 = icmp sgt i32 %448, %65
  %451 = or i1 %449, %450
  br i1 %451, label %531, label %452

452:                                              ; preds = %447
  %453 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %454 = lshr i32 %448, 2
  %455 = shl i32 %454, 5
  %456 = ashr i32 %168, 2
  %457 = sub nsw i32 %456, %112
  %458 = add i32 %457, %455
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds i8, i8* %106, i64 %459
  %461 = shl i32 %168, 1
  %462 = and i32 %461, 6
  %463 = shl i32 %448, 1
  %464 = and i32 %463, 6
  %465 = load i32, i32* %117, align 4
  %466 = call i32 %453(i8* %460, i32 32, i32 %462, i32 %464, i8* %18, i32 %465, i32* nonnull %11) #4
  br i1 %120, label %482, label %467

467:                                              ; preds = %452
  %468 = load i32*, i32** %7, align 8
  %469 = sub nsw i32 %448, %23
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds i32, i32* %468, i64 %470
  %472 = load i32, i32* %471, align 4
  %473 = load i32*, i32** %159, align 8
  %474 = sub nsw i32 %168, %27
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds i32, i32* %473, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = add nsw i32 %477, %472
  %479 = mul nsw i32 %478, %5
  %480 = add nsw i32 %479, 128
  %481 = ashr i32 %480, 8
  br label %482

482:                                              ; preds = %452, %467
  %483 = phi i32 [ %481, %467 ], [ 0, %452 ]
  %484 = add nsw i32 %483, %466
  %485 = icmp ult i32 %484, %355
  br i1 %485, label %486, label %531

486:                                              ; preds = %482
  store i32 %466, i32* %8, align 4
  %487 = load i32, i32* %11, align 4
  store i32 %487, i32* %9, align 4
  br label %531

488:                                              ; preds = %351
  br i1 %219, label %531, label %489

489:                                              ; preds = %488
  %490 = add nsw i32 %161, 2
  %491 = icmp slt i32 %490, %58
  %492 = icmp sgt i32 %490, %65
  %493 = or i1 %491, %492
  br i1 %493, label %531, label %494

494:                                              ; preds = %489
  %495 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %496 = lshr i32 %490, 2
  %497 = shl i32 %496, 5
  %498 = ashr i32 %216, 2
  %499 = sub nsw i32 %498, %112
  %500 = add i32 %499, %497
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i8, i8* %106, i64 %501
  %503 = shl i32 %216, 1
  %504 = and i32 %503, 6
  %505 = shl i32 %490, 1
  %506 = and i32 %505, 6
  %507 = load i32, i32* %117, align 4
  %508 = call i32 %495(i8* %502, i32 32, i32 %504, i32 %506, i8* %18, i32 %507, i32* nonnull %11) #4
  br i1 %120, label %524, label %509

509:                                              ; preds = %494
  %510 = load i32*, i32** %7, align 8
  %511 = sub nsw i32 %490, %23
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds i32, i32* %510, i64 %512
  %514 = load i32, i32* %513, align 4
  %515 = load i32*, i32** %159, align 8
  %516 = sub nsw i32 %216, %27
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds i32, i32* %515, i64 %517
  %519 = load i32, i32* %518, align 4
  %520 = add nsw i32 %519, %514
  %521 = mul nsw i32 %520, %5
  %522 = add nsw i32 %521, 128
  %523 = ashr i32 %522, 8
  br label %524

524:                                              ; preds = %494, %509
  %525 = phi i32 [ %523, %509 ], [ 0, %494 ]
  %526 = add nsw i32 %525, %508
  %527 = icmp ult i32 %526, %355
  br i1 %527, label %528, label %531

528:                                              ; preds = %524
  store i32 %508, i32* %8, align 4
  %529 = load i32, i32* %11, align 4
  store i32 %529, i32* %9, align 4
  br label %531

530:                                              ; preds = %351
  unreachable

531:                                              ; preds = %489, %488, %447, %446, %405, %404, %363, %362, %528, %524, %486, %482, %444, %440, %402, %398
  %532 = phi i32 [ %490, %528 ], [ %353, %524 ], [ %448, %486 ], [ %353, %482 ], [ %406, %444 ], [ %353, %440 ], [ %364, %402 ], [ %353, %398 ], [ %353, %362 ], [ %353, %363 ], [ %353, %404 ], [ %353, %405 ], [ %353, %446 ], [ %353, %447 ], [ %353, %488 ], [ %353, %489 ]
  %533 = phi i32 [ %216, %528 ], [ %354, %524 ], [ %168, %486 ], [ %354, %482 ], [ %216, %444 ], [ %354, %440 ], [ %168, %402 ], [ %354, %398 ], [ %354, %362 ], [ %354, %363 ], [ %354, %404 ], [ %354, %405 ], [ %354, %446 ], [ %354, %447 ], [ %354, %488 ], [ %354, %489 ]
  %534 = phi i32 [ %526, %528 ], [ %355, %524 ], [ %484, %486 ], [ %355, %482 ], [ %442, %444 ], [ %355, %440 ], [ %400, %402 ], [ %355, %398 ], [ %355, %362 ], [ %355, %363 ], [ %355, %404 ], [ %355, %405 ], [ %355, %446 ], [ %355, %447 ], [ %355, %488 ], [ %355, %489 ]
  %535 = icmp eq i32 %161, %532
  %536 = icmp eq i32 %162, %533
  %537 = and i1 %535, %536
  br i1 %537, label %538, label %160

538:                                              ; preds = %531, %160
  %539 = phi i32 [ %163, %160 ], [ %534, %531 ]
  br label %540

540:                                              ; preds = %538, %913
  %541 = phi i32 [ %914, %913 ], [ %161, %538 ]
  %542 = phi i32 [ %915, %913 ], [ %162, %538 ]
  %543 = phi i32 [ %916, %913 ], [ %539, %538 ]
  %544 = phi i32 [ %545, %913 ], [ 4, %538 ]
  %545 = add nsw i32 %544, -1
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %920, label %547

547:                                              ; preds = %540
  %548 = add nsw i32 %542, -1
  %549 = icmp sle i32 %542, %44
  %550 = icmp sgt i32 %548, %51
  %551 = or i1 %549, %550
  %552 = icmp slt i32 %541, %58
  %553 = or i1 %552, %551
  %554 = icmp sgt i32 %541, %65
  %555 = or i1 %554, %553
  br i1 %555, label %592, label %556

556:                                              ; preds = %547
  %557 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %558 = lshr i32 %541, 2
  %559 = shl i32 %558, 5
  %560 = ashr i32 %548, 2
  %561 = sub i32 %559, %112
  %562 = add i32 %561, %560
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds i8, i8* %106, i64 %563
  %565 = shl i32 %548, 1
  %566 = and i32 %565, 6
  %567 = shl i32 %541, 1
  %568 = and i32 %567, 6
  %569 = load i32, i32* %117, align 4
  %570 = call i32 %557(i8* %564, i32 32, i32 %566, i32 %568, i8* %18, i32 %569, i32* nonnull %11) #4
  br i1 %120, label %586, label %571

571:                                              ; preds = %556
  %572 = load i32*, i32** %7, align 8
  %573 = sub nsw i32 %541, %23
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds i32, i32* %572, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = load i32*, i32** %159, align 8
  %578 = sub nsw i32 %548, %27
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds i32, i32* %577, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = add nsw i32 %581, %576
  %583 = mul nsw i32 %582, %5
  %584 = add nsw i32 %583, 128
  %585 = ashr i32 %584, 8
  br label %586

586:                                              ; preds = %556, %571
  %587 = phi i32 [ %585, %571 ], [ 0, %556 ]
  %588 = add nsw i32 %587, %570
  %589 = icmp ult i32 %588, %543
  br i1 %589, label %590, label %592

590:                                              ; preds = %586
  store i32 %570, i32* %8, align 4
  %591 = load i32, i32* %11, align 4
  store i32 %591, i32* %9, align 4
  br label %592

592:                                              ; preds = %547, %586, %590
  %593 = phi i32 [ %548, %590 ], [ %542, %586 ], [ %542, %547 ]
  %594 = phi i32 [ %588, %590 ], [ %543, %586 ], [ %543, %547 ]
  %595 = phi i32 [ %588, %590 ], [ %588, %586 ], [ -1, %547 ]
  %596 = add nsw i32 %542, 1
  %597 = icmp sge i32 %596, %44
  %598 = icmp slt i32 %542, %51
  %599 = and i1 %598, %597
  %600 = and i1 %598, %597
  %601 = xor i1 %600, true
  %602 = or i1 %552, %601
  %603 = or i1 %554, %602
  br i1 %603, label %640, label %604

604:                                              ; preds = %592
  %605 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %606 = lshr i32 %541, 2
  %607 = shl i32 %606, 5
  %608 = ashr i32 %596, 2
  %609 = sub i32 %607, %112
  %610 = add i32 %609, %608
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds i8, i8* %106, i64 %611
  %613 = shl i32 %596, 1
  %614 = and i32 %613, 6
  %615 = shl i32 %541, 1
  %616 = and i32 %615, 6
  %617 = load i32, i32* %117, align 4
  %618 = call i32 %605(i8* %612, i32 32, i32 %614, i32 %616, i8* %18, i32 %617, i32* nonnull %11) #4
  br i1 %120, label %634, label %619

619:                                              ; preds = %604
  %620 = load i32*, i32** %7, align 8
  %621 = sub nsw i32 %541, %23
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds i32, i32* %620, i64 %622
  %624 = load i32, i32* %623, align 4
  %625 = load i32*, i32** %159, align 8
  %626 = sub nsw i32 %596, %27
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds i32, i32* %625, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = add nsw i32 %629, %624
  %631 = mul nsw i32 %630, %5
  %632 = add nsw i32 %631, 128
  %633 = ashr i32 %632, 8
  br label %634

634:                                              ; preds = %604, %619
  %635 = phi i32 [ %633, %619 ], [ 0, %604 ]
  %636 = add nsw i32 %635, %618
  %637 = icmp ult i32 %636, %594
  br i1 %637, label %638, label %640

638:                                              ; preds = %634
  store i32 %618, i32* %8, align 4
  %639 = load i32, i32* %11, align 4
  store i32 %639, i32* %9, align 4
  br label %640

640:                                              ; preds = %592, %634, %638
  %641 = phi i32 [ %596, %638 ], [ %593, %634 ], [ %593, %592 ]
  %642 = phi i32 [ %636, %638 ], [ %594, %634 ], [ %594, %592 ]
  %643 = phi i32 [ %636, %638 ], [ %636, %634 ], [ -1, %592 ]
  %644 = icmp slt i32 %542, %44
  %645 = icmp sgt i32 %542, %51
  %646 = or i1 %644, %645
  br i1 %646, label %733, label %647

647:                                              ; preds = %640
  %648 = add nsw i32 %541, -1
  %649 = icmp sle i32 %541, %58
  %650 = icmp sgt i32 %648, %65
  %651 = or i1 %649, %650
  br i1 %651, label %688, label %652

652:                                              ; preds = %647
  %653 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %654 = lshr i32 %648, 2
  %655 = shl i32 %654, 5
  %656 = ashr i32 %542, 2
  %657 = sub nsw i32 %656, %112
  %658 = add i32 %657, %655
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds i8, i8* %106, i64 %659
  %661 = shl i32 %542, 1
  %662 = and i32 %661, 6
  %663 = shl i32 %648, 1
  %664 = and i32 %663, 6
  %665 = load i32, i32* %117, align 4
  %666 = call i32 %653(i8* %660, i32 32, i32 %662, i32 %664, i8* %18, i32 %665, i32* nonnull %11) #4
  br i1 %120, label %682, label %667

667:                                              ; preds = %652
  %668 = load i32*, i32** %7, align 8
  %669 = sub nsw i32 %648, %23
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds i32, i32* %668, i64 %670
  %672 = load i32, i32* %671, align 4
  %673 = load i32*, i32** %159, align 8
  %674 = sub nsw i32 %542, %27
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds i32, i32* %673, i64 %675
  %677 = load i32, i32* %676, align 4
  %678 = add nsw i32 %677, %672
  %679 = mul nsw i32 %678, %5
  %680 = add nsw i32 %679, 128
  %681 = ashr i32 %680, 8
  br label %682

682:                                              ; preds = %652, %667
  %683 = phi i32 [ %681, %667 ], [ 0, %652 ]
  %684 = add nsw i32 %683, %666
  %685 = icmp ult i32 %684, %642
  br i1 %685, label %686, label %688

686:                                              ; preds = %682
  store i32 %666, i32* %8, align 4
  %687 = load i32, i32* %11, align 4
  store i32 %687, i32* %9, align 4
  br label %688

688:                                              ; preds = %647, %682, %686
  %689 = phi i32 [ %541, %647 ], [ %541, %682 ], [ %648, %686 ]
  %690 = phi i32 [ %641, %647 ], [ %641, %682 ], [ %542, %686 ]
  %691 = phi i32 [ %642, %647 ], [ %642, %682 ], [ %684, %686 ]
  %692 = phi i32 [ -1, %647 ], [ %684, %682 ], [ %684, %686 ]
  %693 = add nsw i32 %541, 1
  %694 = icmp sge i32 %693, %58
  %695 = icmp slt i32 %541, %65
  %696 = and i1 %695, %694
  br i1 %696, label %697, label %733

697:                                              ; preds = %688
  %698 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %699 = lshr i32 %693, 2
  %700 = shl i32 %699, 5
  %701 = ashr i32 %542, 2
  %702 = sub nsw i32 %701, %112
  %703 = add i32 %702, %700
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds i8, i8* %106, i64 %704
  %706 = shl i32 %542, 1
  %707 = and i32 %706, 6
  %708 = shl i32 %693, 1
  %709 = and i32 %708, 6
  %710 = load i32, i32* %117, align 4
  %711 = call i32 %698(i8* %705, i32 32, i32 %707, i32 %709, i8* %18, i32 %710, i32* nonnull %11) #4
  br i1 %120, label %727, label %712

712:                                              ; preds = %697
  %713 = load i32*, i32** %7, align 8
  %714 = sub nsw i32 %693, %23
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds i32, i32* %713, i64 %715
  %717 = load i32, i32* %716, align 4
  %718 = load i32*, i32** %159, align 8
  %719 = sub nsw i32 %542, %27
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds i32, i32* %718, i64 %720
  %722 = load i32, i32* %721, align 4
  %723 = add nsw i32 %722, %717
  %724 = mul nsw i32 %723, %5
  %725 = add nsw i32 %724, 128
  %726 = ashr i32 %725, 8
  br label %727

727:                                              ; preds = %697, %712
  %728 = phi i32 [ %726, %712 ], [ 0, %697 ]
  %729 = add nsw i32 %728, %711
  %730 = icmp ult i32 %729, %691
  br i1 %730, label %731, label %733

731:                                              ; preds = %727
  store i32 %711, i32* %8, align 4
  %732 = load i32, i32* %11, align 4
  store i32 %732, i32* %9, align 4
  br label %733

733:                                              ; preds = %640, %688, %727, %731
  %734 = phi i32 [ %692, %731 ], [ %692, %727 ], [ %692, %688 ], [ -1, %640 ]
  %735 = phi i32 [ %693, %731 ], [ %689, %727 ], [ %689, %688 ], [ %541, %640 ]
  %736 = phi i32 [ %542, %731 ], [ %690, %727 ], [ %690, %688 ], [ %641, %640 ]
  %737 = phi i32 [ %729, %731 ], [ %691, %727 ], [ %691, %688 ], [ %642, %640 ]
  %738 = phi i32 [ %729, %731 ], [ %729, %727 ], [ -1, %688 ], [ -1, %640 ]
  %739 = icmp uge i32 %595, %643
  %740 = zext i1 %739 to i32
  %741 = icmp ult i32 %734, %738
  %742 = select i1 %741, i32 0, i32 2
  %743 = or i32 %742, %740
  switch i32 %743, label %912 [
    i32 0, label %744
    i32 1, label %786
    i32 2, label %828
    i32 3, label %870
  ]

744:                                              ; preds = %733
  br i1 %551, label %913, label %745

745:                                              ; preds = %744
  %746 = add nsw i32 %541, -1
  %747 = icmp sle i32 %541, %58
  %748 = icmp sgt i32 %746, %65
  %749 = or i1 %747, %748
  br i1 %749, label %913, label %750

750:                                              ; preds = %745
  %751 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %752 = lshr i32 %746, 2
  %753 = shl i32 %752, 5
  %754 = ashr i32 %548, 2
  %755 = sub nsw i32 %754, %112
  %756 = add i32 %755, %753
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds i8, i8* %106, i64 %757
  %759 = shl i32 %548, 1
  %760 = and i32 %759, 6
  %761 = shl i32 %746, 1
  %762 = and i32 %761, 6
  %763 = load i32, i32* %117, align 4
  %764 = call i32 %751(i8* %758, i32 32, i32 %760, i32 %762, i8* %18, i32 %763, i32* nonnull %11) #4
  br i1 %120, label %780, label %765

765:                                              ; preds = %750
  %766 = load i32*, i32** %7, align 8
  %767 = sub nsw i32 %746, %23
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds i32, i32* %766, i64 %768
  %770 = load i32, i32* %769, align 4
  %771 = load i32*, i32** %159, align 8
  %772 = sub nsw i32 %548, %27
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds i32, i32* %771, i64 %773
  %775 = load i32, i32* %774, align 4
  %776 = add nsw i32 %775, %770
  %777 = mul nsw i32 %776, %5
  %778 = add nsw i32 %777, 128
  %779 = ashr i32 %778, 8
  br label %780

780:                                              ; preds = %750, %765
  %781 = phi i32 [ %779, %765 ], [ 0, %750 ]
  %782 = add nsw i32 %781, %764
  %783 = icmp ult i32 %782, %737
  br i1 %783, label %784, label %913

784:                                              ; preds = %780
  store i32 %764, i32* %8, align 4
  %785 = load i32, i32* %11, align 4
  store i32 %785, i32* %9, align 4
  br label %913

786:                                              ; preds = %733
  br i1 %599, label %787, label %913

787:                                              ; preds = %786
  %788 = add nsw i32 %541, -1
  %789 = icmp sle i32 %541, %58
  %790 = icmp sgt i32 %788, %65
  %791 = or i1 %789, %790
  br i1 %791, label %913, label %792

792:                                              ; preds = %787
  %793 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %794 = lshr i32 %788, 2
  %795 = shl i32 %794, 5
  %796 = ashr i32 %596, 2
  %797 = sub nsw i32 %796, %112
  %798 = add i32 %797, %795
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds i8, i8* %106, i64 %799
  %801 = shl i32 %596, 1
  %802 = and i32 %801, 6
  %803 = shl i32 %788, 1
  %804 = and i32 %803, 6
  %805 = load i32, i32* %117, align 4
  %806 = call i32 %793(i8* %800, i32 32, i32 %802, i32 %804, i8* %18, i32 %805, i32* nonnull %11) #4
  br i1 %120, label %822, label %807

807:                                              ; preds = %792
  %808 = load i32*, i32** %7, align 8
  %809 = sub nsw i32 %788, %23
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds i32, i32* %808, i64 %810
  %812 = load i32, i32* %811, align 4
  %813 = load i32*, i32** %159, align 8
  %814 = sub nsw i32 %596, %27
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds i32, i32* %813, i64 %815
  %817 = load i32, i32* %816, align 4
  %818 = add nsw i32 %817, %812
  %819 = mul nsw i32 %818, %5
  %820 = add nsw i32 %819, 128
  %821 = ashr i32 %820, 8
  br label %822

822:                                              ; preds = %792, %807
  %823 = phi i32 [ %821, %807 ], [ 0, %792 ]
  %824 = add nsw i32 %823, %806
  %825 = icmp ult i32 %824, %737
  br i1 %825, label %826, label %913

826:                                              ; preds = %822
  store i32 %806, i32* %8, align 4
  %827 = load i32, i32* %11, align 4
  store i32 %827, i32* %9, align 4
  br label %913

828:                                              ; preds = %733
  br i1 %551, label %913, label %829

829:                                              ; preds = %828
  %830 = add nsw i32 %541, 1
  %831 = icmp sge i32 %830, %58
  %832 = icmp slt i32 %541, %65
  %833 = and i1 %832, %831
  br i1 %833, label %834, label %913

834:                                              ; preds = %829
  %835 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %836 = lshr i32 %830, 2
  %837 = shl i32 %836, 5
  %838 = ashr i32 %548, 2
  %839 = sub nsw i32 %838, %112
  %840 = add i32 %839, %837
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds i8, i8* %106, i64 %841
  %843 = shl i32 %548, 1
  %844 = and i32 %843, 6
  %845 = shl i32 %830, 1
  %846 = and i32 %845, 6
  %847 = load i32, i32* %117, align 4
  %848 = call i32 %835(i8* %842, i32 32, i32 %844, i32 %846, i8* %18, i32 %847, i32* nonnull %11) #4
  br i1 %120, label %864, label %849

849:                                              ; preds = %834
  %850 = load i32*, i32** %7, align 8
  %851 = sub nsw i32 %830, %23
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds i32, i32* %850, i64 %852
  %854 = load i32, i32* %853, align 4
  %855 = load i32*, i32** %159, align 8
  %856 = sub nsw i32 %548, %27
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds i32, i32* %855, i64 %857
  %859 = load i32, i32* %858, align 4
  %860 = add nsw i32 %859, %854
  %861 = mul nsw i32 %860, %5
  %862 = add nsw i32 %861, 128
  %863 = ashr i32 %862, 8
  br label %864

864:                                              ; preds = %834, %849
  %865 = phi i32 [ %863, %849 ], [ 0, %834 ]
  %866 = add nsw i32 %865, %848
  %867 = icmp ult i32 %866, %737
  br i1 %867, label %868, label %913

868:                                              ; preds = %864
  store i32 %848, i32* %8, align 4
  %869 = load i32, i32* %11, align 4
  store i32 %869, i32* %9, align 4
  br label %913

870:                                              ; preds = %733
  br i1 %599, label %871, label %913

871:                                              ; preds = %870
  %872 = add nsw i32 %541, 1
  %873 = icmp sge i32 %872, %58
  %874 = icmp slt i32 %541, %65
  %875 = and i1 %874, %873
  br i1 %875, label %876, label %913

876:                                              ; preds = %871
  %877 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %158, align 8
  %878 = lshr i32 %872, 2
  %879 = shl i32 %878, 5
  %880 = ashr i32 %596, 2
  %881 = sub nsw i32 %880, %112
  %882 = add i32 %881, %879
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds i8, i8* %106, i64 %883
  %885 = shl i32 %596, 1
  %886 = and i32 %885, 6
  %887 = shl i32 %872, 1
  %888 = and i32 %887, 6
  %889 = load i32, i32* %117, align 4
  %890 = call i32 %877(i8* %884, i32 32, i32 %886, i32 %888, i8* %18, i32 %889, i32* nonnull %11) #4
  br i1 %120, label %906, label %891

891:                                              ; preds = %876
  %892 = load i32*, i32** %7, align 8
  %893 = sub nsw i32 %872, %23
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds i32, i32* %892, i64 %894
  %896 = load i32, i32* %895, align 4
  %897 = load i32*, i32** %159, align 8
  %898 = sub nsw i32 %596, %27
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds i32, i32* %897, i64 %899
  %901 = load i32, i32* %900, align 4
  %902 = add nsw i32 %901, %896
  %903 = mul nsw i32 %902, %5
  %904 = add nsw i32 %903, 128
  %905 = ashr i32 %904, 8
  br label %906

906:                                              ; preds = %876, %891
  %907 = phi i32 [ %905, %891 ], [ 0, %876 ]
  %908 = add nsw i32 %907, %890
  %909 = icmp ult i32 %908, %737
  br i1 %909, label %910, label %913

910:                                              ; preds = %906
  store i32 %890, i32* %8, align 4
  %911 = load i32, i32* %11, align 4
  store i32 %911, i32* %9, align 4
  br label %913

912:                                              ; preds = %733
  unreachable

913:                                              ; preds = %870, %871, %828, %829, %786, %787, %744, %745, %910, %906, %868, %864, %826, %822, %784, %780
  %914 = phi i32 [ %872, %910 ], [ %735, %906 ], [ %830, %868 ], [ %735, %864 ], [ %788, %826 ], [ %735, %822 ], [ %746, %784 ], [ %735, %780 ], [ %735, %745 ], [ %735, %744 ], [ %735, %787 ], [ %735, %786 ], [ %735, %829 ], [ %735, %828 ], [ %735, %871 ], [ %735, %870 ]
  %915 = phi i32 [ %596, %910 ], [ %736, %906 ], [ %548, %868 ], [ %736, %864 ], [ %596, %826 ], [ %736, %822 ], [ %548, %784 ], [ %736, %780 ], [ %736, %745 ], [ %736, %744 ], [ %736, %787 ], [ %736, %786 ], [ %736, %829 ], [ %736, %828 ], [ %736, %871 ], [ %736, %870 ]
  %916 = phi i32 [ %908, %910 ], [ %737, %906 ], [ %866, %868 ], [ %737, %864 ], [ %824, %826 ], [ %737, %822 ], [ %782, %784 ], [ %737, %780 ], [ %737, %745 ], [ %737, %744 ], [ %737, %787 ], [ %737, %786 ], [ %737, %829 ], [ %737, %828 ], [ %737, %871 ], [ %737, %870 ]
  %917 = icmp eq i32 %541, %914
  %918 = icmp eq i32 %542, %915
  %919 = and i1 %917, %918
  br i1 %919, label %920, label %540

920:                                              ; preds = %913, %540
  %921 = phi i32 [ %543, %540 ], [ %916, %913 ]
  %922 = trunc i32 %541 to i16
  %923 = shl i16 %922, 1
  store i16 %923, i16* %29, align 4
  %924 = trunc i32 %542 to i16
  %925 = shl i16 %924, 1
  store i16 %925, i16* %33, align 2
  %926 = sext i16 %925 to i32
  %927 = load i16, i16* %24, align 2
  %928 = sext i16 %927 to i32
  %929 = sub nsw i32 %926, %928
  %930 = icmp slt i32 %929, 0
  %931 = sub nsw i32 0, %929
  %932 = select i1 %930, i32 %931, i32 %929
  %933 = icmp sgt i32 %932, 2040
  br i1 %933, label %944, label %934

934:                                              ; preds = %920
  %935 = sext i16 %923 to i32
  %936 = load i16, i16* %20, align 4
  %937 = sext i16 %936 to i32
  %938 = sub nsw i32 %935, %937
  %939 = icmp slt i32 %938, 0
  %940 = sub nsw i32 0, %938
  %941 = select i1 %939, i32 %940, i32 %938
  %942 = icmp sgt i32 %941, 2040
  %943 = select i1 %942, i32 2147483647, i32 %921
  br label %944

944:                                              ; preds = %934, %920
  %945 = phi i32 [ 2147483647, %920 ], [ %943, %934 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #4
  ret i32 %945
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_find_best_sub_pixel_step(%struct.macroblock*, %struct.block* readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, %union.int_mv* readonly, i32, %struct.variance_vtable* readonly, i32** readonly, i32* nocapture, i32*) local_unnamed_addr #3 {
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %13 = load i8**, i8*** %12, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #4
  store i32 -1431655766, i32* %11, align 4
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %21 = load i32, i32* %20, align 16
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = bitcast %union.int_mv* %3 to %struct.MV*
  %29 = bitcast %union.int_mv* %3 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = sext i16 %30 to i32
  %32 = mul nsw i32 %21, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %27, i64 %33
  %35 = getelementptr inbounds %struct.MV, %struct.MV* %28, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 6
  %40 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %39, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 -1
  %42 = sext i32 %21 to i64
  %43 = sub nsw i64 0, %42
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 0
  tail call void %40(i8* %44, i32 %21, i8* %45, i32 32, i32 18) #4
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 33
  %47 = load i16, i16* %29, align 4
  %48 = shl i16 %47, 3
  store i16 %48, i16* %29, align 4
  %49 = load i16, i16* %35, align 2
  %50 = shl i16 %49, 3
  store i16 %50, i16* %35, align 2
  %51 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %52 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %51, align 8
  %53 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %54 = load i32, i32* %53, align 4
  %55 = tail call i32 %52(i8* %46, i32 32, i8* %18, i32 %54, i32* %9) #4
  store i32 %55, i32* %8, align 4
  %56 = icmp eq i32** %7, null
  br i1 %56, label %94, label %57

57:                                               ; preds = %10
  %58 = load i16, i16* %29, align 4
  %59 = sext i16 %58 to i32
  %60 = bitcast %union.int_mv* %4 to %struct.MV*
  %61 = bitcast %union.int_mv* %4 to i16*
  %62 = load i16, i16* %61, align 4
  %63 = sext i16 %62 to i32
  %64 = sub nsw i32 %59, %63
  %65 = ashr i32 %64, 1
  %66 = icmp slt i32 %65, 2047
  %67 = select i1 %66, i32 %65, i32 2047
  %68 = icmp sgt i32 %67, 0
  %69 = select i1 %68, i32 %67, i32 0
  %70 = load i16, i16* %35, align 2
  %71 = sext i16 %70 to i32
  %72 = getelementptr inbounds %struct.MV, %struct.MV* %60, i64 0, i32 1
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i32
  %75 = sub nsw i32 %71, %74
  %76 = ashr i32 %75, 1
  %77 = icmp slt i32 %76, 2047
  %78 = select i1 %77, i32 %76, i32 2047
  %79 = icmp sgt i32 %78, 0
  %80 = select i1 %79, i32 %78, i32 0
  %81 = load i32*, i32** %7, align 8
  %82 = zext i32 %69 to i64
  %83 = getelementptr inbounds i32, i32* %81, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds i32*, i32** %7, i64 1
  %86 = load i32*, i32** %85, align 8
  %87 = zext i32 %80 to i64
  %88 = getelementptr inbounds i32, i32* %86, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, %84
  %91 = mul nsw i32 %90, %5
  %92 = add nsw i32 %91, 128
  %93 = ashr i32 %92, 8
  br label %94

94:                                               ; preds = %10, %57
  %95 = phi i32 [ %93, %57 ], [ 0, %10 ]
  %96 = add nsw i32 %95, %55
  %97 = add i16 %50, -8
  %98 = or i16 %97, 4
  %99 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 2
  %100 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %101 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 32
  %102 = load i32, i32* %53, align 4
  %103 = call i32 %100(i8* %101, i32 32, i32 4, i32 0, i8* %18, i32 %102, i32* nonnull %11) #4
  br i1 %56, label %139, label %104

104:                                              ; preds = %94
  %105 = sext i16 %48 to i32
  %106 = bitcast %union.int_mv* %4 to %struct.MV*
  %107 = bitcast %union.int_mv* %4 to i16*
  %108 = load i16, i16* %107, align 4
  %109 = sext i16 %108 to i32
  %110 = sub nsw i32 %105, %109
  %111 = ashr i32 %110, 1
  %112 = icmp slt i32 %111, 2047
  %113 = select i1 %112, i32 %111, i32 2047
  %114 = icmp sgt i32 %113, 0
  %115 = select i1 %114, i32 %113, i32 0
  %116 = sext i16 %98 to i32
  %117 = getelementptr inbounds %struct.MV, %struct.MV* %106, i64 0, i32 1
  %118 = load i16, i16* %117, align 2
  %119 = sext i16 %118 to i32
  %120 = sub nsw i32 %116, %119
  %121 = ashr i32 %120, 1
  %122 = icmp slt i32 %121, 2047
  %123 = select i1 %122, i32 %121, i32 2047
  %124 = icmp sgt i32 %123, 0
  %125 = select i1 %124, i32 %123, i32 0
  %126 = load i32*, i32** %7, align 8
  %127 = zext i32 %115 to i64
  %128 = getelementptr inbounds i32, i32* %126, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds i32*, i32** %7, i64 1
  %131 = load i32*, i32** %130, align 8
  %132 = zext i32 %125 to i64
  %133 = getelementptr inbounds i32, i32* %131, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %134, %129
  %136 = mul nsw i32 %135, %5
  %137 = add nsw i32 %136, 128
  %138 = ashr i32 %137, 8
  br label %139

139:                                              ; preds = %94, %104
  %140 = phi i32 [ %138, %104 ], [ 0, %94 ]
  %141 = add nsw i32 %140, %103
  %142 = icmp slt i32 %141, %96
  br i1 %142, label %143, label %150

143:                                              ; preds = %139
  %144 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %145 = zext i16 %98 to i32
  %146 = shl nuw i32 %145, 16
  %147 = zext i16 %48 to i32
  %148 = or i32 %146, %147
  store i32 %148, i32* %144, align 4
  store i32 %103, i32* %8, align 4
  %149 = load i32, i32* %11, align 4
  store i32 %149, i32* %9, align 4
  br label %150

150:                                              ; preds = %143, %139
  %151 = phi i32 [ %141, %143 ], [ %96, %139 ]
  %152 = add i16 %98, 8
  %153 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %154 = load i32, i32* %53, align 4
  %155 = call i32 %153(i8* %46, i32 32, i32 4, i32 0, i8* %18, i32 %154, i32* nonnull %11) #4
  br i1 %56, label %191, label %156

156:                                              ; preds = %150
  %157 = sext i16 %48 to i32
  %158 = bitcast %union.int_mv* %4 to %struct.MV*
  %159 = bitcast %union.int_mv* %4 to i16*
  %160 = load i16, i16* %159, align 4
  %161 = sext i16 %160 to i32
  %162 = sub nsw i32 %157, %161
  %163 = ashr i32 %162, 1
  %164 = icmp slt i32 %163, 2047
  %165 = select i1 %164, i32 %163, i32 2047
  %166 = icmp sgt i32 %165, 0
  %167 = select i1 %166, i32 %165, i32 0
  %168 = sext i16 %152 to i32
  %169 = getelementptr inbounds %struct.MV, %struct.MV* %158, i64 0, i32 1
  %170 = load i16, i16* %169, align 2
  %171 = sext i16 %170 to i32
  %172 = sub nsw i32 %168, %171
  %173 = ashr i32 %172, 1
  %174 = icmp slt i32 %173, 2047
  %175 = select i1 %174, i32 %173, i32 2047
  %176 = icmp sgt i32 %175, 0
  %177 = select i1 %176, i32 %175, i32 0
  %178 = load i32*, i32** %7, align 8
  %179 = zext i32 %167 to i64
  %180 = getelementptr inbounds i32, i32* %178, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds i32*, i32** %7, i64 1
  %183 = load i32*, i32** %182, align 8
  %184 = zext i32 %177 to i64
  %185 = getelementptr inbounds i32, i32* %183, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = add nsw i32 %186, %181
  %188 = mul nsw i32 %187, %5
  %189 = add nsw i32 %188, 128
  %190 = ashr i32 %189, 8
  br label %191

191:                                              ; preds = %150, %156
  %192 = phi i32 [ %190, %156 ], [ 0, %150 ]
  %193 = add nsw i32 %192, %155
  %194 = icmp slt i32 %193, %151
  br i1 %194, label %195, label %202

195:                                              ; preds = %191
  %196 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %197 = zext i16 %152 to i32
  %198 = shl nuw i32 %197, 16
  %199 = zext i16 %48 to i32
  %200 = or i32 %198, %199
  store i32 %200, i32* %196, align 4
  store i32 %155, i32* %8, align 4
  %201 = load i32, i32* %11, align 4
  store i32 %201, i32* %9, align 4
  br label %202

202:                                              ; preds = %195, %191
  %203 = phi i32 [ %193, %195 ], [ %151, %191 ]
  %204 = add i16 %48, -8
  %205 = or i16 %204, 4
  %206 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %207 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 1
  %208 = load i32, i32* %53, align 4
  %209 = call i32 %206(i8* %207, i32 32, i32 0, i32 4, i8* %18, i32 %208, i32* nonnull %11) #4
  br i1 %56, label %245, label %210

210:                                              ; preds = %202
  %211 = sext i16 %205 to i32
  %212 = bitcast %union.int_mv* %4 to %struct.MV*
  %213 = bitcast %union.int_mv* %4 to i16*
  %214 = load i16, i16* %213, align 4
  %215 = sext i16 %214 to i32
  %216 = sub nsw i32 %211, %215
  %217 = ashr i32 %216, 1
  %218 = icmp slt i32 %217, 2047
  %219 = select i1 %218, i32 %217, i32 2047
  %220 = icmp sgt i32 %219, 0
  %221 = select i1 %220, i32 %219, i32 0
  %222 = sext i16 %50 to i32
  %223 = getelementptr inbounds %struct.MV, %struct.MV* %212, i64 0, i32 1
  %224 = load i16, i16* %223, align 2
  %225 = sext i16 %224 to i32
  %226 = sub nsw i32 %222, %225
  %227 = ashr i32 %226, 1
  %228 = icmp slt i32 %227, 2047
  %229 = select i1 %228, i32 %227, i32 2047
  %230 = icmp sgt i32 %229, 0
  %231 = select i1 %230, i32 %229, i32 0
  %232 = load i32*, i32** %7, align 8
  %233 = zext i32 %221 to i64
  %234 = getelementptr inbounds i32, i32* %232, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds i32*, i32** %7, i64 1
  %237 = load i32*, i32** %236, align 8
  %238 = zext i32 %231 to i64
  %239 = getelementptr inbounds i32, i32* %237, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = add nsw i32 %240, %235
  %242 = mul nsw i32 %241, %5
  %243 = add nsw i32 %242, 128
  %244 = ashr i32 %243, 8
  br label %245

245:                                              ; preds = %202, %210
  %246 = phi i32 [ %244, %210 ], [ 0, %202 ]
  %247 = add nsw i32 %246, %209
  %248 = icmp slt i32 %247, %203
  br i1 %248, label %249, label %256

249:                                              ; preds = %245
  %250 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %251 = zext i16 %50 to i32
  %252 = shl nuw i32 %251, 16
  %253 = zext i16 %205 to i32
  %254 = or i32 %252, %253
  store i32 %254, i32* %250, align 4
  store i32 %209, i32* %8, align 4
  %255 = load i32, i32* %11, align 4
  store i32 %255, i32* %9, align 4
  br label %256

256:                                              ; preds = %249, %245
  %257 = phi i32 [ %247, %249 ], [ %203, %245 ]
  %258 = add i16 %205, 8
  %259 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %260 = load i32, i32* %53, align 4
  %261 = call i32 %259(i8* %46, i32 32, i32 0, i32 4, i8* %18, i32 %260, i32* nonnull %11) #4
  br i1 %56, label %297, label %262

262:                                              ; preds = %256
  %263 = sext i16 %258 to i32
  %264 = bitcast %union.int_mv* %4 to %struct.MV*
  %265 = bitcast %union.int_mv* %4 to i16*
  %266 = load i16, i16* %265, align 4
  %267 = sext i16 %266 to i32
  %268 = sub nsw i32 %263, %267
  %269 = ashr i32 %268, 1
  %270 = icmp slt i32 %269, 2047
  %271 = select i1 %270, i32 %269, i32 2047
  %272 = icmp sgt i32 %271, 0
  %273 = select i1 %272, i32 %271, i32 0
  %274 = sext i16 %50 to i32
  %275 = getelementptr inbounds %struct.MV, %struct.MV* %264, i64 0, i32 1
  %276 = load i16, i16* %275, align 2
  %277 = sext i16 %276 to i32
  %278 = sub nsw i32 %274, %277
  %279 = ashr i32 %278, 1
  %280 = icmp slt i32 %279, 2047
  %281 = select i1 %280, i32 %279, i32 2047
  %282 = icmp sgt i32 %281, 0
  %283 = select i1 %282, i32 %281, i32 0
  %284 = load i32*, i32** %7, align 8
  %285 = zext i32 %273 to i64
  %286 = getelementptr inbounds i32, i32* %284, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds i32*, i32** %7, i64 1
  %289 = load i32*, i32** %288, align 8
  %290 = zext i32 %283 to i64
  %291 = getelementptr inbounds i32, i32* %289, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = add nsw i32 %292, %287
  %294 = mul nsw i32 %293, %5
  %295 = add nsw i32 %294, 128
  %296 = ashr i32 %295, 8
  br label %297

297:                                              ; preds = %256, %262
  %298 = phi i32 [ %296, %262 ], [ 0, %256 ]
  %299 = add nsw i32 %298, %261
  %300 = icmp slt i32 %299, %257
  br i1 %300, label %301, label %308

301:                                              ; preds = %297
  %302 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %303 = zext i16 %50 to i32
  %304 = shl nuw i32 %303, 16
  %305 = zext i16 %258 to i32
  %306 = or i32 %304, %305
  store i32 %306, i32* %302, align 4
  store i32 %261, i32* %8, align 4
  %307 = load i32, i32* %11, align 4
  store i32 %307, i32* %9, align 4
  br label %308

308:                                              ; preds = %301, %297
  %309 = phi i32 [ %299, %301 ], [ %257, %297 ]
  %310 = icmp sge i32 %141, %193
  %311 = zext i1 %310 to i32
  %312 = icmp slt i32 %247, %299
  %313 = select i1 %312, i32 0, i32 2
  %314 = or i32 %313, %311
  switch i32 %314, label %329 [
    i32 0, label %315
    i32 1, label %319
    i32 2, label %324
  ]

315:                                              ; preds = %308
  %316 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %317 = load i32, i32* %53, align 4
  %318 = call i32 %316(i8* %45, i32 32, i32 4, i32 4, i8* %18, i32 %317, i32* nonnull %11) #4
  br label %335

319:                                              ; preds = %308
  %320 = or i16 %50, 4
  %321 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %322 = load i32, i32* %53, align 4
  %323 = call i32 %321(i8* %207, i32 32, i32 4, i32 4, i8* %18, i32 %322, i32* nonnull %11) #4
  br label %335

324:                                              ; preds = %308
  %325 = or i16 %48, 4
  %326 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %327 = load i32, i32* %53, align 4
  %328 = call i32 %326(i8* %101, i32 32, i32 4, i32 4, i8* %18, i32 %327, i32* nonnull %11) #4
  br label %335

329:                                              ; preds = %308
  %330 = or i16 %50, 4
  %331 = or i16 %48, 4
  %332 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %333 = load i32, i32* %53, align 4
  %334 = call i32 %332(i8* %46, i32 32, i32 4, i32 4, i8* %18, i32 %333, i32* nonnull %11) #4
  br label %335

335:                                              ; preds = %329, %324, %319, %315
  %336 = phi i16 [ %330, %329 ], [ %98, %324 ], [ %320, %319 ], [ %98, %315 ]
  %337 = phi i16 [ %331, %329 ], [ %325, %324 ], [ %205, %319 ], [ %205, %315 ]
  %338 = phi i32 [ %334, %329 ], [ %328, %324 ], [ %323, %319 ], [ %318, %315 ]
  br i1 %56, label %374, label %339

339:                                              ; preds = %335
  %340 = sext i16 %337 to i32
  %341 = bitcast %union.int_mv* %4 to %struct.MV*
  %342 = bitcast %union.int_mv* %4 to i16*
  %343 = load i16, i16* %342, align 4
  %344 = sext i16 %343 to i32
  %345 = sub nsw i32 %340, %344
  %346 = ashr i32 %345, 1
  %347 = icmp slt i32 %346, 2047
  %348 = select i1 %347, i32 %346, i32 2047
  %349 = icmp sgt i32 %348, 0
  %350 = select i1 %349, i32 %348, i32 0
  %351 = sext i16 %336 to i32
  %352 = getelementptr inbounds %struct.MV, %struct.MV* %341, i64 0, i32 1
  %353 = load i16, i16* %352, align 2
  %354 = sext i16 %353 to i32
  %355 = sub nsw i32 %351, %354
  %356 = ashr i32 %355, 1
  %357 = icmp slt i32 %356, 2047
  %358 = select i1 %357, i32 %356, i32 2047
  %359 = icmp sgt i32 %358, 0
  %360 = select i1 %359, i32 %358, i32 0
  %361 = load i32*, i32** %7, align 8
  %362 = zext i32 %350 to i64
  %363 = getelementptr inbounds i32, i32* %361, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = getelementptr inbounds i32*, i32** %7, i64 1
  %366 = load i32*, i32** %365, align 8
  %367 = zext i32 %360 to i64
  %368 = getelementptr inbounds i32, i32* %366, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = add nsw i32 %369, %364
  %371 = mul nsw i32 %370, %5
  %372 = add nsw i32 %371, 128
  %373 = ashr i32 %372, 8
  br label %374

374:                                              ; preds = %335, %339
  %375 = phi i32 [ %373, %339 ], [ 0, %335 ]
  %376 = add nsw i32 %375, %338
  %377 = icmp slt i32 %376, %309
  br i1 %377, label %378, label %385

378:                                              ; preds = %374
  %379 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %380 = zext i16 %336 to i32
  %381 = shl nuw i32 %380, 16
  %382 = zext i16 %337 to i32
  %383 = or i32 %381, %382
  store i32 %383, i32* %379, align 4
  store i32 %338, i32* %8, align 4
  %384 = load i32, i32* %11, align 4
  store i32 %384, i32* %9, align 4
  br label %385

385:                                              ; preds = %378, %374
  %386 = phi i32 [ %376, %378 ], [ %309, %374 ]
  %387 = load i16, i16* %29, align 4
  %388 = icmp slt i16 %387, %48
  %389 = select i1 %388, i8* %207, i8* %46
  %390 = load i16, i16* %35, align 2
  %391 = icmp slt i16 %390, %50
  %392 = getelementptr inbounds i8, i8* %389, i64 -1
  %393 = select i1 %391, i8* %392, i8* %389
  %394 = and i16 %390, 7
  %395 = icmp ne i16 %394, 0
  br i1 %395, label %396, label %405

396:                                              ; preds = %385
  %397 = add i16 %390, -2
  %398 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %399 = and i16 %397, 7
  %400 = zext i16 %399 to i32
  %401 = and i16 %387, 7
  %402 = zext i16 %401 to i32
  %403 = load i32, i32* %53, align 4
  %404 = call i32 %398(i8* %393, i32 32, i32 %400, i32 %402, i8* %18, i32 %403, i32* nonnull %11) #4
  br label %414

405:                                              ; preds = %385
  %406 = add i16 %390, -8
  %407 = or i16 %406, 6
  %408 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %409 = getelementptr inbounds i8, i8* %393, i64 -1
  %410 = and i16 %387, 7
  %411 = zext i16 %410 to i32
  %412 = load i32, i32* %53, align 4
  %413 = call i32 %408(i8* %409, i32 32, i32 6, i32 %411, i8* %18, i32 %412, i32* nonnull %11) #4
  br label %414

414:                                              ; preds = %405, %396
  %415 = phi i16 [ %397, %396 ], [ %407, %405 ]
  %416 = phi i32 [ %404, %396 ], [ %413, %405 ]
  br i1 %56, label %452, label %417

417:                                              ; preds = %414
  %418 = sext i16 %387 to i32
  %419 = bitcast %union.int_mv* %4 to %struct.MV*
  %420 = bitcast %union.int_mv* %4 to i16*
  %421 = load i16, i16* %420, align 4
  %422 = sext i16 %421 to i32
  %423 = sub nsw i32 %418, %422
  %424 = ashr i32 %423, 1
  %425 = icmp slt i32 %424, 2047
  %426 = select i1 %425, i32 %424, i32 2047
  %427 = icmp sgt i32 %426, 0
  %428 = select i1 %427, i32 %426, i32 0
  %429 = sext i16 %415 to i32
  %430 = getelementptr inbounds %struct.MV, %struct.MV* %419, i64 0, i32 1
  %431 = load i16, i16* %430, align 2
  %432 = sext i16 %431 to i32
  %433 = sub nsw i32 %429, %432
  %434 = ashr i32 %433, 1
  %435 = icmp slt i32 %434, 2047
  %436 = select i1 %435, i32 %434, i32 2047
  %437 = icmp sgt i32 %436, 0
  %438 = select i1 %437, i32 %436, i32 0
  %439 = load i32*, i32** %7, align 8
  %440 = zext i32 %428 to i64
  %441 = getelementptr inbounds i32, i32* %439, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = getelementptr inbounds i32*, i32** %7, i64 1
  %444 = load i32*, i32** %443, align 8
  %445 = zext i32 %438 to i64
  %446 = getelementptr inbounds i32, i32* %444, i64 %445
  %447 = load i32, i32* %446, align 4
  %448 = add nsw i32 %447, %442
  %449 = mul nsw i32 %448, %5
  %450 = add nsw i32 %449, 128
  %451 = ashr i32 %450, 8
  br label %452

452:                                              ; preds = %414, %417
  %453 = phi i32 [ %451, %417 ], [ 0, %414 ]
  %454 = add nsw i32 %453, %416
  %455 = icmp slt i32 %454, %386
  br i1 %455, label %456, label %463

456:                                              ; preds = %452
  %457 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %458 = zext i16 %415 to i32
  %459 = shl nuw i32 %458, 16
  %460 = zext i16 %387 to i32
  %461 = or i32 %459, %460
  store i32 %461, i32* %457, align 4
  store i32 %416, i32* %8, align 4
  %462 = load i32, i32* %11, align 4
  store i32 %462, i32* %9, align 4
  br label %463

463:                                              ; preds = %456, %452
  %464 = phi i32 [ %454, %456 ], [ %386, %452 ]
  %465 = add i16 %415, 4
  %466 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %467 = and i16 %465, 7
  %468 = zext i16 %467 to i32
  %469 = and i16 %387, 7
  %470 = zext i16 %469 to i32
  %471 = load i32, i32* %53, align 4
  %472 = call i32 %466(i8* %393, i32 32, i32 %468, i32 %470, i8* %18, i32 %471, i32* nonnull %11) #4
  br i1 %56, label %508, label %473

473:                                              ; preds = %463
  %474 = sext i16 %387 to i32
  %475 = bitcast %union.int_mv* %4 to %struct.MV*
  %476 = bitcast %union.int_mv* %4 to i16*
  %477 = load i16, i16* %476, align 4
  %478 = sext i16 %477 to i32
  %479 = sub nsw i32 %474, %478
  %480 = ashr i32 %479, 1
  %481 = icmp slt i32 %480, 2047
  %482 = select i1 %481, i32 %480, i32 2047
  %483 = icmp sgt i32 %482, 0
  %484 = select i1 %483, i32 %482, i32 0
  %485 = sext i16 %465 to i32
  %486 = getelementptr inbounds %struct.MV, %struct.MV* %475, i64 0, i32 1
  %487 = load i16, i16* %486, align 2
  %488 = sext i16 %487 to i32
  %489 = sub nsw i32 %485, %488
  %490 = ashr i32 %489, 1
  %491 = icmp slt i32 %490, 2047
  %492 = select i1 %491, i32 %490, i32 2047
  %493 = icmp sgt i32 %492, 0
  %494 = select i1 %493, i32 %492, i32 0
  %495 = load i32*, i32** %7, align 8
  %496 = zext i32 %484 to i64
  %497 = getelementptr inbounds i32, i32* %495, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = getelementptr inbounds i32*, i32** %7, i64 1
  %500 = load i32*, i32** %499, align 8
  %501 = zext i32 %494 to i64
  %502 = getelementptr inbounds i32, i32* %500, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = add nsw i32 %503, %498
  %505 = mul nsw i32 %504, %5
  %506 = add nsw i32 %505, 128
  %507 = ashr i32 %506, 8
  br label %508

508:                                              ; preds = %463, %473
  %509 = phi i32 [ %507, %473 ], [ 0, %463 ]
  %510 = add nsw i32 %509, %472
  %511 = icmp slt i32 %510, %464
  br i1 %511, label %512, label %519

512:                                              ; preds = %508
  %513 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %514 = zext i16 %465 to i32
  %515 = shl nuw i32 %514, 16
  %516 = zext i16 %387 to i32
  %517 = or i32 %515, %516
  store i32 %517, i32* %513, align 4
  store i32 %472, i32* %8, align 4
  %518 = load i32, i32* %11, align 4
  store i32 %518, i32* %9, align 4
  br label %519

519:                                              ; preds = %512, %508
  %520 = phi i32 [ %510, %512 ], [ %464, %508 ]
  %521 = icmp ne i16 %469, 0
  br i1 %521, label %522, label %530

522:                                              ; preds = %519
  %523 = add i16 %387, -2
  %524 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %525 = zext i16 %394 to i32
  %526 = and i16 %523, 7
  %527 = zext i16 %526 to i32
  %528 = load i32, i32* %53, align 4
  %529 = call i32 %524(i8* %393, i32 32, i32 %525, i32 %527, i8* %18, i32 %528, i32* nonnull %11) #4
  br label %538

530:                                              ; preds = %519
  %531 = add i16 %387, -8
  %532 = or i16 %531, 6
  %533 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %534 = getelementptr inbounds i8, i8* %393, i64 -32
  %535 = zext i16 %394 to i32
  %536 = load i32, i32* %53, align 4
  %537 = call i32 %533(i8* %534, i32 32, i32 %535, i32 6, i8* %18, i32 %536, i32* nonnull %11) #4
  br label %538

538:                                              ; preds = %530, %522
  %539 = phi i16 [ %523, %522 ], [ %532, %530 ]
  %540 = phi i32 [ %529, %522 ], [ %537, %530 ]
  br i1 %56, label %576, label %541

541:                                              ; preds = %538
  %542 = sext i16 %539 to i32
  %543 = bitcast %union.int_mv* %4 to %struct.MV*
  %544 = bitcast %union.int_mv* %4 to i16*
  %545 = load i16, i16* %544, align 4
  %546 = sext i16 %545 to i32
  %547 = sub nsw i32 %542, %546
  %548 = ashr i32 %547, 1
  %549 = icmp slt i32 %548, 2047
  %550 = select i1 %549, i32 %548, i32 2047
  %551 = icmp sgt i32 %550, 0
  %552 = select i1 %551, i32 %550, i32 0
  %553 = sext i16 %390 to i32
  %554 = getelementptr inbounds %struct.MV, %struct.MV* %543, i64 0, i32 1
  %555 = load i16, i16* %554, align 2
  %556 = sext i16 %555 to i32
  %557 = sub nsw i32 %553, %556
  %558 = ashr i32 %557, 1
  %559 = icmp slt i32 %558, 2047
  %560 = select i1 %559, i32 %558, i32 2047
  %561 = icmp sgt i32 %560, 0
  %562 = select i1 %561, i32 %560, i32 0
  %563 = load i32*, i32** %7, align 8
  %564 = zext i32 %552 to i64
  %565 = getelementptr inbounds i32, i32* %563, i64 %564
  %566 = load i32, i32* %565, align 4
  %567 = getelementptr inbounds i32*, i32** %7, i64 1
  %568 = load i32*, i32** %567, align 8
  %569 = zext i32 %562 to i64
  %570 = getelementptr inbounds i32, i32* %568, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = add nsw i32 %571, %566
  %573 = mul nsw i32 %572, %5
  %574 = add nsw i32 %573, 128
  %575 = ashr i32 %574, 8
  br label %576

576:                                              ; preds = %538, %541
  %577 = phi i32 [ %575, %541 ], [ 0, %538 ]
  %578 = add nsw i32 %577, %540
  %579 = icmp slt i32 %578, %520
  br i1 %579, label %580, label %587

580:                                              ; preds = %576
  %581 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %582 = zext i16 %390 to i32
  %583 = shl nuw i32 %582, 16
  %584 = zext i16 %539 to i32
  %585 = or i32 %583, %584
  store i32 %585, i32* %581, align 4
  store i32 %540, i32* %8, align 4
  %586 = load i32, i32* %11, align 4
  store i32 %586, i32* %9, align 4
  br label %587

587:                                              ; preds = %580, %576
  %588 = phi i32 [ %578, %580 ], [ %520, %576 ]
  %589 = add i16 %539, 4
  %590 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %591 = zext i16 %394 to i32
  %592 = and i16 %589, 7
  %593 = zext i16 %592 to i32
  %594 = load i32, i32* %53, align 4
  %595 = call i32 %590(i8* %393, i32 32, i32 %591, i32 %593, i8* %18, i32 %594, i32* nonnull %11) #4
  br i1 %56, label %631, label %596

596:                                              ; preds = %587
  %597 = sext i16 %589 to i32
  %598 = bitcast %union.int_mv* %4 to %struct.MV*
  %599 = bitcast %union.int_mv* %4 to i16*
  %600 = load i16, i16* %599, align 4
  %601 = sext i16 %600 to i32
  %602 = sub nsw i32 %597, %601
  %603 = ashr i32 %602, 1
  %604 = icmp slt i32 %603, 2047
  %605 = select i1 %604, i32 %603, i32 2047
  %606 = icmp sgt i32 %605, 0
  %607 = select i1 %606, i32 %605, i32 0
  %608 = sext i16 %390 to i32
  %609 = getelementptr inbounds %struct.MV, %struct.MV* %598, i64 0, i32 1
  %610 = load i16, i16* %609, align 2
  %611 = sext i16 %610 to i32
  %612 = sub nsw i32 %608, %611
  %613 = ashr i32 %612, 1
  %614 = icmp slt i32 %613, 2047
  %615 = select i1 %614, i32 %613, i32 2047
  %616 = icmp sgt i32 %615, 0
  %617 = select i1 %616, i32 %615, i32 0
  %618 = load i32*, i32** %7, align 8
  %619 = zext i32 %607 to i64
  %620 = getelementptr inbounds i32, i32* %618, i64 %619
  %621 = load i32, i32* %620, align 4
  %622 = getelementptr inbounds i32*, i32** %7, i64 1
  %623 = load i32*, i32** %622, align 8
  %624 = zext i32 %617 to i64
  %625 = getelementptr inbounds i32, i32* %623, i64 %624
  %626 = load i32, i32* %625, align 4
  %627 = add nsw i32 %626, %621
  %628 = mul nsw i32 %627, %5
  %629 = add nsw i32 %628, 128
  %630 = ashr i32 %629, 8
  br label %631

631:                                              ; preds = %587, %596
  %632 = phi i32 [ %630, %596 ], [ 0, %587 ]
  %633 = add nsw i32 %632, %595
  %634 = icmp slt i32 %633, %588
  br i1 %634, label %635, label %642

635:                                              ; preds = %631
  %636 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %637 = zext i16 %390 to i32
  %638 = shl nuw i32 %637, 16
  %639 = zext i16 %589 to i32
  %640 = or i32 %638, %639
  store i32 %640, i32* %636, align 4
  store i32 %595, i32* %8, align 4
  %641 = load i32, i32* %11, align 4
  store i32 %641, i32* %9, align 4
  br label %642

642:                                              ; preds = %635, %631
  %643 = phi i32 [ %633, %635 ], [ %588, %631 ]
  %644 = icmp sge i32 %454, %510
  %645 = zext i1 %644 to i32
  %646 = icmp slt i32 %578, %633
  %647 = select i1 %646, i32 0, i32 2
  %648 = or i32 %647, %645
  switch i32 %648, label %738 [
    i32 0, label %649
    i32 1, label %688
    i32 2, label %708
    i32 3, label %728
  ]

649:                                              ; preds = %642
  br i1 %521, label %650, label %670

650:                                              ; preds = %649
  %651 = add i16 %387, -2
  br i1 %395, label %652, label %661

652:                                              ; preds = %650
  %653 = add i16 %390, -2
  %654 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %655 = and i16 %653, 7
  %656 = zext i16 %655 to i32
  %657 = and i16 %651, 7
  %658 = zext i16 %657 to i32
  %659 = load i32, i32* %53, align 4
  %660 = call i32 %654(i8* %393, i32 32, i32 %656, i32 %658, i8* %18, i32 %659, i32* nonnull %11) #4
  br label %739

661:                                              ; preds = %650
  %662 = add i16 %390, -8
  %663 = or i16 %662, 6
  %664 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %665 = getelementptr inbounds i8, i8* %393, i64 -1
  %666 = and i16 %651, 7
  %667 = zext i16 %666 to i32
  %668 = load i32, i32* %53, align 4
  %669 = call i32 %664(i8* %665, i32 32, i32 6, i32 %667, i8* %18, i32 %668, i32* nonnull %11) #4
  br label %739

670:                                              ; preds = %649
  %671 = add i16 %387, -8
  %672 = or i16 %671, 6
  br i1 %395, label %673, label %681

673:                                              ; preds = %670
  %674 = add i16 %390, -2
  %675 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %676 = getelementptr inbounds i8, i8* %393, i64 -32
  %677 = and i16 %674, 7
  %678 = zext i16 %677 to i32
  %679 = load i32, i32* %53, align 4
  %680 = call i32 %675(i8* %676, i32 32, i32 %678, i32 6, i8* %18, i32 %679, i32* nonnull %11) #4
  br label %739

681:                                              ; preds = %670
  %682 = add i16 %390, -8
  %683 = or i16 %682, 6
  %684 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %685 = getelementptr inbounds i8, i8* %393, i64 -33
  %686 = load i32, i32* %53, align 4
  %687 = call i32 %684(i8* %685, i32 32, i32 6, i32 6, i8* %18, i32 %686, i32* nonnull %11) #4
  br label %739

688:                                              ; preds = %642
  %689 = add i16 %390, 2
  br i1 %521, label %690, label %699

690:                                              ; preds = %688
  %691 = add i16 %387, -2
  %692 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %693 = and i16 %689, 7
  %694 = zext i16 %693 to i32
  %695 = and i16 %691, 7
  %696 = zext i16 %695 to i32
  %697 = load i32, i32* %53, align 4
  %698 = call i32 %692(i8* %393, i32 32, i32 %694, i32 %696, i8* %18, i32 %697, i32* nonnull %11) #4
  br label %739

699:                                              ; preds = %688
  %700 = add i16 %387, -8
  %701 = or i16 %700, 6
  %702 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %703 = getelementptr inbounds i8, i8* %393, i64 -32
  %704 = and i16 %689, 7
  %705 = zext i16 %704 to i32
  %706 = load i32, i32* %53, align 4
  %707 = call i32 %702(i8* %703, i32 32, i32 %705, i32 6, i8* %18, i32 %706, i32* nonnull %11) #4
  br label %739

708:                                              ; preds = %642
  %709 = add i16 %387, 2
  br i1 %395, label %710, label %719

710:                                              ; preds = %708
  %711 = add i16 %390, -2
  %712 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %713 = and i16 %711, 7
  %714 = zext i16 %713 to i32
  %715 = and i16 %709, 7
  %716 = zext i16 %715 to i32
  %717 = load i32, i32* %53, align 4
  %718 = call i32 %712(i8* %393, i32 32, i32 %714, i32 %716, i8* %18, i32 %717, i32* nonnull %11) #4
  br label %739

719:                                              ; preds = %708
  %720 = add i16 %390, -8
  %721 = or i16 %720, 6
  %722 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %723 = getelementptr inbounds i8, i8* %393, i64 -1
  %724 = and i16 %709, 7
  %725 = zext i16 %724 to i32
  %726 = load i32, i32* %53, align 4
  %727 = call i32 %722(i8* %723, i32 32, i32 6, i32 %725, i8* %18, i32 %726, i32* nonnull %11) #4
  br label %739

728:                                              ; preds = %642
  %729 = add i16 %390, 2
  %730 = add i16 %387, 2
  %731 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %732 = and i16 %729, 7
  %733 = zext i16 %732 to i32
  %734 = and i16 %730, 7
  %735 = zext i16 %734 to i32
  %736 = load i32, i32* %53, align 4
  %737 = call i32 %731(i8* %393, i32 32, i32 %733, i32 %735, i8* %18, i32 %736, i32* nonnull %11) #4
  br label %739

738:                                              ; preds = %642
  unreachable

739:                                              ; preds = %710, %719, %690, %699, %661, %652, %681, %673, %728
  %740 = phi i16 [ %729, %728 ], [ %711, %710 ], [ %721, %719 ], [ %689, %690 ], [ %689, %699 ], [ %653, %652 ], [ %663, %661 ], [ %674, %673 ], [ %683, %681 ]
  %741 = phi i16 [ %730, %728 ], [ %709, %710 ], [ %709, %719 ], [ %691, %690 ], [ %701, %699 ], [ %651, %652 ], [ %651, %661 ], [ %672, %673 ], [ %672, %681 ]
  %742 = phi i32 [ %737, %728 ], [ %718, %710 ], [ %727, %719 ], [ %698, %690 ], [ %707, %699 ], [ %660, %652 ], [ %669, %661 ], [ %680, %673 ], [ %687, %681 ]
  br i1 %56, label %778, label %743

743:                                              ; preds = %739
  %744 = sext i16 %741 to i32
  %745 = bitcast %union.int_mv* %4 to %struct.MV*
  %746 = bitcast %union.int_mv* %4 to i16*
  %747 = load i16, i16* %746, align 4
  %748 = sext i16 %747 to i32
  %749 = sub nsw i32 %744, %748
  %750 = ashr i32 %749, 1
  %751 = icmp slt i32 %750, 2047
  %752 = select i1 %751, i32 %750, i32 2047
  %753 = icmp sgt i32 %752, 0
  %754 = select i1 %753, i32 %752, i32 0
  %755 = sext i16 %740 to i32
  %756 = getelementptr inbounds %struct.MV, %struct.MV* %745, i64 0, i32 1
  %757 = load i16, i16* %756, align 2
  %758 = sext i16 %757 to i32
  %759 = sub nsw i32 %755, %758
  %760 = ashr i32 %759, 1
  %761 = icmp slt i32 %760, 2047
  %762 = select i1 %761, i32 %760, i32 2047
  %763 = icmp sgt i32 %762, 0
  %764 = select i1 %763, i32 %762, i32 0
  %765 = load i32*, i32** %7, align 8
  %766 = zext i32 %754 to i64
  %767 = getelementptr inbounds i32, i32* %765, i64 %766
  %768 = load i32, i32* %767, align 4
  %769 = getelementptr inbounds i32*, i32** %7, i64 1
  %770 = load i32*, i32** %769, align 8
  %771 = zext i32 %764 to i64
  %772 = getelementptr inbounds i32, i32* %770, i64 %771
  %773 = load i32, i32* %772, align 4
  %774 = add nsw i32 %773, %768
  %775 = mul nsw i32 %774, %5
  %776 = add nsw i32 %775, 128
  %777 = ashr i32 %776, 8
  br label %778

778:                                              ; preds = %739, %743
  %779 = phi i32 [ %777, %743 ], [ 0, %739 ]
  %780 = add nsw i32 %779, %742
  %781 = icmp slt i32 %780, %643
  br i1 %781, label %782, label %789

782:                                              ; preds = %778
  %783 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %784 = zext i16 %740 to i32
  %785 = shl nuw i32 %784, 16
  %786 = zext i16 %741 to i32
  %787 = or i32 %785, %786
  store i32 %787, i32* %783, align 4
  store i32 %742, i32* %8, align 4
  %788 = load i32, i32* %11, align 4
  store i32 %788, i32* %9, align 4
  br label %789

789:                                              ; preds = %782, %778
  %790 = phi i32 [ %780, %782 ], [ %643, %778 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #4
  ret i32 %790
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_find_best_half_pixel_step(%struct.macroblock*, %struct.block* nocapture readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, %union.int_mv* nocapture readonly, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, i32* nocapture, i32*) local_unnamed_addr #3 {
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %13 = load i8**, i8*** %12, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #4
  store i32 -1431655766, i32* %11, align 4
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %21 = load i32, i32* %20, align 16
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = bitcast %union.int_mv* %3 to %struct.MV*
  %29 = bitcast %union.int_mv* %3 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = sext i16 %30 to i32
  %32 = mul nsw i32 %21, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %27, i64 %33
  %35 = getelementptr inbounds %struct.MV, %struct.MV* %28, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 6
  %40 = load void (i8*, i32, i8*, i32, i32)*, void (i8*, i32, i8*, i32, i32)** %39, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 -1
  %42 = sext i32 %21 to i64
  %43 = sub nsw i64 0, %42
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 0
  tail call void %40(i8* %44, i32 %21, i8* %45, i32 32, i32 18) #4
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 33
  %47 = load i16, i16* %29, align 4
  %48 = shl i16 %47, 3
  store i16 %48, i16* %29, align 4
  %49 = load i16, i16* %35, align 2
  %50 = shl i16 %49, 3
  store i16 %50, i16* %35, align 2
  %51 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %52 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %51, align 8
  %53 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %54 = load i32, i32* %53, align 4
  %55 = tail call i32 %52(i8* %46, i32 32, i8* %18, i32 %54, i32* %9) #4
  store i32 %55, i32* %8, align 4
  %56 = icmp eq i32** %7, null
  br i1 %56, label %94, label %57

57:                                               ; preds = %10
  %58 = load i16, i16* %29, align 4
  %59 = sext i16 %58 to i32
  %60 = bitcast %union.int_mv* %4 to %struct.MV*
  %61 = bitcast %union.int_mv* %4 to i16*
  %62 = load i16, i16* %61, align 4
  %63 = sext i16 %62 to i32
  %64 = sub nsw i32 %59, %63
  %65 = ashr i32 %64, 1
  %66 = icmp slt i32 %65, 2047
  %67 = select i1 %66, i32 %65, i32 2047
  %68 = icmp sgt i32 %67, 0
  %69 = select i1 %68, i32 %67, i32 0
  %70 = load i16, i16* %35, align 2
  %71 = sext i16 %70 to i32
  %72 = getelementptr inbounds %struct.MV, %struct.MV* %60, i64 0, i32 1
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i32
  %75 = sub nsw i32 %71, %74
  %76 = ashr i32 %75, 1
  %77 = icmp slt i32 %76, 2047
  %78 = select i1 %77, i32 %76, i32 2047
  %79 = icmp sgt i32 %78, 0
  %80 = select i1 %79, i32 %78, i32 0
  %81 = load i32*, i32** %7, align 8
  %82 = zext i32 %69 to i64
  %83 = getelementptr inbounds i32, i32* %81, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds i32*, i32** %7, i64 1
  %86 = load i32*, i32** %85, align 8
  %87 = zext i32 %80 to i64
  %88 = getelementptr inbounds i32, i32* %86, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, %84
  %91 = mul nsw i32 %90, %5
  %92 = add nsw i32 %91, 128
  %93 = ashr i32 %92, 8
  br label %94

94:                                               ; preds = %10, %57
  %95 = phi i32 [ %93, %57 ], [ 0, %10 ]
  %96 = add nsw i32 %95, %55
  %97 = add i16 %50, -8
  %98 = or i16 %97, 4
  %99 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 2
  %100 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %101 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 32
  %102 = load i32, i32* %53, align 4
  %103 = call i32 %100(i8* %101, i32 32, i32 4, i32 0, i8* %18, i32 %102, i32* nonnull %11) #4
  br i1 %56, label %139, label %104

104:                                              ; preds = %94
  %105 = sext i16 %48 to i32
  %106 = bitcast %union.int_mv* %4 to %struct.MV*
  %107 = bitcast %union.int_mv* %4 to i16*
  %108 = load i16, i16* %107, align 4
  %109 = sext i16 %108 to i32
  %110 = sub nsw i32 %105, %109
  %111 = ashr i32 %110, 1
  %112 = icmp slt i32 %111, 2047
  %113 = select i1 %112, i32 %111, i32 2047
  %114 = icmp sgt i32 %113, 0
  %115 = select i1 %114, i32 %113, i32 0
  %116 = sext i16 %98 to i32
  %117 = getelementptr inbounds %struct.MV, %struct.MV* %106, i64 0, i32 1
  %118 = load i16, i16* %117, align 2
  %119 = sext i16 %118 to i32
  %120 = sub nsw i32 %116, %119
  %121 = ashr i32 %120, 1
  %122 = icmp slt i32 %121, 2047
  %123 = select i1 %122, i32 %121, i32 2047
  %124 = icmp sgt i32 %123, 0
  %125 = select i1 %124, i32 %123, i32 0
  %126 = load i32*, i32** %7, align 8
  %127 = zext i32 %115 to i64
  %128 = getelementptr inbounds i32, i32* %126, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds i32*, i32** %7, i64 1
  %131 = load i32*, i32** %130, align 8
  %132 = zext i32 %125 to i64
  %133 = getelementptr inbounds i32, i32* %131, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %134, %129
  %136 = mul nsw i32 %135, %5
  %137 = add nsw i32 %136, 128
  %138 = ashr i32 %137, 8
  br label %139

139:                                              ; preds = %94, %104
  %140 = phi i32 [ %138, %104 ], [ 0, %94 ]
  %141 = add nsw i32 %140, %103
  %142 = icmp slt i32 %141, %96
  br i1 %142, label %143, label %150

143:                                              ; preds = %139
  %144 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %145 = zext i16 %98 to i32
  %146 = shl nuw i32 %145, 16
  %147 = zext i16 %48 to i32
  %148 = or i32 %146, %147
  store i32 %148, i32* %144, align 4
  store i32 %103, i32* %8, align 4
  %149 = load i32, i32* %11, align 4
  store i32 %149, i32* %9, align 4
  br label %150

150:                                              ; preds = %143, %139
  %151 = phi i32 [ %141, %143 ], [ %96, %139 ]
  %152 = add i16 %98, 8
  %153 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %154 = load i32, i32* %53, align 4
  %155 = call i32 %153(i8* %46, i32 32, i32 4, i32 0, i8* %18, i32 %154, i32* nonnull %11) #4
  br i1 %56, label %191, label %156

156:                                              ; preds = %150
  %157 = sext i16 %48 to i32
  %158 = bitcast %union.int_mv* %4 to %struct.MV*
  %159 = bitcast %union.int_mv* %4 to i16*
  %160 = load i16, i16* %159, align 4
  %161 = sext i16 %160 to i32
  %162 = sub nsw i32 %157, %161
  %163 = ashr i32 %162, 1
  %164 = icmp slt i32 %163, 2047
  %165 = select i1 %164, i32 %163, i32 2047
  %166 = icmp sgt i32 %165, 0
  %167 = select i1 %166, i32 %165, i32 0
  %168 = sext i16 %152 to i32
  %169 = getelementptr inbounds %struct.MV, %struct.MV* %158, i64 0, i32 1
  %170 = load i16, i16* %169, align 2
  %171 = sext i16 %170 to i32
  %172 = sub nsw i32 %168, %171
  %173 = ashr i32 %172, 1
  %174 = icmp slt i32 %173, 2047
  %175 = select i1 %174, i32 %173, i32 2047
  %176 = icmp sgt i32 %175, 0
  %177 = select i1 %176, i32 %175, i32 0
  %178 = load i32*, i32** %7, align 8
  %179 = zext i32 %167 to i64
  %180 = getelementptr inbounds i32, i32* %178, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds i32*, i32** %7, i64 1
  %183 = load i32*, i32** %182, align 8
  %184 = zext i32 %177 to i64
  %185 = getelementptr inbounds i32, i32* %183, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = add nsw i32 %186, %181
  %188 = mul nsw i32 %187, %5
  %189 = add nsw i32 %188, 128
  %190 = ashr i32 %189, 8
  br label %191

191:                                              ; preds = %150, %156
  %192 = phi i32 [ %190, %156 ], [ 0, %150 ]
  %193 = add nsw i32 %192, %155
  %194 = icmp slt i32 %193, %151
  br i1 %194, label %195, label %202

195:                                              ; preds = %191
  %196 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %197 = zext i16 %152 to i32
  %198 = shl nuw i32 %197, 16
  %199 = zext i16 %48 to i32
  %200 = or i32 %198, %199
  store i32 %200, i32* %196, align 4
  store i32 %155, i32* %8, align 4
  %201 = load i32, i32* %11, align 4
  store i32 %201, i32* %9, align 4
  br label %202

202:                                              ; preds = %195, %191
  %203 = phi i32 [ %193, %195 ], [ %151, %191 ]
  %204 = add i16 %48, -8
  %205 = or i16 %204, 4
  %206 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %207 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 47, i64 1
  %208 = load i32, i32* %53, align 4
  %209 = call i32 %206(i8* %207, i32 32, i32 0, i32 4, i8* %18, i32 %208, i32* nonnull %11) #4
  br i1 %56, label %245, label %210

210:                                              ; preds = %202
  %211 = sext i16 %205 to i32
  %212 = bitcast %union.int_mv* %4 to %struct.MV*
  %213 = bitcast %union.int_mv* %4 to i16*
  %214 = load i16, i16* %213, align 4
  %215 = sext i16 %214 to i32
  %216 = sub nsw i32 %211, %215
  %217 = ashr i32 %216, 1
  %218 = icmp slt i32 %217, 2047
  %219 = select i1 %218, i32 %217, i32 2047
  %220 = icmp sgt i32 %219, 0
  %221 = select i1 %220, i32 %219, i32 0
  %222 = sext i16 %50 to i32
  %223 = getelementptr inbounds %struct.MV, %struct.MV* %212, i64 0, i32 1
  %224 = load i16, i16* %223, align 2
  %225 = sext i16 %224 to i32
  %226 = sub nsw i32 %222, %225
  %227 = ashr i32 %226, 1
  %228 = icmp slt i32 %227, 2047
  %229 = select i1 %228, i32 %227, i32 2047
  %230 = icmp sgt i32 %229, 0
  %231 = select i1 %230, i32 %229, i32 0
  %232 = load i32*, i32** %7, align 8
  %233 = zext i32 %221 to i64
  %234 = getelementptr inbounds i32, i32* %232, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds i32*, i32** %7, i64 1
  %237 = load i32*, i32** %236, align 8
  %238 = zext i32 %231 to i64
  %239 = getelementptr inbounds i32, i32* %237, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = add nsw i32 %240, %235
  %242 = mul nsw i32 %241, %5
  %243 = add nsw i32 %242, 128
  %244 = ashr i32 %243, 8
  br label %245

245:                                              ; preds = %202, %210
  %246 = phi i32 [ %244, %210 ], [ 0, %202 ]
  %247 = add nsw i32 %246, %209
  %248 = icmp slt i32 %247, %203
  br i1 %248, label %249, label %256

249:                                              ; preds = %245
  %250 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %251 = zext i16 %50 to i32
  %252 = shl nuw i32 %251, 16
  %253 = zext i16 %205 to i32
  %254 = or i32 %252, %253
  store i32 %254, i32* %250, align 4
  store i32 %209, i32* %8, align 4
  %255 = load i32, i32* %11, align 4
  store i32 %255, i32* %9, align 4
  br label %256

256:                                              ; preds = %249, %245
  %257 = phi i32 [ %247, %249 ], [ %203, %245 ]
  %258 = add i16 %205, 8
  %259 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %260 = load i32, i32* %53, align 4
  %261 = call i32 %259(i8* %46, i32 32, i32 0, i32 4, i8* %18, i32 %260, i32* nonnull %11) #4
  br i1 %56, label %297, label %262

262:                                              ; preds = %256
  %263 = sext i16 %258 to i32
  %264 = bitcast %union.int_mv* %4 to %struct.MV*
  %265 = bitcast %union.int_mv* %4 to i16*
  %266 = load i16, i16* %265, align 4
  %267 = sext i16 %266 to i32
  %268 = sub nsw i32 %263, %267
  %269 = ashr i32 %268, 1
  %270 = icmp slt i32 %269, 2047
  %271 = select i1 %270, i32 %269, i32 2047
  %272 = icmp sgt i32 %271, 0
  %273 = select i1 %272, i32 %271, i32 0
  %274 = sext i16 %50 to i32
  %275 = getelementptr inbounds %struct.MV, %struct.MV* %264, i64 0, i32 1
  %276 = load i16, i16* %275, align 2
  %277 = sext i16 %276 to i32
  %278 = sub nsw i32 %274, %277
  %279 = ashr i32 %278, 1
  %280 = icmp slt i32 %279, 2047
  %281 = select i1 %280, i32 %279, i32 2047
  %282 = icmp sgt i32 %281, 0
  %283 = select i1 %282, i32 %281, i32 0
  %284 = load i32*, i32** %7, align 8
  %285 = zext i32 %273 to i64
  %286 = getelementptr inbounds i32, i32* %284, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds i32*, i32** %7, i64 1
  %289 = load i32*, i32** %288, align 8
  %290 = zext i32 %283 to i64
  %291 = getelementptr inbounds i32, i32* %289, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = add nsw i32 %292, %287
  %294 = mul nsw i32 %293, %5
  %295 = add nsw i32 %294, 128
  %296 = ashr i32 %295, 8
  br label %297

297:                                              ; preds = %256, %262
  %298 = phi i32 [ %296, %262 ], [ 0, %256 ]
  %299 = add nsw i32 %298, %261
  %300 = icmp slt i32 %299, %257
  br i1 %300, label %301, label %308

301:                                              ; preds = %297
  %302 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %303 = zext i16 %50 to i32
  %304 = shl nuw i32 %303, 16
  %305 = zext i16 %258 to i32
  %306 = or i32 %304, %305
  store i32 %306, i32* %302, align 4
  store i32 %261, i32* %8, align 4
  %307 = load i32, i32* %11, align 4
  store i32 %307, i32* %9, align 4
  br label %308

308:                                              ; preds = %301, %297
  %309 = phi i32 [ %299, %301 ], [ %257, %297 ]
  %310 = icmp sge i32 %141, %193
  %311 = zext i1 %310 to i32
  %312 = icmp slt i32 %247, %299
  %313 = select i1 %312, i32 0, i32 2
  %314 = or i32 %313, %311
  switch i32 %314, label %329 [
    i32 0, label %315
    i32 1, label %319
    i32 2, label %324
  ]

315:                                              ; preds = %308
  %316 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %317 = load i32, i32* %53, align 4
  %318 = call i32 %316(i8* %45, i32 32, i32 4, i32 4, i8* %18, i32 %317, i32* nonnull %11) #4
  br label %335

319:                                              ; preds = %308
  %320 = or i16 %50, 4
  %321 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %322 = load i32, i32* %53, align 4
  %323 = call i32 %321(i8* %207, i32 32, i32 4, i32 4, i8* %18, i32 %322, i32* nonnull %11) #4
  br label %335

324:                                              ; preds = %308
  %325 = or i16 %48, 4
  %326 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %327 = load i32, i32* %53, align 4
  %328 = call i32 %326(i8* %101, i32 32, i32 4, i32 4, i8* %18, i32 %327, i32* nonnull %11) #4
  br label %335

329:                                              ; preds = %308
  %330 = or i16 %50, 4
  %331 = or i16 %48, 4
  %332 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %99, align 8
  %333 = load i32, i32* %53, align 4
  %334 = call i32 %332(i8* %46, i32 32, i32 4, i32 4, i8* %18, i32 %333, i32* nonnull %11) #4
  br label %335

335:                                              ; preds = %329, %324, %319, %315
  %336 = phi i16 [ %330, %329 ], [ %98, %324 ], [ %320, %319 ], [ %98, %315 ]
  %337 = phi i16 [ %331, %329 ], [ %325, %324 ], [ %205, %319 ], [ %205, %315 ]
  %338 = phi i32 [ %334, %329 ], [ %328, %324 ], [ %323, %319 ], [ %318, %315 ]
  br i1 %56, label %374, label %339

339:                                              ; preds = %335
  %340 = sext i16 %337 to i32
  %341 = bitcast %union.int_mv* %4 to %struct.MV*
  %342 = bitcast %union.int_mv* %4 to i16*
  %343 = load i16, i16* %342, align 4
  %344 = sext i16 %343 to i32
  %345 = sub nsw i32 %340, %344
  %346 = ashr i32 %345, 1
  %347 = icmp slt i32 %346, 2047
  %348 = select i1 %347, i32 %346, i32 2047
  %349 = icmp sgt i32 %348, 0
  %350 = select i1 %349, i32 %348, i32 0
  %351 = sext i16 %336 to i32
  %352 = getelementptr inbounds %struct.MV, %struct.MV* %341, i64 0, i32 1
  %353 = load i16, i16* %352, align 2
  %354 = sext i16 %353 to i32
  %355 = sub nsw i32 %351, %354
  %356 = ashr i32 %355, 1
  %357 = icmp slt i32 %356, 2047
  %358 = select i1 %357, i32 %356, i32 2047
  %359 = icmp sgt i32 %358, 0
  %360 = select i1 %359, i32 %358, i32 0
  %361 = load i32*, i32** %7, align 8
  %362 = zext i32 %350 to i64
  %363 = getelementptr inbounds i32, i32* %361, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = getelementptr inbounds i32*, i32** %7, i64 1
  %366 = load i32*, i32** %365, align 8
  %367 = zext i32 %360 to i64
  %368 = getelementptr inbounds i32, i32* %366, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = add nsw i32 %369, %364
  %371 = mul nsw i32 %370, %5
  %372 = add nsw i32 %371, 128
  %373 = ashr i32 %372, 8
  br label %374

374:                                              ; preds = %335, %339
  %375 = phi i32 [ %373, %339 ], [ 0, %335 ]
  %376 = add nsw i32 %375, %338
  %377 = icmp slt i32 %376, %309
  br i1 %377, label %378, label %385

378:                                              ; preds = %374
  %379 = getelementptr inbounds %union.int_mv, %union.int_mv* %3, i64 0, i32 0
  %380 = zext i16 %336 to i32
  %381 = shl nuw i32 %380, 16
  %382 = zext i16 %337 to i32
  %383 = or i32 %381, %382
  store i32 %383, i32* %379, align 4
  store i32 %338, i32* %8, align 4
  %384 = load i32, i32* %11, align 4
  store i32 %384, i32* %9, align 4
  br label %385

385:                                              ; preds = %378, %374
  %386 = phi i32 [ %376, %378 ], [ %309, %374 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #4
  ret i32 %386
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_hex_search(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, %union.int_mv* nocapture, i32, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %11 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %12 = load i8**, i8*** %11, align 8
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %21 = load i32, i32* %20, align 16
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %union.int_mv* %9 to %struct.MV*
  %25 = bitcast %union.int_mv* %9 to i16*
  %26 = load i16, i16* %25, align 4
  %27 = ashr i16 %26, 3
  %28 = getelementptr inbounds %struct.MV, %struct.MV* %24, i64 0, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = ashr i16 %29, 3
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %32 = load i32, i32* %31, align 16
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %union.int_mv* %3 to %struct.MV*
  %40 = getelementptr inbounds %struct.MV, %struct.MV* %39, i64 0, i32 1
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i32
  %43 = icmp sgt i32 %32, %42
  %44 = select i1 %43, i32 %32, i32 %42
  %45 = shl i32 %44, 16
  %46 = ashr exact i32 %45, 16
  %47 = icmp sgt i32 %46, %34
  %48 = select i1 %47, i32 %34, i32 %46
  %49 = trunc i32 %48 to i16
  store i16 %49, i16* %40, align 2
  %50 = bitcast %union.int_mv* %3 to i16*
  %51 = load i16, i16* %50, align 4
  %52 = sext i16 %51 to i32
  %53 = icmp sgt i32 %36, %52
  %54 = select i1 %53, i32 %36, i32 %52
  %55 = shl i32 %54, 16
  %56 = ashr exact i32 %55, 16
  %57 = icmp sgt i32 %56, %38
  %58 = select i1 %57, i32 %38, i32 %56
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %50, align 4
  %60 = shl i32 %58, 16
  %61 = ashr exact i32 %60, 16
  %62 = shl i32 %48, 16
  %63 = ashr exact i32 %62, 16
  %64 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %23, i64 %66
  %68 = mul nsw i32 %61, %21
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  %71 = sext i16 %49 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %7, i64 0, i32 0
  %74 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %75 = tail call i32 %74(i8* %17, i32 %19, i8* %72, i32 %21) #4
  %76 = icmp eq i32** %8, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %10
  %78 = load i32*, i32** %8, align 8
  %79 = sext i16 %59 to i64
  %80 = sext i16 %27 to i64
  %81 = sub nsw i64 %79, %80
  %82 = getelementptr inbounds i32, i32* %78, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds i32*, i32** %8, i64 1
  %85 = load i32*, i32** %84, align 8
  %86 = sext i16 %30 to i64
  %87 = sub nsw i64 %71, %86
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, %83
  %91 = mul nsw i32 %90, %6
  %92 = add nsw i32 %91, 128
  %93 = ashr i32 %92, 8
  br label %94

94:                                               ; preds = %10, %77
  %95 = phi i32 [ %93, %77 ], [ 0, %10 ]
  %96 = add i32 %95, %75
  %97 = icmp sgt i32 %5, 5
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = sext i16 %27 to i64
  %100 = sext i16 %30 to i64
  br label %423

101:                                              ; preds = %94
  %102 = icmp eq i32 %5, 5
  br i1 %102, label %112, label %103

103:                                              ; preds = %101
  %104 = icmp sgt i32 %5, 3
  br i1 %104, label %112, label %105

105:                                              ; preds = %103
  %106 = icmp eq i32 %5, 3
  br i1 %106, label %112, label %107

107:                                              ; preds = %105
  %108 = icmp sgt i32 %5, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %107
  %110 = icmp eq i32 %5, 1
  %111 = select i1 %110, i32 63, i32 127
  br label %112

112:                                              ; preds = %109, %107, %105, %103, %101
  %113 = phi i32 [ 4, %101 ], [ 6, %103 ], [ 15, %105 ], [ 31, %107 ], [ %111, %109 ]
  %114 = add nsw i32 %61, -2
  %115 = load i32, i32* %35, align 8
  %116 = icmp sge i32 %114, %115
  %117 = add nsw i32 %61, 2
  %118 = load i32, i32* %37, align 4
  %119 = icmp sle i32 %117, %118
  %120 = and i1 %116, %119
  %121 = add nsw i32 %63, -2
  %122 = load i32, i32* %31, align 16
  %123 = icmp sge i32 %121, %122
  %124 = and i1 %120, %123
  %125 = add nsw i32 %63, 2
  %126 = load i32, i32* %33, align 4
  %127 = icmp sle i32 %125, %126
  %128 = and i1 %124, %127
  %129 = sext i16 %27 to i64
  %130 = getelementptr inbounds i32*, i32** %8, i64 1
  %131 = sext i16 %30 to i64
  br i1 %128, label %132, label %178

132:                                              ; preds = %112, %173
  %133 = phi i64 [ %176, %173 ], [ 0, %112 ]
  %134 = phi i32 [ %175, %173 ], [ -1, %112 ]
  %135 = phi i32 [ %174, %173 ], [ %96, %112 ]
  %136 = getelementptr inbounds [6 x %struct.MV], [6 x %struct.MV]* @__const.vp8_hex_search.hex, i64 0, i64 %133, i32 0
  %137 = load i16, i16* %136, align 4
  %138 = add i16 %137, %59
  %139 = getelementptr inbounds [6 x %struct.MV], [6 x %struct.MV]* @__const.vp8_hex_search.hex, i64 0, i64 %133, i32 1
  %140 = load i16, i16* %139, align 2
  %141 = add i16 %140, %49
  %142 = sext i16 %138 to i32
  %143 = mul nsw i32 %21, %142
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* %67, i64 %144
  %146 = sext i16 %141 to i64
  %147 = getelementptr inbounds i8, i8* %145, i64 %146
  %148 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %149 = tail call i32 %148(i8* %17, i32 %19, i8* %147, i32 %21) #4
  %150 = icmp ult i32 %149, %135
  br i1 %150, label %151, label %173

151:                                              ; preds = %132
  br i1 %76, label %166, label %152

152:                                              ; preds = %151
  %153 = load i32*, i32** %8, align 8
  %154 = sext i16 %138 to i64
  %155 = sub nsw i64 %154, %129
  %156 = getelementptr inbounds i32, i32* %153, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = load i32*, i32** %130, align 8
  %159 = sub nsw i64 %146, %131
  %160 = getelementptr inbounds i32, i32* %158, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = add nsw i32 %161, %157
  %163 = mul nsw i32 %162, %6
  %164 = add nsw i32 %163, 128
  %165 = ashr i32 %164, 8
  br label %166

166:                                              ; preds = %151, %152
  %167 = phi i32 [ %165, %152 ], [ 0, %151 ]
  %168 = add i32 %167, %149
  %169 = icmp ult i32 %168, %135
  %170 = select i1 %169, i32 %168, i32 %135
  %171 = trunc i64 %133 to i32
  %172 = select i1 %169, i32 %171, i32 %134
  br label %173

173:                                              ; preds = %166, %132
  %174 = phi i32 [ %135, %132 ], [ %170, %166 ]
  %175 = phi i32 [ %134, %132 ], [ %172, %166 ]
  %176 = add nuw nsw i64 %133, 1
  %177 = icmp eq i64 %176, 6
  br i1 %177, label %239, label %132

178:                                              ; preds = %112, %237
  %179 = phi i32 [ %238, %237 ], [ %122, %112 ]
  %180 = phi i64 [ %235, %237 ], [ 0, %112 ]
  %181 = phi i32 [ %234, %237 ], [ -1, %112 ]
  %182 = phi i32 [ %233, %237 ], [ %96, %112 ]
  %183 = getelementptr inbounds [6 x %struct.MV], [6 x %struct.MV]* @__const.vp8_hex_search.hex, i64 0, i64 %180, i32 0
  %184 = load i16, i16* %183, align 4
  %185 = add i16 %184, %59
  %186 = getelementptr inbounds [6 x %struct.MV], [6 x %struct.MV]* @__const.vp8_hex_search.hex, i64 0, i64 %180, i32 1
  %187 = load i16, i16* %186, align 2
  %188 = add i16 %187, %49
  %189 = sext i16 %188 to i32
  %190 = icmp sgt i32 %179, %189
  br i1 %190, label %232, label %191

191:                                              ; preds = %178
  %192 = load i32, i32* %33, align 4
  %193 = icmp slt i32 %192, %189
  br i1 %193, label %232, label %194

194:                                              ; preds = %191
  %195 = sext i16 %185 to i32
  %196 = load i32, i32* %35, align 8
  %197 = icmp sgt i32 %196, %195
  br i1 %197, label %232, label %198

198:                                              ; preds = %194
  %199 = load i32, i32* %37, align 4
  %200 = icmp slt i32 %199, %195
  br i1 %200, label %232, label %201

201:                                              ; preds = %198
  %202 = mul nsw i32 %21, %195
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %67, i64 %203
  %205 = sext i16 %188 to i64
  %206 = getelementptr inbounds i8, i8* %204, i64 %205
  %207 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %208 = tail call i32 %207(i8* %17, i32 %19, i8* %206, i32 %21) #4
  %209 = icmp ult i32 %208, %182
  br i1 %209, label %210, label %232

210:                                              ; preds = %201
  br i1 %76, label %225, label %211

211:                                              ; preds = %210
  %212 = load i32*, i32** %8, align 8
  %213 = sext i16 %185 to i64
  %214 = sub nsw i64 %213, %129
  %215 = getelementptr inbounds i32, i32* %212, i64 %214
  %216 = load i32, i32* %215, align 4
  %217 = load i32*, i32** %130, align 8
  %218 = sub nsw i64 %205, %131
  %219 = getelementptr inbounds i32, i32* %217, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = add nsw i32 %220, %216
  %222 = mul nsw i32 %221, %6
  %223 = add nsw i32 %222, 128
  %224 = ashr i32 %223, 8
  br label %225

225:                                              ; preds = %210, %211
  %226 = phi i32 [ %224, %211 ], [ 0, %210 ]
  %227 = add i32 %226, %208
  %228 = icmp ult i32 %227, %182
  %229 = select i1 %228, i32 %227, i32 %182
  %230 = trunc i64 %180 to i32
  %231 = select i1 %228, i32 %230, i32 %181
  br label %232

232:                                              ; preds = %225, %201, %198, %194, %191, %178
  %233 = phi i32 [ %182, %178 ], [ %182, %191 ], [ %182, %194 ], [ %182, %198 ], [ %182, %201 ], [ %229, %225 ]
  %234 = phi i32 [ %181, %178 ], [ %181, %191 ], [ %181, %194 ], [ %181, %198 ], [ %181, %201 ], [ %231, %225 ]
  %235 = add nuw nsw i64 %180, 1
  %236 = icmp eq i64 %235, 6
  br i1 %236, label %239, label %237

237:                                              ; preds = %232
  %238 = load i32, i32* %31, align 16
  br label %178

239:                                              ; preds = %232, %173
  %240 = phi i32 [ %174, %173 ], [ %233, %232 ]
  %241 = phi i32 [ %175, %173 ], [ %234, %232 ]
  %242 = icmp eq i32 %241, -1
  br i1 %242, label %423, label %243

243:                                              ; preds = %239
  %244 = sext i32 %241 to i64
  %245 = getelementptr inbounds [6 x %struct.MV], [6 x %struct.MV]* @__const.vp8_hex_search.hex, i64 0, i64 %244, i32 0
  %246 = load i16, i16* %245, align 4
  %247 = sext i16 %246 to i32
  %248 = add nsw i32 %61, %247
  %249 = getelementptr inbounds [6 x %struct.MV], [6 x %struct.MV]* @__const.vp8_hex_search.hex, i64 0, i64 %244, i32 1
  %250 = load i16, i16* %249, align 2
  %251 = sext i16 %250 to i32
  %252 = add nsw i32 %63, %251
  br label %253

253:                                              ; preds = %419, %243
  %254 = phi i32 [ %241, %243 ], [ %420, %419 ]
  %255 = phi i32 [ %240, %243 ], [ %400, %419 ]
  %256 = phi i32 [ %252, %243 ], [ %409, %419 ]
  %257 = phi i32 [ %248, %243 ], [ %405, %419 ]
  %258 = phi i32 [ 1, %243 ], [ %421, %419 ]
  %259 = add nsw i32 %257, -2
  %260 = load i32, i32* %35, align 8
  %261 = icmp sge i32 %259, %260
  %262 = add nsw i32 %257, 2
  %263 = load i32, i32* %37, align 4
  %264 = icmp sle i32 %262, %263
  %265 = and i1 %261, %264
  %266 = add nsw i32 %256, -2
  %267 = load i32, i32* %31, align 16
  %268 = icmp sge i32 %266, %267
  %269 = and i1 %265, %268
  %270 = add nsw i32 %256, 2
  %271 = load i32, i32* %33, align 4
  %272 = icmp sle i32 %270, %271
  %273 = and i1 %269, %272
  %274 = sext i32 %254 to i64
  %275 = trunc i32 %257 to i16
  %276 = trunc i32 %256 to i16
  br i1 %273, label %277, label %333

277:                                              ; preds = %253
  %278 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 0, i32 0
  %279 = load i16, i16* %278, align 4
  %280 = add i16 %279, %275
  %281 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 0, i32 1
  %282 = load i16, i16* %281, align 2
  %283 = add i16 %282, %276
  %284 = sext i16 %280 to i32
  %285 = mul nsw i32 %21, %284
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* %67, i64 %286
  %288 = sext i16 %283 to i64
  %289 = getelementptr inbounds i8, i8* %287, i64 %288
  %290 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %291 = tail call i32 %290(i8* %17, i32 %19, i8* %289, i32 %21) #4
  %292 = icmp ult i32 %291, %255
  br i1 %292, label %293, label %315

293:                                              ; preds = %277
  br i1 %76, label %308, label %294

294:                                              ; preds = %293
  %295 = load i32*, i32** %8, align 8
  %296 = sext i16 %280 to i64
  %297 = sub nsw i64 %296, %129
  %298 = getelementptr inbounds i32, i32* %295, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = load i32*, i32** %130, align 8
  %301 = sub nsw i64 %288, %131
  %302 = getelementptr inbounds i32, i32* %300, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = add nsw i32 %303, %299
  %305 = mul nsw i32 %304, %6
  %306 = add nsw i32 %305, 128
  %307 = ashr i32 %306, 8
  br label %308

308:                                              ; preds = %293, %294
  %309 = phi i32 [ %307, %294 ], [ 0, %293 ]
  %310 = add i32 %309, %291
  %311 = icmp ult i32 %310, %255
  %312 = select i1 %311, i32 %310, i32 %255
  %313 = xor i1 %311, true
  %314 = sext i1 %313 to i32
  br label %315

315:                                              ; preds = %308, %277
  %316 = phi i32 [ %255, %277 ], [ %312, %308 ]
  %317 = phi i32 [ -1, %277 ], [ %314, %308 ]
  %318 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 1, i32 0
  %319 = load i16, i16* %318, align 4
  %320 = add i16 %319, %275
  %321 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 1, i32 1
  %322 = load i16, i16* %321, align 2
  %323 = add i16 %322, %276
  %324 = sext i16 %320 to i32
  %325 = mul nsw i32 %21, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %67, i64 %326
  %328 = sext i16 %323 to i64
  %329 = getelementptr inbounds i8, i8* %327, i64 %328
  %330 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %331 = tail call i32 %330(i8* %17, i32 %19, i8* %329, i32 %21) #4
  %332 = icmp ult i32 %331, %316
  br i1 %332, label %579, label %600

333:                                              ; preds = %253, %392
  %334 = phi i32 [ %393, %392 ], [ %267, %253 ]
  %335 = phi i64 [ %390, %392 ], [ 0, %253 ]
  %336 = phi i32 [ %389, %392 ], [ -1, %253 ]
  %337 = phi i32 [ %388, %392 ], [ %255, %253 ]
  %338 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 %335, i32 0
  %339 = load i16, i16* %338, align 4
  %340 = add i16 %339, %275
  %341 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 %335, i32 1
  %342 = load i16, i16* %341, align 2
  %343 = add i16 %342, %276
  %344 = sext i16 %343 to i32
  %345 = icmp sgt i32 %334, %344
  br i1 %345, label %387, label %346

346:                                              ; preds = %333
  %347 = load i32, i32* %33, align 4
  %348 = icmp slt i32 %347, %344
  br i1 %348, label %387, label %349

349:                                              ; preds = %346
  %350 = sext i16 %340 to i32
  %351 = load i32, i32* %35, align 8
  %352 = icmp sgt i32 %351, %350
  br i1 %352, label %387, label %353

353:                                              ; preds = %349
  %354 = load i32, i32* %37, align 4
  %355 = icmp slt i32 %354, %350
  br i1 %355, label %387, label %356

356:                                              ; preds = %353
  %357 = mul nsw i32 %21, %350
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds i8, i8* %67, i64 %358
  %360 = sext i16 %343 to i64
  %361 = getelementptr inbounds i8, i8* %359, i64 %360
  %362 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %363 = tail call i32 %362(i8* %17, i32 %19, i8* %361, i32 %21) #4
  %364 = icmp ult i32 %363, %337
  br i1 %364, label %365, label %387

365:                                              ; preds = %356
  br i1 %76, label %380, label %366

366:                                              ; preds = %365
  %367 = load i32*, i32** %8, align 8
  %368 = sext i16 %340 to i64
  %369 = sub nsw i64 %368, %129
  %370 = getelementptr inbounds i32, i32* %367, i64 %369
  %371 = load i32, i32* %370, align 4
  %372 = load i32*, i32** %130, align 8
  %373 = sub nsw i64 %360, %131
  %374 = getelementptr inbounds i32, i32* %372, i64 %373
  %375 = load i32, i32* %374, align 4
  %376 = add nsw i32 %375, %371
  %377 = mul nsw i32 %376, %6
  %378 = add nsw i32 %377, 128
  %379 = ashr i32 %378, 8
  br label %380

380:                                              ; preds = %365, %366
  %381 = phi i32 [ %379, %366 ], [ 0, %365 ]
  %382 = add i32 %381, %363
  %383 = icmp ult i32 %382, %337
  %384 = select i1 %383, i32 %382, i32 %337
  %385 = trunc i64 %335 to i32
  %386 = select i1 %383, i32 %385, i32 %336
  br label %387

387:                                              ; preds = %380, %356, %353, %349, %346, %333
  %388 = phi i32 [ %337, %333 ], [ %337, %346 ], [ %337, %349 ], [ %337, %353 ], [ %337, %356 ], [ %384, %380 ]
  %389 = phi i32 [ %336, %333 ], [ %336, %346 ], [ %336, %349 ], [ %336, %353 ], [ %336, %356 ], [ %386, %380 ]
  %390 = add nuw nsw i64 %335, 1
  %391 = icmp eq i64 %390, 3
  br i1 %391, label %394, label %392

392:                                              ; preds = %387
  %393 = load i32, i32* %31, align 16
  br label %333

394:                                              ; preds = %387, %633, %600
  %395 = phi i32 [ %601, %600 ], [ %601, %633 ], [ %388, %387 ]
  %396 = phi i32 [ %602, %600 ], [ %602, %633 ], [ %389, %387 ]
  %397 = icmp eq i32 %396, -1
  br i1 %397, label %423, label %398

398:                                              ; preds = %633, %394
  %399 = phi i32 [ %396, %394 ], [ 2, %633 ]
  %400 = phi i32 [ %395, %394 ], [ %635, %633 ]
  %401 = sext i32 %399 to i64
  %402 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 %401, i32 0
  %403 = load i16, i16* %402, align 4
  %404 = sext i16 %403 to i32
  %405 = add nsw i32 %257, %404
  %406 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 %401, i32 1
  %407 = load i16, i16* %406, align 2
  %408 = sext i16 %407 to i32
  %409 = add nsw i32 %256, %408
  %410 = add i32 %254, 5
  %411 = add i32 %410, %399
  %412 = icmp sgt i32 %411, 11
  br i1 %412, label %413, label %415

413:                                              ; preds = %398
  %414 = add nsw i32 %411, -12
  br label %419

415:                                              ; preds = %398
  %416 = icmp sgt i32 %411, 5
  %417 = add nsw i32 %411, -6
  %418 = select i1 %416, i32 %417, i32 %411
  br label %419

419:                                              ; preds = %415, %413
  %420 = phi i32 [ %414, %413 ], [ %418, %415 ]
  %421 = add nuw nsw i32 %258, 1
  %422 = icmp eq i32 %421, %113
  br i1 %422, label %423, label %253

423:                                              ; preds = %394, %419, %98, %239
  %424 = phi i64 [ %100, %98 ], [ %131, %239 ], [ %131, %419 ], [ %131, %394 ]
  %425 = phi i64 [ %99, %98 ], [ %129, %239 ], [ %129, %419 ], [ %129, %394 ]
  %426 = phi i32 [ %61, %98 ], [ %61, %239 ], [ %257, %394 ], [ %405, %419 ]
  %427 = phi i32 [ %63, %98 ], [ %63, %239 ], [ %256, %394 ], [ %409, %419 ]
  %428 = phi i32 [ %96, %98 ], [ %240, %239 ], [ %395, %394 ], [ %400, %419 ]
  %429 = getelementptr inbounds i32*, i32** %8, i64 1
  br label %430

430:                                              ; preds = %559, %423
  %431 = phi i32 [ %428, %423 ], [ %556, %559 ]
  %432 = phi i32 [ %427, %423 ], [ %568, %559 ]
  %433 = phi i32 [ %426, %423 ], [ %564, %559 ]
  %434 = phi i32 [ 0, %423 ], [ %569, %559 ]
  %435 = load i32, i32* %35, align 8
  %436 = icmp sgt i32 %433, %435
  %437 = load i32, i32* %37, align 4
  %438 = icmp slt i32 %433, %437
  %439 = and i1 %436, %438
  %440 = load i32, i32* %31, align 16
  %441 = icmp sgt i32 %432, %440
  %442 = and i1 %439, %441
  %443 = load i32, i32* %33, align 4
  %444 = icmp slt i32 %432, %443
  %445 = and i1 %442, %444
  %446 = trunc i32 %433 to i16
  %447 = trunc i32 %432 to i16
  br i1 %445, label %448, label %494

448:                                              ; preds = %430, %489
  %449 = phi i64 [ %492, %489 ], [ 0, %430 ]
  %450 = phi i32 [ %491, %489 ], [ -1, %430 ]
  %451 = phi i32 [ %490, %489 ], [ %431, %430 ]
  %452 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_hex_search.neighbors, i64 0, i64 %449, i32 0
  %453 = load i16, i16* %452, align 4
  %454 = add i16 %453, %446
  %455 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_hex_search.neighbors, i64 0, i64 %449, i32 1
  %456 = load i16, i16* %455, align 2
  %457 = add i16 %456, %447
  %458 = sext i16 %454 to i32
  %459 = mul nsw i32 %21, %458
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds i8, i8* %67, i64 %460
  %462 = sext i16 %457 to i64
  %463 = getelementptr inbounds i8, i8* %461, i64 %462
  %464 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %465 = tail call i32 %464(i8* %17, i32 %19, i8* %463, i32 %21) #4
  %466 = icmp ult i32 %465, %451
  br i1 %466, label %467, label %489

467:                                              ; preds = %448
  br i1 %76, label %482, label %468

468:                                              ; preds = %467
  %469 = load i32*, i32** %8, align 8
  %470 = sext i16 %454 to i64
  %471 = sub nsw i64 %470, %425
  %472 = getelementptr inbounds i32, i32* %469, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = load i32*, i32** %429, align 8
  %475 = sub nsw i64 %462, %424
  %476 = getelementptr inbounds i32, i32* %474, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = add nsw i32 %477, %473
  %479 = mul nsw i32 %478, %6
  %480 = add nsw i32 %479, 128
  %481 = ashr i32 %480, 8
  br label %482

482:                                              ; preds = %467, %468
  %483 = phi i32 [ %481, %468 ], [ 0, %467 ]
  %484 = add i32 %483, %465
  %485 = icmp ult i32 %484, %451
  %486 = select i1 %485, i32 %484, i32 %451
  %487 = trunc i64 %449 to i32
  %488 = select i1 %485, i32 %487, i32 %450
  br label %489

489:                                              ; preds = %482, %448
  %490 = phi i32 [ %451, %448 ], [ %486, %482 ]
  %491 = phi i32 [ %450, %448 ], [ %488, %482 ]
  %492 = add nuw nsw i64 %449, 1
  %493 = icmp eq i64 %492, 4
  br i1 %493, label %555, label %448

494:                                              ; preds = %430, %553
  %495 = phi i32 [ %554, %553 ], [ %440, %430 ]
  %496 = phi i64 [ %551, %553 ], [ 0, %430 ]
  %497 = phi i32 [ %550, %553 ], [ -1, %430 ]
  %498 = phi i32 [ %549, %553 ], [ %431, %430 ]
  %499 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_hex_search.neighbors, i64 0, i64 %496, i32 0
  %500 = load i16, i16* %499, align 4
  %501 = add i16 %500, %446
  %502 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_hex_search.neighbors, i64 0, i64 %496, i32 1
  %503 = load i16, i16* %502, align 2
  %504 = add i16 %503, %447
  %505 = sext i16 %504 to i32
  %506 = icmp sgt i32 %495, %505
  br i1 %506, label %548, label %507

507:                                              ; preds = %494
  %508 = load i32, i32* %33, align 4
  %509 = icmp slt i32 %508, %505
  br i1 %509, label %548, label %510

510:                                              ; preds = %507
  %511 = sext i16 %501 to i32
  %512 = load i32, i32* %35, align 8
  %513 = icmp sgt i32 %512, %511
  br i1 %513, label %548, label %514

514:                                              ; preds = %510
  %515 = load i32, i32* %37, align 4
  %516 = icmp slt i32 %515, %511
  br i1 %516, label %548, label %517

517:                                              ; preds = %514
  %518 = mul nsw i32 %21, %511
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8, i8* %67, i64 %519
  %521 = sext i16 %504 to i64
  %522 = getelementptr inbounds i8, i8* %520, i64 %521
  %523 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %524 = tail call i32 %523(i8* %17, i32 %19, i8* %522, i32 %21) #4
  %525 = icmp ult i32 %524, %498
  br i1 %525, label %526, label %548

526:                                              ; preds = %517
  br i1 %76, label %541, label %527

527:                                              ; preds = %526
  %528 = load i32*, i32** %8, align 8
  %529 = sext i16 %501 to i64
  %530 = sub nsw i64 %529, %425
  %531 = getelementptr inbounds i32, i32* %528, i64 %530
  %532 = load i32, i32* %531, align 4
  %533 = load i32*, i32** %429, align 8
  %534 = sub nsw i64 %521, %424
  %535 = getelementptr inbounds i32, i32* %533, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = add nsw i32 %536, %532
  %538 = mul nsw i32 %537, %6
  %539 = add nsw i32 %538, 128
  %540 = ashr i32 %539, 8
  br label %541

541:                                              ; preds = %526, %527
  %542 = phi i32 [ %540, %527 ], [ 0, %526 ]
  %543 = add i32 %542, %524
  %544 = icmp ult i32 %543, %498
  %545 = select i1 %544, i32 %543, i32 %498
  %546 = trunc i64 %496 to i32
  %547 = select i1 %544, i32 %546, i32 %497
  br label %548

548:                                              ; preds = %541, %517, %514, %510, %507, %494
  %549 = phi i32 [ %498, %494 ], [ %498, %507 ], [ %498, %510 ], [ %498, %514 ], [ %498, %517 ], [ %545, %541 ]
  %550 = phi i32 [ %497, %494 ], [ %497, %507 ], [ %497, %510 ], [ %497, %514 ], [ %497, %517 ], [ %547, %541 ]
  %551 = add nuw nsw i64 %496, 1
  %552 = icmp eq i64 %551, 4
  br i1 %552, label %555, label %553

553:                                              ; preds = %548
  %554 = load i32, i32* %31, align 16
  br label %494

555:                                              ; preds = %548, %489
  %556 = phi i32 [ %490, %489 ], [ %549, %548 ]
  %557 = phi i32 [ %491, %489 ], [ %550, %548 ]
  %558 = icmp eq i32 %557, -1
  br i1 %558, label %571, label %559

559:                                              ; preds = %555
  %560 = sext i32 %557 to i64
  %561 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_hex_search.neighbors, i64 0, i64 %560, i32 0
  %562 = load i16, i16* %561, align 4
  %563 = sext i16 %562 to i32
  %564 = add nsw i32 %433, %563
  %565 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_hex_search.neighbors, i64 0, i64 %560, i32 1
  %566 = load i16, i16* %565, align 2
  %567 = sext i16 %566 to i32
  %568 = add nsw i32 %432, %567
  %569 = add nuw nsw i32 %434, 1
  %570 = icmp eq i32 %569, 8
  br i1 %570, label %571, label %430

571:                                              ; preds = %555, %559
  %572 = phi i32 [ %568, %559 ], [ %432, %555 ]
  %573 = phi i32 [ %564, %559 ], [ %433, %555 ]
  %574 = trunc i32 %573 to i16
  %575 = trunc i32 %572 to i16
  %576 = bitcast %union.int_mv* %4 to %struct.MV*
  %577 = bitcast %union.int_mv* %4 to i16*
  store i16 %574, i16* %577, align 4
  %578 = getelementptr inbounds %struct.MV, %struct.MV* %576, i64 0, i32 1
  store i16 %575, i16* %578, align 2
  ret i32 %556

579:                                              ; preds = %315
  br i1 %76, label %594, label %580

580:                                              ; preds = %579
  %581 = load i32*, i32** %8, align 8
  %582 = sext i16 %320 to i64
  %583 = sub nsw i64 %582, %129
  %584 = getelementptr inbounds i32, i32* %581, i64 %583
  %585 = load i32, i32* %584, align 4
  %586 = load i32*, i32** %130, align 8
  %587 = sub nsw i64 %328, %131
  %588 = getelementptr inbounds i32, i32* %586, i64 %587
  %589 = load i32, i32* %588, align 4
  %590 = add nsw i32 %589, %585
  %591 = mul nsw i32 %590, %6
  %592 = add nsw i32 %591, 128
  %593 = ashr i32 %592, 8
  br label %594

594:                                              ; preds = %580, %579
  %595 = phi i32 [ %593, %580 ], [ 0, %579 ]
  %596 = add i32 %595, %331
  %597 = icmp ult i32 %596, %316
  %598 = select i1 %597, i32 %596, i32 %316
  %599 = select i1 %597, i32 1, i32 %317
  br label %600

600:                                              ; preds = %594, %315
  %601 = phi i32 [ %316, %315 ], [ %598, %594 ]
  %602 = phi i32 [ %317, %315 ], [ %599, %594 ]
  %603 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 2, i32 0
  %604 = load i16, i16* %603, align 4
  %605 = add i16 %604, %275
  %606 = getelementptr inbounds [6 x [3 x %struct.MV]], [6 x [3 x %struct.MV]]* @next_chkpts, i64 0, i64 %274, i64 2, i32 1
  %607 = load i16, i16* %606, align 2
  %608 = add i16 %607, %276
  %609 = sext i16 %605 to i32
  %610 = mul nsw i32 %21, %609
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds i8, i8* %67, i64 %611
  %613 = sext i16 %608 to i64
  %614 = getelementptr inbounds i8, i8* %612, i64 %613
  %615 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %73, align 8
  %616 = tail call i32 %615(i8* %17, i32 %19, i8* %614, i32 %21) #4
  %617 = icmp ult i32 %616, %601
  br i1 %617, label %618, label %394

618:                                              ; preds = %600
  br i1 %76, label %633, label %619

619:                                              ; preds = %618
  %620 = load i32*, i32** %8, align 8
  %621 = sext i16 %605 to i64
  %622 = sub nsw i64 %621, %129
  %623 = getelementptr inbounds i32, i32* %620, i64 %622
  %624 = load i32, i32* %623, align 4
  %625 = load i32*, i32** %130, align 8
  %626 = sub nsw i64 %613, %131
  %627 = getelementptr inbounds i32, i32* %625, i64 %626
  %628 = load i32, i32* %627, align 4
  %629 = add nsw i32 %628, %624
  %630 = mul nsw i32 %629, %6
  %631 = add nsw i32 %630, 128
  %632 = ashr i32 %631, 8
  br label %633

633:                                              ; preds = %619, %618
  %634 = phi i32 [ %632, %619 ], [ 0, %618 ]
  %635 = add i32 %634, %616
  %636 = icmp ult i32 %635, %601
  br i1 %636, label %398, label %394
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_diamond_search_sad_c(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, %union.int_mv* nocapture, i32, i32, i32* nocapture, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %14 = load i8**, i8*** %13, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %23 = load i32, i32* %22, align 16
  %24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #4
  store i32 -1431655766, i32* %12, align 4
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 0
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 1
  %30 = load i32*, i32** %29, align 8
  %31 = bitcast %union.int_mv* %10 to %struct.MV*
  %32 = bitcast %union.int_mv* %10 to i16*
  %33 = load i16, i16* %32, align 4
  %34 = ashr i16 %33, 3
  %35 = getelementptr inbounds %struct.MV, %struct.MV* %31, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = ashr i16 %36, 3
  %38 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %39 = load i32, i32* %38, align 16
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %union.int_mv* %3 to %struct.MV*
  %47 = getelementptr inbounds %struct.MV, %struct.MV* %46, i64 0, i32 1
  %48 = load i16, i16* %47, align 2
  %49 = sext i16 %48 to i32
  %50 = icmp sgt i32 %39, %49
  %51 = select i1 %50, i32 %39, i32 %49
  %52 = shl i32 %51, 16
  %53 = ashr exact i32 %52, 16
  %54 = icmp sgt i32 %53, %41
  %55 = select i1 %54, i32 %41, i32 %53
  %56 = trunc i32 %55 to i16
  store i16 %56, i16* %47, align 2
  %57 = bitcast %union.int_mv* %3 to i16*
  %58 = load i16, i16* %57, align 4
  %59 = sext i16 %58 to i32
  %60 = icmp sgt i32 %43, %59
  %61 = select i1 %60, i32 %43, i32 %59
  %62 = shl i32 %61, 16
  %63 = ashr exact i32 %62, 16
  %64 = icmp sgt i32 %63, %45
  %65 = select i1 %64, i32 %45, i32 %63
  %66 = trunc i32 %65 to i16
  store i16 %66, i16* %57, align 4
  %67 = shl i32 %65, 16
  %68 = ashr exact i32 %67, 16
  store i32 0, i32* %7, align 4
  %69 = bitcast %union.int_mv* %4 to %struct.MV*
  %70 = bitcast %union.int_mv* %4 to i16*
  store i16 %66, i16* %70, align 4
  %71 = getelementptr inbounds %struct.MV, %struct.MV* %69, i64 0, i32 1
  store i16 %56, i16* %71, align 2
  %72 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %25, i64 %74
  %76 = mul nsw i32 %68, %23
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = sext i16 %56 to i64
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %8, i64 0, i32 0
  %82 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %81, align 8
  %83 = tail call i32 %82(i8* %19, i32 %21, i8* %80, i32 %23) #4
  %84 = load i16, i16* %70, align 4
  %85 = sext i16 %34 to i64
  %86 = load i16, i16* %71, align 2
  %87 = sext i16 %37 to i64
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 11
  %89 = load %struct.search_site*, %struct.search_site** %88, align 8
  %90 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 13
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %5
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.search_site, %struct.search_site* %89, i64 %93
  %95 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 12
  %96 = load i32, i32* %95, align 16
  %97 = sdiv i32 %96, %91
  %98 = sub i32 %97, %5
  %99 = icmp sgt i32 %98, 0
  br i1 %99, label %100, label %228

100:                                              ; preds = %11
  %101 = sext i16 %86 to i64
  %102 = sub nsw i64 %101, %87
  %103 = getelementptr inbounds i32, i32* %30, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sext i16 %84 to i64
  %106 = sub nsw i64 %105, %85
  %107 = getelementptr inbounds i32, i32* %28, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %104, %108
  %110 = mul nsw i32 %109, %6
  %111 = add nsw i32 %110, 128
  %112 = ashr i32 %111, 8
  %113 = add i32 %112, %83
  br label %114

114:                                              ; preds = %223, %100
  %115 = phi i32 [ %224, %223 ], [ %91, %100 ]
  %116 = phi i32 [ %196, %223 ], [ 1, %100 ]
  %117 = phi i32 [ %220, %223 ], [ 0, %100 ]
  %118 = phi i32 [ %195, %223 ], [ 0, %100 ]
  %119 = phi i32 [ %194, %223 ], [ %113, %100 ]
  %120 = phi i8* [ %219, %223 ], [ %80, %100 ]
  %121 = phi i32 [ %221, %223 ], [ 0, %100 ]
  %122 = icmp sgt i32 %115, 0
  br i1 %122, label %123, label %193

123:                                              ; preds = %114
  %124 = sext i32 %116 to i64
  br label %125

125:                                              ; preds = %123, %184
  %126 = phi i64 [ %124, %123 ], [ %187, %184 ]
  %127 = phi i32 [ 0, %123 ], [ %188, %184 ]
  %128 = phi i32 [ %118, %123 ], [ %186, %184 ]
  %129 = phi i32 [ %119, %123 ], [ %185, %184 ]
  %130 = load i16, i16* %70, align 4
  %131 = sext i16 %130 to i32
  %132 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %126
  %133 = getelementptr inbounds %struct.search_site, %struct.search_site* %132, i64 0, i32 0, i32 0
  %134 = load i16, i16* %133, align 4
  %135 = sext i16 %134 to i32
  %136 = add nsw i32 %135, %131
  %137 = load i16, i16* %71, align 2
  %138 = sext i16 %137 to i32
  %139 = getelementptr inbounds %struct.search_site, %struct.search_site* %132, i64 0, i32 0, i32 1
  %140 = load i16, i16* %139, align 2
  %141 = sext i16 %140 to i32
  %142 = add nsw i32 %141, %138
  %143 = load i32, i32* %38, align 16
  %144 = icmp sgt i32 %142, %143
  br i1 %144, label %145, label %184

145:                                              ; preds = %125
  %146 = load i32, i32* %40, align 4
  %147 = icmp slt i32 %142, %146
  br i1 %147, label %148, label %184

148:                                              ; preds = %145
  %149 = load i32, i32* %42, align 8
  %150 = icmp sgt i32 %136, %149
  br i1 %150, label %151, label %184

151:                                              ; preds = %148
  %152 = load i32, i32* %44, align 4
  %153 = icmp slt i32 %136, %152
  br i1 %153, label %154, label %184

154:                                              ; preds = %151
  %155 = getelementptr inbounds %struct.search_site, %struct.search_site* %132, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %120, i64 %157
  %159 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %81, align 8
  %160 = tail call i32 %159(i8* %19, i32 %21, i8* %158, i32 %23) #4
  store i32 %160, i32* %12, align 4
  %161 = icmp ult i32 %160, %129
  br i1 %161, label %162, label %184

162:                                              ; preds = %154
  %163 = zext i32 %136 to i64
  %164 = zext i32 %142 to i64
  %165 = shl i64 %163, 48
  %166 = ashr exact i64 %165, 48
  %167 = sub nsw i64 %166, %85
  %168 = getelementptr inbounds i32, i32* %28, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = shl i64 %164, 48
  %171 = ashr exact i64 %170, 48
  %172 = sub nsw i64 %171, %87
  %173 = getelementptr inbounds i32, i32* %30, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %174, %169
  %176 = mul nsw i32 %175, %6
  %177 = add nsw i32 %176, 128
  %178 = ashr i32 %177, 8
  %179 = add i32 %178, %160
  store i32 %179, i32* %12, align 4
  %180 = icmp ult i32 %179, %129
  %181 = select i1 %180, i32 %179, i32 %129
  %182 = trunc i64 %126 to i32
  %183 = select i1 %180, i32 %182, i32 %128
  br label %184

184:                                              ; preds = %162, %154, %151, %148, %145, %125
  %185 = phi i32 [ %129, %154 ], [ %129, %151 ], [ %129, %148 ], [ %129, %145 ], [ %129, %125 ], [ %181, %162 ]
  %186 = phi i32 [ %128, %154 ], [ %128, %151 ], [ %128, %148 ], [ %128, %145 ], [ %128, %125 ], [ %183, %162 ]
  %187 = add nsw i64 %126, 1
  %188 = add nuw nsw i32 %127, 1
  %189 = load i32, i32* %90, align 4
  %190 = icmp slt i32 %188, %189
  br i1 %190, label %125, label %191

191:                                              ; preds = %184
  %192 = trunc i64 %187 to i32
  br label %193

193:                                              ; preds = %191, %114
  %194 = phi i32 [ %119, %114 ], [ %185, %191 ]
  %195 = phi i32 [ %118, %114 ], [ %186, %191 ]
  %196 = phi i32 [ %116, %114 ], [ %192, %191 ]
  %197 = icmp eq i32 %195, %117
  br i1 %197, label %213, label %198

198:                                              ; preds = %193
  %199 = sext i32 %195 to i64
  %200 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %199
  %201 = getelementptr inbounds %struct.search_site, %struct.search_site* %200, i64 0, i32 0, i32 0
  %202 = load i16, i16* %201, align 4
  %203 = load i16, i16* %70, align 4
  %204 = add i16 %203, %202
  store i16 %204, i16* %70, align 4
  %205 = getelementptr inbounds %struct.search_site, %struct.search_site* %200, i64 0, i32 0, i32 1
  %206 = load i16, i16* %205, align 2
  %207 = load i16, i16* %71, align 2
  %208 = add i16 %207, %206
  store i16 %208, i16* %71, align 2
  %209 = getelementptr inbounds %struct.search_site, %struct.search_site* %200, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %120, i64 %211
  br label %218

213:                                              ; preds = %193
  %214 = icmp eq i8* %120, %80
  br i1 %214, label %215, label %218

215:                                              ; preds = %213
  %216 = load i32, i32* %7, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %7, align 4
  br label %218

218:                                              ; preds = %198, %215, %213
  %219 = phi i8* [ %212, %198 ], [ %80, %215 ], [ %120, %213 ]
  %220 = phi i32 [ %195, %198 ], [ %117, %215 ], [ %117, %213 ]
  %221 = add nuw nsw i32 %121, 1
  %222 = icmp eq i32 %221, %98
  br i1 %222, label %225, label %223

223:                                              ; preds = %218
  %224 = load i32, i32* %90, align 4
  br label %114

225:                                              ; preds = %218
  %226 = load i16, i16* %70, align 4
  %227 = load i16, i16* %71, align 2
  br label %228

228:                                              ; preds = %225, %11
  %229 = phi i16 [ %86, %11 ], [ %227, %225 ]
  %230 = phi i16 [ %84, %11 ], [ %226, %225 ]
  %231 = phi i8* [ %80, %11 ], [ %219, %225 ]
  %232 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %8, i64 0, i32 1
  %233 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %232, align 8
  %234 = call i32 %233(i8* %19, i32 %21, i8* %231, i32 %23, i32* nonnull %12) #4
  %235 = icmp eq i32** %9, null
  br i1 %235, label %272, label %236

236:                                              ; preds = %228
  %237 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %238 = load i32, i32* %237, align 8
  %239 = shl i16 %229, 3
  %240 = shl i16 %230, 3
  %241 = sext i16 %240 to i32
  %242 = load i16, i16* %32, align 4
  %243 = sext i16 %242 to i32
  %244 = sub nsw i32 %241, %243
  %245 = ashr i32 %244, 1
  %246 = icmp slt i32 %245, 2047
  %247 = select i1 %246, i32 %245, i32 2047
  %248 = icmp sgt i32 %247, 0
  %249 = select i1 %248, i32 %247, i32 0
  %250 = sext i16 %239 to i32
  %251 = load i16, i16* %35, align 2
  %252 = sext i16 %251 to i32
  %253 = sub nsw i32 %250, %252
  %254 = ashr i32 %253, 1
  %255 = icmp slt i32 %254, 2047
  %256 = select i1 %255, i32 %254, i32 2047
  %257 = icmp sgt i32 %256, 0
  %258 = select i1 %257, i32 %256, i32 0
  %259 = load i32*, i32** %9, align 8
  %260 = zext i32 %249 to i64
  %261 = getelementptr inbounds i32, i32* %259, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32*, i32** %9, i64 1
  %264 = load i32*, i32** %263, align 8
  %265 = zext i32 %258 to i64
  %266 = getelementptr inbounds i32, i32* %264, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = add nsw i32 %267, %262
  %269 = mul nsw i32 %268, %238
  %270 = add nsw i32 %269, 128
  %271 = ashr i32 %270, 8
  br label %272

272:                                              ; preds = %228, %236
  %273 = phi i32 [ %271, %236 ], [ 0, %228 ]
  %274 = add i32 %273, %234
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #4
  ret i32 %274
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_diamond_search_sadx4(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, %union.int_mv* nocapture, i32, i32, i32* nocapture, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %12 = alloca i32, align 4
  %13 = alloca [4 x i32], align 16
  %14 = alloca [4 x i8*], align 16
  %15 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %16 = load i8**, i8*** %15, align 8
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %17, i64 %20
  %22 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %25 = load i32, i32* %24, align 16
  %26 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #4
  store i32 -1431655766, i32* %12, align 4
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 1
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %union.int_mv* %10 to %struct.MV*
  %34 = bitcast %union.int_mv* %10 to i16*
  %35 = load i16, i16* %34, align 4
  %36 = ashr i16 %35, 3
  %37 = getelementptr inbounds %struct.MV, %struct.MV* %33, i64 0, i32 1
  %38 = load i16, i16* %37, align 2
  %39 = ashr i16 %38, 3
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %41 = load i32, i32* %40, align 16
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %union.int_mv* %3 to %struct.MV*
  %49 = getelementptr inbounds %struct.MV, %struct.MV* %48, i64 0, i32 1
  %50 = load i16, i16* %49, align 2
  %51 = sext i16 %50 to i32
  %52 = icmp sgt i32 %41, %51
  %53 = select i1 %52, i32 %41, i32 %51
  %54 = shl i32 %53, 16
  %55 = ashr exact i32 %54, 16
  %56 = icmp sgt i32 %55, %43
  %57 = select i1 %56, i32 %43, i32 %55
  %58 = trunc i32 %57 to i16
  store i16 %58, i16* %49, align 2
  %59 = bitcast %union.int_mv* %3 to i16*
  %60 = load i16, i16* %59, align 4
  %61 = sext i16 %60 to i32
  %62 = icmp sgt i32 %45, %61
  %63 = select i1 %62, i32 %45, i32 %61
  %64 = shl i32 %63, 16
  %65 = ashr exact i32 %64, 16
  %66 = icmp sgt i32 %65, %47
  %67 = select i1 %66, i32 %47, i32 %65
  %68 = trunc i32 %67 to i16
  store i16 %68, i16* %59, align 4
  %69 = shl i32 %67, 16
  %70 = ashr exact i32 %69, 16
  store i32 0, i32* %7, align 4
  %71 = bitcast %union.int_mv* %4 to %struct.MV*
  %72 = bitcast %union.int_mv* %4 to i16*
  store i16 %68, i16* %72, align 4
  %73 = getelementptr inbounds %struct.MV, %struct.MV* %71, i64 0, i32 1
  store i16 %58, i16* %73, align 2
  %74 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %27, i64 %76
  %78 = mul nsw i32 %70, %25
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = sext i16 %58 to i64
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %8, i64 0, i32 0
  %84 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %83, align 8
  %85 = tail call i32 %84(i8* %21, i32 %23, i8* %82, i32 %25) #4
  %86 = sext i16 %36 to i64
  %87 = sext i16 %39 to i64
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 11
  %89 = load %struct.search_site*, %struct.search_site** %88, align 8
  %90 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 13
  %91 = load i32, i32* %90, align 4
  %92 = mul nsw i32 %91, %5
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.search_site, %struct.search_site* %89, i64 %93
  %95 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 12
  %96 = load i32, i32* %95, align 16
  %97 = sdiv i32 %96, %91
  %98 = sub i32 %97, %5
  %99 = icmp sgt i32 %98, 0
  %100 = load i16, i16* %72, align 4
  br i1 %99, label %101, label %359

101:                                              ; preds = %11
  %102 = load i16, i16* %73, align 2
  %103 = sext i16 %102 to i64
  %104 = sub nsw i64 %103, %87
  %105 = getelementptr inbounds i32, i32* %32, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = sext i16 %100 to i64
  %108 = sub nsw i64 %107, %86
  %109 = getelementptr inbounds i32, i32* %30, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %106, %110
  %112 = mul nsw i32 %111, %6
  %113 = add nsw i32 %112, 128
  %114 = ashr i32 %113, 8
  %115 = add i32 %114, %85
  %116 = bitcast [4 x i32]* %13 to i8*
  %117 = getelementptr inbounds [4 x i32], [4 x i32]* %13, i64 0, i64 0
  %118 = getelementptr inbounds [4 x i32], [4 x i32]* %13, i64 0, i64 1
  %119 = getelementptr inbounds [4 x i32], [4 x i32]* %13, i64 0, i64 2
  %120 = getelementptr inbounds [4 x i32], [4 x i32]* %13, i64 0, i64 3
  %121 = bitcast [4 x i8*]* %14 to i8*
  %122 = getelementptr inbounds [4 x i8*], [4 x i8*]* %14, i64 0, i64 0
  %123 = getelementptr inbounds [4 x i8*], [4 x i8*]* %14, i64 0, i64 1
  %124 = getelementptr inbounds [4 x i8*], [4 x i8*]* %14, i64 0, i64 2
  %125 = getelementptr inbounds [4 x i8*], [4 x i8*]* %14, i64 0, i64 3
  %126 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %8, i64 0, i32 5
  %127 = bitcast [4 x i32]* %13 to i8*
  %128 = bitcast [4 x i8*]* %14 to i8*
  br label %129

129:                                              ; preds = %357, %101
  %130 = phi i16 [ %102, %101 ], [ %358, %357 ]
  %131 = phi i16 [ %100, %101 ], [ %355, %357 ]
  %132 = phi i32 [ 1, %101 ], [ %329, %357 ]
  %133 = phi i32 [ 0, %101 ], [ %354, %357 ]
  %134 = phi i32 [ 0, %101 ], [ %353, %357 ]
  %135 = phi i32 [ 0, %101 ], [ %328, %357 ]
  %136 = phi i32 [ %115, %101 ], [ %327, %357 ]
  %137 = phi i8* [ %82, %101 ], [ %352, %357 ]
  %138 = sext i16 %131 to i32
  %139 = sext i32 %132 to i64
  %140 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %139
  %141 = getelementptr inbounds %struct.search_site, %struct.search_site* %140, i64 0, i32 0
  %142 = getelementptr inbounds %struct.MV, %struct.MV* %141, i64 0, i32 0
  %143 = load i16, i16* %142, align 4
  %144 = sext i16 %143 to i32
  %145 = add nsw i32 %144, %138
  %146 = load i32, i32* %44, align 8
  %147 = icmp sgt i32 %145, %146
  %148 = add nsw i32 %132, 1
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %149
  %151 = getelementptr inbounds %struct.search_site, %struct.search_site* %150, i64 0, i32 0
  %152 = getelementptr inbounds %struct.MV, %struct.MV* %151, i64 0, i32 0
  %153 = load i16, i16* %152, align 4
  %154 = sext i16 %153 to i32
  %155 = add nsw i32 %154, %138
  %156 = load i32, i32* %46, align 4
  %157 = icmp slt i32 %155, %156
  %158 = and i1 %147, %157
  %159 = sext i16 %130 to i32
  %160 = add nsw i32 %132, 2
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %161
  %163 = getelementptr inbounds %struct.search_site, %struct.search_site* %162, i64 0, i32 0
  %164 = getelementptr inbounds %struct.MV, %struct.MV* %163, i64 0, i32 1
  %165 = load i16, i16* %164, align 2
  %166 = sext i16 %165 to i32
  %167 = add nsw i32 %166, %159
  %168 = load i32, i32* %40, align 16
  %169 = icmp sgt i32 %167, %168
  %170 = and i1 %158, %169
  %171 = add nsw i32 %132, 3
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %172
  %174 = getelementptr inbounds %struct.search_site, %struct.search_site* %173, i64 0, i32 0
  %175 = getelementptr inbounds %struct.MV, %struct.MV* %174, i64 0, i32 1
  %176 = load i16, i16* %175, align 2
  %177 = sext i16 %176 to i32
  %178 = add nsw i32 %177, %159
  %179 = load i32, i32* %42, align 4
  %180 = icmp slt i32 %178, %179
  %181 = and i1 %170, %180
  br i1 %181, label %185, label %182

182:                                              ; preds = %129
  %183 = load i32, i32* %90, align 4
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %254, label %326

185:                                              ; preds = %129
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -86, i64 16, i1 false)
  %186 = load i32, i32* %90, align 4
  %187 = icmp sgt i32 %186, 0
  br i1 %187, label %188, label %250

188:                                              ; preds = %185, %500
  %189 = phi i32 [ %503, %500 ], [ %132, %185 ]
  %190 = phi i32 [ %504, %500 ], [ 0, %185 ]
  %191 = phi i32 [ %502, %500 ], [ %135, %185 ]
  %192 = phi i32 [ %501, %500 ], [ %136, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #4
  %193 = sext i32 %189 to i64
  %194 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %193
  %195 = getelementptr inbounds %struct.search_site, %struct.search_site* %194, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %128, i8 -86, i64 32, i1 false)
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %137, i64 %197
  store i8* %198, i8** %122, align 16
  %199 = add nsw i64 %193, 1
  %200 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %199
  %201 = getelementptr inbounds %struct.search_site, %struct.search_site* %200, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %137, i64 %203
  store i8* %204, i8** %123, align 8
  %205 = add nsw i64 %193, 2
  %206 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %205
  %207 = getelementptr inbounds %struct.search_site, %struct.search_site* %206, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %137, i64 %209
  store i8* %210, i8** %124, align 16
  %211 = add nsw i64 %193, 3
  %212 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %211
  %213 = getelementptr inbounds %struct.search_site, %struct.search_site* %212, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* %137, i64 %215
  store i8* %216, i8** %125, align 8
  %217 = load void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)** %126, align 8
  call void %217(i8* %21, i32 %23, i8** nonnull %122, i32 %25, i32* nonnull %117) #4
  %218 = load i32, i32* %117, align 16
  %219 = icmp ult i32 %218, %192
  br i1 %219, label %220, label %245

220:                                              ; preds = %188
  %221 = load i16, i16* %72, align 4
  %222 = getelementptr inbounds %struct.search_site, %struct.search_site* %194, i64 0, i32 0, i32 0
  %223 = load i16, i16* %222, align 4
  %224 = add i16 %223, %221
  %225 = load i16, i16* %73, align 2
  %226 = getelementptr inbounds %struct.search_site, %struct.search_site* %194, i64 0, i32 0, i32 1
  %227 = load i16, i16* %226, align 2
  %228 = add i16 %227, %225
  %229 = sext i16 %224 to i64
  %230 = sub nsw i64 %229, %86
  %231 = getelementptr inbounds i32, i32* %30, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = sext i16 %228 to i64
  %234 = sub nsw i64 %233, %87
  %235 = getelementptr inbounds i32, i32* %32, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = add nsw i32 %236, %232
  %238 = mul nsw i32 %237, %6
  %239 = add nsw i32 %238, 128
  %240 = ashr i32 %239, 8
  %241 = add i32 %240, %218
  store i32 %241, i32* %117, align 16
  %242 = icmp ult i32 %241, %192
  %243 = select i1 %242, i32 %241, i32 %192
  %244 = select i1 %242, i32 %189, i32 %191
  br label %245

245:                                              ; preds = %220, %188
  %246 = phi i32 [ %192, %188 ], [ %243, %220 ]
  %247 = phi i32 [ %191, %188 ], [ %244, %220 ]
  %248 = load i32, i32* %118, align 4
  %249 = icmp ult i32 %248, %246
  br i1 %249, label %406, label %432

250:                                              ; preds = %500, %185
  %251 = phi i32 [ %136, %185 ], [ %501, %500 ]
  %252 = phi i32 [ %135, %185 ], [ %502, %500 ]
  %253 = phi i32 [ %132, %185 ], [ %503, %500 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #4
  br label %326

254:                                              ; preds = %182, %320
  %255 = phi i32 [ %323, %320 ], [ %168, %182 ]
  %256 = phi i16 [ %322, %320 ], [ %130, %182 ]
  %257 = phi i16 [ %321, %320 ], [ %131, %182 ]
  %258 = phi i64 [ %316, %320 ], [ %139, %182 ]
  %259 = phi i32 [ %317, %320 ], [ 0, %182 ]
  %260 = phi i32 [ %315, %320 ], [ %135, %182 ]
  %261 = phi i32 [ %314, %320 ], [ %136, %182 ]
  %262 = sext i16 %257 to i32
  %263 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %258
  %264 = getelementptr inbounds %struct.search_site, %struct.search_site* %263, i64 0, i32 0, i32 0
  %265 = load i16, i16* %264, align 4
  %266 = sext i16 %265 to i32
  %267 = add nsw i32 %266, %262
  %268 = sext i16 %256 to i32
  %269 = getelementptr inbounds %struct.search_site, %struct.search_site* %263, i64 0, i32 0, i32 1
  %270 = load i16, i16* %269, align 2
  %271 = sext i16 %270 to i32
  %272 = add nsw i32 %271, %268
  %273 = icmp sgt i32 %272, %255
  br i1 %273, label %274, label %313

274:                                              ; preds = %254
  %275 = load i32, i32* %42, align 4
  %276 = icmp slt i32 %272, %275
  br i1 %276, label %277, label %313

277:                                              ; preds = %274
  %278 = load i32, i32* %44, align 8
  %279 = icmp sgt i32 %267, %278
  br i1 %279, label %280, label %313

280:                                              ; preds = %277
  %281 = load i32, i32* %46, align 4
  %282 = icmp slt i32 %267, %281
  br i1 %282, label %283, label %313

283:                                              ; preds = %280
  %284 = getelementptr inbounds %struct.search_site, %struct.search_site* %263, i64 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i8, i8* %137, i64 %286
  %288 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %83, align 8
  %289 = call i32 %288(i8* %21, i32 %23, i8* %287, i32 %25) #4
  store i32 %289, i32* %12, align 4
  %290 = icmp ult i32 %289, %261
  br i1 %290, label %291, label %313

291:                                              ; preds = %283
  %292 = zext i32 %267 to i64
  %293 = zext i32 %272 to i64
  %294 = shl i64 %292, 48
  %295 = ashr exact i64 %294, 48
  %296 = sub nsw i64 %295, %86
  %297 = getelementptr inbounds i32, i32* %30, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = shl i64 %293, 48
  %300 = ashr exact i64 %299, 48
  %301 = sub nsw i64 %300, %87
  %302 = getelementptr inbounds i32, i32* %32, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = add nsw i32 %303, %298
  %305 = mul nsw i32 %304, %6
  %306 = add nsw i32 %305, 128
  %307 = ashr i32 %306, 8
  %308 = add i32 %307, %289
  store i32 %308, i32* %12, align 4
  %309 = icmp ult i32 %308, %261
  %310 = select i1 %309, i32 %308, i32 %261
  %311 = trunc i64 %258 to i32
  %312 = select i1 %309, i32 %311, i32 %260
  br label %313

313:                                              ; preds = %291, %283, %280, %277, %274, %254
  %314 = phi i32 [ %261, %283 ], [ %261, %280 ], [ %261, %277 ], [ %261, %274 ], [ %261, %254 ], [ %310, %291 ]
  %315 = phi i32 [ %260, %283 ], [ %260, %280 ], [ %260, %277 ], [ %260, %274 ], [ %260, %254 ], [ %312, %291 ]
  %316 = add nsw i64 %258, 1
  %317 = add nuw nsw i32 %259, 1
  %318 = load i32, i32* %90, align 4
  %319 = icmp slt i32 %317, %318
  br i1 %319, label %320, label %324

320:                                              ; preds = %313
  %321 = load i16, i16* %72, align 4
  %322 = load i16, i16* %73, align 2
  %323 = load i32, i32* %40, align 16
  br label %254

324:                                              ; preds = %313
  %325 = trunc i64 %316 to i32
  br label %326

326:                                              ; preds = %324, %182, %250
  %327 = phi i32 [ %251, %250 ], [ %136, %182 ], [ %314, %324 ]
  %328 = phi i32 [ %252, %250 ], [ %135, %182 ], [ %315, %324 ]
  %329 = phi i32 [ %253, %250 ], [ %132, %182 ], [ %325, %324 ]
  %330 = icmp eq i32 %328, %134
  br i1 %330, label %346, label %331

331:                                              ; preds = %326
  %332 = sext i32 %328 to i64
  %333 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %332
  %334 = getelementptr inbounds %struct.search_site, %struct.search_site* %333, i64 0, i32 0, i32 0
  %335 = load i16, i16* %334, align 4
  %336 = load i16, i16* %72, align 4
  %337 = add i16 %336, %335
  store i16 %337, i16* %72, align 4
  %338 = getelementptr inbounds %struct.search_site, %struct.search_site* %333, i64 0, i32 0, i32 1
  %339 = load i16, i16* %338, align 2
  %340 = load i16, i16* %73, align 2
  %341 = add i16 %340, %339
  store i16 %341, i16* %73, align 2
  %342 = getelementptr inbounds %struct.search_site, %struct.search_site* %333, i64 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds i8, i8* %137, i64 %344
  br label %351

346:                                              ; preds = %326
  %347 = icmp eq i8* %137, %82
  br i1 %347, label %348, label %351

348:                                              ; preds = %346
  %349 = load i32, i32* %7, align 4
  %350 = add nsw i32 %349, 1
  store i32 %350, i32* %7, align 4
  br label %351

351:                                              ; preds = %346, %348, %331
  %352 = phi i8* [ %345, %331 ], [ %82, %348 ], [ %137, %346 ]
  %353 = phi i32 [ %328, %331 ], [ %134, %348 ], [ %134, %346 ]
  %354 = add nuw nsw i32 %133, 1
  %355 = load i16, i16* %72, align 4
  %356 = icmp eq i32 %354, %98
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = load i16, i16* %73, align 2
  br label %129

359:                                              ; preds = %351, %11
  %360 = phi i8* [ %82, %11 ], [ %352, %351 ]
  %361 = phi i16 [ %100, %11 ], [ %355, %351 ]
  %362 = load i16, i16* %73, align 2
  %363 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %8, i64 0, i32 1
  %364 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %363, align 8
  %365 = call i32 %364(i8* %21, i32 %23, i8* %360, i32 %25, i32* nonnull %12) #4
  %366 = icmp eq i32** %9, null
  br i1 %366, label %403, label %367

367:                                              ; preds = %359
  %368 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %369 = load i32, i32* %368, align 8
  %370 = shl i16 %362, 3
  %371 = shl i16 %361, 3
  %372 = sext i16 %371 to i32
  %373 = load i16, i16* %34, align 4
  %374 = sext i16 %373 to i32
  %375 = sub nsw i32 %372, %374
  %376 = ashr i32 %375, 1
  %377 = icmp slt i32 %376, 2047
  %378 = select i1 %377, i32 %376, i32 2047
  %379 = icmp sgt i32 %378, 0
  %380 = select i1 %379, i32 %378, i32 0
  %381 = sext i16 %370 to i32
  %382 = load i16, i16* %37, align 2
  %383 = sext i16 %382 to i32
  %384 = sub nsw i32 %381, %383
  %385 = ashr i32 %384, 1
  %386 = icmp slt i32 %385, 2047
  %387 = select i1 %386, i32 %385, i32 2047
  %388 = icmp sgt i32 %387, 0
  %389 = select i1 %388, i32 %387, i32 0
  %390 = load i32*, i32** %9, align 8
  %391 = zext i32 %380 to i64
  %392 = getelementptr inbounds i32, i32* %390, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = getelementptr inbounds i32*, i32** %9, i64 1
  %395 = load i32*, i32** %394, align 8
  %396 = zext i32 %389 to i64
  %397 = getelementptr inbounds i32, i32* %395, i64 %396
  %398 = load i32, i32* %397, align 4
  %399 = add nsw i32 %398, %393
  %400 = mul nsw i32 %399, %369
  %401 = add nsw i32 %400, 128
  %402 = ashr i32 %401, 8
  br label %403

403:                                              ; preds = %359, %367
  %404 = phi i32 [ %402, %367 ], [ 0, %359 ]
  %405 = add i32 %404, %365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #4
  ret i32 %405

406:                                              ; preds = %245
  %407 = load i16, i16* %72, align 4
  %408 = getelementptr inbounds %struct.search_site, %struct.search_site* %200, i64 0, i32 0, i32 0
  %409 = load i16, i16* %408, align 4
  %410 = add i16 %409, %407
  %411 = load i16, i16* %73, align 2
  %412 = getelementptr inbounds %struct.search_site, %struct.search_site* %200, i64 0, i32 0, i32 1
  %413 = load i16, i16* %412, align 2
  %414 = add i16 %413, %411
  %415 = sext i16 %410 to i64
  %416 = sub nsw i64 %415, %86
  %417 = getelementptr inbounds i32, i32* %30, i64 %416
  %418 = load i32, i32* %417, align 4
  %419 = sext i16 %414 to i64
  %420 = sub nsw i64 %419, %87
  %421 = getelementptr inbounds i32, i32* %32, i64 %420
  %422 = load i32, i32* %421, align 4
  %423 = add nsw i32 %422, %418
  %424 = mul nsw i32 %423, %6
  %425 = add nsw i32 %424, 128
  %426 = ashr i32 %425, 8
  %427 = add i32 %426, %248
  store i32 %427, i32* %118, align 4
  %428 = icmp ult i32 %427, %246
  %429 = select i1 %428, i32 %427, i32 %246
  %430 = trunc i64 %199 to i32
  %431 = select i1 %428, i32 %430, i32 %247
  br label %432

432:                                              ; preds = %406, %245
  %433 = phi i32 [ %246, %245 ], [ %429, %406 ]
  %434 = phi i32 [ %247, %245 ], [ %431, %406 ]
  %435 = add nsw i64 %193, 2
  %436 = load i32, i32* %119, align 8
  %437 = icmp ult i32 %436, %433
  br i1 %437, label %438, label %466

438:                                              ; preds = %432
  %439 = load i16, i16* %72, align 4
  %440 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %435
  %441 = getelementptr inbounds %struct.search_site, %struct.search_site* %440, i64 0, i32 0
  %442 = getelementptr inbounds %struct.MV, %struct.MV* %441, i64 0, i32 0
  %443 = load i16, i16* %442, align 4
  %444 = add i16 %443, %439
  %445 = load i16, i16* %73, align 2
  %446 = getelementptr inbounds %struct.MV, %struct.MV* %441, i64 0, i32 1
  %447 = load i16, i16* %446, align 2
  %448 = add i16 %447, %445
  %449 = sext i16 %444 to i64
  %450 = sub nsw i64 %449, %86
  %451 = getelementptr inbounds i32, i32* %30, i64 %450
  %452 = load i32, i32* %451, align 4
  %453 = sext i16 %448 to i64
  %454 = sub nsw i64 %453, %87
  %455 = getelementptr inbounds i32, i32* %32, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = add nsw i32 %456, %452
  %458 = mul nsw i32 %457, %6
  %459 = add nsw i32 %458, 128
  %460 = ashr i32 %459, 8
  %461 = add i32 %460, %436
  store i32 %461, i32* %119, align 8
  %462 = icmp ult i32 %461, %433
  %463 = select i1 %462, i32 %461, i32 %433
  %464 = trunc i64 %435 to i32
  %465 = select i1 %462, i32 %464, i32 %434
  br label %466

466:                                              ; preds = %438, %432
  %467 = phi i32 [ %433, %432 ], [ %463, %438 ]
  %468 = phi i32 [ %434, %432 ], [ %465, %438 ]
  %469 = add nsw i64 %193, 3
  %470 = load i32, i32* %120, align 4
  %471 = icmp ult i32 %470, %467
  br i1 %471, label %472, label %500

472:                                              ; preds = %466
  %473 = load i16, i16* %72, align 4
  %474 = getelementptr inbounds %struct.search_site, %struct.search_site* %94, i64 %469
  %475 = getelementptr inbounds %struct.search_site, %struct.search_site* %474, i64 0, i32 0
  %476 = getelementptr inbounds %struct.MV, %struct.MV* %475, i64 0, i32 0
  %477 = load i16, i16* %476, align 4
  %478 = add i16 %477, %473
  %479 = load i16, i16* %73, align 2
  %480 = getelementptr inbounds %struct.MV, %struct.MV* %475, i64 0, i32 1
  %481 = load i16, i16* %480, align 2
  %482 = add i16 %481, %479
  %483 = sext i16 %478 to i64
  %484 = sub nsw i64 %483, %86
  %485 = getelementptr inbounds i32, i32* %30, i64 %484
  %486 = load i32, i32* %485, align 4
  %487 = sext i16 %482 to i64
  %488 = sub nsw i64 %487, %87
  %489 = getelementptr inbounds i32, i32* %32, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = add nsw i32 %490, %486
  %492 = mul nsw i32 %491, %6
  %493 = add nsw i32 %492, 128
  %494 = ashr i32 %493, 8
  %495 = add i32 %494, %470
  store i32 %495, i32* %120, align 4
  %496 = icmp ult i32 %495, %467
  %497 = select i1 %496, i32 %495, i32 %467
  %498 = trunc i64 %469 to i32
  %499 = select i1 %496, i32 %498, i32 %468
  br label %500

500:                                              ; preds = %472, %466
  %501 = phi i32 [ %467, %466 ], [ %497, %472 ]
  %502 = phi i32 [ %468, %466 ], [ %499, %472 ]
  %503 = add i32 %189, 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #4
  %504 = add nuw nsw i32 %190, 4
  %505 = load i32, i32* %90, align 4
  %506 = icmp slt i32 %504, %505
  br i1 %506, label %188, label %250
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_full_search_sad_c(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture, %union.int_mv* nocapture readonly, i32, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %12 = load i8**, i8*** %11, align 8
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %21 = load i32, i32* %20, align 16
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 6
  %25 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #4
  store i32 -1431655766, i32* %10, align 4
  %26 = bitcast %union.int_mv* %3 to %struct.MV*
  %27 = bitcast %union.int_mv* %3 to i16*
  %28 = load i16, i16* %27, align 4
  %29 = sext i16 %28 to i32
  %30 = getelementptr inbounds %struct.MV, %struct.MV* %26, i64 0, i32 1
  %31 = load i16, i16* %30, align 2
  %32 = sext i16 %31 to i32
  %33 = sub nsw i32 %29, %5
  %34 = add nsw i32 %29, %5
  %35 = sub nsw i32 %32, %5
  %36 = add nsw i32 %32, %5
  %37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %union.int_mv* %8 to %struct.MV*
  %42 = bitcast %union.int_mv* %8 to i16*
  %43 = load i16, i16* %42, align 4
  %44 = ashr i16 %43, 3
  %45 = getelementptr inbounds %struct.MV, %struct.MV* %41, i64 0, i32 1
  %46 = load i16, i16* %45, align 2
  %47 = ashr i16 %46, 3
  %48 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %23, i64 %50
  %52 = mul nsw i32 %21, %29
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = sext i16 %31 to i64
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = bitcast %union.b_mode_info* %24 to %struct.MV*
  %58 = bitcast %union.b_mode_info* %24 to i16*
  store i16 %28, i16* %58, align 4
  %59 = getelementptr inbounds %struct.MV, %struct.MV* %57, i64 0, i32 1
  store i16 %31, i16* %59, align 2
  %60 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 0
  %61 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %60, align 8
  %62 = tail call i32 %61(i8* %17, i32 %19, i8* %56, i32 %21) #4
  %63 = sext i16 %44 to i64
  %64 = sext i16 %47 to i64
  %65 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %66 = load i32, i32* %65, align 16
  %67 = icmp slt i32 %35, %66
  %68 = select i1 %67, i32 %66, i32 %35
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %36, %70
  %72 = select i1 %71, i32 %70, i32 %36
  %73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %74 = load i32, i32* %73, align 8
  %75 = icmp slt i32 %33, %74
  %76 = select i1 %75, i32 %74, i32 %33
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %34, %78
  %80 = select i1 %79, i32 %78, i32 %34
  %81 = icmp slt i32 %76, %80
  br i1 %81, label %82, label %147

82:                                               ; preds = %9
  %83 = load i16, i16* %59, align 2
  %84 = sext i16 %83 to i64
  %85 = sub nsw i64 %84, %64
  %86 = getelementptr inbounds i32, i32* %40, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i16, i16* %58, align 4
  %89 = sext i16 %88 to i64
  %90 = sub nsw i64 %89, %63
  %91 = getelementptr inbounds i32, i32* %38, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %87, %92
  %94 = mul nsw i32 %93, %4
  %95 = add nsw i32 %94, 128
  %96 = ashr i32 %95, 8
  %97 = add i32 %96, %62
  %98 = sext i32 %68 to i64
  %99 = icmp slt i32 %68, %72
  %100 = sext i32 %76 to i64
  %101 = sext i32 %21 to i64
  %102 = sext i32 %80 to i64
  %103 = getelementptr inbounds i8, i8* %51, i64 %98
  br label %104

104:                                              ; preds = %82, %142
  %105 = phi i64 [ %100, %82 ], [ %145, %142 ]
  %106 = phi i32 [ %97, %82 ], [ %144, %142 ]
  %107 = phi i8* [ %56, %82 ], [ %143, %142 ]
  %108 = trunc i64 %105 to i16
  br i1 %99, label %109, label %142

109:                                              ; preds = %104
  %110 = mul nsw i64 %105, %101
  %111 = getelementptr inbounds i8, i8* %103, i64 %110
  %112 = shl i64 %105, 48
  %113 = ashr exact i64 %112, 48
  %114 = sub nsw i64 %113, %63
  %115 = getelementptr inbounds i32, i32* %38, i64 %114
  br label %116

116:                                              ; preds = %109, %136
  %117 = phi i8* [ %111, %109 ], [ %139, %136 ]
  %118 = phi i32 [ %68, %109 ], [ %140, %136 ]
  %119 = phi i32 [ %106, %109 ], [ %138, %136 ]
  %120 = phi i8* [ %107, %109 ], [ %137, %136 ]
  %121 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %60, align 8
  %122 = tail call i32 %121(i8* %17, i32 %19, i8* %117, i32 %21) #4
  store i32 %122, i32* %10, align 4
  %123 = trunc i32 %118 to i16
  %124 = load i32, i32* %115, align 4
  %125 = sext i16 %123 to i64
  %126 = sub nsw i64 %125, %64
  %127 = getelementptr inbounds i32, i32* %40, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = add nsw i32 %128, %124
  %130 = mul nsw i32 %129, %4
  %131 = add nsw i32 %130, 128
  %132 = ashr i32 %131, 8
  %133 = add i32 %132, %122
  store i32 %133, i32* %10, align 4
  %134 = icmp ult i32 %133, %119
  br i1 %134, label %135, label %136

135:                                              ; preds = %116
  store i16 %108, i16* %58, align 4
  store i16 %123, i16* %59, align 2
  br label %136

136:                                              ; preds = %135, %116
  %137 = phi i8* [ %117, %135 ], [ %120, %116 ]
  %138 = phi i32 [ %133, %135 ], [ %119, %116 ]
  %139 = getelementptr inbounds i8, i8* %117, i64 1
  %140 = add nsw i32 %118, 1
  %141 = icmp slt i32 %140, %72
  br i1 %141, label %116, label %142

142:                                              ; preds = %136, %104
  %143 = phi i8* [ %107, %104 ], [ %137, %136 ]
  %144 = phi i32 [ %106, %104 ], [ %138, %136 ]
  %145 = add nsw i64 %105, 1
  %146 = icmp slt i64 %145, %102
  br i1 %146, label %104, label %147

147:                                              ; preds = %142, %9
  %148 = phi i8* [ %56, %9 ], [ %143, %142 ]
  %149 = load i16, i16* %58, align 4
  %150 = load i16, i16* %59, align 2
  %151 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %152 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %151, align 8
  %153 = call i32 %152(i8* %17, i32 %19, i8* %148, i32 %21, i32* nonnull %10) #4
  %154 = icmp eq i32** %7, null
  br i1 %154, label %191, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %157 = load i32, i32* %156, align 8
  %158 = shl i16 %150, 3
  %159 = shl i16 %149, 3
  %160 = sext i16 %159 to i32
  %161 = load i16, i16* %42, align 4
  %162 = sext i16 %161 to i32
  %163 = sub nsw i32 %160, %162
  %164 = ashr i32 %163, 1
  %165 = icmp slt i32 %164, 2047
  %166 = select i1 %165, i32 %164, i32 2047
  %167 = icmp sgt i32 %166, 0
  %168 = select i1 %167, i32 %166, i32 0
  %169 = sext i16 %158 to i32
  %170 = load i16, i16* %45, align 2
  %171 = sext i16 %170 to i32
  %172 = sub nsw i32 %169, %171
  %173 = ashr i32 %172, 1
  %174 = icmp slt i32 %173, 2047
  %175 = select i1 %174, i32 %173, i32 2047
  %176 = icmp sgt i32 %175, 0
  %177 = select i1 %176, i32 %175, i32 0
  %178 = load i32*, i32** %7, align 8
  %179 = zext i32 %168 to i64
  %180 = getelementptr inbounds i32, i32* %178, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds i32*, i32** %7, i64 1
  %183 = load i32*, i32** %182, align 8
  %184 = zext i32 %177 to i64
  %185 = getelementptr inbounds i32, i32* %183, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = add nsw i32 %186, %181
  %188 = mul nsw i32 %187, %157
  %189 = add nsw i32 %188, 128
  %190 = ashr i32 %189, 8
  br label %191

191:                                              ; preds = %147, %155
  %192 = phi i32 [ %190, %155 ], [ 0, %147 ]
  %193 = add i32 %192, %153
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #4
  ret i32 %193
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_full_search_sadx3(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture, %union.int_mv* nocapture readonly, i32, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %10 = alloca i32, align 4
  %11 = alloca [3 x i32], align 4
  %12 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %13 = load i8**, i8*** %12, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %22 = load i32, i32* %21, align 16
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 6
  %26 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #4
  store i32 -1431655766, i32* %10, align 4
  %27 = bitcast %union.int_mv* %3 to %struct.MV*
  %28 = bitcast %union.int_mv* %3 to i16*
  %29 = load i16, i16* %28, align 4
  %30 = sext i16 %29 to i32
  %31 = getelementptr inbounds %struct.MV, %struct.MV* %27, i64 0, i32 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = sub nsw i32 %30, %5
  %35 = add nsw i32 %30, %5
  %36 = sub nsw i32 %33, %5
  %37 = add nsw i32 %33, %5
  %38 = bitcast [3 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %38) #4
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 0
  store i32 -1431655766, i32* %39, align 4
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 1
  store i32 -1431655766, i32* %40, align 4
  %41 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 2
  store i32 -1431655766, i32* %41, align 4
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 1
  %45 = load i32*, i32** %44, align 8
  %46 = bitcast %union.int_mv* %8 to %struct.MV*
  %47 = bitcast %union.int_mv* %8 to i16*
  %48 = load i16, i16* %47, align 4
  %49 = ashr i16 %48, 3
  %50 = getelementptr inbounds %struct.MV, %struct.MV* %46, i64 0, i32 1
  %51 = load i16, i16* %50, align 2
  %52 = ashr i16 %51, 3
  %53 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %24, i64 %55
  %57 = mul nsw i32 %22, %30
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  %60 = sext i16 %32 to i64
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  %62 = bitcast %union.b_mode_info* %25 to %struct.MV*
  %63 = bitcast %union.b_mode_info* %25 to i16*
  store i16 %29, i16* %63, align 4
  %64 = getelementptr inbounds %struct.MV, %struct.MV* %62, i64 0, i32 1
  store i16 %32, i16* %64, align 2
  %65 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 0
  %66 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %65, align 8
  %67 = tail call i32 %66(i8* %18, i32 %20, i8* %61, i32 %22) #4
  %68 = sext i16 %49 to i64
  %69 = sext i16 %52 to i64
  %70 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %71 = load i32, i32* %70, align 16
  %72 = icmp slt i32 %36, %71
  %73 = select i1 %72, i32 %71, i32 %36
  %74 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %37, %75
  %77 = select i1 %76, i32 %75, i32 %37
  %78 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %79 = load i32, i32* %78, align 8
  %80 = icmp slt i32 %34, %79
  %81 = select i1 %80, i32 %79, i32 %34
  %82 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %35, %83
  %85 = select i1 %84, i32 %83, i32 %35
  %86 = icmp slt i32 %81, %85
  br i1 %86, label %87, label %195

87:                                               ; preds = %9
  %88 = load i16, i16* %64, align 2
  %89 = sext i16 %88 to i64
  %90 = sub nsw i64 %89, %69
  %91 = getelementptr inbounds i32, i32* %45, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = load i16, i16* %63, align 4
  %94 = sext i16 %93 to i64
  %95 = sub nsw i64 %94, %68
  %96 = getelementptr inbounds i32, i32* %43, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = add nsw i32 %92, %97
  %99 = mul nsw i32 %98, %4
  %100 = add nsw i32 %99, 128
  %101 = ashr i32 %100, 8
  %102 = add i32 %101, %67
  %103 = sext i32 %73 to i64
  %104 = add nsw i32 %73, 2
  %105 = icmp slt i32 %104, %77
  %106 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 3
  %107 = sext i32 %81 to i64
  %108 = sext i32 %22 to i64
  %109 = sext i32 %85 to i64
  %110 = getelementptr inbounds i8, i8* %56, i64 %103
  br label %111

111:                                              ; preds = %87, %190
  %112 = phi i64 [ %107, %87 ], [ %193, %190 ]
  %113 = phi i32 [ %102, %87 ], [ %192, %190 ]
  %114 = phi i8* [ %61, %87 ], [ %191, %190 ]
  %115 = trunc i64 %112 to i16
  %116 = mul nsw i64 %112, %108
  %117 = getelementptr inbounds i8, i8* %110, i64 %116
  br i1 %105, label %118, label %123

118:                                              ; preds = %111
  %119 = shl i64 %112, 48
  %120 = ashr exact i64 %119, 48
  %121 = sub nsw i64 %120, %68
  %122 = getelementptr inbounds i32, i32* %43, i64 %121
  br label %134

123:                                              ; preds = %278, %111
  %124 = phi i8* [ %114, %111 ], [ %279, %278 ]
  %125 = phi i32 [ %113, %111 ], [ %280, %278 ]
  %126 = phi i32 [ %73, %111 ], [ %281, %278 ]
  %127 = phi i8* [ %117, %111 ], [ %282, %278 ]
  %128 = icmp slt i32 %126, %77
  br i1 %128, label %129, label %190

129:                                              ; preds = %123
  %130 = shl i64 %112, 48
  %131 = ashr exact i64 %130, 48
  %132 = sub nsw i64 %131, %68
  %133 = getelementptr inbounds i32, i32* %43, i64 %132
  br label %162

134:                                              ; preds = %118, %278
  %135 = phi i8* [ %117, %118 ], [ %282, %278 ]
  %136 = phi i32 [ %73, %118 ], [ %281, %278 ]
  %137 = phi i32 [ %113, %118 ], [ %280, %278 ]
  %138 = phi i8* [ %114, %118 ], [ %279, %278 ]
  %139 = load void (i8*, i32, i8*, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)** %106, align 8
  call void %139(i8* %18, i32 %20, i8* %135, i32 %22, i32* nonnull %39) #4
  %140 = load i32, i32* %39, align 4
  store i32 %140, i32* %10, align 4
  %141 = icmp ult i32 %140, %137
  br i1 %141, label %142, label %156

142:                                              ; preds = %134
  %143 = trunc i32 %136 to i16
  %144 = load i32, i32* %122, align 4
  %145 = sext i16 %143 to i64
  %146 = sub nsw i64 %145, %69
  %147 = getelementptr inbounds i32, i32* %45, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = add nsw i32 %148, %144
  %150 = mul nsw i32 %149, %4
  %151 = add nsw i32 %150, 128
  %152 = ashr i32 %151, 8
  %153 = add i32 %152, %140
  store i32 %153, i32* %10, align 4
  %154 = icmp ult i32 %153, %137
  br i1 %154, label %155, label %156

155:                                              ; preds = %142
  store i16 %115, i16* %63, align 4
  store i16 %143, i16* %64, align 2
  br label %156

156:                                              ; preds = %142, %155, %134
  %157 = phi i8* [ %135, %155 ], [ %138, %142 ], [ %138, %134 ]
  %158 = phi i32 [ %153, %155 ], [ %137, %142 ], [ %137, %134 ]
  %159 = getelementptr inbounds i8, i8* %135, i64 1
  %160 = load i32, i32* %40, align 4
  store i32 %160, i32* %10, align 4
  %161 = icmp ult i32 %160, %158
  br i1 %161, label %242, label %257

162:                                              ; preds = %129, %184
  %163 = phi i8* [ %127, %129 ], [ %187, %184 ]
  %164 = phi i32 [ %126, %129 ], [ %188, %184 ]
  %165 = phi i32 [ %125, %129 ], [ %186, %184 ]
  %166 = phi i8* [ %124, %129 ], [ %185, %184 ]
  %167 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %65, align 8
  %168 = call i32 %167(i8* %18, i32 %20, i8* %163, i32 %22) #4
  store i32 %168, i32* %10, align 4
  %169 = icmp ult i32 %168, %165
  br i1 %169, label %170, label %184

170:                                              ; preds = %162
  %171 = trunc i32 %164 to i16
  %172 = load i32, i32* %133, align 4
  %173 = sext i16 %171 to i64
  %174 = sub nsw i64 %173, %69
  %175 = getelementptr inbounds i32, i32* %45, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = add nsw i32 %176, %172
  %178 = mul nsw i32 %177, %4
  %179 = add nsw i32 %178, 128
  %180 = ashr i32 %179, 8
  %181 = add i32 %180, %168
  store i32 %181, i32* %10, align 4
  %182 = icmp ult i32 %181, %165
  br i1 %182, label %183, label %184

183:                                              ; preds = %170
  store i16 %115, i16* %63, align 4
  store i16 %171, i16* %64, align 2
  br label %184

184:                                              ; preds = %170, %183, %162
  %185 = phi i8* [ %163, %183 ], [ %166, %170 ], [ %166, %162 ]
  %186 = phi i32 [ %181, %183 ], [ %165, %170 ], [ %165, %162 ]
  %187 = getelementptr inbounds i8, i8* %163, i64 1
  %188 = add nsw i32 %164, 1
  %189 = icmp slt i32 %188, %77
  br i1 %189, label %162, label %190

190:                                              ; preds = %184, %123
  %191 = phi i8* [ %124, %123 ], [ %185, %184 ]
  %192 = phi i32 [ %125, %123 ], [ %186, %184 ]
  %193 = add nsw i64 %112, 1
  %194 = icmp slt i64 %193, %109
  br i1 %194, label %111, label %195

195:                                              ; preds = %190, %9
  %196 = phi i8* [ %61, %9 ], [ %191, %190 ]
  %197 = load i16, i16* %63, align 4
  %198 = load i16, i16* %64, align 2
  %199 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %200 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %199, align 8
  %201 = call i32 %200(i8* %18, i32 %20, i8* %196, i32 %22, i32* nonnull %10) #4
  %202 = icmp eq i32** %7, null
  br i1 %202, label %239, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %205 = load i32, i32* %204, align 8
  %206 = shl i16 %198, 3
  %207 = shl i16 %197, 3
  %208 = sext i16 %207 to i32
  %209 = load i16, i16* %47, align 4
  %210 = sext i16 %209 to i32
  %211 = sub nsw i32 %208, %210
  %212 = ashr i32 %211, 1
  %213 = icmp slt i32 %212, 2047
  %214 = select i1 %213, i32 %212, i32 2047
  %215 = icmp sgt i32 %214, 0
  %216 = select i1 %215, i32 %214, i32 0
  %217 = sext i16 %206 to i32
  %218 = load i16, i16* %50, align 2
  %219 = sext i16 %218 to i32
  %220 = sub nsw i32 %217, %219
  %221 = ashr i32 %220, 1
  %222 = icmp slt i32 %221, 2047
  %223 = select i1 %222, i32 %221, i32 2047
  %224 = icmp sgt i32 %223, 0
  %225 = select i1 %224, i32 %223, i32 0
  %226 = load i32*, i32** %7, align 8
  %227 = zext i32 %216 to i64
  %228 = getelementptr inbounds i32, i32* %226, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds i32*, i32** %7, i64 1
  %231 = load i32*, i32** %230, align 8
  %232 = zext i32 %225 to i64
  %233 = getelementptr inbounds i32, i32* %231, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = add nsw i32 %234, %229
  %236 = mul nsw i32 %235, %205
  %237 = add nsw i32 %236, 128
  %238 = ashr i32 %237, 8
  br label %239

239:                                              ; preds = %195, %203
  %240 = phi i32 [ %238, %203 ], [ 0, %195 ]
  %241 = add i32 %240, %201
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %38) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #4
  ret i32 %241

242:                                              ; preds = %156
  %243 = trunc i32 %136 to i16
  %244 = add i16 %243, 1
  %245 = load i32, i32* %122, align 4
  %246 = sext i16 %244 to i64
  %247 = sub nsw i64 %246, %69
  %248 = getelementptr inbounds i32, i32* %45, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = add nsw i32 %249, %245
  %251 = mul nsw i32 %250, %4
  %252 = add nsw i32 %251, 128
  %253 = ashr i32 %252, 8
  %254 = add i32 %253, %160
  store i32 %254, i32* %10, align 4
  %255 = icmp ult i32 %254, %158
  br i1 %255, label %256, label %257

256:                                              ; preds = %242
  store i16 %115, i16* %63, align 4
  store i16 %244, i16* %64, align 2
  br label %257

257:                                              ; preds = %256, %242, %156
  %258 = phi i8* [ %159, %256 ], [ %157, %242 ], [ %157, %156 ]
  %259 = phi i32 [ %254, %256 ], [ %158, %242 ], [ %158, %156 ]
  %260 = getelementptr inbounds i8, i8* %135, i64 2
  %261 = load i32, i32* %41, align 4
  store i32 %261, i32* %10, align 4
  %262 = icmp ult i32 %261, %259
  br i1 %262, label %263, label %278

263:                                              ; preds = %257
  %264 = trunc i32 %136 to i16
  %265 = add i16 %264, 2
  %266 = load i32, i32* %122, align 4
  %267 = sext i16 %265 to i64
  %268 = sub nsw i64 %267, %69
  %269 = getelementptr inbounds i32, i32* %45, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = add nsw i32 %270, %266
  %272 = mul nsw i32 %271, %4
  %273 = add nsw i32 %272, 128
  %274 = ashr i32 %273, 8
  %275 = add i32 %274, %261
  store i32 %275, i32* %10, align 4
  %276 = icmp ult i32 %275, %259
  br i1 %276, label %277, label %278

277:                                              ; preds = %263
  store i16 %115, i16* %63, align 4
  store i16 %265, i16* %64, align 2
  br label %278

278:                                              ; preds = %277, %263, %257
  %279 = phi i8* [ %260, %277 ], [ %258, %263 ], [ %258, %257 ]
  %280 = phi i32 [ %275, %277 ], [ %259, %263 ], [ %259, %257 ]
  %281 = add nsw i32 %136, 3
  %282 = getelementptr i8, i8* %135, i64 3
  %283 = add nsw i32 %136, 5
  %284 = icmp slt i32 %283, %77
  br i1 %284, label %134, label %123
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_full_search_sadx8(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture, %union.int_mv* nocapture readonly, i32, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %10 = alloca i32, align 4
  %11 = alloca [8 x i32], align 16
  %12 = alloca [3 x i32], align 4
  %13 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %14 = load i8**, i8*** %13, align 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %23 = load i32, i32* %22, align 16
  %24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 6
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #4
  store i32 -1431655766, i32* %10, align 4
  %28 = bitcast %union.int_mv* %3 to %struct.MV*
  %29 = bitcast %union.int_mv* %3 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = sext i16 %30 to i32
  %32 = getelementptr inbounds %struct.MV, %struct.MV* %28, i64 0, i32 1
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i32
  %35 = sub nsw i32 %31, %5
  %36 = add nsw i32 %31, %5
  %37 = sub nsw i32 %34, %5
  %38 = add nsw i32 %34, %5
  %39 = bitcast [8 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #4
  %40 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %41 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %42 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %43 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %44 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %45 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %46 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %47 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %48 = bitcast [3 x i32]* %12 to i8*
  %49 = bitcast [8 x i32]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %48) #4
  %50 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  store i32 -1431655766, i32* %50, align 4
  %51 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  store i32 -1431655766, i32* %51, align 4
  %52 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  store i32 -1431655766, i32* %52, align 4
  %53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 1
  %56 = load i32*, i32** %55, align 8
  %57 = bitcast %union.int_mv* %8 to %struct.MV*
  %58 = bitcast %union.int_mv* %8 to i16*
  %59 = load i16, i16* %58, align 4
  %60 = ashr i16 %59, 3
  %61 = getelementptr inbounds %struct.MV, %struct.MV* %57, i64 0, i32 1
  %62 = load i16, i16* %61, align 2
  %63 = ashr i16 %62, 3
  %64 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %25, i64 %66
  %68 = mul nsw i32 %23, %31
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  %71 = sext i16 %33 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = bitcast %union.b_mode_info* %26 to %struct.MV*
  %74 = bitcast %union.b_mode_info* %26 to i16*
  store i16 %30, i16* %74, align 4
  %75 = getelementptr inbounds %struct.MV, %struct.MV* %73, i64 0, i32 1
  store i16 %33, i16* %75, align 2
  %76 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 0
  %77 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %76, align 8
  %78 = tail call i32 %77(i8* %19, i32 %21, i8* %72, i32 %23) #4
  %79 = sext i16 %60 to i64
  %80 = sext i16 %63 to i64
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %82 = load i32, i32* %81, align 16
  %83 = icmp slt i32 %37, %82
  %84 = select i1 %83, i32 %82, i32 %37
  %85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %38, %86
  %88 = select i1 %87, i32 %86, i32 %38
  %89 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %90 = load i32, i32* %89, align 8
  %91 = icmp slt i32 %35, %90
  %92 = select i1 %91, i32 %90, i32 %35
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %36, %94
  %96 = select i1 %95, i32 %94, i32 %36
  %97 = icmp slt i32 %92, %96
  br i1 %97, label %98, label %247

98:                                               ; preds = %9
  %99 = load i16, i16* %75, align 2
  %100 = sext i16 %99 to i64
  %101 = sub nsw i64 %100, %80
  %102 = getelementptr inbounds i32, i32* %56, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = load i16, i16* %74, align 4
  %105 = sext i16 %104 to i64
  %106 = sub nsw i64 %105, %79
  %107 = getelementptr inbounds i32, i32* %54, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %103, %108
  %110 = mul nsw i32 %109, %4
  %111 = add nsw i32 %110, 128
  %112 = ashr i32 %111, 8
  %113 = add i32 %112, %78
  %114 = sext i32 %84 to i64
  %115 = add nsw i32 %84, 7
  %116 = icmp slt i32 %115, %88
  %117 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 4
  %118 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 3
  %119 = sext i32 %92 to i64
  %120 = sext i32 %23 to i64
  %121 = sext i32 %96 to i64
  %122 = getelementptr inbounds i8, i8* %67, i64 %114
  br label %123

123:                                              ; preds = %98, %242
  %124 = phi i64 [ %119, %98 ], [ %245, %242 ]
  %125 = phi i32 [ %113, %98 ], [ %244, %242 ]
  %126 = phi i8* [ %72, %98 ], [ %243, %242 ]
  %127 = trunc i64 %124 to i16
  %128 = mul nsw i64 %124, %120
  %129 = getelementptr inbounds i8, i8* %122, i64 %128
  br i1 %116, label %130, label %135

130:                                              ; preds = %123
  %131 = shl i64 %124, 48
  %132 = ashr exact i64 %131, 48
  %133 = sub nsw i64 %132, %79
  %134 = getelementptr inbounds i32, i32* %54, i64 %133
  br label %147

135:                                              ; preds = %435, %123
  %136 = phi i8* [ %126, %123 ], [ %436, %435 ]
  %137 = phi i32 [ %125, %123 ], [ %437, %435 ]
  %138 = phi i32 [ %84, %123 ], [ %438, %435 ]
  %139 = phi i8* [ %129, %123 ], [ %439, %435 ]
  %140 = add nsw i32 %138, 2
  %141 = icmp slt i32 %140, %88
  br i1 %141, label %142, label %175

142:                                              ; preds = %135
  %143 = shl i64 %124, 48
  %144 = ashr exact i64 %143, 48
  %145 = sub nsw i64 %144, %79
  %146 = getelementptr inbounds i32, i32* %54, i64 %145
  br label %186

147:                                              ; preds = %130, %435
  %148 = phi i8* [ %129, %130 ], [ %439, %435 ]
  %149 = phi i32 [ %84, %130 ], [ %438, %435 ]
  %150 = phi i32 [ %125, %130 ], [ %437, %435 ]
  %151 = phi i8* [ %126, %130 ], [ %436, %435 ]
  %152 = load void (i8*, i32, i8*, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)** %117, align 8
  call void %152(i8* %19, i32 %21, i8* %148, i32 %23, i32* nonnull %40) #4
  %153 = load i32, i32* %40, align 16
  store i32 %153, i32* %10, align 4
  %154 = icmp ult i32 %153, %150
  br i1 %154, label %155, label %169

155:                                              ; preds = %147
  %156 = trunc i32 %149 to i16
  %157 = load i32, i32* %134, align 4
  %158 = sext i16 %156 to i64
  %159 = sub nsw i64 %158, %80
  %160 = getelementptr inbounds i32, i32* %56, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = add nsw i32 %161, %157
  %163 = mul nsw i32 %162, %4
  %164 = add nsw i32 %163, 128
  %165 = ashr i32 %164, 8
  %166 = add i32 %165, %153
  store i32 %166, i32* %10, align 4
  %167 = icmp ult i32 %166, %150
  br i1 %167, label %168, label %169

168:                                              ; preds = %155
  store i16 %127, i16* %74, align 4
  store i16 %156, i16* %75, align 2
  br label %169

169:                                              ; preds = %155, %168, %147
  %170 = phi i8* [ %148, %168 ], [ %151, %155 ], [ %151, %147 ]
  %171 = phi i32 [ %166, %168 ], [ %150, %155 ], [ %150, %147 ]
  %172 = getelementptr inbounds i8, i8* %148, i64 1
  %173 = load i32, i32* %41, align 4
  store i32 %173, i32* %10, align 4
  %174 = icmp ult i32 %173, %171
  br i1 %174, label %294, label %309

175:                                              ; preds = %478, %135
  %176 = phi i8* [ %136, %135 ], [ %479, %478 ]
  %177 = phi i32 [ %137, %135 ], [ %480, %478 ]
  %178 = phi i32 [ %138, %135 ], [ %481, %478 ]
  %179 = phi i8* [ %139, %135 ], [ %482, %478 ]
  %180 = icmp slt i32 %178, %88
  br i1 %180, label %181, label %242

181:                                              ; preds = %175
  %182 = shl i64 %124, 48
  %183 = ashr exact i64 %182, 48
  %184 = sub nsw i64 %183, %79
  %185 = getelementptr inbounds i32, i32* %54, i64 %184
  br label %214

186:                                              ; preds = %142, %478
  %187 = phi i8* [ %139, %142 ], [ %482, %478 ]
  %188 = phi i32 [ %138, %142 ], [ %481, %478 ]
  %189 = phi i32 [ %137, %142 ], [ %480, %478 ]
  %190 = phi i8* [ %136, %142 ], [ %479, %478 ]
  %191 = load void (i8*, i32, i8*, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)** %118, align 8
  call void %191(i8* %19, i32 %21, i8* %187, i32 %23, i32* nonnull %50) #4
  %192 = load i32, i32* %50, align 4
  store i32 %192, i32* %10, align 4
  %193 = icmp ult i32 %192, %189
  br i1 %193, label %194, label %208

194:                                              ; preds = %186
  %195 = trunc i32 %188 to i16
  %196 = load i32, i32* %146, align 4
  %197 = sext i16 %195 to i64
  %198 = sub nsw i64 %197, %80
  %199 = getelementptr inbounds i32, i32* %56, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = add nsw i32 %200, %196
  %202 = mul nsw i32 %201, %4
  %203 = add nsw i32 %202, 128
  %204 = ashr i32 %203, 8
  %205 = add i32 %204, %192
  store i32 %205, i32* %10, align 4
  %206 = icmp ult i32 %205, %189
  br i1 %206, label %207, label %208

207:                                              ; preds = %194
  store i16 %127, i16* %74, align 4
  store i16 %195, i16* %75, align 2
  br label %208

208:                                              ; preds = %194, %207, %186
  %209 = phi i8* [ %187, %207 ], [ %190, %194 ], [ %190, %186 ]
  %210 = phi i32 [ %205, %207 ], [ %189, %194 ], [ %189, %186 ]
  %211 = getelementptr inbounds i8, i8* %187, i64 1
  %212 = load i32, i32* %51, align 4
  store i32 %212, i32* %10, align 4
  %213 = icmp ult i32 %212, %210
  br i1 %213, label %442, label %457

214:                                              ; preds = %181, %236
  %215 = phi i8* [ %179, %181 ], [ %239, %236 ]
  %216 = phi i32 [ %178, %181 ], [ %240, %236 ]
  %217 = phi i32 [ %177, %181 ], [ %238, %236 ]
  %218 = phi i8* [ %176, %181 ], [ %237, %236 ]
  %219 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %76, align 8
  %220 = call i32 %219(i8* %19, i32 %21, i8* %215, i32 %23) #4
  store i32 %220, i32* %10, align 4
  %221 = icmp ult i32 %220, %217
  br i1 %221, label %222, label %236

222:                                              ; preds = %214
  %223 = trunc i32 %216 to i16
  %224 = load i32, i32* %185, align 4
  %225 = sext i16 %223 to i64
  %226 = sub nsw i64 %225, %80
  %227 = getelementptr inbounds i32, i32* %56, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = add nsw i32 %228, %224
  %230 = mul nsw i32 %229, %4
  %231 = add nsw i32 %230, 128
  %232 = ashr i32 %231, 8
  %233 = add i32 %232, %220
  store i32 %233, i32* %10, align 4
  %234 = icmp ult i32 %233, %217
  br i1 %234, label %235, label %236

235:                                              ; preds = %222
  store i16 %127, i16* %74, align 4
  store i16 %223, i16* %75, align 2
  br label %236

236:                                              ; preds = %222, %235, %214
  %237 = phi i8* [ %215, %235 ], [ %218, %222 ], [ %218, %214 ]
  %238 = phi i32 [ %233, %235 ], [ %217, %222 ], [ %217, %214 ]
  %239 = getelementptr inbounds i8, i8* %215, i64 1
  %240 = add nsw i32 %216, 1
  %241 = icmp slt i32 %240, %88
  br i1 %241, label %214, label %242

242:                                              ; preds = %236, %175
  %243 = phi i8* [ %176, %175 ], [ %237, %236 ]
  %244 = phi i32 [ %177, %175 ], [ %238, %236 ]
  %245 = add nsw i64 %124, 1
  %246 = icmp slt i64 %245, %121
  br i1 %246, label %123, label %247

247:                                              ; preds = %242, %9
  %248 = phi i8* [ %72, %9 ], [ %243, %242 ]
  %249 = load i16, i16* %74, align 4
  %250 = load i16, i16* %75, align 2
  %251 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %252 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %251, align 8
  %253 = call i32 %252(i8* %19, i32 %21, i8* %248, i32 %23, i32* nonnull %10) #4
  %254 = icmp eq i32** %7, null
  br i1 %254, label %291, label %255

255:                                              ; preds = %247
  %256 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %257 = load i32, i32* %256, align 8
  %258 = shl i16 %250, 3
  %259 = shl i16 %249, 3
  %260 = sext i16 %259 to i32
  %261 = load i16, i16* %58, align 4
  %262 = sext i16 %261 to i32
  %263 = sub nsw i32 %260, %262
  %264 = ashr i32 %263, 1
  %265 = icmp slt i32 %264, 2047
  %266 = select i1 %265, i32 %264, i32 2047
  %267 = icmp sgt i32 %266, 0
  %268 = select i1 %267, i32 %266, i32 0
  %269 = sext i16 %258 to i32
  %270 = load i16, i16* %61, align 2
  %271 = sext i16 %270 to i32
  %272 = sub nsw i32 %269, %271
  %273 = ashr i32 %272, 1
  %274 = icmp slt i32 %273, 2047
  %275 = select i1 %274, i32 %273, i32 2047
  %276 = icmp sgt i32 %275, 0
  %277 = select i1 %276, i32 %275, i32 0
  %278 = load i32*, i32** %7, align 8
  %279 = zext i32 %268 to i64
  %280 = getelementptr inbounds i32, i32* %278, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds i32*, i32** %7, i64 1
  %283 = load i32*, i32** %282, align 8
  %284 = zext i32 %277 to i64
  %285 = getelementptr inbounds i32, i32* %283, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = add nsw i32 %286, %281
  %288 = mul nsw i32 %287, %257
  %289 = add nsw i32 %288, 128
  %290 = ashr i32 %289, 8
  br label %291

291:                                              ; preds = %247, %255
  %292 = phi i32 [ %290, %255 ], [ 0, %247 ]
  %293 = add i32 %292, %253
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %48) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #4
  ret i32 %293

294:                                              ; preds = %169
  %295 = trunc i32 %149 to i16
  %296 = add i16 %295, 1
  %297 = load i32, i32* %134, align 4
  %298 = sext i16 %296 to i64
  %299 = sub nsw i64 %298, %80
  %300 = getelementptr inbounds i32, i32* %56, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = add nsw i32 %301, %297
  %303 = mul nsw i32 %302, %4
  %304 = add nsw i32 %303, 128
  %305 = ashr i32 %304, 8
  %306 = add i32 %305, %173
  store i32 %306, i32* %10, align 4
  %307 = icmp ult i32 %306, %171
  br i1 %307, label %308, label %309

308:                                              ; preds = %294
  store i16 %127, i16* %74, align 4
  store i16 %296, i16* %75, align 2
  br label %309

309:                                              ; preds = %308, %294, %169
  %310 = phi i8* [ %172, %308 ], [ %170, %294 ], [ %170, %169 ]
  %311 = phi i32 [ %306, %308 ], [ %171, %294 ], [ %171, %169 ]
  %312 = getelementptr inbounds i8, i8* %148, i64 2
  %313 = load i32, i32* %42, align 8
  store i32 %313, i32* %10, align 4
  %314 = icmp ult i32 %313, %311
  br i1 %314, label %315, label %330

315:                                              ; preds = %309
  %316 = trunc i32 %149 to i16
  %317 = add i16 %316, 2
  %318 = load i32, i32* %134, align 4
  %319 = sext i16 %317 to i64
  %320 = sub nsw i64 %319, %80
  %321 = getelementptr inbounds i32, i32* %56, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = add nsw i32 %322, %318
  %324 = mul nsw i32 %323, %4
  %325 = add nsw i32 %324, 128
  %326 = ashr i32 %325, 8
  %327 = add i32 %326, %313
  store i32 %327, i32* %10, align 4
  %328 = icmp ult i32 %327, %311
  br i1 %328, label %329, label %330

329:                                              ; preds = %315
  store i16 %127, i16* %74, align 4
  store i16 %317, i16* %75, align 2
  br label %330

330:                                              ; preds = %329, %315, %309
  %331 = phi i8* [ %312, %329 ], [ %310, %315 ], [ %310, %309 ]
  %332 = phi i32 [ %327, %329 ], [ %311, %315 ], [ %311, %309 ]
  %333 = getelementptr inbounds i8, i8* %148, i64 3
  %334 = load i32, i32* %43, align 4
  store i32 %334, i32* %10, align 4
  %335 = icmp ult i32 %334, %332
  br i1 %335, label %336, label %351

336:                                              ; preds = %330
  %337 = trunc i32 %149 to i16
  %338 = add i16 %337, 3
  %339 = load i32, i32* %134, align 4
  %340 = sext i16 %338 to i64
  %341 = sub nsw i64 %340, %80
  %342 = getelementptr inbounds i32, i32* %56, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = add nsw i32 %343, %339
  %345 = mul nsw i32 %344, %4
  %346 = add nsw i32 %345, 128
  %347 = ashr i32 %346, 8
  %348 = add i32 %347, %334
  store i32 %348, i32* %10, align 4
  %349 = icmp ult i32 %348, %332
  br i1 %349, label %350, label %351

350:                                              ; preds = %336
  store i16 %127, i16* %74, align 4
  store i16 %338, i16* %75, align 2
  br label %351

351:                                              ; preds = %350, %336, %330
  %352 = phi i8* [ %333, %350 ], [ %331, %336 ], [ %331, %330 ]
  %353 = phi i32 [ %348, %350 ], [ %332, %336 ], [ %332, %330 ]
  %354 = getelementptr inbounds i8, i8* %148, i64 4
  %355 = load i32, i32* %44, align 16
  store i32 %355, i32* %10, align 4
  %356 = icmp ult i32 %355, %353
  br i1 %356, label %357, label %372

357:                                              ; preds = %351
  %358 = trunc i32 %149 to i16
  %359 = add i16 %358, 4
  %360 = load i32, i32* %134, align 4
  %361 = sext i16 %359 to i64
  %362 = sub nsw i64 %361, %80
  %363 = getelementptr inbounds i32, i32* %56, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = add nsw i32 %364, %360
  %366 = mul nsw i32 %365, %4
  %367 = add nsw i32 %366, 128
  %368 = ashr i32 %367, 8
  %369 = add i32 %368, %355
  store i32 %369, i32* %10, align 4
  %370 = icmp ult i32 %369, %353
  br i1 %370, label %371, label %372

371:                                              ; preds = %357
  store i16 %127, i16* %74, align 4
  store i16 %359, i16* %75, align 2
  br label %372

372:                                              ; preds = %371, %357, %351
  %373 = phi i8* [ %354, %371 ], [ %352, %357 ], [ %352, %351 ]
  %374 = phi i32 [ %369, %371 ], [ %353, %357 ], [ %353, %351 ]
  %375 = getelementptr inbounds i8, i8* %148, i64 5
  %376 = load i32, i32* %45, align 4
  store i32 %376, i32* %10, align 4
  %377 = icmp ult i32 %376, %374
  br i1 %377, label %378, label %393

378:                                              ; preds = %372
  %379 = trunc i32 %149 to i16
  %380 = add i16 %379, 5
  %381 = load i32, i32* %134, align 4
  %382 = sext i16 %380 to i64
  %383 = sub nsw i64 %382, %80
  %384 = getelementptr inbounds i32, i32* %56, i64 %383
  %385 = load i32, i32* %384, align 4
  %386 = add nsw i32 %385, %381
  %387 = mul nsw i32 %386, %4
  %388 = add nsw i32 %387, 128
  %389 = ashr i32 %388, 8
  %390 = add i32 %389, %376
  store i32 %390, i32* %10, align 4
  %391 = icmp ult i32 %390, %374
  br i1 %391, label %392, label %393

392:                                              ; preds = %378
  store i16 %127, i16* %74, align 4
  store i16 %380, i16* %75, align 2
  br label %393

393:                                              ; preds = %392, %378, %372
  %394 = phi i8* [ %375, %392 ], [ %373, %378 ], [ %373, %372 ]
  %395 = phi i32 [ %390, %392 ], [ %374, %378 ], [ %374, %372 ]
  %396 = getelementptr inbounds i8, i8* %148, i64 6
  %397 = load i32, i32* %46, align 8
  store i32 %397, i32* %10, align 4
  %398 = icmp ult i32 %397, %395
  br i1 %398, label %399, label %414

399:                                              ; preds = %393
  %400 = trunc i32 %149 to i16
  %401 = add i16 %400, 6
  %402 = load i32, i32* %134, align 4
  %403 = sext i16 %401 to i64
  %404 = sub nsw i64 %403, %80
  %405 = getelementptr inbounds i32, i32* %56, i64 %404
  %406 = load i32, i32* %405, align 4
  %407 = add nsw i32 %406, %402
  %408 = mul nsw i32 %407, %4
  %409 = add nsw i32 %408, 128
  %410 = ashr i32 %409, 8
  %411 = add i32 %410, %397
  store i32 %411, i32* %10, align 4
  %412 = icmp ult i32 %411, %395
  br i1 %412, label %413, label %414

413:                                              ; preds = %399
  store i16 %127, i16* %74, align 4
  store i16 %401, i16* %75, align 2
  br label %414

414:                                              ; preds = %413, %399, %393
  %415 = phi i8* [ %396, %413 ], [ %394, %399 ], [ %394, %393 ]
  %416 = phi i32 [ %411, %413 ], [ %395, %399 ], [ %395, %393 ]
  %417 = getelementptr inbounds i8, i8* %148, i64 7
  %418 = load i32, i32* %47, align 4
  store i32 %418, i32* %10, align 4
  %419 = icmp ult i32 %418, %416
  br i1 %419, label %420, label %435

420:                                              ; preds = %414
  %421 = trunc i32 %149 to i16
  %422 = add i16 %421, 7
  %423 = load i32, i32* %134, align 4
  %424 = sext i16 %422 to i64
  %425 = sub nsw i64 %424, %80
  %426 = getelementptr inbounds i32, i32* %56, i64 %425
  %427 = load i32, i32* %426, align 4
  %428 = add nsw i32 %427, %423
  %429 = mul nsw i32 %428, %4
  %430 = add nsw i32 %429, 128
  %431 = ashr i32 %430, 8
  %432 = add i32 %431, %418
  store i32 %432, i32* %10, align 4
  %433 = icmp ult i32 %432, %416
  br i1 %433, label %434, label %435

434:                                              ; preds = %420
  store i16 %127, i16* %74, align 4
  store i16 %422, i16* %75, align 2
  br label %435

435:                                              ; preds = %434, %420, %414
  %436 = phi i8* [ %417, %434 ], [ %415, %420 ], [ %415, %414 ]
  %437 = phi i32 [ %432, %434 ], [ %416, %420 ], [ %416, %414 ]
  %438 = add nsw i32 %149, 8
  %439 = getelementptr i8, i8* %148, i64 8
  %440 = add nsw i32 %149, 15
  %441 = icmp slt i32 %440, %88
  br i1 %441, label %147, label %135

442:                                              ; preds = %208
  %443 = trunc i32 %188 to i16
  %444 = add i16 %443, 1
  %445 = load i32, i32* %146, align 4
  %446 = sext i16 %444 to i64
  %447 = sub nsw i64 %446, %80
  %448 = getelementptr inbounds i32, i32* %56, i64 %447
  %449 = load i32, i32* %448, align 4
  %450 = add nsw i32 %449, %445
  %451 = mul nsw i32 %450, %4
  %452 = add nsw i32 %451, 128
  %453 = ashr i32 %452, 8
  %454 = add i32 %453, %212
  store i32 %454, i32* %10, align 4
  %455 = icmp ult i32 %454, %210
  br i1 %455, label %456, label %457

456:                                              ; preds = %442
  store i16 %127, i16* %74, align 4
  store i16 %444, i16* %75, align 2
  br label %457

457:                                              ; preds = %456, %442, %208
  %458 = phi i8* [ %211, %456 ], [ %209, %442 ], [ %209, %208 ]
  %459 = phi i32 [ %454, %456 ], [ %210, %442 ], [ %210, %208 ]
  %460 = getelementptr inbounds i8, i8* %187, i64 2
  %461 = load i32, i32* %52, align 4
  store i32 %461, i32* %10, align 4
  %462 = icmp ult i32 %461, %459
  br i1 %462, label %463, label %478

463:                                              ; preds = %457
  %464 = trunc i32 %188 to i16
  %465 = add i16 %464, 2
  %466 = load i32, i32* %146, align 4
  %467 = sext i16 %465 to i64
  %468 = sub nsw i64 %467, %80
  %469 = getelementptr inbounds i32, i32* %56, i64 %468
  %470 = load i32, i32* %469, align 4
  %471 = add nsw i32 %470, %466
  %472 = mul nsw i32 %471, %4
  %473 = add nsw i32 %472, 128
  %474 = ashr i32 %473, 8
  %475 = add i32 %474, %461
  store i32 %475, i32* %10, align 4
  %476 = icmp ult i32 %475, %459
  br i1 %476, label %477, label %478

477:                                              ; preds = %463
  store i16 %127, i16* %74, align 4
  store i16 %465, i16* %75, align 2
  br label %478

478:                                              ; preds = %477, %463, %457
  %479 = phi i8* [ %460, %477 ], [ %458, %463 ], [ %458, %457 ]
  %480 = phi i32 [ %475, %477 ], [ %459, %463 ], [ %459, %457 ]
  %481 = add nsw i32 %188, 3
  %482 = getelementptr i8, i8* %187, i64 3
  %483 = add nsw i32 %188, 5
  %484 = icmp slt i32 %483, %88
  br i1 %484, label %186, label %175
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_refining_search_sad_c(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, i32, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %14 = load i32, i32* %13, align 16
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %18 = load i8**, i8*** %17, align 8
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %19, i64 %22
  %24 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %16, i64 %26
  %28 = bitcast %union.int_mv* %3 to %struct.MV*
  %29 = bitcast %union.int_mv* %3 to i16*
  %30 = load i16, i16* %29, align 4
  %31 = sext i16 %30 to i32
  %32 = mul nsw i32 %14, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %27, i64 %33
  %35 = getelementptr inbounds %struct.MV, %struct.MV* %28, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #4
  store i32 -1431655766, i32* %10, align 4
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 1
  %43 = load i32*, i32** %42, align 8
  %44 = bitcast %union.int_mv* %8 to %struct.MV*
  %45 = bitcast %union.int_mv* %8 to i16*
  %46 = load i16, i16* %45, align 4
  %47 = ashr i16 %46, 3
  %48 = getelementptr inbounds %struct.MV, %struct.MV* %44, i64 0, i32 1
  %49 = load i16, i16* %48, align 2
  %50 = ashr i16 %49, 3
  %51 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 0
  %52 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %51, align 8
  %53 = tail call i32 %52(i8* %23, i32 %12, i8* %38, i32 %14) #4
  %54 = sext i16 %47 to i64
  %55 = sext i16 %50 to i64
  %56 = icmp sgt i32 %5, 0
  br i1 %56, label %57, label %164

57:                                               ; preds = %9
  %58 = load i16, i16* %35, align 2
  %59 = sext i16 %58 to i64
  %60 = sub nsw i64 %59, %55
  %61 = getelementptr inbounds i32, i32* %43, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = load i16, i16* %29, align 4
  %64 = sext i16 %63 to i64
  %65 = sub nsw i64 %64, %54
  %66 = getelementptr inbounds i32, i32* %41, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %62, %67
  %69 = mul nsw i32 %68, %4
  %70 = add nsw i32 %69, 128
  %71 = ashr i32 %70, 8
  %72 = add i32 %71, %53
  %73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %74 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  br label %77

77:                                               ; preds = %146, %57
  %78 = phi i16 [ %58, %57 ], [ %155, %146 ]
  %79 = phi i16 [ %63, %57 ], [ %151, %146 ]
  %80 = phi i32 [ %72, %57 ], [ %137, %146 ]
  %81 = phi i8* [ %38, %57 ], [ %161, %146 ]
  %82 = phi i32 [ 0, %57 ], [ %162, %146 ]
  br label %83

83:                                               ; preds = %141, %77
  %84 = phi i16 [ %78, %77 ], [ %143, %141 ]
  %85 = phi i16 [ %79, %77 ], [ %142, %141 ]
  %86 = phi i64 [ 0, %77 ], [ %139, %141 ]
  %87 = phi i32 [ -1, %77 ], [ %138, %141 ]
  %88 = phi i32 [ %80, %77 ], [ %137, %141 ]
  %89 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %86, i32 0
  %90 = load i16, i16* %89, align 4
  %91 = sext i16 %90 to i32
  %92 = add i16 %90, %85
  %93 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %86, i32 1
  %94 = load i16, i16* %93, align 2
  %95 = sext i16 %94 to i32
  %96 = add i16 %94, %84
  %97 = sext i16 %96 to i32
  %98 = load i32, i32* %73, align 16
  %99 = icmp slt i32 %98, %97
  br i1 %99, label %100, label %136

100:                                              ; preds = %83
  %101 = load i32, i32* %74, align 4
  %102 = icmp sgt i32 %101, %97
  br i1 %102, label %103, label %136

103:                                              ; preds = %100
  %104 = sext i16 %92 to i32
  %105 = load i32, i32* %75, align 8
  %106 = icmp slt i32 %105, %104
  br i1 %106, label %107, label %136

107:                                              ; preds = %103
  %108 = load i32, i32* %76, align 4
  %109 = icmp sgt i32 %108, %104
  br i1 %109, label %110, label %136

110:                                              ; preds = %107
  %111 = mul nsw i32 %14, %91
  %112 = add nsw i32 %111, %95
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %81, i64 %113
  %115 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %51, align 8
  %116 = tail call i32 %115(i8* %23, i32 %12, i8* %114, i32 %14) #4
  store i32 %116, i32* %10, align 4
  %117 = icmp ult i32 %116, %88
  br i1 %117, label %118, label %136

118:                                              ; preds = %110
  %119 = sext i16 %92 to i64
  %120 = sub nsw i64 %119, %54
  %121 = getelementptr inbounds i32, i32* %41, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sext i16 %96 to i64
  %124 = sub nsw i64 %123, %55
  %125 = getelementptr inbounds i32, i32* %43, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = add nsw i32 %126, %122
  %128 = mul nsw i32 %127, %4
  %129 = add nsw i32 %128, 128
  %130 = ashr i32 %129, 8
  %131 = add i32 %130, %116
  store i32 %131, i32* %10, align 4
  %132 = icmp ult i32 %131, %88
  %133 = select i1 %132, i32 %131, i32 %88
  %134 = trunc i64 %86 to i32
  %135 = select i1 %132, i32 %134, i32 %87
  br label %136

136:                                              ; preds = %118, %83, %100, %103, %107, %110
  %137 = phi i32 [ %88, %110 ], [ %88, %107 ], [ %88, %103 ], [ %88, %100 ], [ %88, %83 ], [ %133, %118 ]
  %138 = phi i32 [ %87, %110 ], [ %87, %107 ], [ %87, %103 ], [ %87, %100 ], [ %87, %83 ], [ %135, %118 ]
  %139 = add nuw nsw i64 %86, 1
  %140 = icmp eq i64 %139, 4
  br i1 %140, label %144, label %141

141:                                              ; preds = %136
  %142 = load i16, i16* %29, align 4
  %143 = load i16, i16* %35, align 2
  br label %83

144:                                              ; preds = %136
  %145 = icmp eq i32 %138, -1
  br i1 %145, label %164, label %146

146:                                              ; preds = %144
  %147 = sext i32 %138 to i64
  %148 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %147, i32 0
  %149 = load i16, i16* %148, align 4
  %150 = load i16, i16* %29, align 4
  %151 = add i16 %150, %149
  store i16 %151, i16* %29, align 4
  %152 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %147, i32 1
  %153 = load i16, i16* %152, align 2
  %154 = load i16, i16* %35, align 2
  %155 = add i16 %154, %153
  store i16 %155, i16* %35, align 2
  %156 = sext i16 %149 to i32
  %157 = mul nsw i32 %14, %156
  %158 = sext i16 %153 to i32
  %159 = add nsw i32 %157, %158
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8, i8* %81, i64 %160
  %162 = add nuw nsw i32 %82, 1
  %163 = icmp eq i32 %162, %5
  br i1 %163, label %164, label %77

164:                                              ; preds = %144, %146, %9
  %165 = phi i8* [ %38, %9 ], [ %81, %144 ], [ %161, %146 ]
  %166 = load i16, i16* %29, align 4
  %167 = load i16, i16* %35, align 2
  %168 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %169 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %168, align 8
  %170 = call i32 %169(i8* %23, i32 %12, i8* %165, i32 %14, i32* nonnull %10) #4
  %171 = icmp eq i32** %7, null
  br i1 %171, label %208, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %174 = load i32, i32* %173, align 8
  %175 = shl i16 %167, 3
  %176 = shl i16 %166, 3
  %177 = sext i16 %176 to i32
  %178 = load i16, i16* %45, align 4
  %179 = sext i16 %178 to i32
  %180 = sub nsw i32 %177, %179
  %181 = ashr i32 %180, 1
  %182 = icmp slt i32 %181, 2047
  %183 = select i1 %182, i32 %181, i32 2047
  %184 = icmp sgt i32 %183, 0
  %185 = select i1 %184, i32 %183, i32 0
  %186 = sext i16 %175 to i32
  %187 = load i16, i16* %48, align 2
  %188 = sext i16 %187 to i32
  %189 = sub nsw i32 %186, %188
  %190 = ashr i32 %189, 1
  %191 = icmp slt i32 %190, 2047
  %192 = select i1 %191, i32 %190, i32 2047
  %193 = icmp sgt i32 %192, 0
  %194 = select i1 %193, i32 %192, i32 0
  %195 = load i32*, i32** %7, align 8
  %196 = zext i32 %185 to i64
  %197 = getelementptr inbounds i32, i32* %195, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds i32*, i32** %7, i64 1
  %200 = load i32*, i32** %199, align 8
  %201 = zext i32 %194 to i64
  %202 = getelementptr inbounds i32, i32* %200, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %203, %198
  %205 = mul nsw i32 %204, %174
  %206 = add nsw i32 %205, 128
  %207 = ashr i32 %206, 8
  br label %208

208:                                              ; preds = %164, %172
  %209 = phi i32 [ %207, %172 ], [ 0, %164 ]
  %210 = add i32 %209, %170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #4
  ret i32 %210
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp8_refining_search_sadx4(%struct.macroblock* nocapture readonly, %struct.block* nocapture readonly, %struct.blockd* nocapture readonly, %union.int_mv* nocapture, i32, i32, %struct.variance_vtable* nocapture readonly, i32** readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #3 {
  %10 = alloca i32, align 4
  %11 = alloca [4 x i32], align 16
  %12 = alloca [4 x i8*], align 16
  %13 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 11
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 4
  %16 = load i32, i32* %15, align 16
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 11, i32 13
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 9
  %20 = load i8**, i8*** %19, align 8
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %struct.block, %struct.block* %1, i64 0, i32 10
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = getelementptr inbounds %struct.blockd, %struct.blockd* %2, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %18, i64 %28
  %30 = bitcast %union.int_mv* %3 to %struct.MV*
  %31 = bitcast %union.int_mv* %3 to i16*
  %32 = load i16, i16* %31, align 4
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %16, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %29, i64 %35
  %37 = getelementptr inbounds %struct.MV, %struct.MV* %30, i64 0, i32 1
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  %41 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #4
  store i32 -1431655766, i32* %10, align 4
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 24, i64 1
  %45 = load i32*, i32** %44, align 8
  %46 = bitcast %union.int_mv* %8 to %struct.MV*
  %47 = bitcast %union.int_mv* %8 to i16*
  %48 = load i16, i16* %47, align 4
  %49 = ashr i16 %48, 3
  %50 = getelementptr inbounds %struct.MV, %struct.MV* %46, i64 0, i32 1
  %51 = load i16, i16* %50, align 2
  %52 = ashr i16 %51, 3
  %53 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 0
  %54 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %53, align 8
  %55 = tail call i32 %54(i8* %25, i32 %14, i8* %40, i32 %16) #4
  %56 = sext i16 %49 to i64
  %57 = sext i16 %52 to i64
  %58 = icmp sgt i32 %5, 0
  br i1 %58, label %59, label %235

59:                                               ; preds = %9
  %60 = load i16, i16* %37, align 2
  %61 = sext i16 %60 to i64
  %62 = sub nsw i64 %61, %57
  %63 = getelementptr inbounds i32, i32* %45, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = load i16, i16* %31, align 4
  %66 = sext i16 %65 to i64
  %67 = sub nsw i64 %66, %56
  %68 = getelementptr inbounds i32, i32* %43, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = add nsw i32 %64, %69
  %71 = mul nsw i32 %70, %4
  %72 = add nsw i32 %71, 128
  %73 = ashr i32 %72, 8
  %74 = add i32 %73, %55
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 32
  %76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 33
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30
  %78 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31
  %79 = bitcast [4 x i32]* %11 to i8*
  %80 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %81 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %82 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %83 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  %84 = bitcast [4 x i8*]* %12 to i8*
  %85 = getelementptr inbounds [4 x i8*], [4 x i8*]* %12, i64 0, i64 0
  %86 = getelementptr inbounds [4 x i8*], [4 x i8*]* %12, i64 0, i64 1
  %87 = getelementptr inbounds [4 x i8*], [4 x i8*]* %12, i64 0, i64 3
  %88 = sext i32 %16 to i64
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 5
  %91 = bitcast [4 x i32]* %11 to i8*
  %92 = bitcast i8** %86 to <2 x i8*>*
  br label %93

93:                                               ; preds = %217, %59
  %94 = phi i16 [ %60, %59 ], [ %226, %217 ]
  %95 = phi i16 [ %65, %59 ], [ %222, %217 ]
  %96 = phi i32 [ 0, %59 ], [ %233, %217 ]
  %97 = phi i32 [ %74, %59 ], [ %214, %217 ]
  %98 = phi i8* [ %40, %59 ], [ %232, %217 ]
  %99 = sext i16 %95 to i32
  %100 = add nsw i32 %99, -1
  %101 = load i32, i32* %75, align 8
  %102 = icmp sgt i32 %100, %101
  %103 = add nsw i32 %99, 1
  %104 = load i32, i32* %76, align 4
  %105 = icmp slt i32 %103, %104
  %106 = and i1 %102, %105
  %107 = sext i16 %94 to i32
  %108 = add nsw i32 %107, -1
  %109 = load i32, i32* %77, align 16
  %110 = icmp sgt i32 %108, %109
  %111 = and i1 %106, %110
  %112 = add nsw i32 %107, 1
  %113 = load i32, i32* %78, align 4
  %114 = icmp slt i32 %112, %113
  %115 = and i1 %114, %111
  br i1 %115, label %116, label %151

116:                                              ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %91, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #4
  %117 = getelementptr inbounds i8, i8* %98, i64 %89
  store i8* %117, i8** %85, align 16
  %118 = insertelement <2 x i8*> undef, i8* %98, i32 0
  %119 = shufflevector <2 x i8*> %118, <2 x i8*> undef, <2 x i32> zeroinitializer
  %120 = getelementptr i8, <2 x i8*> %119, <2 x i64> <i64 -1, i64 1>
  store <2 x i8*> %120, <2 x i8*>* %92, align 8
  %121 = getelementptr inbounds i8, i8* %98, i64 %88
  store i8* %121, i8** %87, align 8
  %122 = load void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)** %90, align 8
  call void %122(i8* %25, i32 %14, i8** nonnull %85, i32 %16, i32* nonnull %80) #4
  %123 = load i32, i32* %80, align 16
  %124 = icmp ult i32 %123, %97
  br i1 %124, label %125, label %146

125:                                              ; preds = %116
  %126 = load i16, i16* %31, align 4
  %127 = add i16 %126, -1
  %128 = load i16, i16* %37, align 2
  %129 = sext i16 %127 to i64
  %130 = sub nsw i64 %129, %56
  %131 = getelementptr inbounds i32, i32* %43, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = sext i16 %128 to i64
  %134 = sub nsw i64 %133, %57
  %135 = getelementptr inbounds i32, i32* %45, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = add nsw i32 %136, %132
  %138 = mul nsw i32 %137, %4
  %139 = add nsw i32 %138, 128
  %140 = ashr i32 %139, 8
  %141 = add i32 %140, %123
  store i32 %141, i32* %80, align 16
  %142 = icmp ult i32 %141, %97
  %143 = select i1 %142, i32 %141, i32 %97
  %144 = xor i1 %142, true
  %145 = sext i1 %144 to i32
  br label %146

146:                                              ; preds = %125, %116
  %147 = phi i32 [ %97, %116 ], [ %143, %125 ]
  %148 = phi i32 [ -1, %116 ], [ %145, %125 ]
  %149 = load i32, i32* %81, align 4
  %150 = icmp ult i32 %149, %147
  br i1 %150, label %282, label %302

151:                                              ; preds = %93, %209
  %152 = phi i32 [ %212, %209 ], [ %109, %93 ]
  %153 = phi i16 [ %211, %209 ], [ %94, %93 ]
  %154 = phi i16 [ %210, %209 ], [ %95, %93 ]
  %155 = phi i64 [ %207, %209 ], [ 0, %93 ]
  %156 = phi i32 [ %206, %209 ], [ -1, %93 ]
  %157 = phi i32 [ %205, %209 ], [ %97, %93 ]
  %158 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %155, i32 0
  %159 = load i16, i16* %158, align 4
  %160 = sext i16 %159 to i32
  %161 = add i16 %159, %154
  %162 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %155, i32 1
  %163 = load i16, i16* %162, align 2
  %164 = sext i16 %163 to i32
  %165 = add i16 %163, %153
  %166 = sext i16 %165 to i32
  %167 = icmp slt i32 %152, %166
  br i1 %167, label %168, label %204

168:                                              ; preds = %151
  %169 = load i32, i32* %78, align 4
  %170 = icmp sgt i32 %169, %166
  br i1 %170, label %171, label %204

171:                                              ; preds = %168
  %172 = sext i16 %161 to i32
  %173 = load i32, i32* %75, align 8
  %174 = icmp slt i32 %173, %172
  br i1 %174, label %175, label %204

175:                                              ; preds = %171
  %176 = load i32, i32* %76, align 4
  %177 = icmp sgt i32 %176, %172
  br i1 %177, label %178, label %204

178:                                              ; preds = %175
  %179 = mul nsw i32 %16, %160
  %180 = add nsw i32 %179, %164
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %98, i64 %181
  %183 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %53, align 8
  %184 = call i32 %183(i8* %25, i32 %14, i8* %182, i32 %16) #4
  store i32 %184, i32* %10, align 4
  %185 = icmp ult i32 %184, %157
  br i1 %185, label %186, label %204

186:                                              ; preds = %178
  %187 = sext i16 %161 to i64
  %188 = sub nsw i64 %187, %56
  %189 = getelementptr inbounds i32, i32* %43, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = sext i16 %165 to i64
  %192 = sub nsw i64 %191, %57
  %193 = getelementptr inbounds i32, i32* %45, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = add nsw i32 %194, %190
  %196 = mul nsw i32 %195, %4
  %197 = add nsw i32 %196, 128
  %198 = ashr i32 %197, 8
  %199 = add i32 %198, %184
  store i32 %199, i32* %10, align 4
  %200 = icmp ult i32 %199, %157
  %201 = select i1 %200, i32 %199, i32 %157
  %202 = trunc i64 %155 to i32
  %203 = select i1 %200, i32 %202, i32 %156
  br label %204

204:                                              ; preds = %186, %151, %168, %171, %175, %178
  %205 = phi i32 [ %157, %178 ], [ %157, %175 ], [ %157, %171 ], [ %157, %168 ], [ %157, %151 ], [ %201, %186 ]
  %206 = phi i32 [ %156, %178 ], [ %156, %175 ], [ %156, %171 ], [ %156, %168 ], [ %156, %151 ], [ %203, %186 ]
  %207 = add nuw nsw i64 %155, 1
  %208 = icmp eq i64 %207, 4
  br i1 %208, label %213, label %209

209:                                              ; preds = %204
  %210 = load i16, i16* %31, align 4
  %211 = load i16, i16* %37, align 2
  %212 = load i32, i32* %77, align 16
  br label %151

213:                                              ; preds = %204, %352
  %214 = phi i32 [ %353, %352 ], [ %205, %204 ]
  %215 = phi i32 [ %354, %352 ], [ %206, %204 ]
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %235, label %217

217:                                              ; preds = %213
  %218 = sext i32 %215 to i64
  %219 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %218, i32 0
  %220 = load i16, i16* %219, align 4
  %221 = load i16, i16* %31, align 4
  %222 = add i16 %221, %220
  store i16 %222, i16* %31, align 4
  %223 = getelementptr inbounds [4 x %struct.MV], [4 x %struct.MV]* @__const.vp8_refining_search_sadx4.neighbors, i64 0, i64 %218, i32 1
  %224 = load i16, i16* %223, align 2
  %225 = load i16, i16* %37, align 2
  %226 = add i16 %225, %224
  store i16 %226, i16* %37, align 2
  %227 = sext i16 %220 to i32
  %228 = mul nsw i32 %16, %227
  %229 = sext i16 %224 to i32
  %230 = add nsw i32 %228, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %98, i64 %231
  %233 = add nuw nsw i32 %96, 1
  %234 = icmp eq i32 %233, %5
  br i1 %234, label %235, label %93

235:                                              ; preds = %213, %217, %9
  %236 = phi i8* [ %40, %9 ], [ %98, %213 ], [ %232, %217 ]
  %237 = load i16, i16* %31, align 4
  %238 = load i16, i16* %37, align 2
  %239 = getelementptr inbounds %struct.variance_vtable, %struct.variance_vtable* %6, i64 0, i32 1
  %240 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %239, align 8
  %241 = call i32 %240(i8* %25, i32 %14, i8* %236, i32 %16, i32* nonnull %10) #4
  %242 = icmp eq i32** %7, null
  br i1 %242, label %279, label %243

243:                                              ; preds = %235
  %244 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %245 = load i32, i32* %244, align 8
  %246 = shl i16 %238, 3
  %247 = shl i16 %237, 3
  %248 = sext i16 %247 to i32
  %249 = load i16, i16* %47, align 4
  %250 = sext i16 %249 to i32
  %251 = sub nsw i32 %248, %250
  %252 = ashr i32 %251, 1
  %253 = icmp slt i32 %252, 2047
  %254 = select i1 %253, i32 %252, i32 2047
  %255 = icmp sgt i32 %254, 0
  %256 = select i1 %255, i32 %254, i32 0
  %257 = sext i16 %246 to i32
  %258 = load i16, i16* %50, align 2
  %259 = sext i16 %258 to i32
  %260 = sub nsw i32 %257, %259
  %261 = ashr i32 %260, 1
  %262 = icmp slt i32 %261, 2047
  %263 = select i1 %262, i32 %261, i32 2047
  %264 = icmp sgt i32 %263, 0
  %265 = select i1 %264, i32 %263, i32 0
  %266 = load i32*, i32** %7, align 8
  %267 = zext i32 %256 to i64
  %268 = getelementptr inbounds i32, i32* %266, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds i32*, i32** %7, i64 1
  %271 = load i32*, i32** %270, align 8
  %272 = zext i32 %265 to i64
  %273 = getelementptr inbounds i32, i32* %271, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = add nsw i32 %274, %269
  %276 = mul nsw i32 %275, %245
  %277 = add nsw i32 %276, 128
  %278 = ashr i32 %277, 8
  br label %279

279:                                              ; preds = %235, %243
  %280 = phi i32 [ %278, %243 ], [ 0, %235 ]
  %281 = add i32 %280, %241
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #4
  ret i32 %281

282:                                              ; preds = %146
  %283 = load i16, i16* %31, align 4
  %284 = load i16, i16* %37, align 2
  %285 = add i16 %284, -1
  %286 = sext i16 %283 to i64
  %287 = sub nsw i64 %286, %56
  %288 = getelementptr inbounds i32, i32* %43, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = sext i16 %285 to i64
  %291 = sub nsw i64 %290, %57
  %292 = getelementptr inbounds i32, i32* %45, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = add nsw i32 %293, %289
  %295 = mul nsw i32 %294, %4
  %296 = add nsw i32 %295, 128
  %297 = ashr i32 %296, 8
  %298 = add i32 %297, %149
  store i32 %298, i32* %81, align 4
  %299 = icmp ult i32 %298, %147
  %300 = select i1 %299, i32 %298, i32 %147
  %301 = select i1 %299, i32 1, i32 %148
  br label %302

302:                                              ; preds = %282, %146
  %303 = phi i32 [ %147, %146 ], [ %300, %282 ]
  %304 = phi i32 [ %148, %146 ], [ %301, %282 ]
  %305 = load i32, i32* %82, align 8
  %306 = icmp ult i32 %305, %303
  br i1 %306, label %307, label %327

307:                                              ; preds = %302
  %308 = load i16, i16* %31, align 4
  %309 = load i16, i16* %37, align 2
  %310 = add i16 %309, 1
  %311 = sext i16 %308 to i64
  %312 = sub nsw i64 %311, %56
  %313 = getelementptr inbounds i32, i32* %43, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = sext i16 %310 to i64
  %316 = sub nsw i64 %315, %57
  %317 = getelementptr inbounds i32, i32* %45, i64 %316
  %318 = load i32, i32* %317, align 4
  %319 = add nsw i32 %318, %314
  %320 = mul nsw i32 %319, %4
  %321 = add nsw i32 %320, 128
  %322 = ashr i32 %321, 8
  %323 = add i32 %322, %305
  store i32 %323, i32* %82, align 8
  %324 = icmp ult i32 %323, %303
  %325 = select i1 %324, i32 %323, i32 %303
  %326 = select i1 %324, i32 2, i32 %304
  br label %327

327:                                              ; preds = %307, %302
  %328 = phi i32 [ %303, %302 ], [ %325, %307 ]
  %329 = phi i32 [ %304, %302 ], [ %326, %307 ]
  %330 = load i32, i32* %83, align 4
  %331 = icmp ult i32 %330, %328
  br i1 %331, label %332, label %352

332:                                              ; preds = %327
  %333 = load i16, i16* %31, align 4
  %334 = add i16 %333, 1
  %335 = load i16, i16* %37, align 2
  %336 = sext i16 %334 to i64
  %337 = sub nsw i64 %336, %56
  %338 = getelementptr inbounds i32, i32* %43, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = sext i16 %335 to i64
  %341 = sub nsw i64 %340, %57
  %342 = getelementptr inbounds i32, i32* %45, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = add nsw i32 %343, %339
  %345 = mul nsw i32 %344, %4
  %346 = add nsw i32 %345, 128
  %347 = ashr i32 %346, 8
  %348 = add i32 %347, %330
  store i32 %348, i32* %83, align 4
  %349 = icmp ult i32 %348, %328
  %350 = select i1 %349, i32 %348, i32 %328
  %351 = select i1 %349, i32 3, i32 %329
  br label %352

352:                                              ; preds = %332, %327
  %353 = phi i32 [ %328, %327 ], [ %350, %332 ]
  %354 = phi i32 [ %329, %327 ], [ %351, %332 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #4
  br label %213
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
