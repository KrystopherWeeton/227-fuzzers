; ModuleID = '../../third_party/crashpad/crashpad/snapshot/elf/elf_symbol_table_reader.cc'
source_filename = "../../third_party/crashpad/crashpad/snapshot/elf/elf_symbol_table_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.crashpad::ElfSymbolTableReader" = type { %"class.crashpad::ProcessMemoryRange"*, %"class.crashpad::ElfImageReader"*, i64, i64 }
%"class.crashpad::ProcessMemoryRange" = type { %"class.crashpad::ProcessMemory"*, %"class.crashpad::internal::CheckedAddressRangeGeneric", [0 x i8] }
%"class.crashpad::ProcessMemory" = type { i32 (...)** }
%"class.crashpad::internal::CheckedAddressRangeGeneric" = type <{ %union.anon, i8, i8, [6 x i8] }>
%union.anon = type { %"class.crashpad::CheckedRange.0" }
%"class.crashpad::CheckedRange.0" = type { i64, i64 }
%"class.crashpad::ElfImageReader" = type <{ %union.anon.1, i64, i64, %"class.crashpad::ProcessMemoryRange", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.15", [0 x i8], %"class.crashpad::InitializationState", %"class.crashpad::InitializationState", [6 x i8] }>
%union.anon.1 = type { %struct.Elf64_Ehdr }
%struct.Elf64_Ehdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.crashpad::ElfImageReader::ProgramHeaderTable"* }
%"class.crashpad::ElfImageReader::ProgramHeaderTable" = type opaque
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.crashpad::ElfDynamicArrayReader"* }
%"class.crashpad::ElfDynamicArrayReader" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.crashpad::ElfSymbolTableReader"* }
%"class.crashpad::InitializationState" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.23 }
%union.anon.23 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.crashpad::ElfSymbolTableReader::SymbolInformation" = type { i64, i64, i16, i8, i8, i8 }
%struct.Elf64_Sym = type { i32, i8, i8, i16, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.Elf32_Sym = type { i32, i32, i32, i8, i8, i16 }

$_ZN8crashpad20ElfSymbolTableReader15ScanSymbolTableI9Elf64_SymEEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS0_17SymbolInformationE = comdat any

$_ZN8crashpad20ElfSymbolTableReader15ScanSymbolTableI9Elf32_SymEEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS0_17SymbolInformationE = comdat any

@_ZN8crashpad20ElfSymbolTableReaderC1EPKNS_18ProcessMemoryRangeEPNS_14ElfImageReaderEmm = hidden unnamed_addr alias void (%"class.crashpad::ElfSymbolTableReader"*, %"class.crashpad::ProcessMemoryRange"*, %"class.crashpad::ElfImageReader"*, i64, i64), void (%"class.crashpad::ElfSymbolTableReader"*, %"class.crashpad::ProcessMemoryRange"*, %"class.crashpad::ElfImageReader"*, i64, i64)* @_ZN8crashpad20ElfSymbolTableReaderC2EPKNS_18ProcessMemoryRangeEPNS_14ElfImageReaderEmm
@_ZN8crashpad20ElfSymbolTableReaderD1Ev = hidden unnamed_addr alias void (%"class.crashpad::ElfSymbolTableReader"*), void (%"class.crashpad::ElfSymbolTableReader"*)* @_ZN8crashpad20ElfSymbolTableReaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8crashpad20ElfSymbolTableReaderC2EPKNS_18ProcessMemoryRangeEPNS_14ElfImageReaderEmm(%"class.crashpad::ElfSymbolTableReader"* nocapture, %"class.crashpad::ProcessMemoryRange"*, %"class.crashpad::ElfImageReader"*, i64, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 0
  store %"class.crashpad::ProcessMemoryRange"* %1, %"class.crashpad::ProcessMemoryRange"** %6, align 8
  %7 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 1
  store %"class.crashpad::ElfImageReader"* %2, %"class.crashpad::ElfImageReader"** %7, align 8
  %8 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 2
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 3
  store i64 %4, i64* %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8crashpad20ElfSymbolTableReaderD2Ev(%"class.crashpad::ElfSymbolTableReader"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad20ElfSymbolTableReader9GetSymbolERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS0_17SymbolInformationE(%"class.crashpad::ElfSymbolTableReader"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 0
  %5 = load %"class.crashpad::ProcessMemoryRange"*, %"class.crashpad::ProcessMemoryRange"** %4, align 8
  %6 = getelementptr inbounds %"class.crashpad::ProcessMemoryRange", %"class.crashpad::ProcessMemoryRange"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZN8crashpad20ElfSymbolTableReader15ScanSymbolTableI9Elf64_SymEEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS0_17SymbolInformationE(%"class.crashpad::ElfSymbolTableReader"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2)
  br label %13

11:                                               ; preds = %3
  %12 = tail call zeroext i1 @_ZN8crashpad20ElfSymbolTableReader15ScanSymbolTableI9Elf32_SymEEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS0_17SymbolInformationE(%"class.crashpad::ElfSymbolTableReader"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2)
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i1 [ %10, %9 ], [ %12, %11 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8crashpad20ElfSymbolTableReader15ScanSymbolTableI9Elf64_SymEEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS0_17SymbolInformationE(%"class.crashpad::ElfSymbolTableReader"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %struct.Elf64_Sym, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.Elf64_Sym* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = getelementptr inbounds %struct.Elf64_Sym, %struct.Elf64_Sym* %4, i64 0, i32 0
  %10 = getelementptr inbounds %struct.Elf64_Sym, %struct.Elf64_Sym* %4, i64 0, i32 1
  %11 = getelementptr inbounds %struct.Elf64_Sym, %struct.Elf64_Sym* %4, i64 0, i32 2
  %12 = getelementptr inbounds %struct.Elf64_Sym, %struct.Elf64_Sym* %4, i64 0, i32 3
  %13 = getelementptr inbounds %struct.Elf64_Sym, %struct.Elf64_Sym* %4, i64 0, i32 4
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %15 = bitcast %struct.Elf64_Sym* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #7
  %18 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %108, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %31

31:                                               ; preds = %21, %95
  %32 = phi i64 [ 0, %21 ], [ %97, %95 ]
  %33 = phi i64 [ %7, %21 ], [ %96, %95 ]
  %34 = load %"class.crashpad::ProcessMemoryRange"*, %"class.crashpad::ProcessMemoryRange"** %22, align 8
  %35 = call zeroext i1 @_ZNK8crashpad18ProcessMemoryRange4ReadEmmPv(%"class.crashpad::ProcessMemoryRange"* %34, i64 %33, i64 24, i8* nonnull %8) #7
  br i1 %35, label %36, label %100

36:                                               ; preds = %31
  %37 = load %"class.crashpad::ElfImageReader"*, %"class.crashpad::ElfImageReader"** %23, align 8
  %38 = load i32, i32* %9, align 8
  %39 = zext i32 %38 to i64
  %40 = call zeroext i1 @_ZN8crashpad14ElfImageReader30ReadDynamicStringTableAtOffsetEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crashpad::ElfImageReader"* %37, i64 %39, %"class.std::__1::basic_string"* nonnull %5) #7
  br i1 %40, label %41, label %95

41:                                               ; preds = %36
  %42 = load i8, i8* %25, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i64, i64* %17, align 8
  %45 = zext i8 %42 to i64
  %46 = select i1 %43, i64 %44, i64 %45
  %47 = load i8, i8* %27, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %28, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp eq i64 %46, %51
  br i1 %52, label %53, label %95

53:                                               ; preds = %41
  %54 = load i8*, i8** %16, align 8
  %55 = select i1 %43, i8* %54, i8* %14
  %56 = load i8*, i8** %29, align 8
  %57 = select i1 %48, i8* %56, i8* %30
  %58 = icmp eq i64 %46, 0
  br i1 %43, label %65, label %59

59:                                               ; preds = %53
  br i1 %58, label %81, label %60

60:                                               ; preds = %59
  %61 = ptrtoint i8* %54 to i64
  %62 = trunc i64 %61 to i8
  %63 = load i8, i8* %57, align 1
  %64 = icmp eq i8 %63, %62
  br i1 %64, label %66, label %95

65:                                               ; preds = %53
  br i1 %58, label %81, label %78

66:                                               ; preds = %60, %73
  %67 = phi i64 [ %70, %73 ], [ %45, %60 ]
  %68 = phi i8* [ %71, %73 ], [ %14, %60 ]
  %69 = phi i8* [ %74, %73 ], [ %57, %60 ]
  %70 = add i64 %67, -1
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds i8, i8* %69, i64 1
  %75 = load i8, i8* %71, align 1
  %76 = load i8, i8* %74, align 1
  %77 = icmp eq i8 %75, %76
  br i1 %77, label %66, label %95

78:                                               ; preds = %65
  %79 = call i32 @bcmp(i8* %55, i8* %57, i64 %46) #7
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %95

81:                                               ; preds = %59, %65, %78, %66
  %82 = bitcast i64* %13 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8
  %84 = bitcast %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 8
  %85 = load i16, i16* %12, align 2
  %86 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 2
  store i16 %85, i16* %86, align 8
  %87 = load i8, i8* %10, align 4
  %88 = lshr i8 %87, 4
  %89 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 4
  store i8 %88, i8* %89, align 1
  %90 = and i8 %87, 15
  %91 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 3
  store i8 %90, i8* %91, align 2
  %92 = load i8, i8* %11, align 1
  %93 = and i8 %92, 3
  %94 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 5
  store i8 %93, i8* %94, align 4
  br label %102

95:                                               ; preds = %73, %60, %41, %78, %36
  %96 = add i64 %33, 24
  %97 = add nuw i64 %32, 1
  %98 = load i64, i64* %18, align 8
  %99 = icmp ult i64 %97, %98
  br i1 %99, label %31, label %100

100:                                              ; preds = %31, %95
  %101 = load i8, i8* %25, align 1
  br label %102

102:                                              ; preds = %100, %81
  %103 = phi i8 [ %42, %81 ], [ %101, %100 ]
  %104 = phi i1 [ true, %81 ], [ false, %100 ]
  %105 = icmp slt i8 %103, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %107) #8
  br label %108

108:                                              ; preds = %3, %102, %106
  %109 = phi i1 [ %104, %102 ], [ %104, %106 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  ret i1 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8crashpad20ElfSymbolTableReader15ScanSymbolTableI9Elf32_SymEEbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPNS0_17SymbolInformationE(%"class.crashpad::ElfSymbolTableReader"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %struct.Elf32_Sym, align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.Elf32_Sym* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = getelementptr inbounds %struct.Elf32_Sym, %struct.Elf32_Sym* %4, i64 0, i32 0
  %10 = getelementptr inbounds %struct.Elf32_Sym, %struct.Elf32_Sym* %4, i64 0, i32 1
  %11 = getelementptr inbounds %struct.Elf32_Sym, %struct.Elf32_Sym* %4, i64 0, i32 3
  %12 = getelementptr inbounds %struct.Elf32_Sym, %struct.Elf32_Sym* %4, i64 0, i32 4
  %13 = getelementptr inbounds %struct.Elf32_Sym, %struct.Elf32_Sym* %4, i64 0, i32 5
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %15 = bitcast %struct.Elf32_Sym* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #7
  %18 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %109, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.crashpad::ElfSymbolTableReader", %"class.crashpad::ElfSymbolTableReader"* %0, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %31

31:                                               ; preds = %21, %96
  %32 = phi i64 [ 0, %21 ], [ %98, %96 ]
  %33 = phi i64 [ %7, %21 ], [ %97, %96 ]
  %34 = load %"class.crashpad::ProcessMemoryRange"*, %"class.crashpad::ProcessMemoryRange"** %22, align 8
  %35 = call zeroext i1 @_ZNK8crashpad18ProcessMemoryRange4ReadEmmPv(%"class.crashpad::ProcessMemoryRange"* %34, i64 %33, i64 16, i8* nonnull %8) #7
  br i1 %35, label %36, label %101

36:                                               ; preds = %31
  %37 = load %"class.crashpad::ElfImageReader"*, %"class.crashpad::ElfImageReader"** %23, align 8
  %38 = load i32, i32* %9, align 4
  %39 = zext i32 %38 to i64
  %40 = call zeroext i1 @_ZN8crashpad14ElfImageReader30ReadDynamicStringTableAtOffsetEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crashpad::ElfImageReader"* %37, i64 %39, %"class.std::__1::basic_string"* nonnull %5) #7
  br i1 %40, label %41, label %96

41:                                               ; preds = %36
  %42 = load i8, i8* %25, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i64, i64* %17, align 8
  %45 = zext i8 %42 to i64
  %46 = select i1 %43, i64 %44, i64 %45
  %47 = load i8, i8* %27, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %28, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp eq i64 %46, %51
  br i1 %52, label %53, label %96

53:                                               ; preds = %41
  %54 = load i8*, i8** %16, align 8
  %55 = select i1 %43, i8* %54, i8* %14
  %56 = load i8*, i8** %29, align 8
  %57 = select i1 %48, i8* %56, i8* %30
  %58 = icmp eq i64 %46, 0
  br i1 %43, label %65, label %59

59:                                               ; preds = %53
  br i1 %58, label %81, label %60

60:                                               ; preds = %59
  %61 = ptrtoint i8* %54 to i64
  %62 = trunc i64 %61 to i8
  %63 = load i8, i8* %57, align 1
  %64 = icmp eq i8 %63, %62
  br i1 %64, label %66, label %96

65:                                               ; preds = %53
  br i1 %58, label %81, label %78

66:                                               ; preds = %60, %73
  %67 = phi i64 [ %70, %73 ], [ %45, %60 ]
  %68 = phi i8* [ %71, %73 ], [ %14, %60 ]
  %69 = phi i8* [ %74, %73 ], [ %57, %60 ]
  %70 = add i64 %67, -1
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds i8, i8* %69, i64 1
  %75 = load i8, i8* %71, align 1
  %76 = load i8, i8* %74, align 1
  %77 = icmp eq i8 %75, %76
  br i1 %77, label %66, label %96

78:                                               ; preds = %65
  %79 = call i32 @bcmp(i8* %55, i8* %57, i64 %46) #7
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %96

81:                                               ; preds = %59, %65, %78, %66
  %82 = bitcast i32* %10 to <2 x i32>*
  %83 = load <2 x i32>, <2 x i32>* %82, align 4
  %84 = zext <2 x i32> %83 to <2 x i64>
  %85 = bitcast %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %85, align 8
  %86 = load i16, i16* %13, align 2
  %87 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 2
  store i16 %86, i16* %87, align 8
  %88 = load i8, i8* %11, align 4
  %89 = lshr i8 %88, 4
  %90 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 4
  store i8 %89, i8* %90, align 1
  %91 = and i8 %88, 15
  %92 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 3
  store i8 %91, i8* %92, align 2
  %93 = load i8, i8* %12, align 1
  %94 = and i8 %93, 3
  %95 = getelementptr inbounds %"struct.crashpad::ElfSymbolTableReader::SymbolInformation", %"struct.crashpad::ElfSymbolTableReader::SymbolInformation"* %2, i64 0, i32 5
  store i8 %94, i8* %95, align 4
  br label %103

96:                                               ; preds = %73, %60, %41, %78, %36
  %97 = add i64 %33, 16
  %98 = add nuw i64 %32, 1
  %99 = load i64, i64* %18, align 8
  %100 = icmp ult i64 %98, %99
  br i1 %100, label %31, label %101

101:                                              ; preds = %31, %96
  %102 = load i8, i8* %25, align 1
  br label %103

103:                                              ; preds = %101, %81
  %104 = phi i8 [ %42, %81 ], [ %102, %101 ]
  %105 = phi i1 [ true, %81 ], [ false, %101 ]
  %106 = icmp slt i8 %104, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %108) #8
  br label %109

109:                                              ; preds = %3, %103, %107
  %110 = phi i1 [ %105, %103 ], [ %105, %107 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret i1 %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK8crashpad18ProcessMemoryRange4ReadEmmPv(%"class.crashpad::ProcessMemoryRange"*, i64, i64, i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN8crashpad14ElfImageReader30ReadDynamicStringTableAtOffsetEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crashpad::ElfImageReader"*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
