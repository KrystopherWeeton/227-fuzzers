; ModuleID = '../../sandbox/linux/syscall_broker/broker_simple_message.cc'
source_filename = "../../sandbox/linux/syscall_broker/broker_simple_message.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.sandbox::syscall_broker::BrokerSimpleMessage" = type { i8, i8, i8, i64, [4096 x i8], i8*, i8* }
%"class.base::span.0" = type { %"struct.base::internal::ExtentStorage", %"class.base::ScopedGeneric"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.iovec = type { i8*, i64 }
%struct.cmsghdr = type { i64, i32, i32, [0 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@.str = private unnamed_addr constant [21 x i8] c"Check failed: reply\0A\00", align 1
@_ZN4base16UnixDomainSocket19kMaxFileDescriptorsE = external local_unnamed_addr constant i64, align 8
@.str.1 = private unnamed_addr constant [82 x i8] c"Check failed: send_fds.size() + 1 <= base::UnixDomainSocket::kMaxFileDescriptors\0A\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"Check failed: send_fds.size() <= base::UnixDomainSocket::kMaxFileDescriptors\0A\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"Check failed: !read_only_ && !write_only_\0A\00", align 1
@.str.4 = private unnamed_addr constant [80 x i8] c"Check failed: return_fds.size() <= base::UnixDomainSocket::kMaxFileDescriptors\0A\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"idx < size()\00", align 1
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage20SendRecvMsgWithFlagsEiiPN4base13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEEPS1_(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32, i32, %"class.base::ScopedGeneric"*, %"class.sandbox::syscall_broker::BrokerSimpleMessage"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span.0", align 8
  %7 = getelementptr inbounds %"class.base::span.0", %"class.base::span.0"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::span.0", %"class.base::span.0"* %6, i64 0, i32 1
  store %"class.base::ScopedGeneric"* %3, %"class.base::ScopedGeneric"** %8, align 8
  %9 = tail call i64 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage31SendRecvMsgWithFlagsMultipleFdsEiiN4base4spanIKiLm18446744073709551615EEENS3_INS2_13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEELm18446744073709551615EEEPS1_(%"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i32 %1, i32 %2, i64 0, i32* null, %"class.base::span.0"* nonnull byval(%"class.base::span.0") align 8 %6, %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %4)
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage31SendRecvMsgWithFlagsMultipleFdsEiiN4base4spanIKiLm18446744073709551615EEENS3_INS2_13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEELm18446744073709551615EEEPS1_(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32, i32, i64, i32*, %"class.base::span.0"* nocapture readonly byval(%"class.base::span.0") align 8, %"class.sandbox::syscall_broker::BrokerSimpleMessage"*) local_unnamed_addr #0 align 2 {
  %8 = bitcast i32* %4 to i8*
  %9 = alloca %"class.base::ScopedGeneric", align 8
  %10 = alloca %"class.base::ScopedGeneric", align 8
  %11 = icmp eq %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %6, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0)) #3
  br label %13

13:                                               ; preds = %7, %12
  %14 = add i64 %3, 1
  %15 = load i64, i64* @_ZN4base16UnixDomainSocket19kMaxFileDescriptorsE, align 8
  %16 = icmp ugt i64 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0)) #3
  br label %18

18:                                               ; preds = %13, %17
  %19 = bitcast %"class.base::ScopedGeneric"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #3
  %20 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 2
  %23 = bitcast %"class.base::ScopedGeneric"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  store i32 -1, i32* %21, align 8
  store i8 0, i8* %22, align 4
  %24 = bitcast %"class.base::ScopedGeneric"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #3
  %25 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %10, i64 0, i32 0
  %26 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %10, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %10, i64 0, i32 2
  %28 = bitcast %"class.base::ScopedGeneric"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  store i32 -1, i32* %26, align 8
  store i8 0, i8* %27, align 4
  %29 = call zeroext i1 @_ZN4base16CreateSocketPairEPNS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEES4_(%"class.base::ScopedGeneric"* nonnull %9, %"class.base::ScopedGeneric"* nonnull %10) #3
  br i1 %29, label %30, label %65

30:                                               ; preds = %18
  %31 = call i8* @llvm.stacksave()
  %32 = alloca i32, i64 %15, align 16
  %33 = icmp eq i64 %15, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = bitcast i32* %32 to i8*
  %36 = shl i64 %15, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -86, i64 %36, i1 false)
  br label %37

37:                                               ; preds = %34, %30
  %38 = load i32, i32* %26, align 8
  store i32 %38, i32* %32, align 16
  %39 = icmp eq i64 %3, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds i32, i32* %32, i64 1
  %42 = bitcast i32* %41 to i8*
  %43 = shl nuw i64 %3, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %8, i64 %43, i1 false)
  br label %44

44:                                               ; preds = %40, %37
  %45 = call zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage18SendMsgMultipleFdsEiN4base4spanIKiLm18446744073709551615EEE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i32 %1, i64 %14, i32* nonnull %32)
  br i1 %45, label %46, label %63

46:                                               ; preds = %44
  %47 = load i32, i32* %26, align 8
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %10, i32 %47) #3
  %50 = load i32, i32* %26, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %50) #3
  store i32 -1, i32* %26, align 8
  br label %51

51:                                               ; preds = %46, %49
  store i32 -1, i32* %26, align 8
  %52 = load i32, i32* %21, align 8
  %53 = getelementptr inbounds %"class.base::span.0", %"class.base::span.0"* %5, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.base::span.0", %"class.base::span.0"* %5, i64 0, i32 1
  %56 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %55, align 8
  %57 = call i64 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage27RecvMsgWithFlagsMultipleFdsEiiN4base4spanINS2_13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEELm18446744073709551615EEE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"* %6, i32 %52, i32 %2, i64 %54, %"class.base::ScopedGeneric"* %56)
  %58 = load i32, i32* %21, align 8
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %62, label %60

60:                                               ; preds = %51
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %9, i32 %58) #3
  %61 = load i32, i32* %21, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %61) #3
  store i32 -1, i32* %21, align 8
  br label %62

62:                                               ; preds = %51, %60
  store i32 -1, i32* %21, align 8
  br label %63

63:                                               ; preds = %44, %62
  %64 = phi i64 [ %57, %62 ], [ -1, %44 ]
  call void @llvm.stackrestore(i8* %31)
  br label %65

65:                                               ; preds = %18, %63
  %66 = phi i64 [ %64, %63 ], [ -1, %18 ]
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #3
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #3
  ret i64 %66
}

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN4base16CreateSocketPairEPNS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEES4_(%"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage18SendMsgMultipleFdsEiN4base4spanIKiLm18446744073709551615EEE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32, i64, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.msghdr, align 8
  %6 = alloca %struct.iovec, align 8
  %7 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %72

10:                                               ; preds = %4
  %11 = load i64, i64* @_ZN4base16UnixDomainSocket19kMaxFileDescriptorsE, align 8
  %12 = icmp ult i64 %11, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #3
  br label %14

14:                                               ; preds = %10, %13
  %15 = bitcast %struct.msghdr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %15) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 0
  %17 = bitcast %struct.iovec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #3
  %18 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i64 0, i32 0
  %19 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i64 0, i32 1
  store i8* %16, i8** %18, align 8
  %20 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 2
  store %struct.iovec* %6, %struct.iovec** %22, align 8
  %23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 3
  store i64 1, i64* %23, align 8
  %24 = shl i64 %2, 2
  %25 = add i64 %24, 23
  %26 = and i64 %25, 4294967288
  %27 = call i8* @llvm.stacksave()
  %28 = alloca i8, i64 %26, align 16
  %29 = icmp eq i64 %26, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 %26, i1 false)
  br label %31

31:                                               ; preds = %30, %14
  %32 = icmp eq i64 %2, 0
  br i1 %32, label %59, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 4
  store i8* %28, i8** %34, align 8
  %35 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 5
  store i64 %26, i64* %35, align 8
  %36 = icmp ugt i64 %26, 15
  %37 = bitcast i8* %28 to %struct.cmsghdr*
  %38 = select i1 %36, %struct.cmsghdr* %37, %struct.cmsghdr* null
  %39 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %38, i64 0, i32 1
  store i32 1, i32* %39, align 8
  %40 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %38, i64 0, i32 2
  store i32 1, i32* %40, align 4
  br label %41

41:                                               ; preds = %47, %33
  %42 = phi i64 [ %51, %47 ], [ 0, %33 ]
  %43 = phi i64 [ %54, %47 ], [ 0, %33 ]
  %44 = getelementptr inbounds i32, i32* %3, i64 %42
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %70, label %47

47:                                               ; preds = %41
  %48 = shl i64 %42, 2
  %49 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %38, i64 0, i32 3, i64 %48
  %50 = bitcast i8* %49 to i32*
  store i32 %45, i32* %50, align 4
  %51 = add nuw i64 %42, 1
  %52 = shl nsw i64 %43, 32
  %53 = add i64 %52, 17179869184
  %54 = ashr exact i64 %53, 32
  %55 = icmp eq i64 %51, %2
  br i1 %55, label %56, label %41

56:                                               ; preds = %47
  %57 = add nsw i64 %54, 16
  %58 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %38, i64 0, i32 0
  store i64 %57, i64* %58, align 16
  store i64 %57, i64* %35, align 8
  br label %59

59:                                               ; preds = %56, %31
  br label %60

60:                                               ; preds = %59, %63
  %61 = call i64 @sendmsg(i32 %1, %struct.msghdr* nonnull %5, i32 16384) #3
  %62 = icmp eq i64 %61, -1
  br i1 %62, label %63, label %67

63:                                               ; preds = %60
  %64 = tail call i32* @__errno_location() #13
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 4
  br i1 %66, label %60, label %67

67:                                               ; preds = %60, %63
  %68 = load i64, i64* %20, align 8
  %69 = icmp eq i64 %68, %61
  br label %70

70:                                               ; preds = %41, %67
  %71 = phi i1 [ %69, %67 ], [ false, %41 ]
  call void @llvm.stackrestore(i8* %27)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #3
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #3
  br label %72

72:                                               ; preds = %4, %70
  %73 = phi i1 [ %71, %70 ], [ false, %4 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage27RecvMsgWithFlagsMultipleFdsEiiN4base4spanINS2_13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEELm18446744073709551615EEE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32, i32, i64, %"class.base::ScopedGeneric"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %struct.msghdr, align 8
  %8 = alloca %struct.iovec, align 8
  %9 = alloca %"class.base::ScopedGeneric", align 8
  %10 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 1
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %5
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0)) #3
  br label %18

18:                                               ; preds = %13, %17
  %19 = load i64, i64* @_ZN4base16UnixDomainSocket19kMaxFileDescriptorsE, align 8
  %20 = icmp ult i64 %19, %3
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0)) #3
  br label %22

22:                                               ; preds = %18, %21
  store i8 1, i8* %10, align 8
  %23 = bitcast %struct.msghdr* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %23) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 56, i1 false)
  %24 = bitcast %struct.iovec* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #3
  %25 = getelementptr inbounds %struct.iovec, %struct.iovec* %8, i64 0, i32 0
  %26 = getelementptr inbounds %struct.iovec, %struct.iovec* %8, i64 0, i32 1
  %27 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 0
  store i8* %27, i8** %25, align 8
  store i64 4096, i64* %26, align 8
  %28 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 2
  store %struct.iovec* %8, %struct.iovec** %28, align 8
  %29 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 3
  store i64 1, i64* %29, align 8
  %30 = shl i64 %19, 2
  %31 = add i64 %30, 55
  %32 = and i64 %31, -8
  %33 = call i8* @llvm.stacksave()
  %34 = alloca i8, i64 %32, align 16
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 %32, i1 false)
  br label %37

37:                                               ; preds = %36, %22
  %38 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 4
  store i8* %34, i8** %38, align 8
  %39 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 5
  store i64 %32, i64* %39, align 8
  br label %40

40:                                               ; preds = %43, %37
  %41 = call i64 @recvmsg(i32 %1, %struct.msghdr* nonnull %7, i32 %2) #3
  %42 = icmp eq i64 %41, -1
  br i1 %42, label %43, label %47

43:                                               ; preds = %40
  %44 = tail call i32* @__errno_location() #13
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 4
  br i1 %46, label %40, label %168

47:                                               ; preds = %40
  %48 = load i64, i64* %39, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %98, label %50

50:                                               ; preds = %47
  %51 = icmp ult i64 %48, 16
  %52 = bitcast i8** %38 to %struct.cmsghdr**
  %53 = load %struct.cmsghdr*, %struct.cmsghdr** %52, align 8
  %54 = icmp eq %struct.cmsghdr* %53, null
  %55 = or i1 %54, %51
  br i1 %55, label %98, label %56

56:                                               ; preds = %50
  %57 = bitcast %struct.cmsghdr* %53 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 %48
  br label %59

59:                                               ; preds = %88, %56
  %60 = phi %struct.cmsghdr* [ %53, %56 ], [ %89, %88 ]
  %61 = phi i64 [ 0, %56 ], [ %79, %88 ]
  %62 = phi i32* [ null, %56 ], [ %78, %88 ]
  %63 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %60, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, -16
  %66 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %60, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %77

69:                                               ; preds = %59
  %70 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %60, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %60, i64 0, i32 3, i64 0
  %75 = bitcast i8* %74 to i32*
  %76 = lshr i64 %65, 2
  br label %77

77:                                               ; preds = %73, %69, %59
  %78 = phi i32* [ %75, %73 ], [ %62, %69 ], [ %62, %59 ]
  %79 = phi i64 [ %76, %73 ], [ %61, %69 ], [ %61, %59 ]
  %80 = icmp ult i64 %64, 16
  br i1 %80, label %98, label %81

81:                                               ; preds = %77
  %82 = bitcast %struct.cmsghdr* %60 to i8*
  %83 = add i64 %64, 7
  %84 = and i64 %83, -8
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = icmp ugt i8* %86, %58
  br i1 %87, label %98, label %88

88:                                               ; preds = %81
  %89 = bitcast i8* %85 to %struct.cmsghdr*
  %90 = bitcast i8* %85 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 7
  %93 = and i64 %92, -8
  %94 = getelementptr inbounds i8, i8* %85, i64 %93
  %95 = icmp ugt i8* %94, %58
  %96 = icmp eq i8* %85, null
  %97 = or i1 %95, %96
  br i1 %97, label %98, label %59

98:                                               ; preds = %88, %77, %81, %50, %47
  %99 = phi i32* [ null, %47 ], [ null, %50 ], [ %78, %81 ], [ %78, %77 ], [ %78, %88 ]
  %100 = phi i64 [ 0, %47 ], [ 0, %50 ], [ %79, %81 ], [ %79, %77 ], [ %79, %88 ]
  %101 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 6
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 40
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %98
  %106 = icmp eq i64 %100, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %109, %105
  %108 = tail call i32* @__errno_location() #13
  store i32 90, i32* %108, align 4
  br label %168

109:                                              ; preds = %105, %109
  %110 = phi i64 [ %114, %109 ], [ 0, %105 ]
  %111 = getelementptr inbounds i32, i32* %99, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = call i32 @close(i32 %112) #3
  %114 = add nuw i64 %110, 1
  %115 = icmp eq i64 %114, %100
  br i1 %115, label %107, label %109

116:                                              ; preds = %98
  %117 = icmp eq i32* %99, null
  br i1 %117, label %166, label %118

118:                                              ; preds = %116
  %119 = icmp ugt i64 %100, %3
  br i1 %119, label %130, label %120

120:                                              ; preds = %118
  %121 = icmp eq i64 %100, 0
  br i1 %121, label %166, label %122

122:                                              ; preds = %120
  %123 = bitcast %"class.base::ScopedGeneric"* %9 to i8*
  %124 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 0
  %125 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 1, i32 0
  %126 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 2
  %127 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %137

128:                                              ; preds = %130
  %129 = tail call i32* @__errno_location() #13
  store i32 90, i32* %129, align 4
  br label %168

130:                                              ; preds = %118, %130
  %131 = phi i64 [ %135, %130 ], [ 0, %118 ]
  %132 = getelementptr inbounds i32, i32* %99, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = call i32 @close(i32 %133) #3
  %135 = add nuw i64 %131, 1
  %136 = icmp eq i64 %135, %100
  br i1 %136, label %128, label %130

137:                                              ; preds = %163, %122
  %138 = phi i64 [ 0, %122 ], [ %164, %163 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #3
  %139 = getelementptr inbounds i32, i32* %99, i64 %138
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %125, align 8
  store i8 0, i8* %126, align 4
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %143, label %142

142:                                              ; preds = %137
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %9, i32 %140) #3
  br label %143

143:                                              ; preds = %137, %142
  %144 = icmp ult i64 %138, %3
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #3
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #3
  %146 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #3
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #3
  br label %147

147:                                              ; preds = %143, %145
  %148 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %4, i64 %138
  %149 = load i32, i32* %125, align 8
  store i32 -1, i32* %125, align 8
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %152, label %151

151:                                              ; preds = %147
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %9, i32 %149) #3
  br label %152

152:                                              ; preds = %151, %147
  %153 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %4, i64 %138, i32 1, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %154, -1
  br i1 %155, label %161, label %156

156:                                              ; preds = %152
  %157 = icmp eq i32 %154, %149
  br i1 %157, label %158, label %159

158:                                              ; preds = %156
  call void @abort() #14
  unreachable

159:                                              ; preds = %156
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %148, i32 %154) #3
  %160 = load i32, i32* %153, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %160) #3
  store i32 -1, i32* %153, align 8
  br label %161

161:                                              ; preds = %159, %152
  store i32 %149, i32* %153, align 8
  br i1 %150, label %163, label %162

162:                                              ; preds = %161
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %148, i32 %149) #3
  br label %163

163:                                              ; preds = %161, %162
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #3
  %164 = add nuw i64 %138, 1
  %165 = icmp eq i64 %164, %100
  br i1 %165, label %166, label %137

166:                                              ; preds = %163, %120, %116
  %167 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  store i64 %41, i64* %167, align 8
  br label %168

168:                                              ; preds = %43, %107, %128, %166
  %169 = phi i64 [ -1, %107 ], [ -1, %128 ], [ %41, %166 ], [ -1, %43 ]
  call void @llvm.stackrestore(i8* %33)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #3
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %23) #3
  ret i64 %169
}

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #3
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)) #3
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #3
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0), i64 44) #3
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #3
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #3
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #3
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage7SendMsgEii(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  store i32 %2, i32* %4, align 4
  %5 = icmp eq i32 %2, -1
  %6 = xor i1 %5, true
  %7 = zext i1 %6 to i64
  %8 = select i1 %5, i32* null, i32* %4
  %9 = call zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage18SendMsgMultipleFdsEiN4base4spanIKiLm18446744073709551615EEE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i32 %1, i64 %7, i32* %8)
  ret i1 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @sendmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage16RecvMsgWithFlagsEiiPN4base13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32, i32, %"class.base::ScopedGeneric"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i64 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage27RecvMsgWithFlagsMultipleFdsEiiN4base4spanINS2_13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEELm18446744073709551615EEE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i32 %1, i32 %2, i64 1, %"class.base::ScopedGeneric"* %3)
  ret i64 %5
}

declare i64 @recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #1

declare i32 @close(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage18AddStringToMessageEPKc(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @strlen(i8* %1) #15
  %4 = add i64 %3, 1
  %5 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %46

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %46

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 1
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 %15) #3
  %17 = extractvalue { i64, i1 } %16, 1
  br i1 %17, label %26, label %18

18:                                               ; preds = %12
  %19 = extractvalue { i64, i1 } %16, 0
  %20 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 4) #3
  %21 = extractvalue { i64, i1 } %20, 1
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = extractvalue { i64, i1 } %20, 0
  %24 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %23, i64 8) #3
  %25 = extractvalue { i64, i1 } %24, 1
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %22, %18, %12
  tail call void @llvm.trap() #3
  unreachable

27:                                               ; preds = %22
  %28 = extractvalue { i64, i1 } %24, 0
  %29 = icmp ugt i64 %28, 4096
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  store i8 1, i8* %9, align 2
  br label %46

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 6
  %33 = bitcast i8** %32 to i32**
  %34 = load i32*, i32** %33, align 8
  store i32 -1111638656, i32* %34, align 1
  %35 = load i8*, i8** %32, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 4
  store i8* %36, i8** %32, align 8
  %37 = bitcast i8* %36 to i64*
  store i64 %4, i64* %37, align 1
  %38 = load i8*, i8** %32, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  store i8* %39, i8** %32, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %1, i64 %4, i1 false) #3
  %40 = load i8*, i8** %32, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %4
  store i8* %41, i8** %32, align 8
  %42 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 0
  %43 = ptrtoint i8* %41 to i64
  %44 = ptrtoint i8* %42 to i64
  %45 = sub i64 %43, %44
  store i64 %45, i64* %14, align 8
  br label %46

46:                                               ; preds = %2, %8, %30, %31
  %47 = phi i1 [ false, %8 ], [ false, %2 ], [ false, %30 ], [ true, %31 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage16AddDataToMessageEPKcm(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %45

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %45

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 1
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %2, i64 %14) #3
  %16 = extractvalue { i64, i1 } %15, 1
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = extractvalue { i64, i1 } %15, 0
  %19 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %18, i64 4) #3
  %20 = extractvalue { i64, i1 } %19, 1
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = extractvalue { i64, i1 } %19, 0
  %23 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %22, i64 8) #3
  %24 = extractvalue { i64, i1 } %23, 1
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %11, %17, %21
  tail call void @llvm.trap() #3
  unreachable

26:                                               ; preds = %21
  %27 = extractvalue { i64, i1 } %23, 0
  %28 = icmp ugt i64 %27, 4096
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  store i8 1, i8* %8, align 2
  br label %45

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 6
  %32 = bitcast i8** %31 to i32**
  %33 = load i32*, i32** %32, align 8
  store i32 -1111638656, i32* %33, align 1
  %34 = load i8*, i8** %31, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 4
  store i8* %35, i8** %31, align 8
  %36 = bitcast i8* %35 to i64*
  store i64 %2, i64* %36, align 1
  %37 = load i8*, i8** %31, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  store i8* %38, i8** %31, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %1, i64 %2, i1 false)
  %39 = load i8*, i8** %31, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %2
  store i8* %40, i8** %31, align 8
  %41 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 0
  %42 = ptrtoint i8* %40 to i64
  %43 = ptrtoint i8* %41 to i64
  %44 = sub i64 %42, %43
  store i64 %44, i64* %13, align 8
  br label %45

45:                                               ; preds = %29, %30, %3, %7
  %46 = phi i1 [ false, %7 ], [ false, %3 ], [ false, %29 ], [ true, %30 ]
  ret i1 %46
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage15AddIntToMessageEi(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %37

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 1
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 4) #3
  %15 = extractvalue { i64, i1 } %14, 1
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = extractvalue { i64, i1 } %14, 0
  %18 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %17, i64 4) #3
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = icmp ugt i64 %20, 4096
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %16, %10
  store i8 1, i8* %7, align 2
  br label %37

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 6
  %26 = bitcast i8** %25 to i32**
  %27 = load i32*, i32** %26, align 8
  store i32 -1111638655, i32* %27, align 1
  %28 = load i8*, i8** %25, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  store i8* %29, i8** %25, align 8
  %30 = bitcast i8* %29 to i32*
  store i32 %1, i32* %30, align 1
  %31 = load i8*, i8** %25, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 4
  store i8* %32, i8** %25, align 8
  %33 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 0
  %34 = ptrtoint i8* %32 to i64
  %35 = ptrtoint i8* %33 to i64
  %36 = sub i64 %34, %35
  store i64 %36, i64* %12, align 8
  br label %37

37:                                               ; preds = %23, %24, %2, %6
  %38 = phi i1 [ false, %6 ], [ false, %2 ], [ false, %23 ], [ true, %24 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage10ReadStringEPPKc(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i8** nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %45

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %45

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 0
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 5
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 %15
  %17 = icmp ugt i8* %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  store i8 1, i8* %7, align 2
  br label %45

19:                                               ; preds = %10
  %20 = getelementptr inbounds i8, i8* %13, i64 4
  %21 = icmp ugt i8* %20, %16
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = bitcast i8* %13 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = icmp eq i32 %24, -1111638656
  br i1 %25, label %27, label %26

26:                                               ; preds = %22, %19
  store i8 1, i8* %7, align 2
  br label %45

27:                                               ; preds = %22
  store i8* %20, i8** %12, align 8
  %28 = getelementptr inbounds i8, i8* %13, i64 12
  %29 = icmp ugt i8* %28, %16
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  store i8 1, i8* %7, align 2
  br label %45

31:                                               ; preds = %27
  %32 = bitcast i8* %20 to i64*
  %33 = load i64, i64* %32, align 1
  store i8* %28, i8** %12, align 8
  %34 = getelementptr inbounds i8, i8* %28, i64 %33
  %35 = icmp ugt i8* %34, %16
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  store i8 1, i8* %7, align 2
  br label %45

37:                                               ; preds = %31
  store i8* %28, i8** %1, align 8
  %38 = load i8*, i8** %12, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %33
  store i8* %39, i8** %12, align 8
  %40 = load i8*, i8** %1, align 8
  %41 = add i64 %33, -1
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br label %45

45:                                               ; preds = %2, %6, %26, %36, %30, %18, %37
  %46 = phi i1 [ %44, %37 ], [ false, %18 ], [ false, %30 ], [ false, %36 ], [ false, %26 ], [ false, %6 ], [ false, %2 ]
  ret i1 %46
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage8ReadDataEPPKcPm(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i8** nocapture, i64* nocapture) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %47

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %47

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 0
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 5
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 %16
  %18 = icmp ugt i8* %14, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %11
  store i8 1, i8* %8, align 2
  br label %47

20:                                               ; preds = %11
  %21 = getelementptr inbounds i8, i8* %14, i64 4
  %22 = icmp ugt i8* %21, %17
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = bitcast i8* %14 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = icmp eq i32 %25, -1111638656
  br i1 %26, label %28, label %27

27:                                               ; preds = %20, %23
  store i8 1, i8* %8, align 2
  br label %47

28:                                               ; preds = %23
  store i8* %21, i8** %13, align 8
  %29 = getelementptr inbounds i8, i8* %14, i64 12
  %30 = icmp ugt i8* %29, %17
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  store i8 1, i8* %8, align 2
  br label %47

32:                                               ; preds = %28
  %33 = bitcast i8* %21 to i64*
  %34 = load i64, i64* %33, align 1
  store i64 %34, i64* %2, align 8
  %35 = load i8*, i8** %13, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 8
  store i8* %36, i8** %13, align 8
  %37 = load i64, i64* %2, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load i64, i64* %15, align 8
  %40 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 %39
  %41 = icmp ugt i8* %38, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %32
  store i8 1, i8* %8, align 2
  br label %47

43:                                               ; preds = %32
  store i8* %36, i8** %1, align 8
  %44 = load i8*, i8** %13, align 8
  %45 = load i64, i64* %2, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  store i8* %46, i8** %13, align 8
  br label %47

47:                                               ; preds = %3, %7, %43, %42, %31, %27, %19
  %48 = phi i1 [ false, %19 ], [ false, %31 ], [ false, %42 ], [ true, %43 ], [ false, %27 ], [ false, %7 ], [ false, %3 ]
  ret i1 %48
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage12ValidateTypeENS1_9EntryTypeE(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 5
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 %7
  %9 = icmp ugt i8* %5, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast i8* %4 to i32*
  %12 = load i32, i32* %11, align 1
  %13 = icmp eq i32 %12, %1
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i8* %5, i8** %3, align 8
  br label %15

15:                                               ; preds = %14, %10, %2
  %16 = phi i1 [ false, %2 ], [ true, %14 ], [ false, %10 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker19BrokerSimpleMessage7ReadIntEPi(%"class.sandbox::syscall_broker::BrokerSimpleMessage"*, i32* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %36

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 0
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 5
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerSimpleMessage", %"class.sandbox::syscall_broker::BrokerSimpleMessage"* %0, i64 0, i32 4, i64 %15
  %17 = icmp ugt i8* %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  store i8 1, i8* %7, align 2
  br label %36

19:                                               ; preds = %10
  %20 = getelementptr inbounds i8, i8* %13, i64 4
  %21 = icmp ugt i8* %20, %16
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = bitcast i8* %13 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = icmp eq i32 %24, -1111638655
  br i1 %25, label %27, label %26

26:                                               ; preds = %19, %22
  store i8 1, i8* %7, align 2
  br label %36

27:                                               ; preds = %22
  store i8* %20, i8** %12, align 8
  %28 = getelementptr inbounds i8, i8* %13, i64 8
  %29 = icmp ugt i8* %28, %16
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  store i8 1, i8* %7, align 2
  br label %36

31:                                               ; preds = %27
  %32 = bitcast i8* %20 to i32*
  %33 = load i32, i32* %32, align 1
  store i32 %33, i32* %1, align 4
  %34 = load i8*, i8** %12, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 4
  store i8* %35, i8** %12, align 8
  br label %36

36:                                               ; preds = %2, %6, %31, %30, %26, %18
  %37 = phi i1 [ false, %18 ], [ false, %30 ], [ true, %31 ], [ false, %26 ], [ false, %6 ], [ false, %2 ]
  ret i1 %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #3
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #3
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #3
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #3
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #3
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #3
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #3
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #3
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #3
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #3
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #3
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #3
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #3
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #3
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
