; ModuleID = '../../content/renderer/pepper/pepper_proxy_channel_delegate_impl.cc'
source_filename = "../../content/renderer/pepper/pepper_proxy_channel_delegate_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::PepperProxyChannelDelegateImpl" = type { %"class.ppapi::proxy::ProxyChannel::Delegate" }
%"class.ppapi::proxy::ProxyChannel::Delegate" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.content::ChildProcess" = type <{ i32 (...)**, i32, [4 x i8], %"class.base::WaitableEvent", %"class.base::Thread", %"class.std::__1::unique_ptr.31", i8, [7 x i8] }>
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::Thread" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.18, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.11", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.13" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.18 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.20", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.content::ChildThreadImpl"* }
%"class.content::ChildThreadImpl" = type opaque
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }

@_ZTVN7content30PepperProxyChannelDelegateImplE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::PepperProxyChannelDelegateImpl"*)* @_ZN7content30PepperProxyChannelDelegateImplD2Ev to i8*), i8* bitcast (void (%"class.content::PepperProxyChannelDelegateImpl"*)* @_ZN7content30PepperProxyChannelDelegateImplD0Ev to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.content::PepperProxyChannelDelegateImpl"*)* @_ZN7content30PepperProxyChannelDelegateImpl16GetIPCTaskRunnerEv to i8*), i8* bitcast (%"class.base::WaitableEvent"* (%"class.content::PepperProxyChannelDelegateImpl"*)* @_ZN7content30PepperProxyChannelDelegateImpl16GetShutdownEventEv to i8*), i8* bitcast (i64 (%"class.content::PepperProxyChannelDelegateImpl"*, i32, i32, i1)* @_ZN7content30PepperProxyChannelDelegateImpl21ShareHandleWithRemoteEiib to i8*), i8* bitcast (void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.content::PepperProxyChannelDelegateImpl"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)* @_ZN7content30PepperProxyChannelDelegateImpl39ShareUnsafeSharedMemoryRegionWithRemoteERKN4base24UnsafeSharedMemoryRegionEi to i8*), i8* bitcast (void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.content::PepperProxyChannelDelegateImpl"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)* @_ZN7content30PepperProxyChannelDelegateImpl41ShareReadOnlySharedMemoryRegionWithRemoteERKN4base26ReadOnlySharedMemoryRegionEi to i8*)] }, align 8

@_ZN7content30PepperProxyChannelDelegateImplD1Ev = hidden unnamed_addr alias void (%"class.content::PepperProxyChannelDelegateImpl"*), void (%"class.content::PepperProxyChannelDelegateImpl"*)* @_ZN7content30PepperProxyChannelDelegateImplD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content30PepperProxyChannelDelegateImplD2Ev(%"class.content::PepperProxyChannelDelegateImpl"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30PepperProxyChannelDelegateImplD0Ev(%"class.content::PepperProxyChannelDelegateImpl"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.content::PepperProxyChannelDelegateImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN7content30PepperProxyChannelDelegateImpl16GetIPCTaskRunnerEv(%"class.content::PepperProxyChannelDelegateImpl"* nocapture readnone) unnamed_addr #1 align 2 {
  %2 = tail call %"class.content::ChildProcess"* @_ZN7content12ChildProcess7currentEv() #5
  %3 = getelementptr inbounds %"class.content::ChildProcess", %"class.content::ChildProcess"* %2, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.base::Thread::Delegate"*, %"class.base::Thread::Delegate"** %3, align 8
  %5 = icmp eq %"class.base::Thread::Delegate"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::Thread::Delegate"* %4 to %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)***
  %8 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %8, i64 2
  %10 = load %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.base::Thread::Delegate"*)** %9, align 8
  %11 = tail call %"class.base::SingleThreadTaskRunner"* %10(%"class.base::Thread::Delegate"* nonnull %4) #5
  %12 = icmp eq %"class.base::SingleThreadTaskRunner"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %11, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %14, i64 -2
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %19 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %20) #5
  br label %21

21:                                               ; preds = %1, %6, %13, %18
  %22 = phi %"class.base::SingleThreadTaskRunner"* [ null, %6 ], [ %11, %13 ], [ %11, %18 ], [ null, %1 ]
  ret %"class.base::SingleThreadTaskRunner"* %22
}

declare %"class.content::ChildProcess"* @_ZN7content12ChildProcess7currentEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::WaitableEvent"* @_ZN7content30PepperProxyChannelDelegateImpl16GetShutdownEventEv(%"class.content::PepperProxyChannelDelegateImpl"* nocapture readnone) unnamed_addr #1 align 2 {
  %2 = tail call %"class.content::ChildProcess"* @_ZN7content12ChildProcess7currentEv() #5
  %3 = tail call %"class.base::WaitableEvent"* @_ZN7content12ChildProcess16GetShutDownEventEv(%"class.content::ChildProcess"* %2) #5
  ret %"class.base::WaitableEvent"* %3
}

declare %"class.base::WaitableEvent"* @_ZN7content12ChildProcess16GetShutDownEventEv(%"class.content::ChildProcess"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7content30PepperProxyChannelDelegateImpl21ShareHandleWithRemoteEiib(%"class.content::PepperProxyChannelDelegateImpl"* nocapture readnone, i32, i32, i1 zeroext) unnamed_addr #1 align 2 {
  %5 = tail call i64 @_ZN3IPC25GetPlatformFileForTransitEib(i32 %1, i1 zeroext %3) #5
  ret i64 %5
}

declare i64 @_ZN3IPC25GetPlatformFileForTransitEib(i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30PepperProxyChannelDelegateImpl39ShareUnsafeSharedMemoryRegionWithRemoteERKN4base24UnsafeSharedMemoryRegionEi(%"class.base::UnsafeSharedMemoryRegion"* noalias sret, %"class.content::PepperProxyChannelDelegateImpl"* nocapture readnone, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64), i32) unnamed_addr #1 align 2 {
  tail call void @_ZNK4base24UnsafeSharedMemoryRegion9DuplicateEv(%"class.base::UnsafeSharedMemoryRegion"* sret %0, %"class.base::UnsafeSharedMemoryRegion"* %2) #5
  ret void
}

declare void @_ZNK4base24UnsafeSharedMemoryRegion9DuplicateEv(%"class.base::UnsafeSharedMemoryRegion"* sret, %"class.base::UnsafeSharedMemoryRegion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30PepperProxyChannelDelegateImpl41ShareReadOnlySharedMemoryRegionWithRemoteERKN4base26ReadOnlySharedMemoryRegionEi(%"class.base::ReadOnlySharedMemoryRegion"* noalias sret, %"class.content::PepperProxyChannelDelegateImpl"* nocapture readnone, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64), i32) unnamed_addr #1 align 2 {
  tail call void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* sret %0, %"class.base::ReadOnlySharedMemoryRegion"* %2) #5
  ret void
}

declare void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* sret, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
