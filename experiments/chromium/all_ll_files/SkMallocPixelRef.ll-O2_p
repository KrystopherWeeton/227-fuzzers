; ModuleID = '../../third_party/skia/src/core/SkMallocPixelRef.cpp'
source_filename = "../../third_party/skia/src/core/SkMallocPixelRef.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.6 = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.7", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.12", i8, [6 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.12", [3 x i8] }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.PixelRef = type { %class.SkPixelRef.base, [6 x i8] }
%class.SkPixelRef.base = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.7", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.12", i8 }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkDiscardableMemory = type opaque
%struct.PixelRef.18 = type { %class.SkPixelRef.base, %class.sk_sp.16 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv = comdat any

@_ZTVZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomE8PixelRef = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%struct.PixelRef*)* @_ZZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomEN8PixelRefD2Ev to i8*), i8* bitcast (void (%struct.PixelRef*)* @_ZZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomEN8PixelRefD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%class.SkPixelRef*)* @_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv to i8*)] }, align 8
@_ZTVZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEE8PixelRef = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%struct.PixelRef.18*)* @_ZZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEEN8PixelRefD2Ev to i8*), i8* bitcast (void (%struct.PixelRef.18*)* @_ZZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEEN8PixelRefD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.SkDiscardableMemory* (%class.SkPixelRef*)* @_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp.6* noalias nocapture sret, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %10 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %9) #6
  %11 = sext i32 %10 to i64
  %12 = mul nsw i64 %11, %8
  %13 = icmp ult i64 %12, 2147483648
  %14 = select i1 %13, i64 %12, i64 0
  br label %15

15:                                               ; preds = %5, %3
  %16 = phi i64 [ %14, %5 ], [ %2, %3 ]
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %45, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ugt i32 %26, 20
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp ult i32 %30, 4
  br i1 %31, label %32, label %45

32:                                               ; preds = %28
  %33 = sext i32 %18 to i64
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %35 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %34) #6
  %36 = sext i32 %35 to i64
  %37 = mul nsw i64 %36, %33
  %38 = icmp ugt i64 %37, %16
  br i1 %38, label %45, label %39

39:                                               ; preds = %32
  %40 = tail call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %34) #6
  %41 = zext i32 %40 to i64
  %42 = shl i64 -1, %41
  %43 = and i64 %42, %16
  %44 = icmp eq i64 %43, %16
  br i1 %44, label %47, label %45

45:                                               ; preds = %32, %15, %20, %24, %39, %28
  %46 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkPixelRef* null, %class.SkPixelRef** %46, align 8
  br label %64

47:                                               ; preds = %39
  %48 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %1, i64 %16) #6
  %49 = icmp eq i64 %48, -1
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkPixelRef* null, %class.SkPixelRef** %51, align 8
  br label %64

52:                                               ; preds = %47
  %53 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %48, i32 1) #6
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkPixelRef* null, %class.SkPixelRef** %56, align 8
  br label %64

57:                                               ; preds = %52
  %58 = tail call i8* @_Znwm(i64 88) #7
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %21, align 4
  %61 = bitcast i8* %58 to %class.SkPixelRef*
  tail call void @_ZN10SkPixelRefC2EiiPvm(%class.SkPixelRef* nonnull %61, i32 %59, i32 %60, i8* nonnull %53, i64 %16) #6
  %62 = bitcast i8* %58 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomE8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = bitcast %class.sk_sp.6* %0 to i8**
  store i8* %58, i8** %63, align 8
  br label %64

64:                                               ; preds = %50, %57, %55, %45
  ret void
}

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataE(%class.sk_sp.6* noalias nocapture sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.sk_sp.16* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ugt i32 %14, 20
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ult i32 %18, 4
  br i1 %19, label %22, label %20

20:                                               ; preds = %4, %8, %12, %16
  %21 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkPixelRef* null, %class.SkPixelRef** %21, align 8
  br label %54

22:                                               ; preds = %16
  %23 = sext i32 %6 to i64
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %25 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %24) #6
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %26, %23
  %28 = icmp ult i64 %27, 2147483648
  %29 = select i1 %28, i64 %27, i64 0
  %30 = icmp ugt i64 %29, %2
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %3, i64 0, i32 0
  %33 = load %class.SkData*, %class.SkData** %32, align 8
  %34 = getelementptr inbounds %class.SkData, %class.SkData* %33, i64 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %1, i64 %2) #6
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %31, %22
  %39 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkPixelRef* null, %class.SkPixelRef** %39, align 8
  br label %54

40:                                               ; preds = %31
  %41 = load %class.SkData*, %class.SkData** %32, align 8
  %42 = getelementptr inbounds %class.SkData, %class.SkData* %41, i64 0, i32 3
  %43 = load i8*, i8** %42, align 8
  %44 = tail call i8* @_Znwm(i64 96) #7
  %45 = load i32, i32* %5, align 4
  %46 = load i32, i32* %9, align 4
  %47 = ptrtoint %class.SkData* %41 to i64
  store %class.SkData* null, %class.SkData** %32, align 8
  %48 = bitcast i8* %44 to %class.SkPixelRef*
  tail call void @_ZN10SkPixelRefC2EiiPvm(%class.SkPixelRef* nonnull %48, i32 %45, i32 %46, i8* %43, i64 %2) #6
  %49 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEE8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds i8, i8* %44, i64 88
  %51 = bitcast i8* %50 to i64*
  store i64 %47, i64* %51, align 8
  %52 = ptrtoint i8* %44 to i64
  tail call void @_ZN10SkPixelRef12setImmutableEv(%class.SkPixelRef* nonnull %48) #6
  %53 = bitcast %class.sk_sp.6* %0 to i64*
  store i64 %52, i64* %53, align 8
  br label %54

54:                                               ; preds = %40, %38, %20
  ret void
}

declare void @_ZN10SkPixelRef12setImmutableEv(%class.SkPixelRef*) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #1

declare void @_ZN10SkPixelRefC2EiiPvm(%class.SkPixelRef*, i32, i32, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomEN8PixelRefD2Ev(%struct.PixelRef*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomE8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %struct.PixelRef* %0 to %class.SkPixelRef*
  %4 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 4
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #6
  tail call void @_ZN10SkPixelRefD2Ev(%class.SkPixelRef* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomEN8PixelRefD0Ev(%struct.PixelRef*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfomE8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %struct.PixelRef* %0 to %class.SkPixelRef*
  %4 = getelementptr inbounds %struct.PixelRef, %struct.PixelRef* %0, i64 0, i32 0, i32 4
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #6
  tail call void @_ZN10SkPixelRefD2Ev(%class.SkPixelRef* %3) #6
  %6 = bitcast %struct.PixelRef* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #6
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkDiscardableMemory* @_ZNK10SkPixelRef30diagnostic_only_getDiscardableEv(%class.SkPixelRef*) unnamed_addr #0 comdat align 2 {
  ret %class.SkDiscardableMemory* null
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10SkPixelRefD2Ev(%class.SkPixelRef*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEEN8PixelRefD2Ev(%struct.PixelRef.18*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %struct.PixelRef.18, %struct.PixelRef.18* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEE8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.PixelRef.18, %struct.PixelRef.18* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #6
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #6
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %struct.PixelRef.18* %0 to %class.SkPixelRef*
  tail call void @_ZN10SkPixelRefD2Ev(%class.SkPixelRef* %13) #6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEEN8PixelRefD0Ev(%struct.PixelRef.18*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %struct.PixelRef.18, %struct.PixelRef.18* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVZN16SkMallocPixelRef12MakeWithDataERK11SkImageInfom5sk_spI6SkDataEE8PixelRef, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.PixelRef.18, %struct.PixelRef.18* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #6
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #6
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %struct.PixelRef.18* %0 to %class.SkPixelRef*
  tail call void @_ZN10SkPixelRefD2Ev(%class.SkPixelRef* %13) #6
  %14 = bitcast %struct.PixelRef.18* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
