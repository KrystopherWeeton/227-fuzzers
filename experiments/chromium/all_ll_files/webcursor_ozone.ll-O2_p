; ModuleID = '../../content/common/cursors/webcursor_ozone.cc'
source_filename = "../../content/common/cursors/webcursor_ozone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::WebCursor" = type { %"class.ui::Cursor", float, i32, %"class.gfx::Size", %"class.absl::optional" }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::Point" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.ui::Cursor" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional.8", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.13" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content9WebCursor14SetDisplayInfoERKN7display7DisplayE(%"class.content::WebCursor"*, %"class.display::Display"* nocapture readonly dereferenceable(568)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %8, align 4
  %12 = select i1 %7, i32 %10, i32 %11
  %13 = icmp eq i32 %4, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 4
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 8
  br label %37

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 1
  %20 = load float, float* %19, align 8
  %21 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 4
  %22 = load float, float* %21, align 8
  %23 = fcmp oeq float %20, %22
  %24 = bitcast float %22 to i32
  br i1 %23, label %25, label %37

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 3, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 9, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 3, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 9, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %51, label %37

37:                                               ; preds = %14, %25, %31, %18
  %38 = phi i32 [ %17, %14 ], [ %24, %25 ], [ %24, %31 ], [ %24, %18 ]
  %39 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 1
  %40 = bitcast float* %39 to i32*
  store i32 %38, i32* %40, align 8
  %41 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 9
  %42 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 3
  %43 = bitcast %"class.gfx::Size"* %41 to i64*
  %44 = bitcast %"class.gfx::Size"* %42 to i64*
  %45 = load i64, i64* %43, align 4
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %46, 0
  %48 = icmp ult i64 %45, 4294967296
  %49 = or i1 %47, %48
  %50 = select i1 %49, i64 274877907008, i64 %45
  store i64 %50, i64* %44, align 8
  tail call void @_ZN7content9WebCursor19CleanupPlatformDataEv(%"class.content::WebCursor"* %0) #4
  br label %51

51:                                               ; preds = %31, %37
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7content9WebCursor19CleanupPlatformDataEv(%"class.content::WebCursor"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZN7content9WebCursor20GetCursorScaleFactorEP8SkBitmap(%"class.content::WebCursor"* nocapture readonly, %class.SkBitmap* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca [3 x float], align 4
  %4 = bitcast [3 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #4
  %5 = getelementptr inbounds [3 x float], [3 x float]* %3, i64 0, i64 0
  %6 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 1
  %7 = load float, float* %6, align 8
  %8 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 0, i32 2
  %9 = load float, float* %8, align 8
  %10 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = insertelement <2 x float> undef, float %12, i32 0
  %17 = insertelement <2 x float> %16, float %7, i32 1
  %18 = insertelement <2 x float> undef, float %15, i32 0
  %19 = insertelement <2 x float> %18, float %9, i32 1
  %20 = fdiv <2 x float> %17, %19
  %21 = extractelement <2 x float> %20, i32 1
  store float %21, float* %5, align 4
  %22 = getelementptr inbounds [3 x float], [3 x float]* %3, i64 0, i64 1
  %23 = extractelement <2 x float> %20, i32 0
  store float %23, float* %22, align 4
  %24 = getelementptr inbounds [3 x float], [3 x float]* %3, i64 0, i64 2
  %25 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 3, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sitofp i32 %26 to float
  %28 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  %31 = fdiv float %27, %30
  store float %31, float* %24, align 4
  %32 = fcmp olt float %23, %21
  %33 = load float, float* %22, align 4
  %34 = load float, float* %5, align 4
  %35 = select i1 %32, float %33, float %34
  %36 = fcmp olt float %31, %35
  %37 = select i1 %36, float %31, float %35
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #4
  ret float %37
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
