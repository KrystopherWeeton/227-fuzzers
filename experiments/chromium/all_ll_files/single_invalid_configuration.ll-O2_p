; ModuleID = '../../components/feature_engagement/internal/single_invalid_configuration.cc'
source_filename = "../../components/feature_engagement/internal/single_invalid_configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.feature_engagement::SingleInvalidConfiguration" = type { %"class.feature_engagement::Configuration", %"struct.feature_engagement::FeatureConfig", %"class.std::__1::map" }
%"class.feature_engagement::Configuration" = type { i32 (...)** }
%"struct.feature_engagement::FeatureConfig" = type <{ i8, [7 x i8], %"struct.feature_engagement::EventConfig", %"struct.feature_engagement::EventConfig", %"class.std::__1::set", %"struct.feature_engagement::Comparator", %"struct.feature_engagement::SessionRateImpact", %"struct.feature_engagement::Comparator", i8, [7 x i8] }>
%"struct.feature_engagement::EventConfig" = type { %"class.std::__1::basic_string", %"struct.feature_engagement::Comparator", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"struct.feature_engagement::SessionRateImpact" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string"* }
%"struct.feature_engagement::Comparator" = type { i32, i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"struct.feature_engagement::FeatureConfig" }
%"struct.base::Feature" = type opaque

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN18feature_engagement13FeatureConfigEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

@_ZTVN18feature_engagement26SingleInvalidConfigurationE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.feature_engagement::SingleInvalidConfiguration"*)* @_ZN18feature_engagement26SingleInvalidConfigurationD2Ev to i8*), i8* bitcast (void (%"class.feature_engagement::SingleInvalidConfiguration"*)* @_ZN18feature_engagement26SingleInvalidConfigurationD0Ev to i8*), i8* bitcast (%"struct.feature_engagement::FeatureConfig"* (%"class.feature_engagement::SingleInvalidConfiguration"*, %"struct.base::Feature"*)* @_ZNK18feature_engagement26SingleInvalidConfiguration16GetFeatureConfigERKN4base7FeatureE to i8*), i8* bitcast (%"struct.feature_engagement::FeatureConfig"* (%"class.feature_engagement::SingleInvalidConfiguration"*, %"class.std::__1::basic_string"*)* @_ZNK18feature_engagement26SingleInvalidConfiguration22GetFeatureConfigByNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::map"* (%"class.feature_engagement::SingleInvalidConfiguration"*)* @_ZNK18feature_engagement26SingleInvalidConfiguration27GetRegisteredFeatureConfigsEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.feature_engagement::SingleInvalidConfiguration"*)* @_ZNK18feature_engagement26SingleInvalidConfiguration21GetRegisteredFeaturesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [20 x i8] c"nothing_to_see_here\00", align 1

@_ZN18feature_engagement26SingleInvalidConfigurationC1Ev = hidden unnamed_addr alias void (%"class.feature_engagement::SingleInvalidConfiguration"*), void (%"class.feature_engagement::SingleInvalidConfiguration"*)* @_ZN18feature_engagement26SingleInvalidConfigurationC2Ev
@_ZN18feature_engagement26SingleInvalidConfigurationD1Ev = hidden unnamed_addr alias void (%"class.feature_engagement::SingleInvalidConfiguration"*), void (%"class.feature_engagement::SingleInvalidConfiguration"*)* @_ZN18feature_engagement26SingleInvalidConfigurationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18feature_engagement26SingleInvalidConfigurationC2Ev(%"class.feature_engagement::SingleInvalidConfiguration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN18feature_engagement26SingleInvalidConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 1
  tail call void @_ZN18feature_engagement13FeatureConfigC1Ev(%"struct.feature_engagement::FeatureConfig"* %3) #6
  %4 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"struct.feature_engagement::FeatureConfig", %"struct.feature_engagement::FeatureConfig"* %3, i64 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 1, i32 2, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 19, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br label %20

18:                                               ; preds = %1
  store i8 19, i8* %11, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i8* [ %17, %14 ], [ %19, %18 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19, i1 false) #6
  %22 = getelementptr inbounds i8, i8* %21, i64 19
  store i8 0, i8* %22, align 1
  ret void
}

declare void @_ZN18feature_engagement13FeatureConfigC1Ev(%"struct.feature_engagement::FeatureConfig"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18feature_engagement26SingleInvalidConfigurationD2Ev(%"class.feature_engagement::SingleInvalidConfiguration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN18feature_engagement26SingleInvalidConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN18feature_engagement13FeatureConfigEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.15"* %3, %"class.std::__1::__tree_node"* %6) #6
  %7 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 1
  tail call void @_ZN18feature_engagement13FeatureConfigD1Ev(%"struct.feature_engagement::FeatureConfig"* %7) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN18feature_engagement13FeatureConfigD1Ev(%"struct.feature_engagement::FeatureConfig"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18feature_engagement26SingleInvalidConfigurationD0Ev(%"class.feature_engagement::SingleInvalidConfiguration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN18feature_engagement26SingleInvalidConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN18feature_engagement13FeatureConfigEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.15"* %3, %"class.std::__1::__tree_node"* %6) #6
  %7 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 1
  tail call void @_ZN18feature_engagement13FeatureConfigD1Ev(%"struct.feature_engagement::FeatureConfig"* %7) #6
  %8 = bitcast %"class.feature_engagement::SingleInvalidConfiguration"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(176) %"struct.feature_engagement::FeatureConfig"* @_ZNK18feature_engagement26SingleInvalidConfiguration16GetFeatureConfigERKN4base7FeatureE(%"class.feature_engagement::SingleInvalidConfiguration"* readnone, %"struct.base::Feature"* nocapture readnone) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 1
  ret %"struct.feature_engagement::FeatureConfig"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(176) %"struct.feature_engagement::FeatureConfig"* @_ZNK18feature_engagement26SingleInvalidConfiguration22GetFeatureConfigByNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.feature_engagement::SingleInvalidConfiguration"* readnone, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 1
  ret %"struct.feature_engagement::FeatureConfig"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::map"* @_ZNK18feature_engagement26SingleInvalidConfiguration27GetRegisteredFeatureConfigsEv(%"class.feature_engagement::SingleInvalidConfiguration"* readnone) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.feature_engagement::SingleInvalidConfiguration", %"class.feature_engagement::SingleInvalidConfiguration"* %0, i64 0, i32 2
  ret %"class.std::__1::map"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18feature_engagement26SingleInvalidConfiguration21GetRegisteredFeaturesEv(%"class.std::__1::vector"* noalias nocapture sret, %"class.feature_engagement::SingleInvalidConfiguration"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN18feature_engagement13FeatureConfigEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.15"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN18feature_engagement13FeatureConfigEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.15"* %0, %"class.std::__1::__tree_node"* %6) #6
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN18feature_engagement13FeatureConfigEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.15"* %0, %"class.std::__1::__tree_node"* %9) #6
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN18feature_engagement13FeatureConfigD1Ev(%"struct.feature_engagement::FeatureConfig"* %11) #6
  %12 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %4, %16
  %20 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
