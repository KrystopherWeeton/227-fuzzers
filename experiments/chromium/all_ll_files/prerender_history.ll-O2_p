; ModuleID = '../../components/no_state_prefetch/browser/prerender_history.cc'
source_filename = "../../components/no_state_prefetch/browser/prerender_history.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.prerender::PrerenderHistory" = type { %"class.std::__1::list", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GURL* }
%"struct.prerender::PrerenderHistory::Entry" = type { %class.GURL, i32, i32, %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.prerender::PrerenderHistory::Entry" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"final_status\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"end_time\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN9prerender16PrerenderHistoryC1Em = hidden unnamed_addr alias void (%"class.prerender::PrerenderHistory"*, i64), void (%"class.prerender::PrerenderHistory"*, i64)* @_ZN9prerender16PrerenderHistoryC2Em
@_ZN9prerender16PrerenderHistoryD1Ev = hidden unnamed_addr alias void (%"class.prerender::PrerenderHistory"*), void (%"class.prerender::PrerenderHistory"*)* @_ZN9prerender16PrerenderHistoryD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9prerender16PrerenderHistoryC2Em(%"class.prerender::PrerenderHistory"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %3, %"struct.std::__1::__list_node_base"** %4, align 8
  %5 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %3, %"struct.std::__1::__list_node_base"** %5, align 8
  %6 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 1
  store i64 %1, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9prerender16PrerenderHistoryD2Ev(%"class.prerender::PrerenderHistory"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %12 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %15 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %19, i64* %21, align 8
  store i64 0, i64* %2, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %22, label %31, label %23

23:                                               ; preds = %5, %23
  %24 = phi %"struct.std::__1::__list_node_base"* [ %26, %23 ], [ %7, %5 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 1
  %28 = bitcast %"struct.std::__1::__list_node_base"* %27 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %28) #8
  %29 = bitcast %"struct.std::__1::__list_node_base"* %24 to i8*
  tail call void @_ZdlPv(i8* %29) #9
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %26, %8
  br i1 %30, label %31, label %23

31:                                               ; preds = %23, %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9prerender16PrerenderHistory8AddEntryERKNS0_5EntryE(%"class.prerender::PrerenderHistory"*, %"struct.prerender::PrerenderHistory::Entry"* dereferenceable(136)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %31, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %10

10:                                               ; preds = %8, %10
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 1
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64**
  %22 = load i64*, i64** %21, align 8
  store i64 %20, i64* %22, align 8
  %23 = load i64, i64* %3, align 8
  %24 = add i64 %23, -1
  store i64 %24, i64* %3, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %11, i64 1
  %26 = bitcast %"struct.std::__1::__list_node_base"* %25 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %26) #8
  %27 = bitcast %"struct.std::__1::__list_node_base"* %11 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  %28 = load i64, i64* %3, align 8
  %29 = load i64, i64* %5, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %10

31:                                               ; preds = %10, %2
  %32 = tail call i8* @_Znwm(i64 152) #9, !noalias !2
  %33 = bitcast i8* %32 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %33, align 8, !noalias !2
  %34 = getelementptr inbounds i8, i8* %32, i64 16
  %35 = bitcast i8* %34 to %class.GURL*
  %36 = getelementptr inbounds %"struct.prerender::PrerenderHistory::Entry", %"struct.prerender::PrerenderHistory::Entry"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %35, %class.GURL* dereferenceable(120) %36) #8
  %37 = getelementptr inbounds i8, i8* %32, i64 136
  %38 = getelementptr inbounds %"struct.prerender::PrerenderHistory::Entry", %"struct.prerender::PrerenderHistory::Entry"* %1, i64 0, i32 1
  %39 = bitcast i32* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %39, i64 16, i1 false) #8
  %40 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds i8, i8* %32, i64 8
  %42 = bitcast i8* %41 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %40, %"struct.std::__1::__list_node_base"** %42, align 8
  %43 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %43, align 8
  store %"struct.std::__1::__list_node_base"* %44, %"struct.std::__1::__list_node_base"** %33, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i8**
  store i8* %32, i8** %46, align 8
  %47 = bitcast %"class.prerender::PrerenderHistory"* %0 to i8**
  store i8* %32, i8** %47, align 8
  %48 = load i64, i64* %3, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9prerender16PrerenderHistory5ClearEv(%"class.prerender::PrerenderHistory"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 1
  %12 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %7, i64 0, i32 0
  %15 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %15, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  store i64 %13, i64* %17, align 8
  %18 = bitcast %"struct.std::__1::__list_node_base"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64**
  %21 = load i64*, i64** %20, align 8
  store i64 %19, i64* %21, align 8
  store i64 0, i64* %2, align 8
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %22, label %31, label %23

23:                                               ; preds = %5, %23
  %24 = phi %"struct.std::__1::__list_node_base"* [ %26, %23 ], [ %7, %5 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 1
  %28 = bitcast %"struct.std::__1::__list_node_base"* %27 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %28) #8
  %29 = bitcast %"struct.std::__1::__list_node_base"* %24 to i8*
  tail call void @_ZdlPv(i8* %29) #9
  %30 = icmp eq %"struct.std::__1::__list_node_base"* %26, %8
  br i1 %30, label %31, label %23

31:                                               ; preds = %23, %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK9prerender16PrerenderHistory18CopyEntriesAsValueEv(%"class.prerender::PrerenderHistory"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = tail call i8* @_Znwm(i64 32) #9
  %7 = bitcast i8* %6 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %7) #8
  %8 = tail call i64 @_ZN4base4Time9UnixEpochEv() #8
  %9 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.prerender::PrerenderHistory", %"class.prerender::PrerenderHistory"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"struct.std::__1::__list_node_base"* %10, %11
  br i1 %12, label %24, label %13

13:                                               ; preds = %1
  %14 = ptrtoint %"class.prerender::PrerenderHistory"* %0 to i64
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = bitcast %"class.base::TimeDelta"* %5 to i8*
  %19 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %26

24:                                               ; preds = %85, %1
  %25 = bitcast i8* %6 to %"class.base::Value"*
  ret %"class.base::Value"* %25

26:                                               ; preds = %13, %85
  %27 = phi i64 [ %14, %13 ], [ %88, %85 ]
  %28 = inttoptr i64 %27 to %"struct.std::__1::__list_node"**
  %29 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %28, align 8
  %30 = call i8* @_Znwm(i64 32) #9
  %31 = bitcast i8* %30 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %31) #8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 0
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %32) #8
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %41 = select i1 %37, i8* %39, i8* %40
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %36 to i64
  %45 = select i1 %37, i64 %43, i64 %44
  %46 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i8* %41, i64 %45) #8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = call i8* @_ZN9prerender19NameFromFinalStatusENS_11FinalStatusE(i32 %48) #8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %26
  %52 = call i64 @strlen(i8* nonnull %49) #8
  br label %55

53:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #8
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi i64 [ 0, %53 ], [ %52, %51 ]
  %57 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %31, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i8* %49, i64 %56) #8
  %58 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = call i8* @_ZN9prerender14NameFromOriginENS_6OriginE(i32 %59) #8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %55
  %63 = call i64 @strlen(i8* nonnull %60) #8
  br label %66

64:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #8
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi i64 [ 0, %64 ], [ %63, %62 ]
  %68 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6, i8* %60, i64 %67) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %69 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %29, i64 0, i32 1, i32 3, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = sub nsw i64 %70, %8
  store i64 %71, i64* %19, align 8
  %72 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %5) #8
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %4, i64 %72) #8
  %73 = load i8, i8* %21, align 1
  %74 = icmp slt i8 %73, 0
  %75 = load i8*, i8** %22, align 8
  %76 = select i1 %74, i8* %75, i8* %17
  %77 = load i64, i64* %23, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8, i8* %76, i64 %79) #8
  %81 = load i8, i8* %21, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %66
  %84 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %83, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  %86 = bitcast i8* %30 to %"class.base::Value"*
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %7, %"class.base::Value"* nonnull %86) #8
  %87 = inttoptr i64 %27 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %90 = inttoptr i64 %88 to %"struct.std::__1::__list_node_base"*
  %91 = icmp eq %"struct.std::__1::__list_node_base"* %89, %90
  br i1 %91, label %24, label %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #3

declare i8* @_ZN9prerender19NameFromFinalStatusENS_11FinalStatusE(i32) local_unnamed_addr #3

declare i8* @_ZN9prerender14NameFromOriginENS_6OriginE(i32) local_unnamed_addr #3

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #3

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__14listIN9prerender16PrerenderHistory5EntryENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__14listIN9prerender16PrerenderHistory5EntryENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
