; ModuleID = '../../third_party/blink/renderer/core/exported/web_searchable_form_data.cc'
source_filename = "../../third_party/blink/renderer/core/exported/web_searchable_form_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.146", i32, [4 x i8], %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.282", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.298", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.323", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.262", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i64 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.182" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.242", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.256", [4 x i8] }>
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244", %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { i64 }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { float }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.265", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.290" }
%"class.WTF::VectorBuffer.290" = type { %"class.WTF::VectorBufferBase.291" }
%"class.WTF::VectorBufferBase.291" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.304" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.193"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.200"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.221"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.554" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.323" = type { %"struct.std::__1::__atomic_base.324" }
%"struct.std::__1::__atomic_base.324" = type { %"struct.std::__1::__cxx_atomic_impl.325" }
%"struct.std::__1::__cxx_atomic_impl.325" = type { %"struct.std::__1::__cxx_atomic_base_impl.326" }
%"struct.std::__1::__cxx_atomic_base_impl.326" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WebSearchableFormData" = type { %"class.blink::WebURL", %"class.blink::WebString" }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebFormElement" = type { %"class.blink::WebElement" }
%"class.blink::WebElement" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebInputElement" = type { %"class.blink::WebFormControlElement" }
%"class.blink::WebFormControlElement" = type { %"class.blink::WebElement" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.725 }
%union.anon.725 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::OptionListIterator" = type { %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* }
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.680", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.704", %"class.blink::Member.704", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.708", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::Member.1", %"class.blink::Member.50", %"class.blink::Member.50", %"class.blink::Member.71", %"class.blink::Member.73", %"class.blink::Member.75", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.77", %"class.blink::HeapVector.79" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.95", %"class.WTF::Vector.95", i8, i32, %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::Member.116", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.119", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.125", %"class.blink::Member.127", %"class.blink::Member.85", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.130", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.64", %"class.blink::Member.62", %"class.blink::Member.339", %"class.blink::Member.62", %"class.blink::Member.62", %"class.blink::Member.62", %"class.blink::UserActionElementSet", %"class.blink::Member.348", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.355", i16, i8, %"class.blink::Member.362", %"class.blink::Member.364", %"class.blink::Member.366", %"class.blink::Member.368", %"class.blink::TextLinkColors", %"class.blink::Member.370", i8, [7 x i8], %"class.blink::HeapHashMap.372", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.62", %"class.WTF::Vector.379", %"class.blink::Member.384", %"class.blink::Member.386", i8, %"class.blink::Member.62", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.388", %"class.blink::HeapVector.390", %"class.std::__1::unique_ptr.398", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.404", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.417", %"class.WTF::Vector.419", i8, i8, %"class.std::__1::unique_ptr.424", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.64", %"class.blink::HeapVector.430", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.438", i8, i32, %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.446", %"class.WTF::HashMap.448", %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.48", %"class.blink::Member.48", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.461", i8, i32, %"class.blink::Member.468", %"class.blink::Member.470", i32, %"class.blink::Member.472", %"class.blink::Member.474", %"class.blink::Member.476", %"class.std::__1::unique_ptr.478", i64, %"class.std::__1::unique_ptr.484", i32, i32, %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.496", %"class.WTF::Vector.498", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.503", %"class.blink::Member.510", %"class.std::__1::unique_ptr.512", %"class.blink::Member.518", i8, i8, %"class.WTF::String", %"class.blink::Member.520", i8, [7 x i8], %"class.blink::HeapHashMap.522", %"class.blink::HeapObserverSet", %"class.blink::Member.536", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.538", i32, i8, i8, %"class.blink::WeakMember.540", %"class.blink::Member.541" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.88" }
%"class.blink::HeapHashMap.88" = type { %"class.WTF::HashMap.91" }
%"class.WTF::HashMap.91" = type { %"class.WTF::HashTable.92" }
%"class.WTF::HashTable.92" = type <{ %"struct.WTF::KeyValuePair.94"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.94" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.98 }
%class.scoped_refptr.98 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.99" }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i32 }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.559", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.603", i32, i8, [3 x i8], %"class.blink::HeapVector.605", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.613", %"class.blink::Member.615", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.624", %"class.blink::Member.630", %"class.blink::Member.632", i8, [7 x i8] }>
%"class.blink::Supplementable.559" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.560" }
%"class.blink::HeapHashMap.560" = type { %"class.WTF::HashMap.563" }
%"class.WTF::HashMap.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"struct.WTF::KeyValuePair.566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.566" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.575" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.567" }
%"class.blink::HeapObserverSet.567" = type { i32, [4 x i8], %"class.blink::HeapHashSet.568" }
%"class.blink::HeapHashSet.568" = type { %"class.WTF::HashSet.571" }
%"class.WTF::HashSet.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"class.blink::WeakMember.574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.574" = type opaque
%"class.blink::Supplementable.575" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.576" }
%"class.blink::HeapHashMap.576" = type { %"class.WTF::HashMap.579" }
%"class.WTF::HashMap.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"struct.WTF::KeyValuePair.582"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.582" = type { i8*, %"class.blink::Member.665" }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.667" }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.583, %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593", %"class.blink::Member.108", i32, [4 x i8], %"class.WTF::HashSet.599", i32, i32 }
%class.scoped_refptr.583 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.584", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.586 }
%"class.WTF::RefCounted.584" = type { %"class.base::RefCounted.585" }
%"class.base::RefCounted.585" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.586 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.605" = type { %"class.WTF::Vector.608" }
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610" }
%"class.WTF::VectorBufferBase.610" = type { %"class.blink::Member.611"*, i32, i32 }
%"class.blink::Member.611" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.617", i32, i32 }
%"class.blink::HeapHashMap.617" = type { %"class.WTF::HashMap.620" }
%"class.WTF::HashMap.620" = type { %"class.WTF::HashTable.621" }
%"class.WTF::HashTable.621" = type <{ %"struct.WTF::KeyValuePair.623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.623" = type opaque
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.129 }
%class.scoped_refptr.129 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.133 }
%class.scoped_refptr.133 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.134", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.134" = type { %"class.base::RefCounted.135" }
%"class.base::RefCounted.135" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.138" }
%"class.blink::HeapHashMap.138" = type { %"class.WTF::HashMap.141" }
%"class.WTF::HashMap.141" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"struct.WTF::KeyValuePair.144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.144" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.341" }
%"class.blink::HeapHashMap.341" = type { %"class.WTF::HashMap.344" }
%"class.WTF::HashMap.344" = type { %"class.WTF::HashTable.345" }
%"class.WTF::HashTable.345" = type <{ %"struct.WTF::KeyValuePair.347"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.347" = type opaque
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"class.blink::WeakMember.354"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.354" = type opaque
%"class.blink::HeapHashSet.355" = type { %"class.WTF::HashSet.358" }
%"class.WTF::HashSet.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"class.blink::WeakMember.361"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.361" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.372" = type { %"class.WTF::HashMap.375" }
%"class.WTF::HashMap.375" = type { %"class.WTF::HashTable.376" }
%"class.WTF::HashTable.376" = type <{ %"struct.WTF::KeyValuePair.378"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.378" = type opaque
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.381" }
%"class.WTF::VectorBufferBase.381" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.390" = type { %"class.WTF::Vector.393" }
%"class.WTF::Vector.393" = type { %"class.WTF::VectorBuffer.394" }
%"class.WTF::VectorBuffer.394" = type { %"class.WTF::VectorBufferBase.395" }
%"class.WTF::VectorBufferBase.395" = type { %"class.blink::Member.396"*, i32, i32 }
%"class.blink::Member.396" = type opaque
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.404" = type { %"class.WTF::HashSet.407" }
%"class.WTF::HashSet.407" = type { %"class.WTF::HashTable.408" }
%"class.WTF::HashTable.408" = type <{ %"class.blink::WeakMember.410"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.410" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.411", i32, [4 x i8] }>
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"struct.std::__1::pair.414"*, i32, i32 }
%"struct.std::__1::pair.414" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.64" = type { %"class.WTF::Vector.67" }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.436"*, i32, i32 }
%"class.blink::Member.436" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.48" }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"struct.WTF::KeyValuePair.452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.452" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.338", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.329, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.329 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.330" }>
%"class.base::RefCountedThreadSafe.330" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.331 }
%class.scoped_refptr.331 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.332", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.332" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.333" }
%"struct.std::__1::atomic.333" = type { %"struct.std::__1::__atomic_base.334" }
%"struct.std::__1::__atomic_base.334" = type { %"struct.std::__1::__atomic_base.335" }
%"struct.std::__1::__atomic_base.335" = type { %"struct.std::__1::__cxx_atomic_impl.336" }
%"struct.std::__1::__cxx_atomic_impl.336" = type { %"struct.std::__1::__cxx_atomic_base_impl.337" }
%"struct.std::__1::__cxx_atomic_base_impl.337" = type { i8 }
%"class.blink::WeakMember.338" = type { %"class.blink::MemberBase.49" }
%"class.blink::HeapHashSet.461" = type { %"class.WTF::HashSet.464" }
%"class.WTF::HashSet.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ %"class.blink::Member.467"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.467" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.498" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.503" = type { %"class.WTF::HashMap.506" }
%"class.WTF::HashMap.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"struct.WTF::KeyValuePair.509"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.509" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.522" = type { %"class.WTF::HashMap.525" }
%"class.WTF::HashMap.525" = type { %"class.WTF::HashTable.526" }
%"class.WTF::HashTable.526" = type <{ %"struct.WTF::KeyValuePair.528"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.528" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.529" }
%"class.blink::HeapHashSet.529" = type { %"class.WTF::HashSet.532" }
%"class.WTF::HashSet.532" = type { %"class.WTF::HashTable.533" }
%"class.WTF::HashTable.533" = type <{ %"class.blink::WeakMember.535"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.535" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.48", %"class.blink::HeapHashSet.545", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.552", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.545" = type { %"class.WTF::HashSet.548" }
%"class.WTF::HashSet.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"class.blink::Member.551"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.551" = type opaque
%"class.blink::HeapTaskRunnerTimer.552" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.553", { i64, i64 } }
%"class.blink::WeakMember.553" = type { %"class.blink::MemberBase.539" }
%"class.blink::WeakMember.540" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.54" }
%"class.blink::HeapHashMap.54" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.58" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.62", i32, %"class.blink::HeapVector.64" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.21" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::HeapHashMap.23"* }
%"class.blink::HeapHashMap.23" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.79" = type { %"class.WTF::Vector.82" }
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.blink::Member.85"*, i32, i32 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.19", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.38", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.26" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.680" = type { %"class.WTF::Vector.683" }
%"class.WTF::Vector.683" = type { %"class.WTF::VectorBuffer.684" }
%"class.WTF::VectorBuffer.684" = type { %"class.WTF::VectorBufferBase.685" }
%"class.WTF::VectorBufferBase.685" = type { %"class.blink::Member.686"*, i32, i32 }
%"class.blink::Member.686" = type opaque
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.688", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional.688" = type { %"class.absl::optional_internal::optional_data.689" }
%"class.absl::optional_internal::optional_data.689" = type { %"class.absl::optional_internal::optional_data_base.690" }
%"class.absl::optional_internal::optional_data_base.690" = type { %"class.absl::optional_internal::optional_data_dtor_base.691" }
%"class.absl::optional_internal::optional_data_dtor_base.691" = type { i8, %union.anon.692 }
%union.anon.692 = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.693, i32, i8, i8, [2 x i8] }>
%union.anon.693 = type { %"class.WTF::Vector.694" }
%"class.WTF::Vector.694" = type { %"class.WTF::VectorBuffer.695" }
%"class.WTF::VectorBuffer.695" = type { %"class.WTF::VectorBufferBase.696", [16 x i8] }
%"class.WTF::VectorBufferBase.696" = type { i8*, i32, i32 }
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.706", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.WTF::Vector.675" = type { %"class.WTF::VectorBuffer.676" }
%"class.WTF::VectorBuffer.676" = type { %"class.WTF::VectorBufferBase.677" }
%"class.WTF::VectorBufferBase.677" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { i8*, i32, i32 }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.636", %"class.blink::Member.638", %"class.blink::Member.640", %"class.blink::Member.642", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.634", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671", [64 x i8] }
%"class.WTF::VectorBufferBase.671" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::DocumentLoader" = type opaque
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.710", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.710" = type { %"class.WTF::Vector.713" }
%"class.WTF::Vector.713" = type { %"class.WTF::VectorBuffer.714" }
%"class.WTF::VectorBuffer.714" = type { %"class.WTF::VectorBufferBase.715" }
%"class.WTF::VectorBufferBase.715" = type { %"class.blink::Member.716"*, i32, i32 }
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::FormData::Entry"* }
%"class.blink::FormData::Entry" = type { %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.720", %"class.WTF::String" }
%"class.blink::Member.720" = type { %"class.blink::MemberBase.721" }
%"class.blink::MemberBase.721" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type opaque
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.650", [4 x i8], %"class.WTF::Vector.652", i64, %"class.WTF::Vector.644", i8, [7 x i8] }>
%"class.WTF::RefCounted.650" = type { %"class.base::RefCounted.651" }
%"class.base::RefCounted.651" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.644", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.655, i64, i64, %"class.absl::optional.656", %class.scoped_refptr.662 }
%class.scoped_refptr.655 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type opaque
%"class.absl::optional.656" = type { %"class.absl::optional_internal::optional_data.657" }
%"class.absl::optional_internal::optional_data.657" = type { %"class.absl::optional_internal::optional_data_base.658" }
%"class.absl::optional_internal::optional_data_base.658" = type { %"class.absl::optional_internal::optional_data_dtor_base.659" }
%"class.absl::optional_internal::optional_data_dtor_base.659" = type { i8, %union.anon.660 }
%union.anon.660 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.661" }
%"class.base::time_internal::TimeBase.661" = type { i64 }
%class.scoped_refptr.662 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_ = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPc = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names11kMethodAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"post\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names18kAcceptCharsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16input_type_names5kFileE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kPasswordE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kCheckboxE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kRadioE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kCheckedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names13kSelectedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"{searchTerms}\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink21WebSearchableFormDataC1ERKNS_14WebFormElementERKNS_15WebInputElementE = hidden unnamed_addr alias void (%"class.blink::WebSearchableFormData"*, %"class.blink::WebFormElement"*, %"class.blink::WebInputElement"*), void (%"class.blink::WebSearchableFormData"*, %"class.blink::WebFormElement"*, %"class.blink::WebInputElement"*)* @_ZN5blink21WebSearchableFormDataC2ERKNS_14WebFormElementERKNS_15WebInputElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21WebSearchableFormDataC2ERKNS_14WebFormElementERKNS_15WebInputElementE(%"class.blink::WebSearchableFormData"*, %"class.blink::WebFormElement"* dereferenceable(16), %"class.blink::WebInputElement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::OptionListIterator", align 8
  %9 = alloca %"class.blink::OptionListIterator", align 8
  %10 = alloca %"class.blink::OptionListIterator", align 8
  %11 = alloca %"class.blink::OptionListIterator", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::Vector.675", align 8
  %14 = alloca %"class.WTF::TextEncoding", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::TextEncoding", align 8
  %17 = alloca %"class.WTF::Vector.644", align 8
  %18 = alloca %"class.blink::KURL", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = getelementptr inbounds %"class.blink::WebSearchableFormData", %"class.blink::WebSearchableFormData"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::WebSearchableFormData", %"class.blink::WebSearchableFormData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %23) #10
  %24 = getelementptr inbounds %"class.blink::WebSearchableFormData", %"class.blink::WebSearchableFormData"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %24) #10
  %25 = getelementptr inbounds %"class.blink::WebSearchableFormData", %"class.blink::WebSearchableFormData"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.blink::WebSearchableFormData", %"class.blink::WebSearchableFormData"* %0, i64 0, i32 1
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %26) #10
  %27 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink14WebFormElementcvPNS_15HTMLFormElementEEv(%"class.blink::WebFormElement"* %1) #10
  %28 = tail call %"class.blink::HTMLInputElement"* @_ZNK5blink15WebInputElementcvPNS_16HTMLInputElementEEv(%"class.blink::WebInputElement"* %2) #10
  %29 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kMethodAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %27, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %33 = icmp eq %"class.blink::ElementData"* %32, null
  br i1 %33, label %84, label %34

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.14"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %77, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %78, %77 ]
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %65, %59
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %74, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %72, %67
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %79 = icmp eq %"class.blink::Attribute"* %78, %55
  br i1 %79, label %84, label %62

80:                                               ; preds = %72, %62
  %81 = icmp eq %"class.blink::Attribute"* %63, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 1
  br label %86

84:                                               ; preds = %77, %80, %51, %3
  %85 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %86

86:                                               ; preds = %82, %84
  %87 = phi %"class.WTF::AtomicString"* [ %85, %84 ], [ %83, %82 ]
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %92, align 8
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %93, i64* %94, align 8
  br label %102

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %101 = bitcast i8** %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %101, align 8
  br label %102

102:                                              ; preds = %91, %95
  %103 = phi i32 [ %98, %95 ], [ 0, %91 ]
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %103, i32* %104, align 8
  %105 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, [5 x i8]* nonnull dereferenceable(5) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  br i1 %105, label %955, label %106

106:                                              ; preds = %102
  %107 = bitcast %"class.WTF::TextEncoding"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #10
  %108 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %16, i64 0, i32 0
  store i8* null, i8** %108, align 8
  %109 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #10
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %110, align 8
  %111 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAcceptCharsetAttrE, align 8
  %112 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %113 = icmp eq %"class.blink::ElementData"* %112, null
  br i1 %113, label %164, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %112, i64 0, i32 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %114
  %120 = bitcast %"class.blink::ElementData"* %112 to %"class.blink::UniqueElementData"*
  %121 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %112, i64 1, i32 1
  %122 = bitcast %"class.blink::Member.14"* %121 to %"class.blink::Attribute"**
  %123 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %120, i64 0, i32 2, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  br label %131

126:                                              ; preds = %114
  %127 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %112, i64 1
  %128 = bitcast %"class.blink::ElementData"* %127 to %"class.blink::Attribute"*
  %129 = lshr i32 %116, 1
  %130 = and i32 %129, 268435455
  br label %131

131:                                              ; preds = %126, %119
  %132 = phi %"class.blink::Attribute"* [ %128, %126 ], [ %123, %119 ]
  %133 = phi i32 [ %130, %126 ], [ %125, %119 ]
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %132, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %164, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %111, i64 0, i32 0, i32 0
  %139 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %139, i64 0, i32 3, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %139, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %142

142:                                              ; preds = %157, %137
  %143 = phi %"class.blink::Attribute"* [ %132, %137 ], [ %158, %157 ]
  %144 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %145, %139
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %149, %150
  br i1 %151, label %152, label %157

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %154, %155
  br i1 %156, label %160, label %157

157:                                              ; preds = %152, %147
  %158 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 1
  %159 = icmp eq %"class.blink::Attribute"* %158, %135
  br i1 %159, label %164, label %142

160:                                              ; preds = %152, %142
  %161 = icmp eq %"class.blink::Attribute"* %143, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 0, i32 1
  br label %166

164:                                              ; preds = %157, %160, %131, %106
  %165 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %166

166:                                              ; preds = %164, %162
  %167 = phi %"class.WTF::AtomicString"* [ %165, %164 ], [ %163, %162 ]
  %168 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %110, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %207, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %190

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #10
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !2

185:                                              ; preds = %176
  call void @llvm.trap() #10
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %207, label %190

190:                                              ; preds = %186, %171
  %191 = phi %"class.WTF::StringImpl"* [ %188, %186 ], [ %169, %171 ]
  %192 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %191, i16 zeroext 44, i16 zeroext 32) #10
  %193 = ptrtoint %"class.WTF::StringImpl"* %192 to i64
  %194 = bitcast %"class.WTF::String"* %12 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %190
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %190
  %204 = phi i32 [ %202, %201 ], [ %200, %190 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #10
  br label %207

207:                                              ; preds = %206, %203, %186, %166
  %208 = bitcast %"class.WTF::Vector.675"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #10
  %209 = getelementptr inbounds %"class.WTF::Vector.675", %"class.WTF::Vector.675"* %13, i64 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.WTF::Vector.675", %"class.WTF::Vector.675"* %13, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 16, i1 false) #10
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %12, i16 zeroext 32, i1 zeroext false, %"class.WTF::Vector.675"* nonnull dereferenceable(16) %13) #10
  %211 = load %"class.WTF::String"*, %"class.WTF::String"** %209, align 8
  %212 = load i32, i32* %210, align 4
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %211, i64 %213
  %215 = icmp eq i32 %212, 0
  br i1 %215, label %227, label %216

216:                                              ; preds = %207
  %217 = bitcast %"class.WTF::TextEncoding"* %14 to i8*
  %218 = bitcast %"class.WTF::TextEncoding"* %14 to i64*
  %219 = bitcast %"class.WTF::TextEncoding"* %16 to i64*
  br label %222

220:                                              ; preds = %222
  %221 = icmp eq %"class.WTF::String"* %226, %214
  br i1 %221, label %227, label %222

222:                                              ; preds = %220, %216
  %223 = phi %"class.WTF::String"* [ %211, %216 ], [ %226, %220 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #10
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %14, %"class.WTF::String"* dereferenceable(8) %223) #10
  %224 = load i64, i64* %218, align 8
  store i64 %224, i64* %219, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #10
  %225 = icmp eq i64 %224, 0
  %226 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %223, i64 1
  br i1 %225, label %220, label %242

227:                                              ; preds = %220, %207
  %228 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %229 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %229, i64 0, i32 2, i32 0, i32 0
  %231 = load %"class.blink::Document"*, %"class.blink::Document"** %230, align 8
  %232 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %231) #10
  %233 = icmp eq %"class.blink::DocumentLoader"* %232, null
  br i1 %233, label %242, label %234

234:                                              ; preds = %227
  %235 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %228, align 8
  %236 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %235, i64 0, i32 2, i32 0, i32 0
  %237 = load %"class.blink::Document"*, %"class.blink::Document"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %237, i64 0, i32 95, i32 0
  %239 = bitcast %"class.WTF::TextEncoding"* %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.WTF::TextEncoding"* %16 to i64*
  store i64 %240, i64* %241, align 8
  br label %242

242:                                              ; preds = %222, %234, %227
  %243 = load %"class.WTF::String"*, %"class.WTF::String"** %209, align 8
  %244 = icmp eq %"class.WTF::String"* %243, null
  br i1 %244, label %278, label %245, !prof !3

245:                                              ; preds = %242
  %246 = bitcast %"class.WTF::String"* %243 to i8*
  %247 = load i32, i32* %210, align 4
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %276, label %249, !prof !2

249:                                              ; preds = %245
  %250 = zext i32 %247 to i64
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %243, i64 %250
  br label %252

252:                                              ; preds = %270, %249
  %253 = phi %"class.WTF::String"* [ %271, %270 ], [ %243, %249 ]
  %254 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %253, i64 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #10
  br label %270

270:                                              ; preds = %269, %266, %252
  %271 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %253, i64 1
  %272 = icmp eq %"class.WTF::String"* %271, %251
  br i1 %272, label %273, label %252

273:                                              ; preds = %270
  store i32 0, i32* %210, align 4
  %274 = bitcast %"class.WTF::Vector.675"* %13 to i8**
  %275 = load i8*, i8** %274, align 8
  br label %276

276:                                              ; preds = %273, %245
  %277 = phi i8* [ %275, %273 ], [ %246, %245 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %277) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %209, align 8
  br label %278

278:                                              ; preds = %276, %242
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #10
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #10
  br label %294

294:                                              ; preds = %278, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #10
  %295 = load i8*, i8** %108, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %954, label %297

297:                                              ; preds = %294
  %298 = icmp eq %"class.blink::HTMLInputElement"* %28, null
  br i1 %298, label %299, label %682

299:                                              ; preds = %297
  %300 = call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"* %27) #10
  %301 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %300, i64 0, i32 0, i32 0, i32 0, i32 0
  %302 = load %"class.blink::Member.29"*, %"class.blink::Member.29"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %300, i64 0, i32 0, i32 0, i32 0, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %302, i64 %305
  %307 = icmp eq i32 %304, 0
  br i1 %307, label %954, label %308

308:                                              ; preds = %299
  %309 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %310 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %309, i64 0, i32 0, i32 0, i32 0
  %311 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %312 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = bitcast %"class.blink::OptionListIterator"* %11 to i8*
  %314 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %11, i64 0, i32 1
  %315 = bitcast %"class.blink::OptionListIterator"* %9 to i8*
  %316 = bitcast %"class.blink::OptionListIterator"* %9 to %"class.blink::Member.33"**
  %317 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %9, i64 0, i32 1
  %318 = bitcast %"class.blink::OptionListIterator"* %9 to i64*
  %319 = bitcast %"class.blink::OptionListIterator"* %11 to i64*
  %320 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kSelectedAttrE, align 8
  %321 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %320, i64 0, i32 0, i32 0
  %322 = bitcast %"class.blink::OptionListIterator"* %10 to i8*
  %323 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %10, i64 0, i32 1
  %324 = bitcast %"class.blink::OptionListIterator"* %8 to i8*
  %325 = bitcast %"class.blink::OptionListIterator"* %8 to %"class.blink::Member.33"**
  %326 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %8, i64 0, i32 1
  %327 = bitcast %"class.blink::OptionListIterator"* %8 to i64*
  %328 = bitcast %"class.blink::OptionListIterator"* %10 to i64*
  %329 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  %330 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %329, i64 0, i32 0, i32 0, i32 0
  %331 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %332 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %331, i64 0, i32 0, i32 0, i32 0
  %333 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kCheckedAttrE, align 8
  %334 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %333, i64 0, i32 0, i32 0
  %335 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %336 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %335, i64 0, i32 0, i32 0, i32 0
  %337 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %338 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %337, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %340 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %339, i64 0, i32 0, i32 0, i32 0
  br label %341

341:                                              ; preds = %676, %308
  %342 = phi %"class.blink::Member.29"* [ %302, %308 ], [ %678, %676 ]
  %343 = phi %"class.blink::HTMLInputElement"* [ null, %308 ], [ %677, %676 ]
  %344 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %342, i64 0, i32 0, i32 0
  %345 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %344, align 8
  %346 = icmp eq %"class.blink::ListedElement"* %345, null
  br i1 %346, label %676, label %347

347:                                              ; preds = %341
  %348 = bitcast %"class.blink::ListedElement"* %345 to i1 (%"class.blink::ListedElement"*)***
  %349 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %348, align 8
  %350 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %349, i64 3
  %351 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %350, align 8
  %352 = call zeroext i1 %351(%"class.blink::ListedElement"* nonnull %345) #10
  br i1 %352, label %353, label %676

353:                                              ; preds = %347
  %354 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %345, i64 -2, i32 4
  %355 = bitcast %"class.blink::Member.33"* %354 to %"class.blink::HTMLFormControlElement"*
  %356 = bitcast %"class.blink::Member.33"* %354 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %357 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %356, align 8
  %358 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %357, i64 138
  %359 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %358, align 8
  %360 = call zeroext i1 %359(%"class.blink::HTMLFormControlElement"* nonnull %355) #10
  br i1 %360, label %676, label %361

361:                                              ; preds = %353
  %362 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %354, i64 13
  %363 = bitcast %"class.blink::Member.33"* %362 to %"class.blink::ListedElement"*
  %364 = bitcast %"class.blink::Member.33"* %362 to %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)***
  %365 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*** %364, align 8
  %366 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %365, i64 7
  %367 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %366, align 8
  %368 = call dereferenceable(8) %"class.WTF::AtomicString"* %367(%"class.blink::ListedElement"* %363) #10
  %369 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %368, i64 0, i32 0, i32 0, i32 0
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %676, label %372

372:                                              ; preds = %361
  %373 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %354, i64 2
  %374 = bitcast %"class.blink::Member.33"* %373 to i32*
  %375 = load i32, i32* %374, align 8
  %376 = and i32 %375, 48
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %628

378:                                              ; preds = %372
  %379 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %310, align 8
  %380 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %354, i64 11
  %381 = bitcast %"class.blink::Member.33"* %380 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %382 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %382, i64 0, i32 3, i32 0, i32 0, i32 0
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %379, i64 0, i32 3, i32 0, i32 0, i32 0
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %384, %386
  %388 = bitcast %"class.blink::Member.33"* %354 to %"class.blink::HTMLInputElement"*
  br i1 %387, label %389, label %466

389:                                              ; preds = %378
  %390 = bitcast %"class.blink::Member.33"* %354 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %391 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %390, align 8
  %392 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %391, i64 171
  %393 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %392, align 8
  %394 = call dereferenceable(8) %"class.WTF::AtomicString"* %393(%"class.blink::HTMLFormControlElement"* nonnull %355) #10
  %395 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %394, i64 0, i32 0, i32 0, i32 0
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %395, align 8
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %330, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %396, %397
  br i1 %398, label %408, label %399

399:                                              ; preds = %389
  %400 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %390, align 8
  %401 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %400, i64 171
  %402 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %401, align 8
  %403 = call dereferenceable(8) %"class.WTF::AtomicString"* %402(%"class.blink::HTMLFormControlElement"* nonnull %355) #10
  %404 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %403, i64 0, i32 0, i32 0, i32 0
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %332, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %405, %406
  br i1 %407, label %408, label %628

408:                                              ; preds = %399, %389
  %409 = call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* nonnull %388) #10
  %410 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %354, i64 12
  %411 = bitcast %"class.blink::Member.33"* %410 to %"class.blink::ElementData"**
  %412 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %411, align 8
  %413 = icmp eq %"class.blink::ElementData"* %412, null
  br i1 %413, label %414, label %415

414:                                              ; preds = %408
  br i1 %409, label %954, label %628

415:                                              ; preds = %408
  %416 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %412, i64 0, i32 0, i32 0, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = and i32 %417, 1
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %427, label %420

420:                                              ; preds = %415
  %421 = bitcast %"class.blink::ElementData"* %412 to %"class.blink::UniqueElementData"*
  %422 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %412, i64 1, i32 1
  %423 = bitcast %"class.blink::Member.14"* %422 to %"class.blink::Attribute"**
  %424 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %423, align 8
  %425 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %421, i64 0, i32 2, i32 0, i32 0, i32 2
  %426 = load i32, i32* %425, align 4
  br label %432

427:                                              ; preds = %415
  %428 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %412, i64 1
  %429 = bitcast %"class.blink::ElementData"* %428 to %"class.blink::Attribute"*
  %430 = lshr i32 %417, 1
  %431 = and i32 %430, 268435455
  br label %432

432:                                              ; preds = %427, %420
  %433 = phi %"class.blink::Attribute"* [ %429, %427 ], [ %424, %420 ]
  %434 = phi i32 [ %431, %427 ], [ %426, %420 ]
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %433, i64 %435
  %437 = icmp eq i32 %434, 0
  br i1 %437, label %462, label %438

438:                                              ; preds = %432
  %439 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %334, align 8
  %440 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %439, i64 0, i32 3, i32 0, i32 0, i32 0
  %441 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %439, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %442

442:                                              ; preds = %458, %438
  %443 = phi %"class.blink::Attribute"* [ %433, %438 ], [ %459, %458 ]
  %444 = phi i32 [ 0, %438 ], [ %460, %458 ]
  %445 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %443, i64 0, i32 0, i32 0, i32 0
  %446 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %445, align 8
  %447 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %446, %439
  br i1 %447, label %463, label %448

448:                                              ; preds = %442
  %449 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %446, i64 0, i32 3, i32 0, i32 0, i32 0
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %449, align 8
  %451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %440, align 8
  %452 = icmp eq %"class.WTF::StringImpl"* %450, %451
  br i1 %452, label %453, label %458

453:                                              ; preds = %448
  %454 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %446, i64 0, i32 4, i32 0, i32 0, i32 0
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %454, align 8
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %455, %456
  br i1 %457, label %463, label %458

458:                                              ; preds = %453, %448
  %459 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %443, i64 1
  %460 = add i32 %444, 1
  %461 = icmp eq %"class.blink::Attribute"* %459, %436
  br i1 %461, label %462, label %442

462:                                              ; preds = %458, %432
  br i1 %409, label %954, label %628

463:                                              ; preds = %453, %442
  %464 = icmp ne i32 %444, -1
  %465 = xor i1 %409, %464
  br i1 %465, label %954, label %628

466:                                              ; preds = %378
  %467 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %312, align 8
  %468 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %467, i64 0, i32 3, i32 0, i32 0, i32 0
  %469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %468, align 8
  %470 = icmp eq %"class.WTF::StringImpl"* %384, %469
  br i1 %470, label %471, label %628

471:                                              ; preds = %466
  %472 = bitcast %"class.blink::Member.33"* %354 to %"class.blink::HTMLSelectElement"*
  %473 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %472, i64 0, i32 10
  %474 = load i8, i8* %473, align 1, !range !4
  %475 = icmp eq i8 %474, 0
  br i1 %475, label %476, label %481

476:                                              ; preds = %471
  %477 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %354, i64 38
  %478 = bitcast %"class.blink::Member.33"* %477 to i32*
  %479 = load i32, i32* %478, align 8
  %480 = icmp ugt i32 %479, 1
  br i1 %480, label %481, label %551

481:                                              ; preds = %476, %471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %322) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324) #10
  store %"class.blink::Member.33"* %354, %"class.blink::Member.33"** %325, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %326, align 8
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %8, %"class.blink::HTMLOptionElement"* null) #10
  %482 = load i64, i64* %327, align 8
  %483 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %326, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324) #10
  store i64 %482, i64* %328, align 8
  store %"class.blink::HTMLOptionElement"* %483, %"class.blink::HTMLOptionElement"** %323, align 8
  %484 = icmp eq %"class.blink::HTMLOptionElement"* %483, null
  br i1 %484, label %550, label %485

485:                                              ; preds = %481, %546
  %486 = phi %"class.blink::HTMLOptionElement"* [ %547, %546 ], [ %483, %481 ]
  %487 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %486) #10
  %488 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %486, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %489 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %488, align 8
  %490 = icmp eq %"class.blink::ElementData"* %489, null
  br i1 %490, label %491, label %492

491:                                              ; preds = %485
  br i1 %487, label %549, label %543

492:                                              ; preds = %485
  %493 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %489, i64 0, i32 0, i32 0, i32 0
  %494 = load i32, i32* %493, align 4
  %495 = and i32 %494, 1
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %504, label %497

497:                                              ; preds = %492
  %498 = bitcast %"class.blink::ElementData"* %489 to %"class.blink::UniqueElementData"*
  %499 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %489, i64 1, i32 1
  %500 = bitcast %"class.blink::Member.14"* %499 to %"class.blink::Attribute"**
  %501 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %500, align 8
  %502 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %498, i64 0, i32 2, i32 0, i32 0, i32 2
  %503 = load i32, i32* %502, align 4
  br label %509

504:                                              ; preds = %492
  %505 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %489, i64 1
  %506 = bitcast %"class.blink::ElementData"* %505 to %"class.blink::Attribute"*
  %507 = lshr i32 %494, 1
  %508 = and i32 %507, 268435455
  br label %509

509:                                              ; preds = %504, %497
  %510 = phi %"class.blink::Attribute"* [ %506, %504 ], [ %501, %497 ]
  %511 = phi i32 [ %508, %504 ], [ %503, %497 ]
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %510, i64 %512
  %514 = icmp eq i32 %511, 0
  br i1 %514, label %539, label %515

515:                                              ; preds = %509
  %516 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %321, align 8
  %517 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %516, i64 0, i32 3, i32 0, i32 0, i32 0
  %518 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %516, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %519

519:                                              ; preds = %535, %515
  %520 = phi %"class.blink::Attribute"* [ %510, %515 ], [ %536, %535 ]
  %521 = phi i32 [ 0, %515 ], [ %537, %535 ]
  %522 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %520, i64 0, i32 0, i32 0, i32 0
  %523 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %522, align 8
  %524 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %523, %516
  br i1 %524, label %540, label %525

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %523, i64 0, i32 3, i32 0, i32 0, i32 0
  %527 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %526, align 8
  %528 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %529 = icmp eq %"class.WTF::StringImpl"* %527, %528
  br i1 %529, label %530, label %535

530:                                              ; preds = %525
  %531 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %523, i64 0, i32 4, i32 0, i32 0, i32 0
  %532 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %531, align 8
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %518, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %532, %533
  br i1 %534, label %540, label %535

535:                                              ; preds = %530, %525
  %536 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %520, i64 1
  %537 = add i32 %521, 1
  %538 = icmp eq %"class.blink::Attribute"* %536, %513
  br i1 %538, label %539, label %519

539:                                              ; preds = %535, %509
  br i1 %487, label %549, label %543

540:                                              ; preds = %530, %519
  %541 = icmp ne i32 %521, -1
  %542 = xor i1 %487, %541
  br i1 %542, label %549, label %543

543:                                              ; preds = %540, %539, %491
  %544 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %323, align 8
  %545 = icmp eq %"class.blink::HTMLOptionElement"* %544, null
  br i1 %545, label %550, label %546

546:                                              ; preds = %543
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %10, %"class.blink::HTMLOptionElement"* nonnull %544) #10
  %547 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %323, align 8
  %548 = icmp eq %"class.blink::HTMLOptionElement"* %547, null
  br i1 %548, label %550, label %485

549:                                              ; preds = %540, %539, %491
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %322) #10
  br label %954

550:                                              ; preds = %546, %543, %481
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %322) #10
  br label %628

551:                                              ; preds = %476
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #10
  store %"class.blink::Member.33"* %354, %"class.blink::Member.33"** %316, align 8
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %317, align 8
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %9, %"class.blink::HTMLOptionElement"* null) #10
  %552 = load i64, i64* %318, align 8
  %553 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %317, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #10
  store i64 %552, i64* %319, align 8
  store %"class.blink::HTMLOptionElement"* %553, %"class.blink::HTMLOptionElement"** %314, align 8
  %554 = icmp eq %"class.blink::HTMLOptionElement"* %553, null
  br i1 %554, label %622, label %555

555:                                              ; preds = %551, %618
  %556 = phi %"class.blink::HTMLOptionElement"* [ %619, %618 ], [ null, %551 ]
  %557 = phi %"class.blink::HTMLOptionElement"* [ %620, %618 ], [ %553, %551 ]
  %558 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %557, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %559 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %558, align 8
  %560 = icmp eq %"class.blink::ElementData"* %559, null
  br i1 %560, label %561, label %564

561:                                              ; preds = %555
  %562 = icmp eq %"class.blink::HTMLOptionElement"* %556, null
  %563 = select i1 %562, %"class.blink::HTMLOptionElement"* %557, %"class.blink::HTMLOptionElement"* %556
  br label %618

564:                                              ; preds = %555
  %565 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %559, i64 0, i32 0, i32 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = and i32 %566, 1
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %576, label %569

569:                                              ; preds = %564
  %570 = bitcast %"class.blink::ElementData"* %559 to %"class.blink::UniqueElementData"*
  %571 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %559, i64 1, i32 1
  %572 = bitcast %"class.blink::Member.14"* %571 to %"class.blink::Attribute"**
  %573 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %572, align 8
  %574 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %570, i64 0, i32 2, i32 0, i32 0, i32 2
  %575 = load i32, i32* %574, align 4
  br label %581

576:                                              ; preds = %564
  %577 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %559, i64 1
  %578 = bitcast %"class.blink::ElementData"* %577 to %"class.blink::Attribute"*
  %579 = lshr i32 %566, 1
  %580 = and i32 %579, 268435455
  br label %581

581:                                              ; preds = %576, %569
  %582 = phi %"class.blink::Attribute"* [ %578, %576 ], [ %573, %569 ]
  %583 = phi i32 [ %580, %576 ], [ %575, %569 ]
  %584 = zext i32 %583 to i64
  %585 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %582, i64 %584
  %586 = icmp eq i32 %583, 0
  br i1 %586, label %611, label %587

587:                                              ; preds = %581
  %588 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %321, align 8
  %589 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %588, i64 0, i32 3, i32 0, i32 0, i32 0
  %590 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %588, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %591

591:                                              ; preds = %607, %587
  %592 = phi %"class.blink::Attribute"* [ %582, %587 ], [ %608, %607 ]
  %593 = phi i32 [ 0, %587 ], [ %609, %607 ]
  %594 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %592, i64 0, i32 0, i32 0, i32 0
  %595 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %594, align 8
  %596 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %595, %588
  br i1 %596, label %614, label %597

597:                                              ; preds = %591
  %598 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %595, i64 0, i32 3, i32 0, i32 0, i32 0
  %599 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %598, align 8
  %600 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %601 = icmp eq %"class.WTF::StringImpl"* %599, %600
  br i1 %601, label %602, label %607

602:                                              ; preds = %597
  %603 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %595, i64 0, i32 4, i32 0, i32 0, i32 0
  %604 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %603, align 8
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %590, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %604, %605
  br i1 %606, label %614, label %607

607:                                              ; preds = %602, %597
  %608 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %592, i64 1
  %609 = add i32 %593, 1
  %610 = icmp eq %"class.blink::Attribute"* %608, %585
  br i1 %610, label %611, label %591

611:                                              ; preds = %607, %581
  %612 = icmp eq %"class.blink::HTMLOptionElement"* %556, null
  %613 = select i1 %612, %"class.blink::HTMLOptionElement"* %557, %"class.blink::HTMLOptionElement"* %556
  br label %618

614:                                              ; preds = %602, %591
  %615 = icmp eq i32 %593, -1
  %616 = icmp eq %"class.blink::HTMLOptionElement"* %556, null
  %617 = select i1 %616, %"class.blink::HTMLOptionElement"* %557, %"class.blink::HTMLOptionElement"* %556
  br i1 %615, label %618, label %623

618:                                              ; preds = %614, %611, %561
  %619 = phi %"class.blink::HTMLOptionElement"* [ %613, %611 ], [ %563, %561 ], [ %617, %614 ]
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %11, %"class.blink::HTMLOptionElement"* nonnull %557) #10
  %620 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %314, align 8
  %621 = icmp eq %"class.blink::HTMLOptionElement"* %620, null
  br i1 %621, label %623, label %555

622:                                              ; preds = %551
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #10
  br label %628

623:                                              ; preds = %618, %614
  %624 = phi %"class.blink::HTMLOptionElement"* [ %619, %618 ], [ %557, %614 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #10
  %625 = icmp eq %"class.blink::HTMLOptionElement"* %624, null
  br i1 %625, label %628, label %626

626:                                              ; preds = %623
  %627 = call zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"* nonnull %624) #10
  br i1 %627, label %628, label %954

628:                                              ; preds = %626, %623, %622, %550, %466, %463, %462, %414, %399, %372
  %629 = load i32, i32* %374, align 8
  %630 = and i32 %629, 48
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %632, label %676

632:                                              ; preds = %628
  %633 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %336, align 8
  %634 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %354, i64 11
  %635 = bitcast %"class.blink::Member.33"* %634 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %636 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %635, align 8
  %637 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %636, i64 0, i32 3, i32 0, i32 0, i32 0
  %638 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %637, align 8
  %639 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %633, i64 0, i32 3, i32 0, i32 0, i32 0
  %640 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %639, align 8
  %641 = icmp eq %"class.WTF::StringImpl"* %638, %640
  br i1 %641, label %954, label %642

642:                                              ; preds = %632
  %643 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %310, align 8
  %644 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %643, i64 0, i32 3, i32 0, i32 0, i32 0
  %645 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %644, align 8
  %646 = icmp eq %"class.WTF::StringImpl"* %638, %645
  %647 = bitcast %"class.blink::Member.33"* %354 to %"class.blink::HTMLInputElement"*
  br i1 %646, label %648, label %676

648:                                              ; preds = %642
  %649 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %356, align 8
  %650 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %649, i64 129
  %651 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %650, align 8
  %652 = call zeroext i1 %651(%"class.blink::HTMLFormControlElement"* nonnull %355) #10
  br i1 %652, label %653, label %676

653:                                              ; preds = %648
  %654 = bitcast %"class.blink::Member.33"* %354 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %655 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %654, align 8
  %656 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %655, i64 171
  %657 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %656, align 8
  %658 = call dereferenceable(8) %"class.WTF::AtomicString"* %657(%"class.blink::HTMLFormControlElement"* nonnull %355) #10
  %659 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %658, i64 0, i32 0, i32 0, i32 0
  %660 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %659, align 8
  %661 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %662 = icmp eq %"class.WTF::StringImpl"* %660, %661
  br i1 %662, label %954, label %663

663:                                              ; preds = %653
  %664 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %654, align 8
  %665 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %664, i64 171
  %666 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %665, align 8
  %667 = call dereferenceable(8) %"class.WTF::AtomicString"* %666(%"class.blink::HTMLFormControlElement"* nonnull %355) #10
  %668 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %667, i64 0, i32 0, i32 0, i32 0
  %669 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %668, align 8
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  %671 = icmp eq %"class.WTF::StringImpl"* %669, %670
  br i1 %671, label %954, label %672

672:                                              ; preds = %663
  %673 = call zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"* nonnull %647) #10
  br i1 %673, label %674, label %676

674:                                              ; preds = %672
  %675 = icmp eq %"class.blink::HTMLInputElement"* %343, null
  br i1 %675, label %676, label %954

676:                                              ; preds = %674, %672, %648, %642, %628, %361, %353, %347, %341
  %677 = phi %"class.blink::HTMLInputElement"* [ %343, %361 ], [ %343, %353 ], [ %343, %347 ], [ %343, %341 ], [ %343, %672 ], [ %343, %648 ], [ %647, %674 ], [ %343, %642 ], [ %343, %628 ]
  %678 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %342, i64 1
  %679 = icmp eq %"class.blink::Member.29"* %678, %306
  br i1 %679, label %680, label %341

680:                                              ; preds = %676
  %681 = icmp eq %"class.blink::HTMLInputElement"* %677, null
  br i1 %681, label %954, label %682

682:                                              ; preds = %680, %297
  %683 = phi %"class.blink::HTMLInputElement"* [ %28, %297 ], [ %677, %680 ]
  %684 = call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"* %27) #10
  %685 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %684, i64 0, i32 0, i32 0, i32 0, i32 0
  %686 = load %"class.blink::Member.29"*, %"class.blink::Member.29"** %685, align 8
  %687 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %684, i64 0, i32 0, i32 0, i32 0, i32 2
  %688 = load i32, i32* %687, align 4
  %689 = zext i32 %688 to i64
  %690 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %686, i64 %689
  %691 = icmp eq i32 %688, 0
  br i1 %691, label %728, label %692

692:                                              ; preds = %682, %717
  %693 = phi %"class.blink::Member.29"* [ %719, %717 ], [ %686, %682 ]
  %694 = phi %"class.blink::HTMLFormControlElement"* [ %718, %717 ], [ null, %682 ]
  %695 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %693, i64 0, i32 0, i32 0
  %696 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %695, align 8
  %697 = icmp eq %"class.blink::ListedElement"* %696, null
  br i1 %697, label %717, label %698

698:                                              ; preds = %692
  %699 = bitcast %"class.blink::ListedElement"* %696 to i1 (%"class.blink::ListedElement"*)***
  %700 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %699, align 8
  %701 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %700, i64 3
  %702 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %701, align 8
  %703 = call zeroext i1 %702(%"class.blink::ListedElement"* nonnull %696) #10
  br i1 %703, label %704, label %717

704:                                              ; preds = %698
  %705 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %696, i64 -2, i32 4
  %706 = bitcast %"class.blink::Member.33"* %705 to %"class.blink::HTMLFormControlElement"*
  %707 = bitcast %"class.blink::Member.33"* %705 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %708 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %707, align 8
  %709 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %708, i64 176
  %710 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %709, align 8
  %711 = call zeroext i1 %710(%"class.blink::HTMLFormControlElement"* nonnull %706) #10
  br i1 %711, label %728, label %712

712:                                              ; preds = %704
  %713 = icmp eq %"class.blink::HTMLFormControlElement"* %694, null
  br i1 %713, label %714, label %717

714:                                              ; preds = %712
  %715 = call zeroext i1 @_ZNK5blink22HTMLFormControlElement24IsSuccessfulSubmitButtonEv(%"class.blink::HTMLFormControlElement"* nonnull %706) #10
  %716 = select i1 %715, %"class.blink::HTMLFormControlElement"* %706, %"class.blink::HTMLFormControlElement"* null
  br label %717

717:                                              ; preds = %714, %712, %698, %692
  %718 = phi %"class.blink::HTMLFormControlElement"* [ %716, %714 ], [ %694, %712 ], [ %694, %698 ], [ %694, %692 ]
  %719 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %693, i64 1
  %720 = icmp eq %"class.blink::Member.29"* %719, %690
  br i1 %720, label %721, label %692

721:                                              ; preds = %717
  %722 = icmp eq %"class.blink::HTMLFormControlElement"* %718, null
  br i1 %722, label %728, label %723

723:                                              ; preds = %721
  %724 = bitcast %"class.blink::HTMLFormControlElement"* %718 to void (%"class.blink::HTMLFormControlElement"*, i1)***
  %725 = load void (%"class.blink::HTMLFormControlElement"*, i1)**, void (%"class.blink::HTMLFormControlElement"*, i1)*** %724, align 8
  %726 = getelementptr inbounds void (%"class.blink::HTMLFormControlElement"*, i1)*, void (%"class.blink::HTMLFormControlElement"*, i1)** %725, i64 177
  %727 = load void (%"class.blink::HTMLFormControlElement"*, i1)*, void (%"class.blink::HTMLFormControlElement"*, i1)** %726, align 8
  call void %727(%"class.blink::HTMLFormControlElement"* nonnull %718, i1 zeroext true) #10
  br label %728

728:                                              ; preds = %704, %721, %682, %723
  %729 = phi i1 [ true, %723 ], [ false, %721 ], [ false, %682 ], [ false, %704 ]
  %730 = phi %"class.blink::HTMLFormControlElement"* [ %718, %723 ], [ null, %721 ], [ null, %682 ], [ null, %704 ]
  %731 = bitcast %"class.WTF::Vector.644"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %731) #10
  %732 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %17, i64 0, i32 0, i32 0, i32 0
  %733 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %17, i64 0, i32 0, i32 0, i32 1
  %734 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %17, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %731, i8 0, i64 16, i1 false) #10
  %735 = call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"* %27) #10
  %736 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %735, i64 0, i32 0, i32 0, i32 0, i32 0
  %737 = load %"class.blink::Member.29"*, %"class.blink::Member.29"** %736, align 8
  %738 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %735, i64 0, i32 0, i32 0, i32 0, i32 2
  %739 = load i32, i32* %738, align 4
  %740 = zext i32 %739 to i64
  %741 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %737, i64 %740
  %742 = icmp eq i32 %739, 0
  br i1 %742, label %859, label %743

743:                                              ; preds = %728
  %744 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %745 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %746 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %745, i64 0, i32 1, i32 0
  %747 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %748 = bitcast %"class.blink::HTMLInputElement"* %683 to %"class.blink::Member.33"*
  %749 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %750 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %751 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %750, i64 0, i32 1, i32 0
  %752 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %753

753:                                              ; preds = %855, %743
  %754 = phi i8 [ 0, %743 ], [ %856, %855 ]
  %755 = phi %"class.blink::Member.29"* [ %737, %743 ], [ %857, %855 ]
  %756 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %755, i64 0, i32 0, i32 0
  %757 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %756, align 8
  %758 = icmp eq %"class.blink::ListedElement"* %757, null
  br i1 %758, label %855, label %759

759:                                              ; preds = %753
  %760 = bitcast %"class.blink::ListedElement"* %757 to i1 (%"class.blink::ListedElement"*)***
  %761 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %760, align 8
  %762 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %761, i64 3
  %763 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %762, align 8
  %764 = call zeroext i1 %763(%"class.blink::ListedElement"* nonnull %757) #10
  br i1 %764, label %765, label %855

765:                                              ; preds = %759
  %766 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %757, i64 -2, i32 4
  %767 = bitcast %"class.blink::Member.33"* %766 to %"class.blink::HTMLFormControlElement"*
  %768 = bitcast %"class.blink::Member.33"* %766 to i1 (%"class.blink::HTMLFormControlElement"*)***
  %769 = load i1 (%"class.blink::HTMLFormControlElement"*)**, i1 (%"class.blink::HTMLFormControlElement"*)*** %768, align 8
  %770 = getelementptr inbounds i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %769, i64 138
  %771 = load i1 (%"class.blink::HTMLFormControlElement"*)*, i1 (%"class.blink::HTMLFormControlElement"*)** %770, align 8
  %772 = call zeroext i1 %771(%"class.blink::HTMLFormControlElement"* nonnull %767) #10
  br i1 %772, label %855, label %773

773:                                              ; preds = %765
  %774 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %766, i64 13
  %775 = bitcast %"class.blink::Member.33"* %774 to %"class.blink::ListedElement"*
  %776 = bitcast %"class.blink::Member.33"* %774 to %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)***
  %777 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*** %776, align 8
  %778 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %777, i64 7
  %779 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %778, align 8
  %780 = call dereferenceable(8) %"class.WTF::AtomicString"* %779(%"class.blink::ListedElement"* %775) #10
  %781 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %780, i64 0, i32 0, i32 0, i32 0
  %782 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %781, align 8
  %783 = icmp eq %"class.WTF::StringImpl"* %782, null
  br i1 %783, label %855, label %784

784:                                              ; preds = %773
  %785 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #10
  %786 = bitcast i8* %785 to %"class.blink::FormData"*
  call void @_ZN5blink8FormDataC1ERKN3WTF12TextEncodingE(%"class.blink::FormData"* %786, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %16) #10
  %787 = getelementptr inbounds i8, i8* %785, i64 -4
  %788 = bitcast i8* %787 to i16*
  %789 = load atomic i16, i16* %788 monotonic, align 2
  %790 = or i16 %789, 1
  store atomic i16 %790, i16* %788 release, align 2
  %791 = bitcast %"class.blink::Member.33"* %774 to void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)***
  %792 = load void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)**, void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)*** %791, align 8
  %793 = getelementptr inbounds void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)*, void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)** %792, i64 8
  %794 = load void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)*, void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)** %793, align 8
  call void %794(%"class.blink::ListedElement"* %775, %"class.blink::FormData"* dereferenceable(56) %786) #10
  %795 = getelementptr inbounds i8, i8* %785, i64 32
  %796 = bitcast i8* %795 to %"class.blink::Member.716"**
  %797 = load %"class.blink::Member.716"*, %"class.blink::Member.716"** %796, align 8
  %798 = getelementptr inbounds i8, i8* %785, i64 44
  %799 = bitcast i8* %798 to i32*
  %800 = load i32, i32* %799, align 4
  %801 = zext i32 %800 to i64
  %802 = getelementptr inbounds %"class.blink::Member.716", %"class.blink::Member.716"* %797, i64 %801
  %803 = icmp eq i32 %800, 0
  br i1 %803, label %855, label %804

804:                                              ; preds = %784
  %805 = icmp eq %"class.blink::Member.33"* %766, %748
  br label %806

806:                                              ; preds = %851, %804
  %807 = phi %"class.blink::Member.716"* [ %797, %804 ], [ %853, %851 ]
  %808 = phi i8 [ %754, %804 ], [ %852, %851 ]
  %809 = load i32, i32* %734, align 4
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %822, label %811

811:                                              ; preds = %806
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 38, i8* %4, align 1
  %812 = load i32, i32* %733, align 8
  %813 = icmp eq i32 %809, %812
  br i1 %813, label %820, label %814, !prof !2

814:                                              ; preds = %811
  %815 = load i8*, i8** %732, align 8
  %816 = zext i32 %809 to i64
  %817 = getelementptr inbounds i8, i8* %815, i64 %816
  store i8 38, i8* %817, align 1
  %818 = load i32, i32* %734, align 4
  %819 = add i32 %818, 1
  store i32 %819, i32* %734, align 4
  br label %821

820:                                              ; preds = %811
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_(%"class.WTF::Vector.644"* nonnull %17, i8* nonnull dereferenceable(1) %4) #10
  br label %821

821:                                              ; preds = %820, %814
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br label %822

822:                                              ; preds = %821, %806
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %744) #10
  %823 = getelementptr inbounds %"class.blink::Member.716", %"class.blink::Member.716"* %807, i64 0, i32 0, i32 0
  %824 = load %"class.blink::FormData::Entry"*, %"class.blink::FormData::Entry"** %823, align 8
  %825 = getelementptr inbounds %"class.blink::FormData::Entry", %"class.blink::FormData::Entry"* %824, i64 0, i32 0
  call void @_ZNK5blink8FormData6EncodeERKN3WTF6StringE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.blink::FormData"* %786, %"class.WTF::String"* dereferenceable(8) %825) #10
  call void @_ZN5blink15FormDataEncoder22EncodeStringAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS0_4ModeE(%"class.WTF::Vector.644"* nonnull dereferenceable(16) %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 0) #10
  %826 = load i8, i8* %746, align 1
  %827 = icmp slt i8 %826, 0
  br i1 %827, label %828, label %830

828:                                              ; preds = %822
  %829 = load i8*, i8** %747, align 8
  call void @_ZdlPv(i8* %829) #11
  br label %830

830:                                              ; preds = %828, %822
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %744) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #10
  store i8 61, i8* %6, align 1
  %831 = load i32, i32* %734, align 4
  %832 = load i32, i32* %733, align 8
  %833 = icmp eq i32 %831, %832
  br i1 %833, label %840, label %834, !prof !2

834:                                              ; preds = %830
  %835 = load i8*, i8** %732, align 8
  %836 = zext i32 %831 to i64
  %837 = getelementptr inbounds i8, i8* %835, i64 %836
  store i8 61, i8* %837, align 1
  %838 = load i32, i32* %734, align 4
  %839 = add i32 %838, 1
  store i32 %839, i32* %734, align 4
  br label %841

840:                                              ; preds = %830
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_(%"class.WTF::Vector.644"* nonnull %17, i8* nonnull dereferenceable(1) %6) #10
  br label %841

841:                                              ; preds = %840, %834
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #10
  br i1 %805, label %842, label %843

842:                                              ; preds = %841
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.644"* nonnull %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 13) #10
  br label %851

843:                                              ; preds = %841
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %749) #10
  %844 = load %"class.blink::FormData::Entry"*, %"class.blink::FormData::Entry"** %823, align 8
  %845 = getelementptr inbounds %"class.blink::FormData::Entry", %"class.blink::FormData::Entry"* %844, i64 0, i32 1
  call void @_ZNK5blink8FormData6EncodeERKN3WTF6StringE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.blink::FormData"* %786, %"class.WTF::String"* dereferenceable(8) %845) #10
  call void @_ZN5blink15FormDataEncoder22EncodeStringAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS0_4ModeE(%"class.WTF::Vector.644"* nonnull dereferenceable(16) %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 0) #10
  %846 = load i8, i8* %751, align 1
  %847 = icmp slt i8 %846, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %843
  %849 = load i8*, i8** %752, align 8
  call void @_ZdlPv(i8* %849) #11
  br label %850

850:                                              ; preds = %848, %843
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %749) #10
  br label %851

851:                                              ; preds = %850, %842
  %852 = phi i8 [ 1, %842 ], [ %808, %850 ]
  %853 = getelementptr inbounds %"class.blink::Member.716", %"class.blink::Member.716"* %807, i64 1
  %854 = icmp eq %"class.blink::Member.716"* %853, %802
  br i1 %854, label %855, label %806

855:                                              ; preds = %851, %784, %773, %765, %759, %753
  %856 = phi i8 [ %754, %773 ], [ %754, %765 ], [ %754, %759 ], [ %754, %753 ], [ %754, %784 ], [ %852, %851 ]
  %857 = getelementptr inbounds %"class.blink::Member.29", %"class.blink::Member.29"* %755, i64 1
  %858 = icmp eq %"class.blink::Member.29"* %857, %741
  br i1 %858, label %859, label %753

859:                                              ; preds = %855, %728
  %860 = phi i8 [ 0, %728 ], [ %856, %855 ]
  %861 = and i8 %860, 1
  %862 = icmp eq i8 %861, 0
  br i1 %729, label %863, label %868

863:                                              ; preds = %859
  %864 = bitcast %"class.blink::HTMLFormControlElement"* %730 to void (%"class.blink::HTMLFormControlElement"*, i1)***
  %865 = load void (%"class.blink::HTMLFormControlElement"*, i1)**, void (%"class.blink::HTMLFormControlElement"*, i1)*** %864, align 8
  %866 = getelementptr inbounds void (%"class.blink::HTMLFormControlElement"*, i1)*, void (%"class.blink::HTMLFormControlElement"*, i1)** %865, i64 177
  %867 = load void (%"class.blink::HTMLFormControlElement"*, i1)*, void (%"class.blink::HTMLFormControlElement"*, i1)** %866, align 8
  call void %867(%"class.blink::HTMLFormControlElement"* nonnull %730, i1 zeroext false) #10
  br label %868

868:                                              ; preds = %863, %859
  br i1 %862, label %945, label %869

869:                                              ; preds = %868
  %870 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %870) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %870, i8 -86, i64 112, i1 false)
  %871 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %871) #10
  %872 = call %"class.WTF::StringImpl"* @_ZNK5blink15HTMLFormElement6actionEv(%"class.blink::HTMLFormElement"* %27) #10
  %873 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %872, %"class.WTF::StringImpl"** %873, align 8
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %18, %"class.WTF::String"* nonnull dereferenceable(8) %19) #10
  %874 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %873, align 8
  %875 = icmp eq %"class.WTF::StringImpl"* %874, null
  br i1 %875, label %889, label %876

876:                                              ; preds = %869
  %877 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %874, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %878 = load atomic i32, i32* %877 monotonic, align 4
  %879 = and i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %874, i64 0, i32 0
  %882 = load i32, i32* %881, align 4
  br i1 %880, label %883, label %885

883:                                              ; preds = %876
  %884 = add i32 %882, -1
  store i32 %884, i32* %881, align 4
  br label %885

885:                                              ; preds = %883, %876
  %886 = phi i32 [ %884, %883 ], [ %882, %876 ]
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %888, label %889

888:                                              ; preds = %885
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %874) #10
  br label %889

889:                                              ; preds = %869, %885, %888
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %871) #10
  %890 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.644"* nonnull dereferenceable(16) %17) #10
  %891 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %891) #10
  %892 = call %"class.WTF::StringImpl"* @_ZNK5blink15EncodedFormData15FlattenToStringEv(%"class.blink::EncodedFormData"* %890) #10
  %893 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %892, %"class.WTF::StringImpl"** %893, align 8
  call void @_ZN5blink4KURL8SetQueryERKN3WTF6StringE(%"class.blink::KURL"* nonnull %18, %"class.WTF::String"* nonnull dereferenceable(8) %20) #10
  %894 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %893, align 8
  %895 = icmp eq %"class.WTF::StringImpl"* %894, null
  br i1 %895, label %909, label %896

896:                                              ; preds = %889
  %897 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %894, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %898 = load atomic i32, i32* %897 monotonic, align 4
  %899 = and i32 %898, 2
  %900 = icmp eq i32 %899, 0
  %901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %894, i64 0, i32 0
  %902 = load i32, i32* %901, align 4
  br i1 %900, label %903, label %905

903:                                              ; preds = %896
  %904 = add i32 %902, -1
  store i32 %904, i32* %901, align 4
  br label %905

905:                                              ; preds = %903, %896
  %906 = phi i32 [ %904, %903 ], [ %902, %896 ]
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %908, label %909

908:                                              ; preds = %905
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %894) #10
  br label %909

909:                                              ; preds = %889, %905, %908
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %891) #10
  %910 = call dereferenceable(96) %"class.blink::WebURL"* @_ZN5blink6WebURLaSERKNS_4KURLE(%"class.blink::WebURL"* %22, %"class.blink::KURL"* nonnull dereferenceable(112) %18) #10
  %911 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %911) #10
  %912 = load i8*, i8** %108, align 8
  %913 = icmp eq i8* %912, null
  br i1 %913, label %916, label %914

914:                                              ; preds = %909
  %915 = call i64 @strlen(i8* nonnull %912) #12
  br label %916

916:                                              ; preds = %909, %914
  %917 = phi i64 [ %915, %914 ], [ 0, %909 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* %912, i64 %917) #10
  %918 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %26, %"class.WTF::String"* nonnull dereferenceable(8) %21) #10
  %919 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %920 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %919, align 8
  %921 = icmp eq %"class.WTF::StringImpl"* %920, null
  br i1 %921, label %935, label %922

922:                                              ; preds = %916
  %923 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %920, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %924 = load atomic i32, i32* %923 monotonic, align 4
  %925 = and i32 %924, 2
  %926 = icmp eq i32 %925, 0
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %920, i64 0, i32 0
  %928 = load i32, i32* %927, align 4
  br i1 %926, label %929, label %931

929:                                              ; preds = %922
  %930 = add i32 %928, -1
  store i32 %930, i32* %927, align 4
  br label %931

931:                                              ; preds = %929, %922
  %932 = phi i32 [ %930, %929 ], [ %928, %922 ]
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %934, label %935

934:                                              ; preds = %931
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %920) #10
  br label %935

935:                                              ; preds = %916, %931, %934
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %911) #10
  %936 = icmp eq %"class.blink::EncodedFormData"* %890, null
  br i1 %936, label %944, label %937

937:                                              ; preds = %935
  %938 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %890, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %938) #10
  %939 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %890, i64 0, i32 0, i32 0, i32 0, i32 0
  %940 = load i32, i32* %939, align 4
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %944

942:                                              ; preds = %937
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %890) #10
  %943 = bitcast %"class.blink::EncodedFormData"* %890 to i8*
  call void @free(i8* %943) #10
  br label %944

944:                                              ; preds = %935, %937, %942
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %870) #10
  br label %945

945:                                              ; preds = %868, %944
  %946 = load i8*, i8** %732, align 8
  %947 = icmp eq i8* %946, null
  br i1 %947, label %953, label %948, !prof !3

948:                                              ; preds = %945
  %949 = load i32, i32* %734, align 4
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %952, label %951, !prof !2

951:                                              ; preds = %948
  store i32 0, i32* %734, align 4
  br label %952

952:                                              ; preds = %951, %948
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %946) #10
  store i8* null, i8** %732, align 8
  br label %953

953:                                              ; preds = %945, %952
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %731) #10
  br label %954

954:                                              ; preds = %463, %674, %653, %663, %626, %632, %414, %462, %294, %299, %549, %680, %953
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  br label %955

955:                                              ; preds = %102, %954
  ret void
}

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::HTMLFormElement"* @_ZNK5blink14WebFormElementcvPNS_15HTMLFormElementEEv(%"class.blink::WebFormElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLInputElement"* @_ZNK5blink15WebInputElementcvPNS_16HTMLInputElementEEv(%"class.blink::WebInputElement"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.WTF::StringImpl"* @_ZNK5blink15HTMLFormElement6actionEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateERKN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.644"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink4KURL8SetQueryERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15EncodedFormData15FlattenToStringEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #1

declare dereferenceable(96) %"class.blink::WebURL"* @_ZN5blink6WebURLaSERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.675"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLOptionElement8SelectedEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"*, %"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement24IsSuccessfulSubmitButtonEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink15FormDataEncoder22EncodeStringAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS0_4ModeE(%"class.WTF::Vector.644"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

declare void @_ZNK5blink8FormData6EncodeERKN3WTF6StringE(%"class.std::__1::basic_string"* sret, %"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.644"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPc(%"class.WTF::Vector.644"* %0, i32 %9, i8* %1) #10
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi i8* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %34 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = load i32, i32* %7, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = icmp ne i8* %38, null
  %40 = icmp ne i8* %18, null
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %44, !prof !3

42:                                               ; preds = %33
  %43 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* nonnull align 1 %18, i64 %43, i1 false) #10
  br label %44

44:                                               ; preds = %33, %42
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN5blink8FormDataC1ERKN3WTF12TextEncodingE(%"class.blink::FormData"*, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIcEEvOT_(%"class.WTF::Vector.644"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPc(%"class.WTF::Vector.644"* %0, i32 %5, i8* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = load i8, i8* %6, align 1
  store i8 %12, i8* %11, align 1
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPc(%"class.WTF::Vector.644"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ugt i8* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = icmp ugt i8* %11, %2
  br i1 %12, label %47, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %84, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i8* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %27) #10
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.644"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %84

33:                                               ; preds = %24
  %34 = load i8*, i8** %4, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %43, !prof !3

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %41, i1 false) #10
  %42 = load i8*, i8** %4, align 8
  br label %43

43:                                               ; preds = %38, %33
  %44 = phi i8* [ %34, %33 ], [ %42, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %44) #10
  %45 = bitcast %"class.WTF::Vector.644"* %0 to i64*
  store atomic i64 %29, i64* %45 monotonic, align 8
  %46 = trunc i64 %27 to i32
  store i32 %46, i32* %14, align 8
  br label %84

47:                                               ; preds = %7
  %48 = ptrtoint i8* %2 to i64
  %49 = ptrtoint i8* %5 to i64
  %50 = sub i64 %48, %49
  %51 = getelementptr inbounds %"class.WTF::Vector.644", %"class.WTF::Vector.644"* %0, i64 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = lshr i32 %52, 2
  %54 = add i32 %52, 1
  %55 = add i32 %54, %53
  %56 = icmp ugt i32 %55, 4
  %57 = select i1 %56, i32 %55, i32 4
  %58 = icmp ugt i32 %57, %1
  %59 = select i1 %58, i32 %57, i32 %1
  %60 = icmp ult i32 %52, %59
  br i1 %60, label %61, label %81, !prof !3

61:                                               ; preds = %47
  %62 = icmp eq i8* %5, null
  %63 = zext i32 %59 to i64
  %64 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %63) #10
  %65 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %64) #10
  %66 = ptrtoint i8* %65 to i64
  br i1 %62, label %78, label %67

67:                                               ; preds = %61
  %68 = load i8*, i8** %4, align 8
  %69 = icmp ne i8* %65, null
  %70 = icmp ne i8* %68, null
  %71 = and i1 %69, %70
  br i1 %71, label %72, label %76, !prof !3

72:                                               ; preds = %67
  %73 = load i32, i32* %8, align 4
  %74 = zext i32 %73 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* nonnull align 1 %68, i64 %74, i1 false) #10
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %72, %67
  %77 = phi i8* [ %68, %67 ], [ %75, %72 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #10
  br label %78

78:                                               ; preds = %61, %76
  %79 = bitcast %"class.WTF::Vector.644"* %0 to i64*
  store atomic i64 %66, i64* %79 monotonic, align 8
  %80 = trunc i64 %64 to i32
  store i32 %80, i32* %51, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %5, %47 ], [ %65, %78 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 %50
  br label %84

84:                                               ; preds = %43, %30, %13, %81
  %85 = phi i8* [ %83, %81 ], [ %2, %13 ], [ %2, %30 ], [ %2, %43 ]
  ret i8* %85
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
