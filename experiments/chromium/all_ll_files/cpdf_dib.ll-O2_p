; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_dib.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_dib.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_DIB = type { %class.CFX_DIBBase, %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.153", %"class.fxcrt::RetainPtr.169", %"class.fxcrt::RetainPtr.175", %"class.fxcrt::RetainPtr.182", i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.208", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr.215", %"class.fxcrt::RetainPtr.175", %"class.std::__1::unique_ptr.221", %"struct.CPDF_DIB::JpxSMaskInlineData", %"class.std::__1::unique_ptr.233" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.25", %"class.fxcrt::RetainPtr.42", %"class.fxcrt::RetainPtr.42", %"class.std::__1::vector.109", i8, i8, i32, i32, %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::vector.140", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.147" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.19" }
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.361" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.364", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.379", [4 x i8] }>
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { float }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.32", %"class.fxcrt::UnownedPtr.38", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.39", i64, %"class.fxcrt::RetainPtr.71", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.83", %"class.std::__1::map.89", %"class.std::__1::set.98", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.38" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.42", %"class.std::__1::map.59" }
%"class.std::__1::map.59" = type { %"class.std::__1::__tree.60" }
%"class.std::__1::__tree.60" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.fxcrt::RetainPtr.71" = type { %"class.std::__1::unique_ptr.72" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.77" }
%"class.fxcrt::RetainPtr.77" = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.98" = type { %"class.std::__1::__tree.99" }
%"class.std::__1::__tree.99" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.100", %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.fxcrt::RetainPtr.42" = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.46" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.111" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { i32*, i32*, %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.146" }
%"class.fxcrt::UnownedPtr.146" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.153" = type { %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.42", %"class.std::__1::unique_ptr.157", %"class.fxcrt::RetainPtr.161" }
%"class.fxcrt::RetainPtr.161" = type { %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::RetainPtr.169" = type { %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.182" = type { %"class.std::__1::unique_ptr.183" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.186", %"class.fxcrt::RetainPtr.187", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.186" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.187" = type { %"class.std::__1::unique_ptr.188" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %class.CPDF_Array* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.191", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.fxcrt::RetainPtr.193"*, %"class.fxcrt::RetainPtr.193"*, %"class.std::__1::__compressed_pair.199" }
%"class.fxcrt::RetainPtr.193" = type { %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.fxcrt::RetainPtr.193"* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA*, %"class.std::__1::__compressed_pair.210" }
%struct.DIB_COMP_DATA = type { float, float, i32, i32 }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %struct.DIB_COMP_DATA* }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { i8* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.157", %"class.fxcrt::UnownedPtr.179" }
%"class.fxcrt::UnownedPtr.179" = type { i8* }
%"class.fxcrt::RetainPtr.215" = type { %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %class.CPDF_DIB* }
%"class.fxcrt::RetainPtr.175" = type { %"class.std::__1::unique_ptr.176" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.169", %"class.fxcrt::RetainPtr.153" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.fxcodec::ScanlineDecoder"* }
%"class.fxcodec::ScanlineDecoder" = type { i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i32, i8* }
%"struct.CPDF_DIB::JpxSMaskInlineData" = type { i32, i32, %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { i8*, i8*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.fxcodec::Jbig2Context"* }
%"class.fxcodec::Jbig2Context" = type { i32, i32, i32, i32, %"class.pdfium::span", %"class.pdfium::span", i8*, i32, %"class.std::__1::unique_ptr.237" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.236", i64 }
%"class.fxcrt::UnownedPtr.236" = type { i8* }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %class.CJBig2_Context* }
%class.CJBig2_Context = type opaque
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector.247" }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"*, %"class.std::__1::__compressed_pair.250" }
%"struct.std::__1::pair.249" = type { %"class.fxcrt::ByteString", %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::pair.249"* }
%class.CPDF_DocPageData = type { %"class.CPDF_Document::PageDataIface", %"class.CPDF_Font::FormFactoryIface", i8, %"class.std::__1::map.255", %"class.std::__1::map.264", %"class.std::__1::map.275", %"class.std::__1::map.286", %"class.std::__1::map.295", %"class.std::__1::map.304", %"class.std::__1::map.313" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.255" = type { %"class.std::__1::__tree.256" }
%"class.std::__1::__tree.256" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.264" = type { %"class.std::__1::__tree.265" }
%"class.std::__1::__tree.265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.275" = type { %"class.std::__1::__tree.276" }
%"class.std::__1::__tree.276" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.286" = type { %"class.std::__1::__tree.287" }
%"class.std::__1::__tree.287" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.304" = type { %"class.std::__1::__tree.305" }
%"class.std::__1::__tree.305" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.306", %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.313" = type { %"class.std::__1::__tree.314" }
%"class.std::__1::__tree.314" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.pdfium::span.246" = type { %"class.fxcrt::UnownedPtr.179", i64 }
%"class.pdfium::span.357" = type { %"class.fxcrt::UnownedPtr.358", i64 }
%"class.fxcrt::UnownedPtr.358" = type { float* }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { float*, float*, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CPDF_Name = type { %class.CPDF_Object, %"class.fxcrt::ByteString" }
%class.CPDF_Number = type { %class.CPDF_Object, %class.FX_Number }
%class.FX_Number = type { i8, i8, %union.anon.343 }
%union.anon.343 = type { i32 }
%class.PauseIndicatorIface = type opaque
%"class.fxcodec::CJPX_Decoder" = type <{ i32, [4 x i8], %"class.pdfium::span", %"class.fxcrt::UnownedPtr.332", %"class.fxcrt::UnownedPtr.333", %"class.std::__1::unique_ptr.334", %"class.fxcrt::UnownedPtr.333", %struct.opj_dparameters, [4 x i8] }>
%"class.fxcrt::UnownedPtr.332" = type { %struct.opj_image* }
%struct.opj_image = type { i32, i32, i32, i32, i32, i32, %struct.opj_image_comp*, i8*, i32 }
%struct.opj_image_comp = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i16 }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.fxcodec::DecodeData"* }
%"struct.fxcodec::DecodeData" = type opaque
%"class.fxcrt::UnownedPtr.333" = type { i8** }
%struct.opj_dparameters = type { i32, i32, [4096 x i8], [4096 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.pdfium::Optional.324" = type { %"class.pdfium::internal::OptionalBase.325" }
%"class.pdfium::internal::OptionalBase.325" = type { %"struct.pdfium::internal::OptionalStorage.326" }
%"struct.pdfium::internal::OptionalStorage.326" = type { %"struct.pdfium::internal::OptionalStorageBase.327" }
%"struct.pdfium::internal::OptionalStorageBase.327" = type { i8, %union.anon.328 }
%union.anon.328 = type { %"struct.fxcodec::JpegModule::JpegImageInfo" }
%"struct.fxcodec::JpegModule::JpegImageInfo" = type { i32, i32, i32, i32, i8 }
%"class.fxcrt::RetainPtr.397" = type { %"class.std::__1::unique_ptr.398" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %class.CPDF_Name* }

$_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA8_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA6_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA11_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZN15CPDF_Dictionary9SetNewForI11CPDF_NumberJRiEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS5_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZN15CPDF_Dictionary9SetNewForI11CPDF_NumberJiEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZNSt3__16vectorI13DIB_COMP_DATANS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA8_KcEEENS2_9RetainPtrIT_EEDpOT0_ = comdat any

$_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA6_KcEEENS2_9RetainPtrIT_EEDpOT0_ = comdat any

$_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA11_KcEEENS2_9RetainPtrIT_EEDpOT0_ = comdat any

@_ZTV8CPDF_DIB = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_DIB*)* @_ZN8CPDF_DIBD2Ev to i8*), i8* bitcast (void (%class.CPDF_DIB*)* @_ZN8CPDF_DIBD0Ev to i8*), i8* bitcast (i8* (%class.CPDF_DIB*)* @_ZNK8CPDF_DIB9GetBufferEv to i8*), i8* bitcast (i8* (%class.CPDF_DIB*, i32)* @_ZNK8CPDF_DIB11GetScanlineEi to i8*), i8* bitcast (i1 (%class.CPDF_DIB*, i32, %class.PauseIndicatorIface*)* @_ZNK8CPDF_DIB14SkipToScanlineEiP19PauseIndicatorIface to i8*)] }, align 8
@.str = private unnamed_addr constant [6 x i8] c"Width\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Height\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"JPXDecode\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"JBIG2Decode\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"JBIG2Globals\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"BitsPerComponent\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"ImageMask\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"ColorSpace\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"Decode\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"DeviceGray\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"DeviceRGB\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"DeviceCMYK\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"SMask\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"Mask\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"CCITTFaxDecode\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"FlateDecode\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"RunLengthDecode\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"DCTDecode\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"ColorTransform\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"SMaskInData\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"XObject\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"Subtype\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"Image\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"Matte\00", align 1

@_ZN8CPDF_DIBC1Ev = hidden unnamed_addr alias void (%class.CPDF_DIB*), void (%class.CPDF_DIB*)* @_ZN8CPDF_DIBC2Ev
@_ZN8CPDF_DIBD1Ev = hidden unnamed_addr alias void (%class.CPDF_DIB*), void (%class.CPDF_DIB*)* @_ZN8CPDF_DIBD2Ev
@_ZN8CPDF_DIB18JpxSMaskInlineDataC1Ev = hidden unnamed_addr alias void (%"struct.CPDF_DIB::JpxSMaskInlineData"*), void (%"struct.CPDF_DIB::JpxSMaskInlineData"*)* @_ZN8CPDF_DIB18JpxSMaskInlineDataC2Ev
@_ZN8CPDF_DIB18JpxSMaskInlineDataD1Ev = hidden unnamed_addr alias void (%"struct.CPDF_DIB::JpxSMaskInlineData"*), void (%"struct.CPDF_DIB::JpxSMaskInlineData"*)* @_ZN8CPDF_DIB18JpxSMaskInlineDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIBC2Ev(%class.CPDF_DIB*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0
  tail call void @_ZN11CFX_DIBBaseC2Ev(%class.CFX_DIBBase* %2) #12
  %3 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CPDF_DIB, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  %6 = bitcast %class.CPDF_Document** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 66, i1 false)
  store i8 1, i8* %5, align 2
  %7 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 16
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %10 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 27, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 0, i64 75, i1 false)
  %11 = bitcast %"class.std::__1::vector.227"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN11CFX_DIBBaseC2Ev(%class.CFX_DIBBase*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIBD2Ev(%class.CPDF_DIB*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CPDF_DIB, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %4 = load %"class.fxcodec::Jbig2Context"*, %"class.fxcodec::Jbig2Context"** %3, align 8
  store %"class.fxcodec::Jbig2Context"* null, %"class.fxcodec::Jbig2Context"** %3, align 8
  %5 = icmp eq %"class.fxcodec::Jbig2Context"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN7fxcodec12Jbig2ContextD1Ev(%"class.fxcodec::Jbig2Context"* nonnull %4) #12
  %7 = bitcast %"class.fxcodec::Jbig2Context"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 27, i32 2, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = ptrtoint i8* %10 to i64
  %14 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 27, i32 2, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %10) #12
  br label %16

16:                                               ; preds = %8, %12
  %17 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %18 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %17, align 8
  store %"class.fxcodec::ScanlineDecoder"* null, %"class.fxcodec::ScanlineDecoder"** %17, align 8
  %19 = icmp eq %"class.fxcodec::ScanlineDecoder"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.fxcodec::ScanlineDecoder"* %18 to void (%"class.fxcodec::ScanlineDecoder"*)***
  %22 = load void (%"class.fxcodec::ScanlineDecoder"*)**, void (%"class.fxcodec::ScanlineDecoder"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %22, i64 1
  %24 = load void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %23, align 8
  tail call void %24(%"class.fxcodec::ScanlineDecoder"* nonnull %18) #12
  br label %25

25:                                               ; preds = %16, %20
  %26 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %27 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %26, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %26, align 8
  %28 = icmp eq %class.CPDF_StreamAcc* %27, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %27, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %27, i64 0, i32 0
  %36 = bitcast %class.CPDF_StreamAcc* %27 to void (%"class.fxcrt::Retainable"*)***
  %37 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, i64 1
  %39 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, align 8
  tail call void %39(%"class.fxcrt::Retainable"* nonnull %35) #12
  br label %40

40:                                               ; preds = %25, %29, %34
  %41 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %42 = load %class.CPDF_DIB*, %class.CPDF_DIB** %41, align 8
  store %class.CPDF_DIB* null, %class.CPDF_DIB** %41, align 8
  %43 = icmp eq %class.CPDF_DIB* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %42, i64 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = add nsw i64 %46, -1
  store i64 %47, i64* %45, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %42, i64 0, i32 0, i32 0
  %51 = bitcast %class.CPDF_DIB* %42 to void (%"class.fxcrt::Retainable"*)***
  %52 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %52, i64 1
  %54 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %53, align 8
  tail call void %54(%"class.fxcrt::Retainable"* nonnull %50) #12
  br label %55

55:                                               ; preds = %40, %44, %49
  %56 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %57 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %56, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %56, align 8
  %58 = icmp eq %class.CFX_DIBitmap* %57, null
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %57, i64 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add nsw i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %57, i64 0, i32 0, i32 0
  %66 = bitcast %class.CFX_DIBitmap* %57 to void (%"class.fxcrt::Retainable"*)***
  %67 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, i64 1
  %69 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %68, align 8
  tail call void %69(%"class.fxcrt::Retainable"* nonnull %65) #12
  br label %70

70:                                               ; preds = %55, %59, %64
  %71 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  store i8* null, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %70
  tail call void @_Z7FX_FreePv(i8* nonnull %72) #12
  br label %75

75:                                               ; preds = %70, %74
  %76 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  store i8* null, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void @_Z7FX_FreePv(i8* nonnull %77) #12
  br label %80

80:                                               ; preds = %75, %79
  %81 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  %82 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %81, align 8
  %83 = icmp eq %struct.DIB_COMP_DATA* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %struct.DIB_COMP_DATA* %82 to i64
  %86 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 1
  %87 = bitcast %struct.DIB_COMP_DATA** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast %struct.DIB_COMP_DATA* %82 to i8*
  tail call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %80, %84
  %90 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %91 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %90, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %90, align 8
  %92 = icmp eq %class.CPDF_ColorSpace* %91, null
  br i1 %92, label %104, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %91, i64 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = add nsw i64 %95, -1
  store i64 %96, i64* %94, align 8
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %93
  %99 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %91, i64 0, i32 0
  %100 = bitcast %class.CPDF_ColorSpace* %91 to void (%"class.fxcrt::Retainable"*)***
  %101 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %101, i64 1
  %103 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %102, align 8
  tail call void %103(%"class.fxcrt::Retainable"* nonnull %99) #12
  br label %104

104:                                              ; preds = %89, %93, %98
  %105 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %106 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %105, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %105, align 8
  %107 = icmp eq %class.CPDF_StreamAcc* %106, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %106, i64 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = add nsw i64 %110, -1
  store i64 %111, i64* %109, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %108
  %114 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %106, i64 0, i32 0
  %115 = bitcast %class.CPDF_StreamAcc* %106 to void (%"class.fxcrt::Retainable"*)***
  %116 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %116, i64 1
  %118 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %117, align 8
  tail call void %118(%"class.fxcrt::Retainable"* nonnull %114) #12
  br label %119

119:                                              ; preds = %104, %108, %113
  %120 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %121 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %120, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %120, align 8
  %122 = icmp eq %class.CPDF_Dictionary* %121, null
  br i1 %122, label %134, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %121, i64 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = add nsw i64 %125, -1
  store i64 %126, i64* %124, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %123
  %129 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %121, i64 0, i32 0, i32 0
  %130 = bitcast %class.CPDF_Dictionary* %121 to void (%"class.fxcrt::Retainable"*)***
  %131 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %131, i64 1
  %133 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %132, align 8
  tail call void %133(%"class.fxcrt::Retainable"* nonnull %129) #12
  br label %134

134:                                              ; preds = %119, %123, %128
  %135 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %136 = load %class.CPDF_Stream*, %class.CPDF_Stream** %135, align 8
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %135, align 8
  %137 = icmp eq %class.CPDF_Stream* %136, null
  br i1 %137, label %149, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %136, i64 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = add nsw i64 %140, -1
  store i64 %141, i64* %139, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %138
  %144 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %136, i64 0, i32 0, i32 0
  %145 = bitcast %class.CPDF_Stream* %136 to void (%"class.fxcrt::Retainable"*)***
  %146 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, i64 1
  %148 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %147, align 8
  tail call void %148(%"class.fxcrt::Retainable"* nonnull %144) #12
  br label %149

149:                                              ; preds = %134, %138, %143
  %150 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0
  tail call void @_ZN11CFX_DIBBaseD2Ev(%class.CFX_DIBBase* %150) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11CFX_DIBBaseD2Ev(%class.CFX_DIBBase*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIBD0Ev(%class.CPDF_DIB*) unnamed_addr #0 align 2 {
  tail call void @_ZN8CPDF_DIBD2Ev(%class.CPDF_DIB* %0) #12
  %2 = bitcast %class.CPDF_DIB* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIB18JpxSMaskInlineDataC2Ev(%"struct.CPDF_DIB::JpxSMaskInlineData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CPDF_DIB::JpxSMaskInlineData", %"struct.CPDF_DIB::JpxSMaskInlineData"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector.227"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIB18JpxSMaskInlineDataD2Ev(%"struct.CPDF_DIB::JpxSMaskInlineData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.CPDF_DIB::JpxSMaskInlineData", %"struct.CPDF_DIB::JpxSMaskInlineData"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"struct.CPDF_DIB::JpxSMaskInlineData", %"struct.CPDF_DIB::JpxSMaskInlineData"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %3) #12
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPDF_DIB4LoadEP13CPDF_DocumentPK11CPDF_Stream(%class.CPDF_DIB*, %class.CPDF_Document*, %class.CPDF_Stream*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = icmp eq %class.CPDF_Stream* %2, null
  br i1 %6, label %198, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 1, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %8, align 8
  %9 = tail call %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream* nonnull %2) #12
  %10 = icmp eq %class.CPDF_Dictionary* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %9, i64 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, 1
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %11, %7
  %16 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %16, align 8
  store %class.CPDF_Dictionary* %9, %class.CPDF_Dictionary** %16, align 8
  %18 = icmp eq %class.CPDF_Dictionary* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %17, i64 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, -1
  store i64 %22, i64* %20, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %17, i64 0, i32 0, i32 0
  %26 = bitcast %class.CPDF_Dictionary* %17 to void (%"class.fxcrt::Retainable"*)***
  %27 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, i64 1
  %29 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, align 8
  tail call void %29(%"class.fxcrt::Retainable"* nonnull %25) #12
  br label %30

30:                                               ; preds = %24, %19
  %31 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %16, align 8
  br label %32

32:                                               ; preds = %30, %15
  %33 = phi %class.CPDF_Dictionary* [ %31, %30 ], [ %9, %15 ]
  %34 = icmp eq %class.CPDF_Dictionary* %33, null
  br i1 %34, label %198, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %2, i64 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %40 = load %class.CPDF_Stream*, %class.CPDF_Stream** %39, align 8
  store %class.CPDF_Stream* %2, %class.CPDF_Stream** %39, align 8
  %41 = icmp eq %class.CPDF_Stream* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %40, i64 0, i32 0, i32 0
  %49 = bitcast %class.CPDF_Stream* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  tail call void %52(%"class.fxcrt::Retainable"* nonnull %48) #12
  br label %53

53:                                               ; preds = %35, %42, %47
  %54 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %16, align 8
  %55 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #12
  %56 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %54, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #12
  %57 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  store i32 %56, i32* %57, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %58 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %16, align 8
  %59 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12
  %60 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %58, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #12
  %61 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  store i32 %60, i32* %61, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  %62 = load i32, i32* %57, align 4
  %63 = add i32 %62, -1
  %64 = icmp ult i32 %63, 131071
  br i1 %64, label %65, label %198

65:                                               ; preds = %53
  %66 = load i32, i32* %61, align 8
  %67 = add i32 %66, -1
  %68 = icmp ult i32 %67, 131071
  br i1 %68, label %69, label %198

69:                                               ; preds = %65
  %70 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 10
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 13
  store i8 0, i8* %71, align 1
  %72 = call zeroext i1 @_ZN8CPDF_DIB13LoadColorInfoEPK15CPDF_DictionaryS2_(%class.CPDF_DIB* %0, %class.CPDF_Dictionary* null, %class.CPDF_Dictionary* null)
  br i1 %72, label %73, label %198

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 16
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %78 = load i32, i32* %77, align 8
  br i1 %76, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %81 = load i32, i32* %80, align 8
  br label %88

82:                                               ; preds = %73
  %83 = icmp eq i32 %78, 0
  br i1 %83, label %198, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %198, label %88

88:                                               ; preds = %79, %84
  %89 = phi i32 [ %81, %79 ], [ %86, %84 ]
  %90 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %91 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %92 = load i32, i32* %57, align 4
  %93 = call i64 @_ZN7fxcodec15CalculatePitch8Ejji(i32 %78, i32 %89, i32 %92) #12
  %94 = load i32, i32* %61, align 8
  %95 = trunc i64 %93 to i8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %198, label %97

97:                                               ; preds = %88
  %98 = lshr i64 %93, 32
  %99 = trunc i64 %98 to i32
  %100 = icmp slt i32 %94, 0
  %101 = sub i32 0, %94
  %102 = select i1 %100, i32 %101, i32 %94
  %103 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %102, i32 %99) #12
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = icmp ne i32 %105, 0
  %107 = and i1 %100, %106
  %108 = or i1 %104, %107
  %109 = sub i32 0, %105
  %110 = select i1 %100, i32 %109, i32 %105
  br i1 %108, label %198, label %111

111:                                              ; preds = %97
  %112 = call i8* @_Znwm(i64 64) #13, !noalias !3
  %113 = bitcast i8* %112 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %113, %class.CPDF_Stream* nonnull %2) #12, !noalias !3
  %114 = ptrtoint i8* %112 to i64
  %115 = getelementptr inbounds i8, i8* %112, i64 8
  %116 = bitcast i8* %115 to i64*
  %117 = load i64, i64* %116, align 8, !noalias !3
  %118 = add nsw i64 %117, 1
  store i64 %118, i64* %116, align 8, !noalias !3
  %119 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 4
  %120 = getelementptr inbounds %"class.fxcrt::RetainPtr.175", %"class.fxcrt::RetainPtr.175"* %119, i64 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %120, align 8
  %122 = bitcast %"class.fxcrt::RetainPtr.175"* %119 to i64*
  store i64 %114, i64* %122, align 8
  %123 = icmp eq %class.CPDF_StreamAcc* %121, null
  br i1 %123, label %135, label %124

124:                                              ; preds = %111
  %125 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %121, i64 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = add nsw i64 %126, -1
  store i64 %127, i64* %125, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %135

129:                                              ; preds = %124
  %130 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %121, i64 0, i32 0
  %131 = bitcast %class.CPDF_StreamAcc* %121 to void (%"class.fxcrt::Retainable"*)***
  %132 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %132, i64 1
  %134 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %133, align 8
  call void %134(%"class.fxcrt::Retainable"* nonnull %130) #12
  br label %135

135:                                              ; preds = %111, %124, %129
  %136 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %120, align 8
  call void @_ZN14CPDF_StreamAcc19LoadAllDataImageAccEj(%class.CPDF_StreamAcc* %136, i32 %110) #12
  %137 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %120, align 8
  %138 = call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %137) #12
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %198, label %140

140:                                              ; preds = %135
  %141 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %120, align 8
  %142 = call i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc* %141) #12
  %143 = icmp eq i8* %142, null
  br i1 %143, label %198, label %144

144:                                              ; preds = %140
  %145 = call zeroext i8 @_ZN8CPDF_DIB13CreateDecoderEv(%class.CPDF_DIB* %0)
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %198, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  %149 = load i8, i8* %148, align 1, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %147
  store i32 1, i32* %90, align 8
  store i32 1, i32* %91, align 8
  br label %161

152:                                              ; preds = %147
  %153 = load i32, i32* %90, align 8
  %154 = load i32, i32* %91, align 8
  %155 = mul i32 %154, %153
  %156 = icmp eq i32 %155, 1
  %157 = icmp ult i32 %155, 9
  %158 = select i1 %157, i32 8, i32 24
  %159 = select i1 %156, i32 1, i32 %158
  %160 = call zeroext i16 @_Z13MakeRGBFormati(i32 %159) #12
  br label %161

161:                                              ; preds = %152, %151
  %162 = phi i16 [ %160, %152 ], [ 257, %151 ]
  %163 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 1
  store i16 %162, i16* %163, align 8
  %164 = and i16 %162, 255
  %165 = zext i16 %164 to i32
  %166 = load i32, i32* %57, align 4
  %167 = call i64 @_ZN7fxcodec16CalculatePitch32Eii(i32 %165, i32 %166) #12
  %168 = trunc i64 %167 to i8
  %169 = lshr i64 %167, 32
  %170 = trunc i64 %169 to i32
  %171 = icmp eq i8 %168, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %161
  %173 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %169, i64 1) #12
  %174 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  store i8* %173, i8** %174, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %178, label %177

177:                                              ; preds = %172
  call void @_Z7FX_FreePv(i8* nonnull %175) #12
  br label %178

178:                                              ; preds = %172, %177
  call void @_ZN8CPDF_DIB11LoadPaletteEv(%class.CPDF_DIB* %0)
  %179 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %180 = load i8, i8* %179, align 1, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %195, label %182

182:                                              ; preds = %178
  store i16 544, i16* %163, align 8
  %183 = load i32, i32* %57, align 4
  %184 = call i64 @_ZN7fxcodec16CalculatePitch32Eii(i32 32, i32 %183) #12
  %185 = trunc i64 %184 to i8
  %186 = lshr i64 %184, 32
  %187 = trunc i64 %186 to i32
  %188 = icmp eq i8 %185, 0
  br i1 %188, label %198, label %189

189:                                              ; preds = %182
  %190 = call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %186, i64 1) #12
  %191 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  store i8* %190, i8** %191, align 8
  %193 = icmp eq i8* %192, null
  br i1 %193, label %195, label %194

194:                                              ; preds = %189
  call void @_Z7FX_FreePv(i8* nonnull %192) #12
  br label %195

195:                                              ; preds = %178, %189, %194
  %196 = phi i32 [ %170, %178 ], [ %187, %189 ], [ %187, %194 ]
  %197 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 4
  store i32 %196, i32* %197, align 4
  br label %198

198:                                              ; preds = %97, %88, %182, %161, %32, %140, %135, %144, %195, %82, %84, %69, %53, %65, %3
  %199 = phi i1 [ false, %3 ], [ false, %32 ], [ false, %65 ], [ false, %53 ], [ false, %69 ], [ false, %84 ], [ false, %82 ], [ false, %97 ], [ false, %140 ], [ false, %135 ], [ false, %144 ], [ true, %195 ], [ false, %161 ], [ false, %182 ], [ false, %88 ]
  ret i1 %199
}

declare %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream*) unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPDF_DIB13LoadColorInfoEPK15CPDF_DictionaryS2_(%class.CPDF_DIB*, %class.CPDF_Dictionary*, %class.CPDF_Dictionary*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.pdfium::Optional", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.182", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.182", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %15, align 8
  call void @_Z15GetDecoderArrayPK15CPDF_Dictionary(%"class.pdfium::Optional"* nonnull sret %4, %class.CPDF_Dictionary* %16) #12
  %17 = load i8, i8* %14, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %256, label %19

19:                                               ; preds = %3
  %20 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %15, align 8
  %21 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  %22 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %20, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #12
  %23 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 7
  store i32 %22, i32* %23, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %24, 17
  br i1 %25, label %26, label %232

26:                                               ; preds = %19
  %27 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %15, align 8
  %28 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #12
  %29 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %27, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #12
  %30 = icmp eq i32 %29, 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  %31 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  br i1 %30, label %34, label %32

32:                                               ; preds = %26
  store i8 1, i8* %31, align 1
  %33 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  br label %60

34:                                               ; preds = %26
  %35 = load i8, i8* %31, align 1, !range !2
  %36 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  %37 = icmp eq i8 %35, 0
  br i1 %37, label %38, label %60

38:                                               ; preds = %34
  %39 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %15, align 8
  %40 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)) #12
  %41 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %39, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br i1 %41, label %75, label %42

42:                                               ; preds = %38
  %43 = load i8, i8* %36, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %60

45:                                               ; preds = %42
  %46 = load i8, i8* %14, align 8, !range !2
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %49, label %48, !prof !6

48:                                               ; preds = %45
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !7
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !8
  unreachable

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"** %50, align 8
  %52 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %53 = load %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"** %52, align 8
  %54 = icmp eq %"struct.std::__1::pair.249"* %51, %53
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.std::__1::pair.249", %"struct.std::__1::pair.249"* %53, i64 -1, i32 0
  %57 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 16
  store i8 0, i8* %59, align 4
  br label %232

60:                                               ; preds = %32, %34, %55, %42, %49
  %61 = phi i8* [ %33, %32 ], [ %36, %34 ], [ %36, %55 ], [ %36, %42 ], [ %36, %49 ]
  store i8 1, i8* %61, align 1
  %62 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  store i32 1, i32* %63, align 8
  %64 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %15, align 8
  %65 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)) #12
  %66 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %64, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  %67 = icmp eq %class.CPDF_Array* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %60
  %69 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %66, i64 0) #12
  %70 = icmp eq i32 %69, 0
  %71 = zext i1 %70 to i8
  br label %72

72:                                               ; preds = %60, %68
  %73 = phi i8 [ 1, %60 ], [ %71, %68 ]
  %74 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  store i8 %73, i8* %74, align 2
  br label %232

75:                                               ; preds = %38
  %76 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %15, align 8
  %77 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)) #12
  %78 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %76, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #12
  %79 = icmp eq %class.CPDF_Object* %78, null
  br i1 %79, label %232, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 1, i32 0
  %82 = load %class.CPDF_Document*, %class.CPDF_Document** %81, align 8
  %83 = call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %82) #12
  %84 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %84, label %121, label %85

85:                                               ; preds = %80
  %86 = bitcast %"class.fxcrt::RetainPtr.182"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #12
  call void @_ZN16CPDF_DocPageData13GetColorSpaceEPK11CPDF_ObjectPK15CPDF_Dictionary(%"class.fxcrt::RetainPtr.182"* nonnull sret %10, %class.CPDF_DocPageData* %83, %class.CPDF_Object* nonnull %78, %class.CPDF_Dictionary* nonnull %1) #12
  %87 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5
  %88 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.fxcrt::RetainPtr.182"* %10 to i64*
  %90 = load i64, i64* %89, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %88, align 8
  %91 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %91, align 8
  %93 = bitcast %"class.fxcrt::RetainPtr.182"* %87 to i64*
  store i64 %90, i64* %93, align 8
  %94 = icmp eq %class.CPDF_ColorSpace* %92, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %85
  %96 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %92, i64 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add nsw i64 %97, -1
  store i64 %98, i64* %96, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %85, %95
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %88, align 8
  br label %120

101:                                              ; preds = %95
  %102 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %92, i64 0, i32 0
  %103 = bitcast %class.CPDF_ColorSpace* %92 to void (%"class.fxcrt::Retainable"*)***
  %104 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, i64 1
  %106 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %105, align 8
  call void %106(%"class.fxcrt::Retainable"* nonnull %102) #12
  %107 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %88, align 8
  %108 = bitcast %class.CPDF_ColorSpace* %107 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %88, align 8
  %109 = icmp eq %class.CPDF_ColorSpace* %107, null
  br i1 %109, label %120, label %110

110:                                              ; preds = %101
  %111 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %107, i64 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = add nsw i64 %112, -1
  store i64 %113, i64* %111, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %110
  %116 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %107, i64 0, i32 0
  %117 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %108, align 8
  %118 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %117, i64 1
  %119 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %118, align 8
  call void %119(%"class.fxcrt::Retainable"* nonnull %116) #12
  br label %120

120:                                              ; preds = %100, %101, %110, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #12
  br label %121

121:                                              ; preds = %80, %120
  %122 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5
  %123 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %123, align 8
  %125 = icmp eq %class.CPDF_ColorSpace* %124, null
  br i1 %125, label %126, label %166

126:                                              ; preds = %121
  %127 = bitcast %"class.fxcrt::RetainPtr.182"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #12
  call void @_ZN16CPDF_DocPageData13GetColorSpaceEPK11CPDF_ObjectPK15CPDF_Dictionary(%"class.fxcrt::RetainPtr.182"* nonnull sret %11, %class.CPDF_DocPageData* %83, %class.CPDF_Object* nonnull %78, %class.CPDF_Dictionary* %2) #12
  %128 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = bitcast %"class.fxcrt::RetainPtr.182"* %11 to i64*
  %130 = load i64, i64* %129, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %128, align 8
  %131 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %123, align 8
  %132 = bitcast %"class.fxcrt::RetainPtr.182"* %122 to i64*
  store i64 %130, i64* %132, align 8
  %133 = icmp eq %class.CPDF_ColorSpace* %131, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %126
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %128, align 8
  %135 = inttoptr i64 %130 to %class.CPDF_ColorSpace*
  br label %163

136:                                              ; preds = %126
  %137 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %131, i64 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = add nsw i64 %138, -1
  store i64 %139, i64* %137, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %136
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %128, align 8
  br label %161

142:                                              ; preds = %136
  %143 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %131, i64 0, i32 0
  %144 = bitcast %class.CPDF_ColorSpace* %131 to void (%"class.fxcrt::Retainable"*)***
  %145 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %145, i64 1
  %147 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, align 8
  call void %147(%"class.fxcrt::Retainable"* nonnull %143) #12
  %148 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %128, align 8
  %149 = bitcast %class.CPDF_ColorSpace* %148 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %128, align 8
  %150 = icmp eq %class.CPDF_ColorSpace* %148, null
  br i1 %150, label %161, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %148, i64 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = add nsw i64 %153, -1
  store i64 %154, i64* %152, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %161

156:                                              ; preds = %151
  %157 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %148, i64 0, i32 0
  %158 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %149, align 8
  %159 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %158, i64 1
  %160 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %159, align 8
  call void %160(%"class.fxcrt::Retainable"* nonnull %157) #12
  br label %161

161:                                              ; preds = %141, %142, %151, %156
  %162 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %123, align 8
  br label %163

163:                                              ; preds = %161, %134
  %164 = phi %class.CPDF_ColorSpace* [ %162, %161 ], [ %135, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #12
  %165 = icmp eq %class.CPDF_ColorSpace* %164, null
  br i1 %165, label %232, label %166

166:                                              ; preds = %163, %121
  %167 = phi %class.CPDF_ColorSpace* [ %164, %163 ], [ %124, %121 ]
  %168 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nonnull %167) #12
  %169 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  store i32 %168, i32* %169, align 8
  %170 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %123, align 8
  %171 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %170, i64 0, i32 4
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  store i32 %172, i32* %173, align 4
  %174 = icmp eq i32 %172, 7
  br i1 %174, label %175, label %196

175:                                              ; preds = %166
  %176 = bitcast %class.CPDF_Object* %78 to i1 (%class.CPDF_Object*)***
  %177 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %176, align 8
  %178 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %177, i64 17
  %179 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %178, align 8
  %180 = call zeroext i1 %179(%class.CPDF_Object* nonnull %78) #12
  br i1 %180, label %181, label %196

181:                                              ; preds = %175
  %182 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #12
  %183 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %183, align 8
  %184 = bitcast %class.CPDF_Object* %78 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %185 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %185, i64 7
  %187 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %186, align 8
  call void %187(%"class.fxcrt::ByteString"* nonnull sret %12, %class.CPDF_Object* nonnull %78) #12
  %188 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)) #12
  br i1 %188, label %193, label %189

189:                                              ; preds = %181
  %190 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #12
  br i1 %190, label %193, label %191

191:                                              ; preds = %189
  %192 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #12
  br i1 %192, label %193, label %195

193:                                              ; preds = %191, %189, %181
  %194 = phi i32 [ 1, %181 ], [ 3, %189 ], [ 4, %191 ]
  store i32 %194, i32* %169, align 8
  br label %195

195:                                              ; preds = %193, %191
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #12
  br label %196

196:                                              ; preds = %195, %175, %166
  %197 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #12
  %198 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %198, align 8
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* nonnull %13) #12
  %199 = load i8, i8* %14, align 8, !range !2
  %200 = icmp eq i8 %199, 1
  br i1 %200, label %202, label %201, !prof !6

201:                                              ; preds = %196
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !7
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !8
  unreachable

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %204 = load %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"** %203, align 8
  %205 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %206 = load %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"** %205, align 8
  %207 = icmp eq %"struct.std::__1::pair.249"* %204, %206
  br i1 %207, label %211, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"struct.std::__1::pair.249", %"struct.std::__1::pair.249"* %206, i64 -1, i32 0
  %210 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"* nonnull %13, %"class.fxcrt::ByteString"* dereferenceable(8) %209) #12
  br label %211

211:                                              ; preds = %208, %202
  %212 = load i32, i32* %23, align 4
  %213 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  store i32 %212, i32* %213, align 8
  %214 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %214, label %215, label %217

215:                                              ; preds = %211
  %216 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 16
  store i8 0, i8* %216, align 4
  br label %228

217:                                              ; preds = %211
  %218 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)) #12
  br i1 %218, label %221, label %219

219:                                              ; preds = %217
  %220 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #12
  br i1 %220, label %221, label %222

221:                                              ; preds = %219, %217
  store i32 1, i32* %213, align 8
  store i32 1, i32* %169, align 8
  br label %228

222:                                              ; preds = %219
  %223 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #12
  br i1 %223, label %224, label %225

224:                                              ; preds = %222
  store i32 8, i32* %213, align 8
  br label %228

225:                                              ; preds = %222
  %226 = load i32, i32* %213, align 8
  switch i32 %226, label %227 [
    i32 8, label %228
    i32 4, label %228
    i32 2, label %228
    i32 1, label %228
    i32 16, label %228
  ]

227:                                              ; preds = %225
  store i32 0, i32* %213, align 8
  br label %228

228:                                              ; preds = %215, %221, %224, %225, %225, %225, %225, %225, %227
  %229 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  %230 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %231 = call zeroext i1 @_ZN8CPDF_DIB21GetDecodeAndMaskArrayEPbS0_(%class.CPDF_DIB* %0, i8* %229, i8* %230)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #12
  br label %232

232:                                              ; preds = %163, %75, %228, %58, %19, %72
  %233 = phi i1 [ false, %163 ], [ %231, %228 ], [ false, %75 ], [ true, %58 ], [ false, %19 ], [ true, %72 ]
  %234 = load i8, i8* %14, align 8
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %256, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.std::__1::vector.247", %"class.std::__1::vector.247"* %237, i64 0, i32 0, i32 0
  %239 = load %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"** %238, align 8
  %240 = icmp eq %"struct.std::__1::pair.249"* %239, null
  br i1 %240, label %256, label %241

241:                                              ; preds = %236
  %242 = bitcast %"struct.std::__1::pair.249"* %239 to i8*
  %243 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %244 = load %"struct.std::__1::pair.249"*, %"struct.std::__1::pair.249"** %243, align 8
  %245 = icmp eq %"struct.std::__1::pair.249"* %244, %239
  br i1 %245, label %254, label %246

246:                                              ; preds = %241, %246
  %247 = phi %"struct.std::__1::pair.249"* [ %248, %246 ], [ %244, %241 ]
  %248 = getelementptr inbounds %"struct.std::__1::pair.249", %"struct.std::__1::pair.249"* %247, i64 -1
  %249 = getelementptr inbounds %"struct.std::__1::pair.249", %"struct.std::__1::pair.249"* %248, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %249) #12
  %250 = icmp eq %"struct.std::__1::pair.249"* %248, %239
  br i1 %250, label %251, label %246

251:                                              ; preds = %246
  %252 = bitcast %"class.std::__1::vector.247"* %237 to i8**
  %253 = load i8*, i8** %252, align 8
  br label %254

254:                                              ; preds = %251, %241
  %255 = phi i8* [ %253, %251 ], [ %242, %241 ]
  store %"struct.std::__1::pair.249"* %239, %"struct.std::__1::pair.249"** %243, align 8
  call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %3, %232, %236, %254
  %257 = phi i1 [ %233, %232 ], [ %233, %236 ], [ %233, %254 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #12
  ret i1 %257
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i64 @_ZN7fxcodec15CalculatePitch8Ejji(i32, i32, i32) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc19LoadAllDataImageAccEj(%class.CPDF_StreamAcc*, i32) local_unnamed_addr #1

declare i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN8CPDF_DIB13CreateDecoderEv(%class.CPDF_DIB*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = alloca %"class.pdfium::span.246", align 8
  %5 = alloca %"class.pdfium::span", align 8
  %6 = alloca %"class.pdfium::span", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %10, align 8
  %11 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %11, align 8
  %13 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %12, i64 0, i32 3
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %2, %"class.fxcrt::ByteString"* dereferenceable(8) %13) #12
  %14 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8
  %15 = icmp eq %"class.fxcrt::StringDataTemplate"* %14, null
  br i1 %15, label %226, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %226, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 16
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %226, label %28

28:                                               ; preds = %20, %24
  %29 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %29, label %30, label %55

30:                                               ; preds = %28
  %31 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN8CPDF_DIB13LoadJpxBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %3, %class.CPDF_DIB* %0)
  %32 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 23
  %33 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %33, align 8
  %36 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %36, align 8
  %38 = bitcast %"class.fxcrt::RetainPtr"* %32 to i64*
  store i64 %35, i64* %38, align 8
  %39 = icmp eq %class.CFX_DIBitmap* %37, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %37, i64 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %37, i64 0, i32 0, i32 0
  %47 = bitcast %class.CFX_DIBitmap* %37 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  call void %50(%"class.fxcrt::Retainable"* nonnull %46) #12
  br label %51

51:                                               ; preds = %45, %40, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  %52 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %36, align 8
  %53 = icmp ne %class.CFX_DIBitmap* %52, null
  %54 = zext i1 %53 to i8
  br label %226

55:                                               ; preds = %28
  %56 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #12
  br i1 %56, label %57, label %108

57:                                               ; preds = %55
  %58 = call i8* @_Znwm(i64 80) #13, !noalias !9
  %59 = bitcast i8* %58 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %59) #12, !noalias !9
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 8
  %62 = bitcast i8* %61 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !9
  %64 = add nsw i64 %63, 1
  store i64 %64, i64* %62, align 8, !noalias !9
  %65 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 23
  %66 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %66, align 8
  %68 = bitcast %"class.fxcrt::RetainPtr"* %65 to i64*
  store i64 %60, i64* %68, align 8
  %69 = icmp eq %class.CFX_DIBitmap* %67, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %57
  %71 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %67, i64 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = add nsw i64 %72, -1
  store i64 %73, i64* %71, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %70
  %76 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %67, i64 0, i32 0, i32 0
  %77 = bitcast %class.CFX_DIBitmap* %67 to void (%"class.fxcrt::Retainable"*)***
  %78 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, i64 1
  %80 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, align 8
  call void %80(%"class.fxcrt::Retainable"* nonnull %76) #12
  br label %81

81:                                               ; preds = %75, %70, %57
  %82 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %66, align 8
  %83 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i16 1, i16 257
  %91 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* %82, i32 %84, i32 %86, i16 zeroext %90) #12
  br i1 %91, label %106, label %92

92:                                               ; preds = %81
  %93 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %66, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %66, align 8
  %94 = icmp eq %class.CFX_DIBitmap* %93, null
  br i1 %94, label %226, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %93, i64 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add nsw i64 %97, -1
  store i64 %98, i64* %96, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %226

100:                                              ; preds = %95
  %101 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %93, i64 0, i32 0, i32 0
  %102 = bitcast %class.CFX_DIBitmap* %93 to void (%"class.fxcrt::Retainable"*)***
  %103 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %103, i64 1
  %105 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, align 8
  call void %105(%"class.fxcrt::Retainable"* nonnull %101) #12
  br label %226

106:                                              ; preds = %81
  %107 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 12
  store i8 1, i8* %107, align 8
  br label %226

108:                                              ; preds = %55
  %109 = bitcast %"class.pdfium::span.246"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #12
  %110 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %11, align 8
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.246"* nonnull sret %4, %class.CPDF_StreamAcc* %110) #12
  %111 = bitcast %"class.pdfium::span.246"* %4 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.pdfium::span.246", %"class.pdfium::span.246"* %4, i64 0, i32 1
  %114 = load i64, i64* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #12
  %115 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %11, align 8
  %116 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %115, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %117 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %116, align 8
  %118 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)) #12
  br i1 %118, label %119, label %138

119:                                              ; preds = %108
  %120 = bitcast %"class.pdfium::span"* %5 to i64*
  store i64 %112, i64* %120, align 8
  %121 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %5, i64 0, i32 1
  store i64 %114, i64* %121, align 8
  %122 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = call %"class.fxcodec::ScanlineDecoder"* @_Z16CreateFaxDecoderN6pdfium4spanIKhEEiiPK15CPDF_Dictionary(%"class.pdfium::span"* nonnull %5, i32 %123, i32 %125, %class.CPDF_Dictionary* %117) #12
  %127 = ptrtoint %"class.fxcodec::ScanlineDecoder"* %126 to i64
  %128 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %129, align 8
  %131 = bitcast %"class.std::__1::unique_ptr.221"* %128 to i64*
  store i64 %127, i64* %131, align 8
  %132 = icmp eq %"class.fxcodec::ScanlineDecoder"* %130, null
  br i1 %132, label %194, label %133

133:                                              ; preds = %119
  %134 = bitcast %"class.fxcodec::ScanlineDecoder"* %130 to void (%"class.fxcodec::ScanlineDecoder"*)***
  %135 = load void (%"class.fxcodec::ScanlineDecoder"*)**, void (%"class.fxcodec::ScanlineDecoder"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %135, i64 1
  %137 = load void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %136, align 8
  call void %137(%"class.fxcodec::ScanlineDecoder"* nonnull %130) #12
  br label %194

138:                                              ; preds = %108
  %139 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)) #12
  br i1 %139, label %140, label %163

140:                                              ; preds = %138
  %141 = bitcast %"class.pdfium::span"* %6 to i64*
  store i64 %112, i64* %141, align 8
  %142 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 1
  store i64 %114, i64* %142, align 8
  %143 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %150 = load i32, i32* %149, align 8
  %151 = call %"class.fxcodec::ScanlineDecoder"* @_Z18CreateFlateDecoderN6pdfium4spanIKhEEiiiiPK15CPDF_Dictionary(%"class.pdfium::span"* nonnull %6, i32 %144, i32 %146, i32 %148, i32 %150, %class.CPDF_Dictionary* %117) #12
  %152 = ptrtoint %"class.fxcodec::ScanlineDecoder"* %151 to i64
  %153 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %154, align 8
  %156 = bitcast %"class.std::__1::unique_ptr.221"* %153 to i64*
  store i64 %152, i64* %156, align 8
  %157 = icmp eq %"class.fxcodec::ScanlineDecoder"* %155, null
  br i1 %157, label %194, label %158

158:                                              ; preds = %140
  %159 = bitcast %"class.fxcodec::ScanlineDecoder"* %155 to void (%"class.fxcodec::ScanlineDecoder"*)***
  %160 = load void (%"class.fxcodec::ScanlineDecoder"*)**, void (%"class.fxcodec::ScanlineDecoder"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %160, i64 1
  %162 = load void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %161, align 8
  call void %162(%"class.fxcodec::ScanlineDecoder"* nonnull %155) #12
  br label %194

163:                                              ; preds = %138
  %164 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0)) #12
  br i1 %164, label %165, label %188

165:                                              ; preds = %163
  %166 = bitcast %"class.pdfium::span"* %7 to i64*
  store i64 %112, i64* %166, align 8
  %167 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  store i64 %114, i64* %167, align 8
  %168 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  %171 = load i32, i32* %170, align 8
  %172 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %173 = load i32, i32* %172, align 8
  %174 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %175 = load i32, i32* %174, align 8
  %176 = call %"class.fxcodec::ScanlineDecoder"* @_ZN7fxcodec11BasicModule22CreateRunLengthDecoderEN6pdfium4spanIKhEEiiii(%"class.pdfium::span"* nonnull %7, i32 %169, i32 %171, i32 %173, i32 %175) #12
  %177 = ptrtoint %"class.fxcodec::ScanlineDecoder"* %176 to i64
  %178 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %178, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %179, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.221"* %178 to i64*
  store i64 %177, i64* %181, align 8
  %182 = icmp eq %"class.fxcodec::ScanlineDecoder"* %180, null
  br i1 %182, label %194, label %183

183:                                              ; preds = %165
  %184 = bitcast %"class.fxcodec::ScanlineDecoder"* %180 to void (%"class.fxcodec::ScanlineDecoder"*)***
  %185 = load void (%"class.fxcodec::ScanlineDecoder"*)**, void (%"class.fxcodec::ScanlineDecoder"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %185, i64 1
  %187 = load void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %186, align 8
  call void %187(%"class.fxcodec::ScanlineDecoder"* nonnull %180) #12
  br label %194

188:                                              ; preds = %163
  %189 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #12
  br i1 %189, label %190, label %194

190:                                              ; preds = %188
  %191 = bitcast %"class.pdfium::span"* %8 to i64*
  store i64 %112, i64* %191, align 8
  %192 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  store i64 %114, i64* %192, align 8
  %193 = call zeroext i1 @_ZN8CPDF_DIB16CreateDCTDecoderEN6pdfium4spanIKhEEPK15CPDF_Dictionary(%class.CPDF_DIB* %0, %"class.pdfium::span"* nonnull %8, %class.CPDF_Dictionary* %117)
  br i1 %193, label %194, label %226

194:                                              ; preds = %165, %183, %140, %158, %119, %133, %190, %188
  %195 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %196 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %195, align 8
  %197 = icmp eq %"class.fxcodec::ScanlineDecoder"* %196, null
  br i1 %197, label %226, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %202 = load i32, i32* %201, align 8
  %203 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = call i64 @_ZN7fxcodec15CalculatePitch8Ejji(i32 %200, i32 %202, i32 %204) #12
  %206 = trunc i64 %205 to i8
  %207 = lshr i64 %205, 32
  %208 = trunc i64 %207 to i32
  %209 = icmp eq i8 %206, 0
  br i1 %209, label %226, label %210

210:                                              ; preds = %198
  %211 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %195, align 8
  %212 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %211, i64 0, i32 6
  %213 = load i32, i32* %212, align 4
  %214 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %211, i64 0, i32 5
  %215 = load i32, i32* %214, align 8
  %216 = getelementptr inbounds %"class.fxcodec::ScanlineDecoder", %"class.fxcodec::ScanlineDecoder"* %211, i64 0, i32 3
  %217 = load i32, i32* %216, align 8
  %218 = call i64 @_ZN7fxcodec15CalculatePitch8Ejji(i32 %213, i32 %215, i32 %217) #12
  %219 = trunc i64 %218 to i8
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %210
  %222 = lshr i64 %218, 32
  %223 = trunc i64 %222 to i32
  %224 = icmp uge i32 %223, %208
  %225 = zext i1 %224 to i8
  br label %226

226:                                              ; preds = %210, %198, %194, %1, %190, %221, %100, %95, %92, %24, %16, %106, %51
  %227 = phi i8 [ %54, %51 ], [ 2, %106 ], [ 1, %16 ], [ 0, %24 ], [ 0, %92 ], [ 0, %95 ], [ 0, %100 ], [ 0, %190 ], [ 0, %194 ], [ 0, %198 ], [ 0, %210 ], [ %225, %221 ], [ 1, %1 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret i8 %227
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8CPDF_DIB17SetMaskPropertiesEv(%class.CPDF_DIB* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 1
  store i16 257, i16* %4, align 8
  ret void
}

declare zeroext i16 @_Z13MakeRGBFormati(i32) local_unnamed_addr #1

declare i64 @_ZN7fxcodec16CalculatePitch32Eii(i32, i32) local_unnamed_addr #1

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIB11LoadPaletteEv(%class.CPDF_DIB*) local_unnamed_addr #0 align 2 {
  %2 = alloca [3 x float], align 4
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca %"class.pdfium::span.357", align 8
  %7 = alloca %"class.pdfium::span.357", align 8
  %8 = alloca %"class.fxcrt::RetainPtr.182", align 8
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca %"class.std::__1::vector.350", align 8
  %13 = alloca %"class.pdfium::span.357", align 8
  %14 = alloca %"class.pdfium::span.357", align 8
  %15 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %17 = icmp eq %class.CPDF_ColorSpace* %16, null
  br i1 %17, label %340, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 11
  br i1 %21, label %340, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %340, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %24, i32 %28) #12
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = icmp ugt i32 %31, 8
  %33 = or i1 %30, %32
  br i1 %33, label %340, label %34, !prof !12

34:                                               ; preds = %26
  %35 = icmp eq i32 %31, 1
  br i1 %35, label %36, label %125

36:                                               ; preds = %34
  %37 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  %38 = load i8, i8* %37, align 2, !range !2
  %39 = icmp ne i8 %38, 0
  %40 = add i32 %20, -1
  %41 = icmp ult i32 %40, 2
  %42 = and i1 %41, %39
  br i1 %42, label %340, label %43

43:                                               ; preds = %36
  %44 = tail call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nonnull %16) #12
  %45 = icmp ugt i32 %44, 3
  br i1 %45, label %340, label %46

46:                                               ; preds = %43
  %47 = bitcast [3 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %47) #12
  %48 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %49 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %49, align 4
  %50 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %50, align 4
  %51 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  %52 = bitcast %struct.DIB_COMP_DATA** %51 to i32**
  %53 = load i32*, i32** %52, align 8
  %54 = load i32, i32* %53, align 4
  %55 = bitcast [3 x float]* %2 to i32*
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, i64 1
  %57 = load i32, i32* %53, align 4
  %58 = bitcast float* %56 to i32*
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds [3 x float], [3 x float]* %2, i64 0, i64 2
  %60 = load i32, i32* %53, align 4
  %61 = bitcast float* %59 to i32*
  store i32 %60, i32* %61, align 4
  %62 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #12
  store float 0.000000e+00, float* %3, align 4
  %63 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #12
  store float 0.000000e+00, float* %4, align 4
  %64 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #12
  store float 0.000000e+00, float* %5, align 4
  %65 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %66 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %6, i64 0, i32 0, i32 0
  store float* %48, float** %66, align 8
  %67 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %6, i64 0, i32 1
  store i64 3, i64* %67, align 8
  %68 = bitcast %class.CPDF_ColorSpace* %65 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)***
  %69 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %69, i64 2
  %71 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %70, align 8
  %72 = call zeroext i1 %71(%class.CPDF_ColorSpace* %65, %"class.pdfium::span.357"* nonnull %6, float* nonnull %3, float* nonnull %4, float* nonnull %5) #12
  %73 = load float, float* %3, align 4
  %74 = fmul float %73, 2.550000e+02
  %75 = call i32 @FXSYS_roundf(float %74) #12
  %76 = load float, float* %4, align 4
  %77 = fmul float %76, 2.550000e+02
  %78 = call i32 @FXSYS_roundf(float %77) #12
  %79 = load float, float* %5, align 4
  %80 = fmul float %79, 2.550000e+02
  %81 = call i32 @FXSYS_roundf(float %80) #12
  %82 = shl i32 %75, 16
  %83 = shl i32 %78, 8
  %84 = or i32 %82, %83
  %85 = or i32 %84, %81
  %86 = or i32 %85, -16777216
  %87 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %51, align 8
  %88 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %87, i64 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = load float, float* %48, align 4
  %91 = fadd float %89, %90
  store float %91, float* %48, align 4
  %92 = load float, float* %49, align 4
  %93 = fadd float %89, %92
  store float %93, float* %49, align 4
  %94 = load float, float* %88, align 4
  %95 = load float, float* %50, align 4
  %96 = fadd float %94, %95
  store float %96, float* %50, align 4
  %97 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %98 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %7, i64 0, i32 0, i32 0
  store float* %48, float** %98, align 8
  %99 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %7, i64 0, i32 1
  store i64 3, i64* %99, align 8
  %100 = bitcast %class.CPDF_ColorSpace* %97 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)***
  %101 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*** %100, align 8
  %102 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %101, i64 2
  %103 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %102, align 8
  %104 = call zeroext i1 %103(%class.CPDF_ColorSpace* %97, %"class.pdfium::span.357"* nonnull %7, float* nonnull %3, float* nonnull %4, float* nonnull %5) #12
  %105 = load float, float* %3, align 4
  %106 = fmul float %105, 2.550000e+02
  %107 = call i32 @FXSYS_roundf(float %106) #12
  %108 = load float, float* %4, align 4
  %109 = fmul float %108, 2.550000e+02
  %110 = call i32 @FXSYS_roundf(float %109) #12
  %111 = load float, float* %5, align 4
  %112 = fmul float %111, 2.550000e+02
  %113 = call i32 @FXSYS_roundf(float %112) #12
  %114 = shl i32 %107, 16
  %115 = shl i32 %110, 8
  %116 = or i32 %114, %115
  %117 = or i32 %116, %113
  %118 = or i32 %117, -16777216
  %119 = icmp ne i32 %86, -16777216
  %120 = icmp ne i32 %118, -1
  %121 = or i1 %119, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %46
  %123 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0
  call void @_ZN11CFX_DIBBase14SetPaletteArgbEij(%class.CFX_DIBBase* %123, i32 0, i32 %86) #12
  call void @_ZN11CFX_DIBBase14SetPaletteArgbEij(%class.CFX_DIBBase* %123, i32 1, i32 %118) #12
  br label %124

124:                                              ; preds = %46, %122
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %47) #12
  br label %340

125:                                              ; preds = %34
  %126 = icmp eq i32 %24, 8
  br i1 %126, label %127, label %152

127:                                              ; preds = %125
  %128 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  %129 = load i8, i8* %128, align 2, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %152, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.fxcrt::RetainPtr.182"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #12
  call void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.182"* nonnull sret %8, i32 1) #12
  %133 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %134 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %134, align 8
  %136 = icmp eq %class.CPDF_ColorSpace* %133, %135
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %134, align 8
  %137 = icmp eq %class.CPDF_ColorSpace* %135, null
  br i1 %137, label %149, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %135, i64 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = add nsw i64 %140, -1
  store i64 %141, i64* %139, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %138
  %144 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %135, i64 0, i32 0
  %145 = bitcast %class.CPDF_ColorSpace* %135 to void (%"class.fxcrt::Retainable"*)***
  %146 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, i64 1
  %148 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %147, align 8
  call void %148(%"class.fxcrt::Retainable"* nonnull %144) #12
  br label %149

149:                                              ; preds = %143, %138, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #12
  br i1 %136, label %340, label %150

150:                                              ; preds = %149
  %151 = load i32, i32* %27, align 4
  br label %152

152:                                              ; preds = %125, %127, %150
  %153 = phi i32 [ %151, %150 ], [ %28, %127 ], [ %28, %125 ]
  %154 = shl i32 1, %31
  %155 = icmp ugt i32 %153, 16
  %156 = select i1 %155, i32 %153, i32 16
  %157 = zext i32 %156 to i64
  %158 = shl nuw nsw i64 %157, 2
  %159 = call i8* @_Znwm(i64 %158) #13
  %160 = bitcast i8* %159 to float*
  %161 = ptrtoint i8* %159 to i64
  %162 = add nsw i64 %157, -1
  %163 = getelementptr float, float* %160, i64 %162
  %164 = ptrtoint float* %163 to i64
  %165 = sub i64 4, %161
  %166 = add i64 %165, %164
  %167 = and i64 %166, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %159, i8 0, i64 %167, i1 false) #12
  %168 = getelementptr inbounds float, float* %160, i64 %157
  %169 = ptrtoint float* %168 to i64
  %170 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  %171 = bitcast float* %9 to i8*
  %172 = bitcast float* %10 to i8*
  %173 = bitcast float* %11 to i8*
  %174 = sub i64 %169, %161
  %175 = ashr exact i64 %174, 2
  %176 = bitcast %"class.pdfium::span.357"* %14 to i64*
  %177 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %14, i64 0, i32 1
  %178 = bitcast %"class.std::__1::vector.350"* %12 to i8*
  %179 = getelementptr inbounds %"class.std::__1::vector.350", %"class.std::__1::vector.350"* %12, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.std::__1::vector.350", %"class.std::__1::vector.350"* %12, i64 0, i32 0, i32 1
  %181 = getelementptr inbounds %"class.std::__1::vector.350", %"class.std::__1::vector.350"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %182 = bitcast %"class.std::__1::vector.350"* %12 to i8**
  %183 = bitcast float** %180 to i64*
  %184 = bitcast i8* %159 to i32*
  %185 = bitcast %"class.std::__1::vector.350"* %12 to i64*
  %186 = bitcast %"class.pdfium::span.357"* %13 to i64*
  %187 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %13, i64 0, i32 1
  %188 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0
  br label %189

189:                                              ; preds = %338, %152
  %190 = phi i32 [ %153, %152 ], [ %339, %338 ]
  %191 = phi i32 [ 0, %152 ], [ %336, %338 ]
  %192 = icmp eq i32 %190, 0
  br i1 %192, label %199, label %193

193:                                              ; preds = %189
  %194 = load i32, i32* %23, align 8
  %195 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %170, align 8
  %196 = shl i32 1, %194
  %197 = zext i32 %190 to i64
  br label %201

198:                                              ; preds = %321
  call void @_ZdlPv(i8* nonnull %159) #13
  br label %340

199:                                              ; preds = %201, %189
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %171) #12
  store float 0.000000e+00, float* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #12
  store float 0.000000e+00, float* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173) #12
  store float 0.000000e+00, float* %11, align 4
  %200 = icmp eq i32 %190, 1
  br i1 %200, label %216, label %314

201:                                              ; preds = %193, %201
  %202 = phi i64 [ 0, %193 ], [ %214, %201 ]
  %203 = phi i32 [ %191, %193 ], [ %205, %201 ]
  %204 = srem i32 %203, %196
  %205 = sdiv i32 %203, %196
  %206 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %195, i64 %202, i32 0
  %207 = load float, float* %206, align 4
  %208 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %195, i64 %202, i32 1
  %209 = load float, float* %208, align 4
  %210 = sitofp i32 %204 to float
  %211 = fmul float %209, %210
  %212 = fadd float %207, %211
  %213 = getelementptr inbounds float, float* %160, i64 %202
  store float %212, float* %213, align 4
  %214 = add nuw nsw i64 %202, 1
  %215 = icmp ult i64 %214, %197
  br i1 %215, label %201, label %199

216:                                              ; preds = %199
  %217 = load i32, i32* %19, align 4
  %218 = icmp eq i32 %217, 7
  br i1 %218, label %219, label %314

219:                                              ; preds = %216
  %220 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %221 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* %220) #12
  %222 = icmp ugt i32 %221, 1
  br i1 %222, label %223, label %314

223:                                              ; preds = %219
  %224 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %225 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* %224) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #12
  %226 = sext i32 %225 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 0, i64 24, i1 false) #12
  %227 = icmp eq i32 %225, 0
  br i1 %227, label %272, label %228

228:                                              ; preds = %223
  %229 = icmp slt i32 %225, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %228
  %231 = bitcast %"class.std::__1::vector.350"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %231) #14
  unreachable

232:                                              ; preds = %228
  %233 = shl nsw i64 %226, 2
  %234 = call i8* @_Znwm(i64 %233) #13
  %235 = bitcast i8* %234 to float*
  store i8* %234, i8** %182, align 8
  %236 = getelementptr inbounds float, float* %235, i64 %226
  store float* %236, float** %181, align 8
  %237 = ptrtoint i8* %234 to i64
  %238 = add nsw i64 %226, -1
  %239 = getelementptr float, float* %235, i64 %238
  %240 = ptrtoint float* %239 to i64
  %241 = sub i64 4, %237
  %242 = add i64 %241, %240
  %243 = and i64 %242, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %234, i8 0, i64 %243, i1 false) #12
  %244 = ptrtoint float* %236 to i64
  store i64 %244, i64* %183, align 8
  %245 = zext i32 %225 to i64
  %246 = load i32, i32* %184, align 4
  %247 = bitcast i8* %234 to i32*
  store i32 %246, i32* %247, align 4
  %248 = icmp eq i32 %225, 1
  br i1 %248, label %269, label %249

249:                                              ; preds = %232
  %250 = add nsw i64 %245, -1
  %251 = add nsw i64 %245, -2
  %252 = and i64 %250, 3
  %253 = icmp ult i64 %251, 3
  br i1 %253, label %256, label %254

254:                                              ; preds = %249
  %255 = sub nsw i64 %250, %252
  br label %289

256:                                              ; preds = %289, %249
  %257 = phi i64 [ 1, %249 ], [ %311, %289 ]
  %258 = icmp eq i64 %252, 0
  br i1 %258, label %269, label %259

259:                                              ; preds = %256, %259
  %260 = phi i64 [ %266, %259 ], [ %257, %256 ]
  %261 = phi i64 [ %267, %259 ], [ %252, %256 ]
  %262 = load float*, float** %179, align 8
  %263 = load i32, i32* %184, align 4
  %264 = getelementptr inbounds float, float* %262, i64 %260
  %265 = bitcast float* %264 to i32*
  store i32 %263, i32* %265, align 4
  %266 = add nuw nsw i64 %260, 1
  %267 = add i64 %261, -1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %259, !llvm.loop !13

269:                                              ; preds = %256, %259, %232
  %270 = load i64, i64* %185, align 8
  %271 = load i64, i64* %183, align 8
  br label %272

272:                                              ; preds = %223, %269
  %273 = phi i64 [ %271, %269 ], [ 0, %223 ]
  %274 = phi i64 [ %270, %269 ], [ 0, %223 ]
  %275 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %276 = sub i64 %273, %274
  %277 = ashr exact i64 %276, 2
  store i64 %274, i64* %186, align 8
  store i64 %277, i64* %187, align 8
  %278 = bitcast %class.CPDF_ColorSpace* %275 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)***
  %279 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*** %278, align 8
  %280 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %279, i64 2
  %281 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %280, align 8
  %282 = call zeroext i1 %281(%class.CPDF_ColorSpace* %275, %"class.pdfium::span.357"* nonnull %13, float* nonnull %9, float* nonnull %10, float* nonnull %11) #12
  %283 = load float*, float** %179, align 8
  %284 = icmp eq float* %283, null
  br i1 %284, label %288, label %285

285:                                              ; preds = %272
  %286 = ptrtoint float* %283 to i64
  store i64 %286, i64* %183, align 8
  %287 = bitcast float* %283 to i8*
  call void @_ZdlPv(i8* %287) #13
  br label %288

288:                                              ; preds = %272, %285
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #12
  br label %321

289:                                              ; preds = %289, %254
  %290 = phi i64 [ 1, %254 ], [ %311, %289 ]
  %291 = phi i64 [ %255, %254 ], [ %312, %289 ]
  %292 = load float*, float** %179, align 8
  %293 = load i32, i32* %184, align 4
  %294 = getelementptr inbounds float, float* %292, i64 %290
  %295 = bitcast float* %294 to i32*
  store i32 %293, i32* %295, align 4
  %296 = add nuw nsw i64 %290, 1
  %297 = load float*, float** %179, align 8
  %298 = load i32, i32* %184, align 4
  %299 = getelementptr inbounds float, float* %297, i64 %296
  %300 = bitcast float* %299 to i32*
  store i32 %298, i32* %300, align 4
  %301 = add nuw nsw i64 %290, 2
  %302 = load float*, float** %179, align 8
  %303 = load i32, i32* %184, align 4
  %304 = getelementptr inbounds float, float* %302, i64 %301
  %305 = bitcast float* %304 to i32*
  store i32 %303, i32* %305, align 4
  %306 = add nuw nsw i64 %290, 3
  %307 = load float*, float** %179, align 8
  %308 = load i32, i32* %184, align 4
  %309 = getelementptr inbounds float, float* %307, i64 %306
  %310 = bitcast float* %309 to i32*
  store i32 %308, i32* %310, align 4
  %311 = add nuw nsw i64 %290, 4
  %312 = add i64 %291, -4
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %256, label %289

314:                                              ; preds = %219, %216, %199
  %315 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  store i64 %161, i64* %176, align 8
  store i64 %175, i64* %177, align 8
  %316 = bitcast %class.CPDF_ColorSpace* %315 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)***
  %317 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*** %316, align 8
  %318 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %317, i64 2
  %319 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %318, align 8
  %320 = call zeroext i1 %319(%class.CPDF_ColorSpace* %315, %"class.pdfium::span.357"* nonnull %14, float* nonnull %9, float* nonnull %10, float* nonnull %11) #12
  br label %321

321:                                              ; preds = %314, %288
  %322 = load float, float* %9, align 4
  %323 = fmul float %322, 2.550000e+02
  %324 = call i32 @FXSYS_roundf(float %323) #12
  %325 = load float, float* %10, align 4
  %326 = fmul float %325, 2.550000e+02
  %327 = call i32 @FXSYS_roundf(float %326) #12
  %328 = load float, float* %11, align 4
  %329 = fmul float %328, 2.550000e+02
  %330 = call i32 @FXSYS_roundf(float %329) #12
  %331 = shl i32 %324, 16
  %332 = shl i32 %327, 8
  %333 = or i32 %331, %332
  %334 = or i32 %333, %330
  %335 = or i32 %334, -16777216
  call void @_ZN11CFX_DIBBase14SetPaletteArgbEij(%class.CFX_DIBBase* %188, i32 %191, i32 %335) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171) #12
  %336 = add nuw nsw i32 %191, 1
  %337 = icmp slt i32 %336, %154
  br i1 %337, label %338, label %198

338:                                              ; preds = %321
  %339 = load i32, i32* %27, align 8
  br label %189

340:                                              ; preds = %1, %36, %26, %124, %198, %43, %149, %22, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPDF_DIB18ContinueToLoadMaskEv(%class.CPDF_DIB*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  br i1 %4, label %9, label %6

6:                                                ; preds = %1
  store i32 1, i32* %5, align 8
  %7 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 1
  store i16 257, i16* %8, align 8
  br label %26

9:                                                ; preds = %1
  %10 = load i32, i32* %5, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %75, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %75, label %16

16:                                               ; preds = %12
  %17 = mul i32 %14, %10
  %18 = icmp eq i32 %17, 1
  %19 = icmp ult i32 %17, 9
  %20 = select i1 %19, i32 8, i32 24
  %21 = select i1 %18, i32 1, i32 %20
  %22 = tail call zeroext i16 @_Z13MakeRGBFormati(i32 %21) #12
  %23 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 1
  store i16 %22, i16* %23, align 8
  %24 = and i16 %22, 255
  %25 = zext i16 %24 to i32
  br label %26

26:                                               ; preds = %16, %6
  %27 = phi i32 [ %25, %16 ], [ 1, %6 ]
  %28 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = tail call i64 @_ZN7fxcodec16CalculatePitch32Eii(i32 %27, i32 %30) #12
  %32 = trunc i64 %31 to i8
  %33 = lshr i64 %31, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i8 %32, 0
  br i1 %35, label %75, label %36

36:                                               ; preds = %26
  %37 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %33, i64 1) #12
  %38 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  store i8* %37, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  tail call void @_Z7FX_FreePv(i8* nonnull %39) #12
  br label %42

42:                                               ; preds = %36, %41
  %43 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %43, align 8
  %45 = icmp eq %class.CPDF_ColorSpace* %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 19
  %48 = load i8, i8* %47, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %class.CPDF_ColorSpace* %44 to void (%class.CPDF_ColorSpace*, i1)***
  %52 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %51, align 8
  %53 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %52, i64 5
  %54 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %53, align 8
  tail call void %54(%class.CPDF_ColorSpace* nonnull %44, i1 zeroext true) #12
  br label %55

55:                                               ; preds = %42, %46, %50
  tail call void @_ZN8CPDF_DIB11LoadPaletteEv(%class.CPDF_DIB* %0)
  %56 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  store i16 544, i16* %28, align 8
  %60 = load i32, i32* %29, align 4
  %61 = tail call i64 @_ZN7fxcodec16CalculatePitch32Eii(i32 32, i32 %60) #12
  %62 = trunc i64 %61 to i8
  %63 = lshr i64 %61, 32
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i8 %62, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %59
  %67 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %63, i64 1) #12
  %68 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  store i8* %67, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %66
  tail call void @_Z7FX_FreePv(i8* nonnull %69) #12
  br label %72

72:                                               ; preds = %55, %66, %71
  %73 = phi i32 [ %34, %55 ], [ %64, %66 ], [ %64, %71 ]
  %74 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 4
  store i32 %73, i32* %74, align 4
  br label %75

75:                                               ; preds = %59, %26, %72, %9, %12
  %76 = phi i1 [ false, %12 ], [ false, %9 ], [ true, %72 ], [ false, %26 ], [ false, %59 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN8CPDF_DIB16StartLoadDIBBaseEP13CPDF_DocumentPK11CPDF_StreambPK15CPDF_DictionaryS7_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_DIB*, %class.CPDF_Document*, %class.CPDF_Stream*, i1 zeroext, %class.CPDF_Dictionary*, %class.CPDF_Dictionary*, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = zext i1 %8 to i8
  %13 = icmp eq %class.CPDF_Stream* %2, null
  br i1 %13, label %180, label %14

14:                                               ; preds = %9
  %15 = zext i1 %6 to i8
  %16 = zext i1 %3 to i8
  %17 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 1, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %17, align 8
  %18 = tail call %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream* nonnull %2) #12
  %19 = icmp eq %class.CPDF_Dictionary* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %18, i64 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %24

24:                                               ; preds = %20, %14
  %25 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %25, align 8
  store %class.CPDF_Dictionary* %18, %class.CPDF_Dictionary** %25, align 8
  %27 = icmp eq %class.CPDF_Dictionary* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %26, i64 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %26, i64 0, i32 0, i32 0
  %35 = bitcast %class.CPDF_Dictionary* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  tail call void %38(%"class.fxcrt::Retainable"* nonnull %34) #12
  br label %39

39:                                               ; preds = %24, %28, %33
  %40 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %2, i64 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.CPDF_Stream*, %class.CPDF_Stream** %43, align 8
  store %class.CPDF_Stream* %2, %class.CPDF_Stream** %43, align 8
  %45 = icmp eq %class.CPDF_Stream* %44, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %44, i64 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i64 %48, -1
  store i64 %49, i64* %47, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %44, i64 0, i32 0, i32 0
  %53 = bitcast %class.CPDF_Stream* %44 to void (%"class.fxcrt::Retainable"*)***
  %54 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, i64 1
  %56 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, align 8
  tail call void %56(%"class.fxcrt::Retainable"* nonnull %52) #12
  br label %57

57:                                               ; preds = %39, %46, %51
  %58 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 19
  store i8 %15, i8* %58, align 1
  %59 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 18
  store i8 %16, i8* %59, align 2
  %60 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %25, align 8
  %61 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #12
  %62 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %60, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #12
  %63 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  store i32 %62, i32* %63, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  %64 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %25, align 8
  %65 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12
  %66 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %64, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #12
  %67 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  store i32 %66, i32* %67, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #12
  %68 = load i32, i32* %63, align 4
  %69 = add i32 %68, -1
  %70 = icmp ult i32 %69, 131071
  br i1 %70, label %71, label %180

71:                                               ; preds = %57
  %72 = load i32, i32* %67, align 8
  %73 = add i32 %72, -1
  %74 = icmp ult i32 %73, 131071
  br i1 %74, label %75, label %180

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 10
  store i32 %7, i32* %76, align 8
  %77 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 13
  store i8 %12, i8* %77, align 1
  %78 = load %class.CPDF_Stream*, %class.CPDF_Stream** %43, align 8
  %79 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %78, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, %class.CPDF_Dictionary* %4, %class.CPDF_Dictionary* null
  %83 = call zeroext i1 @_ZN8CPDF_DIB13LoadColorInfoEPK15CPDF_DictionaryS2_(%class.CPDF_DIB* %0, %class.CPDF_Dictionary* %82, %class.CPDF_Dictionary* %5)
  br i1 %83, label %84, label %180

84:                                               ; preds = %75
  %85 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 16
  %86 = load i8, i8* %85, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  %88 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %89 = load i32, i32* %88, align 8
  br i1 %87, label %90, label %93

90:                                               ; preds = %84
  %91 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %92 = load i32, i32* %91, align 8
  br label %99

93:                                               ; preds = %84
  %94 = icmp eq i32 %89, 0
  br i1 %94, label %180, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %180, label %99

99:                                               ; preds = %90, %95
  %100 = phi i32 [ %92, %90 ], [ %97, %95 ]
  %101 = load i32, i32* %63, align 4
  %102 = call i64 @_ZN7fxcodec15CalculatePitch8Ejji(i32 %89, i32 %100, i32 %101) #12
  %103 = load i32, i32* %67, align 8
  %104 = trunc i64 %102 to i8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %180, label %106

106:                                              ; preds = %99
  %107 = lshr i64 %102, 32
  %108 = trunc i64 %107 to i32
  %109 = icmp slt i32 %103, 0
  %110 = sub i32 0, %103
  %111 = select i1 %109, i32 %110, i32 %103
  %112 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %111, i32 %108) #12
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = icmp ne i32 %114, 0
  %116 = and i1 %109, %115
  %117 = or i1 %113, %116
  %118 = sub i32 0, %114
  %119 = select i1 %109, i32 %118, i32 %114
  br i1 %117, label %180, label %120

120:                                              ; preds = %106
  %121 = call i8* @_Znwm(i64 64) #13, !noalias !15
  %122 = bitcast i8* %121 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %122, %class.CPDF_Stream* nonnull %2) #12, !noalias !15
  %123 = ptrtoint i8* %121 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 8
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8, !noalias !15
  %127 = add nsw i64 %126, 1
  store i64 %127, i64* %125, align 8, !noalias !15
  %128 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 4
  %129 = getelementptr inbounds %"class.fxcrt::RetainPtr.175", %"class.fxcrt::RetainPtr.175"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %129, align 8
  %131 = bitcast %"class.fxcrt::RetainPtr.175"* %128 to i64*
  store i64 %123, i64* %131, align 8
  %132 = icmp eq %class.CPDF_StreamAcc* %130, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %120
  %134 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %130, i64 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = add nsw i64 %135, -1
  store i64 %136, i64* %134, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %144

138:                                              ; preds = %133
  %139 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %130, i64 0, i32 0
  %140 = bitcast %class.CPDF_StreamAcc* %130 to void (%"class.fxcrt::Retainable"*)***
  %141 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %141, i64 1
  %143 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %142, align 8
  call void %143(%"class.fxcrt::Retainable"* nonnull %139) #12
  br label %144

144:                                              ; preds = %120, %133, %138
  %145 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %129, align 8
  call void @_ZN14CPDF_StreamAcc19LoadAllDataImageAccEj(%class.CPDF_StreamAcc* %145, i32 %119) #12
  %146 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %129, align 8
  %147 = call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %146) #12
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %180, label %149

149:                                              ; preds = %144
  %150 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %129, align 8
  %151 = call i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc* %150) #12
  %152 = icmp eq i8* %151, null
  br i1 %152, label %180, label %153

153:                                              ; preds = %149
  %154 = call zeroext i8 @_ZN8CPDF_DIB13CreateDecoderEv(%class.CPDF_DIB* %0)
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %180, label %156

156:                                              ; preds = %153
  %157 = call zeroext i1 @_ZN8CPDF_DIB18ContinueToLoadMaskEv(%class.CPDF_DIB* %0)
  br i1 %157, label %158, label %180

158:                                              ; preds = %156
  %159 = load i8, i8* %59, align 2, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %158
  %162 = call zeroext i8 @_ZN8CPDF_DIB13StartLoadMaskEv(%class.CPDF_DIB* %0)
  %163 = icmp eq i8 %162, 2
  br label %164

164:                                              ; preds = %158, %161
  %165 = phi i1 [ %163, %161 ], [ false, %158 ]
  %166 = icmp eq i8 %154, 2
  %167 = or i1 %166, %165
  br i1 %167, label %180, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %170 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %169, align 8
  %171 = icmp eq %class.CPDF_ColorSpace* %170, null
  br i1 %171, label %180, label %172

172:                                              ; preds = %168
  %173 = load i8, i8* %58, align 1, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %180, label %175

175:                                              ; preds = %172
  %176 = bitcast %class.CPDF_ColorSpace* %170 to void (%class.CPDF_ColorSpace*, i1)***
  %177 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %176, align 8
  %178 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %177, i64 5
  %179 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %178, align 8
  call void %179(%class.CPDF_ColorSpace* nonnull %170, i1 zeroext false) #12
  br label %180

180:                                              ; preds = %106, %99, %168, %149, %144, %164, %172, %175, %156, %153, %93, %95, %75, %57, %71, %9
  %181 = phi i8 [ 0, %9 ], [ 0, %71 ], [ 0, %57 ], [ 0, %75 ], [ 0, %95 ], [ 0, %93 ], [ 0, %106 ], [ 0, %149 ], [ 0, %144 ], [ 0, %153 ], [ 0, %156 ], [ 2, %164 ], [ 1, %172 ], [ 1, %175 ], [ 1, %168 ], [ 0, %99 ]
  ret i8 %181
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN8CPDF_DIB13StartLoadMaskEv(%class.CPDF_DIB*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.pdfium::span", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.42", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.153", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = alloca %"class.fxcrt::RetainPtr.153", align 8
  %15 = alloca %"class.fxcrt::ByteString", align 8
  %16 = alloca %"class.std::__1::vector.350", align 8
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca float, align 4
  %20 = alloca %"class.pdfium::span.357", align 8
  %21 = alloca %"class.fxcrt::RetainPtr.153", align 8
  %22 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 11
  store i32 -1, i32* %22, align 4
  %23 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 27, i32 2
  %24 = getelementptr inbounds %"class.std::__1::vector.227", %"class.std::__1::vector.227"* %23, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 27, i32 2, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %25, %27
  br i1 %28, label %119, label %29

29:                                               ; preds = %1
  %30 = tail call i8* @_Znwm(i64 64) #13, !noalias !18
  %31 = bitcast i8* %30 to %class.CPDF_Dictionary*
  tail call void @_ZN15CPDF_DictionaryC1Ev(%class.CPDF_Dictionary* nonnull %31) #12, !noalias !18
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 8
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !18
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %34, align 8, !noalias !18
  %37 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #12
  %38 = call %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA8_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %31, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2, [8 x i8]* nonnull dereferenceable(8) @.str.21)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  %39 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0)) #12
  %40 = call %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA6_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %31, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3, [6 x i8]* nonnull dereferenceable(6) @.str.23)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  %41 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)) #12
  %42 = call %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA11_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %31, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, [11 x i8]* nonnull dereferenceable(11) @.str.9)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  %43 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #12
  %44 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 27, i32 0
  %45 = call %class.CPDF_Number* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_NumberJRiEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS5_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %31, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5, i32* dereferenceable(4) %44)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  %46 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #12
  %47 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 27, i32 1
  %48 = call %class.CPDF_Number* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_NumberJRiEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS5_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %31, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6, i32* dereferenceable(4) %47)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  %49 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #12
  %50 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #12
  store i32 8, i32* %8, align 4
  %51 = call %class.CPDF_Number* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_NumberJiEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %31, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  %52 = call i8* @_Znwm(i64 56) #13, !noalias !21
  %53 = bitcast i8* %52 to %class.CPDF_Stream*
  call void @_ZN11CPDF_StreamC1Ev(%class.CPDF_Stream* nonnull %53) #12, !noalias !21
  %54 = ptrtoint i8* %52 to i64
  %55 = getelementptr inbounds i8, i8* %52, i64 8
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !21
  %58 = add nsw i64 %57, 1
  store i64 %58, i64* %56, align 8, !noalias !21
  %59 = bitcast %"class.std::__1::vector.227"* %23 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %26 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = bitcast %"class.pdfium::span"* %9 to i64*
  store i64 %60, i64* %64, align 8
  %65 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 1
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.fxcrt::RetainPtr.42"* %10 to i64*
  store i64 %32, i64* %66, align 8
  %67 = load i64, i64* %34, align 8
  %68 = add nsw i64 %67, 1
  store i64 %68, i64* %34, align 8
  call void @_ZN11CPDF_Stream10InitStreamEN6pdfium4spanIKhEEN5fxcrt9RetainPtrI15CPDF_DictionaryEE(%class.CPDF_Stream* nonnull %53, %"class.pdfium::span"* nonnull %9, %"class.fxcrt::RetainPtr.42"* nonnull %10) #12
  %69 = getelementptr inbounds %"class.fxcrt::RetainPtr.42", %"class.fxcrt::RetainPtr.42"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %69, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %69, align 8
  %71 = icmp eq %class.CPDF_Dictionary* %70, null
  br i1 %71, label %83, label %72

72:                                               ; preds = %29
  %73 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %70, i64 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add nsw i64 %74, -1
  store i64 %75, i64* %73, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %70, i64 0, i32 0, i32 0
  %79 = bitcast %class.CPDF_Dictionary* %70 to void (%"class.fxcrt::Retainable"*)***
  %80 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, i64 1
  %82 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, align 8
  call void %82(%"class.fxcrt::Retainable"* nonnull %78) #12
  br label %83

83:                                               ; preds = %77, %72, %29
  %84 = bitcast %"class.fxcrt::RetainPtr.153"* %11 to i64*
  store i64 %54, i64* %84, align 8
  %85 = load i64, i64* %56, align 8
  %86 = add nsw i64 %85, 1
  store i64 %86, i64* %56, align 8
  %87 = call zeroext i8 @_ZN8CPDF_DIB16StartLoadMaskDIBEN5fxcrt9RetainPtrIK11CPDF_StreamEE(%class.CPDF_DIB* %0, %"class.fxcrt::RetainPtr.153"* nonnull %11)
  %88 = getelementptr inbounds %"class.fxcrt::RetainPtr.153", %"class.fxcrt::RetainPtr.153"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %88, align 8
  %89 = load i64, i64* %56, align 8
  %90 = add nsw i64 %89, -1
  store i64 %90, i64* %56, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %83
  %93 = bitcast i8* %52 to %"class.fxcrt::Retainable"*
  %94 = bitcast i8* %52 to void (%"class.fxcrt::Retainable"*)***
  %95 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %95, i64 1
  %97 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %96, align 8
  call void %97(%"class.fxcrt::Retainable"* nonnull %93) #12
  %98 = load i64, i64* %56, align 8
  br label %99

99:                                               ; preds = %92, %83
  %100 = phi i64 [ %98, %92 ], [ %90, %83 ]
  %101 = add nsw i64 %100, -1
  store i64 %101, i64* %56, align 8
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast i8* %52 to %"class.fxcrt::Retainable"*
  %105 = bitcast i8* %52 to void (%"class.fxcrt::Retainable"*)***
  %106 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %106, i64 1
  %108 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %107, align 8
  call void %108(%"class.fxcrt::Retainable"* nonnull %104) #12
  br label %109

109:                                              ; preds = %103, %99
  %110 = load i64, i64* %34, align 8
  %111 = add nsw i64 %110, -1
  store i64 %111, i64* %34, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %247

113:                                              ; preds = %109
  %114 = bitcast i8* %30 to %"class.fxcrt::Retainable"*
  %115 = bitcast i8* %30 to void (%"class.fxcrt::Retainable"*)***
  %116 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %116, i64 1
  %118 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %117, align 8
  call void %118(%"class.fxcrt::Retainable"* nonnull %114) #12
  br label %247

119:                                              ; preds = %1
  %120 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %121 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %120, align 8
  %122 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #12
  %123 = call %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %121, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #12
  %124 = ptrtoint %class.CPDF_Stream* %123 to i64
  %125 = icmp eq %class.CPDF_Stream* %123, null
  br i1 %125, label %126, label %160

126:                                              ; preds = %119
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  %127 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %120, align 8
  %128 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #12
  %129 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %127, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %13) #12
  %130 = icmp eq %class.CPDF_Object* %129, null
  br i1 %130, label %142, label %131

131:                                              ; preds = %126
  %132 = bitcast %class.CPDF_Object* %129 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %133 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %132, align 8
  %134 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %133, i64 36
  %135 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %134, align 8
  %136 = call %class.CPDF_Stream* %135(%class.CPDF_Object* nonnull %129) #12
  %137 = icmp eq %class.CPDF_Stream* %136, null
  br i1 %137, label %142, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %136, i64 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = add nsw i64 %140, 1
  store i64 %141, i64* %139, align 8
  br label %142

142:                                              ; preds = %126, %131, %138
  %143 = phi %class.CPDF_Stream* [ %136, %138 ], [ null, %131 ], [ null, %126 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #12
  %144 = icmp eq %class.CPDF_Stream* %143, null
  br i1 %144, label %247, label %145

145:                                              ; preds = %142
  %146 = ptrtoint %class.CPDF_Stream* %143 to i64
  %147 = bitcast %"class.fxcrt::RetainPtr.153"* %14 to i64*
  store i64 %146, i64* %147, align 8
  %148 = call zeroext i8 @_ZN8CPDF_DIB16StartLoadMaskDIBEN5fxcrt9RetainPtrIK11CPDF_StreamEE(%class.CPDF_DIB* %0, %"class.fxcrt::RetainPtr.153"* nonnull %14)
  %149 = getelementptr inbounds %"class.fxcrt::RetainPtr.153", %"class.fxcrt::RetainPtr.153"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %149, align 8
  %150 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %143, i64 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = add nsw i64 %151, -1
  store i64 %152, i64* %150, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %247

154:                                              ; preds = %145
  %155 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %143, i64 0, i32 0, i32 0
  %156 = bitcast %class.CPDF_Stream* %143 to void (%"class.fxcrt::Retainable"*)***
  %157 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %157, i64 1
  %159 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %158, align 8
  call void %159(%"class.fxcrt::Retainable"* nonnull %155) #12
  br label %247

160:                                              ; preds = %119
  %161 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %123, i64 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = add nsw i64 %162, 1
  store i64 %163, i64* %161, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  %164 = call %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream* nonnull %123) #12
  %165 = bitcast %"class.fxcrt::ByteString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)) #12
  %166 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %164, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %15) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #12
  %167 = icmp eq %class.CPDF_Array* %166, null
  br i1 %167, label %234, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %170 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %169, align 8
  %171 = icmp eq %class.CPDF_ColorSpace* %170, null
  br i1 %171, label %234, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 11
  br i1 %175, label %234, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %166, i64 0, i32 1
  %178 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %166, i64 0, i32 1, i32 0, i32 1
  %179 = bitcast %"class.fxcrt::RetainPtr.193"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::vector.191"* %177 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %180, %182
  %184 = ashr exact i64 %183, 3
  %185 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %186 = load i32, i32* %185, align 8
  %187 = zext i32 %186 to i64
  %188 = icmp eq i64 %184, %187
  br i1 %188, label %189, label %234

189:                                              ; preds = %176
  %190 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nonnull %170) #12
  %191 = load i32, i32* %185, align 8
  %192 = icmp ugt i32 %190, %191
  br i1 %192, label %234, label %193

193:                                              ; preds = %189
  %194 = bitcast %"class.std::__1::vector.350"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #12
  %195 = getelementptr inbounds %"class.std::__1::vector.350", %"class.std::__1::vector.350"* %16, i64 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.std::__1::vector.350", %"class.std::__1::vector.350"* %16, i64 0, i32 0, i32 1
  %197 = zext i32 %191 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 -86, i64 24, i1 false)
  call void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.350"* nonnull sret %16, %class.CPDF_Array* nonnull %166, i64 %197) #12
  %198 = bitcast float* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %198) #12
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  %199 = bitcast float* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #12
  store float 0xFFFFFFFFE0000000, float* %18, align 4
  %200 = bitcast float* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #12
  store float 0xFFFFFFFFE0000000, float* %19, align 4
  %201 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %169, align 8
  %202 = bitcast %"class.std::__1::vector.350"* %16 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast float** %196 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = sub i64 %205, %203
  %207 = ashr exact i64 %206, 2
  %208 = bitcast %"class.pdfium::span.357"* %20 to i64*
  store i64 %203, i64* %208, align 8
  %209 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %20, i64 0, i32 1
  store i64 %207, i64* %209, align 8
  %210 = bitcast %class.CPDF_ColorSpace* %201 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)***
  %211 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*** %210, align 8
  %212 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %211, i64 2
  %213 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %212, align 8
  %214 = call zeroext i1 %213(%class.CPDF_ColorSpace* %201, %"class.pdfium::span.357"* nonnull %20, float* nonnull %17, float* nonnull %18, float* nonnull %19) #12
  %215 = load float, float* %17, align 4
  %216 = fmul float %215, 2.550000e+02
  %217 = call i32 @FXSYS_roundf(float %216) #12
  %218 = load float, float* %18, align 4
  %219 = fmul float %218, 2.550000e+02
  %220 = call i32 @FXSYS_roundf(float %219) #12
  %221 = load float, float* %19, align 4
  %222 = fmul float %221, 2.550000e+02
  %223 = call i32 @FXSYS_roundf(float %222) #12
  %224 = shl i32 %217, 16
  %225 = shl i32 %220, 8
  %226 = or i32 %225, %224
  %227 = or i32 %226, %223
  store i32 %227, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %198) #12
  %228 = load float*, float** %195, align 8
  %229 = icmp eq float* %228, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %193
  %231 = ptrtoint float* %228 to i64
  store i64 %231, i64* %204, align 8
  %232 = bitcast float* %228 to i8*
  call void @_ZdlPv(i8* %232) #13
  br label %233

233:                                              ; preds = %193, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #12
  br label %234

234:                                              ; preds = %168, %189, %172, %160, %233, %176
  %235 = bitcast %"class.fxcrt::RetainPtr.153"* %21 to i64*
  store i64 %124, i64* %235, align 8
  %236 = call zeroext i8 @_ZN8CPDF_DIB16StartLoadMaskDIBEN5fxcrt9RetainPtrIK11CPDF_StreamEE(%class.CPDF_DIB* %0, %"class.fxcrt::RetainPtr.153"* nonnull %21)
  %237 = getelementptr inbounds %"class.fxcrt::RetainPtr.153", %"class.fxcrt::RetainPtr.153"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %237, align 8
  %238 = load i64, i64* %161, align 8
  %239 = add nsw i64 %238, -1
  store i64 %239, i64* %161, align 8
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %247

241:                                              ; preds = %234
  %242 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %123, i64 0, i32 0, i32 0
  %243 = bitcast %class.CPDF_Stream* %123 to void (%"class.fxcrt::Retainable"*)***
  %244 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %244, i64 1
  %246 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %245, align 8
  call void %246(%"class.fxcrt::Retainable"* nonnull %242) #12
  br label %247

247:                                              ; preds = %142, %241, %234, %154, %145, %113, %109
  %248 = phi i8 [ %87, %109 ], [ %87, %113 ], [ %236, %241 ], [ %236, %234 ], [ %148, %154 ], [ %148, %145 ], [ 1, %142 ]
  ret i8 %248
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN8CPDF_DIB19ContinueLoadDIBBaseEP19PauseIndicatorIface(%class.CPDF_DIB* nocapture, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.pdfium::span.246", align 8
  %6 = alloca %"class.pdfium::span.246", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 12
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 2
  br i1 %11, label %12, label %48

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_DIB*, %class.CPDF_DIB** %13, align 8
  %15 = icmp eq %class.CPDF_DIB* %14, null
  br i1 %15, label %272, label %16

16:                                               ; preds = %12
  %17 = tail call zeroext i8 @_ZN8CPDF_DIB19ContinueLoadDIBBaseEP19PauseIndicatorIface(%class.CPDF_DIB* nonnull %14, %class.PauseIndicatorIface* %1) #12
  %18 = icmp eq i8 %17, 2
  br i1 %18, label %272, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %20, align 8
  %22 = icmp eq %class.CPDF_ColorSpace* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 19
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %class.CPDF_ColorSpace* %21 to void (%class.CPDF_ColorSpace*, i1)***
  %29 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %28, align 8
  %30 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %29, i64 5
  %31 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %30, align 8
  tail call void %31(%class.CPDF_ColorSpace* nonnull %21, i1 zeroext false) #12
  br label %32

32:                                               ; preds = %19, %27, %23
  %33 = icmp eq i8 %17, 0
  br i1 %33, label %34, label %272

34:                                               ; preds = %32
  %35 = load %class.CPDF_DIB*, %class.CPDF_DIB** %13, align 8
  store %class.CPDF_DIB* null, %class.CPDF_DIB** %13, align 8
  %36 = icmp eq %class.CPDF_DIB* %35, null
  br i1 %36, label %272, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %35, i64 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, -1
  store i64 %40, i64* %38, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %272

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %35, i64 0, i32 0, i32 0
  %44 = bitcast %class.CPDF_DIB* %35 to void (%"class.fxcrt::Retainable"*)***
  %45 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, i64 1
  %47 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, align 8
  tail call void %47(%"class.fxcrt::Retainable"* nonnull %43) #12
  br label %272

48:                                               ; preds = %2
  %49 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %50, align 8
  %51 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %52 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %51, align 8
  %53 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %52, i64 0, i32 3
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %3, %"class.fxcrt::ByteString"* dereferenceable(8) %53) #12
  %54 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %54, label %270, label %55

55:                                               ; preds = %48
  %56 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #12
  br i1 %56, label %57, label %270

57:                                               ; preds = %55
  %58 = load i8, i8* %9, align 8
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %270, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 28
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.fxcodec::Jbig2Context"*, %"class.fxcodec::Jbig2Context"** %62, align 8
  %64 = icmp eq %"class.fxcodec::Jbig2Context"* %63, null
  br i1 %64, label %65, label %174

65:                                               ; preds = %60
  %66 = call i8* @_Znwm(i64 72) #13
  %67 = bitcast i8* %66 to %"class.fxcodec::Jbig2Context"*
  call void @_ZN7fxcodec12Jbig2ContextC1Ev(%"class.fxcodec::Jbig2Context"* nonnull %67) #12
  %68 = ptrtoint i8* %66 to i64
  %69 = load %"class.fxcodec::Jbig2Context"*, %"class.fxcodec::Jbig2Context"** %62, align 8
  %70 = bitcast %"class.std::__1::unique_ptr.233"* %61 to i64*
  store i64 %68, i64* %70, align 8
  %71 = icmp eq %"class.fxcodec::Jbig2Context"* %69, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %65
  call void @_ZN7fxcodec12Jbig2ContextD1Ev(%"class.fxcodec::Jbig2Context"* nonnull %69) #12
  %73 = bitcast %"class.fxcodec::Jbig2Context"* %69 to i8*
  call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %72, %65
  %75 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %51, align 8
  %76 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %75, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %77 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %76, align 8
  %78 = icmp eq %class.CPDF_Dictionary* %77, null
  br i1 %78, label %111, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #12
  %81 = call %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %77, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  %82 = icmp eq %class.CPDF_Stream* %81, null
  br i1 %82, label %109, label %83

83:                                               ; preds = %79
  %84 = call i8* @_Znwm(i64 64) #13, !noalias !24
  %85 = bitcast i8* %84 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %85, %class.CPDF_Stream* nonnull %81) #12, !noalias !24
  %86 = ptrtoint i8* %84 to i64
  %87 = getelementptr inbounds i8, i8* %84, i64 8
  %88 = bitcast i8* %87 to i64*
  %89 = load i64, i64* %88, align 8, !noalias !24
  %90 = add nsw i64 %89, 1
  store i64 %90, i64* %88, align 8, !noalias !24
  %91 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 25
  %92 = getelementptr inbounds %"class.fxcrt::RetainPtr.175", %"class.fxcrt::RetainPtr.175"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %92, align 8
  %94 = bitcast %"class.fxcrt::RetainPtr.175"* %91 to i64*
  store i64 %86, i64* %94, align 8
  %95 = icmp eq %class.CPDF_StreamAcc* %93, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %93, i64 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = add nsw i64 %98, -1
  store i64 %99, i64* %97, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %93, i64 0, i32 0
  %103 = bitcast %class.CPDF_StreamAcc* %93 to void (%"class.fxcrt::Retainable"*)***
  %104 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, i64 1
  %106 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %105, align 8
  call void %106(%"class.fxcrt::Retainable"* nonnull %102) #12
  br label %107

107:                                              ; preds = %101, %96, %83
  %108 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %92, align 8
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* %108) #12
  br label %109

109:                                              ; preds = %79, %107
  %110 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %51, align 8
  br label %111

111:                                              ; preds = %109, %74
  %112 = phi %class.CPDF_StreamAcc* [ %110, %109 ], [ %75, %74 ]
  %113 = icmp eq %class.CPDF_StreamAcc* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = bitcast %"class.pdfium::span.246"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #12
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.246"* nonnull sret %5, %class.CPDF_StreamAcc* nonnull %112) #12
  %116 = getelementptr inbounds %"class.pdfium::span.246", %"class.pdfium::span.246"* %5, i64 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %"class.pdfium::span.246", %"class.pdfium::span.246"* %5, i64 0, i32 1
  %119 = load i64, i64* %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #12
  %120 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %51, align 8
  %121 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %120, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %122 = load %class.CPDF_Stream*, %class.CPDF_Stream** %121, align 8
  %123 = icmp eq %class.CPDF_Stream* %122, null
  br i1 %123, label %127, label %124

124:                                              ; preds = %114
  %125 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %122, i64 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 8
  br label %127

127:                                              ; preds = %111, %114, %124
  %128 = phi i64 [ %119, %114 ], [ %119, %124 ], [ 0, %111 ]
  %129 = phi i8* [ %117, %114 ], [ %117, %124 ], [ null, %111 ]
  %130 = phi i32 [ 0, %114 ], [ %126, %124 ], [ 0, %111 ]
  %131 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %132 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %131, align 8
  %133 = icmp eq %class.CPDF_StreamAcc* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %127
  %135 = bitcast %"class.pdfium::span.246"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #12
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.246"* nonnull sret %6, %class.CPDF_StreamAcc* nonnull %132) #12
  %136 = getelementptr inbounds %"class.pdfium::span.246", %"class.pdfium::span.246"* %6, i64 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds %"class.pdfium::span.246", %"class.pdfium::span.246"* %6, i64 0, i32 1
  %139 = load i64, i64* %138, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #12
  %140 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %131, align 8
  %141 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %140, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %142 = load %class.CPDF_Stream*, %class.CPDF_Stream** %141, align 8
  %143 = icmp eq %class.CPDF_Stream* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %134
  %145 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %142, i64 0, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  br label %147

147:                                              ; preds = %127, %134, %144
  %148 = phi i8* [ %137, %134 ], [ %137, %144 ], [ null, %127 ]
  %149 = phi i64 [ %139, %134 ], [ %139, %144 ], [ 0, %127 ]
  %150 = phi i32 [ 0, %134 ], [ %146, %144 ], [ 0, %127 ]
  %151 = load %"class.fxcodec::Jbig2Context"*, %"class.fxcodec::Jbig2Context"** %62, align 8
  %152 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 1, i32 0
  %153 = load %class.CPDF_Document*, %class.CPDF_Document** %152, align 8
  %154 = call %class.JBig2_DocumentContext* @_ZN13CPDF_Document23GetOrCreateCodecContextEv(%class.CPDF_Document* %153) #12
  %155 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 0, i32 0
  store i8* %129, i8** %159, align 8
  %160 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  store i64 %128, i64* %160, align 8
  %161 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 0, i32 0
  store i8* %148, i8** %161, align 8
  %162 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %8, i64 0, i32 1
  store i64 %149, i64* %162, align 8
  %163 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %164 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %163, align 8
  %165 = bitcast %class.CFX_DIBitmap* %164 to i8* (%class.CFX_DIBitmap*)***
  %166 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %165, align 8
  %167 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %166, i64 2
  %168 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %167, align 8
  %169 = call i8* %168(%class.CFX_DIBitmap* %164) #12
  %170 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %163, align 8
  %171 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %170, i64 0, i32 0, i32 4
  %172 = load i32, i32* %171, align 4
  %173 = call i32 @_ZN7fxcodec12Jbig2Decoder11StartDecodeEPNS_12Jbig2ContextEP21JBig2_DocumentContextjjN6pdfium4spanIKhEEjS8_jPhjP19PauseIndicatorIface(%"class.fxcodec::Jbig2Context"* %151, %class.JBig2_DocumentContext* %154, i32 %156, i32 %158, %"class.pdfium::span"* nonnull %7, i32 %130, %"class.pdfium::span"* nonnull %8, i32 %150, i8* %169, i32 %172, %class.PauseIndicatorIface* %1) #12
  br label %176

174:                                              ; preds = %60
  %175 = call i32 @_ZN7fxcodec12Jbig2Decoder14ContinueDecodeEPNS_12Jbig2ContextEP19PauseIndicatorIface(%"class.fxcodec::Jbig2Context"* nonnull %63, %class.PauseIndicatorIface* %1) #12
  br label %176

176:                                              ; preds = %174, %147
  %177 = phi i32 [ %175, %174 ], [ %173, %147 ]
  %178 = icmp slt i32 %177, 0
  br i1 %178, label %179, label %214

179:                                              ; preds = %176
  %180 = load %"class.fxcodec::Jbig2Context"*, %"class.fxcodec::Jbig2Context"** %62, align 8
  store %"class.fxcodec::Jbig2Context"* null, %"class.fxcodec::Jbig2Context"** %62, align 8
  %181 = icmp eq %"class.fxcodec::Jbig2Context"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %179
  call void @_ZN7fxcodec12Jbig2ContextD1Ev(%"class.fxcodec::Jbig2Context"* nonnull %180) #12
  %183 = bitcast %"class.fxcodec::Jbig2Context"* %180 to i8*
  call void @_ZdlPv(i8* %183) #13
  br label %184

184:                                              ; preds = %179, %182
  %185 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %186 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %185, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %185, align 8
  %187 = icmp eq %class.CFX_DIBitmap* %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %186, i64 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = add nsw i64 %190, -1
  store i64 %191, i64* %189, align 8
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %199

193:                                              ; preds = %188
  %194 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %186, i64 0, i32 0, i32 0
  %195 = bitcast %class.CFX_DIBitmap* %186 to void (%"class.fxcrt::Retainable"*)***
  %196 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %196, i64 1
  %198 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %197, align 8
  call void %198(%"class.fxcrt::Retainable"* nonnull %194) #12
  br label %199

199:                                              ; preds = %184, %188, %193
  %200 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  %201 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %200, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %200, align 8
  %202 = icmp eq %class.CPDF_StreamAcc* %201, null
  br i1 %202, label %270, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %201, i64 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = add nsw i64 %205, -1
  store i64 %206, i64* %204, align 8
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %270

208:                                              ; preds = %203
  %209 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %201, i64 0, i32 0
  %210 = bitcast %class.CPDF_StreamAcc* %201 to void (%"class.fxcrt::Retainable"*)***
  %211 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %211, i64 1
  %213 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %212, align 8
  call void %213(%"class.fxcrt::Retainable"* nonnull %209) #12
  br label %270

214:                                              ; preds = %176
  %215 = icmp eq i32 %177, 3
  br i1 %215, label %270, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 18
  %218 = load i8, i8* %217, align 2, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %257, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %222 = load %class.CPDF_DIB*, %class.CPDF_DIB** %221, align 8
  %223 = icmp eq %class.CPDF_DIB* %222, null
  br i1 %223, label %257, label %224

224:                                              ; preds = %220
  %225 = call zeroext i8 @_ZN8CPDF_DIB19ContinueLoadDIBBaseEP19PauseIndicatorIface(%class.CPDF_DIB* nonnull %222, %class.PauseIndicatorIface* %1) #12
  %226 = icmp eq i8 %225, 2
  br i1 %226, label %256, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %229 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %228, align 8
  %230 = icmp eq %class.CPDF_ColorSpace* %229, null
  br i1 %230, label %240, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 19
  %233 = load i8, i8* %232, align 1, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %240, label %235

235:                                              ; preds = %231
  %236 = bitcast %class.CPDF_ColorSpace* %229 to void (%class.CPDF_ColorSpace*, i1)***
  %237 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %236, align 8
  %238 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %237, i64 5
  %239 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %238, align 8
  call void %239(%class.CPDF_ColorSpace* nonnull %229, i1 zeroext false) #12
  br label %240

240:                                              ; preds = %227, %235, %231
  %241 = icmp eq i8 %225, 0
  br i1 %241, label %242, label %257

242:                                              ; preds = %240
  %243 = load %class.CPDF_DIB*, %class.CPDF_DIB** %221, align 8
  store %class.CPDF_DIB* null, %class.CPDF_DIB** %221, align 8
  %244 = icmp eq %class.CPDF_DIB* %243, null
  br i1 %244, label %257, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %243, i64 0, i32 0, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = add nsw i64 %247, -1
  store i64 %248, i64* %246, align 8
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %257

250:                                              ; preds = %245
  %251 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %243, i64 0, i32 0, i32 0
  %252 = bitcast %class.CPDF_DIB* %243 to void (%"class.fxcrt::Retainable"*)***
  %253 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %252, align 8
  %254 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %253, i64 1
  %255 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %254, align 8
  call void %255(%"class.fxcrt::Retainable"* nonnull %251) #12
  br label %257

256:                                              ; preds = %224
  store i8 2, i8* %9, align 8
  br label %270

257:                                              ; preds = %220, %242, %245, %250, %240, %216
  %258 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %259 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %258, align 8
  %260 = icmp eq %class.CPDF_ColorSpace* %259, null
  br i1 %260, label %270, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 19
  %263 = load i8, i8* %262, align 1, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %270, label %265

265:                                              ; preds = %261
  %266 = bitcast %class.CPDF_ColorSpace* %259 to void (%class.CPDF_ColorSpace*, i1)***
  %267 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %266, align 8
  %268 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %267, i64 5
  %269 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %268, align 8
  call void %269(%class.CPDF_ColorSpace* nonnull %259, i1 zeroext false) #12
  br label %270

270:                                              ; preds = %257, %55, %256, %208, %203, %199, %214, %265, %261, %57, %48
  %271 = phi i8 [ 0, %48 ], [ 1, %55 ], [ 0, %57 ], [ 2, %214 ], [ 2, %256 ], [ 1, %261 ], [ 1, %265 ], [ 1, %257 ], [ 0, %199 ], [ 0, %203 ], [ 0, %208 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  br label %272

272:                                              ; preds = %12, %32, %16, %42, %37, %34, %270
  %273 = phi i8 [ %271, %270 ], [ 1, %12 ], [ 2, %16 ], [ 1, %32 ], [ 0, %42 ], [ 0, %37 ], [ 0, %34 ]
  ret i8 %273
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN8CPDF_DIB19ContinueLoadMaskDIBEP19PauseIndicatorIface(%class.CPDF_DIB* nocapture, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_DIB*, %class.CPDF_DIB** %3, align 8
  %5 = icmp eq %class.CPDF_DIB* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i8 @_ZN8CPDF_DIB19ContinueLoadDIBBaseEP19PauseIndicatorIface(%class.CPDF_DIB* nonnull %4, %class.PauseIndicatorIface* %1)
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %38, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %10, align 8
  %12 = icmp eq %class.CPDF_ColorSpace* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 19
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %class.CPDF_ColorSpace* %11 to void (%class.CPDF_ColorSpace*, i1)***
  %19 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %18, align 8
  %20 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %19, i64 5
  %21 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %20, align 8
  tail call void %21(%class.CPDF_ColorSpace* nonnull %11, i1 zeroext false) #12
  br label %22

22:                                               ; preds = %9, %13, %17
  %23 = icmp eq i8 %7, 0
  br i1 %23, label %24, label %38

24:                                               ; preds = %22
  %25 = load %class.CPDF_DIB*, %class.CPDF_DIB** %3, align 8
  store %class.CPDF_DIB* null, %class.CPDF_DIB** %3, align 8
  %26 = icmp eq %class.CPDF_DIB* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %25, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, -1
  store i64 %30, i64* %28, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %25, i64 0, i32 0, i32 0
  %34 = bitcast %class.CPDF_DIB* %25 to void (%"class.fxcrt::Retainable"*)***
  %35 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, i64 1
  %37 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, align 8
  tail call void %37(%"class.fxcrt::Retainable"* nonnull %33) #12
  br label %38

38:                                               ; preds = %2, %32, %27, %24, %6, %22
  %39 = phi i8 [ 1, %2 ], [ 2, %6 ], [ 1, %22 ], [ 0, %24 ], [ 0, %27 ], [ 0, %32 ]
  ret i8 %39
}

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc*) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.246"* sret, %class.CPDF_StreamAcc*) local_unnamed_addr #1

declare i32 @_ZN7fxcodec12Jbig2Decoder11StartDecodeEPNS_12Jbig2ContextEP21JBig2_DocumentContextjjN6pdfium4spanIKhEEjS8_jPhjP19PauseIndicatorIface(%"class.fxcodec::Jbig2Context"*, %class.JBig2_DocumentContext*, i32, i32, %"class.pdfium::span"*, i32, %"class.pdfium::span"*, i32, i8*, i32, %class.PauseIndicatorIface*) local_unnamed_addr #1

declare %class.JBig2_DocumentContext* @_ZN13CPDF_Document23GetOrCreateCodecContextEv(%class.CPDF_Document*) local_unnamed_addr #1

declare i32 @_ZN7fxcodec12Jbig2Decoder14ContinueDecodeEPNS_12Jbig2ContextEP19PauseIndicatorIface(%"class.fxcodec::Jbig2Context"*, %class.PauseIndicatorIface*) local_unnamed_addr #1

declare void @_Z15GetDecoderArrayPK15CPDF_Dictionary(%"class.pdfium::Optional"* sret, %class.CPDF_Dictionary*) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #1

declare void @_ZN16CPDF_DocPageData13GetColorSpaceEPK11CPDF_ObjectPK15CPDF_Dictionary(%"class.fxcrt::RetainPtr.182"* sret, %class.CPDF_DocPageData*, %class.CPDF_Object*, %class.CPDF_Dictionary*) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace*) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIB17ValidateDictParamERKN5fxcrt10ByteStringE(%class.CPDF_DIB* nocapture, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  store i32 %4, i32* %5, align 8
  %6 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #12
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 16
  store i8 0, i8* %8, align 4
  br label %21

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)) #12
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #12
  br i1 %12, label %13, label %15

13:                                               ; preds = %11, %9
  store i32 1, i32* %5, align 8
  %14 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  store i32 1, i32* %14, align 8
  br label %21

15:                                               ; preds = %11
  %16 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #12
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  store i32 8, i32* %5, align 8
  br label %21

18:                                               ; preds = %15
  %19 = load i32, i32* %5, align 8
  switch i32 %19, label %20 [
    i32 8, label %21
    i32 4, label %21
    i32 2, label %21
    i32 1, label %21
    i32 16, label %21
  ]

20:                                               ; preds = %18
  store i32 0, i32* %5, align 8
  br label %21

21:                                               ; preds = %13, %17, %18, %18, %18, %18, %18, %7, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPDF_DIB21GetDecodeAndMaskArrayEPbS0_(%class.CPDF_DIB*, i8* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %11, align 8
  %13 = icmp eq %class.CPDF_ColorSpace* %12, null
  br i1 %13, label %185, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20
  %16 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 1
  %20 = bitcast %struct.DIB_COMP_DATA** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.208"* %15 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 4
  %26 = icmp ult i64 %25, %18
  %27 = inttoptr i64 %23 to %struct.DIB_COMP_DATA*
  br i1 %26, label %28, label %30

28:                                               ; preds = %14
  %29 = sub nsw i64 %18, %25
  tail call void @_ZNSt3__16vectorI13DIB_COMP_DATANS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.208"* %15, i64 %29) #12
  br label %34

30:                                               ; preds = %14
  %31 = icmp ugt i64 %25, %18
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %27, i64 %18
  store %struct.DIB_COMP_DATA* %33, %struct.DIB_COMP_DATA** %19, align 8
  br label %34

34:                                               ; preds = %28, %30, %32
  %35 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %36 = load i32, i32* %35, align 8
  %37 = shl nsw i32 -1, %36
  %38 = xor i32 %37, -1
  %39 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %40 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %39, align 8
  %41 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)) #12
  %42 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %40, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  %43 = icmp eq %class.CPDF_Array* %42, null
  %44 = load i32, i32* %16, align 8
  %45 = icmp ne i32 %44, 0
  br i1 %43, label %54, label %46

46:                                               ; preds = %34
  br i1 %45, label %47, label %130

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %15, i64 0, i32 0, i32 0
  %49 = sitofp i32 %38 to float
  %50 = bitcast float* %5 to i8*
  %51 = bitcast float* %6 to i8*
  %52 = bitcast float* %7 to i8*
  %53 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  br label %60

54:                                               ; preds = %34
  br i1 %45, label %55, label %130

55:                                               ; preds = %54
  %56 = bitcast float* %8 to i8*
  %57 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %15, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %59 = sitofp i32 %38 to float
  br label %102

60:                                               ; preds = %47, %97
  %61 = phi i64 [ 0, %47 ], [ %98, %97 ]
  %62 = trunc i64 %61 to i32
  %63 = shl i32 %62, 1
  %64 = zext i32 %63 to i64
  %65 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %42, i64 %64) #12
  %66 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %48, align 8
  %67 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %66, i64 %61, i32 0
  store float %65, float* %67, align 4
  %68 = or i32 %63, 1
  %69 = zext i32 %68 to i64
  %70 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %42, i64 %69) #12
  %71 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %48, align 8
  %72 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %71, i64 %61, i32 0
  %73 = load float, float* %72, align 4
  %74 = fsub float %70, %73
  %75 = fdiv float %74, %49
  %76 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %71, i64 %61, i32 1
  store float %75, float* %76, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #12
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #12
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #12
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %77 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %11, align 8
  %78 = bitcast %class.CPDF_ColorSpace* %77 to void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)***
  %79 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)**, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %79, i64 3
  %81 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %80, align 8
  call void %81(%class.CPDF_ColorSpace* %77, i32 %62, float* nonnull %5, float* nonnull %6, float* nonnull %7) #12
  %82 = load i32, i32* %53, align 4
  %83 = icmp eq i32 %82, 10
  br i1 %83, label %86, label %84

84:                                               ; preds = %60
  %85 = load float, float* %7, align 4
  br label %87

86:                                               ; preds = %60
  store float %49, float* %7, align 4
  br label %87

87:                                               ; preds = %84, %86
  %88 = phi float [ %85, %84 ], [ %49, %86 ]
  %89 = load float, float* %6, align 4
  %90 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %48, align 8
  %91 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %90, i64 %61, i32 0
  %92 = load float, float* %91, align 4
  %93 = fcmp une float %89, %92
  %94 = fcmp une float %88, %70
  %95 = or i1 %93, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %87
  store i8 0, i8* %1, align 1
  br label %97

97:                                               ; preds = %87, %96
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #12
  %98 = add nuw nsw i64 %61, 1
  %99 = load i32, i32* %16, align 8
  %100 = zext i32 %99 to i64
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %60, label %130

102:                                              ; preds = %55, %118
  %103 = phi i64 [ 0, %55 ], [ %126, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #12
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %104 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %11, align 8
  %105 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %57, align 8
  %106 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %105, i64 %103, i32 0
  %107 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %105, i64 %103, i32 1
  %108 = bitcast %class.CPDF_ColorSpace* %104 to void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)***
  %109 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)**, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*** %108, align 8
  %110 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %109, i64 3
  %111 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %110, align 8
  %112 = trunc i64 %103 to i32
  call void %111(%class.CPDF_ColorSpace* %104, i32 %112, float* nonnull %8, float* %106, float* %107) #12
  %113 = load i32, i32* %58, align 4
  %114 = icmp eq i32 %113, 10
  br i1 %114, label %115, label %118

115:                                              ; preds = %102
  %116 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %57, align 8
  %117 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %116, i64 %103, i32 1
  store float %59, float* %117, align 4
  br label %118

118:                                              ; preds = %115, %102
  %119 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %57, align 8
  %120 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %119, i64 %103, i32 1
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %119, i64 %103, i32 0
  %123 = load float, float* %122, align 4
  %124 = fsub float %121, %123
  %125 = fdiv float %124, %59
  store float %125, float* %120, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #12
  %126 = add nuw nsw i64 %103, 1
  %127 = load i32, i32* %16, align 8
  %128 = zext i32 %127 to i64
  %129 = icmp ult i64 %126, %128
  br i1 %129, label %102, label %130

130:                                              ; preds = %97, %118, %46, %54
  %131 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %39, align 8
  %132 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #12
  %133 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %131, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #12
  br i1 %133, label %185, label %134

134:                                              ; preds = %130
  %135 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %39, align 8
  %136 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #12
  %137 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %135, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #12
  %138 = icmp eq %class.CPDF_Object* %137, null
  br i1 %138, label %185, label %139

139:                                              ; preds = %134
  %140 = bitcast %class.CPDF_Object* %137 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %141 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %140, align 8
  %142 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %141, i64 24
  %143 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %142, align 8
  %144 = call %class.CPDF_Array* %143(%class.CPDF_Object* nonnull %137) #12
  %145 = icmp eq %class.CPDF_Array* %144, null
  br i1 %145, label %185, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %144, i64 0, i32 1
  %148 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %144, i64 0, i32 1, i32 0, i32 1
  %149 = bitcast %"class.fxcrt::RetainPtr.193"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.std::__1::vector.191"* %147 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = sub i64 %150, %152
  %154 = ashr exact i64 %153, 3
  %155 = load i32, i32* %16, align 8
  %156 = shl i32 %155, 1
  %157 = zext i32 %156 to i64
  %158 = icmp ult i64 %154, %157
  %159 = icmp eq i32 %155, 0
  %160 = or i1 %158, %159
  br i1 %160, label %184, label %161

161:                                              ; preds = %146
  %162 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %15, i64 0, i32 0, i32 0
  br label %163

163:                                              ; preds = %161, %163
  %164 = phi i64 [ 0, %161 ], [ %180, %163 ]
  %165 = trunc i64 %164 to i32
  %166 = shl i32 %165, 1
  %167 = zext i32 %166 to i64
  %168 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %144, i64 %167) #12
  %169 = or i32 %166, 1
  %170 = zext i32 %169 to i64
  %171 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %144, i64 %170) #12
  %172 = icmp sgt i32 %168, 0
  %173 = select i1 %172, i32 %168, i32 0
  %174 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %162, align 8
  %175 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %174, i64 %164, i32 2
  store i32 %173, i32* %175, align 4
  %176 = icmp sgt i32 %171, %38
  %177 = select i1 %176, i32 %38, i32 %171
  %178 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %162, align 8
  %179 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %178, i64 %164, i32 3
  store i32 %177, i32* %179, align 4
  %180 = add nuw nsw i64 %164, 1
  %181 = load i32, i32* %16, align 8
  %182 = zext i32 %181 to i64
  %183 = icmp ult i64 %180, %182
  br i1 %183, label %163, label %184

184:                                              ; preds = %163, %146
  store i8 1, i8* %2, align 1
  br label %185

185:                                              ; preds = %3, %130, %184, %139, %134
  %186 = phi i1 [ false, %3 ], [ true, %134 ], [ true, %139 ], [ true, %184 ], [ true, %130 ]
  ret i1 %186
}

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIB13LoadJpxBitmapEv(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CPDF_DIB*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.182", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.pdfium::span"*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"class.pdfium::span.246"*
  %8 = alloca %"class.fxcrt::RetainPtr.182", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %11, align 8
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.246"* nonnull sret %7, %class.CPDF_StreamAcc* %12) #12
  %13 = load <2 x i64>, <2 x i64>* %6, align 16
  store <2 x i64> %13, <2 x i64>* %4, align 16
  %14 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 5
  %15 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %17 = icmp eq %class.CPDF_ColorSpace* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %16, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 10
  %22 = select i1 %21, i32 2, i32 1
  br label %23

23:                                               ; preds = %2, %18
  %24 = phi i32 [ 0, %2 ], [ %22, %18 ]
  %25 = call %"class.fxcodec::CJPX_Decoder"* @_ZN7fxcodec12CJPX_Decoder6CreateEN6pdfium4spanIKhEENS0_16ColorSpaceOptionE(%"class.pdfium::span"* nonnull %5, i32 %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  %26 = icmp eq %"class.fxcodec::CJPX_Decoder"* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %28, align 8
  br label %793

29:                                               ; preds = %23
  %30 = call zeroext i1 @_ZN7fxcodec12CJPX_Decoder11StartDecodeEv(%"class.fxcodec::CJPX_Decoder"* nonnull %25) #12
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %32, align 8
  br label %791

33:                                               ; preds = %29
  %34 = call { i64, i64 } @_ZNK7fxcodec12CJPX_Decoder7GetInfoEv(%"class.fxcodec::CJPX_Decoder"* nonnull %25) #12
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = extractvalue { i64, i64 } %34, 1
  %40 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, %36
  br i1 %42, label %47, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp sgt i32 %45, %38
  br i1 %46, label %47, label %49

47:                                               ; preds = %43, %33
  %48 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %48, align 8
  br label %791

49:                                               ; preds = %43
  %50 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %51 = icmp eq %class.CPDF_ColorSpace* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = trunc i64 %39 to i32
  br label %87

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %50, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %59 = icmp eq %class.CPDF_ColorSpace* %58, null
  %60 = trunc i64 %39 to i32
  br i1 %59, label %87, label %61

61:                                               ; preds = %54
  %62 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nonnull %58) #12
  %63 = icmp eq i32 %62, %60
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nonnull %58) #12
  %66 = icmp eq i32 %65, 3
  %67 = icmp eq i64 %39, 4294967300
  %68 = and i1 %67, %66
  br i1 %68, label %141, label %90

69:                                               ; preds = %61
  %70 = bitcast %"class.fxcrt::RetainPtr.182"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #12
  call void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.182"* nonnull sret %3, i32 2) #12
  %71 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %71, align 8
  %73 = icmp eq %class.CPDF_ColorSpace* %72, %58
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %71, align 8
  %74 = icmp eq %class.CPDF_ColorSpace* %72, null
  br i1 %74, label %86, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %72, i64 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = add nsw i64 %77, -1
  store i64 %78, i64* %76, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %72, i64 0, i32 0
  %82 = bitcast %class.CPDF_ColorSpace* %72 to void (%"class.fxcrt::Retainable"*)***
  %83 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %83, i64 1
  %85 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %84, align 8
  call void %85(%"class.fxcrt::Retainable"* nonnull %81) #12
  br label %86

86:                                               ; preds = %80, %75, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #12
  br i1 %73, label %92, label %159

87:                                               ; preds = %52, %54
  %88 = phi i32 [ %53, %52 ], [ %60, %54 ]
  switch i32 %88, label %155 [
    i32 3, label %89
    i32 4, label %106
  ]

89:                                               ; preds = %87
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %15, align 8
  br label %155

90:                                               ; preds = %64
  %91 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %91, align 8
  br label %780

92:                                               ; preds = %86
  %93 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %94 = bitcast %class.CPDF_ColorSpace* %93 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %15, align 8
  %95 = icmp eq %class.CPDF_ColorSpace* %93, null
  br i1 %95, label %159, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %93, i64 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = add nsw i64 %98, -1
  store i64 %99, i64* %97, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %159

101:                                              ; preds = %96
  %102 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %93, i64 0, i32 0
  %103 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %94, align 8
  %104 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %103, i64 1
  %105 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %104, align 8
  call void %105(%"class.fxcrt::Retainable"* nonnull %102) #12
  br label %159

106:                                              ; preds = %87
  %107 = bitcast %"class.fxcrt::RetainPtr.182"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #12
  call void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.182"* nonnull sret %8, i32 3) #12
  %108 = getelementptr inbounds %"class.fxcrt::RetainPtr.182", %"class.fxcrt::RetainPtr.182"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.fxcrt::RetainPtr.182"* %8 to i64*
  %110 = load i64, i64* %109, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %108, align 8
  %111 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %112 = bitcast %"class.fxcrt::RetainPtr.182"* %14 to i64*
  store i64 %110, i64* %112, align 8
  %113 = icmp eq %class.CPDF_ColorSpace* %111, null
  br i1 %113, label %114, label %115

114:                                              ; preds = %106
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %108, align 8
  br label %140

115:                                              ; preds = %106
  %116 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %111, i64 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = add nsw i64 %117, -1
  store i64 %118, i64* %116, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %115
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %108, align 8
  br label %140

121:                                              ; preds = %115
  %122 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %111, i64 0, i32 0
  %123 = bitcast %class.CPDF_ColorSpace* %111 to void (%"class.fxcrt::Retainable"*)***
  %124 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %124, i64 1
  %126 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, align 8
  call void %126(%"class.fxcrt::Retainable"* nonnull %122) #12
  %127 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %108, align 8
  %128 = bitcast %class.CPDF_ColorSpace* %127 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %108, align 8
  %129 = icmp eq %class.CPDF_ColorSpace* %127, null
  br i1 %129, label %140, label %130

130:                                              ; preds = %121
  %131 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %127, i64 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = add nsw i64 %132, -1
  store i64 %133, i64* %131, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %130
  %136 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %127, i64 0, i32 0
  %137 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %128, align 8
  %138 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %137, i64 1
  %139 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %138, align 8
  call void %139(%"class.fxcrt::Retainable"* nonnull %136) #12
  br label %140

140:                                              ; preds = %120, %114, %121, %130, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #12
  br label %155

141:                                              ; preds = %64
  %142 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %15, align 8
  %143 = icmp eq %class.CPDF_ColorSpace* %142, null
  br i1 %143, label %171, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %142, i64 0, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = add nsw i64 %146, -1
  store i64 %147, i64* %145, align 8
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %171

149:                                              ; preds = %144
  %150 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %142, i64 0, i32 0
  %151 = bitcast %class.CPDF_ColorSpace* %142 to void (%"class.fxcrt::Retainable"*)***
  %152 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %152, i64 1
  %154 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %153, align 8
  call void %154(%"class.fxcrt::Retainable"* nonnull %150) #12
  br label %171

155:                                              ; preds = %89, %87, %140
  %156 = phi i1 [ false, %140 ], [ false, %87 ], [ true, %89 ]
  br i1 %51, label %157, label %159

157:                                              ; preds = %155
  %158 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 8
  store i32 %88, i32* %158, align 8
  br label %159

159:                                              ; preds = %92, %96, %101, %155, %86, %157
  %160 = phi i1 [ %156, %155 ], [ %156, %157 ], [ false, %86 ], [ true, %101 ], [ true, %96 ], [ true, %92 ]
  %161 = phi i32 [ %88, %155 ], [ %88, %157 ], [ %60, %86 ], [ %60, %101 ], [ %60, %96 ], [ %60, %92 ]
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %171, label %163

163:                                              ; preds = %159
  %164 = icmp ult i32 %161, 4
  br i1 %164, label %171, label %165

165:                                              ; preds = %163
  %166 = icmp eq i32 %161, 4
  br i1 %166, label %171, label %167

167:                                              ; preds = %165
  %168 = mul i32 %161, %36
  %169 = add i32 %168, 2
  %170 = udiv i32 %169, 3
  br label %171

171:                                              ; preds = %141, %144, %149, %165, %163, %159, %167
  %172 = phi i1 [ false, %159 ], [ false, %163 ], [ false, %165 ], [ false, %167 ], [ true, %149 ], [ true, %144 ], [ true, %141 ]
  %173 = phi i1 [ %160, %159 ], [ %160, %163 ], [ %160, %165 ], [ %160, %167 ], [ true, %149 ], [ true, %144 ], [ true, %141 ]
  %174 = phi i32 [ %36, %159 ], [ %36, %163 ], [ %36, %165 ], [ %170, %167 ], [ %36, %149 ], [ %36, %144 ], [ %36, %141 ]
  %175 = phi i16 [ 8, %159 ], [ 24, %163 ], [ 32, %165 ], [ 24, %167 ], [ 32, %149 ], [ 32, %144 ], [ 32, %141 ]
  %176 = call i8* @_Znwm(i64 80) #13, !noalias !27
  %177 = bitcast i8* %176 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %177) #12, !noalias !27
  %178 = ptrtoint i8* %176 to i64
  %179 = getelementptr inbounds i8, i8* %176, i64 8
  %180 = bitcast i8* %179 to i64*
  %181 = load i64, i64* %180, align 8, !noalias !27
  %182 = add nsw i64 %181, 1
  store i64 %182, i64* %180, align 8, !noalias !27
  %183 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %177, i32 %174, i32 %38, i16 zeroext %175) #12
  br i1 %183, label %186, label %184

184:                                              ; preds = %171
  %185 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %185, align 8
  br label %769

186:                                              ; preds = %171
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* nonnull %177, i32 -1) #12
  %187 = bitcast i8* %176 to i8* (%class.CFX_DIBitmap*)***
  %188 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %187, align 8
  %189 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %188, i64 2
  %190 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %189, align 8
  %191 = call i8* %190(%class.CFX_DIBitmap* nonnull %177) #12
  %192 = bitcast i8* %176 to %class.CFX_DIBBase*
  %193 = getelementptr inbounds i8, i8* %176, i64 28
  %194 = bitcast i8* %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = call zeroext i1 @_ZN7fxcodec12CJPX_Decoder6DecodeEPhjb(%"class.fxcodec::CJPX_Decoder"* nonnull %25, i8* %191, i32 %195, i1 zeroext %173) #12
  br i1 %196, label %199, label %197

197:                                              ; preds = %186
  %198 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %198, align 8
  br label %769

199:                                              ; preds = %186
  br i1 %172, label %200, label %653

200:                                              ; preds = %199
  %201 = call i8* @_Znwm(i64 80) #13, !noalias !30
  %202 = bitcast i8* %201 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %202) #12, !noalias !30
  %203 = ptrtoint i8* %201 to i64
  %204 = getelementptr inbounds i8, i8* %201, i64 8
  %205 = bitcast i8* %204 to i64*
  %206 = load i64, i64* %205, align 8, !noalias !30
  %207 = add nsw i64 %206, 1
  store i64 %207, i64* %205, align 8, !noalias !30
  %208 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %202, i32 %174, i32 %38, i16 zeroext 24) #12
  br i1 %208, label %220, label %209

209:                                              ; preds = %200
  %210 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %210, align 8
  %211 = load i64, i64* %205, align 8
  %212 = add nsw i64 %211, -1
  store i64 %212, i64* %205, align 8
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %769

214:                                              ; preds = %209
  %215 = bitcast i8* %201 to %"class.fxcrt::Retainable"*
  %216 = bitcast i8* %201 to void (%"class.fxcrt::Retainable"*)***
  %217 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %216, align 8
  %218 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %217, i64 1
  %219 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %218, align 8
  call void %219(%"class.fxcrt::Retainable"* nonnull %215) #12
  br label %769

220:                                              ; preds = %200
  %221 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %222 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %221, align 8
  %223 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0)) #12
  %224 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %222, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #12
  %225 = icmp eq i32 %224, 1
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #12
  br i1 %225, label %238, label %226

226:                                              ; preds = %220
  %227 = icmp eq i32 %38, 0
  br i1 %227, label %643, label %228

228:                                              ; preds = %226
  %229 = bitcast i8* %176 to i8* (%class.CFX_DIBitmap*, i32)***
  %230 = bitcast i8* %201 to %class.CFX_DIBBase*
  %231 = bitcast i8* %201 to i8* (%class.CFX_DIBBase*, i32)***
  %232 = icmp eq i32 %174, 0
  %233 = add i32 %174, -1
  %234 = and i32 %174, 3
  %235 = icmp ult i32 %233, 3
  %236 = sub i32 %174, %234
  %237 = icmp eq i32 %234, 0
  br label %604

238:                                              ; preds = %220
  %239 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 27, i32 0
  store i32 %174, i32* %239, align 8
  %240 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 27, i32 1
  store i32 %38, i32* %240, align 4
  %241 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 27, i32 2
  %242 = mul i32 %174, %38
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 27, i32 2, i32 0, i32 2, i32 0, i32 0
  %245 = bitcast i8** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.std::__1::vector.227"* %241 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %246, %248
  %250 = icmp ult i64 %249, %243
  br i1 %250, label %251, label %386

251:                                              ; preds = %238
  %252 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 27, i32 2, i32 0, i32 1
  %253 = bitcast i8** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = sub i64 %254, %248
  %256 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %243, i64 1) #12
  %257 = getelementptr inbounds i8, i8* %256, i64 %255
  %258 = ptrtoint i8* %257 to i64
  %259 = getelementptr inbounds i8, i8* %256, i64 %243
  %260 = ptrtoint i8* %259 to i64
  %261 = getelementptr inbounds %"class.std::__1::vector.227", %"class.std::__1::vector.227"* %241, i64 0, i32 0, i32 0
  %262 = load i8*, i8** %261, align 8
  %263 = ptrtoint i8* %262 to i64
  %264 = load i8*, i8** %252, align 8
  %265 = ptrtoint i8* %264 to i64
  %266 = icmp eq i8* %264, %262
  br i1 %266, label %380, label %267

267:                                              ; preds = %251
  %268 = ptrtoint i8* %264 to i64
  %269 = sub i64 %268, %263
  %270 = icmp ult i64 %269, 16
  br i1 %270, label %366, label %271

271:                                              ; preds = %267
  %272 = sub i64 %254, %265
  %273 = sub i64 %272, %248
  %274 = getelementptr i8, i8* %262, i64 %273
  %275 = ptrtoint i8* %274 to i64
  %276 = getelementptr i8, i8* %256, i64 %275
  %277 = icmp ult i8* %276, %264
  %278 = icmp ult i8* %262, %257
  %279 = and i1 %277, %278
  br i1 %279, label %366, label %280

280:                                              ; preds = %271
  %281 = and i64 %269, -16
  %282 = sub i64 0, %281
  %283 = getelementptr i8, i8* %257, i64 %282
  %284 = sub i64 0, %281
  %285 = getelementptr i8, i8* %264, i64 %284
  %286 = add i64 %281, -16
  %287 = lshr exact i64 %286, 4
  %288 = add nuw nsw i64 %287, 1
  %289 = and i64 %288, 3
  %290 = icmp ult i64 %286, 48
  br i1 %290, label %343, label %291

291:                                              ; preds = %280
  %292 = sub nsw i64 %288, %289
  %293 = getelementptr i8, i8* %257, i64 -1
  %294 = getelementptr inbounds i8, i8* %293, i64 -8
  %295 = getelementptr inbounds i8, i8* %264, i64 -16
  %296 = getelementptr inbounds i8, i8* %294, i64 -7
  %297 = getelementptr i8, i8* %257, i64 -1
  %298 = getelementptr inbounds i8, i8* %297, i64 -8
  %299 = getelementptr inbounds i8, i8* %264, i64 -16
  %300 = getelementptr inbounds i8, i8* %298, i64 -7
  %301 = getelementptr i8, i8* %257, i64 -1
  %302 = getelementptr inbounds i8, i8* %301, i64 -8
  %303 = getelementptr inbounds i8, i8* %264, i64 -16
  %304 = getelementptr inbounds i8, i8* %302, i64 -7
  %305 = getelementptr i8, i8* %257, i64 -1
  %306 = getelementptr inbounds i8, i8* %305, i64 -8
  %307 = getelementptr inbounds i8, i8* %264, i64 -16
  %308 = getelementptr inbounds i8, i8* %306, i64 -7
  br label %309

309:                                              ; preds = %309, %291
  %310 = phi i64 [ 0, %291 ], [ %340, %309 ]
  %311 = phi i64 [ %292, %291 ], [ %341, %309 ]
  %312 = sub i64 0, %310
  %313 = sub i64 0, %310
  %314 = getelementptr inbounds i8, i8* %295, i64 %313
  %315 = bitcast i8* %314 to <2 x i64>*
  %316 = load <2 x i64>, <2 x i64>* %315, align 1, !alias.scope !33
  %317 = getelementptr inbounds i8, i8* %296, i64 %312
  %318 = bitcast i8* %317 to <2 x i64>*
  store <2 x i64> %316, <2 x i64>* %318, align 1, !alias.scope !36, !noalias !33
  %319 = sub nuw nsw i64 -16, %310
  %320 = sub nuw nsw i64 -16, %310
  %321 = getelementptr inbounds i8, i8* %299, i64 %320
  %322 = bitcast i8* %321 to <2 x i64>*
  %323 = load <2 x i64>, <2 x i64>* %322, align 1, !alias.scope !33
  %324 = getelementptr inbounds i8, i8* %300, i64 %319
  %325 = bitcast i8* %324 to <2 x i64>*
  store <2 x i64> %323, <2 x i64>* %325, align 1, !alias.scope !36, !noalias !33
  %326 = sub nuw nsw i64 -32, %310
  %327 = sub nuw nsw i64 -32, %310
  %328 = getelementptr inbounds i8, i8* %303, i64 %327
  %329 = bitcast i8* %328 to <2 x i64>*
  %330 = load <2 x i64>, <2 x i64>* %329, align 1, !alias.scope !33
  %331 = getelementptr inbounds i8, i8* %304, i64 %326
  %332 = bitcast i8* %331 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %332, align 1, !alias.scope !36, !noalias !33
  %333 = sub nuw nsw i64 -48, %310
  %334 = sub nuw nsw i64 -48, %310
  %335 = getelementptr inbounds i8, i8* %307, i64 %334
  %336 = bitcast i8* %335 to <2 x i64>*
  %337 = load <2 x i64>, <2 x i64>* %336, align 1, !alias.scope !33
  %338 = getelementptr inbounds i8, i8* %308, i64 %333
  %339 = bitcast i8* %338 to <2 x i64>*
  store <2 x i64> %337, <2 x i64>* %339, align 1, !alias.scope !36, !noalias !33
  %340 = add i64 %310, 64
  %341 = add i64 %311, -4
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %309, !llvm.loop !38

343:                                              ; preds = %309, %280
  %344 = phi i64 [ 0, %280 ], [ %340, %309 ]
  %345 = icmp eq i64 %289, 0
  br i1 %345, label %364, label %346

346:                                              ; preds = %343
  %347 = getelementptr i8, i8* %257, i64 -1
  %348 = getelementptr inbounds i8, i8* %347, i64 -8
  %349 = getelementptr inbounds i8, i8* %264, i64 -16
  %350 = getelementptr inbounds i8, i8* %348, i64 -7
  br label %351

351:                                              ; preds = %351, %346
  %352 = phi i64 [ %344, %346 ], [ %361, %351 ]
  %353 = phi i64 [ %289, %346 ], [ %362, %351 ]
  %354 = sub i64 0, %352
  %355 = sub i64 0, %352
  %356 = getelementptr inbounds i8, i8* %349, i64 %355
  %357 = bitcast i8* %356 to <2 x i64>*
  %358 = load <2 x i64>, <2 x i64>* %357, align 1, !alias.scope !33
  %359 = getelementptr inbounds i8, i8* %350, i64 %354
  %360 = bitcast i8* %359 to <2 x i64>*
  store <2 x i64> %358, <2 x i64>* %360, align 1, !alias.scope !36, !noalias !33
  %361 = add i64 %352, 16
  %362 = add i64 %353, -1
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %351, !llvm.loop !40

364:                                              ; preds = %351, %343
  %365 = icmp eq i64 %269, %281
  br i1 %365, label %376, label %366

366:                                              ; preds = %364, %271, %267
  %367 = phi i8* [ %257, %271 ], [ %257, %267 ], [ %283, %364 ]
  %368 = phi i8* [ %264, %271 ], [ %264, %267 ], [ %285, %364 ]
  br label %369

369:                                              ; preds = %366, %369
  %370 = phi i8* [ %372, %369 ], [ %367, %366 ]
  %371 = phi i8* [ %373, %369 ], [ %368, %366 ]
  %372 = getelementptr inbounds i8, i8* %370, i64 -1
  %373 = getelementptr inbounds i8, i8* %371, i64 -1
  %374 = load i8, i8* %373, align 1
  store i8 %374, i8* %372, align 1
  %375 = icmp eq i8* %373, %262
  br i1 %375, label %376, label %369, !llvm.loop !41

376:                                              ; preds = %369, %364
  %377 = phi i8* [ %283, %364 ], [ %372, %369 ]
  %378 = ptrtoint i8* %377 to i64
  %379 = load i64, i64* %247, align 8
  br label %380

380:                                              ; preds = %251, %376
  %381 = phi i64 [ %378, %376 ], [ %258, %251 ]
  %382 = phi i64 [ %379, %376 ], [ %263, %251 ]
  store i64 %381, i64* %247, align 8
  store i64 %258, i64* %253, align 8
  store i64 %260, i64* %245, align 8
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %386, label %384

384:                                              ; preds = %380
  %385 = inttoptr i64 %382 to i8*
  call void @_Z7FX_FreePv(i8* nonnull %385) #12
  br label %386

386:                                              ; preds = %238, %380, %384
  %387 = icmp eq i32 %38, 0
  br i1 %387, label %643, label %388

388:                                              ; preds = %386
  %389 = bitcast i8* %176 to i8* (%class.CFX_DIBitmap*, i32)***
  %390 = bitcast i8* %201 to %class.CFX_DIBBase*
  %391 = bitcast i8* %201 to i8* (%class.CFX_DIBBase*, i32)***
  %392 = icmp eq i32 %174, 0
  %393 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 27, i32 2, i32 0, i32 1
  %394 = bitcast i8** %393 to i64*
  %395 = getelementptr inbounds %"class.std::__1::vector.227", %"class.std::__1::vector.227"* %241, i64 0, i32 0, i32 0
  br label %396

396:                                              ; preds = %406, %388
  %397 = phi i32 [ 0, %388 ], [ %407, %406 ]
  %398 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %389, align 8
  %399 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %398, i64 3
  %400 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %399, align 8
  %401 = call i8* %400(%class.CFX_DIBitmap* nonnull %177, i32 %397) #12
  %402 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %391, align 8
  %403 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %402, i64 3
  %404 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %403, align 8
  %405 = call i8* %404(%class.CFX_DIBBase* nonnull %390, i32 %397) #12
  br i1 %392, label %406, label %409

406:                                              ; preds = %573, %396
  %407 = add nuw i32 %397, 1
  %408 = icmp eq i32 %407, %38
  br i1 %408, label %643, label %396

409:                                              ; preds = %396, %573
  %410 = phi i32 [ %602, %573 ], [ 0, %396 ]
  %411 = phi i8* [ %601, %573 ], [ %405, %396 ]
  %412 = phi i8* [ %600, %573 ], [ %401, %396 ]
  %413 = getelementptr inbounds i8, i8* %412, i64 3
  %414 = load i8, i8* %413, align 1
  %415 = load i8*, i8** %393, align 8
  %416 = load i8*, i8** %244, align 8
  %417 = icmp eq i8* %415, %416
  %418 = ptrtoint i8* %416 to i64
  br i1 %417, label %422, label %419

419:                                              ; preds = %409
  store i8 %414, i8* %415, align 1
  %420 = getelementptr inbounds i8, i8* %415, i64 1
  %421 = ptrtoint i8* %420 to i64
  store i64 %421, i64* %394, align 8
  br label %573

422:                                              ; preds = %409
  %423 = ptrtoint i8* %415 to i64
  %424 = load i64, i64* %247, align 8
  %425 = sub i64 %423, %424
  %426 = add i64 %425, 1
  %427 = icmp slt i64 %426, 0
  br i1 %427, label %428, label %430

428:                                              ; preds = %422
  %429 = bitcast %"class.std::__1::vector.227"* %241 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %429) #14
  unreachable

430:                                              ; preds = %422
  %431 = sub i64 %418, %424
  %432 = icmp ult i64 %431, 4611686018427387903
  br i1 %432, label %433, label %438

433:                                              ; preds = %430
  %434 = shl i64 %431, 1
  %435 = icmp ult i64 %434, %426
  %436 = select i1 %435, i64 %426, i64 %434
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %441, label %438

438:                                              ; preds = %433, %430
  %439 = phi i64 [ %436, %433 ], [ 9223372036854775807, %430 ]
  %440 = call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %439, i64 1) #12
  br label %441

441:                                              ; preds = %438, %433
  %442 = phi i64 [ %439, %438 ], [ 0, %433 ]
  %443 = phi i8* [ %440, %438 ], [ null, %433 ]
  %444 = getelementptr inbounds i8, i8* %443, i64 %425
  %445 = getelementptr inbounds i8, i8* %443, i64 %442
  %446 = ptrtoint i8* %445 to i64
  store i8 %414, i8* %444, align 1
  %447 = getelementptr inbounds i8, i8* %444, i64 1
  %448 = ptrtoint i8* %447 to i64
  %449 = load i8*, i8** %395, align 8
  %450 = ptrtoint i8* %449 to i64
  %451 = load i8*, i8** %393, align 8
  %452 = ptrtoint i8* %451 to i64
  %453 = icmp eq i8* %451, %449
  br i1 %453, label %566, label %454

454:                                              ; preds = %441
  %455 = ptrtoint i8* %451 to i64
  %456 = sub i64 %455, %450
  %457 = icmp ult i64 %456, 16
  br i1 %457, label %553, label %458

458:                                              ; preds = %454
  %459 = sub i64 %423, %452
  %460 = sub i64 %459, %424
  %461 = getelementptr i8, i8* %449, i64 %460
  %462 = ptrtoint i8* %461 to i64
  %463 = getelementptr i8, i8* %443, i64 %462
  %464 = icmp ult i8* %463, %451
  %465 = icmp ult i8* %449, %444
  %466 = and i1 %464, %465
  br i1 %466, label %553, label %467

467:                                              ; preds = %458
  %468 = and i64 %456, -16
  %469 = sub i64 0, %468
  %470 = getelementptr i8, i8* %444, i64 %469
  %471 = sub i64 0, %468
  %472 = getelementptr i8, i8* %451, i64 %471
  %473 = add i64 %468, -16
  %474 = lshr exact i64 %473, 4
  %475 = add nuw nsw i64 %474, 1
  %476 = and i64 %475, 3
  %477 = icmp ult i64 %473, 48
  br i1 %477, label %530, label %478

478:                                              ; preds = %467
  %479 = sub nsw i64 %475, %476
  %480 = getelementptr i8, i8* %444, i64 -1
  %481 = getelementptr inbounds i8, i8* %480, i64 -8
  %482 = getelementptr inbounds i8, i8* %451, i64 -16
  %483 = getelementptr inbounds i8, i8* %481, i64 -7
  %484 = getelementptr i8, i8* %444, i64 -1
  %485 = getelementptr inbounds i8, i8* %484, i64 -8
  %486 = getelementptr inbounds i8, i8* %451, i64 -16
  %487 = getelementptr inbounds i8, i8* %485, i64 -7
  %488 = getelementptr i8, i8* %444, i64 -1
  %489 = getelementptr inbounds i8, i8* %488, i64 -8
  %490 = getelementptr inbounds i8, i8* %451, i64 -16
  %491 = getelementptr inbounds i8, i8* %489, i64 -7
  %492 = getelementptr i8, i8* %444, i64 -1
  %493 = getelementptr inbounds i8, i8* %492, i64 -8
  %494 = getelementptr inbounds i8, i8* %451, i64 -16
  %495 = getelementptr inbounds i8, i8* %493, i64 -7
  br label %496

496:                                              ; preds = %496, %478
  %497 = phi i64 [ 0, %478 ], [ %527, %496 ]
  %498 = phi i64 [ %479, %478 ], [ %528, %496 ]
  %499 = sub i64 0, %497
  %500 = sub i64 0, %497
  %501 = getelementptr inbounds i8, i8* %482, i64 %500
  %502 = bitcast i8* %501 to <2 x i64>*
  %503 = load <2 x i64>, <2 x i64>* %502, align 1, !alias.scope !42
  %504 = getelementptr inbounds i8, i8* %483, i64 %499
  %505 = bitcast i8* %504 to <2 x i64>*
  store <2 x i64> %503, <2 x i64>* %505, align 1, !alias.scope !45, !noalias !42
  %506 = sub nuw nsw i64 -16, %497
  %507 = sub nuw nsw i64 -16, %497
  %508 = getelementptr inbounds i8, i8* %486, i64 %507
  %509 = bitcast i8* %508 to <2 x i64>*
  %510 = load <2 x i64>, <2 x i64>* %509, align 1, !alias.scope !42
  %511 = getelementptr inbounds i8, i8* %487, i64 %506
  %512 = bitcast i8* %511 to <2 x i64>*
  store <2 x i64> %510, <2 x i64>* %512, align 1, !alias.scope !45, !noalias !42
  %513 = sub nuw nsw i64 -32, %497
  %514 = sub nuw nsw i64 -32, %497
  %515 = getelementptr inbounds i8, i8* %490, i64 %514
  %516 = bitcast i8* %515 to <2 x i64>*
  %517 = load <2 x i64>, <2 x i64>* %516, align 1, !alias.scope !42
  %518 = getelementptr inbounds i8, i8* %491, i64 %513
  %519 = bitcast i8* %518 to <2 x i64>*
  store <2 x i64> %517, <2 x i64>* %519, align 1, !alias.scope !45, !noalias !42
  %520 = sub nuw nsw i64 -48, %497
  %521 = sub nuw nsw i64 -48, %497
  %522 = getelementptr inbounds i8, i8* %494, i64 %521
  %523 = bitcast i8* %522 to <2 x i64>*
  %524 = load <2 x i64>, <2 x i64>* %523, align 1, !alias.scope !42
  %525 = getelementptr inbounds i8, i8* %495, i64 %520
  %526 = bitcast i8* %525 to <2 x i64>*
  store <2 x i64> %524, <2 x i64>* %526, align 1, !alias.scope !45, !noalias !42
  %527 = add i64 %497, 64
  %528 = add i64 %498, -4
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %530, label %496, !llvm.loop !47

530:                                              ; preds = %496, %467
  %531 = phi i64 [ 0, %467 ], [ %527, %496 ]
  %532 = icmp eq i64 %476, 0
  br i1 %532, label %551, label %533

533:                                              ; preds = %530
  %534 = getelementptr i8, i8* %444, i64 -1
  %535 = getelementptr inbounds i8, i8* %534, i64 -8
  %536 = getelementptr inbounds i8, i8* %451, i64 -16
  %537 = getelementptr inbounds i8, i8* %535, i64 -7
  br label %538

538:                                              ; preds = %538, %533
  %539 = phi i64 [ %531, %533 ], [ %548, %538 ]
  %540 = phi i64 [ %476, %533 ], [ %549, %538 ]
  %541 = sub i64 0, %539
  %542 = sub i64 0, %539
  %543 = getelementptr inbounds i8, i8* %536, i64 %542
  %544 = bitcast i8* %543 to <2 x i64>*
  %545 = load <2 x i64>, <2 x i64>* %544, align 1, !alias.scope !42
  %546 = getelementptr inbounds i8, i8* %537, i64 %541
  %547 = bitcast i8* %546 to <2 x i64>*
  store <2 x i64> %545, <2 x i64>* %547, align 1, !alias.scope !45, !noalias !42
  %548 = add i64 %539, 16
  %549 = add i64 %540, -1
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %538, !llvm.loop !48

551:                                              ; preds = %538, %530
  %552 = icmp eq i64 %456, %468
  br i1 %552, label %563, label %553

553:                                              ; preds = %551, %458, %454
  %554 = phi i8* [ %444, %458 ], [ %444, %454 ], [ %470, %551 ]
  %555 = phi i8* [ %451, %458 ], [ %451, %454 ], [ %472, %551 ]
  br label %556

556:                                              ; preds = %553, %556
  %557 = phi i8* [ %559, %556 ], [ %554, %553 ]
  %558 = phi i8* [ %560, %556 ], [ %555, %553 ]
  %559 = getelementptr inbounds i8, i8* %557, i64 -1
  %560 = getelementptr inbounds i8, i8* %558, i64 -1
  %561 = load i8, i8* %560, align 1
  store i8 %561, i8* %559, align 1
  %562 = icmp eq i8* %560, %449
  br i1 %562, label %563, label %556, !llvm.loop !49

563:                                              ; preds = %556, %551
  %564 = phi i8* [ %470, %551 ], [ %559, %556 ]
  %565 = load i64, i64* %247, align 8
  br label %566

566:                                              ; preds = %441, %563
  %567 = phi i8* [ %564, %563 ], [ %444, %441 ]
  %568 = phi i64 [ %565, %563 ], [ %450, %441 ]
  %569 = ptrtoint i8* %567 to i64
  store i64 %569, i64* %247, align 8
  store i64 %448, i64* %394, align 8
  store i64 %446, i64* %245, align 8
  %570 = icmp eq i64 %568, 0
  br i1 %570, label %573, label %571

571:                                              ; preds = %566
  %572 = inttoptr i64 %568 to i8*
  call void @_Z7FX_FreePv(i8* nonnull %572) #12
  br label %573

573:                                              ; preds = %419, %566, %571
  %574 = zext i8 %414 to i32
  %575 = xor i8 %414, -1
  %576 = load i8, i8* %412, align 1
  %577 = zext i8 %576 to i32
  %578 = mul nuw nsw i32 %577, %574
  %579 = zext i8 %575 to i32
  %580 = mul nuw nsw i32 %579, 255
  %581 = add nuw nsw i32 %578, %580
  %582 = udiv i32 %581, 255
  %583 = trunc i32 %582 to i8
  %584 = getelementptr inbounds i8, i8* %412, i64 1
  %585 = load i8, i8* %584, align 1
  %586 = zext i8 %585 to i32
  %587 = mul nuw nsw i32 %586, %574
  %588 = add nuw nsw i32 %587, %580
  %589 = udiv i32 %588, 255
  %590 = trunc i32 %589 to i8
  %591 = getelementptr inbounds i8, i8* %412, i64 2
  %592 = load i8, i8* %591, align 1
  %593 = zext i8 %592 to i32
  %594 = mul nuw nsw i32 %593, %574
  %595 = add nuw nsw i32 %594, %580
  %596 = udiv i32 %595, 255
  %597 = trunc i32 %596 to i8
  store i8 %583, i8* %411, align 1
  %598 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %590, i8* %598, align 1
  %599 = getelementptr inbounds i8, i8* %411, i64 2
  store i8 %597, i8* %599, align 1
  %600 = getelementptr inbounds i8, i8* %412, i64 4
  %601 = getelementptr inbounds i8, i8* %411, i64 3
  %602 = add nuw i32 %410, 1
  %603 = icmp eq i32 %602, %174
  br i1 %603, label %406, label %409

604:                                              ; preds = %626, %228
  %605 = phi i32 [ 0, %228 ], [ %627, %626 ]
  %606 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %229, align 8
  %607 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %606, i64 3
  %608 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %607, align 8
  %609 = call i8* %608(%class.CFX_DIBitmap* nonnull %177, i32 %605) #12
  %610 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %231, align 8
  %611 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %610, i64 3
  %612 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %611, align 8
  %613 = call i8* %612(%class.CFX_DIBBase* nonnull %230, i32 %605) #12
  br i1 %232, label %626, label %614

614:                                              ; preds = %604
  br i1 %235, label %615, label %629

615:                                              ; preds = %629, %614
  %616 = phi i8* [ %613, %614 ], [ %640, %629 ]
  %617 = phi i8* [ %609, %614 ], [ %639, %629 ]
  br i1 %237, label %626, label %618

618:                                              ; preds = %615, %618
  %619 = phi i8* [ %623, %618 ], [ %616, %615 ]
  %620 = phi i8* [ %622, %618 ], [ %617, %615 ]
  %621 = phi i32 [ %624, %618 ], [ %234, %615 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %619, i8* align 1 %620, i64 3, i1 false)
  %622 = getelementptr inbounds i8, i8* %620, i64 4
  %623 = getelementptr inbounds i8, i8* %619, i64 3
  %624 = add i32 %621, -1
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %618, !llvm.loop !50

626:                                              ; preds = %615, %618, %604
  %627 = add nuw i32 %605, 1
  %628 = icmp eq i32 %627, %38
  br i1 %628, label %643, label %604

629:                                              ; preds = %614, %629
  %630 = phi i8* [ %640, %629 ], [ %613, %614 ]
  %631 = phi i8* [ %639, %629 ], [ %609, %614 ]
  %632 = phi i32 [ %641, %629 ], [ %236, %614 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %630, i8* align 1 %631, i64 3, i1 false)
  %633 = getelementptr inbounds i8, i8* %631, i64 4
  %634 = getelementptr inbounds i8, i8* %630, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %634, i8* align 1 %633, i64 3, i1 false)
  %635 = getelementptr inbounds i8, i8* %631, i64 8
  %636 = getelementptr inbounds i8, i8* %630, i64 6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %636, i8* align 1 %635, i64 3, i1 false)
  %637 = getelementptr inbounds i8, i8* %631, i64 12
  %638 = getelementptr inbounds i8, i8* %630, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %638, i8* align 1 %637, i64 3, i1 false)
  %639 = getelementptr inbounds i8, i8* %631, i64 16
  %640 = getelementptr inbounds i8, i8* %630, i64 12
  %641 = add i32 %632, -4
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %615, label %629

643:                                              ; preds = %626, %406, %386, %226
  %644 = load i64, i64* %180, align 8
  %645 = add nsw i64 %644, -1
  store i64 %645, i64* %180, align 8
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %647, label %765

647:                                              ; preds = %643
  %648 = bitcast i8* %176 to %"class.fxcrt::Retainable"*
  %649 = bitcast i8* %176 to void (%"class.fxcrt::Retainable"*)***
  %650 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %649, align 8
  %651 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %650, i64 1
  %652 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %651, align 8
  call void %652(%"class.fxcrt::Retainable"* nonnull %648) #12
  br label %765

653:                                              ; preds = %199
  %654 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %655 = icmp eq %class.CPDF_ColorSpace* %654, null
  br i1 %655, label %765, label %656

656:                                              ; preds = %653
  %657 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %654, i64 0, i32 4
  %658 = load i32, i32* %657, align 8
  %659 = icmp eq i32 %658, 10
  br i1 %659, label %660, label %765

660:                                              ; preds = %656
  %661 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 6
  %662 = load i32, i32* %661, align 8
  %663 = icmp ult i32 %662, 8
  br i1 %663, label %664, label %765

664:                                              ; preds = %660
  %665 = sub nuw nsw i32 8, %662
  %666 = icmp eq i32 %38, 0
  br i1 %666, label %765, label %667

667:                                              ; preds = %664
  %668 = bitcast i8* %176 to i8* (%class.CFX_DIBBase*, i32)***
  %669 = icmp eq i32 %174, 0
  %670 = add i32 %174, -1
  %671 = zext i32 %670 to i64
  %672 = add nuw nsw i64 %671, 1
  %673 = and i64 %672, 8589934576
  %674 = add nsw i64 %673, -16
  %675 = lshr exact i64 %674, 4
  %676 = add nuw nsw i64 %675, 1
  %677 = icmp ult i64 %672, 16
  %678 = and i64 %672, 8589934576
  %679 = trunc i64 %678 to i32
  %680 = insertelement <16 x i32> undef, i32 %665, i32 0
  %681 = shufflevector <16 x i32> %680, <16 x i32> undef, <16 x i32> zeroinitializer
  %682 = and i64 %676, 3
  %683 = icmp ult i64 %674, 48
  %684 = sub nsw i64 %676, %682
  %685 = icmp eq i64 %682, 0
  %686 = icmp eq i64 %672, %678
  br label %687

687:                                              ; preds = %752, %667
  %688 = phi i32 [ 0, %667 ], [ %753, %752 ]
  %689 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %668, align 8
  %690 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %689, i64 3
  %691 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %690, align 8
  %692 = call i8* %691(%class.CFX_DIBBase* nonnull %192, i32 %688) #12
  br i1 %669, label %752, label %693

693:                                              ; preds = %687
  br i1 %677, label %694, label %697

694:                                              ; preds = %751, %693
  %695 = phi i32 [ 0, %693 ], [ %679, %751 ]
  %696 = phi i8* [ %692, %693 ], [ %698, %751 ]
  br label %755

697:                                              ; preds = %693
  %698 = getelementptr i8, i8* %692, i64 %678
  br i1 %683, label %736, label %699

699:                                              ; preds = %697, %699
  %700 = phi i64 [ %733, %699 ], [ 0, %697 ]
  %701 = phi i64 [ %734, %699 ], [ %684, %697 ]
  %702 = getelementptr i8, i8* %692, i64 %700
  %703 = bitcast i8* %702 to <16 x i8>*
  %704 = load <16 x i8>, <16 x i8>* %703, align 1
  %705 = zext <16 x i8> %704 to <16 x i32>
  %706 = lshr <16 x i32> %705, %681
  %707 = trunc <16 x i32> %706 to <16 x i8>
  %708 = bitcast i8* %702 to <16 x i8>*
  store <16 x i8> %707, <16 x i8>* %708, align 1
  %709 = or i64 %700, 16
  %710 = getelementptr i8, i8* %692, i64 %709
  %711 = bitcast i8* %710 to <16 x i8>*
  %712 = load <16 x i8>, <16 x i8>* %711, align 1
  %713 = zext <16 x i8> %712 to <16 x i32>
  %714 = lshr <16 x i32> %713, %681
  %715 = trunc <16 x i32> %714 to <16 x i8>
  %716 = bitcast i8* %710 to <16 x i8>*
  store <16 x i8> %715, <16 x i8>* %716, align 1
  %717 = or i64 %700, 32
  %718 = getelementptr i8, i8* %692, i64 %717
  %719 = bitcast i8* %718 to <16 x i8>*
  %720 = load <16 x i8>, <16 x i8>* %719, align 1
  %721 = zext <16 x i8> %720 to <16 x i32>
  %722 = lshr <16 x i32> %721, %681
  %723 = trunc <16 x i32> %722 to <16 x i8>
  %724 = bitcast i8* %718 to <16 x i8>*
  store <16 x i8> %723, <16 x i8>* %724, align 1
  %725 = or i64 %700, 48
  %726 = getelementptr i8, i8* %692, i64 %725
  %727 = bitcast i8* %726 to <16 x i8>*
  %728 = load <16 x i8>, <16 x i8>* %727, align 1
  %729 = zext <16 x i8> %728 to <16 x i32>
  %730 = lshr <16 x i32> %729, %681
  %731 = trunc <16 x i32> %730 to <16 x i8>
  %732 = bitcast i8* %726 to <16 x i8>*
  store <16 x i8> %731, <16 x i8>* %732, align 1
  %733 = add i64 %700, 64
  %734 = add i64 %701, -4
  %735 = icmp eq i64 %734, 0
  br i1 %735, label %736, label %699, !llvm.loop !51

736:                                              ; preds = %699, %697
  %737 = phi i64 [ 0, %697 ], [ %733, %699 ]
  br i1 %685, label %751, label %738

738:                                              ; preds = %736, %738
  %739 = phi i64 [ %748, %738 ], [ %737, %736 ]
  %740 = phi i64 [ %749, %738 ], [ %682, %736 ]
  %741 = getelementptr i8, i8* %692, i64 %739
  %742 = bitcast i8* %741 to <16 x i8>*
  %743 = load <16 x i8>, <16 x i8>* %742, align 1
  %744 = zext <16 x i8> %743 to <16 x i32>
  %745 = lshr <16 x i32> %744, %681
  %746 = trunc <16 x i32> %745 to <16 x i8>
  %747 = bitcast i8* %741 to <16 x i8>*
  store <16 x i8> %746, <16 x i8>* %747, align 1
  %748 = add i64 %739, 16
  %749 = add i64 %740, -1
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %751, label %738, !llvm.loop !52

751:                                              ; preds = %738, %736
  br i1 %686, label %752, label %694

752:                                              ; preds = %755, %751, %687
  %753 = add nuw i32 %688, 1
  %754 = icmp eq i32 %753, %38
  br i1 %754, label %765, label %687

755:                                              ; preds = %694, %755
  %756 = phi i32 [ %763, %755 ], [ %695, %694 ]
  %757 = phi i8* [ %762, %755 ], [ %696, %694 ]
  %758 = load i8, i8* %757, align 1
  %759 = zext i8 %758 to i32
  %760 = lshr i32 %759, %665
  %761 = trunc i32 %760 to i8
  store i8 %761, i8* %757, align 1
  %762 = getelementptr inbounds i8, i8* %757, i64 1
  %763 = add nuw i32 %756, 1
  %764 = icmp eq i32 %763, %174
  br i1 %764, label %752, label %755, !llvm.loop !53

765:                                              ; preds = %752, %664, %653, %660, %656, %647, %643
  %766 = phi i64 [ %178, %660 ], [ %178, %656 ], [ %178, %653 ], [ %203, %647 ], [ %203, %643 ], [ %178, %664 ], [ %178, %752 ]
  %767 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 6
  store i32 8, i32* %767, align 8
  %768 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %766, i64* %768, align 8
  br label %779

769:                                              ; preds = %184, %197, %209, %214
  %770 = load i64, i64* %180, align 8
  %771 = add nsw i64 %770, -1
  store i64 %771, i64* %180, align 8
  %772 = icmp eq i64 %771, 0
  br i1 %772, label %773, label %779

773:                                              ; preds = %769
  %774 = bitcast i8* %176 to %"class.fxcrt::Retainable"*
  %775 = bitcast i8* %176 to void (%"class.fxcrt::Retainable"*)***
  %776 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %775, align 8
  %777 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %776, i64 1
  %778 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %777, align 8
  call void %778(%"class.fxcrt::Retainable"* nonnull %774) #12
  br label %779

779:                                              ; preds = %773, %769, %765
  br i1 %51, label %791, label %780

780:                                              ; preds = %90, %779
  %781 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %50, i64 0, i32 0, i32 1
  %782 = load i64, i64* %781, align 8
  %783 = add nsw i64 %782, -1
  store i64 %783, i64* %781, align 8
  %784 = icmp eq i64 %783, 0
  br i1 %784, label %785, label %791

785:                                              ; preds = %780
  %786 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %50, i64 0, i32 0
  %787 = bitcast %class.CPDF_ColorSpace* %50 to void (%"class.fxcrt::Retainable"*)***
  %788 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %787, align 8
  %789 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %788, i64 1
  %790 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %789, align 8
  call void %790(%"class.fxcrt::Retainable"* nonnull %786) #12
  br label %791

791:                                              ; preds = %785, %780, %779, %31, %47
  call void @_ZN7fxcodec12CJPX_DecoderD1Ev(%"class.fxcodec::CJPX_Decoder"* nonnull %25) #12
  %792 = bitcast %"class.fxcodec::CJPX_Decoder"* %25 to i8*
  call void @_ZdlPv(i8* %792) #13
  br label %793

793:                                              ; preds = %27, %791
  ret void
}

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #1

declare %"class.fxcodec::ScanlineDecoder"* @_Z16CreateFaxDecoderN6pdfium4spanIKhEEiiPK15CPDF_Dictionary(%"class.pdfium::span"*, i32, i32, %class.CPDF_Dictionary*) local_unnamed_addr #1

declare %"class.fxcodec::ScanlineDecoder"* @_Z18CreateFlateDecoderN6pdfium4spanIKhEEiiiiPK15CPDF_Dictionary(%"class.pdfium::span"*, i32, i32, i32, i32, %class.CPDF_Dictionary*) local_unnamed_addr #1

declare %"class.fxcodec::ScanlineDecoder"* @_ZN7fxcodec11BasicModule22CreateRunLengthDecoderEN6pdfium4spanIKhEEiiii(%"class.pdfium::span"*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CPDF_DIB16CreateDCTDecoderEN6pdfium4spanIKhEEPK15CPDF_Dictionary(%class.CPDF_DIB*, %"class.pdfium::span"* nocapture readonly, %class.CPDF_Dictionary*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.pdfium::span", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.pdfium::Optional.324", align 4
  %7 = alloca %"class.pdfium::span", align 8
  %8 = alloca %"class.pdfium::span", align 8
  %9 = alloca %"class.pdfium::span", align 8
  %10 = bitcast %"class.pdfium::span"* %4 to i8*
  %11 = bitcast %"class.pdfium::span"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %12 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq %class.CPDF_Dictionary* %2, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0)) #12
  %21 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* nonnull %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5, i32 1) #12
  %22 = icmp ne i32 %21, 0
  br label %23

23:                                               ; preds = %3, %19
  %24 = phi i1 [ true, %19 ], [ false, %3 ]
  %25 = phi i1 [ %22, %19 ], [ true, %3 ]
  %26 = call %"class.fxcodec::ScanlineDecoder"* @_ZN7fxcodec10JpegModule13CreateDecoderEN6pdfium4spanIKhEEiiib(%"class.pdfium::span"* nonnull %4, i32 %13, i32 %15, i32 %17, i1 zeroext %25) #12
  %27 = ptrtoint %"class.fxcodec::ScanlineDecoder"* %26 to i64
  %28 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.221"* %28 to i64*
  store i64 %27, i64* %31, align 8
  %32 = icmp eq %"class.fxcodec::ScanlineDecoder"* %30, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %23
  %34 = bitcast %"class.fxcodec::ScanlineDecoder"* %30 to void (%"class.fxcodec::ScanlineDecoder"*)***
  %35 = load void (%"class.fxcodec::ScanlineDecoder"*)**, void (%"class.fxcodec::ScanlineDecoder"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %35, i64 1
  %37 = load void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %36, align 8
  call void %37(%"class.fxcodec::ScanlineDecoder"* nonnull %30) #12
  br label %38

38:                                               ; preds = %33, %23
  br i1 %24, label %39, label %41

39:                                               ; preds = %38
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  %40 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %41

41:                                               ; preds = %38, %39
  %42 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %29, align 8
  %43 = icmp eq %"class.fxcodec::ScanlineDecoder"* %42, null
  br i1 %43, label %44, label %149

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.pdfium::Optional.324", %"class.pdfium::Optional.324"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 -86, i64 24, i1 false)
  %46 = bitcast %"class.pdfium::span"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 %11, i64 16, i1 false)
  call void @_ZN7fxcodec10JpegModule8LoadInfoEN6pdfium4spanIKhEE(%"class.pdfium::Optional.324"* nonnull sret %6, %"class.pdfium::span"* nonnull %7) #12
  %47 = load i8, i8* %45, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %147, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.pdfium::Optional.324", %"class.pdfium::Optional.324"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %12, align 4
  %52 = getelementptr inbounds %"class.pdfium::Optional.324", %"class.pdfium::Optional.324"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %14, align 8
  %54 = getelementptr inbounds %"class.pdfium::Optional.324", %"class.pdfium::Optional.324"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = call zeroext i1 @_ZN10CPDF_Image20IsValidJpegComponentEi(i32 %55) #12
  br i1 %56, label %57, label %147

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.pdfium::Optional.324", %"class.pdfium::Optional.324"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = call zeroext i1 @_ZN10CPDF_Image27IsValidJpegBitsPerComponentEi(i32 %59) #12
  br i1 %60, label %61, label %147

61:                                               ; preds = %57
  %62 = load i32, i32* %16, align 8
  %63 = load i32, i32* %54, align 4
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %83

65:                                               ; preds = %61
  %66 = load i32, i32* %58, align 4
  %67 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  store i32 %66, i32* %67, align 8
  %68 = bitcast %"class.pdfium::span"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %11, i64 16, i1 false)
  %69 = load i32, i32* %12, align 4
  %70 = load i32, i32* %14, align 8
  %71 = getelementptr inbounds %"class.pdfium::Optional.324", %"class.pdfium::Optional.324"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp ne i8 %72, 0
  %74 = call %"class.fxcodec::ScanlineDecoder"* @_ZN7fxcodec10JpegModule13CreateDecoderEN6pdfium4spanIKhEEiiib(%"class.pdfium::span"* nonnull %8, i32 %69, i32 %70, i32 %62, i1 zeroext %73) #12
  %75 = ptrtoint %"class.fxcodec::ScanlineDecoder"* %74 to i64
  %76 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %29, align 8
  store i64 %75, i64* %31, align 8
  %77 = icmp eq %"class.fxcodec::ScanlineDecoder"* %76, null
  br i1 %77, label %147, label %78

78:                                               ; preds = %65
  %79 = bitcast %"class.fxcodec::ScanlineDecoder"* %76 to void (%"class.fxcodec::ScanlineDecoder"*)***
  %80 = load void (%"class.fxcodec::ScanlineDecoder"*)**, void (%"class.fxcodec::ScanlineDecoder"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %80, i64 1
  %82 = load void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %81, align 8
  call void %82(%"class.fxcodec::ScanlineDecoder"* nonnull %76) #12
  br label %147

83:                                               ; preds = %61
  store i32 %63, i32* %16, align 8
  %84 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20
  %85 = bitcast %"class.std::__1::vector.208"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 1
  %88 = bitcast %struct.DIB_COMP_DATA** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %90 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %89, align 8
  %91 = icmp eq %class.CPDF_ColorSpace* %90, null
  br i1 %91, label %118, label %92

92:                                               ; preds = %83
  %93 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nonnull %90) #12
  %94 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %95 = load i32, i32* %94, align 4
  switch i32 %95, label %115 [
    i32 1, label %96
    i32 2, label %96
    i32 3, label %96
    i32 6, label %102
    i32 7, label %107
  ]

96:                                               ; preds = %92, %92, %92
  %97 = call i32 @_ZN15CPDF_ColorSpace19ComponentsForFamilyENS_6FamilyE(i32 %95) #12
  %98 = icmp ult i32 %93, %97
  br i1 %98, label %147, label %99

99:                                               ; preds = %96
  %100 = load i32, i32* %16, align 8
  %101 = icmp ult i32 %100, %97
  br i1 %101, label %147, label %124

102:                                              ; preds = %92
  %103 = load i32, i32* %16, align 8
  %104 = icmp ne i32 %103, 3
  %105 = icmp ult i32 %93, 3
  %106 = or i1 %105, %104
  br i1 %106, label %147, label %124

107:                                              ; preds = %92
  %108 = call zeroext i1 @_ZN15CPDF_ColorSpace20IsValidIccComponentsEi(i32 %93) #12
  br i1 %108, label %109, label %147

109:                                              ; preds = %107
  %110 = load i32, i32* %16, align 8
  %111 = call zeroext i1 @_ZN15CPDF_ColorSpace20IsValidIccComponentsEi(i32 %110) #12
  br i1 %111, label %112, label %147

112:                                              ; preds = %109
  %113 = load i32, i32* %16, align 8
  %114 = icmp ult i32 %93, %113
  br i1 %114, label %147, label %124

115:                                              ; preds = %92
  %116 = load i32, i32* %16, align 8
  %117 = icmp eq i32 %93, %116
  br i1 %117, label %124, label %147

118:                                              ; preds = %83
  %119 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %120 = load i32, i32* %119, align 4
  %121 = icmp ne i32 %120, 6
  %122 = icmp eq i32 %63, 3
  %123 = or i1 %122, %121
  br i1 %123, label %124, label %147

124:                                              ; preds = %118, %102, %112, %115, %99
  %125 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  %126 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %127 = call zeroext i1 @_ZN8CPDF_DIB21GetDecodeAndMaskArrayEPbS0_(%class.CPDF_DIB* %0, i8* %125, i8* %126)
  br i1 %127, label %128, label %147

128:                                              ; preds = %124
  %129 = load i32, i32* %58, align 4
  %130 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  store i32 %129, i32* %130, align 8
  %131 = bitcast %"class.pdfium::span"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* align 8 %11, i64 16, i1 false)
  %132 = load i32, i32* %12, align 4
  %133 = load i32, i32* %14, align 8
  %134 = load i32, i32* %16, align 8
  %135 = getelementptr inbounds %"class.pdfium::Optional.324", %"class.pdfium::Optional.324"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %136 = load i8, i8* %135, align 4, !range !2
  %137 = icmp ne i8 %136, 0
  %138 = call %"class.fxcodec::ScanlineDecoder"* @_ZN7fxcodec10JpegModule13CreateDecoderEN6pdfium4spanIKhEEiiib(%"class.pdfium::span"* nonnull %9, i32 %132, i32 %133, i32 %134, i1 zeroext %137) #12
  %139 = ptrtoint %"class.fxcodec::ScanlineDecoder"* %138 to i64
  %140 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %29, align 8
  store i64 %139, i64* %31, align 8
  %141 = icmp eq %"class.fxcodec::ScanlineDecoder"* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %128
  %143 = bitcast %"class.fxcodec::ScanlineDecoder"* %140 to void (%"class.fxcodec::ScanlineDecoder"*)***
  %144 = load void (%"class.fxcodec::ScanlineDecoder"*)**, void (%"class.fxcodec::ScanlineDecoder"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %144, i64 1
  %146 = load void (%"class.fxcodec::ScanlineDecoder"*)*, void (%"class.fxcodec::ScanlineDecoder"*)** %145, align 8
  call void %146(%"class.fxcodec::ScanlineDecoder"* nonnull %140) #12
  br label %147

147:                                              ; preds = %44, %118, %128, %142, %65, %78, %57, %49, %115, %107, %109, %112, %102, %99, %96, %124
  %148 = phi i1 [ false, %44 ], [ false, %57 ], [ false, %49 ], [ false, %115 ], [ false, %107 ], [ false, %109 ], [ false, %112 ], [ false, %102 ], [ false, %99 ], [ false, %96 ], [ false, %124 ], [ true, %78 ], [ true, %65 ], [ true, %142 ], [ true, %128 ], [ false, %118 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  br label %149

149:                                              ; preds = %41, %147
  %150 = phi i1 [ %148, %147 ], [ true, %41 ]
  ret i1 %150
}

declare %"class.fxcodec::ScanlineDecoder"* @_ZN7fxcodec10JpegModule13CreateDecoderEN6pdfium4spanIKhEEiiib(%"class.pdfium::span"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZN7fxcodec10JpegModule8LoadInfoEN6pdfium4spanIKhEE(%"class.pdfium::Optional.324"* sret, %"class.pdfium::span"*) local_unnamed_addr #1

declare zeroext i1 @_ZN10CPDF_Image20IsValidJpegComponentEi(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN10CPDF_Image27IsValidJpegBitsPerComponentEi(i32) local_unnamed_addr #1

declare i32 @_ZN15CPDF_ColorSpace19ComponentsForFamilyENS_6FamilyE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN15CPDF_ColorSpace20IsValidIccComponentsEi(i32) local_unnamed_addr #1

declare %"class.fxcodec::CJPX_Decoder"* @_ZN7fxcodec12CJPX_Decoder6CreateEN6pdfium4spanIKhEENS0_16ColorSpaceOptionE(%"class.pdfium::span"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7fxcodec12CJPX_Decoder11StartDecodeEv(%"class.fxcodec::CJPX_Decoder"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK7fxcodec12CJPX_Decoder7GetInfoEv(%"class.fxcodec::CJPX_Decoder"*) local_unnamed_addr #1

declare void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.182"* sret, i32) local_unnamed_addr #1

declare void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7fxcodec12CJPX_Decoder6DecodeEPhjb(%"class.fxcodec::CJPX_Decoder"*, i8*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA8_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), [8 x i8]* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.193", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.397", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !6

9:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !55
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !56
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.397"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2
  call void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA8_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.397"* nonnull sret %5, %"class.fxcrt::WeakPtr"* dereferenceable(8) %12, [8 x i8]* dereferenceable(8) %2)
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.397", %"class.fxcrt::RetainPtr.397"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  %15 = ptrtoint %class.CPDF_Name* %14 to i64
  %16 = bitcast %"class.fxcrt::RetainPtr.193"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = icmp eq %class.CPDF_Name* %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %14, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.193"* nonnull %4) #12
  %24 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Name*
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.193", %"class.fxcrt::RetainPtr.193"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Object*, %class.CPDF_Object** %25, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %25, align 8
  %27 = icmp eq %class.CPDF_Object* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0
  %35 = bitcast %class.CPDF_Object* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #12
  br label %39

39:                                               ; preds = %22, %28, %33
  %40 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  store %class.CPDF_Name* null, %class.CPDF_Name** %13, align 8
  %41 = icmp eq %class.CPDF_Name* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0
  %49 = bitcast %class.CPDF_Name* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #12
  br label %53

53:                                               ; preds = %39, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret %class.CPDF_Name* %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA6_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), [6 x i8]* dereferenceable(6)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.193", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.397", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !6

9:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !55
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !56
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.397"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2
  call void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA6_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.397"* nonnull sret %5, %"class.fxcrt::WeakPtr"* dereferenceable(8) %12, [6 x i8]* dereferenceable(6) %2)
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.397", %"class.fxcrt::RetainPtr.397"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  %15 = ptrtoint %class.CPDF_Name* %14 to i64
  %16 = bitcast %"class.fxcrt::RetainPtr.193"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = icmp eq %class.CPDF_Name* %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %14, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.193"* nonnull %4) #12
  %24 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Name*
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.193", %"class.fxcrt::RetainPtr.193"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Object*, %class.CPDF_Object** %25, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %25, align 8
  %27 = icmp eq %class.CPDF_Object* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0
  %35 = bitcast %class.CPDF_Object* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #12
  br label %39

39:                                               ; preds = %22, %28, %33
  %40 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  store %class.CPDF_Name* null, %class.CPDF_Name** %13, align 8
  %41 = icmp eq %class.CPDF_Name* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0
  %49 = bitcast %class.CPDF_Name* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #12
  br label %53

53:                                               ; preds = %39, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret %class.CPDF_Name* %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA11_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), [11 x i8]* dereferenceable(11)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.193", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.397", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !6

9:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !55
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !56
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.397"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2
  call void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA11_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.397"* nonnull sret %5, %"class.fxcrt::WeakPtr"* dereferenceable(8) %12, [11 x i8]* dereferenceable(11) %2)
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.397", %"class.fxcrt::RetainPtr.397"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  %15 = ptrtoint %class.CPDF_Name* %14 to i64
  %16 = bitcast %"class.fxcrt::RetainPtr.193"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = icmp eq %class.CPDF_Name* %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %14, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.193"* nonnull %4) #12
  %24 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Name*
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.193", %"class.fxcrt::RetainPtr.193"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Object*, %class.CPDF_Object** %25, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %25, align 8
  %27 = icmp eq %class.CPDF_Object* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0
  %35 = bitcast %class.CPDF_Object* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #12
  br label %39

39:                                               ; preds = %22, %28, %33
  %40 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  store %class.CPDF_Name* null, %class.CPDF_Name** %13, align 8
  %41 = icmp eq %class.CPDF_Name* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0
  %49 = bitcast %class.CPDF_Name* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #12
  br label %53

53:                                               ; preds = %39, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  ret %class.CPDF_Name* %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Number* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_NumberJRiEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS5_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.193", align 8
  %5 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8, !prof !6

8:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !57
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !58
  unreachable

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 32) #13, !noalias !59
  %11 = bitcast i8* %10 to %class.CPDF_Number*
  %12 = load i32, i32* %2, align 4, !noalias !59
  tail call void @_ZN11CPDF_NumberC1Ei(%class.CPDF_Number* nonnull %11, i32 %12) #12, !noalias !59
  %13 = ptrtoint i8* %10 to i64
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !59
  %17 = bitcast %"class.fxcrt::RetainPtr.193"* %4 to i64*
  store i64 %13, i64* %17, align 8
  %18 = add nsw i64 %16, 2
  store i64 %18, i64* %15, align 8
  %19 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.193"* nonnull %4) #12
  %20 = bitcast %class.CPDF_Object* %19 to %class.CPDF_Number*
  %21 = getelementptr inbounds %"class.fxcrt::RetainPtr.193", %"class.fxcrt::RetainPtr.193"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CPDF_Object*, %class.CPDF_Object** %21, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %21, align 8
  %23 = icmp eq %class.CPDF_Object* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %22, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %22, i64 0, i32 0
  %31 = bitcast %class.CPDF_Object* %22 to void (%"class.fxcrt::Retainable"*)***
  %32 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, i64 1
  %34 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, align 8
  call void %34(%"class.fxcrt::Retainable"* nonnull %30) #12
  br label %35

35:                                               ; preds = %29, %24, %9
  %36 = load i64, i64* %15, align 8
  %37 = add nsw i64 %36, -1
  store i64 %37, i64* %15, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast i8* %10 to %"class.fxcrt::Retainable"*
  %41 = bitcast i8* %10 to void (%"class.fxcrt::Retainable"*)***
  %42 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, i64 1
  %44 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, align 8
  call void %44(%"class.fxcrt::Retainable"* nonnull %40) #12
  br label %45

45:                                               ; preds = %35, %39
  ret %class.CPDF_Number* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Number* @_ZN15CPDF_Dictionary9SetNewForI11CPDF_NumberJiEEENSt3__19enable_ifIXntsr16CanInternStringsIT_EE5valueEPS4_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.193", align 8
  %5 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8, !prof !6

8:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !57
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !58
  unreachable

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 32) #13, !noalias !62
  %11 = bitcast i8* %10 to %class.CPDF_Number*
  %12 = load i32, i32* %2, align 4, !noalias !62
  tail call void @_ZN11CPDF_NumberC1Ei(%class.CPDF_Number* nonnull %11, i32 %12) #12, !noalias !62
  %13 = ptrtoint i8* %10 to i64
  %14 = getelementptr inbounds i8, i8* %10, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !62
  %17 = bitcast %"class.fxcrt::RetainPtr.193"* %4 to i64*
  store i64 %13, i64* %17, align 8
  %18 = add nsw i64 %16, 2
  store i64 %18, i64* %15, align 8
  %19 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.193"* nonnull %4) #12
  %20 = bitcast %class.CPDF_Object* %19 to %class.CPDF_Number*
  %21 = getelementptr inbounds %"class.fxcrt::RetainPtr.193", %"class.fxcrt::RetainPtr.193"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CPDF_Object*, %class.CPDF_Object** %21, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %21, align 8
  %23 = icmp eq %class.CPDF_Object* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %22, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %22, i64 0, i32 0
  %31 = bitcast %class.CPDF_Object* %22 to void (%"class.fxcrt::Retainable"*)***
  %32 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, i64 1
  %34 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, align 8
  call void %34(%"class.fxcrt::Retainable"* nonnull %30) #12
  br label %35

35:                                               ; preds = %29, %24, %9
  %36 = load i64, i64* %15, align 8
  %37 = add nsw i64 %36, -1
  store i64 %37, i64* %15, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %35
  %40 = bitcast i8* %10 to %"class.fxcrt::Retainable"*
  %41 = bitcast i8* %10 to void (%"class.fxcrt::Retainable"*)***
  %42 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, i64 1
  %44 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, align 8
  call void %44(%"class.fxcrt::Retainable"* nonnull %40) #12
  br label %45

45:                                               ; preds = %35, %39
  ret %class.CPDF_Number* %20
}

declare void @_ZN11CPDF_Stream10InitStreamEN6pdfium4spanIKhEEN5fxcrt9RetainPtrI15CPDF_DictionaryEE(%class.CPDF_Stream*, %"class.pdfium::span"*, %"class.fxcrt::RetainPtr.42"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN8CPDF_DIB16StartLoadMaskDIBEN5fxcrt9RetainPtrIK11CPDF_StreamEE(%class.CPDF_DIB* nocapture, %"class.fxcrt::RetainPtr.153"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 248) #13, !noalias !65
  %4 = bitcast i8* %3 to %class.CFX_DIBBase*
  tail call void @_ZN11CFX_DIBBaseC2Ev(%class.CFX_DIBBase* nonnull %4) #12, !noalias !65
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CPDF_DIB, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !noalias !65
  %6 = getelementptr inbounds i8, i8* %3, i64 64
  %7 = getelementptr inbounds i8, i8* %3, i64 130
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 66, i1 false) #12, !noalias !65
  store i8 1, i8* %7, align 2, !noalias !65
  %8 = getelementptr inbounds i8, i8* %3, i64 131
  store i8 0, i8* %8, align 1, !noalias !65
  %9 = getelementptr inbounds i8, i8* %3, i64 132
  store i8 1, i8* %9, align 4, !noalias !65
  %10 = getelementptr inbounds i8, i8* %3, i64 133
  %11 = getelementptr inbounds i8, i8* %3, i64 216
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 75, i1 false) #12, !noalias !65
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #12, !noalias !65
  %12 = ptrtoint i8* %3 to i64
  %13 = getelementptr inbounds i8, i8* %3, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !65
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8, !noalias !65
  %17 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 24
  %18 = getelementptr inbounds %"class.fxcrt::RetainPtr.215", %"class.fxcrt::RetainPtr.215"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_DIB*, %class.CPDF_DIB** %18, align 8
  %20 = bitcast %"class.fxcrt::RetainPtr.215"* %17 to i64*
  store i64 %12, i64* %20, align 8
  %21 = icmp eq %class.CPDF_DIB* %19, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %19, i64 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, -1
  store i64 %25, i64* %23, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %19, i64 0, i32 0, i32 0
  %29 = bitcast %class.CPDF_DIB* %19 to void (%"class.fxcrt::Retainable"*)***
  %30 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %30, i64 1
  %32 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, align 8
  tail call void %32(%"class.fxcrt::Retainable"* nonnull %28) #12
  br label %33

33:                                               ; preds = %27, %22, %2
  %34 = load %class.CPDF_DIB*, %class.CPDF_DIB** %18, align 8
  %35 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 1, i32 0
  %36 = load %class.CPDF_Document*, %class.CPDF_Document** %35, align 8
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr.153", %"class.fxcrt::RetainPtr.153"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CPDF_Stream*, %class.CPDF_Stream** %37, align 8
  %39 = tail call zeroext i8 @_ZN8CPDF_DIB16StartLoadDIBBaseEP13CPDF_DocumentPK11CPDF_StreambPK15CPDF_DictionaryS7_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_DIB* %34, %class.CPDF_Document* %36, %class.CPDF_Stream* %38, i1 zeroext false, %class.CPDF_Dictionary* null, %class.CPDF_Dictionary* null, i1 zeroext true, i32 0, i1 zeroext false)
  switch i8 %39, label %59 [
    i8 2, label %40
    i8 0, label %45
  ]

40:                                               ; preds = %33
  %41 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 12
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %59

44:                                               ; preds = %40
  store i8 2, i8* %41, align 8
  br label %59

45:                                               ; preds = %33
  %46 = load %class.CPDF_DIB*, %class.CPDF_DIB** %18, align 8
  store %class.CPDF_DIB* null, %class.CPDF_DIB** %18, align 8
  %47 = icmp eq %class.CPDF_DIB* %46, null
  br i1 %47, label %59, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %46, i64 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, -1
  store i64 %51, i64* %49, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %46, i64 0, i32 0, i32 0
  %55 = bitcast %class.CPDF_DIB* %46 to void (%"class.fxcrt::Retainable"*)***
  %56 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, i64 1
  %58 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %57, align 8
  tail call void %58(%"class.fxcrt::Retainable"* nonnull %54) #12
  br label %59

59:                                               ; preds = %53, %48, %45, %33, %40, %44
  %60 = phi i8 [ 2, %44 ], [ 2, %40 ], [ 1, %33 ], [ 1, %45 ], [ 1, %48 ], [ 1, %53 ]
  ret i8 %60
}

declare void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.350"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #1

declare i32 @FXSYS_roundf(float) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8CPDF_DIB10DetachMaskEv(%"class.fxcrt::RetainPtr.215"* noalias nocapture sret, %class.CPDF_DIB* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %1, i64 0, i32 24
  %4 = bitcast %"class.fxcrt::RetainPtr.215"* %0 to i64*
  %5 = bitcast %"class.fxcrt::RetainPtr.215"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8CPDF_DIB11IsJBigImageEv(%class.CPDF_DIB* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %4, align 8
  %6 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %5, i64 0, i32 3
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %2, %"class.fxcrt::ByteString"* dereferenceable(8) %6) #12
  %7 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret i1 %7
}

declare void @_ZN11CFX_DIBBase14SetPaletteArgbEij(%class.CFX_DIBBase*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8CPDF_DIB22TranslateScanline24bppEPhPKh(%class.CPDF_DIB* nocapture readonly, i8*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %"class.pdfium::span.357", align 8
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %223, label %17

17:                                               ; preds = %3
  %18 = tail call zeroext i1 @_ZNK8CPDF_DIB35TranslateScanline24bppDefaultDecodeEPhPKh(%class.CPDF_DIB* %0, i8* %1, i8* %2)
  br i1 %18, label %223, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, 16
  %23 = select i1 %22, i32 %21, i32 16
  %24 = zext i32 %23 to i64
  %25 = shl nuw nsw i64 %24, 2
  %26 = tail call i8* @_Znwm(i64 %25) #13
  %27 = bitcast i8* %26 to float*
  %28 = ptrtoint i8* %26 to i64
  %29 = add nsw i64 %24, -1
  %30 = getelementptr float, float* %27, i64 %29
  %31 = ptrtoint float* %30 to i64
  %32 = sub i64 4, %28
  %33 = add i64 %32, %31
  %34 = and i64 %33, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 0, i64 %34, i1 false) #12
  %35 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #12
  store float 0.000000e+00, float* %4, align 4
  %36 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #12
  store float 0.000000e+00, float* %5, align 4
  %37 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #12
  store float 0.000000e+00, float* %6, align 4
  %38 = load i32, i32* %14, align 8
  %39 = icmp eq i32 %38, 8
  %40 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %82

43:                                               ; preds = %19
  %44 = getelementptr inbounds float, float* %27, i64 %24
  %45 = ptrtoint float* %44 to i64
  %46 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  %47 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 13
  %48 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 10
  %49 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %50 = getelementptr inbounds i8, i8* %26, i64 12
  %51 = bitcast i8* %50 to float*
  %52 = getelementptr inbounds i8, i8* %26, i64 4
  %53 = bitcast i8* %52 to float*
  %54 = getelementptr inbounds i8, i8* %26, i64 8
  %55 = bitcast i8* %54 to float*
  %56 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %57 = sub i64 %45, %28
  %58 = ashr exact i64 %57, 2
  %59 = bitcast %"class.pdfium::span.357"* %7 to i64*
  %60 = getelementptr inbounds %"class.pdfium::span.357", %"class.pdfium::span.357"* %7, i64 0, i32 1
  %61 = bitcast float* %8 to i8*
  %62 = bitcast float* %9 to i8*
  %63 = bitcast float* %4 to i32*
  %64 = bitcast float* %10 to i8*
  %65 = bitcast float* %11 to i8*
  %66 = bitcast float* %5 to i32*
  %67 = bitcast float* %12 to i8*
  %68 = bitcast float* %13 to i8*
  %69 = bitcast float* %6 to i32*
  br label %70

70:                                               ; preds = %220, %43
  %71 = phi float [ 0.000000e+00, %43 ], [ %203, %220 ]
  %72 = phi float [ 0.000000e+00, %43 ], [ %207, %220 ]
  %73 = phi float [ 0.000000e+00, %43 ], [ %212, %220 ]
  %74 = phi i32 [ %21, %43 ], [ %222, %220 ]
  %75 = phi i64 [ 0, %43 ], [ %85, %220 ]
  %76 = phi i64 [ 0, %43 ], [ %84, %220 ]
  %77 = phi i64 [ 0, %43 ], [ %221, %220 ]
  %78 = phi i32 [ 0, %43 ], [ %217, %220 ]
  %79 = icmp eq i32 %74, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %70
  %81 = zext i32 %74 to i64
  br label %94

82:                                               ; preds = %178, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #12
  call void @_ZdlPv(i8* nonnull %26) #13
  br label %223

83:                                               ; preds = %146, %70
  %84 = phi i64 [ %76, %70 ], [ %147, %146 ]
  %85 = phi i64 [ %75, %70 ], [ %148, %146 ]
  %86 = load i8, i8* %47, align 1, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %163, label %88

88:                                               ; preds = %83
  %89 = load i32, i32* %48, align 8
  %90 = icmp eq i32 %89, 3
  br i1 %90, label %91, label %163

91:                                               ; preds = %88
  %92 = load i32, i32* %49, align 4
  %93 = icmp eq i32 %92, 3
  br i1 %93, label %151, label %165

94:                                               ; preds = %80, %146
  %95 = phi i64 [ 0, %80 ], [ %149, %146 ]
  %96 = phi i64 [ %75, %80 ], [ %148, %146 ]
  %97 = phi i64 [ %76, %80 ], [ %147, %146 ]
  br i1 %39, label %98, label %111

98:                                               ; preds = %94
  %99 = add i64 %97, 1
  %100 = getelementptr inbounds i8, i8* %2, i64 %97
  %101 = load i8, i8* %100, align 1
  %102 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %46, align 8
  %103 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %102, i64 %95, i32 0
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %102, i64 %95, i32 1
  %106 = load float, float* %105, align 4
  %107 = uitofp i8 %101 to float
  %108 = fmul float %106, %107
  %109 = fadd float %104, %108
  %110 = getelementptr inbounds float, float* %27, i64 %95
  store float %109, float* %110, align 4
  br label %146

111:                                              ; preds = %94
  %112 = load i32, i32* %14, align 8
  %113 = lshr i64 %96, 3
  %114 = getelementptr inbounds i8, i8* %2, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  switch i32 %112, label %124 [
    i32 8, label %133
    i32 16, label %117
  ]

117:                                              ; preds = %111
  %118 = shl nuw nsw i32 %116, 8
  %119 = add nuw nsw i64 %113, 1
  %120 = getelementptr inbounds i8, i8* %2, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = or i32 %118, %122
  br label %133

124:                                              ; preds = %111
  %125 = trunc i64 %96 to i32
  %126 = and i32 %125, 7
  %127 = sub nuw nsw i32 8, %126
  %128 = sub i32 %127, %112
  %129 = lshr i32 %116, %128
  %130 = shl nsw i32 -1, %112
  %131 = xor i32 %130, -1
  %132 = and i32 %129, %131
  br label %133

133:                                              ; preds = %111, %117, %124
  %134 = phi i32 [ %123, %117 ], [ %132, %124 ], [ %116, %111 ]
  %135 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %46, align 8
  %136 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %135, i64 %95, i32 0
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %135, i64 %95, i32 1
  %139 = load float, float* %138, align 4
  %140 = uitofp i32 %134 to float
  %141 = fmul float %139, %140
  %142 = fadd float %137, %141
  %143 = getelementptr inbounds float, float* %27, i64 %95
  store float %142, float* %143, align 4
  %144 = zext i32 %112 to i64
  %145 = add i64 %96, %144
  br label %146

146:                                              ; preds = %98, %133
  %147 = phi i64 [ %99, %98 ], [ %97, %133 ]
  %148 = phi i64 [ %96, %98 ], [ %145, %133 ]
  %149 = add nuw nsw i64 %95, 1
  %150 = icmp ult i64 %149, %81
  br i1 %150, label %94, label %83

151:                                              ; preds = %91
  %152 = load float, float* %51, align 4
  %153 = fsub float 1.000000e+00, %152
  %154 = load float, float* %27, align 4
  %155 = fsub float 1.000000e+00, %154
  %156 = fmul float %153, %155
  store float %156, float* %4, align 4
  %157 = load float, float* %53, align 4
  %158 = fsub float 1.000000e+00, %157
  %159 = fmul float %153, %158
  store float %159, float* %5, align 4
  %160 = load float, float* %55, align 4
  %161 = fsub float 1.000000e+00, %160
  %162 = fmul float %153, %161
  store float %162, float* %6, align 4
  br label %178

163:                                              ; preds = %88, %83
  %164 = load i32, i32* %49, align 4
  br label %165

165:                                              ; preds = %163, %91
  %166 = phi i32 [ %164, %163 ], [ %92, %91 ]
  %167 = icmp eq i32 %166, 11
  br i1 %167, label %178, label %168

168:                                              ; preds = %165
  %169 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %56, align 8
  store i64 %28, i64* %59, align 8
  store i64 %58, i64* %60, align 8
  %170 = bitcast %class.CPDF_ColorSpace* %169 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)***
  %171 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*** %170, align 8
  %172 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %171, i64 2
  %173 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.357"*, float*, float*, float*)** %172, align 8
  %174 = call zeroext i1 %173(%class.CPDF_ColorSpace* %169, %"class.pdfium::span.357"* nonnull %7, float* nonnull %4, float* nonnull %5, float* nonnull %6) #12
  %175 = load float, float* %4, align 4
  %176 = load float, float* %5, align 4
  %177 = load float, float* %6, align 4
  br label %178

178:                                              ; preds = %165, %168, %151
  %179 = phi float [ %71, %165 ], [ %177, %168 ], [ %162, %151 ]
  %180 = phi float [ %72, %165 ], [ %176, %168 ], [ %159, %151 ]
  %181 = phi float [ %73, %165 ], [ %175, %168 ], [ %156, %151 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61)
  store float 0.000000e+00, float* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62)
  store float 1.000000e+00, float* %9, align 4
  %182 = fcmp olt float %181, 0.000000e+00
  %183 = select i1 %182, float* %8, float* %4
  %184 = load float, float* %183, align 4
  %185 = fcmp ogt float %184, 1.000000e+00
  %186 = select i1 %185, float* %9, float* %183
  %187 = bitcast float* %186 to i32*
  %188 = load i32, i32* %187, align 4
  store i32 %188, i32* %63, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  store float 0.000000e+00, float* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65)
  store float 1.000000e+00, float* %11, align 4
  %189 = fcmp olt float %180, 0.000000e+00
  %190 = select i1 %189, float* %10, float* %5
  %191 = load float, float* %190, align 4
  %192 = fcmp ogt float %191, 1.000000e+00
  %193 = select i1 %192, float* %11, float* %190
  %194 = bitcast float* %193 to i32*
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %66, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67)
  store float 0.000000e+00, float* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68)
  store float 1.000000e+00, float* %13, align 4
  %196 = fcmp olt float %179, 0.000000e+00
  %197 = select i1 %196, float* %12, float* %6
  %198 = load float, float* %197, align 4
  %199 = fcmp ogt float %198, 1.000000e+00
  %200 = select i1 %199, float* %13, float* %197
  %201 = bitcast float* %200 to i32*
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %69, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67)
  %203 = bitcast i32 %202 to float
  %204 = fmul float %203, 2.550000e+02
  %205 = fptoui float %204 to i8
  %206 = getelementptr inbounds i8, i8* %1, i64 %77
  store i8 %205, i8* %206, align 1
  %207 = bitcast i32 %195 to float
  %208 = fmul float %207, 2.550000e+02
  %209 = fptoui float %208 to i8
  %210 = add nuw nsw i64 %77, 1
  %211 = getelementptr inbounds i8, i8* %1, i64 %210
  store i8 %209, i8* %211, align 1
  %212 = bitcast i32 %188 to float
  %213 = fmul float %212, 2.550000e+02
  %214 = fptoui float %213 to i8
  %215 = add nuw nsw i64 %77, 2
  %216 = getelementptr inbounds i8, i8* %1, i64 %215
  store i8 %214, i8* %216, align 1
  %217 = add nuw nsw i32 %78, 1
  %218 = load i32, i32* %40, align 4
  %219 = icmp slt i32 %217, %218
  br i1 %219, label %220, label %82

220:                                              ; preds = %178
  %221 = add nuw nsw i64 %77, 3
  %222 = load i32, i32* %20, align 8
  br label %70

223:                                              ; preds = %17, %3, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8CPDF_DIB35TranslateScanline24bppDefaultDecodeEPhPKh(%class.CPDF_DIB* nocapture readonly, i8*, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %208, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %10 [
    i32 2, label %43
    i32 5, label %43
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %208

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %17, align 8
  %19 = tail call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* %18) #12
  %20 = icmp eq i32 %16, %19
  br i1 %20, label %21, label %208

21:                                               ; preds = %14
  %22 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %17, align 8
  %23 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 13
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 10
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = load i32, i32* %8, align 4
  %36 = icmp eq i32 %35, 3
  br label %37

37:                                               ; preds = %21, %30, %34
  %38 = phi i1 [ false, %30 ], [ false, %21 ], [ %36, %34 ]
  %39 = bitcast %class.CPDF_ColorSpace* %22 to void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)***
  %40 = load void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)**, void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)*** %39, align 8
  %41 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)*, void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)** %40, i64 4
  %42 = load void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)*, void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)** %41, align 8
  tail call void %42(%class.CPDF_ColorSpace* %22, i8* %1, i8* %2, i32 %24, i32 %24, i32 %26, i1 zeroext %38) #12
  br label %208

43:                                               ; preds = %7, %7
  %44 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 3
  br i1 %46, label %47, label %208

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %49 = load i32, i32* %48, align 8
  switch i32 %49, label %90 [
    i32 8, label %54
    i32 16, label %50
  ]

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %74, label %208

54:                                               ; preds = %47
  %55 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %208

58:                                               ; preds = %54, %58
  %59 = phi i32 [ %71, %58 ], [ 0, %54 ]
  %60 = phi i8* [ %70, %58 ], [ %2, %54 ]
  %61 = phi i8* [ %69, %58 ], [ %1, %54 ]
  %62 = getelementptr inbounds i8, i8* %60, i64 2
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %61, i64 1
  store i8 %63, i8* %61, align 1
  %65 = getelementptr inbounds i8, i8* %60, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = getelementptr inbounds i8, i8* %61, i64 2
  store i8 %66, i8* %64, align 1
  %68 = load i8, i8* %60, align 1
  %69 = getelementptr inbounds i8, i8* %61, i64 3
  store i8 %68, i8* %67, align 1
  %70 = getelementptr inbounds i8, i8* %60, i64 3
  %71 = add nuw nsw i32 %59, 1
  %72 = load i32, i32* %55, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %58, label %208

74:                                               ; preds = %50, %74
  %75 = phi i32 [ %87, %74 ], [ 0, %50 ]
  %76 = phi i8* [ %86, %74 ], [ %2, %50 ]
  %77 = phi i8* [ %85, %74 ], [ %1, %50 ]
  %78 = getelementptr inbounds i8, i8* %76, i64 4
  %79 = load i8, i8* %78, align 1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  store i8 %79, i8* %77, align 1
  %81 = getelementptr inbounds i8, i8* %76, i64 2
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds i8, i8* %77, i64 2
  store i8 %82, i8* %80, align 1
  %84 = load i8, i8* %76, align 1
  %85 = getelementptr inbounds i8, i8* %77, i64 3
  store i8 %84, i8* %83, align 1
  %86 = getelementptr inbounds i8, i8* %76, i64 6
  %87 = add nuw nsw i32 %75, 1
  %88 = load i32, i32* %51, align 4
  %89 = icmp slt i32 %87, %88
  br i1 %89, label %74, label %208

90:                                               ; preds = %47
  %91 = shl nsw i32 -1, %49
  %92 = xor i32 %91, -1
  %93 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %208

96:                                               ; preds = %90, %204
  %97 = phi i32 [ %207, %204 ], [ %49, %90 ]
  %98 = phi i32 [ %201, %204 ], [ 0, %90 ]
  %99 = phi i64 [ %205, %204 ], [ 0, %90 ]
  %100 = phi i64 [ %206, %204 ], [ 0, %90 ]
  %101 = zext i32 %97 to i64
  %102 = lshr i64 %100, 3
  %103 = getelementptr inbounds i8, i8* %2, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  switch i32 %97, label %146 [
    i32 8, label %106
    i32 16, label %117
  ]

106:                                              ; preds = %96
  %107 = add i64 %100, %101
  %108 = lshr i64 %107, 3
  %109 = getelementptr inbounds i8, i8* %2, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = add i64 %107, %101
  %113 = lshr i64 %112, 3
  %114 = getelementptr inbounds i8, i8* %2, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  br label %176

117:                                              ; preds = %96
  %118 = shl nuw nsw i32 %105, 8
  %119 = add nuw nsw i64 %102, 1
  %120 = getelementptr inbounds i8, i8* %2, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = or i32 %118, %122
  %124 = add i64 %100, %101
  %125 = lshr i64 %124, 3
  %126 = getelementptr inbounds i8, i8* %2, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = shl nuw nsw i32 %128, 8
  %130 = add nuw nsw i64 %125, 1
  %131 = getelementptr inbounds i8, i8* %2, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = or i32 %129, %133
  %135 = add i64 %124, %101
  %136 = lshr i64 %135, 3
  %137 = getelementptr inbounds i8, i8* %2, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = shl nuw nsw i32 %139, 8
  %141 = add nuw nsw i64 %136, 1
  %142 = getelementptr inbounds i8, i8* %2, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = or i32 %140, %144
  br label %176

146:                                              ; preds = %96
  %147 = trunc i64 %100 to i32
  %148 = and i32 %147, 7
  %149 = sub nuw nsw i32 8, %148
  %150 = sub i32 %149, %97
  %151 = lshr i32 %105, %150
  %152 = shl nsw i32 -1, %97
  %153 = xor i32 %152, -1
  %154 = and i32 %151, %153
  %155 = add i64 %100, %101
  %156 = lshr i64 %155, 3
  %157 = getelementptr inbounds i8, i8* %2, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = sub nsw i64 8, %101
  %161 = and i64 %155, 7
  %162 = sub nsw i64 %160, %161
  %163 = trunc i64 %162 to i32
  %164 = lshr i32 %159, %163
  %165 = and i32 %164, %153
  %166 = add i64 %155, %101
  %167 = lshr i64 %166, 3
  %168 = getelementptr inbounds i8, i8* %2, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i32
  %171 = and i64 %166, 7
  %172 = sub nsw i64 %160, %171
  %173 = trunc i64 %172 to i32
  %174 = lshr i32 %170, %173
  %175 = and i32 %174, %153
  br label %176

176:                                              ; preds = %106, %117, %146
  %177 = phi i64 [ %135, %117 ], [ %166, %146 ], [ %112, %106 ]
  %178 = phi i32 [ %134, %117 ], [ %165, %146 ], [ %111, %106 ]
  %179 = phi i32 [ %123, %117 ], [ %154, %146 ], [ %105, %106 ]
  %180 = phi i32 [ %145, %117 ], [ %175, %146 ], [ %116, %106 ]
  %181 = icmp ugt i32 %179, %92
  %182 = select i1 %181, i32 %92, i32 %179
  %183 = icmp ugt i32 %178, %92
  %184 = select i1 %183, i32 %92, i32 %178
  %185 = icmp ugt i32 %180, %92
  %186 = select i1 %185, i32 %92, i32 %180
  %187 = mul i32 %186, 255
  %188 = udiv i32 %187, %92
  %189 = trunc i32 %188 to i8
  %190 = getelementptr inbounds i8, i8* %1, i64 %99
  store i8 %189, i8* %190, align 1
  %191 = mul i32 %184, 255
  %192 = udiv i32 %191, %92
  %193 = trunc i32 %192 to i8
  %194 = add nuw nsw i64 %99, 1
  %195 = getelementptr inbounds i8, i8* %1, i64 %194
  store i8 %193, i8* %195, align 1
  %196 = mul i32 %182, 255
  %197 = udiv i32 %196, %92
  %198 = trunc i32 %197 to i8
  %199 = add nuw nsw i64 %99, 2
  %200 = getelementptr inbounds i8, i8* %1, i64 %199
  store i8 %198, i8* %200, align 1
  %201 = add nuw nsw i32 %98, 1
  %202 = load i32, i32* %93, align 4
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %204, label %208

204:                                              ; preds = %176
  %205 = add nuw nsw i64 %99, 3
  %206 = add i64 %177, %101
  %207 = load i32, i32* %48, align 8
  br label %96

208:                                              ; preds = %74, %58, %176, %50, %54, %90, %43, %14, %37, %10, %3
  %209 = phi i1 [ false, %3 ], [ false, %10 ], [ true, %37 ], [ true, %14 ], [ true, %43 ], [ true, %90 ], [ true, %54 ], [ true, %50 ], [ true, %176 ], [ true, %58 ], [ true, %74 ]
  ret i1 %209
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8CPDF_DIB9TransMaskEv(%class.CPDF_DIB* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 10
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 3
  br label %13

13:                                               ; preds = %1, %9, %5
  %14 = phi i1 [ false, %5 ], [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK8CPDF_DIB9GetBufferEv(%class.CPDF_DIB* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %2, align 8
  %4 = icmp eq %class.CFX_DIBitmap* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CFX_DIBitmap* %3 to i8* (%class.CFX_DIBitmap*)***
  %7 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %7, i64 2
  %9 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %8, align 8
  %10 = tail call i8* %9(%class.CFX_DIBitmap* nonnull %3) #12
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i8* [ %10, %5 ], [ null, %1 ]
  ret i8* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK8CPDF_DIB11GetScanlineEi(%class.CPDF_DIB* readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %450, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = tail call i64 @_ZN7fxcodec15CalculatePitch8Ejji(i32 %4, i32 %8, i32 %10) #12
  %12 = trunc i64 %11 to i8
  %13 = lshr i64 %11, 32
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i8 %12, 0
  br i1 %15, label %450, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %17, align 8
  %19 = icmp eq %class.CFX_DIBitmap* %18, null
  br i1 %19, label %35, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %18, i64 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %22, %14
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %18, i64 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, %1
  %28 = add nsw i32 %26, -1
  %29 = select i1 %27, i32 %1, i32 %28
  %30 = bitcast %class.CFX_DIBitmap* %18 to i8* (%class.CFX_DIBitmap*, i32)***
  %31 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %30, align 8
  %32 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %31, i64 3
  %33 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %32, align 8
  %34 = tail call i8* %33(%class.CFX_DIBitmap* nonnull %18, i32 %29) #12
  br label %54

35:                                               ; preds = %16, %20
  %36 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %37 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %36, align 8
  %38 = icmp eq %"class.fxcodec::ScanlineDecoder"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = tail call i8* @_ZN7fxcodec15ScanlineDecoder11GetScanlineEi(%"class.fxcodec::ScanlineDecoder"* nonnull %37, i32 %1) #12
  br label %54

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %43 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %42, align 8
  %44 = tail call i32 @_ZNK14CPDF_StreamAcc7GetSizeEv(%class.CPDF_StreamAcc* %43) #12
  %45 = add nsw i32 %1, 1
  %46 = mul i32 %45, %14
  %47 = icmp ult i32 %44, %46
  br i1 %47, label %57, label %48

48:                                               ; preds = %41
  %49 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %42, align 8
  %50 = tail call i8* @_ZNK14CPDF_StreamAcc7GetDataEv(%class.CPDF_StreamAcc* %49) #12
  %51 = mul i32 %14, %1
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %50, i64 %52
  br label %54

54:                                               ; preds = %39, %48, %24
  %55 = phi i8* [ %34, %24 ], [ %40, %39 ], [ %53, %48 ]
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %41, %54
  %58 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %57, %61
  %65 = phi i8* [ %63, %61 ], [ %59, %57 ]
  %66 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %65, i8 -1, i64 %68, i1 false)
  br label %450

69:                                               ; preds = %54
  %70 = load i32, i32* %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = mul i32 %71, %70
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %208

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 15
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %137, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 14
  %80 = load i8, i8* %79, align 2, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %137, label %82

82:                                               ; preds = %78
  %83 = icmp eq i32 %14, 0
  br i1 %83, label %105, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %86 = add nsw i64 %13, -1
  %87 = and i64 %13, 3
  %88 = icmp ult i64 %86, 3
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = sub nsw i64 %13, %87
  br label %108

91:                                               ; preds = %108, %84
  %92 = phi i64 [ 0, %84 ], [ %134, %108 ]
  %93 = icmp eq i64 %87, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %102, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %103, %94 ], [ %87, %91 ]
  %97 = getelementptr inbounds i8, i8* %55, i64 %95
  %98 = load i8, i8* %97, align 1
  %99 = xor i8 %98, -1
  %100 = load i8*, i8** %85, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 %95
  store i8 %99, i8* %101, align 1
  %102 = add nuw nsw i64 %95, 1
  %103 = add i64 %96, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %94, !llvm.loop !68

105:                                              ; preds = %91, %94, %82
  %106 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  br label %450

108:                                              ; preds = %108, %89
  %109 = phi i64 [ 0, %89 ], [ %134, %108 ]
  %110 = phi i64 [ %90, %89 ], [ %135, %108 ]
  %111 = getelementptr inbounds i8, i8* %55, i64 %109
  %112 = load i8, i8* %111, align 1
  %113 = xor i8 %112, -1
  %114 = load i8*, i8** %85, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %109
  store i8 %113, i8* %115, align 1
  %116 = or i64 %109, 1
  %117 = getelementptr inbounds i8, i8* %55, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = xor i8 %118, -1
  %120 = load i8*, i8** %85, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 %116
  store i8 %119, i8* %121, align 1
  %122 = or i64 %109, 2
  %123 = getelementptr inbounds i8, i8* %55, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = xor i8 %124, -1
  %126 = load i8*, i8** %85, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %122
  store i8 %125, i8* %127, align 1
  %128 = or i64 %109, 3
  %129 = getelementptr inbounds i8, i8* %55, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = xor i8 %130, -1
  %132 = load i8*, i8** %85, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 %128
  store i8 %131, i8* %133, align 1
  %134 = add nuw nsw i64 %109, 4
  %135 = add i64 %110, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %91, label %108

137:                                              ; preds = %78, %74
  %138 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %139 = load i8, i8* %138, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %145

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %143, i8* nonnull align 1 %55, i64 %13, i1 false)
  %144 = load i8*, i8** %142, align 8
  br label %450

145:                                              ; preds = %137
  %146 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  %147 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %146, align 8
  %148 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %147, i64 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %159, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 1
  %155 = load i32*, i32** %154, align 8
  %156 = icmp eq i32* %153, %155
  br i1 %156, label %159, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %153, align 4
  br label %159

159:                                              ; preds = %145, %151, %157
  %160 = phi i32 [ %158, %157 ], [ 0, %145 ], [ -16777216, %151 ]
  %161 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %147, i64 0, i32 3
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %180, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 1
  %168 = load i32*, i32** %167, align 8
  %169 = icmp eq i32* %166, %168
  br i1 %169, label %180, label %170

170:                                              ; preds = %164
  %171 = ptrtoint i32* %168 to i64
  %172 = ptrtoint i32* %166 to i64
  %173 = sub i64 %171, %172
  %174 = ashr exact i64 %173, 2
  %175 = icmp ugt i64 %174, 1
  br i1 %175, label %177, label %176, !prof !6

176:                                              ; preds = %170
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !69
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !70
  unreachable

177:                                              ; preds = %170
  %178 = getelementptr inbounds i32, i32* %166, i64 1
  %179 = load i32, i32* %178, align 4
  br label %180

180:                                              ; preds = %159, %164, %177
  %181 = phi i32 [ %179, %177 ], [ 0, %159 ], [ -1, %164 ]
  %182 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %183 = bitcast i8** %182 to i32**
  %184 = load i32*, i32** %183, align 8
  %185 = load i32, i32* %9, align 4
  %186 = icmp sgt i32 %185, 0
  %187 = bitcast i32* %184 to i8*
  br i1 %186, label %190, label %450

188:                                              ; preds = %190
  %189 = load i8*, i8** %182, align 8
  br label %450

190:                                              ; preds = %180, %190
  %191 = phi i32 [ %205, %190 ], [ 0, %180 ]
  %192 = phi i32* [ %204, %190 ], [ %184, %180 ]
  %193 = lshr i32 %191, 3
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds i8, i8* %55, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = and i32 %191, 7
  %199 = xor i32 %198, 7
  %200 = shl i32 1, %199
  %201 = and i32 %200, %197
  %202 = icmp eq i32 %201, 0
  %203 = select i1 %202, i32 %160, i32 %181
  store i32 %203, i32* %192, align 4
  %204 = getelementptr inbounds i32, i32* %192, i64 1
  %205 = add nuw nsw i32 %191, 1
  %206 = load i32, i32* %9, align 4
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %190, label %188

208:                                              ; preds = %69
  %209 = icmp ult i32 %72, 9
  br i1 %209, label %210, label %348

210:                                              ; preds = %208
  %211 = icmp eq i32 %70, 8
  br i1 %211, label %217, label %212

212:                                              ; preds = %210
  %213 = load i32, i32* %9, align 4
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %215, label %272

215:                                              ; preds = %212
  %216 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  br label %220

217:                                              ; preds = %210
  %218 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %219, i8* nonnull align 1 %55, i64 %13, i1 false)
  br label %272

220:                                              ; preds = %240, %215
  %221 = phi i32 [ %71, %215 ], [ %241, %240 ]
  %222 = phi i64 [ 0, %215 ], [ %236, %240 ]
  %223 = phi i64 [ 0, %215 ], [ %231, %240 ]
  %224 = icmp eq i32 %221, 0
  br i1 %224, label %230, label %225

225:                                              ; preds = %220
  %226 = load i32, i32* %3, align 8
  %227 = zext i32 %226 to i64
  %228 = shl nsw i32 -1, %226
  %229 = xor i32 %228, -1
  br label %242

230:                                              ; preds = %264, %220
  %231 = phi i64 [ %223, %220 ], [ %269, %264 ]
  %232 = phi i32 [ 0, %220 ], [ %268, %264 ]
  %233 = trunc i32 %232 to i8
  %234 = load i8*, i8** %216, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 %222
  store i8 %233, i8* %235, align 1
  %236 = add nuw nsw i64 %222, 1
  %237 = load i32, i32* %9, align 4
  %238 = sext i32 %237 to i64
  %239 = icmp slt i64 %236, %238
  br i1 %239, label %240, label %272

240:                                              ; preds = %230
  %241 = load i32, i32* %7, align 8
  br label %220

242:                                              ; preds = %225, %264
  %243 = phi i32 [ 0, %225 ], [ %270, %264 ]
  %244 = phi i32 [ 0, %225 ], [ %268, %264 ]
  %245 = phi i64 [ %223, %225 ], [ %269, %264 ]
  %246 = lshr i64 %245, 3
  %247 = getelementptr inbounds i8, i8* %55, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  switch i32 %226, label %257 [
    i32 8, label %264
    i32 16, label %250
  ]

250:                                              ; preds = %242
  %251 = shl nuw nsw i32 %249, 8
  %252 = add nuw nsw i64 %246, 1
  %253 = getelementptr inbounds i8, i8* %55, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = or i32 %251, %255
  br label %264

257:                                              ; preds = %242
  %258 = trunc i64 %245 to i32
  %259 = and i32 %258, 7
  %260 = sub nuw nsw i32 8, %259
  %261 = sub i32 %260, %226
  %262 = lshr i32 %249, %261
  %263 = and i32 %262, %229
  br label %264

264:                                              ; preds = %242, %250, %257
  %265 = phi i32 [ %256, %250 ], [ %263, %257 ], [ %249, %242 ]
  %266 = mul i32 %226, %243
  %267 = shl i32 %265, %266
  %268 = or i32 %267, %244
  %269 = add i64 %245, %227
  %270 = add nuw i32 %243, 1
  %271 = icmp ult i32 %270, %221
  br i1 %271, label %242, label %230

272:                                              ; preds = %230, %212, %217
  %273 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %274 = load i8, i8* %273, align 1, !range !2
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %279

276:                                              ; preds = %272
  %277 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %278 = load i8*, i8** %277, align 8
  br label %450

279:                                              ; preds = %272
  %280 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %281 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6
  %282 = bitcast %"class.std::__1::vector"* %281 to i64*
  %283 = load i64, i64* %282, align 8, !noalias !71
  %284 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 1
  %285 = bitcast i32** %284 to i64*
  %286 = load i64, i64* %285, align 8, !noalias !71
  %287 = sub i64 %286, %283
  %288 = ashr exact i64 %287, 2
  %289 = load i32, i32* %9, align 4
  %290 = icmp sgt i32 %289, 0
  %291 = inttoptr i64 %283 to i32*
  br i1 %290, label %292, label %299

292:                                              ; preds = %279
  %293 = inttoptr i64 %286 to i32*
  %294 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = load i8*, i8** %280, align 8
  %297 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %298 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  br label %301

299:                                              ; preds = %329, %279
  %300 = load i8*, i8** %280, align 8
  br label %450

301:                                              ; preds = %344, %292
  %302 = phi i32* [ %293, %292 ], [ %347, %344 ]
  %303 = phi i32* [ %291, %292 ], [ %346, %344 ]
  %304 = phi i32 [ 0, %292 ], [ %341, %344 ]
  %305 = phi i8* [ %295, %292 ], [ %307, %344 ]
  %306 = phi i8* [ %296, %292 ], [ %345, %344 ]
  %307 = getelementptr inbounds i8, i8* %305, i64 1
  %308 = load i8, i8* %305, align 1
  %309 = icmp eq i32* %303, %302
  br i1 %309, label %326, label %310

310:                                              ; preds = %301
  %311 = zext i8 %308 to i64
  %312 = icmp ugt i64 %288, %311
  br i1 %312, label %314, label %313, !prof !6

313:                                              ; preds = %310
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !69
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !70
  unreachable

314:                                              ; preds = %310
  %315 = getelementptr inbounds i32, i32* %291, i64 %311
  %316 = load i32, i32* %315, align 4
  %317 = trunc i32 %316 to i8
  %318 = getelementptr inbounds i8, i8* %306, i64 1
  store i8 %317, i8* %306, align 1
  %319 = load i32, i32* %315, align 4
  %320 = lshr i32 %319, 8
  %321 = trunc i32 %320 to i8
  %322 = getelementptr inbounds i8, i8* %306, i64 2
  store i8 %321, i8* %318, align 1
  %323 = load i32, i32* %315, align 4
  %324 = lshr i32 %323, 16
  %325 = trunc i32 %324 to i8
  store i8 %325, i8* %322, align 1
  br label %329

326:                                              ; preds = %301
  %327 = getelementptr inbounds i8, i8* %306, i64 1
  store i8 %308, i8* %306, align 1
  %328 = getelementptr inbounds i8, i8* %306, i64 2
  store i8 %308, i8* %327, align 1
  store i8 %308, i8* %328, align 1
  br label %329

329:                                              ; preds = %326, %314
  %330 = getelementptr inbounds i8, i8* %306, i64 3
  %331 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %298, align 8
  %332 = zext i8 %308 to i32
  %333 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %331, i64 0, i32 2
  %334 = load i32, i32* %333, align 4
  %335 = icmp sgt i32 %334, %332
  %336 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %331, i64 0, i32 3
  %337 = load i32, i32* %336, align 4
  %338 = icmp slt i32 %337, %332
  %339 = or i1 %335, %338
  %340 = sext i1 %339 to i8
  store i8 %340, i8* %330, align 1
  %341 = add nuw nsw i32 %304, 1
  %342 = load i32, i32* %9, align 4
  %343 = icmp slt i32 %341, %342
  br i1 %343, label %344, label %299

344:                                              ; preds = %329
  %345 = getelementptr inbounds i8, i8* %306, i64 4
  %346 = load i32*, i32** %297, align 8
  %347 = load i32*, i32** %284, align 8
  br label %301

348:                                              ; preds = %208
  %349 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 17
  %350 = load i8, i8* %349, align 1, !range !2
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %415, label %352

352:                                              ; preds = %348
  %353 = icmp eq i32 %71, 3
  %354 = icmp eq i32 %70, 8
  %355 = and i1 %354, %353
  %356 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  br i1 %355, label %358, label %411

358:                                              ; preds = %352
  %359 = getelementptr inbounds i8, i8* %357, i64 3
  %360 = load i32, i32* %9, align 4
  %361 = icmp sgt i32 %360, 0
  br i1 %361, label %362, label %415

362:                                              ; preds = %358
  %363 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  br label %364

364:                                              ; preds = %362, %401
  %365 = phi i64 [ 0, %362 ], [ %407, %401 ]
  %366 = mul i64 %365, 3
  %367 = and i64 %366, 4294967295
  %368 = getelementptr inbounds i8, i8* %55, i64 %367
  %369 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %363, align 8
  %370 = load i8, i8* %368, align 1
  %371 = zext i8 %370 to i32
  %372 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %369, i64 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp sgt i32 %373, %371
  %375 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %369, i64 0, i32 3
  %376 = load i32, i32* %375, align 4
  %377 = icmp slt i32 %376, %371
  %378 = or i1 %374, %377
  br i1 %378, label %401, label %379

379:                                              ; preds = %364
  %380 = getelementptr inbounds i8, i8* %368, i64 1
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i32
  %383 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %369, i64 1, i32 2
  %384 = load i32, i32* %383, align 4
  %385 = icmp sgt i32 %384, %382
  %386 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %369, i64 1, i32 3
  %387 = load i32, i32* %386, align 4
  %388 = icmp slt i32 %387, %382
  %389 = or i1 %385, %388
  br i1 %389, label %401, label %390

390:                                              ; preds = %379
  %391 = getelementptr inbounds i8, i8* %368, i64 2
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i32
  %394 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %369, i64 2, i32 2
  %395 = load i32, i32* %394, align 4
  %396 = icmp sgt i32 %395, %393
  %397 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %369, i64 2, i32 3
  %398 = load i32, i32* %397, align 4
  %399 = icmp slt i32 %398, %393
  %400 = or i1 %396, %399
  br label %401

401:                                              ; preds = %364, %379, %390
  %402 = phi i1 [ %400, %390 ], [ true, %379 ], [ true, %364 ]
  %403 = sext i1 %402 to i8
  %404 = shl i64 %365, 2
  %405 = and i64 %404, 4294967292
  %406 = getelementptr inbounds i8, i8* %359, i64 %405
  store i8 %403, i8* %406, align 1
  %407 = add nuw nsw i64 %365, 1
  %408 = load i32, i32* %9, align 4
  %409 = sext i32 %408 to i64
  %410 = icmp slt i64 %407, %409
  br i1 %410, label %364, label %415

411:                                              ; preds = %352
  %412 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 4
  %413 = load i32, i32* %412, align 4
  %414 = zext i32 %413 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %357, i8 -1, i64 %414, i1 false)
  br label %415

415:                                              ; preds = %401, %358, %348, %411
  %416 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %417 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %416, align 8
  %418 = icmp eq %class.CPDF_ColorSpace* %417, null
  br i1 %418, label %423, label %419

419:                                              ; preds = %415
  %420 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %421 = load i8*, i8** %420, align 8
  tail call void @_ZNK8CPDF_DIB22TranslateScanline24bppEPhPKh(%class.CPDF_DIB* %0, i8* %421, i8* nonnull %55)
  %422 = load i8*, i8** %420, align 8
  br label %423

423:                                              ; preds = %415, %419
  %424 = phi i8* [ %422, %419 ], [ %55, %415 ]
  %425 = load i8, i8* %349, align 1, !range !2
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %450, label %427

427:                                              ; preds = %423
  %428 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %429 = load i8*, i8** %428, align 8
  %430 = load i32, i32* %9, align 4
  %431 = icmp sgt i32 %430, 0
  br i1 %431, label %434, label %450

432:                                              ; preds = %434
  %433 = load i8*, i8** %428, align 8
  br label %450

434:                                              ; preds = %427, %434
  %435 = phi i32 [ %447, %434 ], [ 0, %427 ]
  %436 = phi i8* [ %446, %434 ], [ %429, %427 ]
  %437 = phi i8* [ %444, %434 ], [ %424, %427 ]
  %438 = getelementptr inbounds i8, i8* %437, i64 1
  %439 = load i8, i8* %437, align 1
  %440 = getelementptr inbounds i8, i8* %436, i64 1
  store i8 %439, i8* %436, align 1
  %441 = getelementptr inbounds i8, i8* %437, i64 2
  %442 = load i8, i8* %438, align 1
  %443 = getelementptr inbounds i8, i8* %436, i64 2
  store i8 %442, i8* %440, align 1
  %444 = getelementptr inbounds i8, i8* %437, i64 3
  %445 = load i8, i8* %441, align 1
  store i8 %445, i8* %443, align 1
  %446 = getelementptr inbounds i8, i8* %436, i64 4
  %447 = add nuw nsw i32 %435, 1
  %448 = load i32, i32* %9, align 4
  %449 = icmp slt i32 %447, %448
  br i1 %449, label %434, label %432

450:                                              ; preds = %427, %432, %180, %188, %6, %423, %299, %276, %141, %105, %64, %2
  %451 = phi i8* [ null, %2 ], [ null, %6 ], [ %107, %105 ], [ %144, %141 ], [ %300, %299 ], [ %278, %276 ], [ %65, %64 ], [ %424, %423 ], [ %189, %188 ], [ %187, %180 ], [ %433, %432 ], [ %429, %427 ]
  ret i8* %451
}

declare i8* @_ZN7fxcodec15ScanlineDecoder11GetScanlineEi(%"class.fxcodec::ScanlineDecoder"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8CPDF_DIB17Get1BitResetValueEv(%class.CPDF_DIB* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %2, align 8
  %4 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %3, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %9, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = load i32, i32* %9, align 4
  br label %15

15:                                               ; preds = %7, %1, %13
  %16 = phi i32 [ %14, %13 ], [ 0, %1 ], [ -16777216, %7 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8CPDF_DIB15Get1BitSetValueEv(%class.CPDF_DIB* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %2, align 8
  %4 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 0, i32 6, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %9, %11
  br i1 %12, label %23, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = ptrtoint i32* %9 to i64
  %16 = sub i64 %14, %15
  %17 = ashr exact i64 %16, 2
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %20, label %19, !prof !6

19:                                               ; preds = %13
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !69
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !70
  unreachable

20:                                               ; preds = %13
  %21 = getelementptr inbounds i32, i32* %9, i64 1
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %7, %1, %20
  %24 = phi i32 [ %22, %20 ], [ 0, %1 ], [ -1, %7 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8CPDF_DIB14SkipToScanlineEiP19PauseIndicatorIface(%class.CPDF_DIB* nocapture readonly, i32, %class.PauseIndicatorIface*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_DIB, %class.CPDF_DIB* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %5 = load %"class.fxcodec::ScanlineDecoder"*, %"class.fxcodec::ScanlineDecoder"** %4, align 8
  %6 = icmp eq %"class.fxcodec::ScanlineDecoder"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN7fxcodec15ScanlineDecoder14SkipToScanlineEiP19PauseIndicatorIface(%"class.fxcodec::ScanlineDecoder"* nonnull %5, i32 %1, %class.PauseIndicatorIface* %2) #12
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi i1 [ false, %3 ], [ %8, %7 ]
  ret i1 %10
}

declare zeroext i1 @_ZN7fxcodec15ScanlineDecoder14SkipToScanlineEiP19PauseIndicatorIface(%"class.fxcodec::ScanlineDecoder"*, i32, %class.PauseIndicatorIface*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #8

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc*, %class.CPDF_Stream*) unnamed_addr #1

declare void @_ZN7fxcodec12Jbig2ContextC1Ev(%"class.fxcodec::Jbig2Context"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7fxcodec12Jbig2ContextD1Ev(%"class.fxcodec::Jbig2Context"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13DIB_COMP_DATANS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.208"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.DIB_COMP_DATA** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.DIB_COMP_DATA** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.DIB_COMP_DATA*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %13, i64 %18, i32 0
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %struct.DIB_COMP_DATA* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.208"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.208"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %struct.DIB_COMP_DATA*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %struct.DIB_COMP_DATA* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %57, i64 %33
  %59 = bitcast %struct.DIB_COMP_DATA* %58 to i8*
  %60 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %57, i64 %56
  %61 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %struct.DIB_COMP_DATA* %60 to i64
  %64 = ptrtoint %struct.DIB_COMP_DATA* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %0, i64 0, i32 0, i32 0
  %66 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %struct.DIB_COMP_DATA* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %struct.DIB_COMP_DATA, %struct.DIB_COMP_DATA* %58, i64 %71
  %73 = ptrtoint %struct.DIB_COMP_DATA* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %struct.DIB_COMP_DATA* %72 to i8*
  %77 = bitcast %struct.DIB_COMP_DATA* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %struct.DIB_COMP_DATA* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %struct.DIB_COMP_DATA* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %struct.DIB_COMP_DATA* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7fxcodec12CJPX_DecoderD1Ev(%"class.fxcodec::CJPX_Decoder"*) unnamed_addr #2

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

declare void @_ZN15CPDF_DictionaryC1Ev(%class.CPDF_Dictionary*) unnamed_addr #1

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::RetainPtr.193"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA8_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.397"* noalias sret, %"class.fxcrt::WeakPtr"* dereferenceable(8), [8 x i8]* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call i8* @_Znwm(i64 32) #13
  %7 = bitcast i8* %6 to %class.CPDF_Name*
  %8 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %8, align 8
  %10 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9 to i64
  %11 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds [8 x i8], [8 x i8]* %2, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %19) #12
  call void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name* nonnull %7, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #12
  %20 = ptrtoint i8* %6 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.397"* %0 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %26 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  %28 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  %37 = icmp eq %"class.fxcrt::StringPoolTemplate"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %47) #12
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %43 to i8*
  call void @_ZdlPv(i8* %48) #13
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base"** %52 to i8*
  call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %54, %50
  %57 = bitcast %"class.fxcrt::StringPoolTemplate"* %36 to i8*
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %56, %34
  %59 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27 to i8*
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %17, %29, %58
  ret void
}

declare void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name*, %"class.fxcrt::WeakPtr"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA6_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.397"* noalias sret, %"class.fxcrt::WeakPtr"* dereferenceable(8), [6 x i8]* dereferenceable(6)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call i8* @_Znwm(i64 32) #13
  %7 = bitcast i8* %6 to %class.CPDF_Name*
  %8 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %8, align 8
  %10 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9 to i64
  %11 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %19) #12
  call void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name* nonnull %7, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #12
  %20 = ptrtoint i8* %6 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.397"* %0 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %26 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  %28 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  %37 = icmp eq %"class.fxcrt::StringPoolTemplate"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %47) #12
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %43 to i8*
  call void @_ZdlPv(i8* %48) #13
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base"** %52 to i8*
  call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %54, %50
  %57 = bitcast %"class.fxcrt::StringPoolTemplate"* %36 to i8*
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %56, %34
  %59 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27 to i8*
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %17, %29, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA11_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.397"* noalias sret, %"class.fxcrt::WeakPtr"* dereferenceable(8), [11 x i8]* dereferenceable(11)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call i8* @_Znwm(i64 32) #13
  %7 = bitcast i8* %6 to %class.CPDF_Name*
  %8 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %8, align 8
  %10 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9 to i64
  %11 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds [11 x i8], [11 x i8]* %2, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %19) #12
  call void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name* nonnull %7, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #12
  %20 = ptrtoint i8* %6 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.397"* %0 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %26 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  %28 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  %37 = icmp eq %"class.fxcrt::StringPoolTemplate"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %47) #12
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %43 to i8*
  call void @_ZdlPv(i8* %48) #13
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base"** %52 to i8*
  call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %54, %50
  %57 = bitcast %"class.fxcrt::StringPoolTemplate"* %36 to i8*
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %56, %34
  %59 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27 to i8*
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %17, %29, %58
  ret void
}

declare void @_ZN11CPDF_NumberC1Ei(%class.CPDF_Number*, i32) unnamed_addr #1

declare void @_ZN11CPDF_StreamC1Ev(%class.CPDF_Stream*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i32 -2143530407}
!8 = !{i32 -2143530386}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!12 = !{!"branch_weights", i32 2002, i32 2000}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6pdfium10MakeRetainI15CPDF_DictionaryJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZN6pdfium10MakeRetainI15CPDF_DictionaryJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6pdfium10MakeRetainI11CPDF_StreamJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN6pdfium10MakeRetainI11CPDF_StreamJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.isvectorized", i32 1}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !39}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !39}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !39}
!50 = distinct !{!50, !14}
!51 = distinct !{!51, !39}
!52 = distinct !{!52, !14}
!53 = distinct !{!53, !54, !39}
!54 = !{!"llvm.loop.unroll.runtime.disable"}
!55 = !{i32 -2143041337}
!56 = !{i32 -2143041316}
!57 = !{i32 -2143041872}
!58 = !{i32 -2143041851}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJRiEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!61 = distinct !{!61, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJRiEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJiEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!64 = distinct !{!64, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJiEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6pdfium10MakeRetainI8CPDF_DIBJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!67 = distinct !{!67, !"_ZN6pdfium10MakeRetainI8CPDF_DIBJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!68 = distinct !{!68, !14}
!69 = !{i32 -2143512123}
!70 = !{i32 -2143512102}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK11CFX_DIBBase14GetPaletteSpanEv: argument 0"}
!73 = distinct !{!73, !"_ZNK11CFX_DIBBase14GetPaletteSpanEv"}
