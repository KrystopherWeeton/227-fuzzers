; ModuleID = '../../base/task/cancelable_task_tracker.cc'
source_filename = "../../base/task/cancelable_task_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.28", [4 x i8] }>
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.11", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13", [4 x i8] }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.15", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.scoped_refptr.22 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.13" }>
%"class.base::TimeDelta" = type { i64 }
%"class.base::FeatureList" = type <{ %"class.base::flat_map", %"class.base::Lock", %"class.std::__1::map.41", %"class.base::FieldTrialList"*, i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair.35"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::FieldTrialList" = type opaque
%"struct.std::__1::pair.33" = type <{ %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", i8, [7 x i8] }>
%"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator" = type { %"struct.std::__1::pair"*, %"class.std::__1::__map_iterator" }
%"class.std::__1::__map_iterator" = type { %"class.std::__1::__tree_iterator" }
%"class.std::__1::__tree_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback" }
%"class.logging::CheckOpResult" = type { i8* }
%union.Storage = type { [4 x %"struct.std::__1::pair"] }

$_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE5eraseERKNSM_8iteratorE = comdat any

$_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE6insertERKSD_ = comdat any

$_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE5eraseERSC_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EElEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS2_EElEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_SB_SG_EEESF_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS4_SA_SF_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESG_EJS5_SB_SG_SG_EEESF_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESF_EJS4_SA_SF_SF_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS5_S8_EEES7_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS5_SB_SE_EEEFbvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS4_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE16ConvertToRealMapEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIlJRKNS_4pairIKlS7_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE15__insert_uniqueEONS_4pairIKlS7_EE = comdat any

@_ZN4base21CancelableTaskTracker10kBadTaskIdE = hidden local_unnamed_addr constant i64 0, align 8
@.str = private unnamed_addr constant [43 x i8] c"../../base/task/cancelable_task_tracker.cc\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"weak_this_\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"Scheduler.CancelableTaskTracker.TaskStatus\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"RunOrPostToTaskRunner\00", align 1
@_ZN4base12_GLOBAL__N_132kAllowOffSequenceTaskCancelationE = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i32 0, i32 0), i32 1 }, align 8
@.str.4 = private unnamed_addr constant [32 x i8] c"AllowOffSequenceTaskCancelation\00", align 1
@_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms = internal unnamed_addr global [8 x %"class.base::HistogramBase"*] zeroinitializer, align 16
@_ZGVZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [72 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_LiveForegroundOffSequence\00", align 1
@.str.6 = private unnamed_addr constant [73 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_LiveForegroundSameSequence\00", align 1
@.str.7 = private unnamed_addr constant [72 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_LiveBackgroundOffSequence\00", align 1
@.str.8 = private unnamed_addr constant [73 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_LiveBackgroundSameSequence\00", align 1
@.str.9 = private unnamed_addr constant [76 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_CanceledForegroundOffSequence\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_CanceledForegroundSameSequence\00", align 1
@.str.11 = private unnamed_addr constant [76 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_CanceledBackgroundOffSequence\00", align 1
@.str.12 = private unnamed_addr constant [77 x i8] c"Scheduler.CancelableTaskTracker.TaskDuration2_CanceledBackgroundSameSequence\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"../../base/containers/small_map.h\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i <= size_\00", align 1
@_ZZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN4base21CancelableTaskTrackerC1Ev = hidden unnamed_addr alias void (%"class.base::CancelableTaskTracker"*), void (%"class.base::CancelableTaskTracker"*)* @_ZN4base21CancelableTaskTrackerC2Ev
@_ZN4base21CancelableTaskTrackerD1Ev = hidden unnamed_addr alias void (%"class.base::CancelableTaskTracker"*), void (%"class.base::CancelableTaskTracker"*)* @_ZN4base21CancelableTaskTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTrackerC2Ev(%"class.base::CancelableTaskTracker"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 1
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %7) #8
  %8 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %8, i64 0, i32 0
  %10 = ptrtoint %"class.base::CancelableTaskTracker"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %9, i64 %10) #8
  %11 = bitcast %"class.base::WeakPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8, !noalias !2
  %13 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %8, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %13) #8, !noalias !2
  %14 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !2
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %16, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %15) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8, !noalias !2
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::WeakPtr"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %17, align 8
  %20 = bitcast %"class.base::WeakPtr"* %6 to i64*
  %21 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.base::internal::WeakReference::Flag"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %22) #8
  %29 = bitcast %"class.base::internal::WeakReference::Flag"* %22 to i8*
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %1, %24, %28
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 1
  store i64 %32, i64* %33, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTrackerD2Ev(%"class.base::CancelableTaskTracker"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base21CancelableTaskTracker12TryCancelAllEv(%"class.base::CancelableTaskTracker"* %0)
  %2 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #8
  %3 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #8
  %4 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  switch i64 %5, label %12 [
    i64 -1, label %6
    i64 0, label %30
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2
  %8 = bitcast %union.anon* %7 to %"class.std::__1::__tree"*
  %9 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 0, i32 1
  %10 = bitcast %class.scoped_refptr* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %8, %"class.std::__1::__tree_node"* %11) #8
  br label %30

12:                                               ; preds = %1, %26
  %13 = phi i64 [ %27, %26 ], [ 0, %1 ]
  %14 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 %13, i32 1, i32 0
  %15 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %14, align 8
  %16 = icmp eq %"class.base::RefCountedData"* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %15, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 1
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %24) #8
  %25 = bitcast %"class.base::RefCountedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %25) #9
  br label %26

26:                                               ; preds = %21, %17, %12
  %27 = add nuw i64 %13, 1
  %28 = load i64, i64* %4, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %12, label %30

30:                                               ; preds = %26, %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTracker12TryCancelAllEv(%"class.base::CancelableTaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  %5 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2
  br i1 %4, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %union.anon* %5 to %"class.std::__1::__tree_end_node"**
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  br label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %union.anon, %union.anon* %5, i64 0, i32 0, i64 0
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi %"struct.std::__1::pair"* [ null, %6 ], [ %10, %9 ]
  %13 = phi %"class.std::__1::__tree_end_node"* [ %8, %6 ], [ null, %9 ]
  %14 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 0, i32 1
  %15 = ptrtoint %class.scoped_refptr* %14 to i64
  %16 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 %3
  %17 = select i1 %4, %"struct.std::__1::pair"* null, %"struct.std::__1::pair"* %16
  %18 = select i1 %4, i64 %15, i64 0
  %19 = inttoptr i64 %18 to %"class.std::__1::__tree_end_node"*
  %20 = icmp eq %"struct.std::__1::pair"* %17, null
  br label %21

21:                                               ; preds = %85, %11
  %22 = phi %"class.std::__1::__tree_end_node"* [ %13, %11 ], [ %86, %85 ]
  %23 = phi %"struct.std::__1::pair"* [ %12, %11 ], [ %87, %85 ]
  br label %24

24:                                               ; preds = %21, %57
  %25 = phi %"struct.std::__1::pair"* [ %61, %57 ], [ %23, %21 ]
  %26 = icmp eq %"struct.std::__1::pair"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = icmp eq %"struct.std::__1::pair"* %25, %17
  br i1 %28, label %32, label %57

29:                                               ; preds = %24
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %22, %19
  %31 = and i1 %20, %30
  br i1 %31, label %32, label %62

32:                                               ; preds = %29, %27
  %33 = load i64, i64* %2, align 8
  switch i64 %33, label %38 [
    i64 -1, label %34
    i64 0, label %56
  ]

34:                                               ; preds = %32
  %35 = bitcast %union.anon* %5 to %"class.std::__1::__tree"*
  %36 = bitcast %class.scoped_refptr* %14 to %"class.std::__1::__tree_node"**
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %36, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %35, %"class.std::__1::__tree_node"* %37) #8
  br label %56

38:                                               ; preds = %32, %52
  %39 = phi i64 [ %53, %52 ], [ 0, %32 ]
  %40 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 %39, i32 1, i32 0
  %41 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %40, align 8
  %42 = icmp eq %"class.base::RefCountedData"* %41, null
  br i1 %42, label %52, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %41, i64 0, i32 0
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %48, i64 1
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %49 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %50) #8
  %51 = bitcast %"class.base::RefCountedData"* %41 to i8*
  tail call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %47, %43, %38
  %53 = add nuw i64 %39, 1
  %54 = load i64, i64* %2, align 8
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %38, label %56

56:                                               ; preds = %52, %32, %34
  store i64 0, i64* %2, align 8
  ret void

57:                                               ; preds = %27
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0
  %59 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %58, align 8
  %60 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %59, i64 0, i32 1
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %60) #8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  br label %24

62:                                               ; preds = %29
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 5
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.base::RefCountedData"**
  %65 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %64, align 8
  %66 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %65, i64 0, i32 1
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %66) #8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %70, label %78

70:                                               ; preds = %62
  %71 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_end_node"**
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, %71
  br i1 %77, label %85, label %88

78:                                               ; preds = %62, %78
  %79 = phi %"class.std::__1::__tree_node_base"* [ %81, %78 ], [ %68, %62 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %83, label %78

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %79, i64 0, i32 0
  br label %85

85:                                               ; preds = %88, %83, %70
  %86 = phi %"class.std::__1::__tree_end_node"* [ %74, %70 ], [ %84, %83 ], [ %93, %88 ]
  %87 = phi %"struct.std::__1::pair"* [ null, %70 ], [ %25, %83 ], [ %25, %88 ]
  br label %21

88:                                               ; preds = %70, %88
  %89 = phi %"class.std::__1::__tree_end_node"** [ %92, %88 ], [ %73, %70 ]
  %90 = bitcast %"class.std::__1::__tree_end_node"** %89 to %"class.std::__1::__tree_node_base"**
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %91, i64 0, i32 2
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, %91
  br i1 %96, label %85, label %88
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base21CancelableTaskTracker8PostTaskEPNS_10TaskRunnerERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::CancelableTaskTracker"*, %"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #8
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.base::CancelableTaskTracker"**
  %13 = load %"class.base::CancelableTaskTracker"*, %"class.base::CancelableTaskTracker"** %12, align 8
  %14 = icmp eq %"class.base::CancelableTaskTracker"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %10, %4
  %16 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 100, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #8
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %18

18:                                               ; preds = %10, %15
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = call i8* @_Znwm(i64 40) #9, !noalias !5
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !5
  %25 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !5
  %26 = call i64 @_ZN4base21CancelableTaskTracker16PostTaskAndReplyEPNS_10TaskRunnerERKNS_8LocationENS_12OnceCallbackIFvvEEES8_(%"class.base::CancelableTaskTracker"* %0, %"class.base::TaskRunner"* %1, %"class.base::Location"* dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %6, %"class.base::OnceCallback"* nonnull %7)
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #8
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #8
  ret i64 %26
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base21CancelableTaskTracker16PostTaskAndReplyEPNS_10TaskRunnerERKNS_8LocationENS_12OnceCallbackIFvvEEES8_(%"class.base::CancelableTaskTracker"*, %"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #8
  br i1 %11, label %12, label %17

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.base::CancelableTaskTracker"**
  %15 = load %"class.base::CancelableTaskTracker"*, %"class.base::CancelableTaskTracker"** %14, align 8
  %16 = icmp eq %"class.base::CancelableTaskTracker"* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %12, %5
  %18 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 111, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %12, %17
  %21 = call i8* @_Znwm(i64 8) #9
  %22 = bitcast i8* %21 to %"class.base::RefCountedData"*
  %23 = bitcast i8* %21 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %21, i64 4
  %25 = bitcast i8* %24 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"* %25) #8
  %26 = atomicrmw add i32* %23, i32 1 monotonic
  %27 = ptrtoint i8* %21 to i64
  %28 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.base::CancelableTaskTracker"* %0 to i64
  %34 = call i8* @_Znwm(i64 64) #9, !noalias !14
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EElEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS2_EElEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !14
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::CancelableTaskTracker"*, i64)* @_ZN4base21CancelableTaskTracker7UntrackEl to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !14
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to i64*
  store i64 %33, i64* %39, align 8, !noalias !14
  %40 = getelementptr inbounds i8, i8* %34, i64 56
  %41 = bitcast i8* %40 to i64*
  store i64 %29, i64* %41, align 8, !noalias !14
  %42 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %34, i8** %42, align 8, !alias.scope !14
  %43 = call dereferenceable(8) %class.scoped_refptr.22* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %44 = call i8* @_Znwm(i64 64) #9, !noalias !19
  %45 = bitcast i8* %44 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %45, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_SB_SG_EEESF_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS4_SA_SF_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !19
  %46 = getelementptr inbounds i8, i8* %44, i64 32
  %47 = bitcast i8* %46 to i64*
  store i64 ptrtoint (void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*)* @_ZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEE to i64), i64* %47, align 8, !noalias !19
  %48 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %43, i64 0, i32 0
  %49 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %48, align 8, !noalias !19
  %50 = getelementptr inbounds i8, i8* %44, i64 40
  %51 = bitcast i8* %50 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %49, %"class.base::SequencedTaskRunner"** %51, align 8, !noalias !19
  %52 = icmp eq %"class.base::SequencedTaskRunner"* %49, null
  %53 = ptrtoint i8* %34 to i64
  br i1 %52, label %57, label %54

54:                                               ; preds = %20
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %49, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic, !noalias !19
  br label %57

57:                                               ; preds = %54, %20
  %58 = getelementptr inbounds i8, i8* %44, i64 48
  %59 = bitcast i8* %58 to i8**
  store i8* %21, i8** %59, align 8, !noalias !19
  %60 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !19
  %61 = getelementptr inbounds i8, i8* %44, i64 56
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !19
  %65 = bitcast i8* %61 to i64*
  store i64 %64, i64* %65, align 8, !noalias !19
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %62, align 8, !noalias !19
  %66 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %44, i8** %66, align 8, !alias.scope !19
  %67 = call dereferenceable(8) %class.scoped_refptr.22* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %68 = call i8* @_Znwm(i64 72) #9, !noalias !24
  %69 = bitcast i8* %68 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %69, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESG_EJS5_SB_SG_SG_EEESF_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESF_EJS4_SA_SF_SF_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !24
  %70 = getelementptr inbounds i8, i8* %68, i64 32
  %71 = bitcast i8* %70 to i64*
  store i64 ptrtoint (void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)* @_ZN4base21CancelableTaskTracker27RunThenUntrackIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESE_ to i64), i64* %71, align 8, !noalias !24
  %72 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %67, i64 0, i32 0
  %73 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %72, align 8, !noalias !24
  %74 = getelementptr inbounds i8, i8* %68, i64 40
  %75 = bitcast i8* %74 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %73, %"class.base::SequencedTaskRunner"** %75, align 8, !noalias !24
  %76 = icmp eq %"class.base::SequencedTaskRunner"* %73, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %57
  %78 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %73, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 1 monotonic, !noalias !24
  br label %80

80:                                               ; preds = %77, %57
  %81 = getelementptr inbounds i8, i8* %68, i64 48
  %82 = bitcast i8* %81 to i8**
  store i8* %21, i8** %82, align 8, !noalias !24
  %83 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !24
  %84 = getelementptr inbounds i8, i8* %68, i64 56
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %87 = load i64, i64* %86, align 8, !noalias !24
  %88 = bitcast i8* %84 to i64*
  store i64 %87, i64* %88, align 8, !noalias !24
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8, !noalias !24
  %89 = getelementptr inbounds i8, i8* %68, i64 64
  %90 = bitcast i8* %89 to i64*
  store i64 %53, i64* %90, align 8, !noalias !24
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8, !noalias !24
  %91 = bitcast %"class.base::OnceCallback"* %9 to i8**
  store i8* %68, i8** %91, align 8, !alias.scope !24
  %92 = call zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"* %1, %"class.base::Location"* dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %8, %"class.base::OnceCallback"* nonnull %9) #8
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %93) #8
  %94 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %94) #8
  br i1 %92, label %95, label %96

95:                                               ; preds = %80
  call void @_ZN4base21CancelableTaskTracker5TrackEl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEE(%"class.base::CancelableTaskTracker"* %0, i64 %29, %"class.base::RefCountedData"* nonnull %22)
  br label %96

96:                                               ; preds = %80, %95
  %97 = phi i64 [ 0, %95 ], [ %27, %80 ]
  %98 = phi i64 [ %29, %95 ], [ 0, %80 ]
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %100 = inttoptr i64 %97 to %"class.base::RefCountedData"*
  %101 = icmp eq i64 %97, 0
  br i1 %101, label %111, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %111

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %100, i64 0, i32 0
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %107, i64 1
  %109 = bitcast %"class.base::RefCountedThreadSafe"* %108 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %109) #8
  %110 = inttoptr i64 %97 to i8*
  call void @_ZdlPv(i8* %110) #9
  br label %111

111:                                              ; preds = %96, %102, %106
  ret i64 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTracker7UntrackEl(%"class.base::CancelableTaskTracker"*, i64) #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  store i64 %1, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i64* %8 to %"class.base::CancelableTaskTracker"**
  %10 = load %"class.base::CancelableTaskTracker"*, %"class.base::CancelableTaskTracker"** %9, align 8
  %11 = icmp eq %"class.base::CancelableTaskTracker"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %7, %2
  %13 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 269, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #8
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  br label %15

15:                                               ; preds = %7, %12
  %16 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0
  %17 = call i64 @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE5eraseERSC_(%"class.base::small_map"* %16, i64* nonnull dereferenceable(8) %3)
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEE(%class.scoped_refptr.22* nocapture readonly dereferenceable(8), %class.scoped_refptr* nocapture readonly dereferenceable(8), %"class.base::OnceCallback"* nocapture) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %7 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %6, align 8
  %8 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i8, i8* %8 acquire, align 1
  %10 = icmp ne i8 %9, 0
  %11 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %0, i64 0, i32 0
  %12 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %11, align 8
  %13 = bitcast %"class.base::SequencedTaskRunner"* %12 to i1 (%"class.base::SequencedTaskRunner"*)***
  %14 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %14, i64 5
  %16 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.base::SequencedTaskRunner"* %12) #8
  %18 = select i1 %17, i32 2, i32 3
  %19 = xor i1 %17, true
  %20 = zext i1 %19 to i32
  %21 = select i1 %10, i32 %18, i32 %20
  %22 = load atomic i64, i64* @_ZZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %23 = inttoptr i64 %22 to %"class.base::HistogramBase"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %3
  %26 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #8
  %27 = ptrtoint %"class.base::HistogramBase"* %26 to i64
  store atomic i64 %27, i64* @_ZZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %28

28:                                               ; preds = %3, %25
  %29 = phi %"class.base::HistogramBase"* [ %23, %3 ], [ %26, %25 ]
  %30 = bitcast %"class.base::HistogramBase"* %29 to void (%"class.base::HistogramBase"*, i32)***
  %31 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, i64 6
  %33 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %32, align 8
  tail call void %33(%"class.base::HistogramBase"* %29, i32 %21) #8
  br i1 %10, label %34, label %40

34:                                               ; preds = %28
  %35 = tail call %"class.base::FeatureList"* @_ZN4base11FeatureList11GetInstanceEv() #8
  %36 = icmp eq %"class.base::FeatureList"* %35, null
  br i1 %36, label %80, label %37

37:                                               ; preds = %34
  %38 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base12_GLOBAL__N_132kAllowOffSequenceTaskCancelationE) #8
  %39 = or i1 %17, %38
  br i1 %39, label %80, label %40

40:                                               ; preds = %28, %37
  %41 = tail call i64 @_ZN4base9TimeTicks3NowEv() #8
  %42 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %45, i64* %46, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %48 = inttoptr i64 %45 to %"class.base::internal::BindStateBase"*
  %49 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %48, i64 0, i32 1
  %50 = bitcast void ()** %49 to void (%"class.base::internal::BindStateBase"*)**
  %51 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %50, align 8
  tail call void %51(%"class.base::internal::BindStateBase"* %48) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  %52 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %53 = sub nsw i64 %52, %41
  %54 = call zeroext i8 @_ZN4base8internal31GetTaskPriorityForCurrentThreadEv() #8
  %55 = icmp eq i8 %54, 0
  %56 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  %57 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %53, i64* %57, align 8
  %58 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms to i8*) acquire, align 8
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %72, !prof !29

60:                                               ; preds = %40
  %61 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms) #8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %60
  %64 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %64, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 0), align 16
  %65 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.6, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %65, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 1), align 8
  %66 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.7, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %66, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 2), align 16
  %67 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.8, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %67, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 3), align 8
  %68 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.9, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %68, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 4), align 16
  %69 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %69, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 5), align 8
  %70 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.11, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %70, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 6), align 16
  %71 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.12, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  store %"class.base::HistogramBase"* %71, %"class.base::HistogramBase"** getelementptr inbounds ([8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 7), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms) #8
  br label %72

72:                                               ; preds = %40, %60, %63
  %73 = zext i1 %17 to i64
  %74 = select i1 %55, i64 2, i64 0
  %75 = select i1 %10, i64 4, i64 0
  %76 = or i64 %75, %73
  %77 = or i64 %76, %74
  %78 = getelementptr inbounds [8 x %"class.base::HistogramBase"*], [8 x %"class.base::HistogramBase"*]* @_ZZN4base12_GLOBAL__N_121UmaRecordTaskDurationEbbbNS_9TimeDeltaEE10histograms, i64 0, i64 %77
  %79 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %78, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %79, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  br label %80

80:                                               ; preds = %34, %37, %72
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.22* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTracker27RunThenUntrackIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESE_(%class.scoped_refptr.22* nocapture readonly dereferenceable(8), %class.scoped_refptr* nocapture readonly dereferenceable(8), %"class.base::OnceCallback"* nocapture, %"class.base::OnceCallback"* nocapture) #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  call void @_ZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEE(%class.scoped_refptr.22* dereferenceable(8) %0, %class.scoped_refptr* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %5)
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #8
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  call void @_ZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEE(%class.scoped_refptr.22* dereferenceable(8) %0, %class.scoped_refptr* dereferenceable(8) %1, %"class.base::OnceCallback"* nonnull %6)
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTracker5TrackEl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEE(%"class.base::CancelableTaskTracker"*, i64, %"class.base::RefCountedData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"struct.std::__1::pair.33", align 8
  %6 = alloca %"struct.std::__1::pair", align 8
  %7 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #8
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = bitcast i64* %10 to %"class.base::CancelableTaskTracker"**
  %12 = load %"class.base::CancelableTaskTracker"*, %"class.base::CancelableTaskTracker"** %11, align 8
  %13 = icmp eq %"class.base::CancelableTaskTracker"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %9, %3
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 262, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #8
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  br label %17

17:                                               ; preds = %9, %14
  %18 = bitcast %"struct.std::__1::pair.33"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0
  %20 = bitcast %"struct.std::__1::pair"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = ptrtoint %"class.base::RefCountedData"* %2 to i64
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 0
  store i64 %1, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1
  %24 = bitcast %class.scoped_refptr* %23 to i64*
  store i64 %21, i64* %24, align 8
  call void @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE6insertERKSD_(%"struct.std::__1::pair.33"* nonnull sret %5, %"class.base::small_map"* %19, %"struct.std::__1::pair"* nonnull dereferenceable(16) %6)
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 0, i32 1, i32 0
  %26 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %25, align 8
  %27 = icmp eq %"class.base::RefCountedData"* %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %26, i64 0, i32 0
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %33, i64 1
  %35 = bitcast %"class.base::RefCountedThreadSafe"* %34 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %35) #8
  %36 = bitcast %"class.base::RefCountedData"* %26 to i8*
  call void @_ZdlPv(i8* %36) #9
  br label %37

37:                                               ; preds = %17, %28, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base21CancelableTaskTracker16NewTrackedTaskIdEPNS_17RepeatingCallbackIFbvEEE(%"class.base::CancelableTaskTracker"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::ScopedClosureRunner", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %8, align 8
  %11 = tail call i8* @_Znwm(i64 8) #9
  %12 = bitcast i8* %11 to %"class.base::RefCountedData"*
  %13 = bitcast i8* %11 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %11, i64 4
  %15 = bitcast i8* %14 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"* %15) #8
  %16 = atomicrmw add i32* %13, i32 1 monotonic
  %17 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = ptrtoint %"class.base::CancelableTaskTracker"* %0 to i64
  %20 = tail call i8* @_Znwm(i64 64) #9, !noalias !30
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EElEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS2_EElEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !30
  %22 = getelementptr inbounds i8, i8* %20, i64 32
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::CancelableTaskTracker"*, i64)* @_ZN4base21CancelableTaskTracker7UntrackEl to i64), i64 0>, <2 x i64>* %23, align 8, !noalias !30
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 8, !noalias !30
  %26 = getelementptr inbounds i8, i8* %20, i64 56
  %27 = bitcast i8* %26 to i64*
  store i64 %9, i64* %27, align 8, !noalias !30
  %28 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %20, i8** %28, align 8, !alias.scope !30
  %29 = bitcast %"class.base::ScopedClosureRunner"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.base::ScopedClosureRunner", %"class.base::ScopedClosureRunner"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %30, align 8
  %31 = tail call dereferenceable(8) %class.scoped_refptr.22* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %32 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = tail call dereferenceable(8) %class.scoped_refptr.22* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %34 = tail call i8* @_Znwm(i64 64) #9, !noalias !35
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_SB_SG_EEESF_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS4_SA_SF_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !35
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to i64*
  store i64 ptrtoint (void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*)* @_ZN4base21CancelableTaskTracker16RunIfNotCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEE to i64), i64* %37, align 8, !noalias !35
  %38 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %33, i64 0, i32 0
  %39 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %38, align 8, !noalias !35
  %40 = getelementptr inbounds i8, i8* %34, i64 40
  %41 = bitcast i8* %40 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %39, %"class.base::SequencedTaskRunner"** %41, align 8, !noalias !35
  %42 = icmp eq %"class.base::SequencedTaskRunner"* %39, null
  %43 = ptrtoint i8* %20 to i64
  br i1 %42, label %47, label %44

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %39, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic, !noalias !35
  br label %47

47:                                               ; preds = %44, %2
  %48 = getelementptr inbounds i8, i8* %34, i64 48
  %49 = bitcast i8* %48 to i8**
  store i8* %11, i8** %49, align 8, !noalias !35
  %50 = atomicrmw add i32* %13, i32 1 monotonic, !noalias !35
  %51 = getelementptr inbounds i8, i8* %34, i64 56
  %52 = bitcast i8* %51 to i64*
  store i64 %43, i64* %52, align 8, !noalias !35
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8, !noalias !35
  %53 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %34, i8** %53, align 8, !alias.scope !35
  %54 = tail call i8* @_Znwm(i64 56) #9, !noalias !40
  %55 = bitcast i8* %54 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %55, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS5_S8_EEES7_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !40
  %56 = getelementptr inbounds i8, i8* %54, i64 32
  %57 = bitcast i8* %56 to i64*
  store i64 ptrtoint (void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)* @_ZN4base12_GLOBAL__N_121RunOrPostToTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEE to i64), i64* %57, align 8, !noalias !40
  %58 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %31, i64 0, i32 0
  %59 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %58, align 8, !noalias !40
  %60 = getelementptr inbounds i8, i8* %54, i64 40
  %61 = bitcast i8* %60 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %59, %"class.base::SequencedTaskRunner"** %61, align 8, !noalias !40
  %62 = icmp eq %"class.base::SequencedTaskRunner"* %59, null
  %63 = ptrtoint i8* %34 to i64
  br i1 %62, label %67, label %64

64:                                               ; preds = %47
  %65 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %59, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 1 monotonic, !noalias !40
  br label %67

67:                                               ; preds = %47, %64
  %68 = getelementptr inbounds i8, i8* %54, i64 48
  %69 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast i8* %68 to i64*
  store i64 %63, i64* %70, align 8, !noalias !40
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %69, align 8, !noalias !40
  %71 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %54, i8** %71, align 8, !alias.scope !40
  call void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #8
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #8
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %74 = bitcast %"class.base::RepeatingCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  %75 = call dereferenceable(8) %class.scoped_refptr.22* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %76 = call i8* @_Znwm(i64 64) #9, !noalias !45
  %77 = bitcast i8* %76 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %77, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS5_SB_SE_EEEFbvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS4_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !45
  %78 = getelementptr inbounds i8, i8* %76, i64 32
  %79 = bitcast i8* %78 to i64*
  store i64 ptrtoint (i1 (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::ScopedClosureRunner"*)* @_ZN4base21CancelableTaskTracker10IsCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerE to i64), i64* %79, align 8, !noalias !45
  %80 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %75, i64 0, i32 0
  %81 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %80, align 8, !noalias !45
  %82 = getelementptr inbounds i8, i8* %76, i64 40
  %83 = bitcast i8* %82 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %81, %"class.base::SequencedTaskRunner"** %83, align 8, !noalias !45
  %84 = icmp eq %"class.base::SequencedTaskRunner"* %81, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %67
  %86 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %81, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 1 monotonic, !noalias !45
  br label %88

88:                                               ; preds = %67, %85
  %89 = getelementptr inbounds i8, i8* %76, i64 48
  %90 = bitcast i8* %89 to i8**
  store i8* %11, i8** %90, align 8, !noalias !45
  %91 = atomicrmw add i32* %13, i32 1 monotonic, !noalias !45
  %92 = getelementptr inbounds i8, i8* %76, i64 56
  %93 = bitcast i8* %92 to %"class.base::ScopedClosureRunner"*
  call void @_ZN4base19ScopedClosureRunnerC1EOS0_(%"class.base::ScopedClosureRunner"* %93, %"class.base::ScopedClosureRunner"* nonnull dereferenceable(8) %4) #8, !noalias !45
  %94 = bitcast %"class.base::RepeatingCallback"* %7 to i8**
  store i8* %76, i8** %94, align 8, !alias.scope !45
  %95 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %96 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %97 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %95, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %96) #8
  %98 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  call void @_ZN4base21CancelableTaskTracker5TrackEl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEE(%"class.base::CancelableTaskTracker"* %0, i64 %9, %"class.base::RefCountedData"* nonnull %12)
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_121RunOrPostToTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEE(%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"* nocapture) #0 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.base::SequencedTaskRunner"* %0 to i1 (%"class.base::SequencedTaskRunner"*)***
  %7 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %7, i64 5
  %9 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.base::SequencedTaskRunner"* %0) #8
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %18 = inttoptr i64 %15 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*)**
  %21 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %20, align 8
  tail call void %21(%"class.base::internal::BindStateBase"* %18) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %31

22:                                               ; preds = %2
  %23 = bitcast %"class.base::SequencedTaskRunner"* %0 to %"class.base::TaskRunner"*
  %24 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 31) #8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %23, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #8
  br label %31

31:                                               ; preds = %22, %11
  %32 = icmp eq %"class.base::SequencedTaskRunner"* %0, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %0, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe.13"* %39 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %40) #8
  br label %41

41:                                               ; preds = %31, %33, %38
  ret void
}

declare void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"*, %"class.base::OnceCallback"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base21CancelableTaskTracker10IsCanceledERK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerE(%class.scoped_refptr.22* nocapture readonly dereferenceable(8), %class.scoped_refptr* nocapture readonly dereferenceable(8), %"class.base::ScopedClosureRunner"* nocapture readnone dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %5 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %4, align 8
  %6 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i8, i8* %6 acquire, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = tail call %"class.base::FeatureList"* @_ZN4base11FeatureList11GetInstanceEv() #8
  %11 = icmp eq %"class.base::FeatureList"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base12_GLOBAL__N_132kAllowOffSequenceTaskCancelationE) #8
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %class.scoped_refptr.22, %class.scoped_refptr.22* %0, i64 0, i32 0
  %16 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %15, align 8
  %17 = bitcast %"class.base::SequencedTaskRunner"* %16 to i1 (%"class.base::SequencedTaskRunner"*)***
  %18 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %18, i64 5
  %20 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.base::SequencedTaskRunner"* %16) #8
  br label %22

22:                                               ; preds = %3, %9, %12, %14
  %23 = phi i1 [ false, %3 ], [ true, %12 ], [ %21, %14 ], [ true, %9 ]
  ret i1 %23
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base21CancelableTaskTracker9TryCancelEl(%"class.base::CancelableTaskTracker"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", align 8
  %4 = bitcast %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i64, i64* %8, align 8
  switch i64 %10, label %39 [
    i64 -1, label %11
    i64 0, label %52
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 0, i32 1
  %13 = bitcast %class.scoped_refptr* %12 to %"class.std::__1::__tree_end_node"*
  %14 = bitcast %class.scoped_refptr* %12 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node"* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %11, %17
  %18 = phi %"class.std::__1::__tree_end_node"* [ %28, %17 ], [ %13, %11 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %29, %17 ], [ %15, %11 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %21, %1
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tree_node_base"** %23 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node"**
  %27 = select i1 %22, %"class.std::__1::__tree_node"** %24, %"class.std::__1::__tree_node"** %26
  %28 = select i1 %22, %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"* %25
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = icmp eq %"class.std::__1::__tree_end_node"* %28, %13
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 4
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp sgt i64 %36, %1
  br i1 %37, label %38, label %47

38:                                               ; preds = %33, %31, %11
  br label %47

39:                                               ; preds = %2, %44
  %40 = phi i64 [ %45, %44 ], [ 0, %2 ]
  %41 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 %40, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %1
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = add nuw i64 %40, 1
  %46 = icmp eq i64 %45, %10
  br i1 %46, label %52, label %39

47:                                               ; preds = %33, %38
  %48 = phi %"class.std::__1::__tree_end_node"* [ %13, %38 ], [ %28, %33 ]
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %5, align 8
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %6, align 8
  %49 = icmp eq i64 %10, -1
  %50 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 %10
  %51 = select i1 %49, %"struct.std::__1::pair"* null, %"struct.std::__1::pair"* %50
  br label %61

52:                                               ; preds = %44, %39, %2
  %53 = phi i64 [ %10, %2 ], [ %10, %44 ], [ %40, %39 ]
  %54 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 %53
  store %"struct.std::__1::pair"* %54, %"struct.std::__1::pair"** %5, align 8
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %6, align 8
  %55 = icmp eq i64 %10, -1
  %56 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 %10
  %57 = select i1 %55, %"struct.std::__1::pair"* null, %"struct.std::__1::pair"* %56
  %58 = icmp eq %"struct.std::__1::pair"* %54, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  %60 = icmp eq %"struct.std::__1::pair"* %54, %57
  br i1 %60, label %80, label %74

61:                                               ; preds = %47, %52
  %62 = phi %"struct.std::__1::pair"* [ %51, %47 ], [ %57, %52 ]
  %63 = phi i1 [ %49, %47 ], [ %55, %52 ]
  %64 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ null, %52 ]
  %65 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 0, i32 1
  %66 = bitcast %class.scoped_refptr* %65 to %"class.std::__1::__tree_end_node"*
  %67 = select i1 %63, %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"* null
  %68 = icmp eq %"struct.std::__1::pair"* %62, null
  %69 = icmp eq %"class.std::__1::__tree_end_node"* %64, %67
  %70 = and i1 %68, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 4
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"struct.std::__1::pair"*
  br label %74

74:                                               ; preds = %59, %71
  %75 = phi %"struct.std::__1::pair"* [ %73, %71 ], [ %54, %59 ]
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 0, i32 1, i32 0
  %77 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %76, align 8
  %78 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %77, i64 0, i32 1
  tail call void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"* %78) #8
  %79 = call { %"struct.std::__1::pair"*, %"class.std::__1::__tree_end_node"* } @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE5eraseERKNSM_8iteratorE(%"class.base::small_map"* %7, %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* nonnull dereferenceable(16) %3)
  br label %80

80:                                               ; preds = %61, %59, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

declare void @_ZN4base10AtomicFlag3SetEv(%"class.base::AtomicFlag"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, %"class.std::__1::__tree_end_node"* } @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE5eraseERKNSM_8iteratorE(%"class.base::small_map"*, %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = bitcast %union.anon* %10 to %"class.std::__1::__tree"*
  %14 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE(%"class.std::__1::__tree"* %13, %"class.std::__1::__tree_end_node"* %12) #8
  %15 = ptrtoint %"class.std::__1::__tree_end_node"* %14 to i64
  br label %82

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %1, i64 0, i32 0
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0
  %20 = ptrtoint %"struct.std::__1::pair"* %18 to i64
  %21 = ptrtoint [4 x %"struct.std::__1::pair"]* %19 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 4
  %24 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ugt i64 %23, %7
  br i1 %27, label %29, label %28

28:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %16
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %23) #8
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 496, %"class.logging::CheckOpResult"* nonnull %4) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %23, i32 1, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw sub i32* %43, i32 1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %51

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %47, i64 1
  %49 = bitcast %"class.base::RefCountedThreadSafe"* %48 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %49) #8
  %50 = bitcast %"class.base::RefCountedData"* %40 to i8*
  call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %38, %42, %46
  %52 = load i64, i64* %6, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %6, align 8
  %54 = icmp eq i64 %23, %53
  br i1 %54, label %75, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %23, i32 0
  %57 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %53, i32 0
  %58 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %53, i32 1, i32 0
  %59 = bitcast i64* %57 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = bitcast i64* %56 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %61, align 8
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %58, align 8
  %62 = load i64, i64* %6, align 8
  %63 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %62, i32 1, i32 0
  %64 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %63, align 8
  %65 = icmp eq %"class.base::RefCountedData"* %64, null
  br i1 %65, label %82, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw sub i32* %67, i32 1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %82

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %64, i64 0, i32 0
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %71, i64 1
  %73 = bitcast %"class.base::RefCountedThreadSafe"* %72 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %73) #8
  %74 = bitcast %"class.base::RefCountedData"* %64 to i8*
  call void @_ZdlPv(i8* %74) #9
  br label %82

75:                                               ; preds = %51
  %76 = icmp eq i64 %52, 0
  %77 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 0, i32 1
  %78 = ptrtoint %class.scoped_refptr* %77 to i64
  %79 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %23
  %80 = select i1 %76, %"struct.std::__1::pair"* null, %"struct.std::__1::pair"* %79
  %81 = select i1 %76, i64 %78, i64 0
  br label %82

82:                                               ; preds = %70, %66, %55, %75, %9
  %83 = phi %"struct.std::__1::pair"* [ null, %9 ], [ %80, %75 ], [ %18, %55 ], [ %18, %66 ], [ %18, %70 ]
  %84 = phi i64 [ %15, %9 ], [ %81, %75 ], [ 0, %55 ], [ 0, %66 ], [ 0, %70 ]
  %85 = insertvalue { %"struct.std::__1::pair"*, %"class.std::__1::__tree_end_node"* } undef, %"struct.std::__1::pair"* %83, 0
  %86 = inttoptr i64 %84 to %"class.std::__1::__tree_end_node"*
  %87 = insertvalue { %"struct.std::__1::pair"*, %"class.std::__1::__tree_end_node"* } %85, %"class.std::__1::__tree_end_node"* %86, 1
  ret { %"struct.std::__1::pair"*, %"class.std::__1::__tree_end_node"* } %87
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base21CancelableTaskTracker15HasTrackedTasksEv(%"class.base::CancelableTaskTracker"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::CancelableTaskTracker", %"class.base::CancelableTaskTracker"* %0, i64 0, i32 0, i32 2, i32 0, i64 1, i32 0
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ %3, %1 ]
  %10 = icmp ne i64 %9, 0
  ret i1 %10
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

declare zeroext i8 @_ZN4base8internal31GetTaskPriorityForCurrentThreadEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE6insertERKSD_(%"struct.std::__1::pair.33"* noalias sret, %"class.base::small_map"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  switch i64 %5, label %6 [
    i64 -1, label %9
    i64 0, label %45
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  br label %20

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 2
  %11 = bitcast %union.anon* %10 to %"class.std::__1::__tree"*
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %13 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIlJRKNS_4pairIKlS7_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %11, i64* dereferenceable(8) %12, %"struct.std::__1::pair"* dereferenceable(16) %2) #8
  %14 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %13, 0
  %15 = ptrtoint %"class.std::__1::__tree_end_node"* %14 to i64
  %16 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %13, 1
  %17 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__map_iterator"* %18 to i64*
  store i64 %15, i64* %19, align 8
  br label %62

20:                                               ; preds = %29, %6
  %21 = phi i64 [ 0, %6 ], [ %30, %29 ]
  %22 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 2, i32 0, i64 %21, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %8
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 2, i32 0, i64 %21
  %27 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* %26, %"struct.std::__1::pair"** %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %28, align 8
  br label %62

29:                                               ; preds = %20
  %30 = add nuw i64 %21, 1
  %31 = icmp eq i64 %30, %5
  br i1 %31, label %32, label %20

32:                                               ; preds = %29
  %33 = icmp eq i64 %5, 4
  br i1 %33, label %34, label %45

34:                                               ; preds = %32
  tail call void @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE16ConvertToRealMapEv(%"class.base::small_map"* %1)
  %35 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 2
  %36 = bitcast %union.anon* %35 to %"class.std::__1::__tree"*
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %38 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIlJRKNS_4pairIKlS7_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %36, i64* dereferenceable(8) %37, %"struct.std::__1::pair"* dereferenceable(16) %2) #8
  %39 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %38, 0
  %40 = ptrtoint %"class.std::__1::__tree_end_node"* %39 to i64
  %41 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %38, 1
  %42 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::__map_iterator"* %43 to i64*
  store i64 %40, i64* %44, align 8
  br label %62

45:                                               ; preds = %3, %32
  %46 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 2, i32 0, i64 %5, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %46, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0
  %50 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %49, align 8
  %51 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 2, i32 0, i64 %5, i32 1, i32 0
  store %"class.base::RefCountedData"* %50, %"class.base::RefCountedData"** %51, align 8
  %52 = icmp eq %"class.base::RefCountedData"* %50, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic
  br label %56

56:                                               ; preds = %45, %53
  %57 = load i64, i64* %4, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %4, align 8
  %59 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %1, i64 0, i32 2, i32 0, i64 %57
  %60 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* %59, %"struct.std::__1::pair"** %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %61, align 8
  br label %62

62:                                               ; preds = %25, %56, %34, %9
  %63 = phi i8 [ 0, %25 ], [ 1, %56 ], [ %41, %34 ], [ %16, %9 ]
  %64 = getelementptr inbounds %"struct.std::__1::pair.33", %"struct.std::__1::pair.33"* %0, i64 0, i32 1
  store i8 %63, i8* %64, align 8, !alias.scope !50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE5eraseERSC_(%"class.base::small_map"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", align 8
  %4 = bitcast %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator", %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 0
  %8 = bitcast %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  switch i64 %9, label %10 [
    i64 -1, label %12
    i64 0, label %55
  ]

10:                                               ; preds = %2
  %11 = load i64, i64* %1, align 8
  br label %42

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 0, i32 1
  %14 = bitcast %class.scoped_refptr* %13 to %"class.std::__1::__tree_end_node"*
  %15 = bitcast %class.scoped_refptr* %13 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node"* %16, null
  br i1 %17, label %41, label %18

18:                                               ; preds = %12
  %19 = load i64, i64* %1, align 8
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %"class.std::__1::__tree_end_node"* [ %14, %18 ], [ %31, %20 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %16, %18 ], [ %32, %20 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %24, %19
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::__tree_node_base"** %26 to %"class.std::__1::__tree_node"**
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %30 = select i1 %25, %"class.std::__1::__tree_node"** %27, %"class.std::__1::__tree_node"** %29
  %31 = select i1 %25, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %28
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %33 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %33, label %34, label %20

34:                                               ; preds = %20
  %35 = icmp eq %"class.std::__1::__tree_end_node"* %31, %14
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 4
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %19, %39
  br i1 %40, label %41, label %50

41:                                               ; preds = %36, %34, %12
  br label %50

42:                                               ; preds = %47, %10
  %43 = phi i64 [ 0, %10 ], [ %48, %47 ]
  %44 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %43, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, %11
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = add nuw i64 %43, 1
  %49 = icmp eq i64 %48, %9
  br i1 %49, label %55, label %42

50:                                               ; preds = %36, %41
  %51 = phi %"class.std::__1::__tree_end_node"* [ %14, %41 ], [ %31, %36 ]
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %5, align 8
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %6, align 8
  %52 = icmp eq i64 %9, -1
  %53 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %9
  %54 = select i1 %52, %"struct.std::__1::pair"* null, %"struct.std::__1::pair"* %53
  br label %64

55:                                               ; preds = %47, %42, %2
  %56 = phi i64 [ %9, %2 ], [ %9, %47 ], [ %43, %42 ]
  %57 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %56
  store %"struct.std::__1::pair"* %57, %"struct.std::__1::pair"** %5, align 8
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %6, align 8
  %58 = icmp eq i64 %9, -1
  %59 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 %9
  %60 = select i1 %58, %"struct.std::__1::pair"* null, %"struct.std::__1::pair"* %59
  %61 = icmp eq %"struct.std::__1::pair"* %57, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %55
  %63 = icmp eq %"struct.std::__1::pair"* %57, %60
  br i1 %63, label %76, label %74

64:                                               ; preds = %50, %55
  %65 = phi %"struct.std::__1::pair"* [ %54, %50 ], [ %60, %55 ]
  %66 = phi i1 [ %52, %50 ], [ %58, %55 ]
  %67 = phi %"class.std::__1::__tree_end_node"* [ %51, %50 ], [ null, %55 ]
  %68 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 0, i32 1
  %69 = bitcast %class.scoped_refptr* %68 to %"class.std::__1::__tree_end_node"*
  %70 = select i1 %66, %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"* null
  %71 = icmp eq %"struct.std::__1::pair"* %65, null
  %72 = icmp eq %"class.std::__1::__tree_end_node"* %67, %70
  %73 = and i1 %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %64, %62
  %75 = call { %"struct.std::__1::pair"*, %"class.std::__1::__tree_end_node"* } @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE5eraseERKNSM_8iteratorE(%"class.base::small_map"* %0, %"class.base::small_map<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, 4, base::internal::select_equal_key<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > >, false>::equal_key, base::internal::small_map_default_init<std::__1::map<long, scoped_refptr<base::RefCountedData<base::AtomicFlag> >, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, scoped_refptr<base::RefCountedData<base::AtomicFlag> > > > > > >::iterator"* nonnull dereferenceable(16) %3)
  br label %76

76:                                               ; preds = %64, %62, %74
  %77 = phi i64 [ 1, %74 ], [ 0, %62 ], [ 0, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret i64 %77
}

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.base::FeatureList"* @_ZN4base11FeatureList11GetInstanceEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %10, align 8
  %12 = icmp eq %"class.base::RefCountedData"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %11, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 1
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %19 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %20) #8
  %21 = bitcast %"class.base::RefCountedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %4, %13, %17
  %23 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %2, %22
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

declare void @_ZN4base10AtomicFlagC1Ev(%"class.base::AtomicFlag"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EElEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.base::CancelableTaskTracker"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.base::CancelableTaskTracker"*, i64)**
  %23 = load void (%"class.base::CancelableTaskTracker"*, i64)*, void (%"class.base::CancelableTaskTracker"*, i64)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to void (%"class.base::CancelableTaskTracker"*, i64)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.base::CancelableTaskTracker"*, i64)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i64, i64* %7, align 8
  tail call void %27(%"class.base::CancelableTaskTracker"* %14, i64 %28) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS2_EElEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_SB_SG_EEESF_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %class.scoped_refptr.22*
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to %class.scoped_refptr*
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = load void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*)*, void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*)** %4, align 8
  %12 = bitcast void ()** %9 to %"class.base::internal::BindStateBase"**
  %13 = bitcast void ()** %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  call void %11(%class.scoped_refptr.22* dereferenceable(8) %6, %class.scoped_refptr* dereferenceable(8) %8, %"class.base::OnceCallback"* nonnull %2) #8
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS4_SA_SF_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::RefCountedData"**
  %8 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %7, align 8
  %9 = icmp eq %"class.base::RefCountedData"* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 1
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %17) #8
  %18 = bitcast %"class.base::RefCountedData"* %8 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %14, %10, %3
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to %"class.base::SequencedTaskRunner"**
  %22 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %21, align 8
  %23 = icmp eq %"class.base::SequencedTaskRunner"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %22, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe.13"* %30 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %31) #8
  br label %32

32:                                               ; preds = %19, %24, %29
  %33 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #9
  br label %34

34:                                               ; preds = %32, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESG_EJS5_SB_SG_SG_EEESF_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %class.scoped_refptr.22*
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %9 = bitcast void ()** %8 to %class.scoped_refptr*
  %10 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %11 = getelementptr inbounds void ()*, void ()** %6, i64 3
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = load void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)*, void (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*)** %5, align 8
  %15 = bitcast void ()** %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast void ()** %11 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %19, i64* %20, align 8
  %21 = bitcast void ()** %10 to <2 x %"class.base::internal::BindStateBase"*>*
  store <2 x %"class.base::internal::BindStateBase"*> zeroinitializer, <2 x %"class.base::internal::BindStateBase"*>* %21, align 8
  call void %14(%class.scoped_refptr.22* dereferenceable(8) %7, %class.scoped_refptr* dereferenceable(8) %9, %"class.base::OnceCallback"* nonnull %2, %"class.base::OnceCallback"* nonnull %3) #8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESF_EJS4_SA_SF_SF_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::RefCountedData"**
  %10 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %9, align 8
  %11 = icmp eq %"class.base::RefCountedData"* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %10, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 1
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %19) #8
  %20 = bitcast %"class.base::RefCountedData"* %10 to i8*
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %16, %12, %3
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %23 = bitcast void ()** %22 to %"class.base::SequencedTaskRunner"**
  %24 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %23, align 8
  %25 = icmp eq %"class.base::SequencedTaskRunner"* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %24, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe.13"* %32 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %33) #8
  br label %34

34:                                               ; preds = %21, %26, %31
  %35 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %34, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS5_S8_EEES7_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = load void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)*, void (%"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*)** %4, align 8
  %9 = bitcast void ()** %5 to %"class.base::SequencedTaskRunner"**
  %10 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %9, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %9, align 8
  %11 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %8(%"class.base::SequencedTaskRunner"* %10, %"class.base::OnceCallback"* nonnull %2) #8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJS4_S7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::SequencedTaskRunner"**
  %8 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %7, align 8
  %9 = icmp eq %"class.base::SequencedTaskRunner"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %8, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe.13"* %16 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %17) #8
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS5_SB_SE_EEEFbvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to i1 (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::ScopedClosureRunner"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %class.scoped_refptr.22*
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %class.scoped_refptr*
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.base::ScopedClosureRunner"*
  %10 = load i1 (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::ScopedClosureRunner"*)*, i1 (%class.scoped_refptr.22*, %class.scoped_refptr*, %"class.base::ScopedClosureRunner"*)** %3, align 8
  %11 = tail call zeroext i1 %10(%class.scoped_refptr.22* dereferenceable(8) %5, %class.scoped_refptr* dereferenceable(8) %7, %"class.base::ScopedClosureRunner"* dereferenceable(8) %9) #8
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS2_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS4_SA_SD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %34, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::ScopedClosureRunner"*
  tail call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* %5) #8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::RefCountedData"**
  %8 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %7, align 8
  %9 = icmp eq %"class.base::RefCountedData"* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %8, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %15, i64 1
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %17) #8
  %18 = bitcast %"class.base::RefCountedData"* %8 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %14, %10, %3
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to %"class.base::SequencedTaskRunner"**
  %22 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %21, align 8
  %23 = icmp eq %"class.base::SequencedTaskRunner"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %22, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.13", %"class.base::RefCountedThreadSafe.13"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe.13"* %30 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %31) #8
  br label %32

32:                                               ; preds = %19, %24, %29
  %33 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #9
  br label %34

34:                                               ; preds = %32, %1
  ret void
}

declare void @_ZN4base19ScopedClosureRunnerC1EOS0_(%"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.base::RefCountedData"**
  %47 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %46, align 8
  %48 = icmp eq %"class.base::RefCountedData"* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %47, i64 0, i32 0
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %54, i64 1
  %56 = bitcast %"class.base::RefCountedThreadSafe"* %55 to %"class.base::AtomicFlag"*
  tail call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %56) #8
  %57 = bitcast %"class.base::RefCountedData"* %47 to i8*
  tail call void @_ZdlPv(i8* %57) #9
  br label %58

58:                                               ; preds = %38, %49, %53
  %59 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %59) #9
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !59
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !59
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !59
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !59
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !59
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !59
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !59
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !59
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !59
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !59
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !59
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !59
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !59
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9small_mapINSt3__13mapIl13scoped_refptrINS_14RefCountedDataINS_10AtomicFlagEEEENS1_4lessIlEENS1_9allocatorINS1_4pairIKlS7_EEEEEELm4ENS_8internal16select_equal_keyISF_Lb0EE9equal_keyENSG_22small_map_default_initISF_EEE16ConvertToRealMapEv(%"class.base::small_map"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %union.Storage, align 16
  %3 = bitcast %union.Storage* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 0, i32 1
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = bitcast i64* %4 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = bitcast %union.Storage* %2 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %9, align 16
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %6, align 8
  %10 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 1, i32 0
  %11 = bitcast i64* %10 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 1, i32 0
  %14 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 1, i32 1, i32 0
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %15, align 16
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %14, align 8
  %16 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 2, i32 0
  %17 = bitcast i64* %16 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 2, i32 0
  %20 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 2, i32 1, i32 0
  %21 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %21, align 16
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %20, align 8
  %22 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 3, i32 0
  %23 = bitcast i64* %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 3, i32 0
  %26 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2, i32 0, i64 3, i32 1, i32 0
  %27 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %27, align 16
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %26, align 8
  %28 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 0
  store i64 -1, i64* %28, align 8
  %29 = getelementptr inbounds %"class.base::small_map", %"class.base::small_map"* %0, i64 0, i32 2
  %30 = bitcast %class.scoped_refptr* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #8
  %31 = bitcast %union.anon* %29 to %class.scoped_refptr**
  store %class.scoped_refptr* %5, %class.scoped_refptr** %31, align 8
  %32 = bitcast %union.anon* %29 to %"class.std::__1::__tree"*
  %33 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 0
  %34 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE15__insert_uniqueEONS_4pairIKlS7_EE(%"class.std::__1::__tree"* %32, %"struct.std::__1::pair"* nonnull dereferenceable(16) %33) #8
  %35 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 0, i32 1, i32 0
  %36 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %35, align 8
  %37 = icmp eq %"class.base::RefCountedData"* %36, null
  br i1 %37, label %47, label %38

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %36, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %43, i64 1
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %44 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %45) #8
  %46 = bitcast %"class.base::RefCountedData"* %36 to i8*
  call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %1, %38, %42
  %48 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 1
  %49 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE15__insert_uniqueEONS_4pairIKlS7_EE(%"class.std::__1::__tree"* %32, %"struct.std::__1::pair"* dereferenceable(16) %48) #8
  %50 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 1, i32 1, i32 0
  %51 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %50, align 8
  %52 = icmp eq %"class.base::RefCountedData"* %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw sub i32* %54, i32 1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %51, i64 0, i32 0
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %58, i64 1
  %60 = bitcast %"class.base::RefCountedThreadSafe"* %59 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %60) #8
  %61 = bitcast %"class.base::RefCountedData"* %51 to i8*
  call void @_ZdlPv(i8* %61) #9
  br label %62

62:                                               ; preds = %57, %53, %47
  %63 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 2
  %64 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE15__insert_uniqueEONS_4pairIKlS7_EE(%"class.std::__1::__tree"* %32, %"struct.std::__1::pair"* dereferenceable(16) %63) #8
  %65 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 2, i32 1, i32 0
  %66 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %65, align 8
  %67 = icmp eq %"class.base::RefCountedData"* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw sub i32* %69, i32 1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %66, i64 0, i32 0
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %73, i64 1
  %75 = bitcast %"class.base::RefCountedThreadSafe"* %74 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %75) #8
  %76 = bitcast %"class.base::RefCountedData"* %66 to i8*
  call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %72, %68, %62
  %78 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 3
  %79 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE15__insert_uniqueEONS_4pairIKlS7_EE(%"class.std::__1::__tree"* %32, %"struct.std::__1::pair"* dereferenceable(16) %78) #8
  %80 = getelementptr inbounds %union.Storage, %union.Storage* %2, i64 0, i32 0, i64 3, i32 1, i32 0
  %81 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %80, align 8
  %82 = icmp eq %"class.base::RefCountedData"* %81, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw sub i32* %84, i32 1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %92

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %81, i64 0, i32 0
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %88, i64 1
  %90 = bitcast %"class.base::RefCountedThreadSafe"* %89 to %"class.base::AtomicFlag"*
  call void @_ZN4base10AtomicFlagD1Ev(%"class.base::AtomicFlag"* %90) #8
  %91 = bitcast %"class.base::RefCountedData"* %81 to i8*
  call void @_ZdlPv(i8* %91) #9
  br label %92

92:                                               ; preds = %87, %83, %77
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIlJRKNS_4pairIKlS7_EEEEENSH_INS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, i64* dereferenceable(8), %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i64, i64* %1, align 8
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i64 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %81

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 48) #9, !noalias !60
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i64*
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %50 = load i64, i64* %49, align 8, !noalias !60
  store i64 %50, i64* %48, align 8, !noalias !60
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0
  %52 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %51, align 8, !noalias !60
  %53 = getelementptr inbounds i8, i8* %46, i64 40
  %54 = bitcast i8* %53 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* %52, %"class.base::RefCountedData"** %54, align 8, !noalias !60
  %55 = icmp eq %"class.base::RefCountedData"* %52, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic, !noalias !60
  br label %59

59:                                               ; preds = %45, %56
  %60 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %61 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds i8, i8* %46, i64 16
  %63 = bitcast i8* %62 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %63, align 8
  %64 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %59
  %71 = ptrtoint %"class.std::__1::__tree_node_base"* %68 to i64
  %72 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %74

74:                                               ; preds = %70, %59
  %75 = phi %"class.std::__1::__tree_node_base"* [ %61, %59 ], [ %73, %70 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"* %75) #8
  %78 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %74, %39
  %82 = phi i8 [ 1, %74 ], [ 0, %39 ]
  %83 = phi %"class.std::__1::__tree_node"* [ %60, %74 ], [ %43, %39 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 0
  %85 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %84, 0
  %86 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %85, i8 %82, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !59
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !59
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !59
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE15__insert_uniqueEONS_4pairIKlS7_EE(%"class.std::__1::__tree"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i64, i64* %8, align 8
  br label %11

11:                                               ; preds = %33, %7
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %5, %7 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i64 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %3, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %73

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 48) #9, !noalias !63
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0
  %49 = bitcast %"struct.std::__1::pair"* %1 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8, !noalias !63
  %51 = bitcast i8* %47 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %51, align 8, !noalias !63
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %48, align 8, !noalias !63
  %52 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds i8, i8* %46, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %45
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %60 to i64
  %64 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %66

66:                                               ; preds = %62, %45
  %67 = phi %"class.std::__1::__tree_node_base"* [ %53, %45 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"* %67) #8
  %70 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %73

73:                                               ; preds = %39, %66
  %74 = phi i8 [ 1, %66 ], [ 0, %39 ]
  %75 = phi %"class.std::__1::__tree_node"* [ %52, %66 ], [ %43, %39 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %75, i64 0, i32 0, i32 0
  %77 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %76, 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %77, i8 %74, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %78
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryINS_21CancelableTaskTrackerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryINS_21CancelableTaskTrackerEE10GetWeakPtrEv"}
!5 = !{!6, !8, !10, !12}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJEEENS2_IFvDpT_EEEvEUlvE_JEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJEEENS2_IFvDpT_EEEvEUlvE_JEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEvEUlvE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!10 = distinct !{!10, !11, !"_ZN4base9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!11 = distinct !{!11, !"_ZN4base9DoNothing4OnceIJEEENS_12OnceCallbackIFvDpT_EEEv"}
!12 = distinct !{!12, !13, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJEEEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJEEEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EERlEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EERlEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIMNS_21CancelableTaskTrackerEFvlEJNS_8internal17UnretainedWrapperIS1_EERlEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIMNS_21CancelableTaskTrackerEFvlEJNS_8internal17UnretainedWrapperIS1_EERlEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS2_IFvvEEEEJS7_RSB_SF_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS2_IFvvEEEEJS7_RSB_SF_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_RS9_SE_EEENSC_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_RS9_SE_EEENSC_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS2_IFvvEEESF_EJS7_RSB_SF_SF_EEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS2_IFvvEEESF_EJS7_RSB_SF_SF_EEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESE_EJS5_RS9_SE_SE_EEENSC_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEESE_EJS5_RS9_SE_SE_EEENSC_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!29 = !{!"branch_weights", i32 1, i32 1048575}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EERlEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_21CancelableTaskTrackerEFvlEJNS0_17UnretainedWrapperIS3_EERlEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIMNS_21CancelableTaskTrackerEFvlEJNS_8internal17UnretainedWrapperIS1_EERlEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIMNS_21CancelableTaskTrackerEFvlEJNS_8internal17UnretainedWrapperIS1_EERlEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS2_IFvvEEEEJS7_RSB_SF_EEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEENS2_IFvvEEEEJS7_RSB_SF_EEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_RS9_SE_EEENSC_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIPFvRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEENS_12OnceCallbackIFvvEEEEJS5_RS9_SE_EEENSC_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_19SequencedTaskRunnerEENS2_IFvvEEEEJRKS5_S7_EEEDcOT0_DpOT1_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_19SequencedTaskRunnerEENS2_IFvvEEEEJRKS5_S7_EEEDcOT0_DpOT1_"}
!43 = distinct !{!43, !44, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS3_S6_EEENS4_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEEEJRKS3_S6_EEENS4_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS7_RSB_SE_EEEDcOT0_DpOT1_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS3_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS7_RSB_SE_EEEDcOT0_DpOT1_"}
!48 = distinct !{!48, !49, !"_ZN4base13BindRepeatingIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS5_RS9_SC_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!49 = distinct !{!49, !"_ZN4base13BindRepeatingIPFbRK13scoped_refptrINS_19SequencedTaskRunnerEERKS1_INS_14RefCountedDataINS_10AtomicFlagEEEERKNS_19ScopedClosureRunnerEEJS5_RS9_SC_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!50 = !{!51, !53, !55, !57}
!51 = distinct !{!51, !52, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorERbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSQ_IT0_E4typeEEEOSR_OSU_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorERbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSQ_IT0_E4typeEEEOSR_OSU_"}
!53 = distinct !{!53, !54, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorERbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSQ_IT0_E4typeEEEOSR_OSU_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorERbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSQ_IT0_E4typeEEEOSR_OSU_"}
!55 = distinct !{!55, !56, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorEbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSP_IT0_E4typeEEEOSQ_OST_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorEbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSP_IT0_E4typeEEEOSQ_OST_"}
!57 = distinct !{!57, !58, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorEbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSP_IT0_E4typeEEEOSQ_OST_: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__19make_pairIN4base9small_mapINS_3mapIl13scoped_refptrINS1_14RefCountedDataINS1_10AtomicFlagEEEENS_4lessIlEENS_9allocatorINS_4pairIKlS8_EEEEEELm4ENS1_8internal16select_equal_keyISG_Lb0EE9equal_keyENSH_22small_map_default_initISG_EEE8iteratorEbEENSC_INS_18__unwrap_ref_decayIT_E4typeENSP_IT0_E4typeEEEOSQ_OST_"}
!59 = !{i8 0, i8 2}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_4pairIKlS7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISP_EEEEEEDpOT_: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_4pairIKlS7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISP_EEEEEEDpOT_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIKlS7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISN_EEEEEEDpOT_: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__16__treeINS_12__value_typeIl13scoped_refptrIN4base14RefCountedDataINS3_10AtomicFlagEEEEEENS_19__map_value_compareIlS8_NS_4lessIlEELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJNS_4pairIKlS7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISN_EEEEEEDpOT_"}
