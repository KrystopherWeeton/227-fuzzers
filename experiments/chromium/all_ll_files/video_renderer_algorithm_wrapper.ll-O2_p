; ModuleID = '../../third_party/blink/renderer/modules/mediastream/video_renderer_algorithm_wrapper.cc'
source_filename = "../../third_party/blink/renderer/modules/mediastream/video_renderer_algorithm_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::VideoRendererAlgorithmWrapper" = type { %"class.base::RepeatingCallback", %"class.media::MediaLog"*, i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.15" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::VideoRendererAlgorithm"* }
%"class.media::VideoRendererAlgorithm" = type { %"class.media::MediaLog"*, i32, %"class.base::circular_deque", %"class.media::VideoCadenceEstimator", i8, %"class.base::RepeatingCallback", %"class.base::TimeTicks", %"class.media::MovingAverage", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i64, i8, i64, i8, i64 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.media::VideoRendererAlgorithm::ReadyFrame"*, i64 }
%"struct.media::VideoRendererAlgorithm::ReadyFrame" = type { %class.scoped_refptr.3, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i32, i32, i32 }
%class.scoped_refptr.3 = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.26", %"class.media::VideoFrameLayout", %class.scoped_refptr.3, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr.34", %class.scoped_refptr.40, %"class.std::__1::vector.41", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.79", [4 x i8], %"class.absl::optional.84", %"class.std::__1::unique_ptr.89" }
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector.27", i8, i64, i64 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair.29" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%class.scoped_refptr.40 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.base::OnceCallback.43"*, %"class.base::OnceCallback.43"*, %"class.std::__1::__compressed_pair.44" }
%"class.base::OnceCallback.43" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.base::OnceCallback.43"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional.18", %"class.absl::optional.18", %"class.absl::optional.49", %"class.absl::optional.54", %"class.absl::optional.59", i8, %"class.absl::optional.64", %"class.absl::optional", i8, %"class.absl::optional.18", i8, [3 x i8], %"class.absl::optional.69", i8, i8, i8, i8, i32, %"class.absl::optional.74", i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.18", %"class.absl::optional.18", %"class.absl::optional.64", %"class.absl::optional", %"class.absl::optional.18", %"class.absl::optional.64", %"class.absl::optional.49" }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.gfx::Rect" }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { i32 }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, [3 x i8], %union.anon.73 }
%union.anon.73 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.base::UnguessableToken" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.base::TimeTicks" }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.base::TimeDelta" }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.79" = type { %"class.absl::optional_internal::optional_data.80" }
%"class.absl::optional_internal::optional_data.80" = type { %"class.absl::optional_internal::optional_data_base.81" }
%"class.absl::optional_internal::optional_data_base.81" = type { %"class.absl::optional_internal::optional_data_dtor_base.82" }
%"class.absl::optional_internal::optional_data_dtor_base.82" = type { i8, %union.anon.83 }
%union.anon.83 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, [7 x i8], %union.anon.88 }
%union.anon.88 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i8* }
%"class.media::VideoCadenceEstimator" = type { %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.base::TimeDelta", i8, i32, %"class.base::TimeDelta", i8, %struct.anon }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%struct.anon = type { i8, i32, %"class.absl::optional" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.media::MovingAverage" = type { i64, %"class.std::__1::vector.7", i64, %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.base::TimeDelta"* }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::LowLatencyVideoRendererAlgorithm"* }
%"class.blink::LowLatencyVideoRendererAlgorithm" = type { %class.scoped_refptr.3, %"class.WTF::Deque", %"class.absl::optional.18", double, i32, i32, %"struct.blink::LowLatencyVideoRendererAlgorithm::Stats", %"class.absl::optional.18" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<scoped_refptr<media::VideoFrame>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<scoped_refptr<media::VideoFrame>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.3*, i32, i32 }
%"struct.blink::LowLatencyVideoRendererAlgorithm::Stats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.2", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZN5blink29VideoRendererAlgorithmWrapperC1ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPN5media8MediaLogE = hidden unnamed_addr alias void (%"class.blink::VideoRendererAlgorithmWrapper"*, %"class.base::RepeatingCallback"*, %"class.media::MediaLog"*), void (%"class.blink::VideoRendererAlgorithmWrapper"*, %"class.base::RepeatingCallback"*, %"class.media::MediaLog"*)* @_ZN5blink29VideoRendererAlgorithmWrapperC2ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPN5media8MediaLogE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29VideoRendererAlgorithmWrapperC2ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPN5media8MediaLogE(%"class.blink::VideoRendererAlgorithmWrapper"*, %"class.base::RepeatingCallback"* dereferenceable(8), %"class.media::MediaLog"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %5, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %6) #7
  %7 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 1
  store %"class.media::MediaLog"* %2, %"class.media::MediaLog"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %11 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  %12 = tail call i8* @_Znwm(i64 312) #8
  %13 = bitcast i8* %12 to %"class.media::VideoRendererAlgorithm"*
  tail call void @_ZN5media22VideoRendererAlgorithmC1ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPNS_8MediaLogE(%"class.media::VideoRendererAlgorithm"* nonnull %13, %"class.base::RepeatingCallback"* dereferenceable(8) %4, %"class.media::MediaLog"* %2) #7
  %14 = ptrtoint i8* %12 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.media::VideoRendererAlgorithm"*, %"class.media::VideoRendererAlgorithm"** %15, align 8
  store i64 %14, i64* %10, align 8
  %17 = icmp eq %"class.media::VideoRendererAlgorithm"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  tail call void @_ZN5media22VideoRendererAlgorithmD1Ev(%"class.media::VideoRendererAlgorithm"* nonnull %16) #7
  %19 = bitcast %"class.media::VideoRendererAlgorithm"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %18, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5blink29VideoRendererAlgorithmWrapper6RenderEN4base9TimeTicksES2_Pm(%"class.blink::VideoRendererAlgorithmWrapper"* nocapture readonly, i64, i64, i64*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.media::VideoRendererAlgorithm"*, %"class.media::VideoRendererAlgorithm"** %9, align 8
  %11 = tail call %"class.media::VideoFrame"* @_ZN5media22VideoRendererAlgorithm6RenderEN4base9TimeTicksES2_Pm(%"class.media::VideoRendererAlgorithm"* %10, i64 %1, i64 %2, i64* %3) #7
  br label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.blink::LowLatencyVideoRendererAlgorithm"** %13, align 8
  %15 = tail call %"class.media::VideoFrame"* @_ZN5blink32LowLatencyVideoRendererAlgorithm6RenderEN4base9TimeTicksES2_Pm(%"class.blink::LowLatencyVideoRendererAlgorithm"* %14, i64 %1, i64 %2, i64* %3) #7
  br label %16

16:                                               ; preds = %12, %8
  %17 = phi %"class.media::VideoFrame"* [ %11, %8 ], [ %15, %12 ]
  ret %"class.media::VideoFrame"* %17
}

declare %"class.media::VideoFrame"* @_ZN5media22VideoRendererAlgorithm6RenderEN4base9TimeTicksES2_Pm(%"class.media::VideoRendererAlgorithm"*, i64, i64, i64*) local_unnamed_addr #1

declare %"class.media::VideoFrame"* @_ZN5blink32LowLatencyVideoRendererAlgorithm6RenderEN4base9TimeTicksES2_Pm(%"class.blink::LowLatencyVideoRendererAlgorithm"*, i64, i64, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29VideoRendererAlgorithmWrapper12EnqueueFrameE13scoped_refptrIN5media10VideoFrameEE(%"class.blink::VideoRendererAlgorithmWrapper"* nocapture, %"class.media::VideoFrame"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %32

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 19, i32 32, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br i1 %9, label %25, label %11

11:                                               ; preds = %6
  store %"class.media::VideoRendererAlgorithm"* null, %"class.media::VideoRendererAlgorithm"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 1
  %13 = tail call i8* @_Znwm(i64 120) #8
  %14 = bitcast i8* %13 to %"class.blink::LowLatencyVideoRendererAlgorithm"*
  %15 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %12, align 8
  tail call void @_ZN5blink32LowLatencyVideoRendererAlgorithmC1EPN5media8MediaLogE(%"class.blink::LowLatencyVideoRendererAlgorithm"* nonnull %14, %"class.media::MediaLog"* %15) #7
  %16 = ptrtoint i8* %13 to i64
  %17 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.blink::LowLatencyVideoRendererAlgorithm"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.15"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.blink::LowLatencyVideoRendererAlgorithm"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %11
  tail call void @_ZN5blink32LowLatencyVideoRendererAlgorithmD1Ev(%"class.blink::LowLatencyVideoRendererAlgorithm"* nonnull %19) #7
  %23 = bitcast %"class.blink::LowLatencyVideoRendererAlgorithm"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #8
  br label %24

24:                                               ; preds = %22, %11
  store i32 1, i32* %3, align 8
  br label %32

25:                                               ; preds = %6
  %26 = load %"class.media::VideoRendererAlgorithm"*, %"class.media::VideoRendererAlgorithm"** %10, align 8
  %27 = icmp eq %"class.media::VideoFrame"* %1, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %25, %28
  tail call void @_ZN5media22VideoRendererAlgorithm12EnqueueFrameE13scoped_refptrINS_10VideoFrameEE(%"class.media::VideoRendererAlgorithm"* %26, %"class.media::VideoFrame"* %1) #7
  br label %40

32:                                               ; preds = %2, %24
  %33 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.blink::LowLatencyVideoRendererAlgorithm"** %33, align 8
  %35 = icmp eq %"class.media::VideoFrame"* %1, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %32, %36
  tail call void @_ZN5blink32LowLatencyVideoRendererAlgorithm12EnqueueFrameE13scoped_refptrIN5media10VideoFrameEE(%"class.blink::LowLatencyVideoRendererAlgorithm"* %34, %"class.media::VideoFrame"* %1) #7
  br label %40

40:                                               ; preds = %39, %31
  %41 = icmp eq %"class.media::VideoFrame"* %1, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe.26", %"class.base::RefCountedThreadSafe.26"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.26", %"class.base::RefCountedThreadSafe.26"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe.26"* %48 to %"class.media::VideoFrame"*
  %50 = bitcast %"class.base::RefCountedThreadSafe.26"* %48 to void (%"class.media::VideoFrame"*)***
  %51 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %51, i64 1
  %53 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %52, align 8
  tail call void %53(%"class.media::VideoFrame"* nonnull %49) #7
  br label %54

54:                                               ; preds = %40, %42, %47
  ret void
}

declare void @_ZN5media22VideoRendererAlgorithm12EnqueueFrameE13scoped_refptrINS_10VideoFrameEE(%"class.media::VideoRendererAlgorithm"*, %"class.media::VideoFrame"*) local_unnamed_addr #1

declare void @_ZN5blink32LowLatencyVideoRendererAlgorithm12EnqueueFrameE13scoped_refptrIN5media10VideoFrameEE(%"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.media::VideoFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29VideoRendererAlgorithmWrapper5ResetEN5media22VideoRendererAlgorithm9ResetFlagE(%"class.blink::VideoRendererAlgorithmWrapper"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.media::VideoRendererAlgorithm"*, %"class.media::VideoRendererAlgorithm"** %7, align 8
  tail call void @_ZN5media22VideoRendererAlgorithm5ResetENS0_9ResetFlagE(%"class.media::VideoRendererAlgorithm"* %8, i32 %1) #7
  br label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.blink::LowLatencyVideoRendererAlgorithm"** %10, align 8
  tail call void @_ZN5blink32LowLatencyVideoRendererAlgorithm5ResetEv(%"class.blink::LowLatencyVideoRendererAlgorithm"* %11) #7
  br label %12

12:                                               ; preds = %9, %6
  ret void
}

declare void @_ZN5media22VideoRendererAlgorithm5ResetENS0_9ResetFlagE(%"class.media::VideoRendererAlgorithm"*, i32) local_unnamed_addr #1

declare void @_ZN5blink32LowLatencyVideoRendererAlgorithm5ResetEv(%"class.blink::LowLatencyVideoRendererAlgorithm"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink29VideoRendererAlgorithmWrapper18NeedsReferenceTimeEv(%"class.blink::VideoRendererAlgorithmWrapper"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::VideoRendererAlgorithmWrapper", %"class.blink::VideoRendererAlgorithmWrapper"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5media22VideoRendererAlgorithmD1Ev(%"class.media::VideoRendererAlgorithm"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink32LowLatencyVideoRendererAlgorithmD1Ev(%"class.blink::LowLatencyVideoRendererAlgorithm"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5media22VideoRendererAlgorithmC1ERKN4base17RepeatingCallbackIFbRKNSt3__16vectorINS1_9TimeDeltaENS3_9allocatorIS5_EEEEPNS4_INS1_9TimeTicksENS6_ISB_EEEEEEEPNS_8MediaLogE(%"class.media::VideoRendererAlgorithm"*, %"class.base::RepeatingCallback"* dereferenceable(8), %"class.media::MediaLog"*) unnamed_addr #1

declare void @_ZN5blink32LowLatencyVideoRendererAlgorithmC1EPN5media8MediaLogE(%"class.blink::LowLatencyVideoRendererAlgorithm"*, %"class.media::MediaLog"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
