; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_server_id.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_server_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.quic::QuicServerId" = type <{ %"class.std::__1::basic_string", i16, i8, [5 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN4quic12QuicServerIdC1Ev = hidden unnamed_addr alias void (%"class.quic::QuicServerId"*), void (%"class.quic::QuicServerId"*)* @_ZN4quic12QuicServerIdC2Ev
@_ZN4quic12QuicServerIdC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt = hidden unnamed_addr alias void (%"class.quic::QuicServerId"*, %"class.std::__1::basic_string"*, i16), void (%"class.quic::QuicServerId"*, %"class.std::__1::basic_string"*, i16)* @_ZN4quic12QuicServerIdC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt
@_ZN4quic12QuicServerIdC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtb = hidden unnamed_addr alias void (%"class.quic::QuicServerId"*, %"class.std::__1::basic_string"*, i16, i1), void (%"class.quic::QuicServerId"*, %"class.std::__1::basic_string"*, i16, i1)* @_ZN4quic12QuicServerIdC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtb
@_ZN4quic12QuicServerIdD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicServerId"*), void (%"class.quic::QuicServerId"*)* @_ZN4quic12QuicServerIdD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QuicServerIdC2Ev(%"class.quic::QuicServerId"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 0, i8* %5, align 1
  store i8 0, i8* %3, align 8
  %6 = bitcast %"class.quic::QuicServerId"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %3, i64 24, i1 false) #8
  %7 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 1
  store i16 0, i16* %7, align 8
  %8 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 2
  store i8 0, i8* %8, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QuicServerIdC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEtb(%"class.quic::QuicServerId"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i16 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.quic::QuicServerId"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #8
  br label %19

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %16, i64 %18) #8
  br label %19

19:                                               ; preds = %10, %13
  %20 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 1
  store i16 %2, i16* %20, align 8
  %21 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 2
  store i8 %5, i8* %21, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QuicServerIdC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.quic::QuicServerId"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i16 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.quic::QuicServerId"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #8
  br label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %14, i64 %16) #8
  br label %17

17:                                               ; preds = %8, %11
  %18 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 1
  store i16 %2, i16* %18, align 8
  %19 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 2
  store i8 0, i8* %19, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic12QuicServerIdD2Ev(%"class.quic::QuicServerId"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::QuicServerId"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #9
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic12QuicServerIdltERKS0_(%"class.quic::QuicServerId"*, %"class.quic::QuicServerId"* dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 2
  %7 = load i16, i16* %3, align 2
  %8 = load i16, i16* %5, align 2
  %9 = icmp ult i16 %7, %8
  br i1 %9, label %69, label %10

10:                                               ; preds = %2
  %11 = icmp ult i16 %8, %7
  br i1 %11, label %69, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.quic::QuicServerId"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = bitcast %"class.quic::QuicServerId"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp ult i64 %20, %28
  %30 = select i1 %29, i64 %20, i64 %28
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %12
  %33 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.quic::QuicServerId"* %0 to i8*
  %36 = select i1 %24, i8* %34, i8* %35
  %37 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.quic::QuicServerId"* %1 to i8*
  %40 = select i1 %16, i8* %38, i8* %39
  %41 = tail call i32 @memcmp(i8* %36, i8* %40, i64 %30) #8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %32, %12
  %44 = icmp ult i64 %28, %20
  br i1 %44, label %69, label %47

45:                                               ; preds = %32
  %46 = icmp slt i32 %41, 0
  br i1 %46, label %69, label %57

47:                                               ; preds = %43
  br i1 %31, label %62, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.quic::QuicServerId"* %1 to i8*
  %54 = select i1 %16, i8* %50, i8* %53
  %55 = bitcast %"class.quic::QuicServerId"* %0 to i8*
  %56 = select i1 %24, i8* %52, i8* %55
  br label %57

57:                                               ; preds = %48, %45
  %58 = phi i8* [ %56, %48 ], [ %36, %45 ]
  %59 = phi i8* [ %54, %48 ], [ %40, %45 ]
  %60 = tail call i32 @memcmp(i8* %59, i8* %58, i64 %30) #8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %57, %47
  br i1 %29, label %69, label %65

63:                                               ; preds = %57
  %64 = icmp slt i32 %60, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %63, %62
  %66 = load i8, i8* %4, align 1, !range !2
  %67 = load i8, i8* %6, align 1, !range !2
  %68 = icmp ult i8 %66, %67
  br label %69

69:                                               ; preds = %65, %63, %62, %45, %43, %2, %10
  %70 = phi i1 [ true, %2 ], [ false, %10 ], [ %68, %65 ], [ true, %45 ], [ false, %63 ], [ true, %43 ], [ false, %62 ]
  ret i1 %70
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic12QuicServerIdeqERKS0_(%"class.quic::QuicServerId"* nocapture readonly, %"class.quic::QuicServerId"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 2, !range !2
  %5 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %64

8:                                                ; preds = %2
  %9 = bitcast %"class.quic::QuicServerId"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.quic::QuicServerId"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp eq i64 %16, %24
  br i1 %25, label %26, label %64

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.quic::QuicServerId"* %0 to i8*
  %30 = select i1 %12, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.quic::QuicServerId"* %1 to i8*
  %34 = select i1 %20, i8* %32, i8* %33
  %35 = icmp eq i64 %16, 0
  br i1 %12, label %42, label %36

36:                                               ; preds = %26
  br i1 %35, label %58, label %37

37:                                               ; preds = %36
  %38 = ptrtoint i8* %28 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %34, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %43, label %64

42:                                               ; preds = %26
  br i1 %35, label %58, label %55

43:                                               ; preds = %37, %50
  %44 = phi i64 [ %47, %50 ], [ %15, %37 ]
  %45 = phi i8* [ %48, %50 ], [ %29, %37 ]
  %46 = phi i8* [ %51, %50 ], [ %34, %37 ]
  %47 = add i64 %44, -1
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds i8, i8* %46, i64 1
  %52 = load i8, i8* %48, align 1
  %53 = load i8, i8* %51, align 1
  %54 = icmp eq i8 %52, %53
  br i1 %54, label %43, label %64

55:                                               ; preds = %42
  %56 = tail call i32 @bcmp(i8* %30, i8* %34, i64 %16) #8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %43, %36, %42, %55
  %59 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %0, i64 0, i32 1
  %60 = load i16, i16* %59, align 8
  %61 = getelementptr inbounds %"class.quic::QuicServerId", %"class.quic::QuicServerId"* %1, i64 0, i32 1
  %62 = load i16, i16* %61, align 8
  %63 = icmp eq i16 %60, %62
  br label %64

64:                                               ; preds = %50, %37, %8, %58, %55, %2
  %65 = phi i1 [ false, %55 ], [ false, %2 ], [ %63, %58 ], [ false, %8 ], [ false, %37 ], [ false, %50 ]
  ret i1 %65
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4quic12QuicServerId19EstimateMemoryUsageEv(%"class.quic::QuicServerId"* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i64 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
