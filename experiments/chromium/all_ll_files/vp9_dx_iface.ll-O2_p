; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/vp9_dx_iface.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/vp9_dx_iface.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vpx_codec_iface = type { i8*, i32, i64, i32 (%struct.vpx_codec_ctx*, %struct.vpx_codec_priv_enc_mr_cfg*)*, i32 (%struct.vpx_codec_alg_priv*)*, %struct.vpx_codec_ctrl_fn_map*, %struct.vpx_codec_dec_iface, %struct.vpx_codec_enc_iface }
%struct.vpx_codec_ctx = type { i8*, %struct.vpx_codec_iface*, i32, i8*, i64, %union.anon, %struct.vpx_codec_priv* }
%union.anon = type { %struct.vpx_codec_dec_cfg* }
%struct.vpx_codec_dec_cfg = type { i32, i32, i32 }
%struct.vpx_codec_priv = type { i8*, i64, %struct.anon, %struct.anon.1 }
%struct.anon = type { %struct.vpx_codec_priv_cb_pair, %struct.vpx_codec_priv_cb_pair }
%struct.vpx_codec_priv_cb_pair = type { %union.anon.0, i8* }
%union.anon.0 = type { void (i8*, %struct.vpx_image*)* }
%struct.vpx_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8*], [4 x i32], i32, i8*, i8*, i32, i32, i8* }
%struct.anon.1 = type { %struct.vpx_fixed_buf, i32, i32, %struct.vpx_codec_cx_pkt, i32 }
%struct.vpx_fixed_buf = type { i8*, i64 }
%struct.vpx_codec_cx_pkt = type { i32, %union.anon.2 }
%union.anon.2 = type { %struct.anon.3, [40 x i8] }
%struct.anon.3 = type { i8*, i64, i64, i64, i32, i32, [5 x i32], [5 x i32], [5 x i8] }
%struct.vpx_codec_priv_enc_mr_cfg = type { i32, i32, %struct.vpx_rational, i8* }
%struct.vpx_rational = type { i32, i32 }
%struct.vpx_codec_alg_priv = type { %struct.vpx_codec_priv, %struct.vpx_codec_dec_cfg, %struct.vpx_codec_stream_info, %struct.VP9Decoder*, i8*, i32, %struct.vp8_postproc_cfg, void (i8*, i8*, i8*, i32)*, i8*, %struct.vpx_image, i32, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i32, i32, i32, i32 }
%struct.vpx_codec_stream_info = type { i32, i32, i32, i32 }
%struct.VP9Decoder = type { %struct.macroblockd, %struct.VP9Common, i32, i32, %struct.RefCntBuffer*, %struct.VPxWorker, %struct.VPxWorker*, %struct.TileWorkerData*, [64 x %struct.TileBuffer], i32, i32, %struct.VP9LfSyncData, void (i8*, i8*, i8*, i32)*, i8*, i32, i32, i32, i32, i32, i32, %struct.RowMTWorkerData* }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.buf_2d = type { i8*, i32 }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.TileInfo = type { i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%union.int_mv = type { i32 }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.VP9Common = type { %struct.vpx_internal_error_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], [8 x i32], [3 x %struct.RefBuffer], i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], i32, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, i32 (%struct.VP9Common*, i32)*, void (%struct.VP9Common*)*, void (%struct.VP9Common*)*, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, i32, i32, i32, [2 x i8*], i8*, i8*, i32, i8, [11 x i8], %struct.loop_filter_info_n, i32, [4 x i32], %struct.loopfilter, %struct.segmentation, i8, [2 x i8], i32, %struct.frame_contexts*, %struct.frame_contexts*, i32, %struct.FRAME_COUNTS, i32, i32, i32, i32, i32, %struct.postproc_state, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i8*, i32, i32, [8 x i8] }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [8 x [4 x [2 x i8]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { i32, i32, i32, i32, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], %struct.LOOP_FILTER_MASK*, i32 }
%struct.LOOP_FILTER_MASK = type { [4 x i64], [4 x i64], i64, [4 x i16], [4 x i16], i16, [64 x i8] }
%struct.segmentation = type { i8, i8, i8, i8, i8, [7 x i8], [3 x i8], [8 x [4 x i16]], [8 x i32], i32 }
%struct.postproc_state = type { i32, i32, i32, i32, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i8*, i8* }
%struct.RefCntBuffer = type { i32, %struct.MV_REF*, i32, i32, i8, i32, i32, %struct.vpx_codec_frame_buffer, %struct.yv12_buffer_config }
%struct.MV_REF = type { [2 x %union.int_mv], [2 x i8] }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.VPxWorker = type { %struct.VPxWorkerImpl*, i32, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.VPxWorkerImpl = type opaque
%struct.TileWorkerData = type { i8*, i32, i32, %struct.vpx_reader, %struct.FRAME_COUNTS, %struct.LoopFilterWorkerData*, %struct.VP9LfSyncData*, [8 x i8], %struct.macroblockd, [1024 x i32], [25600 x i16], %struct.vpx_internal_error_info, [8 x i8] }
%struct.vpx_reader = type { i64, i32, i32, i8*, i8*, void (i8*, i8*, i8*, i32)*, i8*, [9 x i8] }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.VP9Common*, [3 x %struct.macroblockd_plane], i32, i32, i32 }
%struct.TileBuffer = type { i8*, i64, i32 }
%struct.VP9LfSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, %struct.LoopFilterWorkerData*, i32, i32, %union.pthread_mutex_t*, %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.4, %union.anon.6, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.4 = type { i64 }
%union.anon.6 = type { i64 }
%struct.RowMTWorkerData = type { i32, [3 x i32*], i32*, [3 x i32*], i8*, i8*, i8*, %struct.JobQueueRowMt, i64, i32, i32, %union.pthread_mutex_t, %union.pthread_mutex_t*, %union.pthread_cond_t*, %struct.ThreadData* }
%struct.JobQueueRowMt = type { i8*, i8*, i8*, i8*, i32, %union.pthread_mutex_t, %union.pthread_cond_t }
%struct.ThreadData = type { %struct.VP9Decoder*, %struct.LoopFilterWorkerData*, %struct.VP9LfSyncData* }
%struct.vp8_postproc_cfg = type { i32, i32, i32 }
%struct.BufferPool = type { i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, [12 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.vpx_codec_ctrl_fn_map = type { i32, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.vpx_codec_dec_iface = type { i32 (i8*, i32, %struct.vpx_codec_stream_info*)*, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_codec_stream_info*)*, i32 (%struct.vpx_codec_alg_priv*, i8*, i32, i8*, i64)*, %struct.vpx_image* (%struct.vpx_codec_alg_priv*, i8**)*, i32 (%struct.vpx_codec_alg_priv*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i8*)* }
%struct.vpx_codec_enc_iface = type { i32, %struct.vpx_codec_enc_cfg_map*, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_image*, i64, i64, i64, i64)*, %struct.vpx_codec_cx_pkt* (%struct.vpx_codec_alg_priv*, i8**)*, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_codec_enc_cfg*)*, %struct.vpx_fixed_buf* (%struct.vpx_codec_alg_priv*)*, %struct.vpx_image* (%struct.vpx_codec_alg_priv*)*, i32 (%struct.vpx_codec_enc_cfg*, i8**)* }
%struct.vpx_codec_enc_cfg_map = type { i32, %struct.vpx_codec_enc_cfg }
%struct.vpx_codec_enc_cfg = type { i32, i32, i32, i32, i32, i32, i32, %struct.vpx_rational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_fixed_buf, %struct.vpx_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i32], [5 x i32], i32, [5 x i32], [5 x i32], i32, [16 x i32], [12 x i32], i32 }
%struct.vp9_ppflags_t = type { i32, i32, i32 }
%struct.vpx_ref_frame = type { i32, %struct.vpx_image }
%struct.vpx_decrypt_init = type { void (i8*, i8*, i8*, i32)*, i8* }
%struct.vp9_ref_frame = type { i32, %struct.vpx_image }
%struct.vpx_read_bit_buffer = type { i8*, i8*, i64, i8*, void (i8*)* }

@vpx_codec_vp9_dx_algo = hidden constant %struct.vpx_codec_iface { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i32 0, i32 0), i32 5, i64 4456453, i32 (%struct.vpx_codec_ctx*, %struct.vpx_codec_priv_enc_mr_cfg*)* @decoder_init, i32 (%struct.vpx_codec_alg_priv*)* @decoder_destroy, %struct.vpx_codec_ctrl_fn_map* getelementptr inbounds ([18 x %struct.vpx_codec_ctrl_fn_map], [18 x %struct.vpx_codec_ctrl_fn_map]* @decoder_ctrl_maps, i32 0, i32 0), %struct.vpx_codec_dec_iface { i32 (i8*, i32, %struct.vpx_codec_stream_info*)* @decoder_peek_si, i32 (%struct.vpx_codec_alg_priv*, %struct.vpx_codec_stream_info*)* @decoder_get_si, i32 (%struct.vpx_codec_alg_priv*, i8*, i32, i8*, i64)* @decoder_decode, %struct.vpx_image* (%struct.vpx_codec_alg_priv*, i8**)* @decoder_get_frame, i32 (%struct.vpx_codec_alg_priv*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i8*)* @decoder_set_fb_fn }, %struct.vpx_codec_enc_iface zeroinitializer }, align 8
@.str = private unnamed_addr constant [47 x i8] c"WebM Project VP9 Decoder v1.9.0-147-g61edec1ef\00", align 1
@decoder_ctrl_maps = internal constant [18 x %struct.vpx_codec_ctrl_fn_map] [%struct.vpx_codec_ctrl_fn_map { i32 2, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_copy_reference }, %struct.vpx_codec_ctrl_fn_map { i32 1, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_reference }, %struct.vpx_codec_ctrl_fn_map { i32 3, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_postproc }, %struct.vpx_codec_ctrl_fn_map { i32 264, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_invert_tile_order }, %struct.vpx_codec_ctrl_fn_map { i32 259, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_decryptor }, %struct.vpx_codec_ctrl_fn_map { i32 263, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_byte_alignment }, %struct.vpx_codec_ctrl_fn_map { i32 265, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_skip_loop_filter }, %struct.vpx_codec_ctrl_fn_map { i32 266, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_spatial_layer_svc }, %struct.vpx_codec_ctrl_fn_map { i32 268, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_set_row_mt }, %struct.vpx_codec_ctrl_fn_map { i32 269, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_enable_lpf_opt }, %struct.vpx_codec_ctrl_fn_map { i32 267, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_quantizer }, %struct.vpx_codec_ctrl_fn_map { i32 256, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_last_ref_updates }, %struct.vpx_codec_ctrl_fn_map { i32 257, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_frame_corrupted }, %struct.vpx_codec_ctrl_fn_map { i32 128, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_reference }, %struct.vpx_codec_ctrl_fn_map { i32 261, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_render_size }, %struct.vpx_codec_ctrl_fn_map { i32 262, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_bit_depth }, %struct.vpx_codec_ctrl_fn_map { i32 260, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* @ctrl_get_frame_size }, %struct.vpx_codec_ctrl_fn_map { i32 -1, i32 (%struct.vpx_codec_alg_priv*, %struct.__va_list_tag*)* null }], align 16
@.str.1 = private unnamed_addr constant [28 x i8] c"Invalid frame size in index\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"Failed to allocate decoder\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"row_mt out of range [0..1]\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"lpf_opt out of range [0..1]\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"Failed to initialize internal frame buffers\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.vpx_codec_iface* @vpx_codec_vp9_dx() local_unnamed_addr #0 {
  ret %struct.vpx_codec_iface* @vpx_codec_vp9_dx_algo
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @decoder_init(%struct.vpx_codec_ctx* nocapture, %struct.vpx_codec_priv_enc_mr_cfg* nocapture readnone) #1 {
  %3 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 6
  %4 = load %struct.vpx_codec_priv*, %struct.vpx_codec_priv** %3, align 8
  %5 = icmp eq %struct.vpx_codec_priv* %4, null
  br i1 %5, label %6, label %26

6:                                                ; preds = %2
  %7 = tail call i8* @vpx_calloc(i64 1, i64 512) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %6
  %10 = bitcast %struct.vpx_codec_priv** %3 to i8**
  store i8* %7, i8** %10, align 8
  %11 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 228
  %16 = bitcast i8* %15 to i32*
  store i32 16, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 436
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %0, i64 0, i32 5, i32 0
  %20 = load %struct.vpx_codec_dec_cfg*, %struct.vpx_codec_dec_cfg** %19, align 8
  %21 = icmp eq %struct.vpx_codec_dec_cfg* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds i8, i8* %7, i64 216
  %24 = bitcast %struct.vpx_codec_dec_cfg* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 4 %24, i64 12, i1 false)
  %25 = bitcast %struct.vpx_codec_dec_cfg** %19 to i8**
  store i8* %23, i8** %25, align 8
  br label %26

26:                                               ; preds = %6, %2, %22, %9
  %27 = phi i32 [ 0, %9 ], [ 0, %22 ], [ 0, %2 ], [ 2, %6 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @decoder_destroy(%struct.vpx_codec_alg_priv*) #1 {
  %2 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %3 = load %struct.VP9Decoder*, %struct.VP9Decoder** %2, align 8
  %4 = icmp eq %struct.VP9Decoder* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @vp9_decoder_remove(%struct.VP9Decoder* nonnull %3) #7
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 17
  %8 = load %struct.BufferPool*, %struct.BufferPool** %7, align 8
  %9 = icmp eq %struct.BufferPool* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %struct.BufferPool* %8 to i8*
  br label %17

12:                                               ; preds = %6
  tail call void @vp9_free_ref_frame_buffers(%struct.BufferPool* nonnull %8) #7
  %13 = load %struct.BufferPool*, %struct.BufferPool** %7, align 8
  %14 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %13, i64 0, i32 4
  tail call void @vp9_free_internal_frame_buffers(%struct.InternalFrameBufferList* %14) #7
  %15 = bitcast %struct.BufferPool** %7 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %10, %12
  %18 = phi i8* [ %11, %10 ], [ %16, %12 ]
  tail call void @vpx_free(i8* %18) #7
  %19 = bitcast %struct.vpx_codec_alg_priv* %0 to i8*
  tail call void @vpx_free(i8* %19) #7
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @decoder_peek_si(i8*, i32, %struct.vpx_codec_stream_info*) #1 {
  %4 = tail call fastcc i32 @decoder_peek_si_internal(i8* %0, i32 %1, %struct.vpx_codec_stream_info* %2, i32* null, void (i8*, i8*, i8*, i32)* null, i8* null)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @decoder_get_si(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.vpx_codec_stream_info* nocapture) #1 {
  %3 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %1, i64 0, i32 0
  %4 = bitcast %struct.vpx_codec_stream_info* %1 to i8*
  %5 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 2
  %6 = bitcast %struct.vpx_codec_stream_info* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %6, i64 16, i1 false)
  store i32 16, i32* %3, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @decoder_decode(%struct.vpx_codec_alg_priv*, i8*, i32, i8*, i64) #1 {
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca [8 x i32], align 16
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  store i8* %1, i8** %7, align 8
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = bitcast [8 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #7
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 0
  %16 = bitcast i32* %9 to i8*
  %17 = bitcast [8 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #7
  store i32 -1431655766, i32* %9, align 4
  %18 = icmp eq i8* %1, null
  %19 = icmp eq i32 %2, 0
  %20 = and i1 %18, %19
  %21 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 11
  br i1 %20, label %22, label %23

22:                                               ; preds = %5
  store i32 1, i32* %21, align 4
  br label %204

23:                                               ; preds = %5
  store i32 0, i32* %21, align 4
  %24 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %25 = load %struct.VP9Decoder*, %struct.VP9Decoder** %24, align 8
  %26 = icmp eq %struct.VP9Decoder* %25, null
  br i1 %26, label %27, label %114

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 13
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 16
  store i32 1, i32* %29, align 8
  store i32 0, i32* %21, align 4
  %30 = tail call i8* @vpx_calloc(i64 1, i64 2728) #7
  %31 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 17
  %32 = bitcast %struct.BufferPool** %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = icmp eq i8* %30, null
  br i1 %33, label %204, label %34

34:                                               ; preds = %27
  %35 = bitcast i8* %30 to %struct.BufferPool*
  %36 = tail call %struct.VP9Decoder* @vp9_decoder_create(%struct.BufferPool* nonnull %35) #7
  store %struct.VP9Decoder* %36, %struct.VP9Decoder** %24, align 8
  %37 = icmp eq %struct.VP9Decoder* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8** %39, align 8
  br label %204

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %36, i64 0, i32 14
  store i32 %42, i32* %43, align 16
  %44 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 12
  %45 = load i32, i32* %44, align 8
  %46 = load %struct.VP9Decoder*, %struct.VP9Decoder** %24, align 8
  %47 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %46, i64 0, i32 15
  store i32 %45, i32* %47, align 4
  %48 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 23
  %49 = load i32, i32* %48, align 8
  %50 = icmp ult i32 %49, 2
  br i1 %50, label %53, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8** %52, align 8
  br label %204

53:                                               ; preds = %40
  %54 = load %struct.VP9Decoder*, %struct.VP9Decoder** %24, align 8
  %55 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %54, i64 0, i32 18
  store i32 %49, i32* %55, align 16
  %56 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 24
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %57, 2
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8** %60, align 8
  br label %204

61:                                               ; preds = %53
  %62 = load %struct.VP9Decoder*, %struct.VP9Decoder** %24, align 8
  %63 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %62, i64 0, i32 19
  store i32 %57, i32* %63, align 4
  %64 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %76

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 65536
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 6, i32 0
  store i32 3, i32* %73, align 4
  %74 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 6, i32 1
  store i32 4, i32* %74, align 4
  %75 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 6, i32 2
  store i32 0, i32* %75, align 4
  br label %76

76:                                               ; preds = %72, %67, %61
  %77 = load %struct.VP9Decoder*, %struct.VP9Decoder** %24, align 8
  %78 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %77, i64 0, i32 1, i32 89
  %79 = load %struct.BufferPool*, %struct.BufferPool** %78, align 8
  %80 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %77, i64 0, i32 1, i32 18
  store i32 -1, i32* %80, align 16
  %81 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 14
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %77, i64 0, i32 1, i32 87
  store i32 %82, i32* %83, align 16
  %84 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 15
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %77, i64 0, i32 1, i32 88
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 19
  %88 = load i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)** %87, align 8
  %89 = icmp eq i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* %88, null
  br i1 %89, label %104, label %90

90:                                               ; preds = %76
  %91 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 20
  %92 = load i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)** %91, align 8
  %93 = icmp eq i32 (i8*, %struct.vpx_codec_frame_buffer*)* %92, null
  br i1 %93, label %104, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %79, i64 0, i32 1
  store i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* %88, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)** %95, align 8
  %96 = bitcast i32 (i8*, %struct.vpx_codec_frame_buffer*)** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %79, i64 0, i32 2
  %99 = bitcast i32 (i8*, %struct.vpx_codec_frame_buffer*)** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 18
  %101 = bitcast i8** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %struct.BufferPool* %79 to i64*
  store i64 %102, i64* %103, align 8
  br label %114

104:                                              ; preds = %90, %76
  %105 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %79, i64 0, i32 1
  store i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* @vp9_get_frame_buffer, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)** %105, align 8
  %106 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %79, i64 0, i32 2
  store i32 (i8*, %struct.vpx_codec_frame_buffer*)* @vp9_release_frame_buffer, i32 (i8*, %struct.vpx_codec_frame_buffer*)** %106, align 8
  %107 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %79, i64 0, i32 4
  %108 = tail call i32 @vp9_alloc_internal_frame_buffers(%struct.InternalFrameBufferList* %107) #7
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %77, i64 0, i32 1, i32 0
  tail call void (%struct.vpx_internal_error_info*, i32, i8*, ...) @vpx_internal_error(%struct.vpx_internal_error_info* %111, i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %112

112:                                              ; preds = %110, %104
  %113 = bitcast %struct.BufferPool* %79 to %struct.InternalFrameBufferList**
  store %struct.InternalFrameBufferList* %107, %struct.InternalFrameBufferList** %113, align 8
  br label %114

114:                                              ; preds = %94, %112, %23
  %115 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 7
  %116 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %115, align 8
  %117 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 8
  %118 = load i8*, i8** %117, align 8
  %119 = call i32 @vp9_parse_superframe_index(i8* %1, i64 %12, i32* nonnull %15, i32* nonnull %9, void (i8*, i8*, i8*, i32)* %116, i8* %118) #7
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %204

121:                                              ; preds = %114
  %122 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 21
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 22
  %127 = load i32, i32* %126, align 4
  %128 = load i32, i32* %9, align 4
  %129 = add nsw i32 %128, -1
  %130 = icmp slt i32 %127, %129
  br i1 %130, label %131, label %135

131:                                              ; preds = %125
  %132 = add nsw i32 %127, 1
  store i32 %132, i32* %9, align 4
  br label %135

133:                                              ; preds = %121
  %134 = load i32, i32* %9, align 4
  br label %135

135:                                              ; preds = %133, %131, %125
  %136 = phi i32 [ %134, %133 ], [ %132, %131 ], [ %128, %125 ]
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %135
  %139 = ptrtoint i8* %13 to i64
  %140 = load i8*, i8** %7, align 8
  %141 = icmp ult i8* %140, %13
  br i1 %141, label %175, label %204

142:                                              ; preds = %135
  %143 = bitcast i8** %10 to i8*
  %144 = bitcast i8** %7 to i64*
  %145 = bitcast i8** %10 to i64*
  %146 = ptrtoint i8* %13 to i64
  %147 = load i64, i64* %144, align 8
  br label %148

148:                                              ; preds = %142, %164
  %149 = phi i64 [ %147, %142 ], [ %172, %164 ]
  %150 = phi i64 [ 0, %142 ], [ %168, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #7
  store i64 %149, i64* %145, align 8
  %151 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = inttoptr i64 %149 to i8*
  %154 = icmp ult i8* %153, %1
  br i1 %154, label %159, label %155

155:                                              ; preds = %148
  %156 = sub i64 %146, %149
  %157 = trunc i64 %156 to i32
  %158 = icmp ugt i32 %152, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %155, %148
  %160 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8** %160, align 8
  br label %173

161:                                              ; preds = %155
  %162 = call fastcc i32 @decode_one(%struct.vpx_codec_alg_priv* %0, i8** nonnull %10, i32 %152, i8* %3)
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %173

164:                                              ; preds = %161
  %165 = load i8*, i8** %7, align 8
  %166 = zext i32 %152 to i64
  %167 = getelementptr inbounds i8, i8* %165, i64 %166
  store i8* %167, i8** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #7
  %168 = add nuw nsw i64 %150, 1
  %169 = load i32, i32* %9, align 4
  %170 = sext i32 %169 to i64
  %171 = icmp slt i64 %168, %170
  %172 = ptrtoint i8* %167 to i64
  br i1 %171, label %148, label %204

173:                                              ; preds = %161, %159
  %174 = phi i32 [ 7, %159 ], [ %162, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #7
  br label %204

175:                                              ; preds = %138, %201
  %176 = phi i8* [ %202, %201 ], [ %140, %138 ]
  %177 = ptrtoint i8* %176 to i64
  %178 = sub i64 %139, %177
  %179 = trunc i64 %178 to i32
  %180 = call fastcc i32 @decode_one(%struct.vpx_codec_alg_priv* %0, i8** nonnull %7, i32 %179, i8* %3)
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %204

182:                                              ; preds = %175
  %183 = load i8*, i8** %7, align 8
  %184 = icmp ult i8* %183, %13
  br i1 %184, label %185, label %201

185:                                              ; preds = %182, %198
  %186 = phi i8* [ %199, %198 ], [ %183, %182 ]
  %187 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %115, align 8
  %188 = icmp eq void (i8*, i8*, i8*, i32)* %187, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %185
  %190 = load i8*, i8** %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #7
  store i8 -86, i8* %6, align 1
  call void %187(i8* %190, i8* %186, i8* nonnull %6, i32 1) #7
  %191 = load i8, i8* %6, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #7
  br label %194

192:                                              ; preds = %185
  %193 = load i8, i8* %186, align 1
  br label %194

194:                                              ; preds = %189, %192
  %195 = phi i8 [ %191, %189 ], [ %193, %192 ]
  %196 = icmp eq i8 %195, 0
  %197 = load i8*, i8** %7, align 8
  br i1 %196, label %198, label %201

198:                                              ; preds = %194
  %199 = getelementptr inbounds i8, i8* %197, i64 1
  store i8* %199, i8** %7, align 8
  %200 = icmp ult i8* %199, %13
  br i1 %200, label %185, label %201

201:                                              ; preds = %198, %194, %182
  %202 = phi i8* [ %183, %182 ], [ %197, %194 ], [ %199, %198 ]
  %203 = icmp ult i8* %202, %13
  br i1 %203, label %175, label %204

204:                                              ; preds = %201, %175, %164, %138, %173, %27, %51, %59, %38, %114, %22
  %205 = phi i32 [ 0, %22 ], [ %174, %173 ], [ %119, %114 ], [ 2, %27 ], [ 8, %51 ], [ 8, %59 ], [ 2, %38 ], [ 0, %138 ], [ 0, %164 ], [ 0, %201 ], [ %180, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  ret i32 %205
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.vpx_image* @decoder_get_frame(%struct.vpx_codec_alg_priv*, i8** nocapture readnone) #1 {
  %3 = alloca %struct.yv12_buffer_config, align 8
  %4 = alloca %struct.vp9_ppflags_t, align 4
  %5 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %6 = load %struct.VP9Decoder*, %struct.VP9Decoder** %5, align 8
  %7 = icmp eq %struct.VP9Decoder* %6, null
  br i1 %7, label %51, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.yv12_buffer_config* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 160, i1 false)
  %10 = bitcast %struct.vp9_ppflags_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 12, i1 false)
  %11 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 65536
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 6, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.vp9_ppflags_t, %struct.vp9_ppflags_t* %4, i64 0, i32 0
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 6, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.vp9_ppflags_t, %struct.vp9_ppflags_t* %4, i64 0, i32 1
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 6, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.vp9_ppflags_t, %struct.vp9_ppflags_t* %4, i64 0, i32 2
  store i32 %23, i32* %24, align 4
  br label %25

25:                                               ; preds = %8, %15
  %26 = call i32 @vp9_get_raw_frame(%struct.VP9Decoder* nonnull %6, %struct.yv12_buffer_config* nonnull %3, %struct.vp9_ppflags_t* nonnull %4) #7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %25
  %29 = load %struct.VP9Decoder*, %struct.VP9Decoder** %5, align 8
  %30 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %29, i64 0, i32 1, i32 89
  %31 = load %struct.BufferPool*, %struct.BufferPool** %30, align 8
  %32 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %29, i64 0, i32 1, i32 18
  %33 = load i32, i32* %32, align 16
  %34 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 13
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 16
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 9
  %40 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 4
  %41 = load i8*, i8** %40, align 8
  call void @yuvconfig2image(%struct.vpx_image* %39, %struct.yv12_buffer_config* nonnull %3, i8* %41) #7
  %42 = load i32, i32* %32, align 16
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %31, i64 0, i32 3, i64 %43, i32 7, i32 2
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 9, i32 19
  %48 = bitcast i8** %47 to i64*
  store i64 %46, i64* %48, align 8
  br label %49

49:                                               ; preds = %25, %38, %28
  %50 = phi %struct.vpx_image* [ null, %28 ], [ %39, %38 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %9) #7
  br label %51

51:                                               ; preds = %49, %2
  %52 = phi %struct.vpx_image* [ null, %2 ], [ %50, %49 ]
  ret %struct.vpx_image* %52
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @decoder_set_fb_fn(%struct.vpx_codec_alg_priv* nocapture, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, i8*) #2 {
  %5 = icmp eq i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* %1, null
  %6 = icmp eq i32 (i8*, %struct.vpx_codec_frame_buffer*)* %2, null
  %7 = or i1 %5, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %10 = load %struct.VP9Decoder*, %struct.VP9Decoder** %9, align 8
  %11 = icmp eq %struct.VP9Decoder* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 19
  store i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)* %1, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)** %13, align 8
  %14 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 20
  store i32 (i8*, %struct.vpx_codec_frame_buffer*)* %2, i32 (i8*, %struct.vpx_codec_frame_buffer*)** %14, align 8
  %15 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 18
  store i8* %3, i8** %15, align 8
  br label %16

16:                                               ; preds = %8, %4, %12
  %17 = phi i32 [ 0, %12 ], [ 8, %4 ], [ 1, %8 ]
  ret i32 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i8* @vpx_calloc(i64, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @vp9_decoder_remove(%struct.VP9Decoder*) local_unnamed_addr #4

declare void @vp9_free_ref_frame_buffers(%struct.BufferPool*) local_unnamed_addr #4

declare void @vp9_free_internal_frame_buffers(%struct.InternalFrameBufferList*) local_unnamed_addr #4

declare void @vpx_free(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_copy_reference(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #1 {
  %3 = alloca %struct.yv12_buffer_config, align 8
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 41
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr i8, i8* %9, i64 %10
  %12 = add nuw nsw i32 %5, 8
  store i32 %12, i32* %4, align 8
  br label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 8
  store i8* %16, i8** %14, align 8
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i8* [ %11, %7 ], [ %15, %13 ]
  %19 = bitcast i8* %18 to %struct.vpx_ref_frame**
  %20 = load %struct.vpx_ref_frame*, %struct.vpx_ref_frame** %19, align 8
  %21 = icmp eq %struct.vpx_ref_frame* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %17
  %23 = bitcast %struct.yv12_buffer_config* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 160, i1 false)
  %24 = getelementptr inbounds %struct.vpx_ref_frame, %struct.vpx_ref_frame* %20, i64 0, i32 1
  %25 = call i32 @image2yuvconfig(%struct.vpx_image* %24, %struct.yv12_buffer_config* nonnull %3) #7
  %26 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %27 = load %struct.VP9Decoder*, %struct.VP9Decoder** %26, align 8
  %28 = getelementptr inbounds %struct.vpx_ref_frame, %struct.vpx_ref_frame* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = call i32 @vp9_copy_reference_dec(%struct.VP9Decoder* %27, i32 %29, %struct.yv12_buffer_config* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %23) #7
  br label %31

31:                                               ; preds = %17, %22
  %32 = phi i32 [ %30, %22 ], [ 8, %17 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_reference(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #1 {
  %3 = alloca %struct.yv12_buffer_config, align 8
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 41
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr i8, i8* %9, i64 %10
  %12 = add nuw nsw i32 %5, 8
  store i32 %12, i32* %4, align 8
  br label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 8
  store i8* %16, i8** %14, align 8
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i8* [ %11, %7 ], [ %15, %13 ]
  %19 = bitcast i8* %18 to %struct.vpx_ref_frame**
  %20 = load %struct.vpx_ref_frame*, %struct.vpx_ref_frame** %19, align 8
  %21 = icmp eq %struct.vpx_ref_frame* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %17
  %23 = bitcast %struct.yv12_buffer_config* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 160, i1 false)
  %24 = getelementptr inbounds %struct.vpx_ref_frame, %struct.vpx_ref_frame* %20, i64 0, i32 1
  %25 = call i32 @image2yuvconfig(%struct.vpx_image* %24, %struct.yv12_buffer_config* nonnull %3) #7
  %26 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %27 = load %struct.VP9Decoder*, %struct.VP9Decoder** %26, align 8
  %28 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %27, i64 0, i32 1
  %29 = getelementptr inbounds %struct.vpx_ref_frame, %struct.vpx_ref_frame* %20, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 2
  %32 = select i1 %31, i32 2, i32 1
  %33 = icmp eq i32 %30, 4
  %34 = select i1 %33, i32 4, i32 %32
  %35 = call i32 @vp9_set_reference_dec(%struct.VP9Common* %28, i32 %34, %struct.yv12_buffer_config* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %23) #7
  br label %36

36:                                               ; preds = %17, %22
  %37 = phi i32 [ %35, %22 ], [ 8, %17 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_set_postproc(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #1 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.vp8_postproc_cfg**
  %19 = load %struct.vp8_postproc_cfg*, %struct.vp8_postproc_cfg** %18, align 8
  %20 = icmp eq %struct.vp8_postproc_cfg* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 5
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 6
  %24 = bitcast %struct.vp8_postproc_cfg* %23 to i8*
  %25 = bitcast %struct.vp8_postproc_cfg* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %25, i64 12, i1 false)
  br label %26

26:                                               ; preds = %16, %21
  %27 = phi i32 [ 0, %21 ], [ 8, %16 ]
  ret i32 %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_invert_tile_order(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 12
  store i32 %19, i32* %20, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_decryptor(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.vpx_decrypt_init**
  %19 = load %struct.vpx_decrypt_init*, %struct.vpx_decrypt_init** %18, align 8
  %20 = icmp eq %struct.vpx_decrypt_init* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = bitcast %struct.vpx_decrypt_init* %19 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 7
  %25 = bitcast void (i8*, i8*, i8*, i32)** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %struct.vpx_decrypt_init, %struct.vpx_decrypt_init* %19, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8
  br label %30

28:                                               ; preds = %16
  %29 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 7
  store void (i8*, i8*, i8*, i32)* null, void (i8*, i8*, i8*, i32)** %29, align 8
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i8* [ %27, %21 ], [ null, %28 ]
  %32 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 8
  store i8* %31, i8** %32, align 8
  ret i32 0
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @ctrl_set_byte_alignment(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #5 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = add i32 %19, -32
  %23 = icmp ugt i32 %22, 992
  %24 = tail call i32 @llvm.ctpop.i32(i32 %19), !range !2
  %25 = icmp ugt i32 %24, 1
  %26 = or i1 %23, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %21, %16
  %28 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 14
  store i32 %19, i32* %28, align 8
  %29 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %30 = load %struct.VP9Decoder*, %struct.VP9Decoder** %29, align 8
  %31 = icmp eq %struct.VP9Decoder* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %30, i64 0, i32 1, i32 87
  store i32 %19, i32* %33, align 16
  br label %34

34:                                               ; preds = %32, %27, %21
  %35 = phi i32 [ 8, %21 ], [ 0, %27 ], [ 0, %32 ]
  ret i32 %35
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_skip_loop_filter(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 15
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %22 = load %struct.VP9Decoder*, %struct.VP9Decoder** %21, align 8
  %23 = icmp eq %struct.VP9Decoder* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %22, i64 0, i32 1, i32 88
  store i32 %19, i32* %25, align 4
  br label %26

26:                                               ; preds = %16, %24
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_spatial_layer_svc(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 21
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 41
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %5 to i64
  %11 = getelementptr i8, i8* %9, i64 %10
  %12 = add nuw nsw i32 %5, 8
  store i32 %12, i32* %4, align 8
  br label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr i8, i8* %15, i64 8
  store i8* %16, i8** %14, align 8
  br label %17

17:                                               ; preds = %13, %7
  %18 = phi i8* [ %11, %7 ], [ %15, %13 ]
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 22
  store i32 %20, i32* %21, align 4
  %22 = lshr i32 %20, 28
  %23 = and i32 %22, 8
  ret i32 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_set_row_mt(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 23
  store i32 %19, i32* %20, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_enable_lpf_opt(%struct.vpx_codec_alg_priv* nocapture, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 24
  store i32 %19, i32* %20, align 4
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_quantizer(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %23 = load %struct.VP9Decoder*, %struct.VP9Decoder** %22, align 8
  %24 = icmp eq %struct.VP9Decoder* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 38
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %19, align 4
  br label %28

28:                                               ; preds = %16, %21, %25
  %29 = phi i32 [ 0, %25 ], [ 8, %21 ], [ 8, %16 ]
  ret i32 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_last_ref_updates(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %23 = load %struct.VP9Decoder*, %struct.VP9Decoder** %22, align 8
  %24 = icmp eq %struct.VP9Decoder* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %19, align 4
  br label %28

28:                                               ; preds = %16, %21, %25
  %29 = phi i32 [ 0, %25 ], [ 1, %21 ], [ 8, %16 ]
  ret i32 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_frame_corrupted(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %39, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %23 = load %struct.VP9Decoder*, %struct.VP9Decoder** %22, align 8
  %24 = icmp eq %struct.VP9Decoder* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 89
  %27 = load %struct.BufferPool*, %struct.BufferPool** %26, align 8
  %28 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 12
  %29 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %28, align 8
  %30 = icmp eq %struct.yv12_buffer_config* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 13
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, -1
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = sext i32 %33 to i64
  %37 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %27, i64 0, i32 3, i64 %36, i32 8, i32 28
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %19, align 4
  br label %39

39:                                               ; preds = %16, %21, %25, %35, %31
  %40 = phi i32 [ 1, %25 ], [ 0, %35 ], [ 0, %31 ], [ 1, %21 ], [ 8, %16 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ctrl_get_reference(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #1 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to %struct.vp9_ref_frame**
  %19 = load %struct.vp9_ref_frame*, %struct.vp9_ref_frame** %18, align 8
  %20 = icmp eq %struct.vp9_ref_frame* %19, null
  br i1 %20, label %41, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %23 = load %struct.VP9Decoder*, %struct.VP9Decoder** %22, align 8
  %24 = icmp eq %struct.VP9Decoder* %23, null
  br i1 %24, label %41, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 19
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, 11
  br i1 %28, label %41, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 0, i32 0
  %31 = load i32, i32* %30, align 16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 89
  %35 = load %struct.BufferPool*, %struct.BufferPool** %34, align 8
  %36 = sext i32 %27 to i64
  %37 = getelementptr inbounds %struct.BufferPool, %struct.BufferPool* %35, i64 0, i32 3, i64 %36, i32 8
  %38 = icmp eq %struct.yv12_buffer_config* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.vp9_ref_frame, %struct.vp9_ref_frame* %19, i64 0, i32 1
  tail call void @yuvconfig2image(%struct.vpx_image* %40, %struct.yv12_buffer_config* nonnull %37, i8* null) #7
  br label %41

41:                                               ; preds = %29, %25, %16, %21, %39, %33
  %42 = phi i32 [ 0, %39 ], [ 1, %33 ], [ 1, %21 ], [ 8, %16 ], [ 1, %25 ], [ 1, %29 ]
  ret i32 %42
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_render_size(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %23 = load %struct.VP9Decoder*, %struct.VP9Decoder** %22, align 8
  %24 = icmp eq %struct.VP9Decoder* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 5
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %19, align 4
  %28 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 6
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %19, i64 1
  store i32 %29, i32* %30, align 4
  br label %31

31:                                               ; preds = %16, %21, %25
  %32 = phi i32 [ 0, %25 ], [ 1, %21 ], [ 8, %16 ]
  ret i32 %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_bit_depth(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %23 = load %struct.VP9Decoder*, %struct.VP9Decoder** %22, align 8
  %24 = icmp eq %struct.VP9Decoder* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 80
  %27 = load i32, i32* %26, align 16
  store i32 %27, i32* %19, align 4
  br label %28

28:                                               ; preds = %16, %21, %25
  %29 = phi i32 [ 0, %25 ], [ 1, %21 ], [ 8, %16 ]
  ret i32 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @ctrl_get_frame_size(%struct.vpx_codec_alg_priv* nocapture readonly, %struct.__va_list_tag* nocapture) #2 {
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 41
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr i8, i8* %8, i64 %9
  %11 = add nuw nsw i32 %4, 8
  store i32 %11, i32* %3, align 8
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 8
  store i8* %15, i8** %13, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i8* [ %10, %6 ], [ %14, %12 ]
  %18 = bitcast i8* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %23 = load %struct.VP9Decoder*, %struct.VP9Decoder** %22, align 8
  %24 = icmp eq %struct.VP9Decoder* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 3
  %27 = load i32, i32* %26, align 16
  store i32 %27, i32* %19, align 4
  %28 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %23, i64 0, i32 1, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds i32, i32* %19, i64 1
  store i32 %29, i32* %30, align 4
  br label %31

31:                                               ; preds = %16, %21, %25
  %32 = phi i32 [ 0, %25 ], [ 1, %21 ], [ 8, %16 ]
  ret i32 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @image2yuvconfig(%struct.vpx_image*, %struct.yv12_buffer_config*) local_unnamed_addr #4

declare i32 @vp9_copy_reference_dec(%struct.VP9Decoder*, i32, %struct.yv12_buffer_config*) local_unnamed_addr #4

declare i32 @vp9_set_reference_dec(%struct.VP9Common*, i32, %struct.yv12_buffer_config*) local_unnamed_addr #4

declare void @yuvconfig2image(%struct.vpx_image*, %struct.yv12_buffer_config*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @decoder_peek_si_internal(i8*, i32, %struct.vpx_codec_stream_info*, i32*, void (i8*, i8*, i8*, i32)*, i8*) unnamed_addr #1 {
  %7 = alloca [11 x i8], align 1
  %8 = alloca %struct.vpx_read_bit_buffer, align 8
  %9 = getelementptr inbounds [11 x i8], [11 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %9) #7
  %10 = icmp eq i32 %1, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %9, i8 -86, i64 11, i1 false)
  br i1 %10, label %133, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %2, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %2, i64 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.vpx_codec_stream_info, %struct.vpx_codec_stream_info* %2, i64 0, i32 1
  store i32 0, i32* %14, align 4
  %15 = icmp eq void (i8*, i8*, i8*, i32)* %4, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = icmp ult i32 %1, 11
  %18 = select i1 %17, i32 %1, i32 11
  call void %4(i8* %5, i8* %0, i8* nonnull %9, i32 %18) #7
  br label %19

19:                                               ; preds = %16, %11
  %20 = phi i32 [ %18, %16 ], [ %1, %11 ]
  %21 = phi i8* [ %9, %16 ], [ %0, %11 ]
  %22 = bitcast %struct.vpx_read_bit_buffer* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #7
  %23 = getelementptr inbounds %struct.vpx_read_bit_buffer, %struct.vpx_read_bit_buffer* %8, i64 0, i32 0
  %24 = getelementptr inbounds %struct.vpx_read_bit_buffer, %struct.vpx_read_bit_buffer* %8, i64 0, i32 1
  %25 = getelementptr inbounds %struct.vpx_read_bit_buffer, %struct.vpx_read_bit_buffer* %8, i64 0, i32 2
  store i8* %21, i8** %23, align 8
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds i8, i8* %21, i64 %26
  store i8* %27, i8** %24, align 8
  %28 = bitcast i64* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false)
  %29 = call i32 @vpx_rb_read_literal(%struct.vpx_read_bit_buffer* nonnull %8, i32 2) #7
  %30 = call i32 @vp9_read_profile(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %31 = icmp ne i32 %29, 2
  %32 = icmp ugt i32 %30, 3
  %33 = or i1 %31, %32
  br i1 %33, label %127, label %34

34:                                               ; preds = %19
  %35 = call i32 @vpx_rb_read_bit(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = icmp ugt i32 %30, 2
  %39 = icmp ult i32 %20, 2
  %40 = and i1 %39, %38
  br i1 %40, label %127, label %41

41:                                               ; preds = %37
  %42 = call i32 @vpx_rb_read_literal(%struct.vpx_read_bit_buffer* nonnull %8, i32 3) #7
  br label %127

43:                                               ; preds = %34
  %44 = icmp ult i32 %20, 10
  br i1 %44, label %127, label %45

45:                                               ; preds = %43
  %46 = call i32 @vpx_rb_read_bit(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %47 = icmp eq i32 %46, 0
  %48 = zext i1 %47 to i32
  store i32 %48, i32* %12, align 4
  %49 = call i32 @vpx_rb_read_bit(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %50 = call i32 @vpx_rb_read_bit(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %51 = load i32, i32* %12, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %80, label %53

53:                                               ; preds = %45
  %54 = call i32 @vp9_read_sync_code(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %127, label %56

56:                                               ; preds = %53
  %57 = icmp ugt i32 %30, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = load i64, i64* %25, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %25, align 8
  br label %61

61:                                               ; preds = %58, %56
  %62 = call i32 @vpx_rb_read_literal(%struct.vpx_read_bit_buffer* nonnull %8, i32 3) #7
  %63 = icmp eq i32 %62, 7
  br i1 %63, label %71, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %25, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %25, align 8
  %67 = or i32 %30, 2
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %69, label %79

69:                                               ; preds = %64
  %70 = add i64 %65, 4
  br label %77

71:                                               ; preds = %61
  %72 = or i32 %30, 2
  %73 = icmp eq i32 %72, 3
  br i1 %73, label %74, label %127

74:                                               ; preds = %71
  %75 = load i64, i64* %25, align 8
  %76 = add i64 %75, 1
  br label %77

77:                                               ; preds = %74, %69
  %78 = phi i64 [ %70, %69 ], [ %76, %74 ]
  store i64 %78, i64* %25, align 8
  br label %79

79:                                               ; preds = %77, %64
  call void @vp9_read_frame_size(%struct.vpx_read_bit_buffer* nonnull %8, i32* %14, i32* %13) #7
  br label %129

80:                                               ; preds = %45
  %81 = icmp eq i32 %49, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = icmp eq i32 %50, 0
  %84 = select i1 %83, i64 2, i64 0
  %85 = load i64, i64* %25, align 8
  %86 = add i64 %85, %84
  store i64 %86, i64* %25, align 8
  br label %129

87:                                               ; preds = %80
  %88 = call i32 @vpx_rb_read_bit(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %89 = icmp eq i32 %50, 0
  %90 = select i1 %89, i64 2, i64 0
  %91 = load i64, i64* %25, align 8
  %92 = add i64 %91, %90
  store i64 %92, i64* %25, align 8
  %93 = icmp eq i32 %88, 0
  br i1 %93, label %129, label %94

94:                                               ; preds = %87
  %95 = call i32 @vp9_read_sync_code(%struct.vpx_read_bit_buffer* nonnull %8) #7
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %127, label %97

97:                                               ; preds = %94
  switch i32 %30, label %100 [
    i32 0, label %98
    i32 1, label %103
  ]

98:                                               ; preds = %97
  %99 = load i64, i64* %25, align 8
  br label %124

100:                                              ; preds = %97
  %101 = load i64, i64* %25, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %25, align 8
  br label %103

103:                                              ; preds = %97, %100
  %104 = call i32 @vpx_rb_read_literal(%struct.vpx_read_bit_buffer* nonnull %8, i32 3) #7
  %105 = icmp eq i32 %104, 7
  br i1 %105, label %113, label %106

106:                                              ; preds = %103
  %107 = load i64, i64* %25, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %25, align 8
  %109 = or i32 %30, 2
  %110 = icmp eq i32 %109, 3
  br i1 %110, label %111, label %121

111:                                              ; preds = %106
  %112 = add i64 %107, 4
  br label %119

113:                                              ; preds = %103
  %114 = or i32 %30, 2
  %115 = icmp eq i32 %114, 3
  br i1 %115, label %116, label %127

116:                                              ; preds = %113
  %117 = load i64, i64* %25, align 8
  %118 = add i64 %117, 1
  br label %119

119:                                              ; preds = %116, %111
  %120 = phi i64 [ %112, %111 ], [ %118, %116 ]
  store i64 %120, i64* %25, align 8
  br label %121

121:                                              ; preds = %119, %106
  %122 = phi i64 [ %108, %106 ], [ %120, %119 ]
  %123 = icmp ult i32 %20, 11
  br i1 %123, label %127, label %124

124:                                              ; preds = %98, %121
  %125 = phi i64 [ %99, %98 ], [ %122, %121 ]
  %126 = add i64 %125, 8
  store i64 %126, i64* %25, align 8
  call void @vp9_read_frame_size(%struct.vpx_read_bit_buffer* nonnull %8, i32* %14, i32* %13) #7
  br label %129

127:                                              ; preds = %41, %19, %37, %43, %53, %94, %121, %71, %113
  %128 = phi i32 [ 5, %71 ], [ 5, %121 ], [ 5, %94 ], [ 5, %53 ], [ 5, %43 ], [ 5, %37 ], [ 5, %19 ], [ 0, %41 ], [ 5, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #7
  br label %133

129:                                              ; preds = %87, %124, %79, %82
  %130 = phi i32 [ 0, %79 ], [ %88, %124 ], [ 0, %87 ], [ 0, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #7
  %131 = icmp eq i32* %3, null
  br i1 %131, label %133, label %132

132:                                              ; preds = %129
  store i32 %130, i32* %3, align 4
  br label %133

133:                                              ; preds = %127, %132, %129, %6
  %134 = phi i32 [ 8, %6 ], [ 0, %129 ], [ 0, %132 ], [ %128, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %9) #7
  ret i32 %134
}

declare i32 @vpx_rb_read_literal(%struct.vpx_read_bit_buffer*, i32) local_unnamed_addr #4

declare i32 @vp9_read_profile(%struct.vpx_read_bit_buffer*) local_unnamed_addr #4

declare i32 @vpx_rb_read_bit(%struct.vpx_read_bit_buffer*) local_unnamed_addr #4

declare i32 @vp9_read_sync_code(%struct.vpx_read_bit_buffer*) local_unnamed_addr #4

declare void @vp9_read_frame_size(%struct.vpx_read_bit_buffer*, i32*, i32*) local_unnamed_addr #4

declare i32 @vp9_parse_superframe_index(i8*, i64, i32*, i32*, void (i8*, i8*, i8*, i32)*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @decode_one(%struct.vpx_codec_alg_priv*, i8**, i32, i8*) unnamed_addr #1 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 2, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 2
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  store i32 0, i32* %5, align 4
  %12 = load i8*, i8** %1, align 8
  %13 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 7
  %14 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %13, align 8
  %15 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 8
  %16 = load i8*, i8** %15, align 8
  %17 = call fastcc i32 @decoder_peek_si_internal(i8* %12, i32 %2, %struct.vpx_codec_stream_info* %10, i32* nonnull %5, void (i8*, i8*, i8*, i32)* %14, i8* %16)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  br label %82

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 2, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %5, align 4
  %24 = or i32 %23, %22
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  br i1 %25, label %82, label %26

26:                                               ; preds = %20, %4
  %27 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 4
  store i8* %3, i8** %27, align 8
  %28 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 7
  %29 = bitcast void (i8*, i8*, i8*, i32)** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 3
  %32 = load %struct.VP9Decoder*, %struct.VP9Decoder** %31, align 8
  %33 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %32, i64 0, i32 12
  %34 = bitcast void (i8*, i8*, i8*, i32)** %33 to i64*
  store i64 %30, i64* %34, align 16
  %35 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 8
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load %struct.VP9Decoder*, %struct.VP9Decoder** %31, align 8
  %39 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %38, i64 0, i32 13
  %40 = bitcast i8** %39 to i64*
  store i64 %37, i64* %40, align 8
  %41 = load %struct.VP9Decoder*, %struct.VP9Decoder** %31, align 8
  %42 = zext i32 %2 to i64
  %43 = call i32 @vp9_receive_compressed_data(%struct.VP9Decoder* %41, i64 %42, i8** %1) #7
  %44 = icmp eq i32 %43, 0
  %45 = load %struct.VP9Decoder*, %struct.VP9Decoder** %31, align 8
  br i1 %44, label %65, label %46

46:                                               ; preds = %26
  %47 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %45, i64 0, i32 4
  %48 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %47, align 8
  %49 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %48, i64 0, i32 8, i32 28
  store i32 1, i32* %49, align 4
  %50 = load %struct.VP9Decoder*, %struct.VP9Decoder** %31, align 8
  %51 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %50, i64 0, i32 16
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 16
  store i32 1, i32* %52, align 8
  %53 = load %struct.VP9Decoder*, %struct.VP9Decoder** %31, align 8
  %54 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %53, i64 0, i32 1, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %82, label %57

57:                                               ; preds = %46
  %58 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %53, i64 0, i32 1, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %53, i64 0, i32 1, i32 0, i32 2, i64 0
  %62 = select i1 %60, i8* null, i8* %61
  %63 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = load i32, i32* %54, align 8
  br label %82

65:                                               ; preds = %26
  %66 = getelementptr inbounds %struct.vpx_codec_alg_priv, %struct.vpx_codec_alg_priv* %0, i64 0, i32 16
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %82

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %45, i64 0, i32 16
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %82

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %45, i64 0, i32 1, i32 27
  %75 = load i8, i8* %74, align 4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.VP9Decoder, %struct.VP9Decoder* %45, i64 0, i32 1, i32 23
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %77, %73
  store i32 0, i32* %66, align 8
  br label %82

82:                                               ; preds = %20, %81, %77, %69, %65, %57, %46, %19
  %83 = phi i32 [ 1, %20 ], [ %17, %19 ], [ 0, %46 ], [ %64, %57 ], [ 0, %65 ], [ 0, %69 ], [ 0, %77 ], [ 0, %81 ]
  ret i32 %83
}

declare %struct.VP9Decoder* @vp9_decoder_create(%struct.BufferPool*) local_unnamed_addr #4

declare i32 @vp9_get_frame_buffer(i8*, i64, %struct.vpx_codec_frame_buffer*) #4

declare i32 @vp9_release_frame_buffer(i8*, %struct.vpx_codec_frame_buffer*) #4

declare i32 @vp9_alloc_internal_frame_buffers(%struct.InternalFrameBufferList*) local_unnamed_addr #4

declare void @vpx_internal_error(%struct.vpx_internal_error_info*, i32, i8*, ...) local_unnamed_addr #4

declare i32 @vp9_receive_compressed_data(%struct.VP9Decoder*, i64, i8**) local_unnamed_addr #4

declare i32 @vp9_get_raw_frame(%struct.VP9Decoder*, %struct.yv12_buffer_config*, %struct.vp9_ppflags_t*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
