; ModuleID = '../../third_party/vulkan-deps/vulkan-loader/src/loader/murmurhash.c'
source_filename = "../../third_party/vulkan-deps/vulkan-loader/src/loader/murmurhash.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @murmurhash(i8* nocapture readonly, i64, i32) local_unnamed_addr #0 {
  %4 = trunc i64 %1 to i32
  %5 = sdiv i32 %4, 4
  %6 = shl nsw i32 %5, 2
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = bitcast i8* %8 to i32*
  %10 = add i32 %4, 3
  %11 = icmp ult i32 %10, 7
  br i1 %11, label %71, label %12

12:                                               ; preds = %3
  %13 = sub nsw i32 0, %5
  %14 = sext i32 %13 to i64
  %15 = and i32 %5, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i32, i32* %9, i64 %14
  %19 = load i32, i32* %18, align 4
  %20 = mul i32 %19, -862048943
  %21 = mul i32 %19, 380141568
  %22 = lshr i32 %20, 17
  %23 = or i32 %22, %21
  %24 = mul i32 %23, 461845907
  %25 = xor i32 %24, %2
  %26 = shl i32 %25, 13
  %27 = lshr i32 %25, 19
  %28 = or i32 %26, %27
  %29 = mul i32 %28, 5
  %30 = add i32 %29, -430675100
  %31 = add nsw i64 %14, 1
  br label %32

32:                                               ; preds = %12, %17
  %33 = phi i32 [ undef, %12 ], [ %30, %17 ]
  %34 = phi i64 [ %14, %12 ], [ %31, %17 ]
  %35 = phi i32 [ %2, %12 ], [ %30, %17 ]
  %36 = and i32 %4, -4
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %71, label %38

38:                                               ; preds = %32, %38
  %39 = phi i64 [ %68, %38 ], [ %34, %32 ]
  %40 = phi i32 [ %67, %38 ], [ %35, %32 ]
  %41 = getelementptr inbounds i32, i32* %9, i64 %39
  %42 = load i32, i32* %41, align 4
  %43 = mul i32 %42, -862048943
  %44 = mul i32 %42, 380141568
  %45 = lshr i32 %43, 17
  %46 = or i32 %45, %44
  %47 = mul i32 %46, 461845907
  %48 = xor i32 %47, %40
  %49 = shl i32 %48, 13
  %50 = lshr i32 %48, 19
  %51 = or i32 %49, %50
  %52 = mul i32 %51, 5
  %53 = add i32 %52, -430675100
  %54 = add nsw i64 %39, 1
  %55 = getelementptr inbounds i32, i32* %9, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 %56, -862048943
  %58 = mul i32 %56, 380141568
  %59 = lshr i32 %57, 17
  %60 = or i32 %59, %58
  %61 = mul i32 %60, 461845907
  %62 = xor i32 %61, %53
  %63 = shl i32 %62, 13
  %64 = lshr i32 %62, 19
  %65 = or i32 %63, %64
  %66 = mul i32 %65, 5
  %67 = add i32 %66, -430675100
  %68 = add nsw i64 %39, 2
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %38

71:                                               ; preds = %32, %38, %3
  %72 = phi i32 [ %2, %3 ], [ %33, %32 ], [ %67, %38 ]
  %73 = and i64 %1, 3
  switch i64 %73, label %97 [
    i64 3, label %74
    i64 2, label %79
    i64 1, label %86
  ]

74:                                               ; preds = %71
  %75 = getelementptr inbounds i8, i8* %8, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 16
  br label %79

79:                                               ; preds = %71, %74
  %80 = phi i32 [ 0, %71 ], [ %78, %74 ]
  %81 = getelementptr inbounds i8, i8* %8, i64 1
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i32 %83, 8
  %85 = or i32 %84, %80
  br label %86

86:                                               ; preds = %71, %79
  %87 = phi i32 [ 0, %71 ], [ %85, %79 ]
  %88 = load i8, i8* %8, align 1
  %89 = zext i8 %88 to i32
  %90 = xor i32 %87, %89
  %91 = mul i32 %90, -862048943
  %92 = mul i32 %90, 380141568
  %93 = lshr i32 %91, 17
  %94 = or i32 %93, %92
  %95 = mul i32 %94, 461845907
  %96 = xor i32 %95, %72
  br label %97

97:                                               ; preds = %86, %71
  %98 = phi i32 [ %72, %71 ], [ %96, %86 ]
  %99 = xor i32 %98, %4
  %100 = lshr i32 %99, 16
  %101 = xor i32 %100, %99
  %102 = mul i32 %101, -2048144789
  %103 = lshr i32 %102, 13
  %104 = xor i32 %103, %102
  %105 = mul i32 %104, -1028477387
  %106 = lshr i32 %105, 16
  %107 = xor i32 %106, %105
  ret i32 %107
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
