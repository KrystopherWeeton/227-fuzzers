; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_audits_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_audits_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.529" }
%"struct.std::__1::atomic.529" = type { %"struct.std::__1::__atomic_base.530" }
%"struct.std::__1::__atomic_base.530" = type { %"struct.std::__1::__atomic_base.531" }
%"struct.std::__1::__atomic_base.531" = type { %"struct.std::__1::__cxx_atomic_impl.532" }
%"struct.std::__1::__cxx_atomic_impl.532" = type { %"struct.std::__1::__cxx_atomic_base_impl.533" }
%"struct.std::__1::__cxx_atomic_base_impl.533" = type { i32 }
%"class.blink::InspectorAuditsAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::Member.440", %"class.blink::Member.449" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Audits::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Audits::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.833", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.2174", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.2174" = type { %"class.blink::MemberBase.2175" }
%"class.blink::MemberBase.2175" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.2170", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.2170" = type { %"class.blink::MemberBase.2171" }
%"class.blink::MemberBase.2171" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.2166", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.2162", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.2158", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.2158" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.2154", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.2150", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.2146", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.2142", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.837", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.2136", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.2136" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.2132", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.2132" = type { %"class.blink::MemberBase.2133" }
%"class.blink::MemberBase.2133" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.2128", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.440", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.2100", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type { %"class.blink::InspectorBaseAgent.2102", %"class.blink::Member.449", %"class.WTF::HashMap.2109", %"class.WTF::HashMap.476", %"class.blink::HeapHashMap.2114", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::InspectorPageAgent::Client"*, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.2121", i8, i32, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField.481", %"class.blink::InspectorAgentState::MapField.481", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::SimpleField.2123", %"class.blink::InspectorAgentState::SimpleField.2123", %"class.blink::InspectorAgentState::SimpleField.2123", %"class.blink::InspectorAgentState::SimpleField.2123", %"class.blink::InspectorAgentState::SimpleField.2123", %"class.blink::InspectorAgentState::SimpleField.2123", %"class.blink::InspectorAgentState::SimpleField.2123", %"class.blink::InspectorAgentState::SimpleField.487", %"class.blink::InspectorAgentState::SimpleField.487", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.2102" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Page::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2103" }
%"class.blink::protocol::Page::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2103" = type { %"class.std::__1::__compressed_pair.2104" }
%"class.std::__1::__compressed_pair.2104" = type { %"struct.std::__1::__compressed_pair_elem.2105" }
%"struct.std::__1::__compressed_pair_elem.2105" = type { %"class.blink::protocol::Page::Frontend"* }
%"class.blink::protocol::Page::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.WTF::HashMap.2109" = type { %"class.WTF::HashTable.2110" }
%"class.WTF::HashTable.2110" = type <{ %"struct.WTF::KeyValuePair.2113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2113" = type opaque
%"class.WTF::HashMap.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"struct.WTF::KeyValuePair.480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.480" = type opaque
%"class.blink::HeapHashMap.2114" = type { %"class.WTF::HashMap.2117" }
%"class.WTF::HashMap.2117" = type { %"class.WTF::HashTable.2118" }
%"class.WTF::HashTable.2118" = type <{ %"struct.WTF::KeyValuePair.2120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2120" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::InspectorPageAgent::Client" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::InspectorResourceContentLoader"* }
%"class.blink::InspectorResourceContentLoader" = type opaque
%"class.blink::InspectorAgentState::MapField.481" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::HashMap.482" }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%"class.WTF::HashMap.482" = type { %"class.WTF::HashTable.483" }
%"class.WTF::HashTable.483" = type <{ %"struct.WTF::KeyValuePair.486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.486" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.476" }
%"class.blink::InspectorAgentState::SimpleField.2123" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::SimpleField.487" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.2096", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.2092", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.839", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.831", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Audits::Frontend"* }
%"class.blink::protocol::Audits::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectorNetworkAgent" = type { %"class.blink::InspectorBaseAgent.442", %"class.blink::Member.449", %"class.blink::Member.455", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::Member.457", %"class.base::UnguessableToken", %"class.absl::optional.459", %"class.blink::Member.464", %"class.WTF::HashMap.466", %"class.blink::HeapHashSet", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField.481", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField.487", %"class.blink::InspectorAgentState::SimpleField.487", %"class.blink::InspectorAgentState::SimpleField.487", %"class.blink::InspectorAgentState::MapField" }
%"class.blink::InspectorBaseAgent.442" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Network::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.443" }
%"class.blink::protocol::Network::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::protocol::Network::Frontend"* }
%"class.blink::protocol::Network::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::WorkerGlobalScope" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::NetworkResourcesData"* }
%"class.blink::NetworkResourcesData" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.459" = type { %"class.absl::optional_internal::optional_data.460" }
%"class.absl::optional_internal::optional_data.460" = type { %"class.absl::optional_internal::optional_data_base.461" }
%"class.absl::optional_internal::optional_data_base.461" = type { %"class.absl::optional_internal::optional_data_dtor_base.462" }
%"class.absl::optional_internal::optional_data_dtor_base.462" = type { i8, %union.anon.463 }
%union.anon.463 = type { i32 }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::XHRReplayData"* }
%"class.blink::XHRReplayData" = type opaque
%"class.WTF::HashMap.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"struct.WTF::KeyValuePair.470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.470" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"class.blink::Member.475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.475" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236" }
%"class.WTF::VectorBufferBase.236" = type { %"class.std::__1::unique_ptr.237"*, i32, i32 }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.240" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.243", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.284", %"class.crdtp::detail::PtrMaybe.304", %"class.crdtp::detail::PtrMaybe.314", %"class.crdtp::detail::PtrMaybe.324", %"class.crdtp::detail::PtrMaybe.345", %"class.crdtp::detail::PtrMaybe.355", %"class.crdtp::detail::PtrMaybe.365", %"class.crdtp::detail::PtrMaybe.375", %"class.crdtp::detail::PtrMaybe.404", %"class.crdtp::detail::PtrMaybe.414", %"class.crdtp::detail::PtrMaybe.424" }
%"class.crdtp::ProtocolObject.243" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.246" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.249", %"class.crdtp::detail::PtrMaybe.252", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.271" }
%"class.crdtp::ProtocolObject.249" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.252" = type { %"class.std::__1::unique_ptr.253" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.256", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.256" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.271" = type { %"class.std::__1::unique_ptr.272" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.275", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.275" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.284" = type { %"class.std::__1::unique_ptr.285" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.288", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.271", %"class.crdtp::detail::PtrMaybe.291" }
%"class.crdtp::ProtocolObject.288" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.291" = type { %"class.std::__1::unique_ptr.292" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.295", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.295" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.304" = type { %"class.std::__1::unique_ptr.305" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.308", %"class.std::__1::unique_ptr.272", %"class.crdtp::detail::PtrMaybe.291", %"class.crdtp::detail::PtrMaybe.291", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.308" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.314" = type { %"class.std::__1::unique_ptr.315" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.318", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.292" }
%"class.crdtp::ProtocolObject.318" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.324" = type { %"class.std::__1::unique_ptr.325" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.328", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.291", %"class.crdtp::detail::PtrMaybe.331", %"class.crdtp::detail::ValueMaybe.341" }
%"class.crdtp::ProtocolObject.328" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.331" = type { %"class.std::__1::unique_ptr.332" }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.335", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.335" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.341" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.345" = type { %"class.std::__1::unique_ptr.346" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.349", %"class.std::__1::unique_ptr.332", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.349" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.355" = type { %"class.std::__1::unique_ptr.356" }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.359", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.341", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.359" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.365" = type { %"class.std::__1::unique_ptr.366" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.369", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.369" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.375" = type { %"class.std::__1::unique_ptr.376" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.379", %"class.std::__1::unique_ptr.382", i8, %"class.std::__1::unique_ptr.272", %"class.crdtp::detail::PtrMaybe.331", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.391" }
%"class.crdtp::ProtocolObject.379" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.385", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.385" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.391" = type { %"class.std::__1::unique_ptr.392" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.395", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.395" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.404" = type { %"class.std::__1::unique_ptr.405" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.408", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.291", %"class.crdtp::detail::PtrMaybe.271", %"class.crdtp::detail::ValueMaybe.341", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.408" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.414" = type { %"class.std::__1::unique_ptr.415" }
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.418", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.418" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.424" = type { %"class.std::__1::unique_ptr.425" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.428", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.331" }
%"class.crdtp::ProtocolObject.428" = type { %"class.crdtp::Serializable" }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.453" }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.751", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.765", %"class.blink::FrameLoader", %"class.blink::Member.792", %"class.blink::Member.794", %"class.blink::Member.822", %"class.blink::Member.824", %"class.blink::Member.826", %"class.blink::Member.828", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.830, %"class.blink::Member.831", %"class.blink::Member.833", %"class.blink::Member.835", %"class.blink::Member.837", %"class.blink::Member.839", %"class.blink::Member.841", %"class.blink::Member.843", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.847", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.853", %"class.std::__1::unique_ptr.854", %"class.absl::optional.733", i32, [4 x i8], %"class.std::__1::unique_ptr.860", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.868", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.873", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.878", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.881", %"class.blink::Member.883", %"class.blink::Member.885", %"class.blink::Member.887", %"class.mojo::StructPtr.890", %"class.blink::Member.898", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.900", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.496", i8, i32, i8, i32, %"class.blink::Member.716", %"class.blink::Member.519", %"class.blink::FrameLifecycle", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.490", %"class.blink::Member.453", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.726", i8, %"class.base::UnguessableToken", %"class.absl::optional.728", %"class.absl::optional.733", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.490", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.490", %"class.blink::Member.519", %"class.blink::Member.521", %"class.blink::Member.523", i8, %"class.WTF::Vector.525" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.512" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.504" }
%"class.WTF::Vector.504" = type { %"class.WTF::VectorBuffer.505" }
%"class.WTF::VectorBuffer.505" = type { %"class.WTF::VectorBufferBase.506", [32 x i8] }
%"class.WTF::VectorBufferBase.506" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.507" }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::HeapVector.509"* }
%"class.blink::HeapVector.509" = type opaque
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.WTF::Vector.515"* }
%"class.WTF::Vector.515" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.525" = type { %"class.WTF::VectorBuffer.526" }
%"class.WTF::VectorBuffer.526" = type { %"class.WTF::VectorBufferBase.527" }
%"class.WTF::VectorBufferBase.527" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.708" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.528, %"class.std::__1::unique_ptr.658", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.534, i32 }>
%class.scoped_refptr.528 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.534, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.624", %"class.absl::optional.629", %"class.absl::optional.586", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.649", i8, [7 x i8], %class.scoped_refptr.534, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.529" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.538 }
%union.anon.538 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.542", %"class.std::__1::unique_ptr.548", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.554 }
%class.scoped_refptr.554 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.555", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.555" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.556" }
%"struct.std::__1::atomic.556" = type { %"struct.std::__1::__atomic_base.557" }
%"struct.std::__1::__atomic_base.557" = type { %"struct.std::__1::__atomic_base.558" }
%"struct.std::__1::__atomic_base.558" = type { %"struct.std::__1::__cxx_atomic_impl.559" }
%"struct.std::__1::__cxx_atomic_impl.559" = type { %"struct.std::__1::__cxx_atomic_base_impl.560" }
%"struct.std::__1::__cxx_atomic_base_impl.560" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.534, %"class.std::__1::unique_ptr.563", %"class.absl::optional.572", %"struct.std::__1::atomic.582", i8, i8, i8, i8, i32, i32, %"class.absl::optional.586", %"class.std::__1::unique_ptr.591", i8, i64, %class.scoped_refptr.620, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.623" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.561 }
%class.scoped_refptr.561 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.562", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.562" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.534, i8, %"class.mojo::ScopedHandleBase.566", %class.scoped_refptr.567, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.568" }
%"class.mojo::ScopedHandleBase.566" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.567 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.568" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.572" = type { %"class.absl::optional_internal::optional_data.573" }
%"class.absl::optional_internal::optional_data.573" = type { %"class.absl::optional_internal::optional_data_base.574" }
%"class.absl::optional_internal::optional_data_base.574" = type { %"class.absl::optional_internal::optional_data_dtor_base.575" }
%"class.absl::optional_internal::optional_data_dtor_base.575" = type { i8, %union.anon.576 }
%union.anon.576 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.577", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.577" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.582" = type { %"struct.std::__1::__atomic_base.583" }
%"struct.std::__1::__atomic_base.583" = type { %"struct.std::__1::__cxx_atomic_impl.584" }
%"struct.std::__1::__cxx_atomic_impl.584" = type { %"struct.std::__1::__cxx_atomic_base_impl.585" }
%"struct.std::__1::__cxx_atomic_base_impl.585" = type { i8 }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.594", i8, i64, %class.scoped_refptr.595, %class.scoped_refptr.616 }
%"class.base::RepeatingCallback.594" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.595 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.605", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.596 }
%class.scoped_refptr.596 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { i64 }
%"class.std::__1::map.605" = type { %"class.std::__1::__tree.606" }
%"class.std::__1::__tree.606" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.607", %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%class.scoped_refptr.616 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.620 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.621 }
%class.scoped_refptr.621 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2085", [4 x i8], %"class.base::RepeatingCallback.661", %class.scoped_refptr.534, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2085" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.661" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.622 }
%class.scoped_refptr.622 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.623" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.624" = type { %"class.absl::optional_internal::optional_data.625" }
%"class.absl::optional_internal::optional_data.625" = type { %"class.absl::optional_internal::optional_data_base.626" }
%"class.absl::optional_internal::optional_data_base.626" = type { %"class.absl::optional_internal::optional_data_dtor_base.627" }
%"class.absl::optional_internal::optional_data_dtor_base.627" = type { i8, %union.anon.628 }
%union.anon.628 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.629" = type { %"class.absl::optional_internal::optional_data.630" }
%"class.absl::optional_internal::optional_data.630" = type { %"class.absl::optional_internal::optional_data_base.631" }
%"class.absl::optional_internal::optional_data_base.631" = type { %"class.absl::optional_internal::optional_data_dtor_base.632" }
%"class.absl::optional_internal::optional_data_dtor_base.632" = type { i8, [7 x i8], %union.anon.633 }
%union.anon.633 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.586" = type { %"class.absl::optional_internal::optional_data.587" }
%"class.absl::optional_internal::optional_data.587" = type { %"class.absl::optional_internal::optional_data_base.588" }
%"class.absl::optional_internal::optional_data_base.588" = type { %"class.absl::optional_internal::optional_data_dtor_base.589" }
%"class.absl::optional_internal::optional_data_dtor_base.589" = type { i8, %union.anon.590 }
%union.anon.590 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.634 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.634 = type { %"class.std::__1::map.637" }
%"class.std::__1::map.637" = type { %"class.std::__1::__tree.638" }
%"class.std::__1::__tree.638" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.639", %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.648"*, i64 }
%"class.std::__1::unique_ptr.648" = type opaque
%"class.std::__1::map.649" = type { %"class.std::__1::__tree.650" }
%"class.std::__1::__tree.650" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.661", %"class.base::OnceCallback.662", %"class.absl::optional.663", %"class.absl::optional.668", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.675", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.683", %"class.std::__1::map.694", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.703", i8, %class.scoped_refptr.534, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.704" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.662" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.663" = type { %"class.absl::optional_internal::optional_data.664" }
%"class.absl::optional_internal::optional_data.664" = type { %"class.absl::optional_internal::optional_data_base.665" }
%"class.absl::optional_internal::optional_data_base.665" = type { %"class.absl::optional_internal::optional_data_dtor_base.666" }
%"class.absl::optional_internal::optional_data_dtor_base.666" = type { i8, %union.anon.667 }
%union.anon.667 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.668" = type { %"class.absl::optional_internal::optional_data.669" }
%"class.absl::optional_internal::optional_data.669" = type { %"class.absl::optional_internal::optional_data_base.670" }
%"class.absl::optional_internal::optional_data_base.670" = type { %"class.absl::optional_internal::optional_data_dtor_base.671" }
%"class.absl::optional_internal::optional_data_dtor_base.671" = type { i8, %union.anon.672 }
%union.anon.672 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.534, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.673" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.673" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.674 }
%class.scoped_refptr.674 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.678", %class.scoped_refptr.679 }
%"class.base::RepeatingCallback.678" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.679 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.683" = type { %"class.std::__1::__tree.684" }
%"class.std::__1::__tree.684" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.685", %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.std::__1::map.694" = type { %"class.std::__1::__tree.695" }
%"class.std::__1::__tree.695" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.696", %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.base::OnceCallback.703" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.704" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.534 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.535" }>
%"class.base::RefCountedThreadSafe.535" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.716" = type { %"class.blink::MemberBase.717" }
%"class.blink::MemberBase.717" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.490", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.718" }
%"class.std::__1::vector.718" = type { %"class.std::__1::__vector_base.719" }
%"class.std::__1::__vector_base.719" = type { %"struct.std::__1::pair.720"*, %"struct.std::__1::pair.720"*, %"class.std::__1::__compressed_pair.721" }
%"struct.std::__1::pair.720" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"struct.std::__1::pair.720"* }
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.728" = type { %"class.absl::optional_internal::optional_data.729" }
%"class.absl::optional_internal::optional_data.729" = type { %"class.absl::optional_internal::optional_data_base.730" }
%"class.absl::optional_internal::optional_data_base.730" = type { %"class.absl::optional_internal::optional_data_dtor_base.731" }
%"class.absl::optional_internal::optional_data_dtor_base.731" = type { i8, %union.anon.732 }
%union.anon.732 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.739" }
%"class.blink::HeapHashSet.739" = type { %"class.WTF::HashSet.742" }
%"class.WTF::HashSet.742" = type { %"class.WTF::HashTable.743" }
%"class.WTF::HashTable.743" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.747" }
%"class.WTF::HashMap.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"struct.WTF::KeyValuePair.750"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.750" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.754", %"class.base::WeakPtrFactory.759" }
%"class.WTF::HashMap.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"struct.WTF::KeyValuePair.758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.758" = type opaque
%"class.base::WeakPtrFactory.759" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.763" }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1489" }
%"class.blink::WeakMember.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1008" }
%"class.blink::HeapHashSet.1008" = type { %"class.WTF::HashSet.1011" }
%"class.WTF::HashSet.1011" = type { %"class.WTF::HashTable.1012" }
%"class.WTF::HashTable.1012" = type <{ %"class.blink::WeakMember.1014"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1014" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.661", %"class.base::RepeatingCallback.2239", i64, %"class.std::__1::map.2240", i8*, i64, %"class.base::WeakPtrFactory.2249" }
%"class.base::RepeatingCallback.2239" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2240" = type { %"class.std::__1::__tree.2241" }
%"class.std::__1::__tree.2241" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2242", %"class.std::__1::__compressed_pair.2246" }
%"class.std::__1::__compressed_pair.2242" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.2246" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.base::WeakPtrFactory.2249" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.765" = type { %"class.WTF::HashSet.768" }
%"class.WTF::HashSet.768" = type { %"class.WTF::HashTable.769" }
%"class.WTF::HashTable.769" = type <{ %"class.blink::WeakMember.771"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.771" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.453", %"class.blink::Member.772", %"class.blink::Member.774", %"class.std::__1::unique_ptr.776", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.788" }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.779" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.788" = type { %"class.WTF::HashTable.789" }
%"class.WTF::HashTable.789" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1800", %"class.blink::Member.453", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1805", i8, i32, %"class.blink::Color", %"class.absl::optional.1807", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1812", %"class.blink::Member.1814", %"class.blink::Member.1814", %"class.std::__1::unique_ptr.1817", i32, [4 x i8], %"class.WTF::HashSet.1820", %"class.blink::Member.1827", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1829", %"class.blink::HeapHashSet.1836", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1844", i8, %"class.blink::Member.1850", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1862", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1876", i8, %"class.std::__1::unique_ptr.1882", %"class.std::__1::unique_ptr.1999", %"class.WTF::Vector.2005", i32, %class.scoped_refptr.2010, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2011", %"class.blink::Member.2013", %"class.blink::Member.2015", %"class.blink::HeapHashSet.2017", %"class.blink::HeapHashSet.2024", %"class.std::__1::unique_ptr.2031", %"class.std::__1::unique_ptr.2038", %"class.WTF::Vector.993" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1800" = type { %"class.WTF::HashTable.1801" }
%"class.WTF::HashTable.1801" = type <{ %class.scoped_refptr.1804*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1804 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1805" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1806", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1564, %"class.base::WeakPtrFactory.1565" }
%class.scoped_refptr.1564 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1565" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1806" = type { %"class.blink::MemberBase.793" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1807" = type { %"class.absl::optional_internal::optional_data.1808" }
%"class.absl::optional_internal::optional_data.1808" = type { %"class.absl::optional_internal::optional_data_base.1809" }
%"class.absl::optional_internal::optional_data_base.1809" = type { %"class.absl::optional_internal::optional_data_dtor_base.1810" }
%"class.absl::optional_internal::optional_data_dtor_base.1810" = type { i8, %union.anon.1811 }
%union.anon.1811 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::HeapHashSet.1816"* }
%"class.blink::HeapHashSet.1816" = type opaque
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.WTF::HashSet.1820"* }
%"class.WTF::HashSet.1820" = type { %"class.WTF::HashTable.1821" }
%"class.WTF::HashTable.1821" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1827" = type { %"class.blink::MemberBase.1828" }
%"class.blink::MemberBase.1828" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1829" = type { %"class.WTF::HashSet.1832" }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::Member.1835"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1835" = type opaque
%"class.blink::HeapHashSet.1836" = type { %"class.WTF::HashSet.1839" }
%"class.WTF::HashSet.1839" = type { %"class.WTF::HashTable.1840" }
%"class.WTF::HashTable.1840" = type <{ %"class.blink::Member.1842"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2072", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2083", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.794" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2072" = type { %"class.blink::MemberBase.2073" }
%"class.blink::MemberBase.2073" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2074", %"class.blink::Member.2075", %"class.blink::Member.2077", %"class.blink::Member.2079", %"class.blink::Member.2081", %"class.WTF::Vector.993", i16, %class.scoped_refptr.1564 }
%"class.blink::ThreadState::PrefinalizerRegistration.2074" = type { i8 }
%"class.blink::Member.2075" = type { %"class.blink::MemberBase.2076" }
%"class.blink::MemberBase.2076" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2077" = type { %"class.blink::MemberBase.2078" }
%"class.blink::MemberBase.2078" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2079" = type { %"class.blink::MemberBase.2080" }
%"class.blink::MemberBase.2080" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2083" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2084", { i64, i64 } }
%"class.blink::WeakMember.2084" = type { %"class.blink::MemberBase.1843" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1854", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1854" = type { %"class.WTF::HashTable.1855" }
%"class.WTF::HashTable.1855" = type <{ %"struct.WTF::KeyValuePair.1857"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1857" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1858", i32, i32 }
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860" }
%"class.WTF::VectorBufferBase.1860" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1862" = type { %"class.WTF::LinkedHashSet.1865" }
%"class.WTF::LinkedHashSet.1865" = type { %"class.WTF::HashMap.1866", %"class.WTF::VectorBackedLinkedList.1870" }
%"class.WTF::HashMap.1866" = type { %"class.WTF::HashTable.1867" }
%"class.WTF::HashTable.1867" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::VectorBackedLinkedList.1870" = type { %"class.WTF::Vector.1871", i32, i32 }
%"class.WTF::Vector.1871" = type { %"class.WTF::VectorBuffer.1872" }
%"class.WTF::VectorBuffer.1872" = type { %"class.WTF::VectorBufferBase.1873" }
%"class.WTF::VectorBufferBase.1873" = type { %"class.WTF::VectorBackedLinkedListNode.1874"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1874" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1876" = type { %"class.std::__1::__compressed_pair.1877" }
%"class.std::__1::__compressed_pair.1877" = type { %"struct.std::__1::__compressed_pair_elem.1878" }
%"struct.std::__1::__compressed_pair_elem.1878" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1885, %class.scoped_refptr.1885, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1976", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1981", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1885 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1886", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1893" }
%"class.WTF::RefCounted.1886" = type { %"class.base::RefCounted.1887" }
%"class.base::RefCounted.1887" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1888", i32, [4 x i8] }>
%"class.WTF::Vector.1888" = type { %"class.WTF::VectorBuffer.1889" }
%"class.WTF::VectorBuffer.1889" = type { %"class.WTF::VectorBufferBase.1890" }
%"class.WTF::VectorBufferBase.1890" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1893" = type { %"class.WTF::VectorBuffer.1894" }
%"class.WTF::VectorBuffer.1894" = type { %"class.WTF::VectorBufferBase.1895" }
%"class.WTF::VectorBufferBase.1895" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1899", %"class.std::__1::unique_ptr.1948", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1896, %class.scoped_refptr.1897, %class.scoped_refptr.1898 }
%class.scoped_refptr.1896 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1912", i8, i8, %class.scoped_refptr.1896, i32, i32 }
%"class.WTF::RefCounted.1912" = type { %"class.base::RefCounted.1913" }
%"class.base::RefCounted.1913" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1897 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2067" }
%"class.blink::PaintPropertyNode.2067" = type { %"class.WTF::RefCounted.2068", i8, i8, %class.scoped_refptr.1897, i32, i32 }
%"class.WTF::RefCounted.2068" = type { %"class.base::RefCounted.2069" }
%"class.base::RefCounted.2069" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1898 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2064" }
%"class.blink::PaintPropertyNode.2064" = type { %"class.WTF::RefCounted.2065", i8, i8, %class.scoped_refptr.1898, i32, i32 }
%"class.WTF::RefCounted.2065" = type { %"class.base::RefCounted.2066" }
%"class.base::RefCounted.2066" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1899" = type { %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1902", %"class.WTF::Vector.1907", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1902" = type { %"class.WTF::VectorBuffer.1903" }
%"class.WTF::VectorBuffer.1903" = type { %"class.WTF::VectorBufferBase.1904" }
%"class.WTF::VectorBufferBase.1904" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1907" = type { %"class.WTF::VectorBuffer.1908" }
%"class.WTF::VectorBuffer.1908" = type { %"class.WTF::VectorBufferBase.1909" }
%"class.WTF::VectorBufferBase.1909" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1927" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1920, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1921", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1914" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1914" = type { %"class.std::__1::__compressed_pair.1915" }
%"class.std::__1::__compressed_pair.1915" = type { %"struct.std::__1::__compressed_pair_elem.1916" }
%"struct.std::__1::__compressed_pair_elem.1916" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1920 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2049", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2049" = type { %"class.WTF::RefCounted.2050", i8, i8, %class.scoped_refptr.1920, i32, i32 }
%"class.WTF::RefCounted.2050" = type { %"class.base::RefCounted.2051" }
%"class.base::RefCounted.2051" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2052" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2052" = type { %"class.absl::optional_internal::optional_data.2053" }
%"class.absl::optional_internal::optional_data.2053" = type { %"class.absl::optional_internal::optional_data_base.2054" }
%"class.absl::optional_internal::optional_data_base.2054" = type { %"class.absl::optional_internal::optional_data_dtor_base.2055" }
%"class.absl::optional_internal::optional_data_dtor_base.2055" = type { i8, %union.anon.2056 }
%union.anon.2056 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2057", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2057" = type { %"class.std::__1::__vector_base.2058" }
%"class.std::__1::__vector_base.2058" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2059" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.2060" }
%"struct.std::__1::__compressed_pair_elem.2060" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1921" = type { %"class.std::__1::__compressed_pair.1922" }
%"class.std::__1::__compressed_pair.1922" = type { %"struct.std::__1::__compressed_pair_elem.1923" }
%"struct.std::__1::__compressed_pair_elem.1923" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1927" = type { %"class.std::__1::__compressed_pair.1928" }
%"class.std::__1::__compressed_pair.1928" = type { %"struct.std::__1::__compressed_pair_elem.1929" }
%"struct.std::__1::__compressed_pair_elem.1929" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1930", %"class.std::__1::unique_ptr.1936", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1936" = type { %"class.std::__1::__compressed_pair.1937" }
%"class.std::__1::__compressed_pair.1937" = type { %"struct.std::__1::__compressed_pair_elem.1938" }
%"struct.std::__1::__compressed_pair_elem.1938" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1948" = type { %"class.std::__1::__compressed_pair.1949" }
%"class.std::__1::__compressed_pair.1949" = type { %"struct.std::__1::__compressed_pair_elem.1950" }
%"struct.std::__1::__compressed_pair_elem.1950" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1951", %"class.absl::optional.1951" }
%"class.absl::optional.1951" = type { %"class.absl::optional_internal::optional_data.1952" }
%"class.absl::optional_internal::optional_data.1952" = type { %"class.absl::optional_internal::optional_data_base.1953" }
%"class.absl::optional_internal::optional_data_base.1953" = type { %"class.absl::optional_internal::optional_data_dtor_base.1954" }
%"class.absl::optional_internal::optional_data_dtor_base.1954" = type { i8, [3 x i8], %union.anon.1955 }
%union.anon.1955 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1893"*, %"class.absl::optional.1961", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1961" = type { %"class.absl::optional_internal::optional_data.1962" }
%"class.absl::optional_internal::optional_data.1962" = type { %"class.absl::optional_internal::optional_data_base.1963" }
%"class.absl::optional_internal::optional_data_base.1963" = type { %"class.absl::optional_internal::optional_data_dtor_base.1964" }
%"class.absl::optional_internal::optional_data_dtor_base.1964" = type { i8, %union.anon.1965 }
%union.anon.1965 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1966", %"class.WTF::Vector.1971" }
%"class.WTF::Vector.1966" = type { %"class.WTF::VectorBuffer.1967" }
%"class.WTF::VectorBuffer.1967" = type { %"class.WTF::VectorBufferBase.1968", [128 x i8] }
%"class.WTF::VectorBufferBase.1968" = type { i32*, i32, i32 }
%"class.WTF::Vector.1971" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973", [128 x i8] }
%"class.WTF::VectorBufferBase.1973" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1976" = type { %"class.WTF::VectorBuffer.1977" }
%"class.WTF::VectorBuffer.1977" = type { %"class.WTF::VectorBufferBase.1978" }
%"class.WTF::VectorBufferBase.1978" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"struct.WTF::KeyValuePair.1985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1985" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1986", %"class.WTF::Vector.1991" }
%"class.WTF::HashMap.1986" = type { %"class.WTF::HashTable.1987" }
%"class.WTF::HashTable.1987" = type <{ %"struct.WTF::KeyValuePair.1990"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1990" = type opaque
%"class.WTF::Vector.1991" = type { %"class.WTF::VectorBuffer.1992" }
%"class.WTF::VectorBuffer.1992" = type { %"class.WTF::VectorBufferBase.1993" }
%"class.WTF::VectorBufferBase.1993" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1999" = type { %"class.std::__1::__compressed_pair.2000" }
%"class.std::__1::__compressed_pair.2000" = type { %"struct.std::__1::__compressed_pair_elem.2001" }
%"struct.std::__1::__compressed_pair_elem.2001" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2005" = type { %"class.WTF::VectorBuffer.2006" }
%"class.WTF::VectorBuffer.2006" = type { %"class.WTF::VectorBufferBase.2007" }
%"class.WTF::VectorBufferBase.2007" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2010 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2013" = type { %"class.blink::MemberBase.2014" }
%"class.blink::MemberBase.2014" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2015" = type { %"class.blink::MemberBase.2016" }
%"class.blink::MemberBase.2016" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2017" = type { %"class.WTF::HashSet.2020" }
%"class.WTF::HashSet.2020" = type { %"class.WTF::HashTable.2021" }
%"class.WTF::HashTable.2021" = type <{ %"class.blink::WeakMember.2023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2023" = type opaque
%"class.blink::HeapHashSet.2024" = type { %"class.WTF::HashSet.2027" }
%"class.WTF::HashSet.2027" = type { %"class.WTF::HashTable.2028" }
%"class.WTF::HashTable.2028" = type <{ %"class.blink::WeakMember.2030"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2030" = type opaque
%"class.std::__1::unique_ptr.2031" = type { %"class.std::__1::__compressed_pair.2032" }
%"class.std::__1::__compressed_pair.2032" = type { %"struct.std::__1::__compressed_pair_elem.2033" }
%"struct.std::__1::__compressed_pair_elem.2033" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2034" }
%"class.base::time_internal::TimeBase.2034" = type { i64 }
%"class.std::__1::unique_ptr.2038" = type { %"class.std::__1::__compressed_pair.2039" }
%"class.std::__1::__compressed_pair.2039" = type { %"struct.std::__1::__compressed_pair_elem.2040" }
%"struct.std::__1::__compressed_pair_elem.2040" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2041", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2041" = type { %"class.absl::optional_internal::optional_data.2042" }
%"class.absl::optional_internal::optional_data.2042" = type { %"class.absl::optional_internal::optional_data_base.2043" }
%"class.absl::optional_internal::optional_data_base.2043" = type { %"class.absl::optional_internal::optional_data_dtor_base.2044" }
%"class.absl::optional_internal::optional_data_dtor_base.2044" = type { i8, %union.anon.2045 }
%union.anon.2045 = type { %"class.base::Time" }
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.806" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.796", %"class.blink::Member.796" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.796", %"class.blink::Member.798", %"class.blink::Member.796", %"class.blink::Member.796", %"class.blink::Member.800" }
%"class.blink::Member.798" = type { %"class.blink::MemberBase.799" }
%"class.blink::MemberBase.799" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.905", %"class.blink::Member.907", %"class.blink::Member.798", %"class.blink::Member.909", %"class.blink::Member.909", %"class.blink::Member.931", %"class.blink::Member.933", %"class.blink::Member.935", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.940", %"class.blink::HeapVector.942" }
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.985", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.993", %"class.WTF::Vector.993", i8, i32, %"class.blink::Member.998", %"class.blink::Member.1065", %"class.blink::Member.1525", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1531", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1533", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1539", %"class.blink::Member.1541", %"class.blink::Member.948", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1543", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.924", %"class.blink::Member.794", %"class.blink::Member.1500", %"class.blink::Member.794", %"class.blink::Member.794", %"class.blink::Member.794", %"class.blink::UserActionElementSet", %"class.blink::Member.1574", double, double, i64, i64, %"class.blink::HeapHashSet.1576", %"class.blink::HeapHashSet.1583", i16, i8, %"class.blink::Member.1590", %"class.blink::Member.1592", %"class.blink::Member.1594", %"class.blink::Member.1596", %"class.blink::TextLinkColors", %"class.blink::Member.1598", i8, [7 x i8], %"class.blink::HeapHashMap.1600", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.794", %"class.WTF::Vector.1607", %"class.blink::Member.1612", %"class.blink::Member.1616", i8, %"class.blink::Member.794", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1618", %"class.blink::HeapVector.1620", %"class.std::__1::unique_ptr.1628", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1634", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1647", %"class.WTF::Vector.1649", i8, i8, %"class.std::__1::unique_ptr.1654", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.924", %"class.blink::HeapVector.1660", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1668", i8, i32, %"class.blink::Member.1670", %"class.blink::Member.1672", %"class.blink::Member.1674", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1676", %"class.WTF::HashMap.1678", %"class.blink::Member.1683", %"class.blink::Member.1685", %"class.blink::Member.1687", %"class.blink::Member.1689", %"class.blink::Member.907", %"class.blink::Member.907", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1691", i8, i32, %"class.blink::Member.1698", %"class.blink::Member.1700", i32, %"class.blink::Member.1702", %"class.blink::Member.1704", %"class.blink::Member.1706", %"class.std::__1::unique_ptr.1708", i64, %"class.std::__1::unique_ptr.1714", i32, i32, %"class.blink::Member.1720", %"class.blink::Member.1722", %"class.blink::Member.1724", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1726", %"class.WTF::Vector.1511", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1728", %"class.blink::Member.1735", %"class.std::__1::unique_ptr.1737", %"class.blink::Member.1743", i8, i8, %"class.WTF::String", %"class.blink::Member.1745", i8, [7 x i8], %"class.blink::HeapHashMap.1747", %"class.blink::HeapObserverSet.1754", %"class.blink::Member.1762", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1764", i32, i8, i8, %"class.blink::WeakMember.1766", %"class.blink::Member.1767" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.985" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.986" }
%"class.blink::HeapHashMap.986" = type { %"class.WTF::HashMap.989" }
%"class.WTF::HashMap.989" = type { %"class.WTF::HashTable.990" }
%"class.WTF::HashTable.990" = type <{ %"struct.WTF::KeyValuePair.992"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.992" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1157", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1165", %"class.blink::Member.907", %"class.blink::Member.1167", i8, %"class.blink::Member.1169", %"class.blink::Member.1171", %"class.blink::Member.1173", %"class.blink::Member.1173", %"class.blink::Member.1173", %"class.blink::Member.1173", %"class.blink::Member.1173", %"class.blink::Member.1173", %"class.blink::Member.1175", %"class.blink::Member.1177", %"class.blink::Member.1179", %"class.blink::Member.1181", %"class.blink::Member.1183", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1124", %"class.blink::Member.1185", %class.scoped_refptr.1187, %"class.blink::HeapHashSet.1452", %"class.blink::Member.1459", %"class.blink::HeapHashMap.1472", %"class.std::__1::unique_ptr.1479", %"class.blink::Member.1485", %"class.blink::Member.1504", %"class.blink::Member.1506", %"class.blink::Member.1508", %"class.WTF::Vector.1511", %"class.util::TokenType", %"class.WTF::HashSet.1516", %"class.WTF::Deque.1520" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1000", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1071", i32, i8, [3 x i8], %"class.blink::HeapVector.1073", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1092", %"class.blink::Member.1153", %"class.blink::Member.1155", i8 }>
%"class.blink::Supplementable.1000" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1001" }
%"class.blink::HeapHashMap.1001" = type { %"class.WTF::HashMap.1004" }
%"class.WTF::HashMap.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1015" }
%"class.blink::Supplementable.1015" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1016" }
%"class.blink::HeapHashMap.1016" = type { %"class.WTF::HashMap.1019" }
%"class.WTF::HashMap.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type { i8*, %"class.blink::Member.2227" }
%"class.blink::Member.2227" = type { %"class.blink::MemberBase.2228" }
%"class.blink::MemberBase.2228" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2229" }
%"class.blink::Member.2229" = type { %"class.blink::MemberBase.2230" }
%"class.blink::MemberBase.2230" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1023, %"class.std::__1::unique_ptr.1032", %"class.std::__1::unique_ptr.1032", %"class.std::__1::unique_ptr.1059", %"class.std::__1::unique_ptr.1059", %"class.blink::Member.1065", i32, [4 x i8], %"class.WTF::HashSet.1067", i32, i32 }
%class.scoped_refptr.1023 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1024", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1026", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1031 }
%"class.WTF::RefCounted.1024" = type { %"class.base::RefCounted.1025" }
%"class.base::RefCounted.1025" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1026" = type { %"class.absl::optional_internal::optional_data.1027" }
%"class.absl::optional_internal::optional_data.1027" = type { %"class.absl::optional_internal::optional_data_base.1028" }
%"class.absl::optional_internal::optional_data_base.1028" = type { %"class.absl::optional_internal::optional_data_dtor_base.1029" }
%"class.absl::optional_internal::optional_data_dtor_base.1029" = type { i8, %union.anon.1030 }
%union.anon.1030 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.1031 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1032" = type { %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1035", %"class.std::__1::map.1046", %"class.std::__1::map.1055"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1026" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.1035" = type { %"class.std::__1::__tree.1036" }
%"class.std::__1::__tree.1036" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.std::__1::map.1046" = type { %"class.std::__1::__tree.1047" }
%"class.std::__1::__tree.1047" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1048", %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.std::__1::map.1055" = type opaque
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1073" = type { %"class.WTF::Vector.1076" }
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.1078" }
%"class.WTF::VectorBufferBase.1078" = type { %"class.blink::Member.1079"*, i32, i32 }
%"class.blink::Member.1079" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1085", i32, i32 }
%"class.blink::HeapHashMap.1085" = type { %"class.WTF::HashMap.1088" }
%"class.WTF::HashMap.1088" = type { %"class.WTF::HashTable.1089" }
%"class.WTF::HashTable.1089" = type <{ %"struct.WTF::KeyValuePair.1091"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1091" = type opaque
%"class.std::__1::unique_ptr.1092" = type { %"class.std::__1::__compressed_pair.1093" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1095", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1095" = type { %"class.std::__1::unique_ptr.1096" }
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1099" }
%"class.WTF::Vector.1099" = type { %"class.WTF::VectorBuffer.1100" }
%"class.WTF::VectorBuffer.1100" = type { %"class.WTF::VectorBufferBase.1101" }
%"class.WTF::VectorBufferBase.1101" = type { %"class.mojo::StructPtr.1102"*, i32, i32 }
%"class.mojo::StructPtr.1102" = type { %"class.std::__1::unique_ptr.1103" }
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1106", %"class.WTF::HashMap.1113", %"class.WTF::HashMap.1118", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1123", i8, %"class.WTF::Vector.1124", i32, %"class.mojo::StructPtr.1129", %"class.WTF::Vector.1124" }
%"class.mojo::StructPtr.1106" = type { %"class.std::__1::unique_ptr.1107" }
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1113" = type { %"class.WTF::HashTable.1114" }
%"class.WTF::HashTable.1114" = type <{ %"struct.WTF::KeyValuePair.1117"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1117" = type opaque
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.mojo::InlinedStructPtr.1123" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1129" = type { %"class.std::__1::unique_ptr.1130" }
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1124", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1144" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.658", i32 }>
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.1157" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1158" }
%"class.blink::HeapHashMap.1158" = type { %"class.WTF::HashMap.1161" }
%"class.WTF::HashMap.1161" = type { %"class.WTF::HashTable.1162" }
%"class.WTF::HashTable.1162" = type <{ %"struct.WTF::KeyValuePair.1164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1164" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.1124" = type { %"class.WTF::VectorBuffer.1125" }
%"class.WTF::VectorBuffer.1125" = type { %"class.WTF::VectorBufferBase.1126" }
%"class.WTF::VectorBufferBase.1126" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1187 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1189", i64, %"class.WTF::Vector.1193", %"class.WTF::Vector.1198", %"class.WTF::Vector.1407", %"class.WTF::Vector.1425", %class.scoped_refptr.1023, %"class.WTF::HashMap.1431", %"class.WTF::Vector.1436", %"class.WTF::Vector.1193", %"class.WTF::Vector.1442", %"class.WTF::HashMap.1447", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1188" }
%"class.base::RefCountedThreadSafe.1188" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { i8* }
%"class.WTF::Vector.1198" = type { %"class.WTF::VectorBuffer.1199" }
%"class.WTF::VectorBuffer.1199" = type { %"class.WTF::VectorBufferBase.1200", [8 x i8] }
%"class.WTF::VectorBufferBase.1200" = type { %class.scoped_refptr.1201*, i32, i32 }
%class.scoped_refptr.1201 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1202", i8, %class.scoped_refptr.1204, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.1399" }
%"class.WTF::ThreadSafeRefCounted.1202" = type { %"class.base::RefCountedThreadSafe.1203" }
%"class.base::RefCountedThreadSafe.1203" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1204 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1205", i64, %"class.WTF::Vector.1207", %"class.WTF::Vector.1212" }
%"class.WTF::RefCounted.1205" = type { %"class.base::RefCounted.1206" }
%"class.base::RefCounted.1206" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209" }
%"class.WTF::VectorBufferBase.1209" = type { i8*, i32, i32 }
%"class.WTF::Vector.1212" = type { %"class.WTF::VectorBuffer.1213" }
%"class.WTF::VectorBuffer.1213" = type { %"class.WTF::VectorBufferBase.1214" }
%"class.WTF::VectorBufferBase.1214" = type { %"class.std::__1::unique_ptr.1215"*, i32, i32 }
%"class.std::__1::unique_ptr.1215" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1218", i32, [4 x i8], %"class.std::__1::unique_ptr.1356", %"class.std::__1::unique_ptr.1356", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1362", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1368", %"class.std::__1::unique_ptr.1374", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1386", %"class.std::__1::unique_ptr.1392", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.582", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1218" = type { %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1221", %"class.std::__1::unique_ptr.1227", %"class.std::__1::unique_ptr.1233", %"class.std::__1::unique_ptr.1239", %"class.std::__1::unique_ptr.1245", %"class.std::__1::unique_ptr.1251", %"class.std::__1::unique_ptr.1262", %"class.std::__1::unique_ptr.1269", %"class.std::__1::unique_ptr.1269", %"class.std::__1::unique_ptr.1276", %"class.std::__1::unique_ptr.1283", %"class.std::__1::unique_ptr.1290", %"class.std::__1::unique_ptr.1290", %"class.std::__1::unique_ptr.1297", %"class.std::__1::unique_ptr.1304", %"class.std::__1::unique_ptr.1311", %"class.std::__1::unique_ptr.1336", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1239" = type { %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1245" = type { %"class.std::__1::__compressed_pair.1246" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.1247" }
%"struct.std::__1::__compressed_pair_elem.1247" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1251" = type { %"class.std::__1::__compressed_pair.1252" }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"struct.std::__1::atomic.1254" = type { %"struct.std::__1::__atomic_base.1255" }
%"struct.std::__1::__atomic_base.1255" = type { %"struct.std::__1::__atomic_base.1256" }
%"struct.std::__1::__atomic_base.1256" = type { %"struct.std::__1::__cxx_atomic_impl.1257" }
%"struct.std::__1::__cxx_atomic_impl.1257" = type { %"struct.std::__1::__cxx_atomic_base_impl.1258" }
%"struct.std::__1::__cxx_atomic_base_impl.1258" = type { i64 }
%"class.std::__1::unique_ptr.1262" = type { %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.blink::Worklist.1265"* }
%"class.blink::Worklist.1265" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"class.std::__1::unique_ptr.1269" = type { %"class.std::__1::__compressed_pair.1270" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"class.blink::Worklist.1272"* }
%"class.blink::Worklist.1272" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.blink::Worklist.1279"* }
%"class.blink::Worklist.1279" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"class.std::__1::unique_ptr.1283" = type { %"class.std::__1::__compressed_pair.1284" }
%"class.std::__1::__compressed_pair.1284" = type { %"struct.std::__1::__compressed_pair_elem.1285" }
%"struct.std::__1::__compressed_pair_elem.1285" = type { %"class.blink::Worklist.1286"* }
%"class.blink::Worklist.1286" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"class.std::__1::unique_ptr.1290" = type { %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.blink::Worklist.1293"* }
%"class.blink::Worklist.1293" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"class.std::__1::unique_ptr.1297" = type { %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"class.blink::Worklist.1300"* }
%"class.blink::Worklist.1300" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"class.std::__1::unique_ptr.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.blink::Worklist.1307"* }
%"class.blink::Worklist.1307" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1254" }
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1314", %"class.std::__1::__compressed_pair.1322", %"class.std::__1::__compressed_pair.1327", %"class.std::__1::__compressed_pair.1329", [4 x i8] }>
%"class.std::__1::unique_ptr.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316", %"struct.std::__1::__compressed_pair_elem.1317" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1317" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { float }
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1339", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1339" = type { %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1348" }
%"class.WTF::Vector.1348" = type { %"class.WTF::VectorBuffer.1349" }
%"class.WTF::VectorBuffer.1349" = type { %"class.WTF::VectorBufferBase.1350" }
%"class.WTF::VectorBufferBase.1350" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1362" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1365" }
%"class.WTF::VectorBuffer.1365" = type { %"class.WTF::VectorBufferBase.1366" }
%"class.WTF::VectorBufferBase.1366" = type { %"struct.std::__1::pair.1367"*, i32, i32 }
%"struct.std::__1::pair.1367" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1368" = type { %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1374" = type { %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1380" }
%"class.std::__1::unique_ptr.1380" = type { %"class.std::__1::__compressed_pair.1381" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1265"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1272"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1279"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1286"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1293"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1791", i64 }
%"class.std::__1::vector.1791" = type { %"class.std::__1::__vector_base.1792" }
%"class.std::__1::__vector_base.1792" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1793" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1386" = type { %"class.std::__1::__compressed_pair.1387" }
%"class.std::__1::__compressed_pair.1387" = type { %"struct.std::__1::__compressed_pair_elem.1388" }
%"struct.std::__1::__compressed_pair_elem.1388" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1398 }
%class.scoped_refptr.1398 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.std::__1::unique_ptr.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.1409" }
%"class.WTF::VectorBufferBase.1409" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1411", %"class.std::__1::unique_ptr.1417" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1410 }
%class.scoped_refptr.1410 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1425" = type { %"class.WTF::VectorBuffer.1426" }
%"class.WTF::VectorBuffer.1426" = type { %"class.WTF::VectorBufferBase.1427" }
%"class.WTF::VectorBufferBase.1427" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1428", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1428" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1431" = type { %"class.WTF::HashTable.1432" }
%"class.WTF::HashTable.1432" = type <{ %"struct.WTF::KeyValuePair.1435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1435" = type opaque
%"class.WTF::Vector.1436" = type { %"class.WTF::VectorBuffer.1437" }
%"class.WTF::VectorBuffer.1437" = type { %"class.WTF::VectorBufferBase.1438" }
%"class.WTF::VectorBufferBase.1438" = type { %"class.mojo::ScopedHandleBase.1439"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1439" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195", [16 x i8] }
%"class.WTF::VectorBufferBase.1195" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1442" = type { %"class.WTF::VectorBuffer.1443" }
%"class.WTF::VectorBuffer.1443" = type { %"class.WTF::VectorBufferBase.1444" }
%"class.WTF::VectorBufferBase.1444" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1447" = type { %"class.WTF::HashTable.1448" }
%"class.WTF::HashTable.1448" = type <{ %"struct.WTF::KeyValuePair.1451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1451" = type { i8**, %"class.std::__1::unique_ptr.2231" }
%"class.std::__1::unique_ptr.2231" = type { %"class.std::__1::__compressed_pair.2232" }
%"class.std::__1::__compressed_pair.2232" = type { %"struct.std::__1::__compressed_pair_elem.2233" }
%"struct.std::__1::__compressed_pair_elem.2233" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1452" = type { %"class.WTF::HashSet.1455" }
%"class.WTF::HashSet.1455" = type { %"class.WTF::HashTable.1456" }
%"class.WTF::HashTable.1456" = type <{ %"class.blink::WeakMember.1458"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1458" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1466", %"class.blink::Member.1466", %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1461" }
%"class.absl::optional.1461" = type { %"class.absl::optional_internal::optional_data.1462" }
%"class.absl::optional_internal::optional_data.1462" = type { %"class.absl::optional_internal::optional_data_base.1463" }
%"class.absl::optional_internal::optional_data_base.1463" = type { %"class.absl::optional_internal::optional_data_dtor_base.1464" }
%"class.absl::optional_internal::optional_data_dtor_base.1464" = type { i8, %union.anon.1465 }
%union.anon.1465 = type { i64 }
%"class.blink::Member.1466" = type { %"class.blink::MemberBase.1467" }
%"class.blink::MemberBase.1467" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::Event"* }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1472" = type { %"class.WTF::HashMap.1475" }
%"class.WTF::HashMap.1475" = type { %"class.WTF::HashTable.1476" }
%"class.WTF::HashTable.1476" = type <{ %"struct.WTF::KeyValuePair.1478"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1478" = type opaque
%"class.std::__1::unique_ptr.1479" = type { %"class.std::__1::__compressed_pair.1480" }
%"class.std::__1::__compressed_pair.1480" = type { %"struct.std::__1::__compressed_pair_elem.1481" }
%"struct.std::__1::__compressed_pair_elem.1481" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.453", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1500", %"class.blink::Member.1502", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1491", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1493", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1493" = type { %"class.WTF::HashMap.1496" }
%"class.WTF::HashMap.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"struct.WTF::KeyValuePair.1499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1499" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.796", i32, i32 }
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.998", %"class.blink::Member.1787", %"class.blink::Member.1789" }
%"class.blink::Member.1787" = type { %"class.blink::MemberBase.1788" }
%"class.blink::MemberBase.1788" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1789" = type { %"class.blink::MemberBase.1790" }
%"class.blink::MemberBase.1790" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.998", %"class.blink::HeapMojoRemote.1782" }
%"class.blink::HeapMojoRemote.1782" = type { %"class.blink::Member.1783" }
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::HeapHashMap.1510"* }
%"class.blink::HeapHashMap.1510" = type opaque
%"class.WTF::HashSet.1516" = type { %"class.WTF::HashTable.1517" }
%"class.WTF::HashTable.1517" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1520" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1523" }
%"class.WTF::VectorBuffer.1523" = type { %"class.WTF::VectorBufferBase.1524" }
%"class.WTF::VectorBufferBase.1524" = type { i64*, i32, i32 }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1000", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1071", i32, i8, [3 x i8], %"class.blink::HeapVector.1073", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1092", %"class.blink::Member.1153", %"class.blink::Member.1155", i8, [7 x i8] }>
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.950", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.952, %"class.WTF::Vector.953", %"class.WTF::Vector.953", %"class.blink::Member.796", %"class.blink::Member.958", %"class.blink::HeapHashSet.962", %"class.blink::Member.907", %"class.WTF::HashSet.969", %"class.WTF::TextPosition", %"class.blink::Member.973", %"class.blink::HeapVector.975", %"class.blink::Member.982" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.952 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.953" = type { %"class.WTF::VectorBuffer.954" }
%"class.WTF::VectorBuffer.954" = type { %"class.WTF::VectorBufferBase.955" }
%"class.WTF::VectorBufferBase.955" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.960" }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.962" = type { %"class.WTF::HashSet.965" }
%"class.WTF::HashSet.965" = type { %"class.WTF::HashTable.966" }
%"class.WTF::HashTable.966" = type <{ %"class.blink::WeakMember.968"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.968" = type { %"class.blink::MemberBase.799" }
%"class.WTF::HashSet.969" = type { %"class.WTF::HashTable.970" }
%"class.WTF::HashTable.970" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.975" = type { %"class.WTF::Vector.978" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.blink::Member.958"*, i32, i32 }
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1543" = type { %"class.WTF::VectorBuffer.1544" }
%"class.WTF::VectorBuffer.1544" = type { %"class.WTF::VectorBufferBase.1545" }
%"class.WTF::VectorBufferBase.1545" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1546 }
%class.scoped_refptr.1546 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1547", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1549" }
%"class.blink::PersistentBase.1549" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.1561" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1552" }
%"class.blink::HeapHashMap.1552" = type { %"class.WTF::HashMap.1555" }
%"class.WTF::HashMap.1555" = type { %"class.WTF::HashTable.1556" }
%"class.WTF::HashTable.1556" = type <{ %"struct.WTF::KeyValuePair.1558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1558" = type { %"class.blink::WeakMember.1559", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.1561" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.907", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.796", %"class.blink::Member.796", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1567" }
%"class.blink::HeapHashMap.1567" = type { %"class.WTF::HashMap.1570" }
%"class.WTF::HashMap.1570" = type { %"class.WTF::HashTable.1571" }
%"class.WTF::HashTable.1571" = type <{ %"struct.WTF::KeyValuePair.1573"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1573" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1576" = type { %"class.WTF::HashSet.1579" }
%"class.WTF::HashSet.1579" = type { %"class.WTF::HashTable.1580" }
%"class.WTF::HashTable.1580" = type <{ %"class.blink::WeakMember.1582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1582" = type opaque
%"class.blink::HeapHashSet.1583" = type { %"class.WTF::HashSet.1586" }
%"class.WTF::HashSet.1586" = type { %"class.WTF::HashTable.1587" }
%"class.WTF::HashTable.1587" = type <{ %"class.blink::WeakMember.1589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1589" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.798", %"class.blink::HeapVector.942" }
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1600" = type { %"class.WTF::HashMap.1603" }
%"class.WTF::HashMap.1603" = type { %"class.WTF::HashTable.1604" }
%"class.WTF::HashTable.1604" = type <{ %"struct.WTF::KeyValuePair.1606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1606" = type opaque
%"class.WTF::Vector.1607" = type { %"class.WTF::VectorBuffer.1608" }
%"class.WTF::VectorBuffer.1608" = type { %"class.WTF::VectorBufferBase.1609" }
%"class.WTF::VectorBufferBase.1609" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1620" = type { %"class.WTF::Vector.1623" }
%"class.WTF::Vector.1623" = type { %"class.WTF::VectorBuffer.1624" }
%"class.WTF::VectorBuffer.1624" = type { %"class.WTF::VectorBufferBase.1625" }
%"class.WTF::VectorBufferBase.1625" = type { %"class.blink::Member.1626"*, i32, i32 }
%"class.blink::Member.1626" = type opaque
%"class.std::__1::unique_ptr.1628" = type { %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1634" = type { %"class.WTF::HashSet.1637" }
%"class.WTF::HashSet.1637" = type { %"class.WTF::HashTable.1638" }
%"class.WTF::HashTable.1638" = type <{ %"class.blink::WeakMember.1640"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1640" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1641", i32, [4 x i8] }>
%"class.WTF::Vector.1641" = type { %"class.WTF::VectorBuffer.1642" }
%"class.WTF::VectorBuffer.1642" = type { %"class.WTF::VectorBufferBase.1643" }
%"class.WTF::VectorBufferBase.1643" = type { %"struct.std::__1::pair.1644"*, i32, i32 }
%"struct.std::__1::pair.1644" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1654" = type { %"class.std::__1::__compressed_pair.1655" }
%"class.std::__1::__compressed_pair.1655" = type { %"struct.std::__1::__compressed_pair_elem.1656" }
%"struct.std::__1::__compressed_pair_elem.1656" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.924" = type { %"class.WTF::Vector.927" }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"class.blink::Member.794"*, i32, i32 }
%"class.blink::HeapVector.1660" = type { %"class.WTF::Vector.1663" }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"class.blink::Member.1666"*, i32, i32 }
%"class.blink::Member.1666" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.907" }
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1678" = type { %"class.WTF::HashTable.1679" }
%"class.WTF::HashTable.1679" = type <{ %"struct.WTF::KeyValuePair.1682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1682" = type opaque
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1566", { i64, i64 } }
%"class.blink::WeakMember.1566" = type { %"class.blink::MemberBase.908" }
%"class.blink::HeapHashSet.1691" = type { %"class.WTF::HashSet.1694" }
%"class.WTF::HashSet.1694" = type { %"class.WTF::HashTable.1695" }
%"class.WTF::HashTable.1695" = type <{ %"class.blink::Member.1697"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1697" = type opaque
%"class.blink::Member.1698" = type { %"class.blink::MemberBase.1699" }
%"class.blink::MemberBase.1699" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1700" = type { %"class.blink::MemberBase.1701" }
%"class.blink::MemberBase.1701" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1708" = type { %"class.std::__1::__compressed_pair.1709" }
%"class.std::__1::__compressed_pair.1709" = type { %"struct.std::__1::__compressed_pair_elem.1710" }
%"struct.std::__1::__compressed_pair_elem.1710" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1714" = type { %"class.std::__1::__compressed_pair.1715" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1722" = type { %"class.blink::MemberBase.1723" }
%"class.blink::MemberBase.1723" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1726" = type { %"class.blink::MemberBase.1727" }
%"class.blink::MemberBase.1727" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1511" = type { %"class.WTF::VectorBuffer.1512" }
%"class.WTF::VectorBuffer.1512" = type { %"class.WTF::VectorBufferBase.1513" }
%"class.WTF::VectorBufferBase.1513" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1728" = type { %"class.WTF::HashMap.1731" }
%"class.WTF::HashMap.1731" = type { %"class.WTF::HashTable.1732" }
%"class.WTF::HashTable.1732" = type <{ %"struct.WTF::KeyValuePair.1734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1734" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1737" = type { %"class.std::__1::__compressed_pair.1738" }
%"class.std::__1::__compressed_pair.1738" = type { %"struct.std::__1::__compressed_pair_elem.1739" }
%"struct.std::__1::__compressed_pair_elem.1739" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1743" = type { %"class.blink::MemberBase.1744" }
%"class.blink::MemberBase.1744" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1745" = type { %"class.blink::MemberBase.1746" }
%"class.blink::MemberBase.1746" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1747" = type { %"class.WTF::HashMap.1750" }
%"class.WTF::HashMap.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"struct.WTF::KeyValuePair.1753"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1753" = type opaque
%"class.blink::HeapObserverSet.1754" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1755" }
%"class.blink::HeapHashSet.1755" = type { %"class.WTF::HashSet.1758" }
%"class.WTF::HashSet.1758" = type { %"class.WTF::HashTable.1759" }
%"class.WTF::HashTable.1759" = type <{ %"class.blink::WeakMember.1761"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1761" = type opaque
%"class.blink::Member.1762" = type { %"class.blink::MemberBase.1763" }
%"class.blink::MemberBase.1763" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1764" = type { %"class.blink::MemberBase.1765" }
%"class.blink::MemberBase.1765" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.907", %"class.blink::HeapHashSet.1771", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1778", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1771" = type { %"class.WTF::HashSet.1774" }
%"class.WTF::HashSet.1774" = type { %"class.WTF::HashTable.1775" }
%"class.WTF::HashTable.1775" = type <{ %"class.blink::Member.1777"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1777" = type opaque
%"class.blink::HeapTaskRunnerTimer.1778" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1779", { i64, i64 } }
%"class.blink::WeakMember.1779" = type { %"class.blink::MemberBase.1765" }
%"class.blink::WeakMember.1766" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::Node"* }
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.913" }
%"class.blink::HeapHashMap.913" = type { %"class.WTF::HashMap.916" }
%"class.WTF::HashMap.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"struct.WTF::KeyValuePair.919"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.919" = type { %"class.WTF::AtomicString", %"class.blink::Member.920" }
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.794", i32, %"class.blink::HeapVector.924" }
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.937" }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::HeapHashMap.939"* }
%"class.blink::HeapHashMap.939" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.942" = type { %"class.WTF::Vector.945" }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"class.blink::Member.948"*, i32, i32 }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.804 }
%class.scoped_refptr.804 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.805" }
%"class.base::RefCounted.805" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.810", %"class.blink::Member.812", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.810" = type { %"class.WTF::SingleThreadedBitField.811" }
%"class.WTF::SingleThreadedBitField.811" = type { i32 }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.814 }
%class.scoped_refptr.814 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.815", %"class.WTF::AtomicString", %"class.WTF::Vector.817" }
%"class.WTF::RefCounted.815" = type { %"class.base::RefCounted.816" }
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.818" }
%"class.WTF::VectorBuffer.818" = type { %"class.WTF::VectorBufferBase.819", [32 x i8] }
%"class.WTF::VectorBufferBase.819" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.830 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.841" = type { %"class.blink::MemberBase.842" }
%"class.blink::MemberBase.842" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.845" }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2252" }
%"class.mojo::Remote.2252" = type { %"class.mojo::internal::InterfacePtrState.2253" }
%"class.mojo::internal::InterfacePtrState.2253" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2254" }
%"class.std::__1::unique_ptr.2254" = type { %"class.std::__1::__compressed_pair.2255" }
%"class.std::__1::__compressed_pair.2255" = type { %"struct.std::__1::__compressed_pair_elem.2256" }
%"struct.std::__1::__compressed_pair_elem.2256" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.853" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.733" = type { %"class.absl::optional_internal::optional_data.734" }
%"class.absl::optional_internal::optional_data.734" = type { %"class.absl::optional_internal::optional_data_base.735" }
%"class.absl::optional_internal::optional_data_base.735" = type { %"class.absl::optional_internal::optional_data_dtor_base.736" }
%"class.absl::optional_internal::optional_data_dtor_base.736" = type { i8, %union.anon.737 }
%union.anon.737 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.866" }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2262" }
%"class.mojo::AssociatedRemote.2262" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2263" }
%"class.mojo::internal::AssociatedInterfacePtrState.2263" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2264" }
%"class.std::__1::unique_ptr.2264" = type { %"class.std::__1::__compressed_pair.2265" }
%"class.std::__1::__compressed_pair.2265" = type { %"struct.std::__1::__compressed_pair_elem.2266" }
%"struct.std::__1::__compressed_pair_elem.2266" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.868" = type { %"class.blink::Member.869" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2272" }
%"class.mojo::AssociatedRemote.2272" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2273" }
%"class.mojo::internal::AssociatedInterfacePtrState.2273" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2274" }
%"class.std::__1::unique_ptr.2274" = type { %"class.std::__1::__compressed_pair.2275" }
%"class.std::__1::__compressed_pair.2275" = type { %"struct.std::__1::__compressed_pair_elem.2276" }
%"struct.std::__1::__compressed_pair_elem.2276" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.871" }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2282", %"class.blink::Member.453", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2282" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2283" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.658" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2283" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.873" = type { %"class.blink::Member.874" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2286", %"class.blink::Member.453", %"class.mojo::AssociatedReceiver.2287" }
%"class.blink::ThreadState::PrefinalizerRegistration.2286" = type { i8 }
%"class.mojo::AssociatedReceiver.2287" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2288" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2288" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.876" }
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2291", %"class.blink::Member.453", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2291" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.528, %"class.std::__1::unique_ptr.658", %"class.base::WeakPtrFactory.2292" }
%"class.base::WeakPtrFactory.2292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.878" = type { %"class.blink::Member.879" }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2295", %"class.blink::Member.453", %"class.mojo::AssociatedReceiver.2296" }
%"class.blink::ThreadState::PrefinalizerRegistration.2295" = type { i8 }
%"class.mojo::AssociatedReceiver.2296" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2297" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2297" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.883" = type { %"class.blink::MemberBase.884" }
%"class.blink::MemberBase.884" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::HeapHashMap.889"* }
%"class.blink::HeapHashMap.889" = type opaque
%"class.mojo::StructPtr.890" = type { %"class.std::__1::unique_ptr.891" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.894" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.894" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.900" = type { %"class.absl::optional_internal::optional_data.901" }
%"class.absl::optional_internal::optional_data.901" = type { %"class.absl::optional_internal::optional_data_base.902" }
%"class.absl::optional_internal::optional_data_base.902" = type { %"class.absl::optional_internal::optional_data_dtor_base.903" }
%"class.absl::optional_internal::optional_data_dtor_base.903" = type { i8, %union.anon.904 }
%union.anon.904 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.crdtp::detail::ValueMaybe.2182" = type { i8, double }
%"class.crdtp::detail::ValueMaybe.2183" = type { i8, i8 }
%"class.crdtp::detail::ValueMaybe.2178" = type { i8, %"class.blink::protocol::Binary" }
%"class.blink::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr.2179 }
%class.scoped_refptr.2179 = type { %"class.blink::protocol::Binary::Impl"* }
%"class.blink::protocol::Binary::Impl" = type <{ i32 (...)**, %"class.WTF::RefCounted.2180", [4 x i8] }>
%"class.WTF::RefCounted.2180" = type { %"class.base::RefCounted.2181" }
%"class.base::RefCounted.2181" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.2392 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2391, i32, i32 }
%class.sk_sp.2391 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.529" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.556" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.2392 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.blink::WebData" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%class.sk_sp.2393 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.529" }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringView", %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ImageDataBuffer" = type <{ %class.sk_sp.2393, %class.SkPixmap, i8, [3 x i8], %"class.blink::IntSize", [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.529", [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2405, i32, i8, i8, [2 x i8] }>
%union.anon.2405 = type { %"class.WTF::Vector.2406" }
%"class.WTF::Vector.2406" = type { %"class.WTF::VectorBuffer.2407" }
%"class.WTF::VectorBuffer.2407" = type { %"class.WTF::VectorBufferBase.221", [16 x i8] }
%"class.blink::InspectorContrast" = type <{ %"class.cc::RTree", %"class.blink::HeapVector.2191", %"class.blink::Document"*, i8, [7 x i8] }>
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"class.std::__1::vector.2184", i8, [7 x i8] }>
%"struct.cc::RTree<blink::Member<blink::Node> >::Branch" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"class.blink::Member.796", %"class.gfx::Rect" }
%"struct.cc::RTree<blink::Member<blink::Node> >::Node" = type { i16, i16, [11 x %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"] }
%"class.std::__1::vector.2184" = type { %"class.std::__1::__vector_base.2185" }
%"class.std::__1::__vector_base.2185" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"class.std::__1::__compressed_pair.2186" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.2187" }
%"struct.std::__1::__compressed_pair_elem.2187" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* }
%"class.blink::HeapVector.2191" = type { %"class.WTF::Vector.2194" }
%"class.WTF::Vector.2194" = type { %"class.WTF::VectorBuffer.2195" }
%"class.WTF::VectorBuffer.2195" = type { %"class.WTF::VectorBufferBase.2196" }
%"class.WTF::VectorBufferBase.2196" = type { %"class.blink::Member.796"*, i32, i32 }
%"class.std::__1::vector.2204" = type { %"class.std::__1::__vector_base.2205" }
%"class.std::__1::__vector_base.2205" = type { %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"*, %"class.std::__1::__compressed_pair.2206" }
%"struct.blink::ContrastInfo" = type { %"class.blink::Element"*, i8, float, float, float, %"class.WTF::String", %"class.WTF::String" }
%"class.std::__1::__compressed_pair.2206" = type { %"struct.std::__1::__compressed_pair_elem.2207" }
%"struct.std::__1::__compressed_pair_elem.2207" = type { %"struct.blink::ContrastInfo"* }
%"class.blink::DOMTokenList" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.794", %"class.blink::QualifiedName", i8, [7 x i8] }>
%"class.blink::WebVector" = type { %"class.std::__1::vector.2436" }
%"class.std::__1::vector.2436" = type { %"class.std::__1::__vector_base.2437" }
%"class.std::__1::__vector_base.2437" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2438" }
%"class.std::__1::__compressed_pair.2438" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.crdtp::StatusOr" = type { %"struct.crdtp::Status", %"class.std::__1::unique_ptr.237" }
%"struct.crdtp::Status" = type { i32, i64 }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2211", %"class.std::__1::vector.2219" }
%"class.std::__1::vector.2211" = type { %"class.std::__1::__vector_base.2212" }
%"class.std::__1::__vector_base.2212" = type { %"struct.std::__1::pair.2213"*, %"struct.std::__1::pair.2213"*, %"class.std::__1::__compressed_pair.2214" }
%"struct.std::__1::pair.2213" = type opaque
%"class.std::__1::__compressed_pair.2214" = type { %"struct.std::__1::__compressed_pair_elem.2215" }
%"struct.std::__1::__compressed_pair_elem.2215" = type { %"struct.std::__1::pair.2213"* }
%"class.std::__1::vector.2219" = type { %"class.std::__1::__vector_base.2220" }
%"class.std::__1::__vector_base.2220" = type { %"struct.std::__1::pair.2221"*, %"struct.std::__1::pair.2221"*, %"class.std::__1::__compressed_pair.2222" }
%"struct.std::__1::pair.2221" = type opaque
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.2223" }
%"struct.std::__1::__compressed_pair_elem.2223" = type { %"struct.std::__1::pair.2221"* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.2404" = type { %"class.WTF::StringTypeAdapter" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr.2442", %"class.crdtp::cbor::CBORTokenizer", %"struct.crdtp::Status", %"class.std::__1::vector.2443" }
%"class.std::__1::shared_ptr.2442" = type { %"class.std::__1::vector.2436"*, %"class.std::__1::__shared_weak_count"* }
%"class.crdtp::cbor::CBORTokenizer" = type { %"class.crdtp::span", i32, %"struct.crdtp::Status", i64, i32, i64 }
%"class.crdtp::span" = type { i8*, i64 }
%"class.std::__1::vector.2443" = type { %"class.std::__1::__vector_base.2444" }
%"class.std::__1::__vector_base.2444" = type { %"class.crdtp::span.2445"*, %"class.crdtp::span.2445"*, %"class.std::__1::__compressed_pair.2446" }
%"class.crdtp::span.2445" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.2446" = type { %"struct.std::__1::__compressed_pair_elem.2447" }
%"struct.std::__1::__compressed_pair_elem.2447" = type { %"class.crdtp::span.2445"* }
%"class.crdtp::DeserializerDescriptor" = type <{ %"struct.crdtp::DeserializerDescriptor::Field"*, i64, i32, [4 x i8] }>
%"struct.crdtp::DeserializerDescriptor::Field" = type { %"class.crdtp::span.2445", i8, i1 (%"class.crdtp::DeserializerState"*, i8*)* }

$_ZNK5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7disableEv = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendINS_10StringViewET_EERKS3_S4_ = comdat any

$_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEEcvS2_Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5crdtp28DeserializableProtocolObjectIN5blink8protocol6Audits14InspectorIssueEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

@_ZTVN5blink20InspectorAuditsAgentE = hidden unnamed_addr constant { [14 x i8*], [8 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAuditsAgent"*)* @_ZN5blink20InspectorAuditsAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAuditsAgent"*)* @_ZN5blink20InspectorAuditsAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAuditsAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink20InspectorAuditsAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAuditsAgent"*)* @_ZN5blink20InspectorAuditsAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*)* @_ZN5blink20InspectorAuditsAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*)* @_ZN5blink20InspectorAuditsAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*, %"class.crdtp::detail::ValueMaybe.2183"*)* @_ZN5blink20InspectorAuditsAgent13checkContrastEN5crdtp6detail10ValueMaybeIbEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.2182"*, %"class.crdtp::detail::ValueMaybe.2183"*, %"class.crdtp::detail::ValueMaybe.2178"*, i32*, i32*)* @_ZN5blink20InspectorAuditsAgent18getEncodedResponseERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIdEENS7_IbEEPNS7_INS_8protocol6BinaryEEEPiSE_ to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorAuditsAgent"*)* @_ZThn8_N5blink20InspectorAuditsAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAuditsAgent"*)* @_ZThn8_N5blink20InspectorAuditsAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.2182"*, %"class.crdtp::detail::ValueMaybe.2183"*, %"class.crdtp::detail::ValueMaybe.2178"*, i32*, i32*)* @_ZThn8_N5blink20InspectorAuditsAgent18getEncodedResponseERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIdEENS7_IbEEPNS7_INS_8protocol6BinaryEEEPiSE_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*)* @_ZThn8_N5blink20InspectorAuditsAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*)* @_ZThn8_N5blink20InspectorAuditsAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAuditsAgent"*, %"class.crdtp::detail::ValueMaybe.2183"*)* @_ZThn8_N5blink20InspectorAuditsAgent13checkContrastEN5crdtp6detail10ValueMaybeIbEE to i8*)] }, align 8
@.str = private unnamed_addr constant [32 x i8] c"Failed to decode original image\00", align 1
@_ZN5blink12_GLOBAL__N_121kDefaultEncodeQualityE = internal unnamed_addr constant double 1.000000e+00, align 8
@.str.1 = private unnamed_addr constant [43 x i8] c"Could not encode image with given settings\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"Inspected frames are not available\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"Document is not available\00", align 1
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [8 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7disableEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"image/\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.7 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.8 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink8protocol6BinaryE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.10 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZN5blink8protocol6Audits22InspectorIssueCodeEnum20LowTextContrastIssueE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol6Audits21InspectorIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits27LowTextContrastIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits14InspectorIssueE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol6Audits8Metainfo10domainNameE = external constant [0 x i8], align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink20InspectorAuditsAgentC1EPNS_21InspectorNetworkAgentEPNS_21InspectorIssueStorageEPNS_15InspectedFramesE = hidden unnamed_addr alias void (%"class.blink::InspectorAuditsAgent"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectedFrames"*), void (%"class.blink::InspectorAuditsAgent"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectedFrames"*)* @_ZN5blink20InspectorAuditsAgentC2EPNS_21InspectorNetworkAgentEPNS_21InspectorIssueStorageEPNS_15InspectedFramesE
@_ZN5blink20InspectorAuditsAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorAuditsAgent"*), void (%"class.blink::InspectorAuditsAgent"*)* @_ZN5blink20InspectorAuditsAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20InspectorAuditsAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorAuditsAgent"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.440"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.449"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #10
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 2
  %26 = bitcast %"class.blink::Member"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #10
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgentC2EPNS_21InspectorNetworkAgentEPNS_21InspectorIssueStorageEPNS_15InspectedFramesE(%"class.blink::InspectorAuditsAgent"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectedFrames"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::InspectorAuditsAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits8Metainfo10domainNameE, i64 0, i64 0)) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits8Metainfo10domainNameE, i64 0, i64 0), i64 %10) #10
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #10
  br label %27

27:                                               ; preds = %4, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %28 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.227"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.blink::InspectorAuditsAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink20InspectorAuditsAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink20InspectorAuditsAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 1
  store %"class.blink::InspectorIssueStorage"* %2, %"class.blink::InspectorIssueStorage"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %32, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %33) #10
  %36 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 2, i32 2
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::InspectorNetworkAgent"* %1, %"class.blink::InspectorNetworkAgent"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %3, %"class.blink::InspectedFrames"** %40, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgentD2Ev(%"class.blink::InspectorAuditsAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorAuditsAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink20InspectorAuditsAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [8 x i8*] }, { [14 x i8*], [8 x i8*] }* @_ZTVN5blink20InspectorAuditsAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #10
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = bitcast %"class.blink::InspectorAuditsAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %21, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %22, align 8
  store %"class.blink::protocol::Audits::Frontend"* null, %"class.blink::protocol::Audits::Frontend"** %22, align 8
  %24 = icmp eq %"class.blink::protocol::Audits::Frontend"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::protocol::Audits::Frontend"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %28, align 8
  %30 = icmp eq %"class.blink::InspectorAgentState::Field"** %29, null
  %31 = bitcast %"class.blink::InspectorAgentState::Field"** %29 to i8*
  br i1 %30, label %38, label %32, !prof !2

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #10
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %38, %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorAuditsAgentD1Ev(%"class.blink::InspectorAuditsAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.blink::Member.449"* %2 to %"class.blink::InspectorAuditsAgent"*
  tail call void @_ZN5blink20InspectorAuditsAgentD2Ev(%"class.blink::InspectorAuditsAgent"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgentD0Ev(%"class.blink::InspectorAuditsAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink20InspectorAuditsAgentD2Ev(%"class.blink::InspectorAuditsAgent"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorAuditsAgentD0Ev(%"class.blink::InspectorAuditsAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.blink::Member.449"* %2 to %"class.blink::InspectorAuditsAgent"*
  tail call void @_ZN5blink20InspectorAuditsAgentD2Ev(%"class.blink::InspectorAuditsAgent"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent18getEncodedResponseERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIdEENS7_IbEEPNS7_INS_8protocol6BinaryEEEPiSE_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.2182"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2183"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2178"* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %10 = alloca double, align 8
  %11 = alloca %"class.gfx::Size", align 4
  %12 = alloca %class.SkBitmap, align 8
  %13 = alloca %"class.blink::WebData", align 8
  %14 = alloca %struct.SkImageInfo, align 16
  %15 = alloca %class.SkPixmap, align 8
  %16 = alloca %class.sk_sp.2393, align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::StringAppend", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.crdtp::DispatchResponse", align 8
  %24 = alloca %"class.WTF::Vector.1207", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.WTF::Vector.219", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca i8, align 1
  %29 = alloca %"class.blink::protocol::Binary", align 8
  %30 = alloca %"class.WTF::Vector.219", align 8
  %31 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #10
  store i8 -86, i8* %22, align 1
  %33 = bitcast %"class.crdtp::DispatchResponse"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %34 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorNetworkAgent"** %34, align 8
  call void @_ZN5blink21InspectorNetworkAgent15GetResponseBodyERKN3WTF6StringEPS2_Pb(%"class.crdtp::DispatchResponse"* nonnull sret %23, %"class.blink::InspectorNetworkAgent"* %35, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* nonnull %21, i8* nonnull %22) #10
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %23, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %45, label %39

39:                                               ; preds = %9
  %40 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %37, i32* %40, align 8
  %41 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %23, i64 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  br label %397

45:                                               ; preds = %9
  %46 = bitcast %"class.WTF::Vector.1207"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.WTF::Vector.1207", %"class.WTF::Vector.1207"* %24, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::Vector.1207", %"class.WTF::Vector.1207"* %24, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  %49 = load i8, i8* %22, align 1, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = call zeroext i1 @_ZN3WTF12Base64DecodeERKNS_6StringERNS_6VectorIcLj0ENS_18PartitionAllocatorEEEPFbDsENS_18Base64DecodePolicyE(%"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.WTF::Vector.1207"* nonnull dereferenceable(16) %24, i1 (i16)* null, i32 0) #10
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = load i32, i32* %48, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %45, %53, %51
  %57 = call i8* @_Znwm(i64 32) #12
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i64* %59 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %60, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i64 31, i1 false) #10
  %61 = getelementptr inbounds i8, i8* %57, i64 31
  store i8 0, i8* %61, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %25) #10
  %62 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %380

66:                                               ; preds = %56
  %67 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %67) #12
  br label %380

68:                                               ; preds = %53
  %69 = bitcast %"class.WTF::Vector.219"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #10
  %70 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %26, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %26, i64 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %26, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #10
  %73 = load i8*, i8** %47, align 8
  %74 = zext i32 %54 to i64
  %75 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2182", %"class.crdtp::detail::ValueMaybe.2182"* %4, i64 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = icmp eq i8 %76, 0
  %78 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2182", %"class.crdtp::detail::ValueMaybe.2182"* %4, i64 0, i32 1
  %79 = bitcast double* %78 to i64*
  %80 = select i1 %77, i64* bitcast (double* @_ZN5blink12_GLOBAL__N_121kDefaultEncodeQualityE to i64*), i64* %79
  %81 = load i64, i64* %80, align 8
  %82 = bitcast double* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  %83 = bitcast double* %10 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"class.gfx::Size"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %11, i64 0, i32 0
  %86 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %11, i64 0, i32 1
  store i32 10000, i32* %85, align 4
  store i32 10000, i32* %86, align 4
  %87 = bitcast %class.SkBitmap* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %87) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 56, i1 false) #10
  %88 = bitcast %"class.blink::WebData"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  %89 = getelementptr inbounds %"class.blink::WebData", %"class.blink::WebData"* %13, i64 0, i32 0, i32 0
  store i8* null, i8** %89, align 8
  call void @_ZN5blink7WebData6AssignEPKcm(%"class.blink::WebData"* nonnull %13, i8* %73, i64 %74) #10
  call void @_ZN5blink8WebImage8FromDataERKNS_7WebDataERKN3gfx4SizeE(%class.SkBitmap* nonnull sret %12, %"class.blink::WebData"* nonnull dereferenceable(8) %13, %"class.gfx::Size"* nonnull dereferenceable(8) %11) #10
  call void @_ZN5blink7WebData5ResetEv(%"class.blink::WebData"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #10
  %90 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 0, i32 0, i32 0
  %91 = load %class.SkPixelRef*, %class.SkPixelRef** %90, align 8
  %92 = icmp eq %class.SkPixelRef* %91, null
  br i1 %92, label %287, label %93

93:                                               ; preds = %68
  %94 = bitcast %struct.SkImageInfo* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #10
  %95 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 1
  %97 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 0, i32 1, i32 2, i32 1, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 0, i32 1, i32 2, i32 1, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = shl nuw i64 %101, 32
  %103 = zext i32 %98 to i64
  %104 = or i64 %102, %103
  %105 = bitcast %struct.SkImageInfo* %14 to <2 x i64>*
  store <2 x i64> <i64 0, i64 12884901892>, <2 x i64>* %105, align 16, !alias.scope !5
  %106 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 1
  %107 = bitcast %struct.SkISize* %106 to i64*
  store i64 %104, i64* %107, align 16, !alias.scope !5
  %108 = sext i32 %98 to i64
  %109 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0
  %110 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %109) #10
  %111 = sext i32 %110 to i64
  %112 = mul nsw i64 %111, %108
  %113 = icmp ult i64 %112, 2147483648
  %114 = and i64 %112, 4294967295
  %115 = select i1 %113, i64 %114, i64 0
  %116 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %14, i64 %115) #10
  %117 = icmp ult i64 %116, 4294967296
  br i1 %117, label %119, label %118, !prof !2

118:                                              ; preds = %93
  call void @llvm.trap() #10
  unreachable

119:                                              ; preds = %93
  %120 = trunc i64 %116 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = and i64 %116, 4294967295
  %124 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %123) #10
  %125 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %124, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %126 = ptrtoint i8* %125 to i64
  br label %127

127:                                              ; preds = %122, %119
  %128 = phi i64 [ 0, %119 ], [ %126, %122 ]
  %129 = phi i64 [ 0, %119 ], [ %123, %122 ]
  %130 = phi i8* [ null, %119 ], [ %125, %122 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %130, i8 0, i64 %129, i1 false) #10
  %131 = bitcast %class.SkPixmap* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %131) #10
  %132 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %15, i64 0, i32 2
  %133 = bitcast %struct.SkImageInfo* %132 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 24, i1 false) #10
  %134 = inttoptr i64 %128 to i8*
  %135 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %15, i64 0, i32 0
  store i8* %134, i8** %135, align 8
  %136 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %15, i64 0, i32 1
  store i64 %115, i64* %136, align 8
  %137 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %138 = load %class.SkColorSpace*, %class.SkColorSpace** %95, align 16
  %139 = icmp eq %class.SkColorSpace* %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %127
  %141 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 1 monotonic
  br label %143

143:                                              ; preds = %140, %127
  store %class.SkColorSpace* %138, %class.SkColorSpace** %137, align 8
  %144 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %15, i64 0, i32 2, i32 0, i32 1
  %145 = bitcast i32* %96 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8
  %147 = bitcast i32* %144 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %147, align 8
  %148 = bitcast %class.sk_sp.2393* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #10
  %149 = getelementptr inbounds %class.sk_sp.2393, %class.sk_sp.2393* %16, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %149, align 8
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.2393* nonnull sret %16, %class.SkBitmap* nonnull dereferenceable(56) %12) #10
  %150 = load %class.SkImage*, %class.SkImage** %149, align 8
  %151 = icmp eq %class.SkImage* %150, null
  br i1 %151, label %264, label %152

152:                                              ; preds = %143
  %153 = call zeroext i1 @_ZNK7SkImage10readPixelsERK8SkPixmapiiNS_11CachingHintE(%class.SkImage* nonnull %150, %class.SkPixmap* nonnull dereferenceable(40) %15, i32 0, i32 0, i32 0) #10
  br i1 %153, label %154, label %250

154:                                              ; preds = %152
  %155 = call %"class.blink::ImageDataBuffer"* @_ZN5blink15ImageDataBuffer6CreateERK8SkPixmap(%class.SkPixmap* nonnull dereferenceable(40) %15) #10
  %156 = icmp eq %"class.blink::ImageDataBuffer"* %155, null
  br i1 %156, label %250, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #10
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %159, align 8
  %160 = bitcast %"class.WTF::StringAppend"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #10
  %161 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #10
  %162 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %163 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8** %164, align 8
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 6, i32* %165, align 8
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %186, label %169

169:                                              ; preds = %157
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %186

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i33
  %178 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %177, i33 1) #10
  %179 = extractvalue { i33, i1 } %178, 1
  %180 = extractvalue { i33, i1 } %178, 0
  %181 = icmp slt i33 %180, 0
  %182 = or i1 %179, %181
  br i1 %182, label %183, label %184, !prof !3

183:                                              ; preds = %174
  call void @llvm.trap() #10
  unreachable

184:                                              ; preds = %174
  %185 = trunc i33 %180 to i32
  store i32 %185, i32* %175, align 4
  br label %186

186:                                              ; preds = %184, %169, %157
  call void @_ZN3WTFplINS_6StringEEENS_12StringAppendINS_10StringViewET_EERKS3_S4_(%"class.WTF::StringAppend"* nonnull sret %18, %"class.WTF::StringView"* nonnull dereferenceable(24) %19, %"class.WTF::StringImpl"* %167) #10
  %187 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEEcvS2_Ev(%"class.WTF::StringAppend"* nonnull %18) #10
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %159, align 8
  %188 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %18, i64 0, i32 1, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #10
  br label %204

204:                                              ; preds = %203, %200, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #10
  %205 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %205) #10
  store i32 -1431655766, i32* %20, align 4
  %206 = call zeroext i1 @_ZN5blink26ParseImageEncodingMimeTypeERKN3WTF6StringERNS_21ImageEncodingMimeTypeE(%"class.WTF::String"* nonnull dereferenceable(8) %17, i32* nonnull dereferenceable(4) %20) #10
  %207 = load i32, i32* %20, align 4
  %208 = call zeroext i1 @_ZNK5blink15ImageDataBuffer11EncodeImageENS_21ImageEncodingMimeTypeERKdPN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.blink::ImageDataBuffer"* nonnull %155, i32 %207, double* nonnull dereferenceable(8) %10, %"class.WTF::Vector.219"* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %205) #10
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %204
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #10
  br label %224

224:                                              ; preds = %223, %220, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #10
  %225 = getelementptr inbounds %"class.blink::ImageDataBuffer", %"class.blink::ImageDataBuffer"* %155, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %226 = load %class.SkColorSpace*, %class.SkColorSpace** %225, align 8
  %227 = icmp eq %class.SkColorSpace* %226, null
  br i1 %227, label %234, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = atomicrmw add i32* %229, i32 -1 acq_rel
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %234

232:                                              ; preds = %228
  %233 = bitcast %class.SkColorSpace* %226 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %232, %228, %224
  %235 = getelementptr inbounds %"class.blink::ImageDataBuffer", %"class.blink::ImageDataBuffer"* %155, i64 0, i32 0, i32 0
  %236 = load %class.SkImage*, %class.SkImage** %235, align 8
  %237 = icmp eq %class.SkImage* %236, null
  br i1 %237, label %248, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %class.SkImage, %class.SkImage* %236, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = atomicrmw add i32* %239, i32 -1 acq_rel
  %241 = icmp eq i32 %240, 1
  br i1 %241, label %242, label %248

242:                                              ; preds = %238
  %243 = bitcast %class.SkImage* %236 to %class.SkRefCntBase*
  %244 = bitcast %class.SkImage* %236 to void (%class.SkRefCntBase*)***
  %245 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %244, align 8
  %246 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %245, i64 2
  %247 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %246, align 8
  call void %247(%class.SkRefCntBase* nonnull %243) #10
  br label %248

248:                                              ; preds = %242, %238, %234
  %249 = bitcast %"class.blink::ImageDataBuffer"* %155 to i8*
  call void @free(i8* %249) #10
  br label %250

250:                                              ; preds = %248, %154, %152
  %251 = phi i1 [ %208, %248 ], [ false, %152 ], [ false, %154 ]
  %252 = load %class.SkImage*, %class.SkImage** %149, align 8
  %253 = icmp eq %class.SkImage* %252, null
  br i1 %253, label %264, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %class.SkImage, %class.SkImage* %252, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = atomicrmw add i32* %255, i32 -1 acq_rel
  %257 = icmp eq i32 %256, 1
  br i1 %257, label %258, label %264

258:                                              ; preds = %254
  %259 = bitcast %class.SkImage* %252 to %class.SkRefCntBase*
  %260 = bitcast %class.SkImage* %252 to void (%class.SkRefCntBase*)***
  %261 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %260, align 8
  %262 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %261, i64 2
  %263 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %262, align 8
  call void %263(%class.SkRefCntBase* nonnull %259) #10
  br label %264

264:                                              ; preds = %258, %254, %250, %143
  %265 = phi i1 [ %251, %250 ], [ %251, %254 ], [ %251, %258 ], [ false, %143 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #10
  %266 = load %class.SkColorSpace*, %class.SkColorSpace** %137, align 8
  %267 = icmp eq %class.SkColorSpace* %266, null
  br i1 %267, label %274, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = atomicrmw add i32* %269, i32 -1 acq_rel
  %271 = icmp eq i32 %270, 1
  br i1 %271, label %272, label %274

272:                                              ; preds = %268
  %273 = bitcast %class.SkColorSpace* %266 to i8*
  call void @_ZdlPv(i8* %273) #12
  br label %274

274:                                              ; preds = %272, %268, %264
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %131) #10
  %275 = icmp eq i64 %128, 0
  br i1 %275, label %277, label %276, !prof !2

276:                                              ; preds = %274
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %134) #10
  br label %277

277:                                              ; preds = %276, %274
  %278 = load %class.SkColorSpace*, %class.SkColorSpace** %95, align 16
  %279 = icmp eq %class.SkColorSpace* %278, null
  br i1 %279, label %286, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %278, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = atomicrmw add i32* %281, i32 -1 acq_rel
  %283 = icmp eq i32 %282, 1
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  %285 = bitcast %class.SkColorSpace* %278 to i8*
  call void @_ZdlPv(i8* %285) #12
  br label %286

286:                                              ; preds = %284, %280, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %87) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  br i1 %265, label %300, label %288

287:                                              ; preds = %68
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %87) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  br label %288

288:                                              ; preds = %287, %286
  %289 = call i8* @_Znwm(i64 48) #12
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %289, i8** %290, align 8
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %292 = bitcast i64* %291 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %292, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %289, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i64 42, i1 false) #10
  %293 = getelementptr inbounds i8, i8* %289, i64 42
  store i8 0, i8* %293, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %27) #10
  %294 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %295 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %294, i64 0, i32 1, i32 0
  %296 = load i8, i8* %295, align 1
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %371

298:                                              ; preds = %288
  %299 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %299) #12
  br label %371

300:                                              ; preds = %286
  %301 = load i32, i32* %48, align 4
  store i32 %301, i32* %7, align 4
  %302 = load i32, i32* %72, align 4
  store i32 %302, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28)
  store i8 0, i8* %28, align 1
  %303 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2183", %"class.crdtp::detail::ValueMaybe.2183"* %5, i64 0, i32 0
  %304 = load i8, i8* %303, align 1, !range !4
  %305 = icmp eq i8 %304, 0
  %306 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2183", %"class.crdtp::detail::ValueMaybe.2183"* %5, i64 0, i32 1
  %307 = select i1 %305, i8* %28, i8* %306
  %308 = load i8, i8* %307, align 1, !range !4
  %309 = icmp eq i8 %308, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28)
  br i1 %309, label %310, label %370

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %30, i64 0, i32 0, i32 0, i32 1
  %312 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %30, i64 0, i32 0, i32 0, i32 2
  %313 = bitcast %"class.WTF::Vector.219"* %26 to i64*
  %314 = bitcast %"class.WTF::Vector.219"* %30 to i64*
  store i64 0, i64* %314, align 8
  %315 = load i64, i64* %313, align 8
  %316 = bitcast %"class.WTF::Vector.219"* %30 to i64*
  store atomic i64 0, i64* %313 monotonic, align 8
  store atomic i64 %315, i64* %316 monotonic, align 8
  %317 = load i32, i32* %71, align 8
  store i32 %317, i32* %311, align 8
  store i32 0, i32* %71, align 8
  store i32 %302, i32* %312, align 4
  store i32 0, i32* %72, align 4
  call void @_ZN5blink8protocol6Binary10fromVectorEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::protocol::Binary"* nonnull sret %29, %"class.WTF::Vector.219"* nonnull %30) #10
  %318 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2178", %"class.crdtp::detail::ValueMaybe.2178"* %6, i64 0, i32 1, i32 1
  %319 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %29, i64 0, i32 1, i32 0
  %320 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %319, align 8
  %321 = icmp eq %"class.blink::protocol::Binary::Impl"* %320, null
  br i1 %321, label %324, label %322

322:                                              ; preds = %310
  %323 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %320, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %323) #10
  br label %324

324:                                              ; preds = %322, %310
  %325 = ptrtoint %"class.blink::protocol::Binary::Impl"* %320 to i64
  %326 = bitcast %class.scoped_refptr.2179* %318 to i64*
  %327 = getelementptr inbounds %class.scoped_refptr.2179, %class.scoped_refptr.2179* %318, i64 0, i32 0
  %328 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %327, align 8
  store i64 %325, i64* %326, align 8
  %329 = icmp eq %"class.blink::protocol::Binary::Impl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %324
  %331 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %328, i64 0, i32 1, i32 0
  %332 = getelementptr inbounds %"class.base::RefCounted.2181", %"class.base::RefCounted.2181"* %331, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %332) #10
  %333 = getelementptr inbounds %"class.base::RefCounted.2181", %"class.base::RefCounted.2181"* %331, i64 0, i32 0, i32 0
  %334 = load i32, i32* %333, align 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %343

336:                                              ; preds = %330
  %337 = getelementptr inbounds %"class.base::RefCounted.2181", %"class.base::RefCounted.2181"* %331, i64 -2
  %338 = bitcast %"class.base::RefCounted.2181"* %337 to %"class.blink::protocol::Binary::Impl"*
  %339 = bitcast %"class.base::RefCounted.2181"* %337 to void (%"class.blink::protocol::Binary::Impl"*)***
  %340 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %339, align 8
  %341 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %340, i64 1
  %342 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %341, align 8
  call void %342(%"class.blink::protocol::Binary::Impl"* nonnull %338) #10
  br label %343

343:                                              ; preds = %324, %330, %336
  %344 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2178", %"class.crdtp::detail::ValueMaybe.2178"* %6, i64 0, i32 0
  store i8 1, i8* %344, align 8
  %345 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %29, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %345, align 8
  %346 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %319, align 8
  %347 = icmp eq %"class.blink::protocol::Binary::Impl"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %346, i64 0, i32 1, i32 0
  %350 = getelementptr inbounds %"class.base::RefCounted.2181", %"class.base::RefCounted.2181"* %349, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %350) #10
  %351 = getelementptr inbounds %"class.base::RefCounted.2181", %"class.base::RefCounted.2181"* %349, i64 0, i32 0, i32 0
  %352 = load i32, i32* %351, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %348
  %355 = getelementptr inbounds %"class.base::RefCounted.2181", %"class.base::RefCounted.2181"* %349, i64 -2
  %356 = bitcast %"class.base::RefCounted.2181"* %355 to %"class.blink::protocol::Binary::Impl"*
  %357 = bitcast %"class.base::RefCounted.2181"* %355 to void (%"class.blink::protocol::Binary::Impl"*)***
  %358 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %357, align 8
  %359 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %358, i64 1
  %360 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %359, align 8
  call void %360(%"class.blink::protocol::Binary::Impl"* nonnull %356) #10
  br label %361

361:                                              ; preds = %343, %348, %354
  %362 = getelementptr inbounds %"class.WTF::Vector.219", %"class.WTF::Vector.219"* %30, i64 0, i32 0, i32 0, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %370, label %365, !prof !2

365:                                              ; preds = %361
  %366 = load i32, i32* %312, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %369, label %368, !prof !3

368:                                              ; preds = %365
  store i32 0, i32* %312, align 4
  br label %369

369:                                              ; preds = %368, %365
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %363) #10
  store i8* null, i8** %362, align 8
  br label %370

370:                                              ; preds = %369, %361, %300
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  br label %371

371:                                              ; preds = %298, %288, %370
  %372 = load i8*, i8** %70, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %379, label %374, !prof !2

374:                                              ; preds = %371
  %375 = load i32, i32* %72, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %378, label %377, !prof !3

377:                                              ; preds = %374
  store i32 0, i32* %72, align 4
  br label %378

378:                                              ; preds = %377, %374
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %372) #10
  store i8* null, i8** %70, align 8
  br label %379

379:                                              ; preds = %371, %378
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #10
  br label %380

380:                                              ; preds = %66, %56, %379
  %381 = load i8*, i8** %47, align 8
  %382 = icmp eq i8* %381, null
  br i1 %382, label %388, label %383, !prof !2

383:                                              ; preds = %380
  %384 = load i32, i32* %48, align 4
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %387, label %386, !prof !3

386:                                              ; preds = %383
  store i32 0, i32* %48, align 4
  br label %387

387:                                              ; preds = %386, %383
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %381) #10
  store i8* null, i8** %47, align 8
  br label %388

388:                                              ; preds = %387, %380
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #10
  %389 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %23, i64 0, i32 1
  %390 = bitcast %"class.std::__1::basic_string"* %389 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %391 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %390, i64 0, i32 1, i32 0
  %392 = load i8, i8* %391, align 1
  %393 = icmp slt i8 %392, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %388
  %395 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load i8*, i8** %395, align 8
  call void @_ZdlPv(i8* %396) #12
  br label %397

397:                                              ; preds = %39, %388, %394
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #10
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %398, null
  br i1 %399, label %413, label %400

400:                                              ; preds = %397
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load atomic i32, i32* %401 monotonic, align 4
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %406 = load i32, i32* %405, align 4
  br i1 %404, label %407, label %409

407:                                              ; preds = %400
  %408 = add i32 %406, -1
  store i32 %408, i32* %405, align 4
  br label %409

409:                                              ; preds = %407, %400
  %410 = phi i32 [ %408, %407 ], [ %406, %400 ]
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %398) #10
  br label %413

413:                                              ; preds = %397, %409, %412
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink21InspectorNetworkAgent15GetResponseBodyERKN3WTF6StringEPS2_Pb(%"class.crdtp::DispatchResponse"* sret, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12Base64DecodeERKNS_6StringERNS_6VectorIcLj0ENS_18PartitionAllocatorEEEPFbDsENS_18Base64DecodePolicyE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.1207"* dereferenceable(16), i1 (i16)*, i32) local_unnamed_addr #2

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8protocol6Binary10fromVectorEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::protocol::Binary"* sret, %"class.WTF::Vector.219"*) local_unnamed_addr #2

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorAuditsAgent18getEncodedResponseERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIdEENS7_IbEEPNS7_INS_8protocol6BinaryEEEPiSE_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.2182"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2183"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2178"* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 -1, i32 4
  %11 = bitcast %"class.blink::Member.449"* %10 to %"class.blink::InspectorAuditsAgent"*
  tail call void @_ZN5blink20InspectorAuditsAgent18getEncodedResponseERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIdEENS7_IbEEPNS7_INS_8protocol6BinaryEEEPiSE_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAuditsAgent"* %11, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.2182"* %4, %"class.crdtp::detail::ValueMaybe.2183"* %5, %"class.crdtp::detail::ValueMaybe.2178"* %6, i32* %7, i32* %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent24CheckContrastForDocumentEPNS_8DocumentEb(%"class.blink::InspectorAuditsAgent"* nocapture readonly, %"class.blink::Document"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::InspectorContrast", align 8
  %15 = alloca %"class.std::__1::vector.2204", align 8
  %16 = bitcast %"class.blink::InspectorContrast"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 104, i1 false)
  call void @_ZN5blink17InspectorContrastC1EPNS_8DocumentE(%"class.blink::InspectorContrast"* nonnull %14, %"class.blink::Document"* %1) #10
  %17 = bitcast %"class.std::__1::vector.2204"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  call void @_ZN5blink17InspectorContrast29GetElementsWithContrastIssuesEbm(%"class.std::__1::vector.2204"* nonnull sret %15, %"class.blink::InspectorContrast"* nonnull %14, i1 zeroext %2, i64 100) #10
  %18 = getelementptr inbounds %"class.std::__1::vector.2204", %"class.std::__1::vector.2204"* %15, i64 0, i32 0, i32 0
  %19 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.2204", %"class.std::__1::vector.2204"* %15, i64 0, i32 0, i32 1
  %21 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %20, align 8
  %22 = icmp eq %"struct.blink::ContrastInfo"* %19, %21
  br i1 %22, label %71, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %25 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %28 = bitcast %union.anon.2405* %27 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  %32 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %33 = bitcast %"class.WTF::StringView"* %4 to i8*
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  %38 = bitcast %"class.WTF::StringView"* %4 to i64*
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %40 = bitcast %"class.WTF::StringView"* %7 to i8*
  %41 = bitcast %"class.WTF::String"* %8 to i8*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %47 = bitcast %"class.WTF::StringView"* %7 to i64*
  %48 = bitcast %"class.WTF::StringView"* %9 to i8*
  %49 = bitcast %"class.WTF::StringView"* %9 to i64*
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %52 = bitcast %"class.WTF::StringView"* %10 to i8*
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %57 = bitcast %"class.WTF::StringView"* %11 to i8*
  %58 = bitcast %"class.WTF::StringView"* %11 to i64*
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %61 = bitcast %"class.WTF::StringView"* %12 to i8*
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %64 = bitcast i8** %63 to %"class.WTF::StringImpl"**
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %66 = bitcast %"class.WTF::StringView"* %12 to i64*
  %67 = bitcast %"class.WTF::String"* %13 to i8*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  br label %133

69:                                               ; preds = %578
  %70 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %18, align 8
  br label %71

71:                                               ; preds = %69, %3
  %72 = phi %"struct.blink::ContrastInfo"* [ %70, %69 ], [ %19, %3 ]
  %73 = icmp eq %"struct.blink::ContrastInfo"* %72, null
  br i1 %73, label %121, label %74

74:                                               ; preds = %71
  %75 = bitcast %"struct.blink::ContrastInfo"* %72 to i8*
  %76 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %20, align 8
  %77 = icmp eq %"struct.blink::ContrastInfo"* %76, %72
  br i1 %77, label %119, label %78

78:                                               ; preds = %74, %114
  %79 = phi %"struct.blink::ContrastInfo"* [ %80, %114 ], [ %76, %74 ]
  %80 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %79, i64 -1, i32 6, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #10
  br label %97

97:                                               ; preds = %96, %93, %78
  %98 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %79, i64 -1, i32 5, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #10
  br label %114

114:                                              ; preds = %113, %110, %97
  %115 = icmp eq %"struct.blink::ContrastInfo"* %80, %72
  br i1 %115, label %116, label %78

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector.2204"* %15 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %74, %116
  %120 = phi i8* [ %118, %116 ], [ %75, %74 ]
  store %"struct.blink::ContrastInfo"* %72, %"struct.blink::ContrastInfo"** %20, align 8
  call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %71, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %122 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %122, align 8
  call void @_ZN5blink8protocol6Audits8Frontend5flushEv(%"class.blink::protocol::Audits::Frontend"* %123) #10
  %124 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %125 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %124, align 8
  %126 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %121
  %128 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %125 to i64
  %129 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %14, i64 0, i32 0, i32 2, i32 0, i32 1
  %130 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %125 to i8*
  call void @_ZdlPv(i8* %131) #12
  br label %132

132:                                              ; preds = %121, %127
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %16) #10
  ret void

133:                                              ; preds = %23, %578
  %134 = phi %"struct.blink::ContrastInfo"* [ %19, %23 ], [ %579, %578 ]
  %135 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 0, i32 0
  %136 = load %"class.blink::Element"*, %"class.blink::Element"** %135, align 8
  %137 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 0, i32 2
  %138 = bitcast float* %137 to <2 x float>*
  %139 = load <2 x float>, <2 x float>* %138, align 4
  %140 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 0, i32 4
  %141 = load float, float* %140, align 4
  %142 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 0, i32 5, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %162, label %145

145:                                              ; preds = %133
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %162

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #10
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !3

159:                                              ; preds = %150
  call void @llvm.trap() #10
  unreachable

160:                                              ; preds = %150
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %151, align 4
  br label %162

162:                                              ; preds = %160, %145, %133
  %163 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 0, i32 6, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %183, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %183

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i33
  %175 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %174, i33 1) #10
  %176 = extractvalue { i33, i1 } %175, 1
  %177 = extractvalue { i33, i1 } %175, 0
  %178 = icmp slt i33 %177, 0
  %179 = or i1 %176, %178
  br i1 %179, label %180, label %181, !prof !3

180:                                              ; preds = %171
  call void @llvm.trap() #10
  unreachable

181:                                              ; preds = %171
  %182 = trunc i33 %177 to i32
  store i32 %182, i32* %172, align 4
  br label %183

183:                                              ; preds = %162, %166, %181
  %184 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 48, i1 false) #10
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  store i8 0, i8* %28, align 8
  store i32 0, i32* %29, align 8
  store i8 1, i8* %30, align 4
  store i8 0, i8* %31, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  store i8* null, i8** %36, align 8
  %188 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %188, i64* %38, align 8
  br label %193

189:                                              ; preds = %183
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %35, align 8
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 1
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %37, align 8
  br label %193

193:                                              ; preds = %189, %187
  %194 = phi i32 [ %191, %189 ], [ 0, %187 ]
  store i32 %194, i32* %39, align 8
  %195 = call i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"* %136, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  %196 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element18GetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"* %136, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, i64 %195) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  %197 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %196) #10
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #10
  br label %213

213:                                              ; preds = %212, %209, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  %214 = bitcast %"class.blink::Element"* %136 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %215 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %214, align 8
  %216 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %215, i64 27
  %217 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %216, align 8
  %218 = call %"class.WTF::StringImpl"* %217(%"class.blink::Element"* %136) #10
  store %"class.WTF::StringImpl"* %218, %"class.WTF::StringImpl"** %42, align 8
  %219 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %8) #10
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %221, label %223

221:                                              ; preds = %213
  store i8* null, i8** %44, align 8
  %222 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %222, i64* %47, align 8
  store i32 0, i32* %46, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  br label %239

223:                                              ; preds = %213
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %43, align 8
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 1
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %45, align 8
  store i32 %225, i32* %46, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %223
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %223
  %236 = phi i32 [ %234, %233 ], [ %232, %223 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #10
  br label %239

239:                                              ; preds = %238, %235, %221
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #10
  br label %255

255:                                              ; preds = %254, %251, %239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  %256 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %256, label %265, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %265, label %261

261:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #10
  %262 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %262, i64* %49, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %50, align 8
  store i32 1, i32* %51, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %53, align 8
  %263 = load i32, i32* %258, align 4
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 1
  store %"class.WTF::StringImpl"* %264, %"class.WTF::StringImpl"** %55, align 8
  store i32 %263, i32* %56, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  br label %265

265:                                              ; preds = %261, %257, %255
  br label %266

266:                                              ; preds = %265, %548
  %267 = phi i32 [ %549, %548 ], [ 0, %265 ]
  %268 = call dereferenceable(48) %"class.blink::DOMTokenList"* @_ZN5blink7Element9classListEv(%"class.blink::Element"* %136) #10
  %269 = getelementptr inbounds %"class.blink::DOMTokenList", %"class.blink::DOMTokenList"* %268, i64 0, i32 1, i32 0, i32 0
  %270 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %269, align 8
  %271 = icmp eq %"class.blink::SpaceSplitString::Data"* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %266
  %273 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %270, i64 0, i32 2, i32 0, i32 0, i32 2
  %274 = load i32, i32* %273, align 4
  br label %275

275:                                              ; preds = %272, %266
  %276 = phi i32 [ %274, %272 ], [ 0, %266 ]
  %277 = icmp ult i32 %267, %276
  br i1 %277, label %525, label %278

278:                                              ; preds = %275
  %279 = call i8* @_Znwm(i64 104) #12
  %280 = bitcast i8* %279 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits21InspectorIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %280, align 8
  %281 = getelementptr inbounds i8, i8* %279, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %281, i8 0, i64 96, i1 false) #10
  %282 = call i8* @_Znwm(i64 64) #12
  %283 = bitcast i8* %282 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits27LowTextContrastIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %283, align 8
  %284 = getelementptr inbounds i8, i8* %282, i64 16
  %285 = getelementptr inbounds i8, i8* %282, i64 8
  %286 = bitcast i8* %285 to i32*
  store i32 0, i32* %286, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %284, i8 0, i64 48, i1 false) #10
  %287 = getelementptr inbounds i8, i8* %282, i64 32
  %288 = fpext <2 x float> %139 to <2 x double>
  %289 = bitcast i8* %287 to <2 x double>*
  store <2 x double> %288, <2 x double>* %289, align 8
  %290 = getelementptr inbounds i8, i8* %282, i64 48
  br i1 %144, label %306, label %291

291:                                              ; preds = %278
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %306

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = zext i32 %298 to i33
  %300 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %299, i33 1) #10
  %301 = extractvalue { i33, i1 } %300, 1
  %302 = extractvalue { i33, i1 } %300, 0
  %303 = icmp slt i33 %302, 0
  %304 = or i1 %301, %303
  br i1 %304, label %305, label %309, !prof !3

305:                                              ; preds = %296
  call void @llvm.trap() #10
  unreachable

306:                                              ; preds = %291, %278
  %307 = ptrtoint %"class.WTF::StringImpl"* %143 to i64
  %308 = bitcast i8* %290 to i64*
  store i64 %307, i64* %308, align 8
  br label %329

309:                                              ; preds = %296
  %310 = trunc i33 %302 to i32
  store i32 %310, i32* %297, align 4
  %311 = bitcast i8* %290 to %"class.WTF::StringImpl"**
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = ptrtoint %"class.WTF::StringImpl"* %143 to i64
  %314 = bitcast i8* %290 to i64*
  store i64 %313, i64* %314, align 8
  %315 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %309
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #10
  br label %329

329:                                              ; preds = %328, %325, %309, %306
  %330 = getelementptr inbounds i8, i8* %282, i64 56
  br i1 %165, label %348, label %331

331:                                              ; preds = %329
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %348

336:                                              ; preds = %331
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i33
  %340 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %339, i33 1) #10
  %341 = extractvalue { i33, i1 } %340, 1
  %342 = extractvalue { i33, i1 } %340, 0
  %343 = icmp slt i33 %342, 0
  %344 = or i1 %341, %343
  br i1 %344, label %345, label %346, !prof !3

345:                                              ; preds = %336
  call void @llvm.trap() #10
  unreachable

346:                                              ; preds = %336
  %347 = trunc i33 %342 to i32
  store i32 %347, i32* %337, align 4
  br label %348

348:                                              ; preds = %346, %331, %329
  %349 = ptrtoint %"class.WTF::StringImpl"* %164 to i64
  %350 = bitcast i8* %330 to i64*
  %351 = bitcast i8* %330 to %"class.WTF::StringImpl"**
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  store i64 %349, i64* %350, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %348
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #10
  br label %367

367:                                              ; preds = %366, %363, %348
  %368 = fpext float %141 to double
  %369 = getelementptr inbounds i8, i8* %282, i64 24
  %370 = bitcast i8* %369 to double*
  store double %368, double* %370, align 8
  %371 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #10
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %390, label %373

373:                                              ; preds = %367
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %390

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = zext i32 %380 to i33
  %382 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %381, i33 1) #10
  %383 = extractvalue { i33, i1 } %382, 1
  %384 = extractvalue { i33, i1 } %382, 0
  %385 = icmp slt i33 %384, 0
  %386 = or i1 %383, %385
  br i1 %386, label %387, label %388, !prof !3

387:                                              ; preds = %378
  call void @llvm.trap() #10
  unreachable

388:                                              ; preds = %378
  %389 = trunc i33 %384 to i32
  store i32 %389, i32* %379, align 4
  br label %390

390:                                              ; preds = %388, %373, %367
  %391 = ptrtoint %"class.WTF::StringImpl"* %371 to i64
  %392 = bitcast i8* %284 to i64*
  %393 = bitcast i8* %284 to %"class.WTF::StringImpl"**
  %394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %393, align 8
  store i64 %391, i64* %392, align 8
  %395 = icmp eq %"class.WTF::StringImpl"* %394, null
  br i1 %395, label %409, label %396

396:                                              ; preds = %390
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  br i1 %400, label %403, label %405

403:                                              ; preds = %396
  %404 = add i32 %402, -1
  store i32 %404, i32* %401, align 4
  br label %405

405:                                              ; preds = %403, %396
  %406 = phi i32 [ %404, %403 ], [ %402, %396 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %394) #10
  br label %409

409:                                              ; preds = %408, %405, %390
  %410 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %136, i64 0, i32 0, i32 0
  %411 = call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %410) #10
  store i32 %411, i32* %286, align 8
  %412 = ptrtoint i8* %282 to i64
  br i1 %372, label %426, label %413

413:                                              ; preds = %409
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #10
  br label %426

426:                                              ; preds = %425, %422, %409
  %427 = getelementptr inbounds i8, i8* %279, i64 64
  %428 = bitcast i8* %427 to %"class.blink::protocol::Audits::LowTextContrastIssueDetails"**
  %429 = load %"class.blink::protocol::Audits::LowTextContrastIssueDetails"*, %"class.blink::protocol::Audits::LowTextContrastIssueDetails"** %428, align 8
  %430 = bitcast i8* %427 to i64*
  store i64 %412, i64* %430, align 8
  %431 = icmp eq %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* %429, null
  br i1 %431, label %437, label %432

432:                                              ; preds = %426
  %433 = bitcast %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* %429 to void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)***
  %434 = load void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)**, void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)*** %433, align 8
  %435 = getelementptr inbounds void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)*, void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)** %434, i64 2
  %436 = load void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)*, void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)** %435, align 8
  call void %436(%"class.blink::protocol::Audits::LowTextContrastIssueDetails"* nonnull %429) #10
  br label %437

437:                                              ; preds = %432, %426
  %438 = call i8* @_Znwm(i64 24) #12
  %439 = bitcast i8* %438 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits14InspectorIssueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %439, align 8
  %440 = getelementptr inbounds i8, i8* %438, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %440, i8 0, i64 16, i1 false) #10
  %441 = bitcast i8* %438 to %"class.blink::protocol::Audits::InspectorIssue"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  %442 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum20LowTextContrastIssueE, i64 0, i64 0)) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum20LowTextContrastIssueE, i64 0, i64 0), i64 %442) #10
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %443, null
  br i1 %444, label %445, label %451

445:                                              ; preds = %437
  %446 = ptrtoint %"class.WTF::StringImpl"* %443 to i64
  %447 = bitcast i8* %440 to i64*
  store i64 %446, i64* %447, align 8
  %448 = ptrtoint i8* %279 to i64
  %449 = getelementptr inbounds i8, i8* %438, i64 16
  %450 = bitcast i8* %449 to i64*
  store i64 %448, i64* %450, align 8
  br label %495

451:                                              ; preds = %437
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %462, label %456

456:                                              ; preds = %451
  %457 = ptrtoint %"class.WTF::StringImpl"* %443 to i64
  %458 = bitcast i8* %440 to i64*
  store i64 %457, i64* %458, align 8
  %459 = ptrtoint i8* %279 to i64
  %460 = getelementptr inbounds i8, i8* %438, i64 16
  %461 = bitcast i8* %460 to i64*
  store i64 %459, i64* %461, align 8
  br label %481

462:                                              ; preds = %451
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  %465 = zext i32 %464 to i33
  %466 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %465, i33 1) #10
  %467 = extractvalue { i33, i1 } %466, 1
  %468 = extractvalue { i33, i1 } %466, 0
  %469 = icmp slt i33 %468, 0
  %470 = or i1 %467, %469
  br i1 %470, label %471, label %472, !prof !3

471:                                              ; preds = %462
  call void @llvm.trap() #10
  unreachable

472:                                              ; preds = %462
  %473 = trunc i33 %468 to i32
  store i32 %473, i32* %463, align 4
  %474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %475 = ptrtoint %"class.WTF::StringImpl"* %443 to i64
  %476 = bitcast i8* %440 to i64*
  store i64 %475, i64* %476, align 8
  %477 = ptrtoint i8* %279 to i64
  %478 = getelementptr inbounds i8, i8* %438, i64 16
  %479 = bitcast i8* %478 to i64*
  store i64 %477, i64* %479, align 8
  %480 = icmp eq %"class.WTF::StringImpl"* %474, null
  br i1 %480, label %495, label %481

481:                                              ; preds = %456, %472
  %482 = phi %"class.WTF::StringImpl"* [ %443, %456 ], [ %474, %472 ]
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %481
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %481
  %492 = phi i32 [ %490, %489 ], [ %488, %481 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %482) #10
  br label %495

495:                                              ; preds = %445, %494, %491, %472
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  br i1 %256, label %509, label %496

496:                                              ; preds = %495
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %498 = load atomic i32, i32* %497 monotonic, align 4
  %499 = and i32 %498, 2
  %500 = icmp eq i32 %499, 0
  %501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %502 = load i32, i32* %501, align 4
  br i1 %500, label %503, label %505

503:                                              ; preds = %496
  %504 = add i32 %502, -1
  store i32 %504, i32* %501, align 4
  br label %505

505:                                              ; preds = %503, %496
  %506 = phi i32 [ %504, %503 ], [ %502, %496 ]
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %508, label %509

508:                                              ; preds = %505
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #10
  br label %509

509:                                              ; preds = %508, %505, %495
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #10
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %550, label %512

512:                                              ; preds = %509
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = and i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  br i1 %516, label %519, label %521

519:                                              ; preds = %512
  %520 = add i32 %518, -1
  store i32 %520, i32* %517, align 4
  br label %521

521:                                              ; preds = %519, %512
  %522 = phi i32 [ %520, %519 ], [ %518, %512 ]
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %550

524:                                              ; preds = %521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %510) #10
  br label %550

525:                                              ; preds = %275
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #10
  %526 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %526, i64* %58, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %59, align 8
  store i32 1, i32* %60, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %527 = call dereferenceable(48) %"class.blink::DOMTokenList"* @_ZN5blink7Element9classListEv(%"class.blink::Element"* %136) #10
  %528 = call %"class.WTF::StringImpl"* @_ZNK5blink12DOMTokenList4itemEj(%"class.blink::DOMTokenList"* %527, i32 %267) #10
  %529 = icmp eq %"class.WTF::StringImpl"* %528, null
  br i1 %529, label %530, label %532

530:                                              ; preds = %525
  store i8* null, i8** %63, align 8
  %531 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %531, i64* %66, align 8
  store i32 0, i32* %65, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #10
  br label %548

532:                                              ; preds = %525
  store %"class.WTF::StringImpl"* %528, %"class.WTF::StringImpl"** %62, align 8
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 1
  %534 = load i32, i32* %533, align 4
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 1
  store %"class.WTF::StringImpl"* %535, %"class.WTF::StringImpl"** %64, align 8
  store i32 %534, i32* %65, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #10
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %532
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %532
  %545 = phi i32 [ %543, %542 ], [ %541, %532 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %528) #10
  br label %548

548:                                              ; preds = %547, %544, %530
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  %549 = add nuw i32 %267, 1
  br label %266

550:                                              ; preds = %509, %521, %524
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #10
  call void @_ZN5blink8protocol6Audits8Frontend10issueAddedENSt3__110unique_ptrINS1_14InspectorIssueENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Audits::Frontend"* %184, %"class.blink::protocol::Audits::InspectorIssue"* nonnull %441) #10
  br i1 %165, label %564, label %551

551:                                              ; preds = %550
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %557 = load i32, i32* %556, align 4
  br i1 %555, label %558, label %560

558:                                              ; preds = %551
  %559 = add i32 %557, -1
  store i32 %559, i32* %556, align 4
  br label %560

560:                                              ; preds = %558, %551
  %561 = phi i32 [ %559, %558 ], [ %557, %551 ]
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %564

563:                                              ; preds = %560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #10
  br label %564

564:                                              ; preds = %563, %560, %550
  br i1 %144, label %578, label %565

565:                                              ; preds = %564
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 monotonic, align 4
  %568 = and i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %571 = load i32, i32* %570, align 4
  br i1 %569, label %572, label %574

572:                                              ; preds = %565
  %573 = add i32 %571, -1
  store i32 %573, i32* %570, align 4
  br label %574

574:                                              ; preds = %572, %565
  %575 = phi i32 [ %573, %572 ], [ %571, %565 ]
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %578

577:                                              ; preds = %574
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #10
  br label %578

578:                                              ; preds = %564, %574, %577
  %579 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 1
  %580 = icmp eq %"struct.blink::ContrastInfo"* %579, %21
  br i1 %580, label %69, label %133
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink17InspectorContrastC1EPNS_8DocumentE(%"class.blink::InspectorContrast"*, %"class.blink::Document"*) unnamed_addr #2

declare void @_ZN5blink17InspectorContrast29GetElementsWithContrastIssuesEbm(%"class.std::__1::vector.2204"* sret, %"class.blink::InspectorContrast"*, i1 zeroext, i64) local_unnamed_addr #2

declare void @_ZN5blink8protocol6Audits8Frontend10issueAddedENSt3__110unique_ptrINS1_14InspectorIssueENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::InspectorIssue"*) local_unnamed_addr #2

declare void @_ZN5blink8protocol6Audits8Frontend5flushEv(%"class.blink::protocol::Audits::Frontend"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent13checkContrastEN5crdtp6detail10ValueMaybeIbEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2183"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %7, align 8
  %9 = icmp eq %"class.blink::InspectedFrames"* %8, null
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = tail call i8* @_Znwm(i64 48) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %14, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i64 34, i1 false) #10
  %15 = getelementptr inbounds i8, i8* %11, i64 34
  store i8 0, i8* %15, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #10
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %48

20:                                               ; preds = %10
  %21 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %21) #12
  br label %48

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %8, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %23, align 8
  %25 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %24) #10
  %26 = icmp eq %"class.blink::LocalDOMWindow"* %25, null
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = tail call i8* @_Znwm(i64 32) #12
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %31, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i64 25, i1 false) #10
  %32 = getelementptr inbounds i8, i8* %28, i64 25
  store i8 0, i8* %32, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #10
  %33 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %48

37:                                               ; preds = %27
  %38 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %38) #12
  br label %48

39:                                               ; preds = %22
  %40 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %25) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 0, i8* %6, align 1
  %41 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2183", %"class.crdtp::detail::ValueMaybe.2183"* %2, i64 0, i32 0
  %42 = load i8, i8* %41, align 1, !range !4
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2183", %"class.crdtp::detail::ValueMaybe.2183"* %2, i64 0, i32 1
  %45 = select i1 %43, i8* %6, i8* %44
  %46 = load i8, i8* %45, align 1, !range !4
  %47 = icmp ne i8 %46, 0
  tail call void @_ZN5blink20InspectorAuditsAgent24CheckContrastForDocumentEPNS_8DocumentEb(%"class.blink::InspectorAuditsAgent"* %1, %"class.blink::Document"* %40, i1 zeroext %47)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  br label %48

48:                                               ; preds = %37, %27, %20, %10, %39
  ret void
}

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorAuditsAgent13checkContrastEN5crdtp6detail10ValueMaybeIbEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2183"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 -1, i32 4
  %5 = bitcast %"class.blink::Member.449"* %4 to %"class.blink::InspectorAuditsAgent"*
  tail call void @_ZN5blink20InspectorAuditsAgent13checkContrastEN5crdtp6detail10ValueMaybeIbEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAuditsAgent"* %5, %"class.crdtp::detail::ValueMaybe.2183"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 2
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  br label %49

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 1
  %11 = load i8, i8* %10, align 8, !range !4
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %15 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, i64 2
  %17 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %16, align 8
  tail call void %17(%"class.blink::InspectorAgentState::SimpleField"* %4) #10
  br label %31

18:                                               ; preds = %9
  store i8 1, i8* %5, align 1
  %19 = bitcast %"class.blink::WebVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #10
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %3) #10
  %21 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 0, i32 2
  %22 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %22, %"class.WTF::String"* dereferenceable(8) %23, %"class.blink::WebVector"* nonnull %3) #10
  %24 = load i8*, i8** %20, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %28 = ptrtoint i8* %24 to i64
  %29 = bitcast i8** %27 to i64*
  store i64 %28, i64* %29, align 8
  call void @_ZdlPv(i8* nonnull %24) #12
  br label %30

30:                                               ; preds = %26, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br label %31

31:                                               ; preds = %13, %30
  %32 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %32, align 8
  call void @_ZN5blink13CoreProbeSink23AddInspectorAuditsAgentEPNS_20InspectorAuditsAgentE(%"class.blink::CoreProbeSink"* %33, %"class.blink::InspectorAuditsAgent"* %1) #10
  %34 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 1
  %35 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %34, align 8
  %36 = call i64 @_ZNK5blink21InspectorIssueStorage4sizeEv(%"class.blink::InspectorIssueStorage"* %35) #10
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %44, %38 ], [ 0, %31 ]
  %40 = phi i32 [ %43, %38 ], [ 0, %31 ]
  %41 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %34, align 8
  %42 = call %"class.blink::protocol::Audits::InspectorIssue"* @_ZNK5blink21InspectorIssueStorage2atEm(%"class.blink::InspectorIssueStorage"* %41, i64 %39) #10
  call void @_ZN5blink20InspectorAuditsAgent19InspectorIssueAddedEPNS_8protocol6Audits14InspectorIssueE(%"class.blink::InspectorAuditsAgent"* %1, %"class.blink::protocol::Audits::InspectorIssue"* %42) #10
  %43 = add i32 %40, 1
  %44 = zext i32 %43 to i64
  %45 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %34, align 8
  %46 = call i64 @_ZNK5blink21InspectorIssueStorage4sizeEv(%"class.blink::InspectorIssueStorage"* %45) #10
  %47 = icmp ugt i64 %46, %44
  br i1 %47, label %38, label %48

48:                                               ; preds = %38, %31
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  br label %49

49:                                               ; preds = %48, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent11InnerEnableEv(%"class.blink::InspectorAuditsAgent"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %2, align 8
  tail call void @_ZN5blink13CoreProbeSink23AddInspectorAuditsAgentEPNS_20InspectorAuditsAgentE(%"class.blink::CoreProbeSink"* %3, %"class.blink::InspectorAuditsAgent"* %0) #10
  %4 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 1
  %5 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %4, align 8
  %6 = tail call i64 @_ZNK5blink21InspectorIssueStorage4sizeEv(%"class.blink::InspectorIssueStorage"* %5) #10
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %1
  ret void

9:                                                ; preds = %1, %9
  %10 = phi i64 [ %15, %9 ], [ 0, %1 ]
  %11 = phi i32 [ %14, %9 ], [ 0, %1 ]
  %12 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %4, align 8
  %13 = tail call %"class.blink::protocol::Audits::InspectorIssue"* @_ZNK5blink21InspectorIssueStorage2atEm(%"class.blink::InspectorIssueStorage"* %12, i64 %10) #10
  tail call void @_ZN5blink20InspectorAuditsAgent19InspectorIssueAddedEPNS_8protocol6Audits14InspectorIssueE(%"class.blink::InspectorAuditsAgent"* %0, %"class.blink::protocol::Audits::InspectorIssue"* %13)
  %14 = add i32 %11, 1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %4, align 8
  %17 = tail call i64 @_ZNK5blink21InspectorIssueStorage4sizeEv(%"class.blink::InspectorIssueStorage"* %16) #10
  %18 = icmp ugt i64 %17, %15
  br i1 %18, label %9, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorAuditsAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 -1, i32 4
  %4 = bitcast %"class.blink::Member.449"* %3 to %"class.blink::InspectorAuditsAgent"*
  tail call void @_ZN5blink20InspectorAuditsAgent6enableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAuditsAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 1
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, %4
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  store i8 %8, i8* %3, align 1
  %11 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 0, i32 2
  %12 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %12, %"class.WTF::String"* dereferenceable(8) %13, %"class.blink::WebVector"* null) #10
  br label %14

14:                                               ; preds = %6, %10
  %15 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %15, align 8
  tail call void @_ZN5blink13CoreProbeSink26RemoveInspectorAuditsAgentEPNS_20InspectorAuditsAgentE(%"class.blink::CoreProbeSink"* %16, %"class.blink::InspectorAuditsAgent"* %1) #10
  br label %17

17:                                               ; preds = %2, %14
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector"* null) #10
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN5blink13CoreProbeSink26RemoveInspectorAuditsAgentEPNS_20InspectorAuditsAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorAuditsAgent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink20InspectorAuditsAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAuditsAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %1, i64 -1, i32 4
  %4 = bitcast %"class.blink::Member.449"* %3 to %"class.blink::InspectorAuditsAgent"*
  %5 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %4, i64 0, i32 2, i32 2
  %6 = load i8, i8* %5, align 1, !range !4, !noalias !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Member.449", %"class.blink::Member.449"* %3, i64 11
  %10 = bitcast %"class.blink::Member.449"* %9 to i8*
  %11 = load i8, i8* %10, align 8, !range !4, !noalias !8
  %12 = icmp eq i8 %11, %6
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  store i8 %11, i8* %5, align 1, !noalias !8
  %14 = getelementptr inbounds %"class.blink::Member.449", %"class.blink::Member.449"* %3, i64 10
  %15 = bitcast %"class.blink::Member.449"* %14 to %"class.blink::InspectorSessionState"**
  %16 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %15, align 8, !noalias !8
  %17 = getelementptr inbounds %"class.blink::Member.449", %"class.blink::Member.449"* %3, i64 9
  %18 = bitcast %"class.blink::Member.449"* %17 to %"class.WTF::String"*
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %16, %"class.WTF::String"* dereferenceable(8) %18, %"class.blink::WebVector"* null) #10
  br label %19

19:                                               ; preds = %13, %8
  %20 = getelementptr inbounds %"class.blink::Member.449", %"class.blink::Member.449"* %3, i64 2
  %21 = bitcast %"class.blink::Member.449"* %20 to %"class.blink::CoreProbeSink"**
  %22 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %21, align 8, !noalias !8
  tail call void @_ZN5blink13CoreProbeSink26RemoveInspectorAuditsAgentEPNS_20InspectorAuditsAgentE(%"class.blink::CoreProbeSink"* %22, %"class.blink::InspectorAuditsAgent"* %4) #10
  br label %23

23:                                               ; preds = %2, %19
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent7RestoreEv(%"class.blink::InspectorAuditsAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 2, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %6, align 8
  tail call void @_ZN5blink13CoreProbeSink23AddInspectorAuditsAgentEPNS_20InspectorAuditsAgentE(%"class.blink::CoreProbeSink"* %7, %"class.blink::InspectorAuditsAgent"* %0) #10
  %8 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 1
  %9 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %8, align 8
  %10 = tail call i64 @_ZNK5blink21InspectorIssueStorage4sizeEv(%"class.blink::InspectorIssueStorage"* %9) #10
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %5, %12
  %13 = phi i64 [ %18, %12 ], [ 0, %5 ]
  %14 = phi i32 [ %17, %12 ], [ 0, %5 ]
  %15 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %8, align 8
  %16 = tail call %"class.blink::protocol::Audits::InspectorIssue"* @_ZNK5blink21InspectorIssueStorage2atEm(%"class.blink::InspectorIssueStorage"* %15, i64 %13) #10
  tail call void @_ZN5blink20InspectorAuditsAgent19InspectorIssueAddedEPNS_8protocol6Audits14InspectorIssueE(%"class.blink::InspectorAuditsAgent"* %0, %"class.blink::protocol::Audits::InspectorIssue"* %16) #10
  %17 = add i32 %14, 1
  %18 = zext i32 %17 to i64
  %19 = load %"class.blink::InspectorIssueStorage"*, %"class.blink::InspectorIssueStorage"** %8, align 8
  %20 = tail call i64 @_ZNK5blink21InspectorIssueStorage4sizeEv(%"class.blink::InspectorIssueStorage"* %19) #10
  %21 = icmp ugt i64 %20, %18
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %1, %5
  ret void
}

declare void @_ZN5blink13CoreProbeSink23AddInspectorAuditsAgentEPNS_20InspectorAuditsAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorAuditsAgent"*) local_unnamed_addr #2

declare i64 @_ZNK5blink21InspectorIssueStorage4sizeEv(%"class.blink::InspectorIssueStorage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InspectorAuditsAgent19InspectorIssueAddedEPNS_8protocol6Audits14InspectorIssueE(%"class.blink::InspectorAuditsAgent"* nocapture readonly, %"class.blink::protocol::Audits::InspectorIssue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.2436", align 16
  %4 = alloca %"class.crdtp::StatusOr", align 8
  %5 = alloca %"class.std::__1::vector.2436", align 16
  %6 = getelementptr inbounds %"class.blink::InspectorAuditsAgent", %"class.blink::InspectorAuditsAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %6, align 8
  %8 = bitcast %"class.std::__1::vector.2436"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %9 = bitcast %"class.std::__1::vector.2436"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #10
  %13 = getelementptr inbounds %"class.blink::protocol::Audits::InspectorIssue", %"class.blink::protocol::Audits::InspectorIssue"* %1, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::protocol::Audits::InspectorIssue"* %1 to void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.2436"*)***
  %15 = load void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.2436"*)**, void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.2436"*)*** %14, align 8
  %16 = load void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.2436"*)*, void (%"class.crdtp::Serializable"*, %"class.std::__1::vector.2436"*)** %15, align 8
  call void %16(%"class.crdtp::Serializable"* %13, %"class.std::__1::vector.2436"* nonnull %3) #10
  %17 = bitcast %"class.crdtp::StatusOr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = bitcast i8** %11 to i64*
  %19 = bitcast %"class.std::__1::vector.2436"* %3 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 16
  %21 = bitcast %"class.std::__1::vector.2436"* %5 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %21, align 16
  %22 = bitcast i8** %12 to i64*
  %23 = load i64, i64* %22, align 16
  %24 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #10
  call void @_ZN5crdtp28DeserializableProtocolObjectIN5blink8protocol6Audits14InspectorIssueEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.crdtp::StatusOr"* nonnull sret %4, %"class.std::__1::vector.2436"* nonnull %5) #10
  %26 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.blink::protocol::Audits::InspectorIssue"*, %"class.blink::protocol::Audits::InspectorIssue"** %26, align 8
  store %"class.blink::protocol::Audits::InspectorIssue"* null, %"class.blink::protocol::Audits::InspectorIssue"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %5, i64 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 16
  %30 = icmp eq i8* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %5, i64 0, i32 0, i32 1
  %33 = bitcast i8** %32 to i64*
  %34 = ptrtoint i8* %29 to i64
  store i64 %34, i64* %33, align 8
  call void @_ZdlPv(i8* nonnull %29) #12
  br label %35

35:                                               ; preds = %31, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %36 = load i8*, i8** %10, align 16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = ptrtoint i8* %36 to i64
  store i64 %39, i64* %18, align 8
  call void @_ZdlPv(i8* nonnull %36) #12
  br label %40

40:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  call void @_ZN5blink8protocol6Audits8Frontend10issueAddedENSt3__110unique_ptrINS1_14InspectorIssueENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Audits::Frontend"* %7, %"class.blink::protocol::Audits::InspectorIssue"* %27) #10
  %41 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %6, align 8
  call void @_ZN5blink8protocol6Audits8Frontend5flushEv(%"class.blink::protocol::Audits::Frontend"* %41) #10
  ret void
}

declare %"class.blink::protocol::Audits::InspectorIssue"* @_ZNK5blink21InspectorIssueStorage2atEm(%"class.blink::InspectorIssueStorage"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #10
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #12
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Audits::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Audits::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Audits::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol6Audits10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Audits::Backend"* %26) #10
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #10
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %16, align 8
  store %"class.blink::protocol::Audits::Frontend"* null, %"class.blink::protocol::Audits::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Audits::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Audits::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %3, align 8
  store %"class.blink::protocol::Audits::Frontend"* null, %"class.blink::protocol::Audits::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Audits::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Audits::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #10
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [8 x i8*] }, { [11 x i8*], [8 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Audits::Frontend"*, %"class.blink::protocol::Audits::Frontend"** %5, align 8
  store %"class.blink::protocol::Audits::Frontend"* null, %"class.blink::protocol::Audits::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Audits::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Audits::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #10
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #10
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol6Audits8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink8WebImage8FromDataERKNS_7WebDataERKN3gfx4SizeE(%class.SkBitmap* sret, %"class.blink::WebData"* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #2

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.2393* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage10readPixelsERK8SkPixmapiiNS_11CachingHintE(%class.SkImage*, %class.SkPixmap* dereferenceable(40), i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::ImageDataBuffer"* @_ZN5blink15ImageDataBuffer6CreateERK8SkPixmap(%class.SkPixmap* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEEENS_12StringAppendINS_10StringViewET_EERKS3_S4_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca [24 x i8], align 8
  %5 = getelementptr inbounds [24 x i8], [24 x i8]* %4, i64 0, i64 0
  %6 = bitcast %"class.WTF::StringView"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %7, label %55, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8
  %26 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %5, i64 24, i1 false)
  %27 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %27, align 8
  %28 = load atomic i32, i32* %9 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %25
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %41, %25
  %44 = phi i32 [ %42, %41 ], [ %32, %25 ]
  %45 = load atomic i32, i32* %9 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = add i32 %44, -1
  store i32 %49, i32* %31, align 4
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i32 [ %49, %48 ], [ %44, %43 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  %54 = load i32, i32* %31, align 4
  br label %58

55:                                               ; preds = %3
  %56 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %5, i64 24, i1 false)
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  br label %69

58:                                               ; preds = %50, %53
  %59 = phi i32 [ %51, %50 ], [ %54, %53 ]
  %60 = load atomic i32, i32* %9 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %58
  %64 = add i32 %59, -1
  store i32 %64, i32* %31, align 4
  br label %65

65:                                               ; preds = %63, %58
  %66 = phi i32 [ %64, %63 ], [ %59, %58 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #10
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEEcvS2_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2404", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2404", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %85, label %17

17:                                               ; preds = %1
  %18 = icmp eq %"class.WTF::StringImpl"* %11, null
  %19 = select i1 %18, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %85, label %24

24:                                               ; preds = %17
  %25 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %26 = tail call i32 @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %27 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %26, i8** nonnull dereferenceable(8) %6) #10
  %28 = load i8*, i8** %6, align 8
  %29 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %31, i64 24, i1 false) #10
  %32 = bitcast %"class.WTF::StringTypeAdapter.2404"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2404", %"class.WTF::StringTypeAdapter.2404"* %5, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2404", %"class.WTF::StringTypeAdapter.2404"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #10
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %24
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %37, %39
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.2404"* %5 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %33, align 8
  store i32 %48, i32* %34, align 8
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #10
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2404", %"class.WTF::StringTypeAdapter.2404"* %5, i64 0, i32 0
  %51 = load i32, i32* %30, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %28, i64 %52
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %50, i8* %53) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  %54 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %54, label %146, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %72

62:                                               ; preds = %55
  %63 = zext i32 %61 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #10
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %62
  call void @llvm.trap() #10
  unreachable

70:                                               ; preds = %62
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %60, align 4
  br label %72

72:                                               ; preds = %55, %70
  %73 = phi i32 [ %71, %70 ], [ %61, %55 ]
  %74 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %75 = load atomic i32, i32* %56 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %80 = add i32 %73, -1
  store i32 %80, i32* %79, align 4
  br label %81

81:                                               ; preds = %78, %72
  %82 = phi i32 [ %80, %78 ], [ %73, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %146

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %146

85:                                               ; preds = %17, %1
  %86 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %87 = tail call i32 @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %88 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %87, i16** nonnull dereferenceable(8) %7) #10
  %89 = load i16*, i16** %7, align 8
  %90 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #10
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 2
  %92 = bitcast %"class.WTF::StringAppend"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %92, i64 24, i1 false) #10
  %93 = bitcast %"class.WTF::StringTypeAdapter.2404"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #10
  %94 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2404", %"class.WTF::StringTypeAdapter.2404"* %3, i64 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2404", %"class.WTF::StringTypeAdapter.2404"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false) #10
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %98, label %100

98:                                               ; preds = %85
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %106

100:                                              ; preds = %85
  %101 = ptrtoint %"class.WTF::StringImpl"* %96 to i64
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i8*
  br label %106

106:                                              ; preds = %98, %100
  %107 = phi i8* [ null, %98 ], [ %105, %100 ]
  %108 = phi i64 [ %99, %98 ], [ %101, %100 ]
  %109 = phi i32 [ 0, %98 ], [ %103, %100 ]
  %110 = bitcast %"class.WTF::StringTypeAdapter.2404"* %3 to i64*
  store i64 %108, i64* %110, align 8
  store i8* %107, i8** %94, align 8
  store i32 %109, i32* %95, align 8
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %89) #10
  %111 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2404", %"class.WTF::StringTypeAdapter.2404"* %3, i64 0, i32 0
  %112 = load i32, i32* %91, align 8
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i16, i16* %89, i64 %113
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %111, i16* %114) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #10
  %115 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %115, label %146, label %116

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %133

123:                                              ; preds = %116
  %124 = zext i32 %122 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #10
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !3

130:                                              ; preds = %123
  call void @llvm.trap() #10
  unreachable

131:                                              ; preds = %123
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %121, align 4
  br label %133

133:                                              ; preds = %116, %131
  %134 = phi i32 [ %132, %131 ], [ %122, %116 ]
  %135 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %136 = load atomic i32, i32* %117 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %141 = add i32 %134, -1
  store i32 %141, i32* %140, align 4
  br label %142

142:                                              ; preds = %139, %133
  %143 = phi i32 [ %141, %139 ], [ %134, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #10
  br label %146

146:                                              ; preds = %145, %142, %106, %84, %81, %45
  %147 = phi i8* [ %25, %45 ], [ %25, %81 ], [ %25, %84 ], [ %86, %106 ], [ %86, %142 ], [ %86, %145 ]
  %148 = phi i64 [ 0, %45 ], [ %74, %81 ], [ %74, %84 ], [ 0, %106 ], [ %135, %142 ], [ %135, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #10
  %149 = inttoptr i64 %148 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %149
}

declare zeroext i1 @_ZN5blink26ParseImageEncodingMimeTypeERKN3WTF6StringERNS_21ImageEncodingMimeTypeE(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15ImageDataBuffer11EncodeImageENS_21ImageEncodingMimeTypeERKdPN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.blink::ImageDataBuffer"*, i32, double* dereferenceable(8), %"class.WTF::Vector.219"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #5

declare void @_ZN5blink7WebData6AssignEPKcm(%"class.blink::WebData"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink7WebData5ResetEv(%"class.blink::WebData"*) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_10StringViewENS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %1, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %1 ]
  %18 = add i32 %17, %9
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %18, %9
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = icmp ult i32 %18, %17
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  store i8* null, i8** %35, align 8
  br label %48

39:                                               ; preds = %33
  %40 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #10
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  store i8* %43, i8** %35, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %38, %39, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #10
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #10
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #10
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #10
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::DOMTokenList"* @_ZN5blink7Element9classListEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink12DOMTokenList4itemEj(%"class.blink::DOMTokenList"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element18GetAttributeHintedERKN3WTF12AtomicStringENS1_17AtomicStringTable10WeakResultE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), i64) local_unnamed_addr #2

declare i64 @_ZNK5blink7Element24WeakLowercaseIfNecessaryERKN3WTF10StringViewE(%"class.blink::Element"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorNetworkAgent"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #10
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #10
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #10
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #2

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #10
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #10
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector"*) local_unnamed_addr #2

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp28DeserializableProtocolObjectIN5blink8protocol6Audits14InspectorIssueEE8ReadFromENSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.crdtp::StatusOr"* noalias sret, %"class.std::__1::vector.2436"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.crdtp::DeserializerState", align 8
  %4 = alloca %"class.std::__1::vector.2436", align 16
  %5 = bitcast %"class.crdtp::DeserializerState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 120, i1 false)
  %6 = bitcast %"class.std::__1::vector.2436"* %1 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = bitcast %"class.std::__1::vector.2436"* %4 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 16
  %9 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 16
  %14 = bitcast %"class.std::__1::vector.2436"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  call void @_ZN5crdtp17DeserializerStateC1ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crdtp::DeserializerState"* nonnull %3, %"class.std::__1::vector.2436"* nonnull %4) #10
  %15 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %4, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 16
  %17 = icmp eq i8* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::vector.2436", %"class.std::__1::vector.2436"* %4, i64 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = ptrtoint i8* %16 to i64
  store i64 %21, i64* %20, align 8
  call void @_ZdlPv(i8* nonnull %16) #12
  br label %22

22:                                               ; preds = %2, %18
  %23 = call i8* @_Znwm(i64 24) #12
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits14InspectorIssueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10
  %26 = call dereferenceable(24) %"class.crdtp::DeserializerDescriptor"* @_ZN5blink8protocol6Audits14InspectorIssue23deserializer_descriptorEv() #10
  %27 = call zeroext i1 @_ZNK5crdtp22DeserializerDescriptor11DeserializeEPNS_17DeserializerStateEPv(%"class.crdtp::DeserializerDescriptor"* %26, %"class.crdtp::DeserializerState"* nonnull %3, i8* nonnull %23) #10
  br i1 %27, label %37, label %28

28:                                               ; preds = %22
  %29 = bitcast i8* %23 to %"class.blink::protocol::Audits::InspectorIssue"*
  %30 = bitcast i8* %23 to void (%"class.blink::protocol::Audits::InspectorIssue"*)***
  %31 = load void (%"class.blink::protocol::Audits::InspectorIssue"*)**, void (%"class.blink::protocol::Audits::InspectorIssue"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::protocol::Audits::InspectorIssue"*)*, void (%"class.blink::protocol::Audits::InspectorIssue"*)** %31, i64 2
  %33 = load void (%"class.blink::protocol::Audits::InspectorIssue"*)*, void (%"class.blink::protocol::Audits::InspectorIssue"*)** %32, align 8
  call void %33(%"class.blink::protocol::Audits::InspectorIssue"* nonnull %29) #10
  %34 = call { i32, i64 } @_ZNK5crdtp17DeserializerState6statusEv(%"class.crdtp::DeserializerState"* nonnull %3) #10
  %35 = extractvalue { i32, i64 } %34, 0
  %36 = extractvalue { i32, i64 } %34, 1
  br label %39

37:                                               ; preds = %22
  %38 = ptrtoint i8* %23 to i64
  br label %39

39:                                               ; preds = %37, %28
  %40 = phi i32 [ 0, %37 ], [ %35, %28 ]
  %41 = phi i64 [ -1, %37 ], [ %36, %28 ]
  %42 = phi i64 [ %38, %37 ], [ 0, %28 ]
  %43 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 0, i32 0
  store i32 %40, i32* %43, align 8
  %44 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 0, i32 1
  store i64 %41, i64* %44, align 8
  %45 = getelementptr inbounds %"class.crdtp::StatusOr", %"class.crdtp::StatusOr"* %0, i64 0, i32 1
  %46 = bitcast %"class.std::__1::unique_ptr.237"* %45 to i64*
  store i64 %42, i64* %46, align 8
  %47 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.crdtp::span.2445"*, %"class.crdtp::span.2445"** %47, align 8
  %49 = icmp eq %"class.crdtp::span.2445"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %39
  %51 = ptrtoint %"class.crdtp::span.2445"* %48 to i64
  %52 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 3, i32 0, i32 1
  %53 = bitcast %"class.crdtp::span.2445"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast %"class.crdtp::span.2445"* %48 to i8*
  call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %50, %39
  %56 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 1
  call void @_ZN5crdtp4cbor13CBORTokenizerD1Ev(%"class.crdtp::cbor::CBORTokenizer"* %56) #10
  %57 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %3, i64 0, i32 0, i32 1
  %58 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %57, align 8
  %59 = icmp eq %"class.std::__1::__shared_weak_count"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %58, i64 0, i32 0, i32 1
  %62 = atomicrmw add i64* %61, i64 -1 acq_rel
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %58, i64 0, i32 0
  %66 = bitcast %"class.std::__1::__shared_weak_count"* %58 to void (%"class.std::__1::__shared_count"*)***
  %67 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %67, i64 2
  %69 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %68, align 8
  call void %69(%"class.std::__1::__shared_count"* %65) #10
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %58) #10
  br label %70

70:                                               ; preds = %55, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #10
  ret void
}

declare void @_ZN5crdtp17DeserializerStateC1ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crdtp::DeserializerState"*, %"class.std::__1::vector.2436"*) unnamed_addr #2

declare { i32, i64 } @_ZNK5crdtp17DeserializerState6statusEv(%"class.crdtp::DeserializerState"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.crdtp::DeserializerDescriptor"* @_ZN5blink8protocol6Audits14InspectorIssue23deserializer_descriptorEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK5crdtp22DeserializerDescriptor11DeserializeEPNS_17DeserializerStateEPv(%"class.crdtp::DeserializerDescriptor"*, %"class.crdtp::DeserializerState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5crdtp4cbor13CBORTokenizerD1Ev(%"class.crdtp::cbor::CBORTokenizer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #5

declare void @_ZN5blink8protocol6Audits10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Audits::Backend"*) local_unnamed_addr #2

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink20InspectorAuditsAgent7disableEv: argument 0"}
!10 = distinct !{!10, !"_ZN5blink20InspectorAuditsAgent7disableEv"}
