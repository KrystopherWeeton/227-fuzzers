; ModuleID = '../../ui/base/prediction/kalman_predictor.cc'
source_filename = "../../ui/base/prediction/kalman_predictor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.ui::KalmanPredictor" = type <{ %"class.ui::InputPredictor", %"class.ui::KalmanFilter", %"class.ui::KalmanFilter", %"class.ui::KalmanFilter", %"class.std::__1::deque", i32, [4 x i8] }>
%"class.ui::InputPredictor" = type { i32 (...)** }
%"class.ui::KalmanFilter" = type <{ %"class.gfx::Vector3dF", %"class.gfx::Matrix3F", %"class.gfx::Matrix3F", %"class.gfx::Matrix3F", %"class.gfx::Vector3dF", [4 x i8], double, i32, [4 x i8] }>
%"class.gfx::Matrix3F" = type { [9 x float] }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__split_buffer" = type { %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"**, %"class.std::__1::__compressed_pair" }
%"struct.ui::InputPredictor::InputData" = type { %"class.gfx::PointF", %"class.base::TimeTicks" }
%"class.gfx::PointF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::InputPredictor::InputData"** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.std::__1::__split_buffer.10" = type { %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__15dequeIN2ui14InputPredictor9InputDataENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

@_ZN2ui14InputPredictor13kMaxTimeDeltaE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 20000 }, align 8
@_ZN2ui14InputPredictor16kMaxResampleTimeE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 20000 }, align 8
@_ZN2ui14InputPredictor18kMaxPredictionTimeE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 25000 }, align 8
@_ZN2ui14InputPredictor13kTimeIntervalE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 8000 }, align 8
@_ZN2ui14InputPredictor16kMinTimeIntervalE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 2500 }, align 8
@_ZN2ui15KalmanPredictor15kMaxTimeInQueueE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 40000 }, align 8
@_ZTVN2ui15KalmanPredictorE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::KalmanPredictor"*)* @_ZN2ui15KalmanPredictorD2Ev to i8*), i8* bitcast (void (%"class.ui::KalmanPredictor"*)* @_ZN2ui15KalmanPredictorD0Ev to i8*), i8* bitcast (i8* (%"class.ui::KalmanPredictor"*)* @_ZNK2ui15KalmanPredictor7GetNameEv to i8*), i8* bitcast (void (%"class.ui::KalmanPredictor"*)* @_ZN2ui15KalmanPredictor5ResetEv to i8*), i8* bitcast (void (%"class.ui::KalmanPredictor"*, %"struct.ui::InputPredictor::InputData"*)* @_ZN2ui15KalmanPredictor6UpdateERKNS_14InputPredictor9InputDataE to i8*), i8* bitcast (i1 (%"class.ui::KalmanPredictor"*)* @_ZNK2ui15KalmanPredictor13HasPredictionEv to i8*), i8* bitcast (%"struct.ui::InputPredictor::InputData"* (%"class.ui::KalmanPredictor"*, i64, i64)* @_ZN2ui15KalmanPredictor18GeneratePredictionEN4base9TimeTicksENS1_9TimeDeltaE to i8*), i8* bitcast (i64 (%"class.ui::KalmanPredictor"*)* @_ZNK2ui15KalmanPredictor12TimeIntervalEv to i8*)] }, align 8
@_ZN8features20kPredictorNameKalmanE = external constant [0 x i8], align 1

@_ZN2ui15KalmanPredictorC1Ej = hidden unnamed_addr alias void (%"class.ui::KalmanPredictor"*, i32), void (%"class.ui::KalmanPredictor"*, i32)* @_ZN2ui15KalmanPredictorC2Ej
@_ZN2ui15KalmanPredictorD1Ev = hidden unnamed_addr alias void (%"class.ui::KalmanPredictor"*), void (%"class.ui::KalmanPredictor"*)* @_ZN2ui15KalmanPredictorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15KalmanPredictorC2Ej(%"class.ui::KalmanPredictor"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui15KalmanPredictorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  tail call void @_ZN2ui12KalmanFilterC1Ev(%"class.ui::KalmanFilter"* %4) #11
  %5 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  tail call void @_ZN2ui12KalmanFilterC1Ev(%"class.ui::KalmanFilter"* %5) #11
  %6 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 3
  tail call void @_ZN2ui12KalmanFilterC1Ev(%"class.ui::KalmanFilter"* %6) #11
  %7 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::deque"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #11
  %9 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 5
  store i32 %1, i32* %9, align 8
  ret void
}

declare void @_ZN2ui12KalmanFilterC1Ev(%"class.ui::KalmanFilter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15KalmanPredictorD2Ev(%"class.ui::KalmanPredictor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui15KalmanPredictorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 8
  %8 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %4, i64 %7
  %9 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %10 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %9, align 8
  %11 = icmp eq %"struct.ui::InputPredictor::InputData"** %10, %4
  %12 = ptrtoint %"struct.ui::InputPredictor::InputData"** %10 to i64
  %13 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %8, align 8
  %18 = and i64 %6, 255
  %19 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %17, i64 %18
  %20 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = lshr i64 %22, 8
  %24 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %4, i64 %23
  %25 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %24, align 8
  %26 = and i64 %22, 255
  %27 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %25, i64 %26
  %28 = icmp eq %"struct.ui::InputPredictor::InputData"* %27, %19
  br i1 %28, label %29, label %35

29:                                               ; preds = %48, %16, %14
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ], [ %20, %48 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast %"struct.ui::InputPredictor::InputData"*** %9 to i64*
  %32 = sub i64 %12, %13
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %53, label %66

35:                                               ; preds = %16, %48
  %36 = phi %"struct.ui::InputPredictor::InputData"* [ %51, %48 ], [ %19, %16 ]
  %37 = phi %"struct.ui::InputPredictor::InputData"** [ %50, %48 ], [ %8, %16 ]
  %38 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %36, i64 1
  %39 = ptrtoint %"struct.ui::InputPredictor::InputData"* %38 to i64
  %40 = bitcast %"struct.ui::InputPredictor::InputData"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4096
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %37, i64 1
  %46 = bitcast %"struct.ui::InputPredictor::InputData"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %44, %35
  %49 = phi i64 [ %47, %44 ], [ %39, %35 ]
  %50 = phi %"struct.ui::InputPredictor::InputData"** [ %45, %44 ], [ %37, %35 ]
  %51 = inttoptr i64 %49 to %"struct.ui::InputPredictor::InputData"*
  %52 = icmp eq %"struct.ui::InputPredictor::InputData"* %27, %51
  br i1 %52, label %29, label %35

53:                                               ; preds = %29, %53
  %54 = phi %"struct.ui::InputPredictor::InputData"** [ %58, %53 ], [ %4, %29 ]
  %55 = bitcast %"struct.ui::InputPredictor::InputData"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #12
  %57 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %58 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %57, i64 1
  store %"struct.ui::InputPredictor::InputData"** %58, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %59 = load i64, i64* %31, align 8
  %60 = ptrtoint %"struct.ui::InputPredictor::InputData"** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %53, label %64

64:                                               ; preds = %53
  %65 = inttoptr i64 %59 to %"struct.ui::InputPredictor::InputData"**
  br label %66

66:                                               ; preds = %64, %29
  %67 = phi %"struct.ui::InputPredictor::InputData"** [ %10, %29 ], [ %65, %64 ]
  %68 = phi %"struct.ui::InputPredictor::InputData"** [ %4, %29 ], [ %58, %64 ]
  %69 = phi i64 [ %33, %29 ], [ %62, %64 ]
  switch i64 %69, label %73 [
    i64 1, label %71
    i64 2, label %70
  ]

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %66, %70
  %72 = phi i64 [ 256, %70 ], [ 128, %66 ]
  store i64 %72, i64* %5, align 8
  br label %73

73:                                               ; preds = %71, %66
  %74 = icmp eq %"struct.ui::InputPredictor::InputData"** %68, %67
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.ui::InputPredictor::InputData"** [ %79, %75 ], [ %68, %73 ]
  %77 = bitcast %"struct.ui::InputPredictor::InputData"** %76 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #12
  %79 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %76, i64 1
  %80 = icmp eq %"struct.ui::InputPredictor::InputData"** %79, %67
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %83 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %9, align 8
  %84 = icmp eq %"struct.ui::InputPredictor::InputData"** %83, %82
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.ui::InputPredictor::InputData"** %82 to i64
  %87 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %83, i64 -1
  %88 = ptrtoint %"struct.ui::InputPredictor::InputData"** %87 to i64
  %89 = sub i64 %88, %86
  %90 = lshr i64 %89, 3
  %91 = xor i64 %90, -1
  %92 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %83, i64 %91
  store %"struct.ui::InputPredictor::InputData"** %92, %"struct.ui::InputPredictor::InputData"*** %9, align 8
  br label %93

93:                                               ; preds = %85, %81, %73
  %94 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %95 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %94, align 8
  %96 = icmp eq %"struct.ui::InputPredictor::InputData"** %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast %"struct.ui::InputPredictor::InputData"** %95 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %93, %97
  %100 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 3
  tail call void @_ZN2ui12KalmanFilterD1Ev(%"class.ui::KalmanFilter"* %100) #11
  %101 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  tail call void @_ZN2ui12KalmanFilterD1Ev(%"class.ui::KalmanFilter"* %101) #11
  %102 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  tail call void @_ZN2ui12KalmanFilterD1Ev(%"class.ui::KalmanFilter"* %102) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui12KalmanFilterD1Ev(%"class.ui::KalmanFilter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15KalmanPredictorD0Ev(%"class.ui::KalmanPredictor"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui15KalmanPredictorD2Ev(%"class.ui::KalmanPredictor"* %0) #11
  %2 = bitcast %"class.ui::KalmanPredictor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK2ui15KalmanPredictor7GetNameEv(%"class.ui::KalmanPredictor"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features20kPredictorNameKalmanE, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15KalmanPredictor5ResetEv(%"class.ui::KalmanPredictor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  tail call void @_ZN2ui12KalmanFilter5ResetEv(%"class.ui::KalmanFilter"* %2) #11
  %3 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  tail call void @_ZN2ui12KalmanFilter5ResetEv(%"class.ui::KalmanFilter"* %3) #11
  %4 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %5 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 8
  %9 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %5, i64 %8
  %10 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %11 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %12 = icmp eq %"struct.ui::InputPredictor::InputData"** %11, %5
  %13 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %14 = ptrtoint %"struct.ui::InputPredictor::InputData"** %5 to i64
  br i1 %12, label %15, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  br label %30

17:                                               ; preds = %1
  %18 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %9, align 8
  %19 = and i64 %7, 255
  %20 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %18, i64 %19
  %21 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %7
  %24 = lshr i64 %23, 8
  %25 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %5, i64 %24
  %26 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %25, align 8
  %27 = and i64 %23, 255
  %28 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %26, i64 %27
  %29 = icmp eq %"struct.ui::InputPredictor::InputData"* %28, %20
  br i1 %29, label %30, label %36

30:                                               ; preds = %49, %17, %15
  %31 = phi i64* [ %16, %15 ], [ %21, %17 ], [ %21, %49 ]
  store i64 0, i64* %31, align 8
  %32 = bitcast %"struct.ui::InputPredictor::InputData"*** %10 to i64*
  %33 = sub i64 %13, %14
  %34 = ashr exact i64 %33, 3
  %35 = icmp ugt i64 %34, 2
  br i1 %35, label %54, label %65

36:                                               ; preds = %17, %49
  %37 = phi %"struct.ui::InputPredictor::InputData"* [ %52, %49 ], [ %20, %17 ]
  %38 = phi %"struct.ui::InputPredictor::InputData"** [ %51, %49 ], [ %9, %17 ]
  %39 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %37, i64 1
  %40 = ptrtoint %"struct.ui::InputPredictor::InputData"* %39 to i64
  %41 = bitcast %"struct.ui::InputPredictor::InputData"** %38 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = icmp eq i64 %43, 4096
  br i1 %44, label %45, label %49

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %38, i64 1
  %47 = bitcast %"struct.ui::InputPredictor::InputData"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  br label %49

49:                                               ; preds = %45, %36
  %50 = phi i64 [ %48, %45 ], [ %40, %36 ]
  %51 = phi %"struct.ui::InputPredictor::InputData"** [ %46, %45 ], [ %38, %36 ]
  %52 = inttoptr i64 %50 to %"struct.ui::InputPredictor::InputData"*
  %53 = icmp eq %"struct.ui::InputPredictor::InputData"* %28, %52
  br i1 %53, label %30, label %36

54:                                               ; preds = %30, %54
  %55 = phi %"struct.ui::InputPredictor::InputData"** [ %59, %54 ], [ %5, %30 ]
  %56 = bitcast %"struct.ui::InputPredictor::InputData"** %55 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #12
  %58 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %4, align 8
  %59 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %58, i64 1
  store %"struct.ui::InputPredictor::InputData"** %59, %"struct.ui::InputPredictor::InputData"*** %4, align 8
  %60 = load i64, i64* %32, align 8
  %61 = ptrtoint %"struct.ui::InputPredictor::InputData"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp ugt i64 %63, 2
  br i1 %64, label %54, label %65

65:                                               ; preds = %54, %30
  %66 = phi i64 [ %34, %30 ], [ %63, %54 ]
  switch i64 %66, label %70 [
    i64 1, label %68
    i64 2, label %67
  ]

67:                                               ; preds = %65
  br label %68

68:                                               ; preds = %65, %67
  %69 = phi i64 [ 256, %67 ], [ 128, %65 ]
  store i64 %69, i64* %6, align 8
  br label %70

70:                                               ; preds = %68, %65
  %71 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 3
  tail call void @_ZN2ui12KalmanFilter5ResetEv(%"class.ui::KalmanFilter"* %71) #11
  ret void
}

declare void @_ZN2ui12KalmanFilter5ResetEv(%"class.ui::KalmanFilter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15KalmanPredictor6UpdateERKNS_14InputPredictor9InputDataE(%"class.ui::KalmanPredictor"*, %"struct.ui::InputPredictor::InputData"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %8, -1
  %14 = add i64 %13, %12
  %15 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %16 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %16, i64 %17
  %19 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %19, i64 %20, i32 1, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %1, i64 0, i32 1, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = sub nsw i64 %24, %22
  store i64 %25, i64* %5, align 8
  %26 = icmp sgt i64 %25, 20000
  br i1 %26, label %27, label %32

27:                                               ; preds = %10
  %28 = bitcast %"class.ui::KalmanPredictor"* %0 to void (%"class.ui::KalmanPredictor"*)***
  %29 = load void (%"class.ui::KalmanPredictor"*)**, void (%"class.ui::KalmanPredictor"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.ui::KalmanPredictor"*)*, void (%"class.ui::KalmanPredictor"*)** %29, i64 3
  %31 = load void (%"class.ui::KalmanPredictor"*)*, void (%"class.ui::KalmanPredictor"*)** %30, align 8
  tail call void %31(%"class.ui::KalmanPredictor"* %0) #11
  br label %35

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 3
  %34 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #11
  call void @_ZN2ui12KalmanFilter6UpdateEdd(%"class.ui::KalmanFilter"* %33, double %34, double 0.000000e+00) #11
  br label %35

35:                                               ; preds = %2, %27, %32
  %36 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 3
  %37 = call double @_ZNK2ui12KalmanFilter11GetPositionEv(%"class.ui::KalmanFilter"* %36) #11
  %38 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %39 = bitcast %"struct.ui::InputPredictor::InputData"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.ui::InputPredictor::InputData"*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %40, %43
  %45 = icmp eq i64 %44, 0
  %46 = shl i64 %44, 5
  %47 = add i64 %46, -1
  %48 = select i1 %45, i64 0, i64 %47
  %49 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = load i64, i64* %7, align 8
  %52 = add i64 %51, %50
  %53 = icmp eq i64 %48, %52
  %54 = inttoptr i64 %43 to %"struct.ui::InputPredictor::InputData"**
  %55 = inttoptr i64 %40 to %"struct.ui::InputPredictor::InputData"**
  br i1 %53, label %56, label %62

56:                                               ; preds = %35
  call void @_ZNSt3__15dequeIN2ui14InputPredictor9InputDataENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %6) #11
  %57 = load i64, i64* %7, align 8
  %58 = load i64, i64* %49, align 8
  %59 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %41, align 8
  %60 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %38, align 8
  %61 = add i64 %58, %57
  br label %62

62:                                               ; preds = %56, %35
  %63 = phi i64 [ %61, %56 ], [ %52, %35 ]
  %64 = phi %"struct.ui::InputPredictor::InputData"** [ %60, %56 ], [ %55, %35 ]
  %65 = phi %"struct.ui::InputPredictor::InputData"** [ %59, %56 ], [ %54, %35 ]
  %66 = icmp eq %"struct.ui::InputPredictor::InputData"** %64, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %62
  %68 = lshr i64 %63, 8
  %69 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %65, i64 %68
  %70 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %69, align 8
  %71 = and i64 %63, 255
  %72 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %70, i64 %71
  %73 = bitcast %"struct.ui::InputPredictor::InputData"* %72 to i8*
  br label %74

74:                                               ; preds = %62, %67
  %75 = phi i8* [ %73, %67 ], [ null, %62 ]
  %76 = bitcast %"struct.ui::InputPredictor::InputData"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 16, i1 false) #11
  %77 = load i64, i64* %7, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %7, align 8
  %79 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  %80 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %1, i64 0, i32 0, i32 0
  %81 = load float, float* %80, align 4
  %82 = fpext float %81 to double
  call void @_ZN2ui12KalmanFilter6UpdateEdd(%"class.ui::KalmanFilter"* %79, double %82, double %37) #11
  %83 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  %84 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %1, i64 0, i32 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = fpext float %85 to double
  call void @_ZN2ui12KalmanFilter6UpdateEdd(%"class.ui::KalmanFilter"* %83, double %86, double %37) #11
  %87 = load i64, i64* %49, align 8
  %88 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %41, align 8
  %89 = load i64, i64* %7, align 8
  %90 = add i64 %89, -1
  %91 = add i64 %90, %87
  %92 = lshr i64 %91, 8
  %93 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %88, i64 %92
  %94 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %93, align 8
  %95 = and i64 %91, 255
  %96 = lshr i64 %87, 8
  %97 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %88, i64 %96
  %98 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %97, align 8
  %99 = and i64 %87, 255
  %100 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %98, i64 %99, i32 1, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %94, i64 %95, i32 1, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = sub nsw i64 %103, %101
  %105 = icmp sgt i64 %104, 40000
  br i1 %105, label %106, label %143

106:                                              ; preds = %74
  %107 = bitcast %"struct.ui::InputPredictor::InputData"** %88 to i8**
  br label %108

108:                                              ; preds = %106, %122
  %109 = phi i64 [ %90, %106 ], [ %127, %122 ]
  %110 = phi i64 [ %87, %106 ], [ %125, %122 ]
  %111 = phi %"struct.ui::InputPredictor::InputData"** [ %88, %106 ], [ %124, %122 ]
  %112 = phi i8** [ %107, %106 ], [ %123, %122 ]
  store i64 %109, i64* %7, align 8
  %113 = add i64 %110, 1
  store i64 %113, i64* %49, align 8
  %114 = icmp ult i64 %113, 512
  br i1 %114, label %122, label %115

115:                                              ; preds = %108
  %116 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %116) #12
  %117 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %41, align 8
  %118 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %117, i64 1
  store %"struct.ui::InputPredictor::InputData"** %118, %"struct.ui::InputPredictor::InputData"*** %41, align 8
  %119 = load i64, i64* %49, align 8
  %120 = add i64 %119, -256
  store i64 %120, i64* %49, align 8
  %121 = bitcast %"struct.ui::InputPredictor::InputData"** %118 to i8**
  br label %122

122:                                              ; preds = %108, %115
  %123 = phi i8** [ %112, %108 ], [ %121, %115 ]
  %124 = phi %"struct.ui::InputPredictor::InputData"** [ %111, %108 ], [ %118, %115 ]
  %125 = phi i64 [ %113, %108 ], [ %120, %115 ]
  %126 = load i64, i64* %7, align 8
  %127 = add i64 %126, -1
  %128 = add i64 %127, %125
  %129 = lshr i64 %128, 8
  %130 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %124, i64 %129
  %131 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %130, align 8
  %132 = and i64 %128, 255
  %133 = lshr i64 %125, 8
  %134 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %124, i64 %133
  %135 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %134, align 8
  %136 = and i64 %125, 255
  %137 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %135, i64 %136, i32 1, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %131, i64 %132, i32 1, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = sub nsw i64 %140, %138
  %142 = icmp sgt i64 %141, 40000
  br i1 %142, label %108, label %143

143:                                              ; preds = %122, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN2ui12KalmanFilter6UpdateEdd(%"class.ui::KalmanFilter"*, double, double) local_unnamed_addr #1

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare double @_ZNK2ui12KalmanFilter11GetPositionEv(%"class.ui::KalmanFilter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui15KalmanPredictor13HasPredictionEv(%"class.ui::KalmanPredictor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK2ui12KalmanFilter6StableEv(%"class.ui::KalmanFilter"* %2) #11
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  %6 = tail call zeroext i1 @_ZNK2ui12KalmanFilter6StableEv(%"class.ui::KalmanFilter"* %5) #11
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ false, %1 ], [ %6, %4 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK2ui12KalmanFilter6StableEv(%"class.ui::KalmanFilter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.ui::InputPredictor::InputData"* @_ZN2ui15KalmanPredictor18GeneratePredictionEN4base9TimeTicksENS1_9TimeDeltaE(%"class.ui::KalmanPredictor"*, i64, i64) unnamed_addr #6 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %"class.gfx::Vector2dF"*
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %"class.gfx::Vector2dF"*
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %"class.gfx::Vector2dF"*
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %"class.gfx::Vector2dF"*
  %14 = alloca <2 x float>, align 8
  %15 = bitcast <2 x float>* %14 to %"class.gfx::Vector2dF"*
  %16 = alloca <2 x float>, align 8
  %17 = bitcast <2 x float>* %16 to %"class.gfx::Vector2dF"*
  %18 = bitcast %"class.ui::KalmanPredictor"* %0 to i1 (%"class.ui::KalmanPredictor"*)***
  %19 = load i1 (%"class.ui::KalmanPredictor"*)**, i1 (%"class.ui::KalmanPredictor"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.ui::KalmanPredictor"*)*, i1 (%"class.ui::KalmanPredictor"*)** %19, i64 5
  %21 = load i1 (%"class.ui::KalmanPredictor"*)*, i1 (%"class.ui::KalmanPredictor"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.ui::KalmanPredictor"* %0) #11
  br i1 %22, label %23, label %187

23:                                               ; preds = %3
  %24 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %26, -1
  %30 = add i64 %29, %28
  %31 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %31, align 8
  %33 = lshr i64 %30, 8
  %34 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %32, i64 %33
  %35 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %34, align 8
  %36 = and i64 %30, 255
  %37 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %35, i64 %36, i32 1, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = sub nsw i64 %1, %38
  %40 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %5) #11
  %42 = fptrunc double %41 to float
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %43 = load i64, i64* %25, align 8
  %44 = load i64, i64* %27, align 8
  %45 = add i64 %43, -1
  %46 = add i64 %45, %44
  %47 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %31, align 8
  %48 = lshr i64 %46, 8
  %49 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %47, i64 %48
  %50 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %49, align 8
  %51 = and i64 %46, 255
  %52 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %50, i64 %51, i32 0, i32 0
  %53 = bitcast float* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  %57 = call double @_ZNK2ui12KalmanFilter11GetVelocityEv(%"class.ui::KalmanFilter"* %56) #11
  %58 = fptrunc double %57 to float
  %59 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  %60 = call double @_ZNK2ui12KalmanFilter11GetVelocityEv(%"class.ui::KalmanFilter"* %59) #11
  %61 = fptrunc double %60 to float
  %62 = insertelement <2 x float> undef, float %58, i32 0
  %63 = insertelement <2 x float> %62, float %61, i32 1
  store <2 x float> %63, <2 x float>* %6, align 8
  %64 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = call double @_ZNK2ui12KalmanFilter15GetAccelerationEv(%"class.ui::KalmanFilter"* %56) #11
  %66 = fptrunc double %65 to float
  %67 = call double @_ZNK2ui12KalmanFilter15GetAccelerationEv(%"class.ui::KalmanFilter"* %59) #11
  %68 = fptrunc double %67 to float
  %69 = insertelement <2 x float> undef, float %66, i32 0
  %70 = insertelement <2 x float> %69, float %68, i32 1
  store <2 x float> %70, <2 x float>* %8, align 8
  %71 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 5
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %23
  %76 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  %77 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  %78 = call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9, float %42, float %42) #11
  store <2 x float> %78, <2 x float>* %12, align 8
  %79 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = bitcast i64* %4 to %"class.gfx::Vector2dF"*
  %81 = bitcast <2 x float>* %6 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %4, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %80, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %13) #11
  %83 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  %84 = bitcast <2 x float>* %10 to i64*
  store i64 %83, i64* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  %85 = call double @_ZN3gfx10DotProductERKNS_9Vector2dFES2_(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %7, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %11) #11
  %86 = fcmp ugt double %85, 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br i1 %86, label %87, label %185

87:                                               ; preds = %75, %23
  %88 = call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %7, float %42, float %42) #11
  %89 = fadd <2 x float> %54, %88
  %90 = load i32, i32* %71, align 8
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %169, label %93

93:                                               ; preds = %87
  %94 = load i64, i64* %25, align 8
  %95 = icmp ugt i64 %94, 2
  br i1 %95, label %96, label %103

96:                                               ; preds = %93
  %97 = bitcast <2 x float>* %14 to i8*
  %98 = getelementptr inbounds <2 x float>, <2 x float>* %14, i64 0, i64 0
  %99 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %15, i64 0, i32 1
  %100 = bitcast <2 x float>* %16 to i8*
  %101 = getelementptr inbounds <2 x float>, <2 x float>* %16, i64 0, i64 0
  %102 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %17, i64 0, i32 1
  br label %110

103:                                              ; preds = %159, %93
  %104 = phi float [ 0.000000e+00, %93 ], [ %160, %159 ]
  %105 = call float @llvm.fabs.f32(float %104)
  %106 = fmul float %105, 1.800000e+02
  %107 = fpext float %106 to double
  %108 = fdiv double %107, 0x400921FB54442D18
  %109 = fcmp ogt double %108, 1.500000e+01
  br i1 %109, label %164, label %174

110:                                              ; preds = %96, %159
  %111 = phi i64 [ 2, %96 ], [ %161, %159 ]
  %112 = phi float [ 0.000000e+00, %96 ], [ %160, %159 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  store float 0xFFFFFFFFE0000000, float* %98, align 8
  store float 0xFFFFFFFFE0000000, float* %99, align 4
  %113 = load i64, i64* %27, align 8
  %114 = add i64 %113, %111
  %115 = add i64 %114, -1
  %116 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %31, align 8
  %117 = lshr i64 %115, 8
  %118 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %116, i64 %117
  %119 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %118, align 8
  %120 = and i64 %115, 255
  %121 = add i64 %114, -2
  %122 = lshr i64 %121, 8
  %123 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %116, i64 %122
  %124 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %123, align 8
  %125 = and i64 %121, 255
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %119, i64 %120, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %124, i64 %125, i32 0, i32 0
  %128 = bitcast float* %126 to <2 x float>*
  %129 = load <2 x float>, <2 x float>* %128, align 4
  %130 = bitcast float* %127 to <2 x float>*
  %131 = load <2 x float>, <2 x float>* %130, align 4
  %132 = fsub <2 x float> %129, %131
  store <2 x float> %132, <2 x float>* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #11
  store float 0xFFFFFFFFE0000000, float* %101, align 8
  store float 0xFFFFFFFFE0000000, float* %102, align 4
  %133 = lshr i64 %114, 8
  %134 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %116, i64 %133
  %135 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %134, align 8
  %136 = and i64 %114, 255
  %137 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %118, align 8
  %138 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %135, i64 %136, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %137, i64 %120, i32 0, i32 0
  %140 = bitcast float* %138 to <2 x float>*
  %141 = load <2 x float>, <2 x float>* %140, align 4
  %142 = bitcast float* %139 to <2 x float>*
  %143 = load <2 x float>, <2 x float>* %142, align 4
  %144 = fsub <2 x float> %141, %143
  store <2 x float> %144, <2 x float>* %16, align 8
  %145 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %15) #11
  %146 = fcmp une float %145, 0.000000e+00
  br i1 %146, label %147, label %159

147:                                              ; preds = %110
  %148 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %17) #11
  %149 = fcmp une float %148, 0.000000e+00
  br i1 %149, label %150, label %159

150:                                              ; preds = %147
  %151 = load float, float* %98, align 8
  %152 = load float, float* %99, align 4
  %153 = call float @atan2f(float %151, float %152) #11
  %154 = load float, float* %101, align 8
  %155 = load float, float* %102, align 4
  %156 = call float @atan2f(float %154, float %155) #11
  %157 = fsub float %153, %156
  %158 = fadd float %112, %157
  br label %159

159:                                              ; preds = %150, %147, %110
  %160 = phi float [ %158, %150 ], [ %112, %147 ], [ %112, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  %161 = add nuw i64 %111, 1
  %162 = load i64, i64* %25, align 8
  %163 = icmp ult i64 %161, %162
  br i1 %163, label %110, label %103

164:                                              ; preds = %103
  %165 = fmul float %42, 5.000000e-01
  %166 = fmul float %165, %42
  %167 = call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9, float %166, float %166) #11
  %168 = fadd <2 x float> %89, %167
  br label %174

169:                                              ; preds = %87
  %170 = fmul float %42, 5.000000e-01
  %171 = fmul float %170, %42
  %172 = call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9, float %171, float %171) #11
  %173 = fadd <2 x float> %89, %172
  br label %174

174:                                              ; preds = %103, %164, %169
  %175 = phi <2 x float> [ %173, %169 ], [ %168, %164 ], [ %89, %103 ]
  %176 = call i8* @_Znwm(i64 16) #12
  %177 = getelementptr inbounds i8, i8* %176, i64 8
  %178 = bitcast i8* %177 to i64*
  %179 = bitcast i8* %176 to float*
  %180 = extractelement <2 x float> %175, i32 0
  store float %180, float* %179, align 8
  %181 = getelementptr inbounds i8, i8* %176, i64 4
  %182 = bitcast i8* %181 to float*
  %183 = extractelement <2 x float> %175, i32 1
  store float %183, float* %182, align 4
  store i64 %1, i64* %178, align 8
  %184 = ptrtoint i8* %176 to i64
  br label %185

185:                                              ; preds = %75, %174
  %186 = phi i64 [ %184, %174 ], [ 0, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %187

187:                                              ; preds = %3, %185
  %188 = phi i64 [ %186, %185 ], [ 0, %3 ]
  %189 = inttoptr i64 %188 to %"struct.ui::InputPredictor::InputData"*
  ret %"struct.ui::InputPredictor::InputData"* %189
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2ui15KalmanPredictor15PredictVelocityEv(%"class.ui::KalmanPredictor"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  %3 = tail call double @_ZNK2ui12KalmanFilter11GetVelocityEv(%"class.ui::KalmanFilter"* %2) #11
  %4 = fptrunc double %3 to float
  %5 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  %6 = tail call double @_ZNK2ui12KalmanFilter11GetVelocityEv(%"class.ui::KalmanFilter"* %5) #11
  %7 = fptrunc double %6 to float
  %8 = insertelement <2 x float> undef, float %4, i32 0
  %9 = insertelement <2 x float> %8, float %7, i32 1
  ret <2 x float> %9
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2ui15KalmanPredictor19PredictAccelerationEv(%"class.ui::KalmanPredictor"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  %3 = tail call double @_ZNK2ui12KalmanFilter15GetAccelerationEv(%"class.ui::KalmanFilter"* %2) #11
  %4 = fptrunc double %3 to float
  %5 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  %6 = tail call double @_ZNK2ui12KalmanFilter15GetAccelerationEv(%"class.ui::KalmanFilter"* %5) #11
  %7 = fptrunc double %6 to float
  %8 = insertelement <2 x float> undef, float %4, i32 0
  %9 = insertelement <2 x float> %8, float %7, i32 1
  ret <2 x float> %9
}

declare double @_ZN3gfx10DotProductERKNS_9Vector2dFES2_(%"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #1

declare float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui15KalmanPredictor12TimeIntervalEv(%"class.ui::KalmanPredictor"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 3
  %4 = tail call double @_ZNK2ui12KalmanFilter11GetPositionEv(%"class.ui::KalmanFilter"* %3) #11
  %5 = fcmp une double %4, 0.000000e+00
  %6 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  br i1 %5, label %7, label %19

7:                                                ; preds = %1
  %8 = tail call double @_ZNK2ui12KalmanFilter11GetPositionEv(%"class.ui::KalmanFilter"* %3) #11
  %9 = fptosi double %8 to i64
  %10 = icmp slt i64 %9, 0
  %11 = select i1 %10, i64 -9223372036854775808, i64 9223372036854775807
  %12 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %9, i64 1000) #11
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 %11, i64 %14, !prof !2
  store i64 %15, i64* %2, align 8
  %16 = icmp sgt i64 %15, 2500
  %17 = bitcast i64* %2 to %"class.base::TimeDelta"*
  %18 = select i1 %16, %"class.base::TimeDelta"* %17, %"class.base::TimeDelta"* @_ZN2ui14InputPredictor16kMinTimeIntervalE
  br label %19

19:                                               ; preds = %1, %7
  %20 = phi %"class.base::TimeDelta"* [ %18, %7 ], [ @_ZN2ui14InputPredictor13kTimeIntervalE, %1 ]
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2ui15KalmanPredictor15PredictPositionEv(%"class.ui::KalmanPredictor"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 1
  %3 = tail call double @_ZNK2ui12KalmanFilter11GetPositionEv(%"class.ui::KalmanFilter"* %2) #11
  %4 = fptrunc double %3 to float
  %5 = getelementptr inbounds %"class.ui::KalmanPredictor", %"class.ui::KalmanPredictor"* %0, i64 0, i32 2
  %6 = tail call double @_ZNK2ui12KalmanFilter11GetPositionEv(%"class.ui::KalmanFilter"* %5) #11
  %7 = fptrunc double %6 to float
  %8 = insertelement <2 x float> undef, float %4, i32 0
  %9 = insertelement <2 x float> %8, float %7, i32 1
  ret <2 x float> %9
}

declare double @_ZNK2ui12KalmanFilter11GetVelocityEv(%"class.ui::KalmanFilter"*) local_unnamed_addr #1

declare double @_ZNK2ui12KalmanFilter15GetAccelerationEv(%"class.ui::KalmanFilter"*) local_unnamed_addr #1

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #1

declare <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8), float, float) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2ui14InputPredictor9InputDataENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.ui::InputPredictor::InputData"*, align 8
  %3 = alloca %"struct.ui::InputPredictor::InputData"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.10", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %12 = bitcast %"struct.ui::InputPredictor::InputData"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %11, i64 1
  store %"struct.ui::InputPredictor::InputData"** %14, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %17, align 8
  %19 = icmp eq %"struct.ui::InputPredictor::InputData"** %16, %18
  %20 = ptrtoint %"struct.ui::InputPredictor::InputData"** %18 to i64
  %21 = bitcast %"struct.ui::InputPredictor::InputData"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %23, align 8
  %25 = icmp ugt %"struct.ui::InputPredictor::InputData"** %14, %24
  %26 = ptrtoint %"struct.ui::InputPredictor::InputData"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.ui::InputPredictor::InputData"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %14, i64 %32
  %34 = ptrtoint %"struct.ui::InputPredictor::InputData"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.ui::InputPredictor::InputData"** %33 to i8*
  %40 = bitcast %"struct.ui::InputPredictor::InputData"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.ui::InputPredictor::InputData"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %33, i64 %36
  store %"struct.ui::InputPredictor::InputData"** %44, %"struct.ui::InputPredictor::InputData"*** %15, align 8
  %45 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %43, i64 %32
  store %"struct.ui::InputPredictor::InputData"** %45, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %46 = bitcast %"struct.ui::InputPredictor::InputData"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.ui::InputPredictor::InputData"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"struct.ui::InputPredictor::InputData"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %60, i64 %57
  %63 = ptrtoint %"struct.ui::InputPredictor::InputData"** %62 to i64
  %64 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %60, i64 %53
  %65 = ptrtoint %"struct.ui::InputPredictor::InputData"** %64 to i64
  %66 = ptrtoint %"struct.ui::InputPredictor::InputData"** %14 to i64
  %67 = ptrtoint %"struct.ui::InputPredictor::InputData"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.ui::InputPredictor::InputData"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.ui::InputPredictor::InputData"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.ui::InputPredictor::InputData"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %79, i64 1
  %87 = ptrtoint %"struct.ui::InputPredictor::InputData"** %86 to i64
  %88 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !3

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.ui::InputPredictor::InputData"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.ui::InputPredictor::InputData"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.ui::InputPredictor::InputData"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.ui::InputPredictor::InputData"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.ui::InputPredictor::InputData"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.ui::InputPredictor::InputData"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 1
  %106 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 1
  %107 = bitcast %"struct.ui::InputPredictor::InputData"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.ui::InputPredictor::InputData"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 2
  %111 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 2
  %112 = bitcast %"struct.ui::InputPredictor::InputData"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.ui::InputPredictor::InputData"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 3
  %116 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 3
  %117 = bitcast %"struct.ui::InputPredictor::InputData"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.ui::InputPredictor::InputData"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 4
  %121 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 4
  %122 = bitcast %"struct.ui::InputPredictor::InputData"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.ui::InputPredictor::InputData"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 5
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 5
  %127 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.ui::InputPredictor::InputData"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 6
  %131 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 6
  %132 = bitcast %"struct.ui::InputPredictor::InputData"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.ui::InputPredictor::InputData"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 7
  %136 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 7
  %137 = bitcast %"struct.ui::InputPredictor::InputData"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.ui::InputPredictor::InputData"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %99, i64 8
  %141 = ptrtoint %"struct.ui::InputPredictor::InputData"** %140 to i64
  %142 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %101, i64 8
  %143 = icmp eq %"struct.ui::InputPredictor::InputData"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.ui::InputPredictor::InputData"** %70 to i64
  %146 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.ui::InputPredictor::InputData"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.ui::InputPredictor::InputData"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.ui::InputPredictor::InputData"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.ui::InputPredictor::InputData"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.ui::InputPredictor::InputData"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"struct.ui::InputPredictor::InputData"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %15, align 8
  %161 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %160, i64 1
  store %"struct.ui::InputPredictor::InputData"** %161, %"struct.ui::InputPredictor::InputData"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.ui::InputPredictor::InputData"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.ui::InputPredictor::InputData"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.ui::InputPredictor::InputData"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.ui::InputPredictor::InputData"**
  %181 = inttoptr i64 %169 to %"struct.ui::InputPredictor::InputData"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.ui::InputPredictor::InputData"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"struct.ui::InputPredictor::InputData"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %163, %"struct.ui::InputPredictor::InputData"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.ui::InputPredictor::InputData"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"struct.ui::InputPredictor::InputData"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %163, %"struct.ui::InputPredictor::InputData"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %167, align 8
  %193 = bitcast %"struct.ui::InputPredictor::InputData"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %192, i64 1
  store %"struct.ui::InputPredictor::InputData"** %195, %"struct.ui::InputPredictor::InputData"*** %167, align 8
  %196 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %164, align 8
  %197 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %172, align 8
  %198 = icmp eq %"struct.ui::InputPredictor::InputData"** %196, %197
  %199 = ptrtoint %"struct.ui::InputPredictor::InputData"** %197 to i64
  %200 = bitcast %"struct.ui::InputPredictor::InputData"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %202, align 8
  %204 = icmp ugt %"struct.ui::InputPredictor::InputData"** %195, %203
  %205 = ptrtoint %"struct.ui::InputPredictor::InputData"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.ui::InputPredictor::InputData"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %195, i64 %211
  %213 = ptrtoint %"struct.ui::InputPredictor::InputData"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.ui::InputPredictor::InputData"** %212 to i8*
  %219 = bitcast %"struct.ui::InputPredictor::InputData"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.ui::InputPredictor::InputData"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %212, i64 %215
  store %"struct.ui::InputPredictor::InputData"** %223, %"struct.ui::InputPredictor::InputData"*** %164, align 8
  %224 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %222, i64 %211
  store %"struct.ui::InputPredictor::InputData"** %224, %"struct.ui::InputPredictor::InputData"*** %167, align 8
  %225 = bitcast %"struct.ui::InputPredictor::InputData"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #13
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"struct.ui::InputPredictor::InputData"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %237, i64 %234
  %240 = ptrtoint %"struct.ui::InputPredictor::InputData"** %239 to i64
  %241 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %237, i64 %230
  %242 = ptrtoint %"struct.ui::InputPredictor::InputData"** %241 to i64
  %243 = ptrtoint %"struct.ui::InputPredictor::InputData"** %195 to i64
  %244 = ptrtoint %"struct.ui::InputPredictor::InputData"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.ui::InputPredictor::InputData"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.ui::InputPredictor::InputData"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.ui::InputPredictor::InputData"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %256, i64 1
  %264 = ptrtoint %"struct.ui::InputPredictor::InputData"** %263 to i64
  %265 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !5

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.ui::InputPredictor::InputData"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.ui::InputPredictor::InputData"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.ui::InputPredictor::InputData"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.ui::InputPredictor::InputData"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.ui::InputPredictor::InputData"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.ui::InputPredictor::InputData"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 1
  %283 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 1
  %284 = bitcast %"struct.ui::InputPredictor::InputData"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.ui::InputPredictor::InputData"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 2
  %288 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 2
  %289 = bitcast %"struct.ui::InputPredictor::InputData"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.ui::InputPredictor::InputData"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 3
  %293 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 3
  %294 = bitcast %"struct.ui::InputPredictor::InputData"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.ui::InputPredictor::InputData"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 4
  %298 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 4
  %299 = bitcast %"struct.ui::InputPredictor::InputData"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.ui::InputPredictor::InputData"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 5
  %303 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 5
  %304 = bitcast %"struct.ui::InputPredictor::InputData"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.ui::InputPredictor::InputData"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 6
  %308 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 6
  %309 = bitcast %"struct.ui::InputPredictor::InputData"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.ui::InputPredictor::InputData"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 7
  %313 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 7
  %314 = bitcast %"struct.ui::InputPredictor::InputData"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.ui::InputPredictor::InputData"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %276, i64 8
  %318 = ptrtoint %"struct.ui::InputPredictor::InputData"** %317 to i64
  %319 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %278, i64 8
  %320 = icmp eq %"struct.ui::InputPredictor::InputData"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.ui::InputPredictor::InputData"** %247 to i64
  %323 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.ui::InputPredictor::InputData"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.ui::InputPredictor::InputData"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.ui::InputPredictor::InputData"** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"struct.ui::InputPredictor::InputData"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %164, align 8
  %336 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %335, i64 1
  store %"struct.ui::InputPredictor::InputData"** %336, %"struct.ui::InputPredictor::InputData"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.10"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.10"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.ui::InputPredictor::InputData"** null, %"struct.ui::InputPredictor::InputData"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator"** %342 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %346, %"class.std::__1::__compressed_pair"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #13
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"struct.ui::InputPredictor::InputData"**
  %355 = bitcast %"struct.std::__1::__split_buffer.10"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %354, i64 %171
  store %"struct.ui::InputPredictor::InputData"** %356, %"struct.ui::InputPredictor::InputData"*** %340, align 8
  store %"struct.ui::InputPredictor::InputData"** %356, %"struct.ui::InputPredictor::InputData"*** %339, align 8
  %357 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %354, i64 %345
  store %"struct.ui::InputPredictor::InputData"** %357, %"struct.ui::InputPredictor::InputData"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.ui::InputPredictor::InputData"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.ui::InputPredictor::InputData"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.ui::InputPredictor::InputData"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %356, i64 %370
  store %"struct.ui::InputPredictor::InputData"** %371, %"struct.ui::InputPredictor::InputData"*** %340, align 8
  store %"struct.ui::InputPredictor::InputData"** %371, %"struct.ui::InputPredictor::InputData"*** %339, align 8
  %372 = ptrtoint %"struct.ui::InputPredictor::InputData"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #13
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.10"* %4 to i64*
  %382 = bitcast %"struct.ui::InputPredictor::InputData"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"struct.ui::InputPredictor::InputData"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %386, i64 %383
  %389 = ptrtoint %"struct.ui::InputPredictor::InputData"** %388 to i64
  %390 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %386, i64 %377
  %391 = ptrtoint %"struct.ui::InputPredictor::InputData"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.ui::InputPredictor::InputData"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.ui::InputPredictor::InputData"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %164, align 8
  %395 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %167, align 8
  %396 = ptrtoint %"struct.ui::InputPredictor::InputData"** %395 to i64
  %397 = ptrtoint %"struct.ui::InputPredictor::InputData"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.ui::InputPredictor::InputData"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.ui::InputPredictor::InputData"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.ui::InputPredictor::InputData"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.ui::InputPredictor::InputData"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %406, i64 1
  store %"struct.ui::InputPredictor::InputData"** %408, %"struct.ui::InputPredictor::InputData"*** %340, align 8
  %409 = icmp eq %"struct.ui::InputPredictor::InputData"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.ui::InputPredictor::InputData"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.10"* %4 to i64*
  %413 = bitcast %"struct.ui::InputPredictor::InputData"*** %339 to i64*
  %414 = bitcast %"struct.ui::InputPredictor::InputData"*** %340 to i64*
  %415 = bitcast %"struct.ui::InputPredictor::InputData"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.ui::InputPredictor::InputData"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.10"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.ui::InputPredictor::InputData"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.ui::InputPredictor::InputData"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.ui::InputPredictor::InputData"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.ui::InputPredictor::InputData"**
  %441 = inttoptr i64 %434 to %"struct.ui::InputPredictor::InputData"**
  %442 = icmp eq %"struct.ui::InputPredictor::InputData"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %441, i64 -1
  %445 = ptrtoint %"struct.ui::InputPredictor::InputData"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %441, i64 %448
  store %"struct.ui::InputPredictor::InputData"** %449, %"struct.ui::InputPredictor::InputData"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.ui::InputPredictor::InputData"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.10"* nonnull %4, %"struct.ui::InputPredictor::InputData"** dereferenceable(8) %457)
  %458 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %167, align 8
  %459 = icmp eq %"struct.ui::InputPredictor::InputData"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.ui::InputPredictor::InputData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  %7 = icmp eq %"struct.ui::InputPredictor::InputData"** %4, %6
  %8 = ptrtoint %"struct.ui::InputPredictor::InputData"** %6 to i64
  %9 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %13, align 8
  %15 = icmp ugt %"struct.ui::InputPredictor::InputData"** %12, %14
  %16 = ptrtoint %"struct.ui::InputPredictor::InputData"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.ui::InputPredictor::InputData"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %12, i64 %22
  %24 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.ui::InputPredictor::InputData"** %23 to i8*
  %30 = bitcast %"struct.ui::InputPredictor::InputData"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.ui::InputPredictor::InputData"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %23, i64 %26
  store %"struct.ui::InputPredictor::InputData"** %34, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %35 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %33, i64 %22
  store %"struct.ui::InputPredictor::InputData"** %35, %"struct.ui::InputPredictor::InputData"*** %11, align 8
  %36 = bitcast %"struct.ui::InputPredictor::InputData"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.ui::InputPredictor::InputData"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.ui::InputPredictor::InputData"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %50, i64 %47
  %53 = ptrtoint %"struct.ui::InputPredictor::InputData"** %52 to i64
  %54 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %50, i64 %43
  %55 = ptrtoint %"struct.ui::InputPredictor::InputData"** %54 to i64
  %56 = ptrtoint %"struct.ui::InputPredictor::InputData"** %12 to i64
  %57 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.ui::InputPredictor::InputData"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.ui::InputPredictor::InputData"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.ui::InputPredictor::InputData"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %69, i64 1
  %77 = ptrtoint %"struct.ui::InputPredictor::InputData"** %76 to i64
  %78 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !6

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.ui::InputPredictor::InputData"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.ui::InputPredictor::InputData"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.ui::InputPredictor::InputData"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.ui::InputPredictor::InputData"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.ui::InputPredictor::InputData"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.ui::InputPredictor::InputData"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 1
  %96 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 1
  %97 = bitcast %"struct.ui::InputPredictor::InputData"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.ui::InputPredictor::InputData"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 2
  %101 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 2
  %102 = bitcast %"struct.ui::InputPredictor::InputData"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.ui::InputPredictor::InputData"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 3
  %106 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 3
  %107 = bitcast %"struct.ui::InputPredictor::InputData"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.ui::InputPredictor::InputData"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 4
  %111 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 4
  %112 = bitcast %"struct.ui::InputPredictor::InputData"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.ui::InputPredictor::InputData"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 5
  %116 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 5
  %117 = bitcast %"struct.ui::InputPredictor::InputData"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.ui::InputPredictor::InputData"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 6
  %121 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 6
  %122 = bitcast %"struct.ui::InputPredictor::InputData"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.ui::InputPredictor::InputData"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 7
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 7
  %127 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.ui::InputPredictor::InputData"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 8
  %131 = ptrtoint %"struct.ui::InputPredictor::InputData"** %130 to i64
  %132 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 8
  %133 = icmp eq %"struct.ui::InputPredictor::InputData"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.ui::InputPredictor::InputData"** %60 to i64
  %136 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.ui::InputPredictor::InputData"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.ui::InputPredictor::InputData"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.ui::InputPredictor::InputData"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.ui::InputPredictor::InputData"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.ui::InputPredictor::InputData"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %153 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %152, i64 1
  store %"struct.ui::InputPredictor::InputData"** %153, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.ui::InputPredictor::InputData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  %7 = icmp eq %"struct.ui::InputPredictor::InputData"** %4, %6
  %8 = ptrtoint %"struct.ui::InputPredictor::InputData"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %12, align 8
  %14 = icmp ult %"struct.ui::InputPredictor::InputData"** %11, %13
  %15 = bitcast %"struct.ui::InputPredictor::InputData"*** %12 to i64*
  %16 = ptrtoint %"struct.ui::InputPredictor::InputData"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %11, i64 %22
  %24 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %23, i64 %29
  %31 = bitcast %"struct.ui::InputPredictor::InputData"** %30 to i8*
  %32 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.ui::InputPredictor::InputData"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.ui::InputPredictor::InputData"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.ui::InputPredictor::InputData"** %36, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %37 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %35, i64 %22
  store %"struct.ui::InputPredictor::InputData"** %37, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.ui::InputPredictor::InputData"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %48
  %54 = ptrtoint %"struct.ui::InputPredictor::InputData"** %53 to i64
  %55 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %43
  %56 = ptrtoint %"struct.ui::InputPredictor::InputData"** %55 to i64
  %57 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %58 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.ui::InputPredictor::InputData"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.ui::InputPredictor::InputData"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.ui::InputPredictor::InputData"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %70, i64 1
  %78 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  %79 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !7

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.ui::InputPredictor::InputData"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.ui::InputPredictor::InputData"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.ui::InputPredictor::InputData"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.ui::InputPredictor::InputData"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.ui::InputPredictor::InputData"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 1
  %97 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 1
  %98 = bitcast %"struct.ui::InputPredictor::InputData"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.ui::InputPredictor::InputData"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 2
  %102 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 2
  %103 = bitcast %"struct.ui::InputPredictor::InputData"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.ui::InputPredictor::InputData"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 3
  %107 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 3
  %108 = bitcast %"struct.ui::InputPredictor::InputData"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.ui::InputPredictor::InputData"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 4
  %112 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 4
  %113 = bitcast %"struct.ui::InputPredictor::InputData"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.ui::InputPredictor::InputData"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 5
  %117 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 5
  %118 = bitcast %"struct.ui::InputPredictor::InputData"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.ui::InputPredictor::InputData"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 6
  %122 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 6
  %123 = bitcast %"struct.ui::InputPredictor::InputData"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.ui::InputPredictor::InputData"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 7
  %127 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 7
  %128 = bitcast %"struct.ui::InputPredictor::InputData"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 8
  %132 = ptrtoint %"struct.ui::InputPredictor::InputData"** %131 to i64
  %133 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 8
  %134 = icmp eq %"struct.ui::InputPredictor::InputData"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.ui::InputPredictor::InputData"** %61 to i64
  %137 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.ui::InputPredictor::InputData"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.ui::InputPredictor::InputData"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.ui::InputPredictor::InputData"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.ui::InputPredictor::InputData"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.ui::InputPredictor::InputData"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %148, i64 -1
  %150 = bitcast %"struct.ui::InputPredictor::InputData"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.ui::InputPredictor::InputData"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %154 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %153, i64 -1
  store %"struct.ui::InputPredictor::InputData"** %154, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.10"*, %"struct.ui::InputPredictor::InputData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %0, i64 0, i32 1
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %0, i64 0, i32 0
  %6 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  %7 = icmp eq %"struct.ui::InputPredictor::InputData"** %4, %6
  %8 = ptrtoint %"struct.ui::InputPredictor::InputData"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %0, i64 0, i32 2
  %11 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.10", %"struct.std::__1::__split_buffer.10"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %12, align 8
  %14 = icmp ult %"struct.ui::InputPredictor::InputData"** %11, %13
  %15 = bitcast %"struct.ui::InputPredictor::InputData"*** %12 to i64*
  %16 = ptrtoint %"struct.ui::InputPredictor::InputData"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %11, i64 %22
  %24 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %23, i64 %29
  %31 = bitcast %"struct.ui::InputPredictor::InputData"** %30 to i8*
  %32 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.ui::InputPredictor::InputData"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.ui::InputPredictor::InputData"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.ui::InputPredictor::InputData"** %36, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %37 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %35, i64 %22
  store %"struct.ui::InputPredictor::InputData"** %37, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.10"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.ui::InputPredictor::InputData"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %48
  %54 = ptrtoint %"struct.ui::InputPredictor::InputData"** %53 to i64
  %55 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %43
  %56 = ptrtoint %"struct.ui::InputPredictor::InputData"** %55 to i64
  %57 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %58 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.ui::InputPredictor::InputData"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.ui::InputPredictor::InputData"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.ui::InputPredictor::InputData"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %70, i64 1
  %78 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  %79 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !8

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.ui::InputPredictor::InputData"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.ui::InputPredictor::InputData"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.ui::InputPredictor::InputData"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.ui::InputPredictor::InputData"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.ui::InputPredictor::InputData"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 1
  %97 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 1
  %98 = bitcast %"struct.ui::InputPredictor::InputData"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.ui::InputPredictor::InputData"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 2
  %102 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 2
  %103 = bitcast %"struct.ui::InputPredictor::InputData"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.ui::InputPredictor::InputData"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 3
  %107 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 3
  %108 = bitcast %"struct.ui::InputPredictor::InputData"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.ui::InputPredictor::InputData"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 4
  %112 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 4
  %113 = bitcast %"struct.ui::InputPredictor::InputData"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.ui::InputPredictor::InputData"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 5
  %117 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 5
  %118 = bitcast %"struct.ui::InputPredictor::InputData"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.ui::InputPredictor::InputData"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 6
  %122 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 6
  %123 = bitcast %"struct.ui::InputPredictor::InputData"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.ui::InputPredictor::InputData"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 7
  %127 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 7
  %128 = bitcast %"struct.ui::InputPredictor::InputData"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 8
  %132 = ptrtoint %"struct.ui::InputPredictor::InputData"** %131 to i64
  %133 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 8
  %134 = icmp eq %"struct.ui::InputPredictor::InputData"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.ui::InputPredictor::InputData"** %61 to i64
  %137 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.ui::InputPredictor::InputData"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.ui::InputPredictor::InputData"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.ui::InputPredictor::InputData"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.ui::InputPredictor::InputData"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.ui::InputPredictor::InputData"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %148, i64 -1
  %150 = bitcast %"struct.ui::InputPredictor::InputData"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.ui::InputPredictor::InputData"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %154 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %153, i64 -1
  store %"struct.ui::InputPredictor::InputData"** %154, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !4}
