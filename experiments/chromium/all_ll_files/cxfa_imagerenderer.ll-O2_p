; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_imagerenderer.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_imagerenderer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::UnownedPtr" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.1" }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::RetainPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.CFX_DIBBase* }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i32* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.43", %"class.fxcrt::UnownedPtr.45" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i8* }
%"class.fxcrt::UnownedPtr.45" = type { i8* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFX_ImageTransformer* }
%class.CFX_ImageTransformer = type { %"class.fxcrt::RetainPtr.5", %class.CFX_Matrix, %struct.FX_RECT, %struct.FX_RECT, %class.CFX_Matrix, %"class.std::__1::unique_ptr.17", %class.CFX_BitmapStorer, %struct.FXDIB_ResampleOptions, i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.CFX_ImageStretcher* }
%class.CFX_ImageStretcher = type opaque
%class.CFX_BitmapStorer = type { %class.ScanlineComposerIface, %"class.fxcrt::RetainPtr" }
%class.ScanlineComposerIface = type { i32 (...)** }
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.CFX_ImageRenderer* }
%class.CFX_ImageRenderer = type <{ %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.29", %class.CFX_Matrix, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.17", %class.CFX_BitmapComposer, %struct.FX_RECT, i32, i32, i32, i8, [3 x i8] }>
%"class.fxcrt::UnownedPtr.29" = type { %class.CFX_ClipRgn* }
%class.CFX_ClipRgn = type opaque
%class.CFX_BitmapComposer = type { %class.ScanlineComposerIface, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.29", i16, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr", %class.CFX_ScanlineCompositor, i8, i8, i8, i8, i32, %"class.std::__1::vector.33", %"class.std::__1::vector.33", %"class.std::__1::vector.33", %"class.std::__1::vector.33" }
%class.CFX_ScanlineCompositor = type <{ i32, i16, i16, %"class.CFX_ScanlineCompositor::Palette", i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.CFX_ScanlineCompositor::Palette" = type { i64, i64, %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i8*, i8*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%class.CXFA_ImageRenderer = type { %"class.fxcrt::UnownedPtr", i32, %class.CFX_Matrix, %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.26" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.PauseIndicatorIface = type opaque

@__const._ZN18CXFA_ImageRenderer17CompositeDIBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii.imageRender = private unnamed_addr constant { %"class.fxcrt::UnownedPtr", i32, %class.CFX_Matrix, [4 x i8], %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.26" } { %"class.fxcrt::UnownedPtr" { %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*) }, i32 -1431655766, %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::RetainPtr.5" { %"class.std::__1::unique_ptr.6" { %"class.std::__1::__compressed_pair.7" { %"struct.std::__1::__compressed_pair_elem.8" { %class.CFX_DIBBase* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBBase*) } } } }, %"class.fxcrt::RetainPtr" { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*) } } } }, %"class.std::__1::unique_ptr.14" { %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %class.CFX_ImageTransformer* inttoptr (i64 -6148914691236517206 to %class.CFX_ImageTransformer*) } } }, %"class.std::__1::unique_ptr.26" { %"class.std::__1::__compressed_pair.27" { %"struct.std::__1::__compressed_pair_elem.28" { %class.CFX_ImageRenderer* inttoptr (i64 -6148914691236517206 to %class.CFX_ImageRenderer*) } } } }, align 8

@_ZN18CXFA_ImageRendererC1EP16CFX_RenderDeviceRKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_Matrix = hidden unnamed_addr alias void (%class.CXFA_ImageRenderer*, %class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"*, %class.CFX_Matrix*), void (%class.CXFA_ImageRenderer*, %class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"*, %class.CFX_Matrix*)* @_ZN18CXFA_ImageRendererC2EP16CFX_RenderDeviceRKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_Matrix
@_ZN18CXFA_ImageRendererD1Ev = hidden unnamed_addr alias void (%class.CXFA_ImageRenderer*), void (%class.CXFA_ImageRenderer*)* @_ZN18CXFA_ImageRendererD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ImageRendererC2EP16CFX_RenderDeviceRKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_Matrix(%class.CXFA_ImageRenderer* nocapture, %class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"* nocapture readonly dereferenceable(8), %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* %1, %class.CFX_RenderDevice** %5, align 8
  %6 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 2
  %8 = bitcast %class.CFX_Matrix* %7 to i8*
  %9 = bitcast %class.CFX_Matrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 24, i1 false)
  %10 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %11, align 8
  %13 = ptrtoint %class.CFX_DIBBase* %12 to i64
  %14 = bitcast %"class.fxcrt::RetainPtr.5"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = icmp eq %class.CFX_DIBBase* %12, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %12, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %17, align 8
  br label %20

20:                                               ; preds = %4, %16
  %21 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 4
  %22 = bitcast %"class.fxcrt::RetainPtr"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ImageRendererD2Ev(%class.CXFA_ImageRenderer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %2, align 8
  store %class.CFX_ImageRenderer* null, %class.CFX_ImageRenderer** %2, align 8
  %4 = icmp eq %class.CFX_ImageRenderer* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN17CFX_ImageRendererD1Ev(%class.CFX_ImageRenderer* nonnull %3) #7
  %6 = bitcast %class.CFX_ImageRenderer* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %8, align 8
  store %class.CFX_ImageTransformer* null, %class.CFX_ImageTransformer** %8, align 8
  %10 = icmp eq %class.CFX_ImageTransformer* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN20CFX_ImageTransformerD1Ev(%class.CFX_ImageTransformer* nonnull %9) #7
  %12 = bitcast %class.CFX_ImageTransformer* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %14, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %14, align 8
  %16 = icmp eq %class.CFX_DIBitmap* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 0
  %24 = bitcast %class.CFX_DIBitmap* %15 to void (%"class.fxcrt::Retainable"*)***
  %25 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, i64 1
  %27 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, align 8
  tail call void %27(%"class.fxcrt::Retainable"* nonnull %23) #7
  br label %28

28:                                               ; preds = %13, %17, %22
  %29 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %30 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %29, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %29, align 8
  %31 = icmp eq %class.CFX_DIBBase* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %30, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %30, i64 0, i32 0
  %39 = bitcast %class.CFX_DIBBase* %30 to void (%"class.fxcrt::Retainable"*)***
  %40 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, i64 1
  %42 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, align 8
  tail call void %42(%"class.fxcrt::Retainable"* nonnull %38) #7
  br label %43

43:                                               ; preds = %28, %32, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_ImageRenderer5StartEv(%class.CXFA_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to %struct.FXDIB_ResampleOptions*
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.FX_RECT*
  %7 = alloca %"class.fxcrt::RetainPtr.5", align 8
  %8 = alloca %"class.fxcrt::RetainPtr", align 8
  %9 = alloca %struct.FX_RECT, align 4
  %10 = alloca <4 x i32>, align 16
  %11 = bitcast <4 x i32>* %10 to %struct.FX_RECT*
  %12 = alloca <4 x i32>, align 16
  %13 = bitcast <4 x i32>* %12 to %struct.FX_RECT*
  %14 = alloca %"class.fxcrt::RetainPtr", align 8
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #7
  store i32 -1431655766, i32* %2, align 4
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %3) #7
  store i8 1, i8* %15, align 4
  %16 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 0, i32 0
  %17 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %16, align 8
  %18 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 3
  %19 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 2
  %20 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 6
  %21 = call zeroext i1 @_ZN16CFX_RenderDevice20StartDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsPNSt3__110unique_ptrI17CFX_ImageRendererNSC_14default_deleteISE_EEEE9BlendMode(%class.CFX_RenderDevice* %17, %"class.fxcrt::RetainPtr.5"* dereferenceable(8) %18, i32 255, i32 0, %class.CFX_Matrix* dereferenceable(24) %19, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %3, %"class.std::__1::unique_ptr.26"* %20, i32 0) #7
  br i1 %21, label %22, label %28

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %20, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %23, align 8
  %25 = icmp eq %class.CFX_ImageRenderer* %24, null
  br i1 %25, label %253, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 1
  store i32 3, i32* %27, align 8
  br label %253

28:                                               ; preds = %1
  %29 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %30 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #7
  %31 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -1, i64 16, i1 false)
  %32 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %19) #7
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %34 = extractvalue { <2 x float>, <2 x float> } %32, 0
  store <2 x float> %34, <2 x float>* %33, align 8
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %36 = extractvalue { <2 x float>, <2 x float> } %32, 1
  store <2 x float> %36, <2 x float>* %35, align 8
  %37 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %39 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %29) #7
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %41 = extractvalue { i64, i64 } %39, 0
  store i64 %41, i64* %40, align 8
  %42 = extractvalue { i64, i64 } %39, 1
  store i64 %42, i64* %38, align 8
  %43 = trunc i64 %42 to i32
  %44 = trunc i64 %41 to i32
  %45 = sub nsw i32 %43, %44
  %46 = lshr i64 %42, 32
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %41, 32
  %49 = trunc i64 %48 to i32
  %50 = sub nsw i32 %47, %49
  %51 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 2, i32 1
  %52 = load float, float* %51, align 4
  %53 = call float @llvm.fabs.f32(float %52) #7
  %54 = fcmp ult float %53, 5.000000e-01
  br i1 %54, label %55, label %68

55:                                               ; preds = %28
  %56 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %19, i64 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = fcmp oeq float %57, 0.000000e+00
  br i1 %58, label %68, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 2, i32 2
  %61 = load float, float* %60, align 4
  %62 = call float @llvm.fabs.f32(float %61) #7
  %63 = fcmp ult float %62, 5.000000e-01
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 2, i32 3
  %66 = load float, float* %65, align 4
  %67 = fcmp oeq float %66, 0.000000e+00
  br i1 %67, label %68, label %183

68:                                               ; preds = %59, %28, %64, %55
  %69 = bitcast %"class.fxcrt::RetainPtr.5"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %71, align 8
  %73 = ptrtoint %class.CFX_DIBBase* %72 to i64
  %74 = bitcast %"class.fxcrt::RetainPtr.5"* %7 to i64*
  store i64 %73, i64* %74, align 8
  %75 = icmp eq %class.CFX_DIBBase* %72, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %72, i64 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %78, 1
  store i64 %79, i64* %77, align 8
  %80 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %71, align 8
  br label %81

81:                                               ; preds = %68, %76
  %82 = phi %class.CFX_DIBBase* [ null, %68 ], [ %80, %76 ]
  %83 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %82, i64 0, i32 1
  %84 = load i16, i16* %83, align 8
  %85 = and i16 %84, 512
  %86 = icmp eq i16 %85, 0
  br i1 %86, label %149, label %87

87:                                               ; preds = %81
  %88 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %16, align 8
  %89 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %88, i64 0, i32 5
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, 33
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %149

93:                                               ; preds = %87
  %94 = bitcast %"class.fxcrt::RetainPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #7
  call void @_ZN11CFX_DIBBase12CloneConvertE12FXDIB_Format(%"class.fxcrt::RetainPtr"* nonnull sret %8, %class.CFX_DIBBase* %82, i16 zeroext 24) #7
  %95 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 4
  %96 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.fxcrt::RetainPtr"* %8 to i64*
  %98 = load i64, i64* %97, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %96, align 8
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %99, align 8
  %101 = bitcast %"class.fxcrt::RetainPtr"* %95 to i64*
  store i64 %98, i64* %101, align 8
  %102 = icmp eq %class.CFX_DIBitmap* %100, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %93
  %104 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = add nsw i64 %105, -1
  store i64 %106, i64* %104, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %93, %103
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %96, align 8
  br label %128

109:                                              ; preds = %103
  %110 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0
  %111 = bitcast %class.CFX_DIBitmap* %100 to void (%"class.fxcrt::Retainable"*)***
  %112 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %112, i64 1
  %114 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, align 8
  call void %114(%"class.fxcrt::Retainable"* nonnull %110) #7
  %115 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %96, align 8
  %116 = bitcast %class.CFX_DIBitmap* %115 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %96, align 8
  %117 = icmp eq %class.CFX_DIBitmap* %115, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %115, i64 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = add nsw i64 %120, -1
  store i64 %121, i64* %119, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %115, i64 0, i32 0, i32 0
  %125 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %116, align 8
  %126 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, i64 1
  %127 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %126, align 8
  call void %127(%"class.fxcrt::Retainable"* nonnull %124) #7
  br label %128

128:                                              ; preds = %108, %109, %118, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #7
  %129 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %99, align 8
  %130 = icmp eq %class.CFX_DIBitmap* %129, null
  br i1 %130, label %167, label %131

131:                                              ; preds = %128
  %132 = ptrtoint %class.CFX_DIBitmap* %129 to i64
  %133 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %129, i64 0, i32 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = add nsw i64 %134, 1
  store i64 %135, i64* %133, align 8
  %136 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %70, align 8
  store i64 %132, i64* %74, align 8
  %137 = icmp eq %class.CFX_DIBBase* %136, null
  br i1 %137, label %149, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %136, i64 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = add nsw i64 %140, -1
  store i64 %141, i64* %139, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %138
  %144 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %136, i64 0, i32 0
  %145 = bitcast %class.CFX_DIBBase* %136 to void (%"class.fxcrt::Retainable"*)***
  %146 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, i64 1
  %148 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %147, align 8
  call void %148(%"class.fxcrt::Retainable"* nonnull %144) #7
  br label %149

149:                                              ; preds = %81, %131, %138, %143, %87
  %150 = bitcast %struct.FX_RECT* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #7
  %151 = bitcast %struct.FX_RECT* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %151, i8 -86, i64 16, i1 false)
  %152 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %16, align 8
  %153 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %152, i64 0, i32 7
  %154 = bitcast %struct.FX_RECT* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %150, i8* align 4 %154, i64 16, i1 false)
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %9, %struct.FX_RECT* nonnull dereferenceable(16) %6) #7
  %155 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 1
  store i32 2, i32* %155, align 8
  %156 = call i8* @_Znwm(i64 120) #8
  %157 = bitcast i8* %156 to %class.CFX_ImageTransformer*
  call void @_ZN20CFX_ImageTransformerC1ERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_MatrixRK21FXDIB_ResampleOptionsPK7FX_RECT(%class.CFX_ImageTransformer* nonnull %157, %"class.fxcrt::RetainPtr.5"* nonnull dereferenceable(8) %7, %class.CFX_Matrix* dereferenceable(24) %19, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %3, %struct.FX_RECT* nonnull %9) #7
  %158 = ptrtoint i8* %156 to i64
  %159 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 5
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %160, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.14"* %159 to i64*
  store i64 %158, i64* %162, align 8
  %163 = icmp eq %class.CFX_ImageTransformer* %161, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %149
  call void @_ZN20CFX_ImageTransformerD1Ev(%class.CFX_ImageTransformer* nonnull %161) #7
  %165 = bitcast %class.CFX_ImageTransformer* %161 to i8*
  call void @_ZdlPv(i8* %165) #8
  br label %166

166:                                              ; preds = %164, %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #7
  br label %167

167:                                              ; preds = %128, %166
  %168 = phi i1 [ true, %166 ], [ false, %128 ]
  %169 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %70, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %70, align 8
  %170 = icmp eq %class.CFX_DIBBase* %169, null
  br i1 %170, label %182, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %169, i64 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = add nsw i64 %173, -1
  store i64 %174, i64* %172, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %182

176:                                              ; preds = %171
  %177 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %169, i64 0, i32 0
  %178 = bitcast %class.CFX_DIBBase* %169 to void (%"class.fxcrt::Retainable"*)***
  %179 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %179, i64 1
  %181 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %180, align 8
  call void %181(%"class.fxcrt::Retainable"* nonnull %177) #7
  br label %182

182:                                              ; preds = %167, %171, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #7
  br label %251

183:                                              ; preds = %64
  %184 = fcmp olt float %57, 0.000000e+00
  %185 = sub nsw i32 0, %45
  %186 = select i1 %184, i32 %185, i32 %45
  %187 = fcmp ogt float %66, 0.000000e+00
  %188 = sub nsw i32 0, %50
  %189 = select i1 %187, i32 %188, i32 %50
  %190 = icmp sgt i32 %186, 0
  %191 = select i1 %190, i32 %44, i32 %43
  %192 = icmp sgt i32 %189, 0
  %193 = select i1 %192, i32 %49, i32 %47
  %194 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %194, align 8
  %196 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %195, i64 0, i32 1
  %197 = load i16, i16* %196, align 8
  %198 = and i16 %197, 768
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %200, label %207

200:                                              ; preds = %183
  %201 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %16, align 8
  %202 = call zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice* %201, %"class.fxcrt::RetainPtr.5"* dereferenceable(8) %18, i32 %191, i32 %193, i32 %186, i32 %189, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %3, i32 0) #7
  br i1 %202, label %251, label %203

203:                                              ; preds = %200
  %204 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %194, align 8
  %205 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %204, i64 0, i32 1
  %206 = load i16, i16* %205, align 8
  br label %207

207:                                              ; preds = %203, %183
  %208 = phi i16 [ %206, %203 ], [ %197, %183 ]
  %209 = and i16 %208, 256
  %210 = icmp eq i16 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %16, align 8
  %213 = call zeroext i1 @_ZN16CFX_RenderDevice23StretchBitMaskWithFlagsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiijRK21FXDIB_ResampleOptions(%class.CFX_RenderDevice* %212, %"class.fxcrt::RetainPtr.5"* dereferenceable(8) %18, i32 %191, i32 %193, i32 %186, i32 %189, i32 0, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %3) #7
  br i1 %213, label %251, label %214

214:                                              ; preds = %207, %211
  %215 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %16, align 8
  %216 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %215, i64 0, i32 7, i32 0
  %217 = bitcast i32* %216 to <4 x i32>*
  %218 = load <4 x i32>, <4 x i32>* %217, align 4
  %219 = bitcast <4 x i32>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %219) #7
  store <4 x i32> %218, <4 x i32>* %10, align 16
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %11, %struct.FX_RECT* nonnull dereferenceable(16) %6) #7
  %220 = bitcast <4 x i32>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %220) #7
  %221 = bitcast { i64, i64 }* %5 to <2 x i32>*
  %222 = load <2 x i32>, <2 x i32>* %221, align 8
  %223 = shufflevector <2 x i32> %222, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %224 = load <4 x i32>, <4 x i32>* %10, align 16
  %225 = sub nsw <4 x i32> %224, %223
  store <4 x i32> %225, <4 x i32>* %12, align 16
  %226 = bitcast %"class.fxcrt::RetainPtr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #7
  %227 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %227, align 8
  %228 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %194, align 8
  call void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr"* nonnull sret %14, %class.CFX_DIBBase* %228, i32 %186, i32 %189, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %3, %struct.FX_RECT* nonnull %13) #7
  %229 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %227, align 8
  %230 = icmp eq %class.CFX_DIBitmap* %229, null
  br i1 %230, label %231, label %232

231:                                              ; preds = %214
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %227, align 8
  br label %250

232:                                              ; preds = %214
  %233 = getelementptr inbounds <4 x i32>, <4 x i32>* %10, i64 0, i64 0
  %234 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 1
  %235 = load i32, i32* %233, align 16
  %236 = load i32, i32* %234, align 4
  call void @_ZN18CXFA_ImageRenderer17CompositeDIBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CXFA_ImageRenderer* %0, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %14, i32 %235, i32 %236)
  %237 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %227, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %227, align 8
  %238 = icmp eq %class.CFX_DIBitmap* %237, null
  br i1 %238, label %250, label %239

239:                                              ; preds = %232
  %240 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %237, i64 0, i32 0, i32 0, i32 1
  %241 = load i64, i64* %240, align 8
  %242 = add nsw i64 %241, -1
  store i64 %242, i64* %240, align 8
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %250

244:                                              ; preds = %239
  %245 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %237, i64 0, i32 0, i32 0
  %246 = bitcast %class.CFX_DIBitmap* %237 to void (%"class.fxcrt::Retainable"*)***
  %247 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %246, align 8
  %248 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %247, i64 1
  %249 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %248, align 8
  call void %249(%"class.fxcrt::Retainable"* nonnull %245) #7
  br label %250

250:                                              ; preds = %231, %232, %239, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %219) #7
  br label %251

251:                                              ; preds = %250, %200, %211, %182
  %252 = phi i1 [ %168, %182 ], [ false, %211 ], [ false, %200 ], [ false, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #7
  br label %253

253:                                              ; preds = %22, %251, %26
  %254 = phi i1 [ true, %26 ], [ %252, %251 ], [ false, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #7
  ret i1 %254
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #2

declare void @_ZN11CFX_DIBBase12CloneConvertE12FXDIB_Format(%"class.fxcrt::RetainPtr"* sret, %class.CFX_DIBBase*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"* dereferenceable(8), i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice23StretchBitMaskWithFlagsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiijRK21FXDIB_ResampleOptions(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"* dereferenceable(8), i32, i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr"* sret, %class.CFX_DIBBase*, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), %struct.FX_RECT*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ImageRenderer17CompositeDIBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CXFA_ImageRenderer* nocapture readonly, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr.5", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.5", align 8
  %7 = alloca %"class.fxcrt::RetainPtr.5", align 8
  %8 = alloca %"class.fxcrt::RetainPtr", align 8
  %9 = alloca %class.CXFA_ImageRenderer, align 8
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %12 = icmp eq %class.CFX_DIBitmap* %11, null
  br i1 %12, label %173, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %11, i64 0, i32 0, i32 1
  %15 = load i16, i16* %14, align 8
  %16 = and i16 %15, 256
  %17 = icmp eq i16 %16, 0
  %18 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 0, i32 0
  %19 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %18, align 8
  br i1 %17, label %20, label %43

20:                                               ; preds = %13
  %21 = bitcast %"class.fxcrt::RetainPtr.5"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %22 = ptrtoint %class.CFX_DIBitmap* %11 to i64
  %23 = bitcast %"class.fxcrt::RetainPtr.5"* %5 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %11, i64 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, 1
  store i64 %26, i64* %24, align 8
  %27 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %19, %"class.fxcrt::RetainPtr.5"* nonnull dereferenceable(8) %5, i32 %2, i32 %3, i32 0) #7
  %28 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %28, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %28, align 8
  %30 = icmp eq %class.CFX_DIBBase* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0
  %38 = bitcast %class.CFX_DIBBase* %29 to void (%"class.fxcrt::Retainable"*)***
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  call void %41(%"class.fxcrt::Retainable"* nonnull %37) #7
  br label %42

42:                                               ; preds = %20, %31, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br i1 %27, label %173, label %66

43:                                               ; preds = %13
  %44 = bitcast %"class.fxcrt::RetainPtr.5"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  %45 = ptrtoint %class.CFX_DIBitmap* %11 to i64
  %46 = bitcast %"class.fxcrt::RetainPtr.5"* %6 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %11, i64 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i64 %48, 1
  store i64 %49, i64* %47, align 8
  %50 = call zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice* %19, %"class.fxcrt::RetainPtr.5"* nonnull dereferenceable(8) %6, i32 %2, i32 %3, i32 0) #7
  %51 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %51, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %51, align 8
  %53 = icmp eq %class.CFX_DIBBase* %52, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %52, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i64 %56, -1
  store i64 %57, i64* %55, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  %60 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %52, i64 0, i32 0
  %61 = bitcast %class.CFX_DIBBase* %52 to void (%"class.fxcrt::Retainable"*)***
  %62 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, i64 1
  %64 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, align 8
  call void %64(%"class.fxcrt::Retainable"* nonnull %60) #7
  br label %65

65:                                               ; preds = %43, %54, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  br i1 %50, label %173, label %66

66:                                               ; preds = %65, %42
  %67 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %18, align 8
  %68 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %67, i64 0, i32 5
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 64
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %66
  %73 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  br label %79

74:                                               ; preds = %66
  %75 = and i32 %69, 1
  %76 = icmp eq i32 %75, 0
  %77 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %10, align 8
  %78 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %77, i64 0, i32 0
  br i1 %76, label %111, label %79

79:                                               ; preds = %74, %72
  %80 = phi %class.CFX_DIBitmap* [ %73, %72 ], [ %77, %74 ]
  %81 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %80, i64 0, i32 0, i32 1
  %82 = load i16, i16* %81, align 8
  %83 = and i16 %82, 256
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %85, label %173

85:                                               ; preds = %79
  %86 = bitcast %"class.fxcrt::RetainPtr.5"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #7
  %87 = ptrtoint %class.CFX_DIBitmap* %80 to i64
  %88 = bitcast %"class.fxcrt::RetainPtr.5"* %7 to i64*
  store i64 %87, i64* %88, align 8
  %89 = icmp eq %class.CFX_DIBitmap* %80, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %80, i64 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = add nsw i64 %92, 1
  store i64 %93, i64* %91, align 8
  br label %94

94:                                               ; preds = %85, %90
  %95 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %67, %"class.fxcrt::RetainPtr.5"* nonnull dereferenceable(8) %7, i32 %2, i32 %3, i32 0) #7
  %96 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %96, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %96, align 8
  %98 = icmp eq %class.CFX_DIBBase* %97, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %97, i64 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = add nsw i64 %101, -1
  store i64 %102, i64* %100, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %97, i64 0, i32 0
  %106 = bitcast %class.CFX_DIBBase* %97 to void (%"class.fxcrt::Retainable"*)***
  %107 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %107, i64 1
  %109 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %108, align 8
  call void %109(%"class.fxcrt::Retainable"* nonnull %105) #7
  br label %110

110:                                              ; preds = %94, %99, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #7
  br label %173

111:                                              ; preds = %74
  %112 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %77, i64 0, i32 0, i32 1
  %113 = load i16, i16* %112, align 8
  %114 = and i16 %113, 512
  %115 = icmp ne i16 %114, 0
  %116 = and i32 %69, 32
  %117 = icmp eq i32 %116, 0
  %118 = and i1 %117, %115
  br i1 %118, label %119, label %173

119:                                              ; preds = %111
  %120 = bitcast %"class.fxcrt::RetainPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #7
  %121 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %121, align 8
  call void @_ZN11CFX_DIBBase12CloneConvertE12FXDIB_Format(%"class.fxcrt::RetainPtr"* nonnull sret %8, %class.CFX_DIBBase* %78, i16 zeroext 24) #7
  %122 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %121, align 8
  %123 = icmp eq %class.CFX_DIBitmap* %122, null
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %121, align 8
  br label %172

125:                                              ; preds = %119
  %126 = bitcast %class.CXFA_ImageRenderer* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %126) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 bitcast ({ %"class.fxcrt::UnownedPtr", i32, %class.CFX_Matrix, [4 x i8], %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.26" }* @__const._ZN18CXFA_ImageRenderer17CompositeDIBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii.imageRender to i8*), i64 72, i1 false)
  %127 = bitcast %class.CXFA_ImageRenderer* %0 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = ptrtoint %class.CFX_DIBitmap* %122 to i64
  %130 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %122, i64 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = add nsw i64 %131, 1
  store i64 %132, i64* %130, align 8
  %133 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 2
  %134 = bitcast %class.CXFA_ImageRenderer* %9 to i64*
  store i64 %128, i64* %134, align 8
  %135 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %9, i64 0, i32 1
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %9, i64 0, i32 2
  %137 = bitcast %class.CFX_Matrix* %136 to i8*
  %138 = bitcast %class.CFX_Matrix* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %138, i64 24, i1 false) #7
  %139 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %9, i64 0, i32 3
  %140 = bitcast %"class.fxcrt::RetainPtr.5"* %139 to i64*
  store i64 %129, i64* %140, align 8
  %141 = load i64, i64* %130, align 8
  %142 = add nsw i64 %141, 1
  store i64 %142, i64* %130, align 8
  %143 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %9, i64 0, i32 4
  %144 = bitcast %"class.fxcrt::RetainPtr"* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 24, i1 false) #7
  %145 = load i64, i64* %130, align 8
  %146 = add nsw i64 %145, -1
  store i64 %146, i64* %130, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %125
  %149 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %122, i64 0, i32 0, i32 0
  %150 = bitcast %class.CFX_DIBitmap* %122 to void (%"class.fxcrt::Retainable"*)***
  %151 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %151, i64 1
  %153 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %152, align 8
  call void %153(%"class.fxcrt::Retainable"* nonnull %149) #7
  br label %154

154:                                              ; preds = %125, %148
  %155 = call zeroext i1 @_ZN18CXFA_ImageRenderer5StartEv(%class.CXFA_ImageRenderer* nonnull %9)
  br i1 %155, label %156, label %158

156:                                              ; preds = %154, %156
  %157 = call zeroext i1 @_ZN18CXFA_ImageRenderer8ContinueEv(%class.CXFA_ImageRenderer* nonnull %9)
  br i1 %157, label %156, label %158

158:                                              ; preds = %156, %154
  call void @_ZN18CXFA_ImageRendererD2Ev(%class.CXFA_ImageRenderer* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %126) #7
  %159 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %121, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %121, align 8
  %160 = icmp eq %class.CFX_DIBitmap* %159, null
  br i1 %160, label %172, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %159, i64 0, i32 0, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = add nsw i64 %163, -1
  store i64 %164, i64* %162, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %172

166:                                              ; preds = %161
  %167 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %159, i64 0, i32 0, i32 0
  %168 = bitcast %class.CFX_DIBitmap* %159 to void (%"class.fxcrt::Retainable"*)***
  %169 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %169, i64 1
  %171 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %170, align 8
  call void %171(%"class.fxcrt::Retainable"* nonnull %167) #7
  br label %172

172:                                              ; preds = %124, %158, %161, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #7
  br label %173

173:                                              ; preds = %79, %4, %110, %172, %111, %65, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_ImageRenderer8ContinueEv(%class.CXFA_ImageRenderer* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = alloca %"class.fxcrt::RetainPtr.5", align 8
  %4 = alloca %"class.fxcrt::RetainPtr.5", align 8
  %5 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %101 [
    i32 2, label %7
    i32 3, label %95
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %8, align 8
  %10 = tail call zeroext i1 @_ZN20CFX_ImageTransformer8ContinueEP19PauseIndicatorIface(%class.CFX_ImageTransformer* %9, %class.PauseIndicatorIface* null) #7
  br i1 %10, label %101, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %13, align 8
  %14 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %8, align 8
  call void @_ZN20CFX_ImageTransformer12DetachBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %2, %class.CFX_ImageTransformer* %14) #7
  %15 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %13, align 8
  %16 = icmp eq %class.CFX_DIBitmap* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %11
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %13, align 8
  br label %94

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 1
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 256
  %22 = icmp eq i16 %21, 0
  %23 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 0, i32 0
  %24 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %23, align 8
  br i1 %22, label %52, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.fxcrt::RetainPtr.5"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = ptrtoint %class.CFX_DIBitmap* %15 to i64
  %28 = bitcast %"class.fxcrt::RetainPtr.5"* %3 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %8, align 8
  %33 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %32, i64 0, i32 3, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %32, i64 0, i32 3, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = call zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice* %24, %"class.fxcrt::RetainPtr.5"* nonnull dereferenceable(8) %3, i32 %34, i32 %36, i32 0) #7
  %38 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %38, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %38, align 8
  %40 = icmp eq %class.CFX_DIBBase* %39, null
  br i1 %40, label %79, label %41

41:                                               ; preds = %25
  %42 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %39, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %79

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %39, i64 0, i32 0
  %48 = bitcast %class.CFX_DIBBase* %39 to void (%"class.fxcrt::Retainable"*)***
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  call void %51(%"class.fxcrt::Retainable"* nonnull %47) #7
  br label %79

52:                                               ; preds = %18
  %53 = bitcast %"class.fxcrt::RetainPtr.5"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  %54 = ptrtoint %class.CFX_DIBitmap* %15 to i64
  %55 = bitcast %"class.fxcrt::RetainPtr.5"* %4 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add nsw i64 %57, 1
  store i64 %58, i64* %56, align 8
  %59 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %8, align 8
  %60 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %59, i64 0, i32 3, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %59, i64 0, i32 3, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %24, %"class.fxcrt::RetainPtr.5"* nonnull dereferenceable(8) %4, i32 %61, i32 %63, i32 0) #7
  %65 = getelementptr inbounds %"class.fxcrt::RetainPtr.5", %"class.fxcrt::RetainPtr.5"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %65, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %65, align 8
  %67 = icmp eq %class.CFX_DIBBase* %66, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %52
  %69 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %66, i64 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add nsw i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %66, i64 0, i32 0
  %75 = bitcast %class.CFX_DIBBase* %66 to void (%"class.fxcrt::Retainable"*)***
  %76 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, i64 1
  %78 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, align 8
  call void %78(%"class.fxcrt::Retainable"* nonnull %74) #7
  br label %79

79:                                               ; preds = %73, %68, %52, %46, %41, %25
  %80 = phi i8* [ %26, %25 ], [ %26, %41 ], [ %26, %46 ], [ %53, %52 ], [ %53, %68 ], [ %53, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #7
  %81 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %13, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %13, align 8
  %82 = icmp eq %class.CFX_DIBitmap* %81, null
  br i1 %82, label %94, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %81, i64 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %85, -1
  store i64 %86, i64* %84, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %81, i64 0, i32 0, i32 0
  %90 = bitcast %class.CFX_DIBitmap* %81 to void (%"class.fxcrt::Retainable"*)***
  %91 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %91, i64 1
  %93 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %92, align 8
  call void %93(%"class.fxcrt::Retainable"* nonnull %89) #7
  br label %94

94:                                               ; preds = %17, %79, %83, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  br label %101

95:                                               ; preds = %1
  %96 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 0, i32 0
  %97 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %96, align 8
  %98 = getelementptr inbounds %class.CXFA_ImageRenderer, %class.CXFA_ImageRenderer* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %99 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %98, align 8
  %100 = tail call zeroext i1 @_ZN16CFX_RenderDevice14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%class.CFX_RenderDevice* %97, %class.CFX_ImageRenderer* %99, %class.PauseIndicatorIface* null) #7
  br label %101

101:                                              ; preds = %1, %7, %95, %94
  %102 = phi i1 [ false, %94 ], [ %100, %95 ], [ true, %7 ], [ false, %1 ]
  ret i1 %102
}

declare zeroext i1 @_ZN20CFX_ImageTransformer8ContinueEP19PauseIndicatorIface(%class.CFX_ImageTransformer*, %class.PauseIndicatorIface*) local_unnamed_addr #2

declare void @_ZN20CFX_ImageTransformer12DetachBitmapEv(%"class.fxcrt::RetainPtr"* sret, %class.CFX_ImageTransformer*) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%class.CFX_RenderDevice*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*) local_unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice20StartDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsPNSt3__110unique_ptrI17CFX_ImageRendererNSC_14default_deleteISE_EEEE9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.5"* dereferenceable(8), i32, i32, %class.CFX_Matrix* dereferenceable(24), %struct.FXDIB_ResampleOptions* dereferenceable(4), %"class.std::__1::unique_ptr.26"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind
declare void @_ZN20CFX_ImageTransformerD1Ev(%class.CFX_ImageTransformer*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN17CFX_ImageRendererD1Ev(%class.CFX_ImageRenderer*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN20CFX_ImageTransformerC1ERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_MatrixRK21FXDIB_ResampleOptionsPK7FX_RECT(%class.CFX_ImageTransformer*, %"class.fxcrt::RetainPtr.5"* dereferenceable(8), %class.CFX_Matrix* dereferenceable(24), %struct.FXDIB_ResampleOptions* dereferenceable(4), %struct.FX_RECT*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
