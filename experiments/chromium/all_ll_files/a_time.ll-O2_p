; ModuleID = '../../third_party/boringssl/src/crypto/asn1/a_time.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/a_time.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.ASN1_VALUE_st = type opaque
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [10 x i8] c"ASN1_TIME\00", align 1
@ASN1_TIME_it = hidden constant %struct.ASN1_ITEM_st { i8 5, i64 49152, %struct.ASN1_TEMPLATE_st* null, i64 0, i8* null, i64 24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.1 = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/asn1/a_time.c\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"19\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"20\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @d2i_ASN1_TIME(%struct.asn1_string_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.asn1_string_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @ASN1_TIME_it) #5
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.asn1_string_st*
  ret %struct.asn1_string_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_ASN1_TIME(%struct.asn1_string_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.asn1_string_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @ASN1_TIME_it) #5
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_TIME_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @ASN1_TIME_it) #5
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.asn1_string_st*
  ret %struct.asn1_string_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ASN1_TIME_free(%struct.asn1_string_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.asn1_string_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @ASN1_TIME_it) #5
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_TIME_set(%struct.asn1_string_st*, i64) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.tm, align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  store i64 %1, i64* %3, align 8
  %6 = bitcast %struct.tm* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false) #5
  %7 = call %struct.tm* @OPENSSL_gmtime(i64* nonnull %3, %struct.tm* nonnull %4) #5
  %8 = icmp eq %struct.tm* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @ERR_put_error(i32 12, i32 0, i32 113, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 91) #5
  br label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %7, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -50
  %14 = icmp ult i32 %13, 100
  %15 = load i64, i64* %3, align 8
  br i1 %14, label %16, label %18

16:                                               ; preds = %10
  %17 = call %struct.asn1_string_st* @ASN1_UTCTIME_adj(%struct.asn1_string_st* %0, i64 %15, i32 0, i64 0) #5
  br label %20

18:                                               ; preds = %10
  %19 = call %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_adj(%struct.asn1_string_st* %0, i64 %15, i32 0, i64 0) #5
  br label %20

20:                                               ; preds = %9, %16, %18
  %21 = phi %struct.asn1_string_st* [ null, %9 ], [ %17, %16 ], [ %19, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret %struct.asn1_string_st* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_TIME_adj(%struct.asn1_string_st*, i64, i32, i64) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.tm, align 8
  store i64 %1, i64* %5, align 8
  %7 = bitcast %struct.tm* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 56, i1 false)
  %8 = call %struct.tm* @OPENSSL_gmtime(i64* nonnull %5, %struct.tm* nonnull %6) #5
  %9 = icmp eq %struct.tm* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  call void @ERR_put_error(i32 12, i32 0, i32 113, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 91) #5
  br label %28

11:                                               ; preds = %4
  %12 = icmp ne i32 %2, 0
  %13 = icmp ne i64 %3, 0
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = call i32 @OPENSSL_gmtime_adj(%struct.tm* nonnull %8, i32 %2, i64 %3) #5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %15, %11
  %19 = getelementptr inbounds %struct.tm, %struct.tm* %8, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, -50
  %22 = icmp ult i32 %21, 100
  %23 = load i64, i64* %5, align 8
  br i1 %22, label %24, label %26

24:                                               ; preds = %18
  %25 = call %struct.asn1_string_st* @ASN1_UTCTIME_adj(%struct.asn1_string_st* %0, i64 %23, i32 %2, i64 %3) #5
  br label %28

26:                                               ; preds = %18
  %27 = call %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_adj(%struct.asn1_string_st* %0, i64 %23, i32 %2, i64 %3) #5
  br label %28

28:                                               ; preds = %15, %26, %24, %10
  %29 = phi %struct.asn1_string_st* [ null, %10 ], [ %25, %24 ], [ %27, %26 ], [ null, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #5
  ret %struct.asn1_string_st* %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %struct.tm* @OPENSSL_gmtime(i64*, %struct.tm*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare i32 @OPENSSL_gmtime_adj(%struct.tm*, i32, i64) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_UTCTIME_adj(%struct.asn1_string_st*, i64, i32, i64) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_adj(%struct.asn1_string_st*, i64, i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_TIME_check(%struct.asn1_string_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %8 [
    i32 24, label %4
    i32 23, label %6
  ]

4:                                                ; preds = %1
  %5 = tail call i32 @ASN1_GENERALIZEDTIME_check(%struct.asn1_string_st* %0) #5
  br label %8

6:                                                ; preds = %1
  %7 = tail call i32 @ASN1_UTCTIME_check(%struct.asn1_string_st* %0) #5
  br label %8

8:                                                ; preds = %1, %6, %4
  %9 = phi i32 [ %5, %4 ], [ %7, %6 ], [ 0, %1 ]
  ret i32 %9
}

declare i32 @ASN1_GENERALIZEDTIME_check(%struct.asn1_string_st*) local_unnamed_addr #1

declare i32 @ASN1_UTCTIME_check(%struct.asn1_string_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.asn1_string_st* @ASN1_TIME_to_generalizedtime(%struct.asn1_string_st*, %struct.asn1_string_st**) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %63 [
    i32 24, label %5
    i32 23, label %7
  ]

5:                                                ; preds = %2
  %6 = tail call i32 @ASN1_GENERALIZEDTIME_check(%struct.asn1_string_st* %0) #5
  br label %9

7:                                                ; preds = %2
  %8 = tail call i32 @ASN1_UTCTIME_check(%struct.asn1_string_st* %0) #5
  br label %9

9:                                                ; preds = %5, %7
  %10 = phi i32 [ %6, %5 ], [ %8, %7 ]
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %63, label %12

12:                                               ; preds = %9
  %13 = icmp ne %struct.asn1_string_st** %1, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = load %struct.asn1_string_st*, %struct.asn1_string_st** %1, align 8
  %16 = icmp eq %struct.asn1_string_st* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %14, %12
  %18 = tail call %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_new() #5
  %19 = icmp eq %struct.asn1_string_st* %18, null
  br i1 %19, label %56, label %20

20:                                               ; preds = %14, %17
  %21 = phi %struct.asn1_string_st* [ %18, %17 ], [ %15, %14 ]
  %22 = load i32, i32* %3, align 4
  %23 = icmp eq i32 %22, 24
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %21, i8* %26, i32 %28) #5
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %56, label %51

31:                                               ; preds = %20
  %32 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = add nsw i32 %33, 2
  %35 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %21, i8* null, i32 %34) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %31
  %38 = load i32, i32* %32, align 8
  %39 = add nsw i32 %38, 3
  %40 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %21, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %0, i64 0, i32 2
  %43 = load i8*, i8** %42, align 8
  %44 = load i8, i8* %43, align 1
  %45 = icmp ugt i8 %44, 52
  %46 = sext i32 %39 to i64
  %47 = select i1 %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)
  %48 = tail call i64 @OPENSSL_strlcpy(i8* %41, i8* %47, i64 %46) #5
  %49 = load i8*, i8** %42, align 8
  %50 = tail call i64 @OPENSSL_strlcat(i8* %41, i8* %49, i64 %46) #5
  br label %51

51:                                               ; preds = %24, %37
  br i1 %13, label %52, label %63

52:                                               ; preds = %51
  %53 = load %struct.asn1_string_st*, %struct.asn1_string_st** %1, align 8
  %54 = icmp eq %struct.asn1_string_st* %53, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %52
  store %struct.asn1_string_st* %21, %struct.asn1_string_st** %1, align 8
  br label %63

56:                                               ; preds = %24, %31, %17
  %57 = phi %struct.asn1_string_st* [ %21, %24 ], [ %21, %31 ], [ null, %17 ]
  %58 = icmp eq %struct.asn1_string_st** %1, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = load %struct.asn1_string_st*, %struct.asn1_string_st** %1, align 8
  %61 = icmp eq %struct.asn1_string_st* %60, %57
  br i1 %61, label %63, label %62

62:                                               ; preds = %59, %56
  tail call void @ASN1_GENERALIZEDTIME_free(%struct.asn1_string_st* %57) #5
  br label %63

63:                                               ; preds = %2, %62, %59, %51, %52, %55, %9
  %64 = phi %struct.asn1_string_st* [ null, %9 ], [ %21, %55 ], [ %21, %52 ], [ %21, %51 ], [ null, %59 ], [ null, %62 ], [ null, %2 ]
  ret %struct.asn1_string_st* %64
}

declare %struct.asn1_string_st* @ASN1_GENERALIZEDTIME_new() local_unnamed_addr #1

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #1

declare i64 @OPENSSL_strlcpy(i8*, i8*, i64) local_unnamed_addr #1

declare i64 @OPENSSL_strlcat(i8*, i8*, i64) local_unnamed_addr #1

declare void @ASN1_GENERALIZEDTIME_free(%struct.asn1_string_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_TIME_set_string(%struct.asn1_string_st*, i8*) local_unnamed_addr #0 {
  %3 = alloca %struct.asn1_string_st, align 8
  %4 = bitcast %struct.asn1_string_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5
  %5 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 3
  %9 = tail call i64 @strlen(i8* %1) #6
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %5, align 8
  store i8* %1, i8** %7, align 8
  store i64 0, i64* %8, align 8
  store i32 23, i32* %6, align 4
  %11 = call i32 @ASN1_UTCTIME_check(%struct.asn1_string_st* nonnull %3) #5
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  store i32 24, i32* %6, align 4
  %14 = call i32 @ASN1_GENERALIZEDTIME_check(%struct.asn1_string_st* nonnull %3) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %13, %2
  %17 = icmp eq %struct.asn1_string_st* %0, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = call i32 @ASN1_STRING_copy(%struct.asn1_string_st* nonnull %0, %struct.asn1_string_st* nonnull %3) #5
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18, %16
  br label %22

22:                                               ; preds = %18, %13, %21
  %23 = phi i32 [ 1, %21 ], [ 0, %13 ], [ 0, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5
  ret i32 %23
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @ASN1_STRING_copy(%struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_TIME_diff(i32*, i32*, %struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.tm, align 8
  %8 = alloca %struct.tm, align 8
  %9 = bitcast %struct.tm* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = bitcast %struct.tm* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = icmp eq %struct.asn1_string_st* %2, null
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #5
  store i64 -6148914691236517206, i64* %6, align 8
  %14 = call i64 @time(i64* nonnull %6) #5
  %15 = call %struct.tm* @OPENSSL_gmtime(i64* nonnull %6, %struct.tm* nonnull %7) #5
  %16 = icmp ne %struct.tm* %15, null
  %17 = zext i1 %16 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #5
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %48 [
    i32 23, label %21
    i32 24, label %23
  ]

21:                                               ; preds = %18
  %22 = call i32 @asn1_utctime_to_tm(%struct.tm* nonnull %7, %struct.asn1_string_st* nonnull %2) #5
  br label %25

23:                                               ; preds = %18
  %24 = call i32 @asn1_generalizedtime_to_tm(%struct.tm* nonnull %7, %struct.asn1_string_st* nonnull %2) #5
  br label %25

25:                                               ; preds = %12, %21, %23
  %26 = phi i32 [ %17, %12 ], [ %22, %21 ], [ %24, %23 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %25
  %29 = icmp eq %struct.asn1_string_st* %3, null
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  store i64 -6148914691236517206, i64* %5, align 8
  %32 = call i64 @time(i64* nonnull %5) #5
  %33 = call %struct.tm* @OPENSSL_gmtime(i64* nonnull %5, %struct.tm* nonnull %8) #5
  %34 = icmp ne %struct.tm* %33, null
  %35 = zext i1 %34 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  br label %43

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  switch i32 %38, label %48 [
    i32 23, label %39
    i32 24, label %41
  ]

39:                                               ; preds = %36
  %40 = call i32 @asn1_utctime_to_tm(%struct.tm* nonnull %8, %struct.asn1_string_st* nonnull %3) #5
  br label %43

41:                                               ; preds = %36
  %42 = call i32 @asn1_generalizedtime_to_tm(%struct.tm* nonnull %8, %struct.asn1_string_st* nonnull %3) #5
  br label %43

43:                                               ; preds = %30, %39, %41
  %44 = phi i32 [ %35, %30 ], [ %40, %39 ], [ %42, %41 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  %47 = call i32 @OPENSSL_gmtime_diff(i32* %0, i32* %1, %struct.tm* nonnull %7, %struct.tm* nonnull %8) #5
  br label %48

48:                                               ; preds = %36, %18, %43, %25, %46
  %49 = phi i32 [ %47, %46 ], [ 0, %25 ], [ 0, %43 ], [ 0, %18 ], [ 0, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #5
  ret i32 %49
}

declare i32 @OPENSSL_gmtime_diff(i32*, i32*, %struct.tm*, %struct.tm*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #4

declare i32 @asn1_utctime_to_tm(%struct.tm*, %struct.asn1_string_st*) local_unnamed_addr #1

declare i32 @asn1_generalizedtime_to_tm(%struct.tm*, %struct.asn1_string_st*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
