; ModuleID = '../../components/policy/core/common/chrome_schema.cc'
source_filename = "../../components/policy/core/common/chrome_schema.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [16 x i8] }
%"class.policy::Schema" = type { %class.scoped_refptr, %"struct.policy::internal::SchemaNode"* }
%class.scoped_refptr = type { %"class.policy::Schema::InternalStorage"* }
%"class.policy::Schema::InternalStorage" = type opaque
%"struct.policy::internal::SchemaNode" = type opaque
%"struct.policy::internal::SchemaData" = type opaque

@_ZZN6policy15GetChromeSchemaEvE14chrome_schema_ = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN6policy15GetChromeSchemaEvE14chrome_schema_ = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.policy::Schema"* @_ZN6policy15GetChromeSchemaEv() local_unnamed_addr #0 {
  %1 = alloca %"class.policy::Schema", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN6policy15GetChromeSchemaEvE14chrome_schema_ to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %11, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6policy15GetChromeSchemaEvE14chrome_schema_) #5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.policy::Schema"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #5
  %9 = tail call %"struct.policy::internal::SchemaData"* @_ZN6policy19GetChromeSchemaDataEv() #5
  call void @_ZN6policy6Schema4WrapEPKNS_8internal10SchemaDataE(%"class.policy::Schema"* nonnull sret %1, %"struct.policy::internal::SchemaData"* %9) #5
  call void @_ZN6policy6SchemaC1ERKS0_(%"class.policy::Schema"* bitcast (%"class.base::NoDestructor"* @_ZZN6policy15GetChromeSchemaEvE14chrome_schema_ to %"class.policy::Schema"*), %"class.policy::Schema"* nonnull dereferenceable(16) %1) #5
  call void @_ZN6policy6SchemaD1Ev(%"class.policy::Schema"* nonnull %1) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #5
  %10 = call {}* @llvm.invariant.start.p0i8(i64 16, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN6policy15GetChromeSchemaEvE14chrome_schema_, i64 0, i32 0, i64 0))
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN6policy15GetChromeSchemaEvE14chrome_schema_) #5
  br label %11

11:                                               ; preds = %4, %7, %0
  ret %"class.policy::Schema"* bitcast (%"class.base::NoDestructor"* @_ZZN6policy15GetChromeSchemaEvE14chrome_schema_ to %"class.policy::Schema"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6policy6Schema4WrapEPKNS_8internal10SchemaDataE(%"class.policy::Schema"* sret, %"struct.policy::internal::SchemaData"*) local_unnamed_addr #3

declare %"struct.policy::internal::SchemaData"* @_ZN6policy19GetChromeSchemaDataEv() local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6policy6SchemaD1Ev(%"class.policy::Schema"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

declare void @_ZN6policy6SchemaC1ERKS0_(%"class.policy::Schema"*, %"class.policy::Schema"* dereferenceable(16)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
