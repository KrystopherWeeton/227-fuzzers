; ModuleID = '../../third_party/skia/src/gpu/GrBackendUtils.cpp'
source_filename = "../../third_party/skia/src/gpu/GrBackendUtils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>

@switch.table._Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat = private unnamed_addr constant [4 x i32] [i32 1, i32 1, i32 2, i32 3], align 4
@switch.table._Z28GrBackendFormatBytesPerBlockRK15GrBackendFormat = private unnamed_addr constant [27 x i64] [i64 0, i64 4, i64 1, i64 1, i64 1, i64 2, i64 4, i64 2, i64 8, i64 2, i64 4, i64 2, i64 4, i64 2, i64 4, i64 8, i64 8, i64 8, i64 8, i64 2, i64 4, i64 8, i64 4, i64 2, i64 1, i64 2, i64 4], align 8
@switch.table._Z28GrBackendFormatBytesPerBlockRK15GrBackendFormat.1 = private unnamed_addr constant [31 x i64] [i64 0, i64 1, i64 2, i64 2, i64 4, i64 4, i64 4, i64 2, i64 4, i64 4, i64 4, i64 1, i64 2, i64 2, i64 8, i64 8, i64 16, i64 2, i64 4, i64 4, i64 8, i64 4, i64 16, i64 4, i64 3, i64 1, i64 2, i64 2, i64 2, i64 2, i64 2], align 8
@switch.table._Z26GrBackendFormatStencilBitsRK15GrBackendFormat = private unnamed_addr constant [27 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, i32 16, i32 8], align 4
@switch.table._Z26GrBackendFormatStencilBitsRK15GrBackendFormat.2 = private unnamed_addr constant [4 x i32] [i32 8, i32 0, i32 8, i32 8], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %24 [
    i32 0, label %5
    i32 1, label %9
    i32 5, label %18
  ]

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK15GrBackendFormat10asGLFormatEv(%class.GrBackendFormat* %0) #4
  %7 = add i32 %6, -15
  %8 = icmp ult i32 %7, 4
  br i1 %8, label %20, label %24

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #4
  store i32 -1431655766, i32* %2, align 4
  %11 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %0, i32* nonnull %2) #4
  %12 = load i32, i32* %2, align 4
  switch i32 %12, label %15 [
    i32 147, label %16
    i32 131, label %13
    i32 133, label %14
  ]

13:                                               ; preds = %9
  br label %16

14:                                               ; preds = %9
  br label %16

15:                                               ; preds = %9
  br label %16

16:                                               ; preds = %9, %15, %14, %13
  %17 = phi i32 [ 0, %15 ], [ 3, %14 ], [ 2, %13 ], [ 1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #4
  br label %24

18:                                               ; preds = %1
  %19 = tail call i32 @_ZNK15GrBackendFormat21asMockCompressionTypeEv(%class.GrBackendFormat* %0) #4
  br label %24

20:                                               ; preds = %5
  %21 = sext i32 %7 to i64
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  ret i32 %23

24:                                               ; preds = %5, %1, %18, %16
  %25 = phi i32 [ %19, %18 ], [ %17, %16 ], [ 0, %1 ], [ 0, %5 ]
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK15GrBackendFormat10asGLFormatEv(%class.GrBackendFormat*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat*, i32*) local_unnamed_addr #2

declare i32 @_ZNK15GrBackendFormat21asMockCompressionTypeEv(%class.GrBackendFormat*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z28GrBackendFormatBytesPerBlockRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %52 [
    i32 0, label %5
    i32 1, label %9
    i32 5, label %33
  ]

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK15GrBackendFormat10asGLFormatEv(%class.GrBackendFormat* %0) #4
  %7 = icmp ult i32 %6, 27
  br i1 %7, label %44, label %8

8:                                                ; preds = %5
  tail call void @llvm.trap() #4
  unreachable

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #4
  store i32 -1431655766, i32* %2, align 4
  %11 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %0, i32* nonnull %2) #4
  %12 = load i32, i32* %2, align 4
  switch i32 %12, label %30 [
    i32 37, label %31
    i32 9, label %13
    i32 44, label %31
    i32 4, label %14
    i32 97, label %15
    i32 76, label %16
    i32 23, label %17
    i32 16, label %18
    i32 64, label %31
    i32 58, label %31
    i32 3, label %19
    i32 2, label %20
    i32 43, label %31
    i32 147, label %21
    i32 131, label %22
    i32 133, label %23
    i32 70, label %24
    i32 77, label %31
    i32 91, label %25
    i32 83, label %31
    i32 1000156002, label %26
    i32 1000156003, label %27
    i32 127, label %28
    i32 129, label %31
    i32 130, label %29
  ]

13:                                               ; preds = %9
  br label %31

14:                                               ; preds = %9
  br label %31

15:                                               ; preds = %9
  br label %31

16:                                               ; preds = %9
  br label %31

17:                                               ; preds = %9
  br label %31

18:                                               ; preds = %9
  br label %31

19:                                               ; preds = %9
  br label %31

20:                                               ; preds = %9
  br label %31

21:                                               ; preds = %9
  br label %31

22:                                               ; preds = %9
  br label %31

23:                                               ; preds = %9
  br label %31

24:                                               ; preds = %9
  br label %31

25:                                               ; preds = %9
  br label %31

26:                                               ; preds = %9
  br label %31

27:                                               ; preds = %9
  br label %31

28:                                               ; preds = %9
  br label %31

29:                                               ; preds = %9
  br label %31

30:                                               ; preds = %9
  br label %31

31:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %13, %14, %15, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28, %29, %30
  %32 = phi i64 [ 0, %30 ], [ 8, %29 ], [ 1, %28 ], [ 3, %27 ], [ 3, %26 ], [ 8, %25 ], [ 2, %24 ], [ 8, %23 ], [ 8, %22 ], [ 8, %21 ], [ 2, %20 ], [ 2, %19 ], [ 2, %18 ], [ 3, %17 ], [ 2, %16 ], [ 8, %15 ], [ 2, %14 ], [ 1, %13 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ], [ 4, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #4
  br label %52

33:                                               ; preds = %1
  %34 = tail call i32 @_ZNK15GrBackendFormat21asMockCompressionTypeEv(%class.GrBackendFormat* %0) #4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call i64 @_Z20GrCompressedRowBytesN7SkImage15CompressionTypeEi(i32 %34, i32 1) #4
  br label %52

38:                                               ; preds = %33
  %39 = tail call zeroext i1 @_ZNK15GrBackendFormat19isMockStencilFormatEv(%class.GrBackendFormat* %0) #4
  br i1 %39, label %52, label %40

40:                                               ; preds = %38
  %41 = tail call i32 @_ZNK15GrBackendFormat15asMockColorTypeEv(%class.GrBackendFormat* %0) #4
  %42 = icmp ult i32 %41, 31
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  tail call void @llvm.trap() #4
  unreachable

44:                                               ; preds = %5
  %45 = sext i32 %6 to i64
  %46 = getelementptr inbounds [27 x i64], [27 x i64]* @switch.table._Z28GrBackendFormatBytesPerBlockRK15GrBackendFormat, i64 0, i64 %45
  %47 = load i64, i64* %46, align 8
  ret i64 %47

48:                                               ; preds = %40
  %49 = sext i32 %41 to i64
  %50 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._Z28GrBackendFormatBytesPerBlockRK15GrBackendFormat.1, i64 0, i64 %49
  %51 = load i64, i64* %50, align 8
  ret i64 %51

52:                                               ; preds = %1, %36, %38, %31
  %53 = phi i64 [ %32, %31 ], [ %37, %36 ], [ 4, %38 ], [ 0, %1 ]
  ret i64 %53
}

declare i64 @_Z20GrCompressedRowBytesN7SkImage15CompressionTypeEi(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK15GrBackendFormat19isMockStencilFormatEv(%class.GrBackendFormat*) local_unnamed_addr #2

declare i32 @_ZNK15GrBackendFormat15asMockColorTypeEv(%class.GrBackendFormat*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z28GrBackendFormatBytesPerPixelRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %23 [
    i32 0, label %5
    i32 1, label %9
    i32 5, label %18
  ]

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK15GrBackendFormat10asGLFormatEv(%class.GrBackendFormat* %0) #4
  %7 = add i32 %6, -15
  %8 = icmp ult i32 %7, 4
  br i1 %8, label %25, label %23

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #4
  store i32 -1431655766, i32* %2, align 4
  %11 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %0, i32* nonnull %2) #4
  %12 = load i32, i32* %2, align 4
  switch i32 %12, label %15 [
    i32 147, label %16
    i32 131, label %13
    i32 133, label %14
  ]

13:                                               ; preds = %9
  br label %16

14:                                               ; preds = %9
  br label %16

15:                                               ; preds = %9
  br label %16

16:                                               ; preds = %15, %14, %13, %9
  %17 = phi i32 [ 0, %15 ], [ 3, %14 ], [ 2, %13 ], [ 1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #4
  br label %20

18:                                               ; preds = %1
  %19 = tail call i32 @_ZNK15GrBackendFormat21asMockCompressionTypeEv(%class.GrBackendFormat* %0) #4
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i32 [ %19, %18 ], [ %17, %16 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %5, %1, %20
  %24 = call i64 @_Z28GrBackendFormatBytesPerBlockRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72) %0)
  br label %25

25:                                               ; preds = %5, %20, %23
  %26 = phi i64 [ %24, %23 ], [ 0, %20 ], [ 0, %5 ]
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z26GrBackendFormatStencilBitsRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %23 [
    i32 0, label %5
    i32 1, label %9
    i32 5, label %21
  ]

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK15GrBackendFormat10asGLFormatEv(%class.GrBackendFormat* %0) #4
  %7 = icmp ult i32 %6, 27
  br i1 %7, label %24, label %8

8:                                                ; preds = %5
  tail call void @llvm.trap() #4
  unreachable

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #4
  store i32 -1431655766, i32* %2, align 4
  %11 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %0, i32* nonnull %2) #4
  %12 = load i32, i32* %2, align 4
  %13 = add i32 %12, -127
  %14 = icmp ult i32 %13, 4
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = sext i32 %13 to i64
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._Z26GrBackendFormatStencilBitsRK15GrBackendFormat.2, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %9, %15
  %20 = phi i32 [ %18, %15 ], [ 0, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #4
  br label %28

21:                                               ; preds = %1
  %22 = tail call zeroext i1 @_ZNK15GrBackendFormat19isMockStencilFormatEv(%class.GrBackendFormat* %0) #4
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %1
  br label %28

24:                                               ; preds = %5
  %25 = sext i32 %6 to i64
  %26 = getelementptr inbounds [27 x i32], [27 x i32]* @switch.table._Z26GrBackendFormatStencilBitsRK15GrBackendFormat, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  ret i32 %27

28:                                               ; preds = %21, %23, %19
  %29 = phi i32 [ 0, %23 ], [ %20, %19 ], [ 8, %21 ]
  ret i32 %29
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
