; ModuleID = '../../third_party/icu/source/common/normalizer2.cpp'
source_filename = "../../third_party/icu/source/common/normalizer2.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::Normalizer2" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::Norm2AllModes" = type { %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::ComposeNormalizer2", %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::FCDNormalizer2", %"class.icu_69::ComposeNormalizer2" }
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type opaque
%"class.icu_69::DecomposeNormalizer2" = type { %"class.icu_69::Normalizer2WithImpl" }
%"class.icu_69::Normalizer2WithImpl" = type { %"class.icu_69::Normalizer2", %"class.icu_69::Normalizer2Impl"* }
%"class.icu_69::FCDNormalizer2" = type { %"class.icu_69::Normalizer2WithImpl" }
%"class.icu_69::ComposeNormalizer2" = type <{ %"class.icu_69::Normalizer2WithImpl", i8, [7 x i8] }>
%"class.icu_69::NoopNormalizer2" = type { %"class.icu_69::Normalizer2" }
%"class.icu_69::ByteSink" = type { i32 (...)** }
%"class.icu_69::Edits" = type <{ i16*, i32, i32, i32, i32, i32, [100 x i16], [4 x i8] }>
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%struct.UNormalizer2 = type opaque
%"class.icu_69::ReorderingBuffer" = type { %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::UnicodeString"*, i16*, i16*, i16*, i32, i8, i16*, i16* }
%"class.icu_69::ConstChar16Ptr" = type { i16* }
%"class.icu_69::Char16Ptr" = type { i16* }
%struct.anon = type { i16, [27 x i16] }

$_ZNK6icu_6919Normalizer2WithImpl9normalizeERKNS_13UnicodeStringERS1_R10UErrorCode = comdat any

$_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode = comdat any

$_ZNK6icu_6919Normalizer2WithImpl6appendERNS_13UnicodeStringERKS1_R10UErrorCode = comdat any

$_ZNK6icu_6919Normalizer2WithImpl16getDecompositionEiRNS_13UnicodeStringE = comdat any

$_ZNK6icu_6919Normalizer2WithImpl19getRawDecompositionEiRNS_13UnicodeStringE = comdat any

$_ZNK6icu_6919Normalizer2WithImpl11composePairEii = comdat any

$_ZNK6icu_6919Normalizer2WithImpl17getCombiningClassEi = comdat any

$_ZNK6icu_6919Normalizer2WithImpl12isNormalizedERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6919Normalizer2WithImpl10quickCheckERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6919Normalizer2WithImpl17spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6919Normalizer2WithImpl13getQuickCheckEi = comdat any

$_ZNK6icu_6920DecomposeNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode = comdat any

$_ZNK6icu_6920DecomposeNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode = comdat any

$_ZNK6icu_6920DecomposeNormalizer217hasBoundaryBeforeEi = comdat any

$_ZNK6icu_6920DecomposeNormalizer216hasBoundaryAfterEi = comdat any

$_ZNK6icu_6920DecomposeNormalizer27isInertEi = comdat any

$_ZNK6icu_6920DecomposeNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode = comdat any

$_ZNK6icu_6920DecomposeNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode = comdat any

$_ZNK6icu_6920DecomposeNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode = comdat any

$_ZNK6icu_6920DecomposeNormalizer213getQuickCheckEi = comdat any

$_ZNK6icu_6918ComposeNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode = comdat any

$_ZNK6icu_6918ComposeNormalizer212isNormalizedERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6918ComposeNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode = comdat any

$_ZNK6icu_6918ComposeNormalizer210quickCheckERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6918ComposeNormalizer217hasBoundaryBeforeEi = comdat any

$_ZNK6icu_6918ComposeNormalizer216hasBoundaryAfterEi = comdat any

$_ZNK6icu_6918ComposeNormalizer27isInertEi = comdat any

$_ZNK6icu_6918ComposeNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode = comdat any

$_ZNK6icu_6918ComposeNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode = comdat any

$_ZNK6icu_6918ComposeNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode = comdat any

$_ZNK6icu_6918ComposeNormalizer213getQuickCheckEi = comdat any

$_ZNK6icu_6914FCDNormalizer217hasBoundaryBeforeEi = comdat any

$_ZNK6icu_6914FCDNormalizer216hasBoundaryAfterEi = comdat any

$_ZNK6icu_6914FCDNormalizer27isInertEi = comdat any

$_ZNK6icu_6914FCDNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode = comdat any

$_ZNK6icu_6914FCDNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode = comdat any

$_ZNK6icu_6914FCDNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer29normalizeERKNS_13UnicodeStringERS1_R10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer224normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer26appendERNS_13UnicodeStringERKS1_R10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer216getDecompositionEiRNS_13UnicodeStringE = comdat any

$_ZNK6icu_6915NoopNormalizer212isNormalizedERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer210quickCheckERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer217spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode = comdat any

$_ZNK6icu_6915NoopNormalizer217hasBoundaryBeforeEi = comdat any

$_ZNK6icu_6915NoopNormalizer216hasBoundaryAfterEi = comdat any

$_ZNK6icu_6915NoopNormalizer27isInertEi = comdat any

$_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_aR10UErrorCode = comdat any

@_ZN6icu_69L13noopSingletonE = internal unnamed_addr global %"class.icu_69::Normalizer2"* null, align 8
@_ZL22norm2_nfc_data_indexes = internal constant [20 x i32] [i32 80, i32 19372, i32 34836, i32 35092, i32 35092, i32 35092, i32 35092, i32 35092, i32 192, i32 768, i32 2786, i32 10720, i32 15462, i32 64512, i32 4744, i32 15260, i32 15412, i32 15462, i32 768, i32 0], align 16
@_ZL19norm2_nfc_data_trie = internal constant %struct.UCPTrie { i16* getelementptr inbounds ([1746 x i16], [1746 x i16]* @_ZL24norm2_nfc_data_trieIndex, i32 0, i32 0), %union.UCPTrieData { i8* bitcast ([7892 x i16]* @_ZL23norm2_nfc_data_trieData to i8*) }, i32 1746, i32 7892, i32 195584, i16 48, i8 0, i8 0, i32 0, i16 0, i16 196, i32 550, i32 1 }, align 8
@_ZL24norm2_nfc_data_extraData = internal constant [7732 x i16] [i16 -1, i16 -1, i16 -31120, i16 17628, i16 -31120, i16 17600, i16 -31120, i16 17630, i16 1536, i16 384, i16 1538, i16 386, i16 1540, i16 389, i16 1542, i16 390, i16 1544, i16 512, i16 1548, i16 517, i16 1550, i16 1101, i16 1552, i16 393, i16 1554, i16 15684, i16 1556, i16 395, i16 1560, i16 922, i16 1566, i16 1024, i16 1570, i16 1028, i16 1606, i16 15681, i16 1610, i16 15360, i16 -31152, i16 520, i16 1550, i16 15364, i16 1606, i16 15368, i16 -31134, i16 15372, i16 1538, i16 524, i16 1540, i16 528, i16 1550, i16 532, i16 1560, i16 536, i16 -31154, i16 399, i16 1550, i16 15380, i16 1560, i16 540, i16 1606, i16 15384, i16 1614, i16 15392, i16 1626, i16 15396, i16 -31134, i16 15388, i16 1536, i16 400, i16 1538, i16 402, i16 1540, i16 405, i16 1542, i16 15736, i16 1544, i16 549, i16 1548, i16 552, i16 1550, i16 556, i16 1552, i16 406, i16 1554, i16 15732, i16 1560, i16 564, i16 1566, i16 1032, i16 1570, i16 1036, i16 1606, i16 15729, i16 1614, i16 1105, i16 1616, i16 560, i16 1626, i16 15408, i16 -31136, i16 15412, i16 -31218, i16 15420, i16 1538, i16 1000, i16 1540, i16 568, i16 1544, i16 15424, i16 1548, i16 572, i16 1550, i16 576, i16 1560, i16 972, i16 -31154, i16 580, i16 1540, i16 584, i16 1550, i16 15428, i16 1552, i16 15436, i16 1560, i16 1084, i16 1606, i16 15432, i16 1614, i16 15440, i16 -31140, i16 15444, i16 1536, i16 408, i16 1538, i16 410, i16 1540, i16 412, i16 1542, i16 592, i16 1544, i16 596, i16 1548, i16 600, i16 1550, i16 608, i16 1552, i16 415, i16 1554, i16 15760, i16 1560, i16 926, i16 1566, i16 1040, i16 1570, i16 1044, i16 1606, i16 15764, i16 1616, i16 604, i16 -31136, i16 15448, i16 -31228, i16 616, i16 1538, i16 15456, i16 1560, i16 976, i16 1606, i16 15460, i16 1614, i16 620, i16 -31134, i16 15464, i16 1538, i16 626, i16 1560, i16 634, i16 1606, i16 15469, i16 1614, i16 630, i16 1626, i16 15480, i16 -31134, i16 15476, i16 1538, i16 15484, i16 1550, i16 15488, i16 -31162, i16 15492, i16 1536, i16 1008, i16 1538, i16 646, i16 1542, i16 418, i16 1550, i16 15496, i16 1560, i16 654, i16 1606, i16 15500, i16 1614, i16 650, i16 1626, i16 15508, i16 -31134, i16 15504, i16 1536, i16 420, i16 1538, i16 422, i16 1540, i16 425, i16 1542, i16 427, i16 1544, i16 665, i16 1548, i16 668, i16 1550, i16 1117, i16 1552, i16 429, i16 1554, i16 15772, i16 1558, i16 672, i16 1560, i16 930, i16 1566, i16 1048, i16 1570, i16 1052, i16 1590, i16 833, i16 1606, i16 15769, i16 -31152, i16 981, i16 1538, i16 15528, i16 -31218, i16 15532, i16 1538, i16 680, i16 1550, i16 15536, i16 1560, i16 688, i16 1566, i16 1056, i16 1570, i16 1060, i16 1606, i16 15541, i16 1614, i16 684, i16 -31134, i16 15548, i16 1538, i16 693, i16 1540, i16 696, i16 1550, i16 15552, i16 1560, i16 705, i16 1606, i16 15557, i16 1612, i16 1072, i16 -31154, i16 700, i16 1550, i16 15572, i16 1560, i16 712, i16 1606, i16 15576, i16 1612, i16 1076, i16 1614, i16 708, i16 1626, i16 15584, i16 -31134, i16 15580, i16 1536, i16 434, i16 1538, i16 436, i16 1540, i16 438, i16 1542, i16 721, i16 1544, i16 725, i16 1548, i16 728, i16 1552, i16 441, i16 1554, i16 15820, i16 1556, i16 732, i16 1558, i16 736, i16 1560, i16 934, i16 1566, i16 1064, i16 1570, i16 1068, i16 1590, i16 863, i16 1606, i16 15816, i16 1608, i16 15588, i16 1616, i16 740, i16 1626, i16 15596, i16 -31136, i16 15592, i16 1542, i16 15608, i16 -31162, i16 15612, i16 1536, i16 15616, i16 1538, i16 15620, i16 1540, i16 744, i16 1550, i16 15628, i16 1552, i16 15624, i16 -31162, i16 15632, i16 1550, i16 15636, i16 -31216, i16 15640, i16 1536, i16 15844, i16 1538, i16 442, i16 1540, i16 748, i16 1542, i16 15856, i16 1544, i16 1124, i16 1550, i16 15644, i16 1552, i16 752, i16 1554, i16 15852, i16 -31162, i16 15848, i16 1538, i16 754, i16 1540, i16 15648, i16 1550, i16 758, i16 1560, i16 762, i16 1606, i16 15652, i16 -31134, i16 15656, i16 1536, i16 448, i16 1538, i16 450, i16 1540, i16 453, i16 1542, i16 454, i16 1544, i16 514, i16 1548, i16 519, i16 1550, i16 1103, i16 1552, i16 457, i16 1554, i16 15686, i16 1556, i16 459, i16 1560, i16 924, i16 1566, i16 1026, i16 1570, i16 1030, i16 1606, i16 15683, i16 1610, i16 15362, i16 -31152, i16 522, i16 1550, i16 15366, i16 1606, i16 15370, i16 -31134, i16 15374, i16 1538, i16 526, i16 1540, i16 530, i16 1550, i16 534, i16 1560, i16 538, i16 -31154, i16 463, i16 1550, i16 15382, i16 1560, i16 542, i16 1606, i16 15386, i16 1614, i16 15394, i16 1626, i16 15398, i16 -31134, i16 15390, i16 1536, i16 464, i16 1538, i16 466, i16 1540, i16 469, i16 1542, i16 15738, i16 1544, i16 551, i16 1548, i16 554, i16 1550, i16 558, i16 1552, i16 470, i16 1554, i16 15734, i16 1560, i16 566, i16 1566, i16 1034, i16 1570, i16 1038, i16 1606, i16 15731, i16 1614, i16 1107, i16 1616, i16 562, i16 1626, i16 15410, i16 -31136, i16 15414, i16 -31218, i16 15422, i16 1538, i16 1002, i16 1540, i16 570, i16 1544, i16 15426, i16 1548, i16 574, i16 1550, i16 578, i16 1560, i16 974, i16 -31154, i16 582, i16 1540, i16 586, i16 1550, i16 15430, i16 1552, i16 15438, i16 1560, i16 1086, i16 1606, i16 15434, i16 1614, i16 15442, i16 1628, i16 15446, i16 -31134, i16 15660, i16 1536, i16 472, i16 1538, i16 474, i16 1540, i16 476, i16 1542, i16 594, i16 1544, i16 598, i16 1548, i16 602, i16 1552, i16 479, i16 1554, i16 15762, i16 1560, i16 928, i16 1566, i16 1042, i16 1570, i16 1046, i16 1606, i16 15766, i16 1616, i16 606, i16 -31136, i16 15450, i16 1540, i16 618, i16 -31208, i16 992, i16 1538, i16 15458, i16 1560, i16 978, i16 1606, i16 15462, i16 1614, i16 622, i16 -31134, i16 15466, i16 1538, i16 628, i16 1560, i16 636, i16 1606, i16 15471, i16 1614, i16 632, i16 1626, i16 15482, i16 -31134, i16 15478, i16 1538, i16 15486, i16 1550, i16 15490, i16 -31162, i16 15494, i16 1536, i16 1010, i16 1538, i16 648, i16 1542, i16 482, i16 1550, i16 15498, i16 1560, i16 656, i16 1606, i16 15502, i16 1614, i16 652, i16 1626, i16 15510, i16 -31134, i16 15506, i16 1536, i16 484, i16 1538, i16 486, i16 1540, i16 489, i16 1542, i16 491, i16 1544, i16 667, i16 1548, i16 670, i16 1550, i16 1119, i16 1552, i16 493, i16 1554, i16 15774, i16 1558, i16 674, i16 1560, i16 932, i16 1566, i16 1050, i16 1570, i16 1054, i16 1590, i16 835, i16 1606, i16 15771, i16 -31152, i16 983, i16 1538, i16 15530, i16 -31218, i16 15534, i16 1538, i16 682, i16 1550, i16 15538, i16 1560, i16 690, i16 1566, i16 1058, i16 1570, i16 1062, i16 1606, i16 15543, i16 1614, i16 686, i16 -31134, i16 15550, i16 1538, i16 695, i16 1540, i16 698, i16 1550, i16 15554, i16 1560, i16 707, i16 1606, i16 15559, i16 1612, i16 1074, i16 -31154, i16 702, i16 1550, i16 15574, i16 1552, i16 15662, i16 1560, i16 714, i16 1606, i16 15578, i16 1612, i16 1078, i16 1614, i16 710, i16 1626, i16 15586, i16 -31134, i16 15582, i16 1536, i16 498, i16 1538, i16 500, i16 1540, i16 502, i16 1542, i16 723, i16 1544, i16 727, i16 1548, i16 730, i16 1552, i16 505, i16 1554, i16 15822, i16 1556, i16 734, i16 1558, i16 738, i16 1560, i16 936, i16 1566, i16 1066, i16 1570, i16 1070, i16 1590, i16 865, i16 1606, i16 15818, i16 1608, i16 15590, i16 1616, i16 742, i16 1626, i16 15598, i16 -31136, i16 15594, i16 1542, i16 15610, i16 -31162, i16 15614, i16 1536, i16 15618, i16 1538, i16 15622, i16 1540, i16 746, i16 1550, i16 15630, i16 1552, i16 15626, i16 1556, i16 15664, i16 -31162, i16 15634, i16 1550, i16 15638, i16 -31216, i16 15642, i16 1536, i16 15846, i16 1538, i16 506, i16 1540, i16 750, i16 1542, i16 15858, i16 1544, i16 1126, i16 1550, i16 15646, i16 1552, i16 510, i16 1554, i16 15854, i16 1556, i16 15666, i16 -31162, i16 15850, i16 1538, i16 756, i16 1540, i16 15650, i16 1550, i16 760, i16 1560, i16 764, i16 1606, i16 15654, i16 -31134, i16 15658, i16 1536, i16 16346, i16 1538, i16 1802, i16 -31100, i16 16258, i16 1538, i16 1016, i16 -31224, i16 964, i16 -31230, i16 1020, i16 1538, i16 1018, i16 -31224, i16 966, i16 -31230, i16 1022, i16 -31218, i16 15670, i16 -31208, i16 988, i16 -31208, i16 990, i16 1536, i16 16244, i16 1538, i16 1804, i16 1544, i16 16242, i16 1548, i16 16240, i16 1574, i16 15889, i16 1576, i16 15891, i16 -31094, i16 16248, i16 1536, i16 16272, i16 1538, i16 1808, i16 1574, i16 15921, i16 -31192, i16 15923, i16 1536, i16 16276, i16 1538, i16 1810, i16 1574, i16 15953, i16 1576, i16 15955, i16 -31094, i16 16280, i16 1536, i16 16308, i16 1538, i16 1812, i16 1544, i16 16306, i16 1548, i16 16304, i16 1552, i16 1876, i16 1574, i16 15985, i16 -31192, i16 15987, i16 1536, i16 16368, i16 1538, i16 1816, i16 1574, i16 16017, i16 -31192, i16 16019, i16 -31192, i16 16344, i16 1536, i16 16340, i16 1538, i16 1820, i16 1544, i16 16338, i16 1548, i16 16336, i16 1552, i16 1878, i16 -31192, i16 16051, i16 1536, i16 16372, i16 1538, i16 1822, i16 1574, i16 16081, i16 1576, i16 16083, i16 -31094, i16 16376, i16 1536, i16 16097, i16 1538, i16 1881, i16 1544, i16 16226, i16 1548, i16 16224, i16 1574, i16 15873, i16 1576, i16 15875, i16 1668, i16 16237, i16 -31094, i16 16230, i16 1536, i16 16100, i16 1538, i16 1882, i16 1574, i16 15905, i16 -31192, i16 15907, i16 1536, i16 16105, i16 1538, i16 1885, i16 1574, i16 15937, i16 1576, i16 15939, i16 1668, i16 16269, i16 -31094, i16 16262, i16 1536, i16 16108, i16 1538, i16 1886, i16 1544, i16 16290, i16 1548, i16 16288, i16 1552, i16 1941, i16 1574, i16 15969, i16 1576, i16 15971, i16 -31100, i16 16300, i16 1536, i16 16112, i16 1538, i16 1944, i16 1574, i16 16001, i16 -31192, i16 16003, i16 1574, i16 16328, i16 -31192, i16 16330, i16 1536, i16 16116, i16 1538, i16 1946, i16 1544, i16 16322, i16 1548, i16 16320, i16 1552, i16 1943, i16 1574, i16 16033, i16 1576, i16 16035, i16 -31100, i16 16332, i16 1536, i16 16121, i16 1538, i16 1949, i16 1574, i16 16065, i16 1576, i16 16067, i16 1668, i16 16365, i16 -31094, i16 16358, i16 1538, i16 1958, i16 -31216, i16 1960, i16 -31216, i16 2062, i16 1548, i16 2464, i16 -31216, i16 2468, i16 -31230, i16 2054, i16 1536, i16 2048, i16 1548, i16 2476, i16 -31216, i16 2050, i16 1548, i16 2434, i16 -31216, i16 2488, i16 -31216, i16 2492, i16 1536, i16 2074, i16 1544, i16 2500, i16 1548, i16 2098, i16 -31216, i16 2504, i16 -31230, i16 2072, i16 -31216, i16 2508, i16 1544, i16 2524, i16 1548, i16 2076, i16 1552, i16 2528, i16 -31210, i16 2532, i16 -31216, i16 2536, i16 -31216, i16 2544, i16 -31216, i16 2520, i16 1548, i16 2466, i16 -31216, i16 2470, i16 -31230, i16 2214, i16 1536, i16 2208, i16 1548, i16 2478, i16 -31216, i16 2210, i16 1548, i16 2436, i16 -31216, i16 2490, i16 -31216, i16 2494, i16 1536, i16 2234, i16 1544, i16 2502, i16 1548, i16 2162, i16 -31216, i16 2506, i16 -31230, i16 2232, i16 -31216, i16 2510, i16 1544, i16 2526, i16 1548, i16 2236, i16 1552, i16 2530, i16 -31210, i16 2534, i16 -31216, i16 2538, i16 -31216, i16 2546, i16 -31216, i16 2522, i16 -31216, i16 2222, i16 -31202, i16 2284, i16 -31202, i16 2286, i16 -31216, i16 2484, i16 -31216, i16 2486, i16 -31216, i16 2516, i16 -31216, i16 2518, i16 3238, i16 3140, i16 3240, i16 3142, i16 -29526, i16 3146, i16 -29528, i16 3144, i16 -29528, i16 3148, i16 -29528, i16 3460, i16 -29528, i16 3494, i16 -29528, i16 3456, i16 -28040, i16 4690, i16 -28040, i16 4706, i16 -28040, i16 4712, i16 4988, i16 5014, i16 -27730, i16 5016, i16 5756, i16 5782, i16 5804, i16 5776, i16 -26962, i16 5784, i16 -26706, i16 5928, i16 6012, i16 6036, i16 -26706, i16 6040, i16 -26756, i16 6038, i16 -26452, i16 6288, i16 -26198, i16 6528, i16 6532, i16 6549, i16 6570, i16 6542, i16 -26196, i16 6544, i16 6780, i16 6804, i16 -25938, i16 6808, i16 -25988, i16 6806, i16 7060, i16 7092, i16 7070, i16 7097, i16 -25666, i16 7100, i16 -24484, i16 8268, i16 -18838, i16 13836, i16 -18838, i16 13840, i16 -18838, i16 13844, i16 -18838, i16 13848, i16 -18838, i16 13852, i16 -18838, i16 13860, i16 -18838, i16 13942, i16 -18838, i16 13946, i16 -18838, i16 13952, i16 -18838, i16 13954, i16 -18838, i16 13958, i16 1536, i16 16282, i16 1538, i16 16284, i16 -31100, i16 16286, i16 1536, i16 16314, i16 1538, i16 16316, i16 -31100, i16 16318, i16 -31120, i16 17204, i16 -31120, i16 17206, i16 -31120, i16 17244, i16 -31120, i16 17306, i16 -31120, i16 17310, i16 -31120, i16 17308, i16 -31120, i16 17416, i16 -31120, i16 17426, i16 -31120, i16 17432, i16 -31120, i16 17480, i16 -31120, i16 17484, i16 -31120, i16 17538, i16 -31120, i16 17544, i16 -31120, i16 17550, i16 -31120, i16 17554, i16 -31120, i16 17626, i16 -31120, i16 17604, i16 -31120, i16 17632, i16 -31120, i16 17634, i16 -31120, i16 17640, i16 -31120, i16 17642, i16 -31120, i16 17648, i16 -31120, i16 17650, i16 -31120, i16 17664, i16 -31120, i16 17666, i16 -31120, i16 17856, i16 -31120, i16 17858, i16 -31120, i16 17672, i16 -31120, i16 17674, i16 -31120, i16 17680, i16 -31120, i16 17682, i16 -31120, i16 17860, i16 -31120, i16 17862, i16 -31120, i16 17752, i16 -31120, i16 17754, i16 -31120, i16 17756, i16 -31120, i16 17758, i16 -31120, i16 17876, i16 -31120, i16 17878, i16 -31120, i16 17880, i16 -31120, i16 17882, i16 -7886, i16 24872, i16 -7886, i16 24728, i16 -7886, i16 24732, i16 -7886, i16 24736, i16 -7886, i16 24740, i16 -7886, i16 24744, i16 -7886, i16 24748, i16 -7886, i16 24752, i16 -7886, i16 24756, i16 -7886, i16 24760, i16 -7886, i16 24764, i16 -7886, i16 24768, i16 -7886, i16 24772, i16 -7886, i16 24778, i16 -7886, i16 24782, i16 -7886, i16 24786, i16 24882, i16 24800, i16 -7884, i16 24802, i16 24882, i16 24806, i16 -7884, i16 24808, i16 24882, i16 24812, i16 -7884, i16 24814, i16 24882, i16 24818, i16 -7884, i16 24820, i16 24882, i16 24824, i16 -7884, i16 24826, i16 -7886, i16 24892, i16 -7886, i16 25064, i16 -7886, i16 24920, i16 -7886, i16 24924, i16 -7886, i16 24928, i16 -7886, i16 24932, i16 -7886, i16 24936, i16 -7886, i16 24940, i16 -7886, i16 24944, i16 -7886, i16 24948, i16 -7886, i16 24952, i16 -7886, i16 24956, i16 -7886, i16 24960, i16 -7886, i16 24964, i16 -7886, i16 24970, i16 -7886, i16 24974, i16 -7886, i16 24978, i16 24882, i16 24992, i16 -7884, i16 24994, i16 24882, i16 24998, i16 -7884, i16 25000, i16 24882, i16 25004, i16 -7884, i16 25006, i16 24882, i16 25010, i16 -7884, i16 25012, i16 24882, i16 25016, i16 -7884, i16 25018, i16 -7886, i16 25070, i16 -7886, i16 25072, i16 -7886, i16 25074, i16 -7886, i16 25076, i16 -7886, i16 25084, i16 -19319, i16 11906, i16 8500, i16 -19319, i16 11906, i16 8504, i16 -19319, i16 11906, i16 8534, i16 -19319, i16 18882, i16 8796, i16 -19319, i16 18882, i16 8798, i16 13449, i16 -12414, i16 9878, i16 -19319, i16 -10814, i16 9880, i16 13451, i16 11266, i16 10616, i16 13451, i16 11906, i16 10614, i16 -19317, i16 12098, i16 10620, i16 -19317, i16 27586, i16 11124, i16 -19317, i16 27586, i16 11126, i16 -19315, i16 19458, i16 12912, i16 2, i16 -6654, i16 65, i16 770, i16 1536, i16 15692, i16 1538, i16 15688, i16 1542, i16 15700, i16 -31214, i16 15696, i16 -6654, i16 65, i16 776, i16 -31224, i16 956, i16 -6654, i16 65, i16 778, i16 -31230, i16 1012, i16 -13822, i16 67, i16 807, i16 -31230, i16 15376, i16 -6654, i16 69, i16 770, i16 1536, i16 15744, i16 1538, i16 15740, i16 1542, i16 15752, i16 -31214, i16 15748, i16 -6654, i16 73, i16 776, i16 -31230, i16 15452, i16 -6654, i16 79, i16 770, i16 1536, i16 15780, i16 1538, i16 15776, i16 1542, i16 15788, i16 -31214, i16 15784, i16 -6654, i16 79, i16 771, i16 1538, i16 15512, i16 1544, i16 1112, i16 -31216, i16 15516, i16 -6654, i16 79, i16 776, i16 -31224, i16 1108, i16 -6654, i16 85, i16 776, i16 1536, i16 950, i16 1538, i16 942, i16 1544, i16 938, i16 -31208, i16 946, i16 -6654, i16 97, i16 770, i16 1536, i16 15694, i16 1538, i16 15690, i16 1542, i16 15702, i16 -31214, i16 15698, i16 -6654, i16 97, i16 776, i16 -31224, i16 958, i16 -6654, i16 97, i16 778, i16 -31230, i16 1014, i16 -13822, i16 99, i16 807, i16 -31230, i16 15378, i16 -6654, i16 101, i16 770, i16 1536, i16 15746, i16 1538, i16 15742, i16 1542, i16 15754, i16 -31214, i16 15750, i16 -6654, i16 105, i16 776, i16 -31230, i16 15454, i16 -6654, i16 111, i16 770, i16 1536, i16 15782, i16 1538, i16 15778, i16 1542, i16 15790, i16 -31214, i16 15786, i16 -6654, i16 111, i16 771, i16 1538, i16 15514, i16 1544, i16 1114, i16 -31216, i16 15518, i16 -6654, i16 111, i16 776, i16 -31224, i16 1110, i16 -6654, i16 117, i16 776, i16 1536, i16 952, i16 1538, i16 944, i16 1544, i16 940, i16 -31208, i16 948, i16 -6654, i16 65, i16 774, i16 1536, i16 15712, i16 1538, i16 15708, i16 1542, i16 15720, i16 -31214, i16 15716, i16 -6654, i16 97, i16 774, i16 1536, i16 15714, i16 1538, i16 15710, i16 1542, i16 15722, i16 -31214, i16 15718, i16 -6654, i16 69, i16 772, i16 1536, i16 15400, i16 -31230, i16 15404, i16 -6654, i16 101, i16 772, i16 1536, i16 15402, i16 -31230, i16 15406, i16 -6654, i16 79, i16 772, i16 1536, i16 15520, i16 -31230, i16 15524, i16 -6654, i16 111, i16 772, i16 1536, i16 15522, i16 -31230, i16 15526, i16 -6654, i16 83, i16 769, i16 -31218, i16 15560, i16 -6654, i16 115, i16 769, i16 -31218, i16 15562, i16 -6654, i16 83, i16 780, i16 -31218, i16 15564, i16 -6654, i16 115, i16 780, i16 -31218, i16 15566, i16 -6654, i16 85, i16 771, i16 -31230, i16 15600, i16 -6654, i16 117, i16 771, i16 -31230, i16 15602, i16 -6654, i16 85, i16 772, i16 -31216, i16 15604, i16 -6654, i16 117, i16 772, i16 -31216, i16 15606, i16 -10238, i16 79, i16 795, i16 1536, i16 15800, i16 1538, i16 15796, i16 1542, i16 15808, i16 1554, i16 15804, i16 -31162, i16 15812, i16 -10238, i16 111, i16 795, i16 1536, i16 15802, i16 1538, i16 15798, i16 1542, i16 15810, i16 1554, i16 15806, i16 -31162, i16 15814, i16 -10238, i16 85, i16 795, i16 1536, i16 15828, i16 1538, i16 15824, i16 1542, i16 15836, i16 1554, i16 15832, i16 -31162, i16 15840, i16 -10238, i16 117, i16 795, i16 1536, i16 15830, i16 1538, i16 15826, i16 1542, i16 15838, i16 1554, i16 15834, i16 -31162, i16 15842, i16 -13822, i16 79, i16 808, i16 -31224, i16 984, i16 -13822, i16 111, i16 808, i16 -31224, i16 986, i16 -6654, i16 65, i16 775, i16 -31224, i16 960, i16 -6654, i16 97, i16 775, i16 -31224, i16 962, i16 -13822, i16 69, i16 807, i16 -31220, i16 15416, i16 -13822, i16 101, i16 807, i16 -31220, i16 15418, i16 -6654, i16 79, i16 775, i16 -31224, i16 1120, i16 -6654, i16 111, i16 775, i16 -31224, i16 1122, i16 -6654, i16 945, i16 769, i16 -31094, i16 16232, i16 -6654, i16 951, i16 769, i16 -31094, i16 16264, i16 -6654, i16 953, i16 776, i16 1536, i16 16292, i16 1538, i16 1824, i16 -31100, i16 16302, i16 -6654, i16 965, i16 776, i16 1536, i16 16324, i16 1538, i16 1888, i16 -31100, i16 16334, i16 -6654, i16 969, i16 769, i16 -31094, i16 16360, i16 2, i16 3270, i16 3266, i16 -26198, i16 6550, i16 2, i16 3545, i16 3535, i16 -25708, i16 7098, i16 -9214, i16 76, i16 803, i16 -31224, i16 15472, i16 -9214, i16 108, i16 803, i16 -31224, i16 15474, i16 -9214, i16 82, i16 803, i16 -31224, i16 15544, i16 -9214, i16 114, i16 803, i16 -31224, i16 15546, i16 -9214, i16 83, i16 803, i16 -31218, i16 15568, i16 -9214, i16 115, i16 803, i16 -31218, i16 15570, i16 -9214, i16 65, i16 803, i16 1540, i16 15704, i16 -31220, i16 15724, i16 -9214, i16 97, i16 803, i16 1540, i16 15706, i16 -31220, i16 15726, i16 -9214, i16 69, i16 803, i16 -31228, i16 15756, i16 -9214, i16 101, i16 803, i16 -31228, i16 15758, i16 -9214, i16 79, i16 803, i16 -31228, i16 15792, i16 -9214, i16 111, i16 803, i16 -31228, i16 15794, i16 -6654, i16 945, i16 787, i16 1536, i16 15877, i16 1538, i16 15881, i16 1668, i16 15885, i16 -31094, i16 16128, i16 -6654, i16 945, i16 788, i16 1536, i16 15879, i16 1538, i16 15883, i16 1668, i16 15887, i16 -31094, i16 16130, i16 7936, i16 -6589, i16 945, i16 787, i16 768, i16 -31094, i16 16132, i16 7937, i16 -6589, i16 945, i16 788, i16 768, i16 -31094, i16 16134, i16 7936, i16 -6589, i16 945, i16 787, i16 769, i16 -31094, i16 16136, i16 7937, i16 -6589, i16 945, i16 788, i16 769, i16 -31094, i16 16138, i16 7936, i16 -6589, i16 945, i16 787, i16 834, i16 -31094, i16 16140, i16 7937, i16 -6589, i16 945, i16 788, i16 834, i16 -31094, i16 16142, i16 -6654, i16 913, i16 787, i16 1536, i16 15893, i16 1538, i16 15897, i16 1668, i16 15901, i16 -31094, i16 16144, i16 -6654, i16 913, i16 788, i16 1536, i16 15895, i16 1538, i16 15899, i16 1668, i16 15903, i16 -31094, i16 16146, i16 7944, i16 -6589, i16 913, i16 787, i16 768, i16 -31094, i16 16148, i16 7945, i16 -6589, i16 913, i16 788, i16 768, i16 -31094, i16 16150, i16 7944, i16 -6589, i16 913, i16 787, i16 769, i16 -31094, i16 16152, i16 7945, i16 -6589, i16 913, i16 788, i16 769, i16 -31094, i16 16154, i16 7944, i16 -6589, i16 913, i16 787, i16 834, i16 -31094, i16 16156, i16 7945, i16 -6589, i16 913, i16 788, i16 834, i16 -31094, i16 16158, i16 -6654, i16 949, i16 787, i16 1536, i16 15908, i16 -31230, i16 15912, i16 -6654, i16 949, i16 788, i16 1536, i16 15910, i16 -31230, i16 15914, i16 -6654, i16 917, i16 787, i16 1536, i16 15924, i16 -31230, i16 15928, i16 -6654, i16 917, i16 788, i16 1536, i16 15926, i16 -31230, i16 15930, i16 -6654, i16 951, i16 787, i16 1536, i16 15941, i16 1538, i16 15945, i16 1668, i16 15949, i16 -31094, i16 16160, i16 -6654, i16 951, i16 788, i16 1536, i16 15943, i16 1538, i16 15947, i16 1668, i16 15951, i16 -31094, i16 16162, i16 7968, i16 -6589, i16 951, i16 787, i16 768, i16 -31094, i16 16164, i16 7969, i16 -6589, i16 951, i16 788, i16 768, i16 -31094, i16 16166, i16 7968, i16 -6589, i16 951, i16 787, i16 769, i16 -31094, i16 16168, i16 7969, i16 -6589, i16 951, i16 788, i16 769, i16 -31094, i16 16170, i16 7968, i16 -6589, i16 951, i16 787, i16 834, i16 -31094, i16 16172, i16 7969, i16 -6589, i16 951, i16 788, i16 834, i16 -31094, i16 16174, i16 -6654, i16 919, i16 787, i16 1536, i16 15957, i16 1538, i16 15961, i16 1668, i16 15965, i16 -31094, i16 16176, i16 -6654, i16 919, i16 788, i16 1536, i16 15959, i16 1538, i16 15963, i16 1668, i16 15967, i16 -31094, i16 16178, i16 7976, i16 -6589, i16 919, i16 787, i16 768, i16 -31094, i16 16180, i16 7977, i16 -6589, i16 919, i16 788, i16 768, i16 -31094, i16 16182, i16 7976, i16 -6589, i16 919, i16 787, i16 769, i16 -31094, i16 16184, i16 7977, i16 -6589, i16 919, i16 788, i16 769, i16 -31094, i16 16186, i16 7976, i16 -6589, i16 919, i16 787, i16 834, i16 -31094, i16 16188, i16 7977, i16 -6589, i16 919, i16 788, i16 834, i16 -31094, i16 16190, i16 -6654, i16 953, i16 787, i16 1536, i16 15972, i16 1538, i16 15976, i16 -31100, i16 15980, i16 -6654, i16 953, i16 788, i16 1536, i16 15974, i16 1538, i16 15978, i16 -31100, i16 15982, i16 -6654, i16 921, i16 787, i16 1536, i16 15988, i16 1538, i16 15992, i16 -31100, i16 15996, i16 -6654, i16 921, i16 788, i16 1536, i16 15990, i16 1538, i16 15994, i16 -31100, i16 15998, i16 -6654, i16 959, i16 787, i16 1536, i16 16004, i16 -31230, i16 16008, i16 -6654, i16 959, i16 788, i16 1536, i16 16006, i16 -31230, i16 16010, i16 -6654, i16 927, i16 787, i16 1536, i16 16020, i16 -31230, i16 16024, i16 -6654, i16 927, i16 788, i16 1536, i16 16022, i16 -31230, i16 16026, i16 -6654, i16 965, i16 787, i16 1536, i16 16036, i16 1538, i16 16040, i16 -31100, i16 16044, i16 -6654, i16 965, i16 788, i16 1536, i16 16038, i16 1538, i16 16042, i16 -31100, i16 16046, i16 -6654, i16 933, i16 788, i16 1536, i16 16054, i16 1538, i16 16058, i16 -31100, i16 16062, i16 -6654, i16 969, i16 787, i16 1536, i16 16069, i16 1538, i16 16073, i16 1668, i16 16077, i16 -31094, i16 16192, i16 -6654, i16 969, i16 788, i16 1536, i16 16071, i16 1538, i16 16075, i16 1668, i16 16079, i16 -31094, i16 16194, i16 8032, i16 -6589, i16 969, i16 787, i16 768, i16 -31094, i16 16196, i16 8033, i16 -6589, i16 969, i16 788, i16 768, i16 -31094, i16 16198, i16 8032, i16 -6589, i16 969, i16 787, i16 769, i16 -31094, i16 16200, i16 8033, i16 -6589, i16 969, i16 788, i16 769, i16 -31094, i16 16202, i16 8032, i16 -6589, i16 969, i16 787, i16 834, i16 -31094, i16 16204, i16 8033, i16 -6589, i16 969, i16 788, i16 834, i16 -31094, i16 16206, i16 -6654, i16 937, i16 787, i16 1536, i16 16085, i16 1538, i16 16089, i16 1668, i16 16093, i16 -31094, i16 16208, i16 -6654, i16 937, i16 788, i16 1536, i16 16087, i16 1538, i16 16091, i16 1668, i16 16095, i16 -31094, i16 16210, i16 8040, i16 -6589, i16 937, i16 787, i16 768, i16 -31094, i16 16212, i16 8041, i16 -6589, i16 937, i16 788, i16 768, i16 -31094, i16 16214, i16 8040, i16 -6589, i16 937, i16 787, i16 769, i16 -31094, i16 16216, i16 8041, i16 -6589, i16 937, i16 788, i16 769, i16 -31094, i16 16218, i16 8040, i16 -6589, i16 937, i16 787, i16 834, i16 -31094, i16 16220, i16 8041, i16 -6589, i16 937, i16 788, i16 834, i16 -31094, i16 16222, i16 -6654, i16 945, i16 768, i16 -31094, i16 16228, i16 -6654, i16 951, i16 768, i16 -31094, i16 16260, i16 -6654, i16 969, i16 768, i16 -31094, i16 16356, i16 -6654, i16 945, i16 834, i16 -31094, i16 16238, i16 -6654, i16 951, i16 834, i16 -31094, i16 16270, i16 -6654, i16 969, i16 834, i16 -31094, i16 16366, i16 3, i16 -6654, i16 65, i16 768, i16 -6654, i16 65, i16 769, i16 -6654, i16 65, i16 771, i16 -6654, i16 69, i16 768, i16 -6654, i16 69, i16 769, i16 -6654, i16 69, i16 776, i16 -6654, i16 73, i16 768, i16 -6654, i16 73, i16 769, i16 -6654, i16 73, i16 770, i16 -6654, i16 78, i16 771, i16 -6654, i16 79, i16 768, i16 -6654, i16 79, i16 769, i16 -6654, i16 85, i16 768, i16 -6654, i16 85, i16 769, i16 -6654, i16 85, i16 770, i16 -6654, i16 89, i16 769, i16 -6654, i16 97, i16 768, i16 -6654, i16 97, i16 769, i16 -6654, i16 97, i16 771, i16 -6654, i16 101, i16 768, i16 -6654, i16 101, i16 769, i16 -6654, i16 101, i16 776, i16 -6654, i16 105, i16 768, i16 -6654, i16 105, i16 769, i16 -6654, i16 105, i16 770, i16 -6654, i16 110, i16 771, i16 -6654, i16 111, i16 768, i16 -6654, i16 111, i16 769, i16 -6654, i16 117, i16 768, i16 -6654, i16 117, i16 769, i16 -6654, i16 117, i16 770, i16 -6654, i16 121, i16 769, i16 -6654, i16 121, i16 776, i16 -6654, i16 65, i16 772, i16 -6654, i16 97, i16 772, i16 -13822, i16 65, i16 808, i16 -13822, i16 97, i16 808, i16 -6654, i16 67, i16 769, i16 -6654, i16 99, i16 769, i16 -6654, i16 67, i16 770, i16 -6654, i16 99, i16 770, i16 -6654, i16 67, i16 775, i16 -6654, i16 99, i16 775, i16 -6654, i16 67, i16 780, i16 -6654, i16 99, i16 780, i16 -6654, i16 68, i16 780, i16 -6654, i16 100, i16 780, i16 -6654, i16 69, i16 774, i16 -6654, i16 101, i16 774, i16 -6654, i16 69, i16 775, i16 -6654, i16 101, i16 775, i16 -13822, i16 69, i16 808, i16 -13822, i16 101, i16 808, i16 -6654, i16 69, i16 780, i16 -6654, i16 101, i16 780, i16 -6654, i16 71, i16 770, i16 -6654, i16 103, i16 770, i16 -6654, i16 71, i16 774, i16 -6654, i16 103, i16 774, i16 -6654, i16 71, i16 775, i16 -6654, i16 103, i16 775, i16 -13822, i16 71, i16 807, i16 -13822, i16 103, i16 807, i16 -6654, i16 72, i16 770, i16 -6654, i16 104, i16 770, i16 -6654, i16 73, i16 771, i16 -6654, i16 105, i16 771, i16 -6654, i16 73, i16 772, i16 -6654, i16 105, i16 772, i16 -6654, i16 73, i16 774, i16 -6654, i16 105, i16 774, i16 -13822, i16 73, i16 808, i16 -13822, i16 105, i16 808, i16 -6654, i16 73, i16 775, i16 -6654, i16 74, i16 770, i16 -6654, i16 106, i16 770, i16 -13822, i16 75, i16 807, i16 -13822, i16 107, i16 807, i16 -6654, i16 76, i16 769, i16 -6654, i16 108, i16 769, i16 -13822, i16 76, i16 807, i16 -13822, i16 108, i16 807, i16 -6654, i16 76, i16 780, i16 -6654, i16 108, i16 780, i16 -6654, i16 78, i16 769, i16 -6654, i16 110, i16 769, i16 -13822, i16 78, i16 807, i16 -13822, i16 110, i16 807, i16 -6654, i16 78, i16 780, i16 -6654, i16 110, i16 780, i16 -6654, i16 79, i16 774, i16 -6654, i16 111, i16 774, i16 -6654, i16 79, i16 779, i16 -6654, i16 111, i16 779, i16 -6654, i16 82, i16 769, i16 -6654, i16 114, i16 769, i16 -13822, i16 82, i16 807, i16 -13822, i16 114, i16 807, i16 -6654, i16 82, i16 780, i16 -6654, i16 114, i16 780, i16 -6654, i16 83, i16 770, i16 -6654, i16 115, i16 770, i16 -13822, i16 83, i16 807, i16 -13822, i16 115, i16 807, i16 -13822, i16 84, i16 807, i16 -13822, i16 116, i16 807, i16 -6654, i16 84, i16 780, i16 -6654, i16 116, i16 780, i16 -6654, i16 85, i16 774, i16 -6654, i16 117, i16 774, i16 -6654, i16 85, i16 778, i16 -6654, i16 117, i16 778, i16 -6654, i16 85, i16 779, i16 -6654, i16 117, i16 779, i16 -13822, i16 85, i16 808, i16 -13822, i16 117, i16 808, i16 -6654, i16 87, i16 770, i16 -6654, i16 119, i16 770, i16 -6654, i16 89, i16 770, i16 -6654, i16 121, i16 770, i16 -6654, i16 89, i16 776, i16 -6654, i16 90, i16 769, i16 -6654, i16 122, i16 769, i16 -6654, i16 90, i16 775, i16 -6654, i16 122, i16 775, i16 -6654, i16 90, i16 780, i16 -6654, i16 122, i16 780, i16 -6654, i16 65, i16 780, i16 -6654, i16 97, i16 780, i16 -6654, i16 73, i16 780, i16 -6654, i16 105, i16 780, i16 -6654, i16 79, i16 780, i16 -6654, i16 111, i16 780, i16 -6654, i16 85, i16 780, i16 -6654, i16 117, i16 780, i16 220, i16 -6589, i16 85, i16 776, i16 772, i16 252, i16 -6589, i16 117, i16 776, i16 772, i16 220, i16 -6589, i16 85, i16 776, i16 769, i16 252, i16 -6589, i16 117, i16 776, i16 769, i16 220, i16 -6589, i16 85, i16 776, i16 780, i16 252, i16 -6589, i16 117, i16 776, i16 780, i16 220, i16 -6589, i16 85, i16 776, i16 768, i16 252, i16 -6589, i16 117, i16 776, i16 768, i16 196, i16 -6589, i16 65, i16 776, i16 772, i16 228, i16 -6589, i16 97, i16 776, i16 772, i16 550, i16 -6589, i16 65, i16 775, i16 772, i16 551, i16 -6589, i16 97, i16 775, i16 772, i16 -6654, i16 198, i16 772, i16 -6654, i16 230, i16 772, i16 -6654, i16 71, i16 780, i16 -6654, i16 103, i16 780, i16 -6654, i16 75, i16 780, i16 -6654, i16 107, i16 780, i16 490, i16 -6589, i16 79, i16 808, i16 772, i16 491, i16 -6589, i16 111, i16 808, i16 772, i16 -6654, i16 439, i16 780, i16 -6654, i16 658, i16 780, i16 -6654, i16 106, i16 780, i16 -6654, i16 71, i16 769, i16 -6654, i16 103, i16 769, i16 -6654, i16 78, i16 768, i16 -6654, i16 110, i16 768, i16 197, i16 -6589, i16 65, i16 778, i16 769, i16 229, i16 -6589, i16 97, i16 778, i16 769, i16 -6654, i16 198, i16 769, i16 -6654, i16 230, i16 769, i16 -6654, i16 216, i16 769, i16 -6654, i16 248, i16 769, i16 -6654, i16 65, i16 783, i16 -6654, i16 97, i16 783, i16 -6654, i16 65, i16 785, i16 -6654, i16 97, i16 785, i16 -6654, i16 69, i16 783, i16 -6654, i16 101, i16 783, i16 -6654, i16 69, i16 785, i16 -6654, i16 101, i16 785, i16 -6654, i16 73, i16 783, i16 -6654, i16 105, i16 783, i16 -6654, i16 73, i16 785, i16 -6654, i16 105, i16 785, i16 -6654, i16 79, i16 783, i16 -6654, i16 111, i16 783, i16 -6654, i16 79, i16 785, i16 -6654, i16 111, i16 785, i16 -6654, i16 82, i16 783, i16 -6654, i16 114, i16 783, i16 -6654, i16 82, i16 785, i16 -6654, i16 114, i16 785, i16 -6654, i16 85, i16 783, i16 -6654, i16 117, i16 783, i16 -6654, i16 85, i16 785, i16 -6654, i16 117, i16 785, i16 -9214, i16 83, i16 806, i16 -9214, i16 115, i16 806, i16 -9214, i16 84, i16 806, i16 -9214, i16 116, i16 806, i16 -6654, i16 72, i16 780, i16 -6654, i16 104, i16 780, i16 214, i16 -6589, i16 79, i16 776, i16 772, i16 246, i16 -6589, i16 111, i16 776, i16 772, i16 213, i16 -6589, i16 79, i16 771, i16 772, i16 245, i16 -6589, i16 111, i16 771, i16 772, i16 558, i16 -6589, i16 79, i16 775, i16 772, i16 559, i16 -6589, i16 111, i16 775, i16 772, i16 -6654, i16 89, i16 772, i16 -6654, i16 121, i16 772, i16 -6654, i16 168, i16 769, i16 -6654, i16 913, i16 769, i16 -6654, i16 917, i16 769, i16 -6654, i16 919, i16 769, i16 -6654, i16 921, i16 769, i16 -6654, i16 927, i16 769, i16 -6654, i16 933, i16 769, i16 -6654, i16 937, i16 769, i16 970, i16 -6589, i16 953, i16 776, i16 769, i16 -6654, i16 921, i16 776, i16 -6654, i16 933, i16 776, i16 -6654, i16 949, i16 769, i16 -6654, i16 953, i16 769, i16 971, i16 -6589, i16 965, i16 776, i16 769, i16 -6654, i16 959, i16 769, i16 -6654, i16 965, i16 769, i16 -6654, i16 978, i16 769, i16 -6654, i16 978, i16 776, i16 -6654, i16 1045, i16 768, i16 -6654, i16 1045, i16 776, i16 -6654, i16 1043, i16 769, i16 -6654, i16 1030, i16 776, i16 -6654, i16 1050, i16 769, i16 -6654, i16 1048, i16 768, i16 -6654, i16 1059, i16 774, i16 -6654, i16 1048, i16 774, i16 -6654, i16 1080, i16 774, i16 -6654, i16 1077, i16 768, i16 -6654, i16 1077, i16 776, i16 -6654, i16 1075, i16 769, i16 -6654, i16 1110, i16 776, i16 -6654, i16 1082, i16 769, i16 -6654, i16 1080, i16 768, i16 -6654, i16 1091, i16 774, i16 -6654, i16 1140, i16 783, i16 -6654, i16 1141, i16 783, i16 -6654, i16 1046, i16 774, i16 -6654, i16 1078, i16 774, i16 -6654, i16 1040, i16 774, i16 -6654, i16 1072, i16 774, i16 -6654, i16 1040, i16 776, i16 -6654, i16 1072, i16 776, i16 -6654, i16 1045, i16 774, i16 -6654, i16 1077, i16 774, i16 -6654, i16 1240, i16 776, i16 -6654, i16 1241, i16 776, i16 -6654, i16 1046, i16 776, i16 -6654, i16 1078, i16 776, i16 -6654, i16 1047, i16 776, i16 -6654, i16 1079, i16 776, i16 -6654, i16 1048, i16 772, i16 -6654, i16 1080, i16 772, i16 -6654, i16 1048, i16 776, i16 -6654, i16 1080, i16 776, i16 -6654, i16 1054, i16 776, i16 -6654, i16 1086, i16 776, i16 -6654, i16 1256, i16 776, i16 -6654, i16 1257, i16 776, i16 -6654, i16 1069, i16 776, i16 -6654, i16 1101, i16 776, i16 -6654, i16 1059, i16 772, i16 -6654, i16 1091, i16 772, i16 -6654, i16 1059, i16 776, i16 -6654, i16 1091, i16 776, i16 -6654, i16 1059, i16 779, i16 -6654, i16 1091, i16 779, i16 -6654, i16 1063, i16 776, i16 -6654, i16 1095, i16 776, i16 -6654, i16 1067, i16 776, i16 -6654, i16 1099, i16 776, i16 -6654, i16 1575, i16 1619, i16 -6654, i16 1575, i16 1620, i16 -6654, i16 1608, i16 1620, i16 -9214, i16 1575, i16 1621, i16 -6654, i16 1610, i16 1620, i16 -6654, i16 1749, i16 1620, i16 -6654, i16 1729, i16 1620, i16 -6654, i16 1746, i16 1620, i16 1794, i16 2344, i16 2364, i16 1794, i16 2352, i16 2364, i16 1794, i16 2355, i16 2364, i16 2, i16 2503, i16 2494, i16 2, i16 2503, i16 2519, i16 2, i16 2887, i16 2902, i16 2, i16 2887, i16 2878, i16 2, i16 2887, i16 2903, i16 2, i16 2962, i16 3031, i16 2, i16 3014, i16 3006, i16 2, i16 3015, i16 3006, i16 2, i16 3014, i16 3031, i16 23298, i16 3142, i16 3158, i16 2, i16 3263, i16 3285, i16 2, i16 3270, i16 3285, i16 2, i16 3270, i16 3286, i16 3274, i16 67, i16 3270, i16 3266, i16 3285, i16 2, i16 3398, i16 3390, i16 2, i16 3399, i16 3390, i16 2, i16 3398, i16 3415, i16 2306, i16 3545, i16 3530, i16 3548, i16 2371, i16 3545, i16 3535, i16 3530, i16 2, i16 3545, i16 3551, i16 2, i16 4133, i16 4142, i16 2, i16 6917, i16 6965, i16 2, i16 6919, i16 6965, i16 2, i16 6921, i16 6965, i16 2, i16 6923, i16 6965, i16 2, i16 6925, i16 6965, i16 2, i16 6929, i16 6965, i16 2, i16 6970, i16 6965, i16 2, i16 6972, i16 6965, i16 2, i16 6974, i16 6965, i16 2, i16 6975, i16 6965, i16 2, i16 6978, i16 6965, i16 -9214, i16 65, i16 805, i16 -9214, i16 97, i16 805, i16 -6654, i16 66, i16 775, i16 -6654, i16 98, i16 775, i16 -9214, i16 66, i16 803, i16 -9214, i16 98, i16 803, i16 -9214, i16 66, i16 817, i16 -9214, i16 98, i16 817, i16 199, i16 -6589, i16 67, i16 807, i16 769, i16 231, i16 -6589, i16 99, i16 807, i16 769, i16 -6654, i16 68, i16 775, i16 -6654, i16 100, i16 775, i16 -9214, i16 68, i16 803, i16 -9214, i16 100, i16 803, i16 -9214, i16 68, i16 817, i16 -9214, i16 100, i16 817, i16 -13822, i16 68, i16 807, i16 -13822, i16 100, i16 807, i16 -9214, i16 68, i16 813, i16 -9214, i16 100, i16 813, i16 274, i16 -6589, i16 69, i16 772, i16 768, i16 275, i16 -6589, i16 101, i16 772, i16 768, i16 274, i16 -6589, i16 69, i16 772, i16 769, i16 275, i16 -6589, i16 101, i16 772, i16 769, i16 -9214, i16 69, i16 813, i16 -9214, i16 101, i16 813, i16 -9214, i16 69, i16 816, i16 -9214, i16 101, i16 816, i16 552, i16 -6589, i16 69, i16 807, i16 774, i16 553, i16 -6589, i16 101, i16 807, i16 774, i16 -6654, i16 70, i16 775, i16 -6654, i16 102, i16 775, i16 -6654, i16 71, i16 772, i16 -6654, i16 103, i16 772, i16 -6654, i16 72, i16 775, i16 -6654, i16 104, i16 775, i16 -9214, i16 72, i16 803, i16 -9214, i16 104, i16 803, i16 -6654, i16 72, i16 776, i16 -6654, i16 104, i16 776, i16 -13822, i16 72, i16 807, i16 -13822, i16 104, i16 807, i16 -9214, i16 72, i16 814, i16 -9214, i16 104, i16 814, i16 -9214, i16 73, i16 816, i16 -9214, i16 105, i16 816, i16 207, i16 -6589, i16 73, i16 776, i16 769, i16 239, i16 -6589, i16 105, i16 776, i16 769, i16 -6654, i16 75, i16 769, i16 -6654, i16 107, i16 769, i16 -9214, i16 75, i16 803, i16 -9214, i16 107, i16 803, i16 -9214, i16 75, i16 817, i16 -9214, i16 107, i16 817, i16 7734, i16 -6589, i16 76, i16 803, i16 772, i16 7735, i16 -6589, i16 108, i16 803, i16 772, i16 -9214, i16 76, i16 817, i16 -9214, i16 108, i16 817, i16 -9214, i16 76, i16 813, i16 -9214, i16 108, i16 813, i16 -6654, i16 77, i16 769, i16 -6654, i16 109, i16 769, i16 -6654, i16 77, i16 775, i16 -6654, i16 109, i16 775, i16 -9214, i16 77, i16 803, i16 -9214, i16 109, i16 803, i16 -6654, i16 78, i16 775, i16 -6654, i16 110, i16 775, i16 -9214, i16 78, i16 803, i16 -9214, i16 110, i16 803, i16 -9214, i16 78, i16 817, i16 -9214, i16 110, i16 817, i16 -9214, i16 78, i16 813, i16 -9214, i16 110, i16 813, i16 213, i16 -6589, i16 79, i16 771, i16 769, i16 245, i16 -6589, i16 111, i16 771, i16 769, i16 213, i16 -6589, i16 79, i16 771, i16 776, i16 245, i16 -6589, i16 111, i16 771, i16 776, i16 332, i16 -6589, i16 79, i16 772, i16 768, i16 333, i16 -6589, i16 111, i16 772, i16 768, i16 332, i16 -6589, i16 79, i16 772, i16 769, i16 333, i16 -6589, i16 111, i16 772, i16 769, i16 -6654, i16 80, i16 769, i16 -6654, i16 112, i16 769, i16 -6654, i16 80, i16 775, i16 -6654, i16 112, i16 775, i16 -6654, i16 82, i16 775, i16 -6654, i16 114, i16 775, i16 7770, i16 -6589, i16 82, i16 803, i16 772, i16 7771, i16 -6589, i16 114, i16 803, i16 772, i16 -9214, i16 82, i16 817, i16 -9214, i16 114, i16 817, i16 -6654, i16 83, i16 775, i16 -6654, i16 115, i16 775, i16 346, i16 -6589, i16 83, i16 769, i16 775, i16 347, i16 -6589, i16 115, i16 769, i16 775, i16 352, i16 -6589, i16 83, i16 780, i16 775, i16 353, i16 -6589, i16 115, i16 780, i16 775, i16 7778, i16 -6589, i16 83, i16 803, i16 775, i16 7779, i16 -6589, i16 115, i16 803, i16 775, i16 -6654, i16 84, i16 775, i16 -6654, i16 116, i16 775, i16 -9214, i16 84, i16 803, i16 -9214, i16 116, i16 803, i16 -9214, i16 84, i16 817, i16 -9214, i16 116, i16 817, i16 -9214, i16 84, i16 813, i16 -9214, i16 116, i16 813, i16 -9214, i16 85, i16 804, i16 -9214, i16 117, i16 804, i16 -9214, i16 85, i16 816, i16 -9214, i16 117, i16 816, i16 -9214, i16 85, i16 813, i16 -9214, i16 117, i16 813, i16 360, i16 -6589, i16 85, i16 771, i16 769, i16 361, i16 -6589, i16 117, i16 771, i16 769, i16 362, i16 -6589, i16 85, i16 772, i16 776, i16 363, i16 -6589, i16 117, i16 772, i16 776, i16 -6654, i16 86, i16 771, i16 -6654, i16 118, i16 771, i16 -9214, i16 86, i16 803, i16 -9214, i16 118, i16 803, i16 -6654, i16 87, i16 768, i16 -6654, i16 119, i16 768, i16 -6654, i16 87, i16 769, i16 -6654, i16 119, i16 769, i16 -6654, i16 87, i16 776, i16 -6654, i16 119, i16 776, i16 -6654, i16 87, i16 775, i16 -6654, i16 119, i16 775, i16 -9214, i16 87, i16 803, i16 -9214, i16 119, i16 803, i16 -6654, i16 88, i16 775, i16 -6654, i16 120, i16 775, i16 -6654, i16 88, i16 776, i16 -6654, i16 120, i16 776, i16 -6654, i16 89, i16 775, i16 -6654, i16 121, i16 775, i16 -6654, i16 90, i16 770, i16 -6654, i16 122, i16 770, i16 -9214, i16 90, i16 803, i16 -9214, i16 122, i16 803, i16 -9214, i16 90, i16 817, i16 -9214, i16 122, i16 817, i16 -9214, i16 104, i16 817, i16 -6654, i16 116, i16 776, i16 -6654, i16 119, i16 778, i16 -6654, i16 121, i16 778, i16 -6654, i16 383, i16 775, i16 -6654, i16 65, i16 777, i16 -6654, i16 97, i16 777, i16 194, i16 -6589, i16 65, i16 770, i16 769, i16 226, i16 -6589, i16 97, i16 770, i16 769, i16 194, i16 -6589, i16 65, i16 770, i16 768, i16 226, i16 -6589, i16 97, i16 770, i16 768, i16 194, i16 -6589, i16 65, i16 770, i16 777, i16 226, i16 -6589, i16 97, i16 770, i16 777, i16 194, i16 -6589, i16 65, i16 770, i16 771, i16 226, i16 -6589, i16 97, i16 770, i16 771, i16 7840, i16 -6589, i16 65, i16 803, i16 770, i16 7841, i16 -6589, i16 97, i16 803, i16 770, i16 258, i16 -6589, i16 65, i16 774, i16 769, i16 259, i16 -6589, i16 97, i16 774, i16 769, i16 258, i16 -6589, i16 65, i16 774, i16 768, i16 259, i16 -6589, i16 97, i16 774, i16 768, i16 258, i16 -6589, i16 65, i16 774, i16 777, i16 259, i16 -6589, i16 97, i16 774, i16 777, i16 258, i16 -6589, i16 65, i16 774, i16 771, i16 259, i16 -6589, i16 97, i16 774, i16 771, i16 7840, i16 -6589, i16 65, i16 803, i16 774, i16 7841, i16 -6589, i16 97, i16 803, i16 774, i16 -6654, i16 69, i16 777, i16 -6654, i16 101, i16 777, i16 -6654, i16 69, i16 771, i16 -6654, i16 101, i16 771, i16 202, i16 -6589, i16 69, i16 770, i16 769, i16 234, i16 -6589, i16 101, i16 770, i16 769, i16 202, i16 -6589, i16 69, i16 770, i16 768, i16 234, i16 -6589, i16 101, i16 770, i16 768, i16 202, i16 -6589, i16 69, i16 770, i16 777, i16 234, i16 -6589, i16 101, i16 770, i16 777, i16 202, i16 -6589, i16 69, i16 770, i16 771, i16 234, i16 -6589, i16 101, i16 770, i16 771, i16 7864, i16 -6589, i16 69, i16 803, i16 770, i16 7865, i16 -6589, i16 101, i16 803, i16 770, i16 -6654, i16 73, i16 777, i16 -6654, i16 105, i16 777, i16 -9214, i16 73, i16 803, i16 -9214, i16 105, i16 803, i16 -6654, i16 79, i16 777, i16 -6654, i16 111, i16 777, i16 212, i16 -6589, i16 79, i16 770, i16 769, i16 244, i16 -6589, i16 111, i16 770, i16 769, i16 212, i16 -6589, i16 79, i16 770, i16 768, i16 244, i16 -6589, i16 111, i16 770, i16 768, i16 212, i16 -6589, i16 79, i16 770, i16 777, i16 244, i16 -6589, i16 111, i16 770, i16 777, i16 212, i16 -6589, i16 79, i16 770, i16 771, i16 244, i16 -6589, i16 111, i16 770, i16 771, i16 7884, i16 -6589, i16 79, i16 803, i16 770, i16 7885, i16 -6589, i16 111, i16 803, i16 770, i16 416, i16 -6589, i16 79, i16 795, i16 769, i16 417, i16 -6589, i16 111, i16 795, i16 769, i16 416, i16 -6589, i16 79, i16 795, i16 768, i16 417, i16 -6589, i16 111, i16 795, i16 768, i16 416, i16 -6589, i16 79, i16 795, i16 777, i16 417, i16 -6589, i16 111, i16 795, i16 777, i16 416, i16 -6589, i16 79, i16 795, i16 771, i16 417, i16 -6589, i16 111, i16 795, i16 771, i16 416, i16 -9149, i16 79, i16 795, i16 803, i16 417, i16 -9149, i16 111, i16 795, i16 803, i16 -9214, i16 85, i16 803, i16 -9214, i16 117, i16 803, i16 -6654, i16 85, i16 777, i16 -6654, i16 117, i16 777, i16 431, i16 -6589, i16 85, i16 795, i16 769, i16 432, i16 -6589, i16 117, i16 795, i16 769, i16 431, i16 -6589, i16 85, i16 795, i16 768, i16 432, i16 -6589, i16 117, i16 795, i16 768, i16 431, i16 -6589, i16 85, i16 795, i16 777, i16 432, i16 -6589, i16 117, i16 795, i16 777, i16 431, i16 -6589, i16 85, i16 795, i16 771, i16 432, i16 -6589, i16 117, i16 795, i16 771, i16 431, i16 -9149, i16 85, i16 795, i16 803, i16 432, i16 -9149, i16 117, i16 795, i16 803, i16 -6654, i16 89, i16 768, i16 -6654, i16 121, i16 768, i16 -9214, i16 89, i16 803, i16 -9214, i16 121, i16 803, i16 -6654, i16 89, i16 777, i16 -6654, i16 121, i16 777, i16 -6654, i16 89, i16 771, i16 -6654, i16 121, i16 771, i16 7952, i16 -6589, i16 949, i16 787, i16 768, i16 7953, i16 -6589, i16 949, i16 788, i16 768, i16 7952, i16 -6589, i16 949, i16 787, i16 769, i16 7953, i16 -6589, i16 949, i16 788, i16 769, i16 7960, i16 -6589, i16 917, i16 787, i16 768, i16 7961, i16 -6589, i16 917, i16 788, i16 768, i16 7960, i16 -6589, i16 917, i16 787, i16 769, i16 7961, i16 -6589, i16 917, i16 788, i16 769, i16 7984, i16 -6589, i16 953, i16 787, i16 768, i16 7985, i16 -6589, i16 953, i16 788, i16 768, i16 7984, i16 -6589, i16 953, i16 787, i16 769, i16 7985, i16 -6589, i16 953, i16 788, i16 769, i16 7984, i16 -6589, i16 953, i16 787, i16 834, i16 7985, i16 -6589, i16 953, i16 788, i16 834, i16 7992, i16 -6589, i16 921, i16 787, i16 768, i16 7993, i16 -6589, i16 921, i16 788, i16 768, i16 7992, i16 -6589, i16 921, i16 787, i16 769, i16 7993, i16 -6589, i16 921, i16 788, i16 769, i16 7992, i16 -6589, i16 921, i16 787, i16 834, i16 7993, i16 -6589, i16 921, i16 788, i16 834, i16 8000, i16 -6589, i16 959, i16 787, i16 768, i16 8001, i16 -6589, i16 959, i16 788, i16 768, i16 8000, i16 -6589, i16 959, i16 787, i16 769, i16 8001, i16 -6589, i16 959, i16 788, i16 769, i16 8008, i16 -6589, i16 927, i16 787, i16 768, i16 8009, i16 -6589, i16 927, i16 788, i16 768, i16 8008, i16 -6589, i16 927, i16 787, i16 769, i16 8009, i16 -6589, i16 927, i16 788, i16 769, i16 8016, i16 -6589, i16 965, i16 787, i16 768, i16 8017, i16 -6589, i16 965, i16 788, i16 768, i16 8016, i16 -6589, i16 965, i16 787, i16 769, i16 8017, i16 -6589, i16 965, i16 788, i16 769, i16 8016, i16 -6589, i16 965, i16 787, i16 834, i16 8017, i16 -6589, i16 965, i16 788, i16 834, i16 8025, i16 -6589, i16 933, i16 788, i16 768, i16 8025, i16 -6589, i16 933, i16 788, i16 769, i16 8025, i16 -6589, i16 933, i16 788, i16 834, i16 -6654, i16 949, i16 768, i16 -6654, i16 953, i16 768, i16 -6654, i16 959, i16 768, i16 -6654, i16 965, i16 768, i16 7936, i16 -4029, i16 945, i16 787, i16 837, i16 7937, i16 -4029, i16 945, i16 788, i16 837, i16 7938, i16 837, i16 2, i16 -4028, i16 945, i16 787, i16 768, i16 837, i16 7939, i16 837, i16 2, i16 -4028, i16 945, i16 788, i16 768, i16 837, i16 7940, i16 837, i16 2, i16 -4028, i16 945, i16 787, i16 769, i16 837, i16 7941, i16 837, i16 2, i16 -4028, i16 945, i16 788, i16 769, i16 837, i16 7942, i16 837, i16 2, i16 -4028, i16 945, i16 787, i16 834, i16 837, i16 7943, i16 837, i16 2, i16 -4028, i16 945, i16 788, i16 834, i16 837, i16 7944, i16 -4029, i16 913, i16 787, i16 837, i16 7945, i16 -4029, i16 913, i16 788, i16 837, i16 7946, i16 837, i16 2, i16 -4028, i16 913, i16 787, i16 768, i16 837, i16 7947, i16 837, i16 2, i16 -4028, i16 913, i16 788, i16 768, i16 837, i16 7948, i16 837, i16 2, i16 -4028, i16 913, i16 787, i16 769, i16 837, i16 7949, i16 837, i16 2, i16 -4028, i16 913, i16 788, i16 769, i16 837, i16 7950, i16 837, i16 2, i16 -4028, i16 913, i16 787, i16 834, i16 837, i16 7951, i16 837, i16 2, i16 -4028, i16 913, i16 788, i16 834, i16 837, i16 7968, i16 -4029, i16 951, i16 787, i16 837, i16 7969, i16 -4029, i16 951, i16 788, i16 837, i16 7970, i16 837, i16 2, i16 -4028, i16 951, i16 787, i16 768, i16 837, i16 7971, i16 837, i16 2, i16 -4028, i16 951, i16 788, i16 768, i16 837, i16 7972, i16 837, i16 2, i16 -4028, i16 951, i16 787, i16 769, i16 837, i16 7973, i16 837, i16 2, i16 -4028, i16 951, i16 788, i16 769, i16 837, i16 7974, i16 837, i16 2, i16 -4028, i16 951, i16 787, i16 834, i16 837, i16 7975, i16 837, i16 2, i16 -4028, i16 951, i16 788, i16 834, i16 837, i16 7976, i16 -4029, i16 919, i16 787, i16 837, i16 7977, i16 -4029, i16 919, i16 788, i16 837, i16 7978, i16 837, i16 2, i16 -4028, i16 919, i16 787, i16 768, i16 837, i16 7979, i16 837, i16 2, i16 -4028, i16 919, i16 788, i16 768, i16 837, i16 7980, i16 837, i16 2, i16 -4028, i16 919, i16 787, i16 769, i16 837, i16 7981, i16 837, i16 2, i16 -4028, i16 919, i16 788, i16 769, i16 837, i16 7982, i16 837, i16 2, i16 -4028, i16 919, i16 787, i16 834, i16 837, i16 7983, i16 837, i16 2, i16 -4028, i16 919, i16 788, i16 834, i16 837, i16 8032, i16 -4029, i16 969, i16 787, i16 837, i16 8033, i16 -4029, i16 969, i16 788, i16 837, i16 8034, i16 837, i16 2, i16 -4028, i16 969, i16 787, i16 768, i16 837, i16 8035, i16 837, i16 2, i16 -4028, i16 969, i16 788, i16 768, i16 837, i16 8036, i16 837, i16 2, i16 -4028, i16 969, i16 787, i16 769, i16 837, i16 8037, i16 837, i16 2, i16 -4028, i16 969, i16 788, i16 769, i16 837, i16 8038, i16 837, i16 2, i16 -4028, i16 969, i16 787, i16 834, i16 837, i16 8039, i16 837, i16 2, i16 -4028, i16 969, i16 788, i16 834, i16 837, i16 8040, i16 -4029, i16 937, i16 787, i16 837, i16 8041, i16 -4029, i16 937, i16 788, i16 837, i16 8042, i16 837, i16 2, i16 -4028, i16 937, i16 787, i16 768, i16 837, i16 8043, i16 837, i16 2, i16 -4028, i16 937, i16 788, i16 768, i16 837, i16 8044, i16 837, i16 2, i16 -4028, i16 937, i16 787, i16 769, i16 837, i16 8045, i16 837, i16 2, i16 -4028, i16 937, i16 788, i16 769, i16 837, i16 8046, i16 837, i16 2, i16 -4028, i16 937, i16 787, i16 834, i16 837, i16 8047, i16 837, i16 2, i16 -4028, i16 937, i16 788, i16 834, i16 837, i16 -6654, i16 945, i16 774, i16 -6654, i16 945, i16 772, i16 8048, i16 -4029, i16 945, i16 768, i16 837, i16 -4094, i16 945, i16 837, i16 940, i16 -4029, i16 945, i16 769, i16 837, i16 8118, i16 -4029, i16 945, i16 834, i16 837, i16 -6654, i16 913, i16 774, i16 -6654, i16 913, i16 772, i16 -6654, i16 913, i16 768, i16 -4094, i16 913, i16 837, i16 -6654, i16 168, i16 834, i16 8052, i16 -4029, i16 951, i16 768, i16 837, i16 -4094, i16 951, i16 837, i16 942, i16 -4029, i16 951, i16 769, i16 837, i16 8134, i16 -4029, i16 951, i16 834, i16 837, i16 -6654, i16 917, i16 768, i16 -6654, i16 919, i16 768, i16 -4094, i16 919, i16 837, i16 -6654, i16 8127, i16 768, i16 -6654, i16 8127, i16 769, i16 -6654, i16 8127, i16 834, i16 -6654, i16 953, i16 774, i16 -6654, i16 953, i16 772, i16 970, i16 -6589, i16 953, i16 776, i16 768, i16 -6654, i16 953, i16 834, i16 970, i16 -6589, i16 953, i16 776, i16 834, i16 -6654, i16 921, i16 774, i16 -6654, i16 921, i16 772, i16 -6654, i16 921, i16 768, i16 -6654, i16 8190, i16 768, i16 -6654, i16 8190, i16 769, i16 -6654, i16 8190, i16 834, i16 -6654, i16 965, i16 774, i16 -6654, i16 965, i16 772, i16 971, i16 -6589, i16 965, i16 776, i16 768, i16 -6654, i16 961, i16 787, i16 -6654, i16 961, i16 788, i16 -6654, i16 965, i16 834, i16 971, i16 -6589, i16 965, i16 776, i16 834, i16 -6654, i16 933, i16 774, i16 -6654, i16 933, i16 772, i16 -6654, i16 933, i16 768, i16 -6654, i16 929, i16 788, i16 -6654, i16 168, i16 768, i16 8060, i16 -4029, i16 969, i16 768, i16 837, i16 -4094, i16 969, i16 837, i16 974, i16 -4029, i16 969, i16 769, i16 837, i16 8182, i16 -4029, i16 969, i16 834, i16 837, i16 -6654, i16 927, i16 768, i16 -6654, i16 937, i16 768, i16 -4094, i16 937, i16 837, i16 258, i16 8592, i16 824, i16 258, i16 8594, i16 824, i16 258, i16 8596, i16 824, i16 258, i16 8656, i16 824, i16 258, i16 8660, i16 824, i16 258, i16 8658, i16 824, i16 258, i16 8707, i16 824, i16 258, i16 8712, i16 824, i16 258, i16 8715, i16 824, i16 258, i16 8739, i16 824, i16 258, i16 8741, i16 824, i16 258, i16 8764, i16 824, i16 258, i16 8771, i16 824, i16 258, i16 8773, i16 824, i16 258, i16 8776, i16 824, i16 258, i16 61, i16 824, i16 258, i16 8801, i16 824, i16 258, i16 8781, i16 824, i16 258, i16 60, i16 824, i16 258, i16 62, i16 824, i16 258, i16 8804, i16 824, i16 258, i16 8805, i16 824, i16 258, i16 8818, i16 824, i16 258, i16 8819, i16 824, i16 258, i16 8822, i16 824, i16 258, i16 8823, i16 824, i16 258, i16 8826, i16 824, i16 258, i16 8827, i16 824, i16 258, i16 8834, i16 824, i16 258, i16 8835, i16 824, i16 258, i16 8838, i16 824, i16 258, i16 8839, i16 824, i16 258, i16 8866, i16 824, i16 258, i16 8872, i16 824, i16 258, i16 8873, i16 824, i16 258, i16 8875, i16 824, i16 258, i16 8828, i16 824, i16 258, i16 8829, i16 824, i16 258, i16 8849, i16 824, i16 258, i16 8850, i16 824, i16 258, i16 8882, i16 824, i16 258, i16 8883, i16 824, i16 258, i16 8884, i16 824, i16 258, i16 8885, i16 824, i16 2050, i16 12363, i16 12441, i16 2050, i16 12365, i16 12441, i16 2050, i16 12367, i16 12441, i16 2050, i16 12369, i16 12441, i16 2050, i16 12371, i16 12441, i16 2050, i16 12373, i16 12441, i16 2050, i16 12375, i16 12441, i16 2050, i16 12377, i16 12441, i16 2050, i16 12379, i16 12441, i16 2050, i16 12381, i16 12441, i16 2050, i16 12383, i16 12441, i16 2050, i16 12385, i16 12441, i16 2050, i16 12388, i16 12441, i16 2050, i16 12390, i16 12441, i16 2050, i16 12392, i16 12441, i16 2050, i16 12399, i16 12441, i16 2050, i16 12399, i16 12442, i16 2050, i16 12402, i16 12441, i16 2050, i16 12402, i16 12442, i16 2050, i16 12405, i16 12441, i16 2050, i16 12405, i16 12442, i16 2050, i16 12408, i16 12441, i16 2050, i16 12408, i16 12442, i16 2050, i16 12411, i16 12441, i16 2050, i16 12411, i16 12442, i16 2050, i16 12358, i16 12441, i16 2050, i16 12445, i16 12441, i16 2050, i16 12459, i16 12441, i16 2050, i16 12461, i16 12441, i16 2050, i16 12463, i16 12441, i16 2050, i16 12465, i16 12441, i16 2050, i16 12467, i16 12441, i16 2050, i16 12469, i16 12441, i16 2050, i16 12471, i16 12441, i16 2050, i16 12473, i16 12441, i16 2050, i16 12475, i16 12441, i16 2050, i16 12477, i16 12441, i16 2050, i16 12479, i16 12441, i16 2050, i16 12481, i16 12441, i16 2050, i16 12484, i16 12441, i16 2050, i16 12486, i16 12441, i16 2050, i16 12488, i16 12441, i16 2050, i16 12495, i16 12441, i16 2050, i16 12495, i16 12442, i16 2050, i16 12498, i16 12441, i16 2050, i16 12498, i16 12442, i16 2050, i16 12501, i16 12441, i16 2050, i16 12501, i16 12442, i16 2050, i16 12504, i16 12441, i16 2050, i16 12504, i16 12442, i16 2050, i16 12507, i16 12441, i16 2050, i16 12507, i16 12442, i16 2050, i16 12454, i16 12441, i16 2050, i16 12527, i16 12441, i16 2050, i16 12528, i16 12441, i16 2050, i16 12529, i16 12441, i16 2050, i16 12530, i16 12441, i16 2050, i16 12541, i16 12441, i16 1796, i16 -10236, i16 -9063, i16 -10236, i16 -9030, i16 1796, i16 -10236, i16 -9061, i16 -10236, i16 -9030, i16 1796, i16 -10236, i16 -9051, i16 -10236, i16 -9030, i16 4, i16 -10236, i16 -8911, i16 -10236, i16 -8921, i16 4, i16 -10236, i16 -8910, i16 -10236, i16 -8921, i16 4, i16 -10236, i16 -8377, i16 -10236, i16 -8386, i16 4, i16 -10236, i16 -8377, i16 -10236, i16 -8361, i16 4, i16 -10235, i16 -9031, i16 -10235, i16 -9030, i16 4, i16 -10235, i16 -9031, i16 -10235, i16 -9040, i16 4, i16 -10235, i16 -9031, i16 -10235, i16 -9027, i16 4, i16 -10235, i16 -8776, i16 -10235, i16 -8785, i16 4, i16 -10235, i16 -8775, i16 -10235, i16 -8785, i16 4, i16 -10234, i16 -8907, i16 -10234, i16 -8912, i16 1, i16 697, i16 1, i16 59, i16 1, i16 183, i16 1794, i16 2325, i16 2364, i16 1794, i16 2326, i16 2364, i16 1794, i16 2327, i16 2364, i16 1794, i16 2332, i16 2364, i16 1794, i16 2337, i16 2364, i16 1794, i16 2338, i16 2364, i16 1794, i16 2347, i16 2364, i16 1794, i16 2351, i16 2364, i16 1794, i16 2465, i16 2492, i16 1794, i16 2466, i16 2492, i16 1794, i16 2479, i16 2492, i16 1794, i16 2610, i16 2620, i16 1794, i16 2616, i16 2620, i16 1794, i16 2582, i16 2620, i16 1794, i16 2583, i16 2620, i16 1794, i16 2588, i16 2620, i16 1794, i16 2603, i16 2620, i16 1794, i16 2849, i16 2876, i16 1794, i16 2850, i16 2876, i16 2, i16 3906, i16 4023, i16 2, i16 3916, i16 4023, i16 2, i16 3921, i16 4023, i16 2, i16 3926, i16 4023, i16 2, i16 3931, i16 4023, i16 2, i16 3904, i16 4021, i16 -32254, i16 4018, i16 3968, i16 -32254, i16 4019, i16 3968, i16 2, i16 3986, i16 4023, i16 2, i16 3996, i16 4023, i16 2, i16 4001, i16 4023, i16 2, i16 4006, i16 4023, i16 2, i16 4011, i16 4023, i16 2, i16 3984, i16 4021, i16 1, i16 953, i16 1, i16 96, i16 1, i16 180, i16 1, i16 937, i16 1, i16 75, i16 1, i16 12296, i16 1, i16 12297, i16 258, i16 10973, i16 824, i16 1, i16 -29624, i16 1, i16 26356, i16 1, i16 -28982, i16 1, i16 -29496, i16 1, i16 28369, i16 1, i16 20018, i16 1, i16 21477, i16 1, i16 -24676, i16 1, i16 22865, i16 1, i16 -28207, i16 1, i16 21895, i16 1, i16 22856, i16 1, i16 25078, i16 1, i16 30313, i16 1, i16 32645, i16 1, i16 -31169, i16 1, i16 -30790, i16 1, i16 -30472, i16 1, i16 -28529, i16 1, i16 27138, i16 1, i16 27931, i16 1, i16 28889, i16 1, i16 29662, i16 1, i16 -31683, i16 1, i16 -28310, i16 1, i16 -26127, i16 1, i16 20098, i16 1, i16 21365, i16 1, i16 27396, i16 1, i16 29211, i16 1, i16 -31187, i16 1, i16 -25058, i16 1, i16 23888, i16 1, i16 28651, i16 1, i16 -31283, i16 1, i16 -30364, i16 1, i16 25289, i16 1, i16 -32296, i16 1, i16 -30689, i16 1, i16 24266, i16 1, i16 26391, i16 1, i16 28010, i16 1, i16 29436, i16 1, i16 -28466, i16 1, i16 20358, i16 1, i16 20919, i16 1, i16 21214, i16 1, i16 25796, i16 1, i16 27347, i16 1, i16 29200, i16 1, i16 30439, i16 1, i16 -32767, i16 1, i16 -31226, i16 1, i16 -31140, i16 1, i16 -29201, i16 1, i16 -26830, i16 1, i16 -25745, i16 1, i16 -25094, i16 1, i16 30860, i16 1, i16 31103, i16 1, i16 32160, i16 1, i16 -31799, i16 1, i16 -27900, i16 1, i16 -24961, i16 1, i16 -29994, i16 1, i16 22751, i16 1, i16 24324, i16 1, i16 31840, i16 1, i16 -32642, i16 1, i16 29282, i16 1, i16 30922, i16 1, i16 -29502, i16 1, i16 -26889, i16 1, i16 22744, i16 1, i16 23650, i16 1, i16 27155, i16 1, i16 28122, i16 1, i16 28431, i16 1, i16 32047, i16 1, i16 32311, i16 1, i16 -27061, i16 1, i16 21202, i16 1, i16 -32629, i16 1, i16 20956, i16 1, i16 20940, i16 1, i16 31260, i16 1, i16 32190, i16 1, i16 -31759, i16 1, i16 -27019, i16 1, i16 -29824, i16 1, i16 25295, i16 1, i16 -29954, i16 1, i16 20025, i16 1, i16 23527, i16 1, i16 24594, i16 1, i16 29575, i16 1, i16 30064, i16 1, i16 21271, i16 1, i16 30971, i16 1, i16 20415, i16 1, i16 24489, i16 1, i16 19981, i16 1, i16 27852, i16 1, i16 25976, i16 1, i16 32034, i16 1, i16 21443, i16 1, i16 22622, i16 1, i16 30465, i16 1, i16 -31671, i16 1, i16 -30038, i16 1, i16 27578, i16 1, i16 -28752, i16 1, i16 27784, i16 1, i16 25342, i16 1, i16 -32027, i16 1, i16 25504, i16 1, i16 30053, i16 1, i16 20142, i16 1, i16 20841, i16 1, i16 20937, i16 1, i16 26753, i16 1, i16 31975, i16 1, i16 -32145, i16 1, i16 -29998, i16 1, i16 -28209, i16 1, i16 21237, i16 1, i16 21570, i16 1, i16 22899, i16 1, i16 24300, i16 1, i16 26053, i16 1, i16 28670, i16 1, i16 31018, i16 1, i16 -27219, i16 1, i16 -26006, i16 1, i16 -24937, i16 1, i16 -24882, i16 1, i16 21147, i16 1, i16 26310, i16 1, i16 27511, i16 1, i16 -28830, i16 1, i16 24180, i16 1, i16 24976, i16 1, i16 25088, i16 1, i16 25754, i16 1, i16 28451, i16 1, i16 29001, i16 1, i16 29833, i16 1, i16 31178, i16 1, i16 32244, i16 1, i16 -32657, i16 1, i16 -28890, i16 1, i16 -31506, i16 1, i16 -28637, i16 1, i16 -27830, i16 1, i16 21015, i16 1, i16 21155, i16 1, i16 21693, i16 1, i16 28872, i16 1, i16 -30526, i16 1, i16 24265, i16 1, i16 24565, i16 1, i16 25467, i16 1, i16 27566, i16 1, i16 31806, i16 1, i16 29557, i16 1, i16 20196, i16 1, i16 22265, i16 1, i16 23994, i16 1, i16 24604, i16 1, i16 29618, i16 1, i16 29801, i16 1, i16 32666, i16 1, i16 -32698, i16 1, i16 -28108, i16 1, i16 -26890, i16 1, i16 -26808, i16 1, i16 -26600, i16 1, i16 20363, i16 1, i16 31150, i16 1, i16 -28236, i16 1, i16 -26952, i16 1, i16 24801, i16 1, i16 20102, i16 1, i16 20698, i16 1, i16 23534, i16 1, i16 23615, i16 1, i16 26009, i16 1, i16 29134, i16 1, i16 30274, i16 1, i16 -31492, i16 1, i16 -28548, i16 1, i16 -24691, i16 1, i16 26248, i16 1, i16 -27090, i16 1, i16 21129, i16 1, i16 26491, i16 1, i16 26611, i16 1, i16 27969, i16 1, i16 28316, i16 1, i16 29705, i16 1, i16 30041, i16 1, i16 30827, i16 1, i16 32016, i16 1, i16 -26530, i16 1, i16 20845, i16 1, i16 25134, i16 1, i16 -27016, i16 1, i16 20523, i16 1, i16 23833, i16 1, i16 28138, i16 1, i16 -28886, i16 1, i16 24459, i16 1, i16 24900, i16 1, i16 26647, i16 1, i16 -27002, i16 1, i16 21033, i16 1, i16 21519, i16 1, i16 23653, i16 1, i16 26131, i16 1, i16 26446, i16 1, i16 26792, i16 1, i16 27877, i16 1, i16 29702, i16 1, i16 30178, i16 1, i16 32633, i16 1, i16 -30513, i16 1, i16 -30495, i16 1, i16 -28212, i16 1, i16 -26910, i16 1, i16 21311, i16 1, i16 28346, i16 1, i16 21533, i16 1, i16 29136, i16 1, i16 29848, i16 1, i16 -31238, i16 1, i16 -26973, i16 1, i16 -25513, i16 1, i16 -24929, i16 1, i16 26519, i16 1, i16 28107, i16 1, i16 -32280, i16 1, i16 31435, i16 1, i16 31520, i16 1, i16 31890, i16 1, i16 29376, i16 1, i16 28825, i16 1, i16 -29864, i16 1, i16 20160, i16 1, i16 -31946, i16 1, i16 21050, i16 1, i16 20999, i16 1, i16 24230, i16 1, i16 25299, i16 1, i16 31958, i16 1, i16 23429, i16 1, i16 27934, i16 1, i16 26292, i16 1, i16 -28869, i16 1, i16 -30644, i16 1, i16 -27059, i16 1, i16 -30325, i16 1, i16 24275, i16 1, i16 20800, i16 1, i16 21952, i16 1, i16 22618, i16 1, i16 26228, i16 1, i16 20958, i16 1, i16 29482, i16 1, i16 30410, i16 1, i16 31036, i16 1, i16 31070, i16 1, i16 31077, i16 1, i16 31119, i16 1, i16 -26794, i16 1, i16 31934, i16 1, i16 32701, i16 1, i16 -31214, i16 1, i16 -29960, i16 1, i16 -28616, i16 1, i16 -28419, i16 1, i16 -26385, i16 1, i16 -26372, i16 1, i16 -26328, i16 1, i16 -25164, i16 1, i16 -28450, i16 1, i16 -26953, i16 1, i16 20398, i16 1, i16 20711, i16 1, i16 20813, i16 1, i16 21193, i16 1, i16 21220, i16 1, i16 21329, i16 1, i16 21917, i16 1, i16 22022, i16 1, i16 22120, i16 1, i16 22592, i16 1, i16 22696, i16 1, i16 23652, i16 1, i16 23662, i16 1, i16 24724, i16 1, i16 24936, i16 1, i16 24974, i16 1, i16 25074, i16 1, i16 25935, i16 1, i16 26082, i16 1, i16 26257, i16 1, i16 26757, i16 1, i16 28023, i16 1, i16 28186, i16 1, i16 28450, i16 1, i16 29038, i16 1, i16 29227, i16 1, i16 29730, i16 1, i16 30865, i16 1, i16 31038, i16 1, i16 31049, i16 1, i16 31048, i16 1, i16 31056, i16 1, i16 31062, i16 1, i16 31069, i16 1, i16 31117, i16 1, i16 31118, i16 1, i16 31296, i16 1, i16 31361, i16 1, i16 31680, i16 1, i16 32265, i16 1, i16 32321, i16 1, i16 32626, i16 1, i16 -32763, i16 1, i16 -32275, i16 1, i16 -32135, i16 1, i16 -31657, i16 1, i16 -30448, i16 1, i16 -30314, i16 1, i16 -29951, i16 1, i16 -29895, i16 1, i16 -29485, i16 1, i16 -29432, i16 1, i16 -28746, i16 1, i16 -26909, i16 1, i16 -26625, i16 1, i16 -26565, i16 1, i16 24693, i16 2, i16 -10160, i16 -8466, i16 1, i16 -32232, i16 1, i16 20006, i16 1, i16 20917, i16 1, i16 20840, i16 1, i16 20352, i16 1, i16 20805, i16 1, i16 20864, i16 1, i16 21191, i16 1, i16 21242, i16 1, i16 21845, i16 1, i16 21913, i16 1, i16 21986, i16 1, i16 22707, i16 1, i16 22852, i16 1, i16 22868, i16 1, i16 23138, i16 1, i16 23336, i16 1, i16 24274, i16 1, i16 24281, i16 1, i16 24425, i16 1, i16 24493, i16 1, i16 24792, i16 1, i16 24910, i16 1, i16 24840, i16 1, i16 24928, i16 1, i16 25140, i16 1, i16 25540, i16 1, i16 25628, i16 1, i16 25682, i16 1, i16 25942, i16 1, i16 26395, i16 1, i16 26454, i16 1, i16 27513, i16 1, i16 28379, i16 1, i16 28363, i16 1, i16 28702, i16 1, i16 30631, i16 1, i16 29237, i16 1, i16 29359, i16 1, i16 29809, i16 1, i16 29958, i16 1, i16 30011, i16 1, i16 30237, i16 1, i16 30239, i16 1, i16 30427, i16 1, i16 30452, i16 1, i16 30538, i16 1, i16 30528, i16 1, i16 30924, i16 1, i16 31409, i16 1, i16 31867, i16 1, i16 32091, i16 1, i16 32574, i16 1, i16 -31918, i16 1, i16 -31761, i16 1, i16 -30855, i16 1, i16 -30399, i16 1, i16 -30330, i16 1, i16 -30017, i16 1, i16 -30005, i16 1, i16 -29971, i16 1, i16 -29814, i16 1, i16 -28872, i16 1, i16 -28558, i16 1, i16 -28263, i16 1, i16 -28042, i16 1, i16 -27012, i16 1, i16 -26661, i16 1, i16 -26613, i16 1, i16 -25838, i16 2, i16 -10166, i16 -9142, i16 2, i16 -10166, i16 -9148, i16 2, i16 -10164, i16 -8235, i16 1, i16 15261, i16 1, i16 16408, i16 1, i16 16441, i16 2, i16 -10156, i16 -8631, i16 2, i16 -10153, i16 -9008, i16 2, i16 -10145, i16 -8493, i16 1, i16 -24765, i16 1, i16 -24690, i16 3586, i16 1497, i16 1460, i16 4354, i16 1522, i16 1463, i16 6146, i16 1513, i16 1473, i16 6402, i16 1513, i16 1474, i16 -1207, i16 6211, i16 1513, i16 1468, i16 1473, i16 -1207, i16 6467, i16 1513, i16 1468, i16 1474, i16 4354, i16 1488, i16 1463, i16 4610, i16 1488, i16 1464, i16 5378, i16 1488, i16 1468, i16 5378, i16 1489, i16 1468, i16 5378, i16 1490, i16 1468, i16 5378, i16 1491, i16 1468, i16 5378, i16 1492, i16 1468, i16 5378, i16 1493, i16 1468, i16 5378, i16 1494, i16 1468, i16 5378, i16 1496, i16 1468, i16 5378, i16 1497, i16 1468, i16 5378, i16 1498, i16 1468, i16 5378, i16 1499, i16 1468, i16 5378, i16 1500, i16 1468, i16 5378, i16 1502, i16 1468, i16 5378, i16 1504, i16 1468, i16 5378, i16 1505, i16 1468, i16 5378, i16 1507, i16 1468, i16 5378, i16 1508, i16 1468, i16 5378, i16 1510, i16 1468, i16 5378, i16 1511, i16 1468, i16 5378, i16 1512, i16 1468, i16 5378, i16 1513, i16 1468, i16 5378, i16 1514, i16 1468, i16 4866, i16 1493, i16 1465, i16 5890, i16 1489, i16 1471, i16 5890, i16 1499, i16 1471, i16 5890, i16 1508, i16 1471, i16 -10236, i16 -10188, i16 -8873, i16 -10188, i16 -8859, i16 -10236, i16 -10188, i16 -8872, i16 -10188, i16 -8859, i16 -10188, i16 -8865, i16 -10188, i16 -8850, i16 4, i16 -10170, i16 -10188, i16 -8872, i16 -10188, i16 -8859, i16 -10188, i16 -8850, i16 -10188, i16 -8865, i16 -10188, i16 -8849, i16 4, i16 -10170, i16 -10188, i16 -8872, i16 -10188, i16 -8859, i16 -10188, i16 -8849, i16 -10188, i16 -8865, i16 -10188, i16 -8848, i16 4, i16 -10170, i16 -10188, i16 -8872, i16 -10188, i16 -8859, i16 -10188, i16 -8848, i16 -10188, i16 -8865, i16 -10188, i16 -8847, i16 4, i16 -10170, i16 -10188, i16 -8872, i16 -10188, i16 -8859, i16 -10188, i16 -8847, i16 -10188, i16 -8865, i16 -10188, i16 -8846, i16 4, i16 -10170, i16 -10188, i16 -8872, i16 -10188, i16 -8859, i16 -10188, i16 -8846, i16 -10236, i16 -10188, i16 -8775, i16 -10188, i16 -8859, i16 -10236, i16 -10188, i16 -8774, i16 -10188, i16 -8859, i16 -10188, i16 -8773, i16 -10188, i16 -8850, i16 4, i16 -10170, i16 -10188, i16 -8775, i16 -10188, i16 -8859, i16 -10188, i16 -8850, i16 -10188, i16 -8772, i16 -10188, i16 -8850, i16 4, i16 -10170, i16 -10188, i16 -8774, i16 -10188, i16 -8859, i16 -10188, i16 -8850, i16 -10188, i16 -8773, i16 -10188, i16 -8849, i16 4, i16 -10170, i16 -10188, i16 -8775, i16 -10188, i16 -8859, i16 -10188, i16 -8849, i16 -10188, i16 -8772, i16 -10188, i16 -8849, i16 4, i16 -10170, i16 -10188, i16 -8774, i16 -10188, i16 -8859, i16 -10188, i16 -8849, i16 1, i16 20029, i16 1, i16 20024, i16 1, i16 20033, i16 2, i16 -10176, i16 -8926, i16 1, i16 20320, i16 1, i16 20411, i16 1, i16 20482, i16 1, i16 20602, i16 1, i16 20633, i16 1, i16 20687, i16 1, i16 13470, i16 2, i16 -10175, i16 -8646, i16 1, i16 20820, i16 1, i16 20836, i16 1, i16 20855, i16 2, i16 -10175, i16 -8932, i16 1, i16 13497, i16 1, i16 20839, i16 1, i16 20877, i16 2, i16 -10175, i16 -8885, i16 1, i16 20887, i16 1, i16 20900, i16 1, i16 20172, i16 1, i16 20908, i16 2, i16 -10140, i16 -8737, i16 1, i16 20981, i16 1, i16 20995, i16 1, i16 13535, i16 1, i16 21051, i16 1, i16 21062, i16 1, i16 21106, i16 1, i16 21111, i16 1, i16 13589, i16 1, i16 21253, i16 1, i16 21254, i16 1, i16 21321, i16 1, i16 21338, i16 1, i16 21363, i16 1, i16 21373, i16 1, i16 21375, i16 2, i16 -10174, i16 -8660, i16 1, i16 28784, i16 1, i16 21450, i16 1, i16 21471, i16 2, i16 -10174, i16 -8349, i16 1, i16 21483, i16 1, i16 21489, i16 1, i16 21510, i16 1, i16 21662, i16 1, i16 21560, i16 1, i16 21576, i16 1, i16 21608, i16 1, i16 21666, i16 1, i16 21750, i16 1, i16 21776, i16 1, i16 21843, i16 1, i16 21859, i16 1, i16 21892, i16 1, i16 21931, i16 1, i16 21939, i16 1, i16 21954, i16 1, i16 22294, i16 1, i16 22295, i16 1, i16 22097, i16 1, i16 22132, i16 1, i16 22766, i16 1, i16 22478, i16 1, i16 22516, i16 1, i16 22541, i16 1, i16 22411, i16 1, i16 22578, i16 1, i16 22577, i16 1, i16 22700, i16 2, i16 -10171, i16 -8988, i16 1, i16 22770, i16 1, i16 22775, i16 1, i16 22790, i16 1, i16 22810, i16 1, i16 22818, i16 1, i16 22882, i16 2, i16 -10171, i16 -8536, i16 2, i16 -10171, i16 -8470, i16 1, i16 23020, i16 1, i16 23067, i16 1, i16 23079, i16 1, i16 23000, i16 1, i16 23142, i16 1, i16 14062, i16 1, i16 14076, i16 1, i16 23304, i16 1, i16 23358, i16 2, i16 -10170, i16 -8760, i16 1, i16 23491, i16 1, i16 23512, i16 1, i16 23539, i16 2, i16 -10170, i16 -8424, i16 1, i16 23551, i16 1, i16 23558, i16 1, i16 24403, i16 1, i16 23586, i16 1, i16 14209, i16 1, i16 23648, i16 1, i16 23744, i16 1, i16 23693, i16 2, i16 -10169, i16 -8732, i16 1, i16 23875, i16 2, i16 -10169, i16 -8730, i16 1, i16 23918, i16 1, i16 23915, i16 1, i16 23932, i16 1, i16 24033, i16 1, i16 24034, i16 1, i16 14383, i16 1, i16 24061, i16 1, i16 24104, i16 1, i16 24125, i16 1, i16 24169, i16 1, i16 14434, i16 2, i16 -10168, i16 -8829, i16 1, i16 14460, i16 1, i16 24240, i16 1, i16 24243, i16 1, i16 24246, i16 2, i16 -10136, i16 -8302, i16 1, i16 24318, i16 2, i16 -10168, i16 -8399, i16 1, i16 -32255, i16 1, i16 24354, i16 1, i16 14535, i16 2, i16 -10164, i16 -8520, i16 2, i16 -10152, i16 -8742, i16 1, i16 24418, i16 1, i16 24427, i16 1, i16 14563, i16 1, i16 24474, i16 1, i16 24525, i16 1, i16 24535, i16 1, i16 24569, i16 1, i16 24705, i16 1, i16 14650, i16 1, i16 14620, i16 2, i16 -10167, i16 -8492, i16 1, i16 24775, i16 1, i16 24904, i16 1, i16 24908, i16 1, i16 24954, i16 1, i16 25010, i16 1, i16 24996, i16 1, i16 25007, i16 1, i16 25054, i16 1, i16 25104, i16 1, i16 25115, i16 1, i16 25181, i16 1, i16 25265, i16 1, i16 25300, i16 1, i16 25424, i16 2, i16 -10166, i16 -8436, i16 1, i16 25405, i16 1, i16 25340, i16 1, i16 25448, i16 1, i16 25475, i16 1, i16 25572, i16 2, i16 -10166, i16 -8207, i16 1, i16 25634, i16 1, i16 25541, i16 1, i16 25513, i16 1, i16 14894, i16 1, i16 25705, i16 1, i16 25726, i16 1, i16 25757, i16 1, i16 25719, i16 1, i16 14956, i16 1, i16 25964, i16 2, i16 -10164, i16 -9206, i16 1, i16 26083, i16 1, i16 26360, i16 1, i16 26185, i16 1, i16 15129, i16 1, i16 15112, i16 1, i16 15076, i16 1, i16 20882, i16 1, i16 20885, i16 1, i16 26368, i16 1, i16 26268, i16 1, i16 -32595, i16 1, i16 17369, i16 1, i16 26401, i16 1, i16 26462, i16 1, i16 26451, i16 2, i16 -10164, i16 -8253, i16 1, i16 15177, i16 1, i16 26618, i16 1, i16 26501, i16 1, i16 26706, i16 2, i16 -10163, i16 -9107, i16 1, i16 26766, i16 1, i16 26655, i16 1, i16 26900, i16 1, i16 26946, i16 1, i16 27043, i16 1, i16 27114, i16 1, i16 27304, i16 2, i16 -10163, i16 -8541, i16 1, i16 27355, i16 1, i16 15384, i16 1, i16 27425, i16 2, i16 -10162, i16 -9049, i16 1, i16 27476, i16 1, i16 15438, i16 1, i16 27506, i16 1, i16 27551, i16 1, i16 27579, i16 2, i16 -10162, i16 -8563, i16 2, i16 -10169, i16 -8949, i16 2, i16 -10162, i16 -8454, i16 1, i16 27726, i16 2, i16 -10161, i16 -9028, i16 1, i16 27839, i16 1, i16 27853, i16 1, i16 27751, i16 1, i16 27926, i16 1, i16 27966, i16 1, i16 28009, i16 1, i16 28024, i16 1, i16 28037, i16 2, i16 -10161, i16 -8930, i16 1, i16 27956, i16 1, i16 28207, i16 1, i16 28270, i16 1, i16 15667, i16 1, i16 28359, i16 2, i16 -10161, i16 -8495, i16 1, i16 28153, i16 1, i16 28526, i16 2, i16 -10161, i16 -8354, i16 2, i16 -10161, i16 -8306, i16 1, i16 28614, i16 1, i16 28729, i16 1, i16 28699, i16 1, i16 15766, i16 1, i16 28746, i16 1, i16 28797, i16 1, i16 28791, i16 1, i16 28845, i16 2, i16 -10175, i16 -8923, i16 1, i16 28997, i16 2, i16 -10160, i16 -8605, i16 1, i16 29084, i16 2, i16 -10160, i16 -8277, i16 1, i16 29224, i16 1, i16 29264, i16 2, i16 -10159, i16 -8696, i16 1, i16 29312, i16 1, i16 29333, i16 2, i16 -10159, i16 -8395, i16 2, i16 -10158, i16 -9196, i16 1, i16 29562, i16 1, i16 29579, i16 1, i16 16044, i16 1, i16 29605, i16 1, i16 16056, i16 1, i16 29767, i16 1, i16 29788, i16 1, i16 29829, i16 1, i16 29898, i16 1, i16 16155, i16 1, i16 29988, i16 2, i16 -10157, i16 -9162, i16 1, i16 30014, i16 2, i16 -10157, i16 -9070, i16 2, i16 -10168, i16 -8801, i16 1, i16 30224, i16 2, i16 -10157, i16 -8287, i16 2, i16 -10157, i16 -8264, i16 2, i16 -10156, i16 -9148, i16 1, i16 16380, i16 1, i16 16392, i16 2, i16 -10156, i16 -8973, i16 2, i16 -10156, i16 -8974, i16 2, i16 -10156, i16 -8935, i16 2, i16 -10156, i16 -8909, i16 1, i16 30494, i16 1, i16 30495, i16 1, i16 30603, i16 1, i16 16454, i16 1, i16 16534, i16 2, i16 -10155, i16 -9187, i16 1, i16 30798, i16 1, i16 16611, i16 2, i16 -10155, i16 -8666, i16 2, i16 -10155, i16 -8550, i16 2, i16 -10155, i16 -8507, i16 1, i16 31211, i16 1, i16 16687, i16 1, i16 31306, i16 1, i16 31311, i16 2, i16 -10154, i16 -8836, i16 2, i16 -10154, i16 -8537, i16 1, i16 31470, i16 1, i16 16898, i16 2, i16 -10154, i16 -8277, i16 1, i16 31686, i16 1, i16 31689, i16 1, i16 16935, i16 2, i16 -10153, i16 -9088, i16 1, i16 31954, i16 1, i16 17056, i16 1, i16 31976, i16 1, i16 31971, i16 1, i16 32000, i16 2, i16 -10153, i16 -8314, i16 1, i16 32099, i16 1, i16 17153, i16 1, i16 32199, i16 1, i16 32258, i16 1, i16 32325, i16 1, i16 17204, i16 2, i16 -10152, i16 -8664, i16 2, i16 -10152, i16 -8633, i16 1, i16 17241, i16 2, i16 -10152, i16 -8487, i16 1, i16 32634, i16 2, i16 -10152, i16 -8386, i16 1, i16 32661, i16 1, i16 32762, i16 2, i16 -10151, i16 -8998, i16 2, i16 -10151, i16 -8925, i16 1, i16 -32672, i16 2, i16 -10151, i16 -8792, i16 1, i16 -32656, i16 2, i16 -10164, i16 -8353, i16 1, i16 17365, i16 1, i16 -32590, i16 1, i16 -32509, i16 1, i16 17419, i16 1, i16 -32450, i16 1, i16 23221, i16 2, i16 -10151, i16 -8281, i16 2, i16 -10151, i16 -8267, i16 2, i16 -10164, i16 -8301, i16 2, i16 -10164, i16 -8292, i16 1, i16 -32252, i16 1, i16 -28770, i16 1, i16 17515, i16 1, i16 -32111, i16 1, i16 -32117, i16 1, i16 -32099, i16 1, i16 21171, i16 1, i16 -32079, i16 1, i16 -32077, i16 1, i16 -32067, i16 1, i16 -32026, i16 2, i16 -10150, i16 -8388, i16 1, i16 -31971, i16 1, i16 -31901, i16 1, i16 -31827, i16 1, i16 -31965, i16 1, i16 -31811, i16 1, i16 -31769, i16 1, i16 -31917, i16 1, i16 -31798, i16 1, i16 -31796, i16 1, i16 -31780, i16 2, i16 -10149, i16 -9162, i16 2, i16 -10149, i16 -8853, i16 2, i16 -10149, i16 -9003, i16 1, i16 17707, i16 1, i16 -31503, i16 1, i16 -31501, i16 1, i16 -31466, i16 2, i16 -10148, i16 -8246, i16 1, i16 -31388, i16 2, i16 -10149, i16 -8404, i16 1, i16 17757, i16 1, i16 17761, i16 2, i16 -10149, i16 -8271, i16 2, i16 -10148, i16 -9006, i16 1, i16 17771, i16 1, i16 -31152, i16 1, i16 -31129, i16 1, i16 -31127, i16 1, i16 -31063, i16 1, i16 -31096, i16 1, i16 -30962, i16 1, i16 -31006, i16 1, i16 -30936, i16 1, i16 -30869, i16 1, i16 -30842, i16 1, i16 17879, i16 1, i16 -30751, i16 1, i16 -30719, i16 1, i16 17913, i16 1, i16 -30624, i16 1, i16 -30621, i16 2, i16 -10147, i16 -8601, i16 1, i16 -30505, i16 1, i16 -30498, i16 1, i16 17973, i16 1, i16 -30470, i16 1, i16 13499, i16 2, i16 -10146, i16 -9042, i16 2, i16 -10146, i16 -8858, i16 1, i16 18110, i16 1, i16 18119, i16 1, i16 -30048, i16 1, i16 -29611, i16 2, i16 -10145, i16 -9048, i16 1, i16 -29525, i16 1, i16 -29503, i16 1, i16 -29413, i16 1, i16 -29321, i16 2, i16 -10145, i16 -8401, i16 2, i16 -10174, i16 -9212, i16 1, i16 -29237, i16 1, i16 -29252, i16 1, i16 -29200, i16 2, i16 -10174, i16 -8994, i16 1, i16 -28972, i16 2, i16 -10143, i16 -8750, i16 2, i16 -10143, i16 -8723, i16 1, i16 -28524, i16 1, i16 -28431, i16 1, i16 -28399, i16 2, i16 -10143, i16 -8402, i16 1, i16 -28389, i16 1, i16 -28104, i16 1, i16 -27945, i16 1, i16 -27944, i16 1, i16 -28036, i16 1, i16 -27655, i16 1, i16 -27627, i16 2, i16 -10142, i16 -8198, i16 1, i16 -27253, i16 1, i16 18837, i16 1, i16 -27209, i16 2, i16 -10141, i16 -8841, i16 1, i16 18918, i16 1, i16 -26941, i16 1, i16 23986, i16 1, i16 -26845, i16 2, i16 -10140, i16 -8891, i16 2, i16 -10140, i16 -8678, i16 1, i16 19054, i16 1, i16 19062, i16 1, i16 -26656, i16 2, i16 -10139, i16 -9206, i16 1, i16 19122, i16 2, i16 -10139, i16 -9066, i16 1, i16 -26583, i16 2, i16 -10139, i16 -8778, i16 1, i16 -26398, i16 1, i16 19251, i16 1, i16 -26327, i16 1, i16 -26201, i16 1, i16 -26174, i16 1, i16 -26114, i16 1, i16 19406, i16 2, i16 -10138, i16 -8400, i16 1, i16 -25536, i16 1, i16 -25347, i16 1, i16 19662, i16 1, i16 19693, i16 1, i16 -25241, i16 2, i16 -10136, i16 -9010, i16 1, i16 19704, i16 2, i16 -10136, i16 -8955, i16 2, i16 -10136, i16 -8690, i16 2, i16 -10136, i16 -8559, i16 1, i16 -24901, i16 1, i16 19798, i16 1, i16 -24839, i16 1, i16 -24834, i16 1, i16 -24827, i16 1, i16 -24817, i16 1, i16 -24810, i16 1, i16 -24773, i16 2, i16 -10135, i16 -8704, i16 940, i16 -6590, i16 945, i16 769, i16 941, i16 -6590, i16 949, i16 769, i16 942, i16 -6590, i16 951, i16 769, i16 943, i16 -6590, i16 953, i16 769, i16 972, i16 -6590, i16 959, i16 769, i16 973, i16 -6590, i16 965, i16 769, i16 974, i16 -6590, i16 969, i16 769, i16 902, i16 -6590, i16 913, i16 769, i16 904, i16 -6590, i16 917, i16 769, i16 905, i16 -6590, i16 919, i16 769, i16 912, i16 1, i16 -6589, i16 953, i16 776, i16 769, i16 906, i16 -6590, i16 921, i16 769, i16 944, i16 1, i16 -6589, i16 965, i16 776, i16 769, i16 910, i16 -6590, i16 933, i16 769, i16 901, i16 -6590, i16 168, i16 769, i16 908, i16 -6590, i16 927, i16 769, i16 911, i16 -6590, i16 937, i16 769, i16 197, i16 -6590, i16 65, i16 778, i16 -6426, i16 -6527, i16 768, i16 -6426, i16 -6527, i16 769, i16 -6426, i16 -6527, i16 787, i16 -6426, i16 -6526, i16 776, i16 769, i16 -32512, i16 -32126, i16 3953, i16 3954, i16 -32512, i16 -31614, i16 3953, i16 3956, i16 -32512, i16 -32126, i16 3953, i16 3968, i16 0], align 16
@_ZL23norm2_nfc_data_smallFCD = internal constant [256 x i8] c"\C0\EF\03\7F\DFp\CF\87\C7\E6fFdFf[\12\00\00\04\00\00\00C \02i\AE\C2\C0\FF\FF\C0r\BF\00\00\00\00\00\00\00@\00\80\88\00\00\FE\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\98\00\C3f\E0\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\00\02\00", align 16
@_ZN6icu_69L12nfcSingletonE = internal unnamed_addr global %"struct.icu_69::Norm2AllModes"* null, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6911Normalizer2E = hidden constant [23 x i8] c"N6icu_6911Normalizer2E\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6911Normalizer2E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6icu_6911Normalizer2E, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8
@_ZTSN6icu_6919Normalizer2WithImplE = hidden constant [31 x i8] c"N6icu_6919Normalizer2WithImplE\00", align 1
@_ZTIN6icu_6919Normalizer2WithImplE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN6icu_6919Normalizer2WithImplE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6911Normalizer2E to i8*) }, align 8
@_ZTVN6icu_6911Normalizer2E = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6911Normalizer2E to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* @_ZNK6icu_6911Normalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6911Normalizer219getRawDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2"*, i32, i32)* @_ZNK6icu_6911Normalizer211composePairEii to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2"*, i32)* @_ZNK6icu_6911Normalizer217getCombiningClassEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2"*, i8*, i32, i32*)* @_ZNK6icu_6911Normalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6icu_6919Normalizer2WithImplE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919Normalizer2WithImplE to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2WithImpl"*)* @_ZN6icu_6919Normalizer2WithImplD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl9normalizeERKNS_13UnicodeStringERS1_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* @_ZNK6icu_6911Normalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl6appendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl16getDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl19getRawDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, i32, i32)* @_ZNK6icu_6919Normalizer2WithImpl11composePairEii to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32)* @_ZNK6icu_6919Normalizer2WithImpl17getCombiningClassEi to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl12isNormalizedERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2"*, i8*, i32, i32*)* @_ZNK6icu_6911Normalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl10quickCheckERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl17spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, i32)* @_ZNK6icu_6919Normalizer2WithImpl13getQuickCheckEi to i8*)] }, align 8
@_ZTVN6icu_6920DecomposeNormalizer2E = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6920DecomposeNormalizer2E to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to i8*), i8* bitcast (void (%"class.icu_69::DecomposeNormalizer2"*)* @_ZN6icu_6920DecomposeNormalizer2D0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl9normalizeERKNS_13UnicodeStringERS1_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::DecomposeNormalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* @_ZNK6icu_6920DecomposeNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl6appendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl16getDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl19getRawDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, i32, i32)* @_ZNK6icu_6919Normalizer2WithImpl11composePairEii to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32)* @_ZNK6icu_6919Normalizer2WithImpl17getCombiningClassEi to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl12isNormalizedERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::DecomposeNormalizer2"*, i8*, i32, i32*)* @_ZNK6icu_6920DecomposeNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl10quickCheckERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl17spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::DecomposeNormalizer2"*, i32)* @_ZNK6icu_6920DecomposeNormalizer217hasBoundaryBeforeEi to i8*), i8* bitcast (i8 (%"class.icu_69::DecomposeNormalizer2"*, i32)* @_ZNK6icu_6920DecomposeNormalizer216hasBoundaryAfterEi to i8*), i8* bitcast (i8 (%"class.icu_69::DecomposeNormalizer2"*, i32)* @_ZNK6icu_6920DecomposeNormalizer27isInertEi to i8*), i8* bitcast (void (%"class.icu_69::DecomposeNormalizer2"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)* @_ZNK6icu_6920DecomposeNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::DecomposeNormalizer2"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)* @_ZNK6icu_6920DecomposeNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode to i8*), i8* bitcast (i16* (%"class.icu_69::DecomposeNormalizer2"*, i16*, i16*, i32*)* @_ZNK6icu_6920DecomposeNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::DecomposeNormalizer2"*, i32)* @_ZNK6icu_6920DecomposeNormalizer213getQuickCheckEi to i8*)] }, align 8
@_ZTSN6icu_6920DecomposeNormalizer2E = hidden constant [32 x i8] c"N6icu_6920DecomposeNormalizer2E\00", align 1
@_ZTIN6icu_6920DecomposeNormalizer2E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN6icu_6920DecomposeNormalizer2E, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919Normalizer2WithImplE to i8*) }, align 8
@_ZTVN6icu_6918ComposeNormalizer2E = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6918ComposeNormalizer2E to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to i8*), i8* bitcast (void (%"class.icu_69::ComposeNormalizer2"*)* @_ZN6icu_6918ComposeNormalizer2D0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl9normalizeERKNS_13UnicodeStringERS1_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::ComposeNormalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* @_ZNK6icu_6918ComposeNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl6appendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl16getDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl19getRawDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, i32, i32)* @_ZNK6icu_6919Normalizer2WithImpl11composePairEii to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32)* @_ZNK6icu_6919Normalizer2WithImpl17getCombiningClassEi to i8*), i8* bitcast (i8 (%"class.icu_69::ComposeNormalizer2"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6918ComposeNormalizer212isNormalizedERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::ComposeNormalizer2"*, i8*, i32, i32*)* @_ZNK6icu_6918ComposeNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::ComposeNormalizer2"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6918ComposeNormalizer210quickCheckERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl17spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::ComposeNormalizer2"*, i32)* @_ZNK6icu_6918ComposeNormalizer217hasBoundaryBeforeEi to i8*), i8* bitcast (i8 (%"class.icu_69::ComposeNormalizer2"*, i32)* @_ZNK6icu_6918ComposeNormalizer216hasBoundaryAfterEi to i8*), i8* bitcast (i8 (%"class.icu_69::ComposeNormalizer2"*, i32)* @_ZNK6icu_6918ComposeNormalizer27isInertEi to i8*), i8* bitcast (void (%"class.icu_69::ComposeNormalizer2"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)* @_ZNK6icu_6918ComposeNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::ComposeNormalizer2"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)* @_ZNK6icu_6918ComposeNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode to i8*), i8* bitcast (i16* (%"class.icu_69::ComposeNormalizer2"*, i16*, i16*, i32*)* @_ZNK6icu_6918ComposeNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::ComposeNormalizer2"*, i32)* @_ZNK6icu_6918ComposeNormalizer213getQuickCheckEi to i8*)] }, align 8
@_ZTSN6icu_6918ComposeNormalizer2E = hidden constant [30 x i8] c"N6icu_6918ComposeNormalizer2E\00", align 1
@_ZTIN6icu_6918ComposeNormalizer2E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSN6icu_6918ComposeNormalizer2E, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919Normalizer2WithImplE to i8*) }, align 8
@_ZTVN6icu_6914FCDNormalizer2E = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6914FCDNormalizer2E to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to i8*), i8* bitcast (void (%"class.icu_69::FCDNormalizer2"*)* @_ZN6icu_6914FCDNormalizer2D0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl9normalizeERKNS_13UnicodeStringERS1_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* @_ZNK6icu_6911Normalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl6appendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl16getDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6919Normalizer2WithImpl19getRawDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, i32, i32)* @_ZNK6icu_6919Normalizer2WithImpl11composePairEii to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, i32)* @_ZNK6icu_6919Normalizer2WithImpl17getCombiningClassEi to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl12isNormalizedERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2"*, i8*, i32, i32*)* @_ZNK6icu_6911Normalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl10quickCheckERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6919Normalizer2WithImpl17spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::FCDNormalizer2"*, i32)* @_ZNK6icu_6914FCDNormalizer217hasBoundaryBeforeEi to i8*), i8* bitcast (i8 (%"class.icu_69::FCDNormalizer2"*, i32)* @_ZNK6icu_6914FCDNormalizer216hasBoundaryAfterEi to i8*), i8* bitcast (i8 (%"class.icu_69::FCDNormalizer2"*, i32)* @_ZNK6icu_6914FCDNormalizer27isInertEi to i8*), i8* bitcast (void (%"class.icu_69::FCDNormalizer2"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)* @_ZNK6icu_6914FCDNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::FCDNormalizer2"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)* @_ZNK6icu_6914FCDNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode to i8*), i8* bitcast (i16* (%"class.icu_69::FCDNormalizer2"*, i16*, i16*, i32*)* @_ZNK6icu_6914FCDNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2WithImpl"*, i32)* @_ZNK6icu_6919Normalizer2WithImpl13getQuickCheckEi to i8*)] }, align 8
@_ZTSN6icu_6914FCDNormalizer2E = hidden constant [26 x i8] c"N6icu_6914FCDNormalizer2E\00", align 1
@_ZTIN6icu_6914FCDNormalizer2E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN6icu_6914FCDNormalizer2E, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919Normalizer2WithImplE to i8*) }, align 8
@_ZTVN6icu_6915NoopNormalizer2E = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6915NoopNormalizer2E to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to i8*), i8* bitcast (void (%"class.icu_69::NoopNormalizer2"*)* @_ZN6icu_6915NoopNormalizer2D0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6915NoopNormalizer29normalizeERKNS_13UnicodeStringERS1_R10UErrorCode to i8*), i8* bitcast (void (%"class.icu_69::NoopNormalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32*)* @_ZNK6icu_6915NoopNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6915NoopNormalizer224normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (%"class.icu_69::UnicodeString"* (%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6915NoopNormalizer26appendERNS_13UnicodeStringERKS1_R10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::NoopNormalizer2"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6915NoopNormalizer216getDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)* @_ZNK6icu_6911Normalizer219getRawDecompositionEiRNS_13UnicodeStringE to i8*), i8* bitcast (i32 (%"class.icu_69::Normalizer2"*, i32, i32)* @_ZNK6icu_6911Normalizer211composePairEii to i8*), i8* bitcast (i8 (%"class.icu_69::Normalizer2"*, i32)* @_ZNK6icu_6911Normalizer217getCombiningClassEi to i8*), i8* bitcast (i8 (%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6915NoopNormalizer212isNormalizedERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::NoopNormalizer2"*, i8*, i32, i32*)* @_ZNK6icu_6915NoopNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6915NoopNormalizer210quickCheckERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i32 (%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZNK6icu_6915NoopNormalizer217spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode to i8*), i8* bitcast (i8 (%"class.icu_69::NoopNormalizer2"*, i32)* @_ZNK6icu_6915NoopNormalizer217hasBoundaryBeforeEi to i8*), i8* bitcast (i8 (%"class.icu_69::NoopNormalizer2"*, i32)* @_ZNK6icu_6915NoopNormalizer216hasBoundaryAfterEi to i8*), i8* bitcast (i8 (%"class.icu_69::NoopNormalizer2"*, i32)* @_ZNK6icu_6915NoopNormalizer27isInertEi to i8*)] }, align 8
@_ZTSN6icu_6915NoopNormalizer2E = hidden constant [27 x i8] c"N6icu_6915NoopNormalizer2E\00", align 1
@_ZTIN6icu_6915NoopNormalizer2E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6icu_6915NoopNormalizer2E, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6911Normalizer2E to i8*) }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZN6icu_69L12noopInitOnceE = internal global { { { i32 } }, i32 } zeroinitializer, align 4
@_ZTVN6icu_6915Normalizer2ImplE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZL24norm2_nfc_data_trieIndex = internal constant [1746 x i16] [i16 0, i16 64, i16 123, i16 187, i16 251, i16 314, i16 378, i16 434, i16 498, i16 550, i16 596, i16 550, i16 660, i16 724, i16 787, i16 851, i16 915, i16 978, i16 1039, i16 1102, i16 550, i16 550, i16 1160, i16 1224, i16 1272, i16 1328, i16 550, i16 1392, i16 1439, i16 1502, i16 550, i16 1523, i16 1585, i16 1631, i16 550, i16 1676, i16 1740, i16 1801, i16 1833, i16 1896, i16 1959, i16 2020, i16 2051, i16 2112, i16 1833, i16 2169, i16 2215, i16 2278, i16 550, i16 2336, i16 2359, i16 2423, i16 2446, i16 2509, i16 550, i16 2563, i16 2595, i16 2654, i16 2666, i16 2725, i16 2765, i16 2826, i16 2890, i16 2948, i16 2975, i16 550, i16 3034, i16 550, i16 3098, i16 3129, i16 3183, i16 3244, i16 550, i16 550, i16 550, i16 550, i16 550, i16 3279, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 3323, i16 550, i16 550, i16 3376, i16 550, i16 550, i16 3406, i16 550, i16 3448, i16 550, i16 550, i16 550, i16 3508, i16 3540, i16 3604, i16 3667, i16 3726, i16 3790, i16 3842, i16 3886, i16 2056, i16 550, i16 550, i16 3938, i16 550, i16 550, i16 550, i16 4002, i16 4066, i16 4130, i16 4194, i16 4258, i16 4322, i16 4386, i16 4450, i16 4514, i16 4578, i16 550, i16 550, i16 4626, i16 4675, i16 550, i16 4723, i16 4774, i16 4835, i16 4898, i16 4962, i16 5016, i16 5062, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 5105, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 3261, i16 550, i16 5134, i16 550, i16 5198, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 5262, i16 5320, i16 5382, i16 5446, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 5509, i16 5571, i16 5603, i16 550, i16 550, i16 550, i16 550, i16 5661, i16 550, i16 550, i16 5701, i16 5751, i16 5797, i16 2060, i16 5816, i16 550, i16 550, i16 5832, i16 5896, i16 550, i16 550, i16 550, i16 5152, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 5980, i16 5960, i16 5968, i16 5976, i16 5984, i16 5964, i16 5972, i16 6036, i16 550, i16 6100, i16 6159, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 6223, i16 6287, i16 6351, i16 6415, i16 6479, i16 6543, i16 6607, i16 6671, i16 6706, i16 6770, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 6802, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 1621, i16 1636, i16 1660, i16 1691, i16 1712, i16 1712, i16 1712, i16 1716, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 3034, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 1359, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 1036, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 6853, i16 550, i16 550, i16 6869, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 3526, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 6885, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 5590, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 6895, i16 1359, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 2027, i16 550, i16 550, i16 2490, i16 550, i16 6911, i16 6924, i16 6936, i16 550, i16 550, i16 550, i16 550, i16 1044, i16 550, i16 6947, i16 6963, i16 550, i16 550, i16 550, i16 2016, i16 550, i16 550, i16 550, i16 550, i16 6979, i16 550, i16 550, i16 550, i16 6990, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 6997, i16 550, i16 550, i16 550, i16 550, i16 7008, i16 7023, i16 2294, i16 7037, i16 1042, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7051, i16 1944, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7067, i16 7082, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 2262, i16 7090, i16 7106, i16 550, i16 550, i16 550, i16 2490, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7116, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 2022, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7113, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7132, i16 2016, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 2125, i16 550, i16 550, i16 550, i16 2029, i16 2026, i16 550, i16 550, i16 550, i16 550, i16 2024, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 2490, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 3028, i16 550, i16 550, i16 550, i16 550, i16 2026, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7148, i16 550, i16 550, i16 550, i16 3835, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7164, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7166, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7181, i16 7197, i16 7211, i16 7224, i16 550, i16 7236, i16 7250, i16 7266, i16 550, i16 550, i16 550, i16 550, i16 3306, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7282, i16 7290, i16 7304, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 3835, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 1276, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7320, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7332, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 7348, i16 7364, i16 7380, i16 7396, i16 7412, i16 7428, i16 7444, i16 7460, i16 7476, i16 7492, i16 7508, i16 7524, i16 7540, i16 7556, i16 7572, i16 7588, i16 7604, i16 7620, i16 7636, i16 7652, i16 7668, i16 7684, i16 7700, i16 7716, i16 7732, i16 7748, i16 7764, i16 7780, i16 7796, i16 7812, i16 7828, i16 7844, i16 7860, i16 7876, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 550, i16 1032, i16 1064, i16 196, i16 196, i16 196, i16 1096, i16 1111, i16 1133, i16 1161, i16 1190, i16 1218, i16 1247, i16 1276, i16 1307, i16 1336, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 1362, i16 196, i16 1382, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 1414, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 1425, i16 1454, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 1486, i16 1506, i16 196, i16 196, i16 1525, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 196, i16 1557, i16 1589], align 16
@_ZL23norm2_nfc_data_trieData = internal constant [7892 x i16] [i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 4, i16 8, i16 12, i16 1, i16 1, i16 16, i16 80, i16 92, i16 112, i16 136, i16 204, i16 208, i16 236, i16 264, i16 324, i16 328, i16 348, i16 372, i16 384, i16 420, i16 484, i16 1, i16 492, i16 524, i16 552, i16 580, i16 656, i16 664, i16 688, i16 696, i16 732, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 756, i16 820, i16 832, i16 852, i16 876, i16 944, i16 948, i16 976, i16 1008, i16 1064, i16 1072, i16 1092, i16 1116, i16 1128, i16 1164, i16 1228, i16 1, i16 1236, i16 1268, i16 1296, i16 1328, i16 1404, i16 1412, i16 1440, i16 1448, i16 1488, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1512, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 4746, i16 4752, i16 2788, i16 4758, i16 2810, i16 2820, i16 1524, i16 2830, i16 4764, i16 4770, i16 2840, i16 4776, i16 4782, i16 4788, i16 4794, i16 2862, i16 1, i16 4800, i16 4806, i16 4812, i16 2872, i16 2894, i16 2912, i16 1, i16 1532, i16 4818, i16 4824, i16 4830, i16 2922, i16 4836, i16 1, i16 1, i16 4842, i16 4848, i16 2944, i16 4854, i16 2966, i16 2976, i16 1536, i16 2986, i16 4860, i16 4866, i16 2996, i16 4872, i16 4878, i16 4884, i16 4890, i16 3018, i16 1, i16 4896, i16 4902, i16 4908, i16 3028, i16 3050, i16 3068, i16 1, i16 1544, i16 4914, i16 4920, i16 4926, i16 3078, i16 4932, i16 1, i16 4938, i16 4944, i16 4950, i16 3100, i16 3122, i16 4957, i16 4963, i16 4968, i16 4974, i16 4980, i16 4986, i16 4992, i16 4998, i16 5004, i16 5010, i16 5016, i16 5022, i16 1, i16 1, i16 3144, i16 3158, i16 5028, i16 5034, i16 5040, i16 5046, i16 5053, i16 5059, i16 5064, i16 5070, i16 5076, i16 5082, i16 5088, i16 5094, i16 5100, i16 5106, i16 5113, i16 5119, i16 5124, i16 5130, i16 1, i16 1, i16 5136, i16 5142, i16 5148, i16 5154, i16 5160, i16 5166, i16 5173, i16 5179, i16 5184, i16 1, i16 1, i16 1, i16 5191, i16 5197, i16 5203, i16 5209, i16 1, i16 5214, i16 5220, i16 5227, i16 5233, i16 5238, i16 5244, i16 1, i16 1, i16 1, i16 5250, i16 5256, i16 5263, i16 5269, i16 5274, i16 5280, i16 1, i16 1, i16 1, i16 3172, i16 3186, i16 5286, i16 5292, i16 5298, i16 5304, i16 1, i16 1, i16 5310, i16 5316, i16 5323, i16 5329, i16 5334, i16 5340, i16 3200, i16 3210, i16 5346, i16 5352, i16 5359, i16 5365, i16 3220, i16 3230, i16 5371, i16 5377, i16 5382, i16 5388, i16 1, i16 1, i16 3240, i16 3250, i16 3260, i16 3270, i16 5394, i16 5400, i16 5406, i16 5412, i16 5418, i16 5424, i16 5431, i16 5437, i16 5442, i16 5448, i16 5454, i16 5460, i16 5466, i16 5472, i16 5478, i16 5484, i16 5490, i16 5496, i16 5502, i16 1548, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3280, i16 3306, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3332, i16 3358, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1552, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 5508, i16 5514, i16 5520, i16 5526, i16 5532, i16 5538, i16 5544, i16 5550, i16 5558, i16 5568, i16 5578, i16 5588, i16 5598, i16 5608, i16 5618, i16 5628, i16 1, i16 5638, i16 5648, i16 5658, i16 5668, i16 5677, i16 5683, i16 1, i16 1, i16 5688, i16 5694, i16 5700, i16 5706, i16 3384, i16 3394, i16 5715, i16 5725, i16 5733, i16 5739, i16 5745, i16 1, i16 1, i16 1, i16 5750, i16 5756, i16 1, i16 1, i16 5762, i16 5768, i16 5776, i16 5786, i16 5795, i16 5801, i16 5807, i16 5813, i16 5818, i16 5824, i16 5830, i16 5836, i16 5842, i16 5848, i16 5854, i16 5860, i16 5866, i16 5872, i16 5878, i16 5884, i16 5890, i16 5896, i16 5902, i16 5908, i16 5914, i16 5920, i16 5926, i16 5932, i16 5938, i16 5944, i16 5950, i16 5956, i16 5962, i16 5968, i16 5974, i16 5980, i16 1, i16 1, i16 5986, i16 5992, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3404, i16 3414, i16 3424, i16 3434, i16 6000, i16 6010, i16 6020, i16 6030, i16 3444, i16 3454, i16 6040, i16 6050, i16 6058, i16 6064, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1556, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -564, i16 -564, i16 -564, i16 -564, i16 -564, i16 -52, i16 -564, i16 -564, i16 -564, i16 -564, i16 -564, i16 -564, i16 -564, i16 -52, i16 -52, i16 -564, i16 -52, i16 -564, i16 -52, i16 -564, i16 -564, i16 -48, i16 -72, i16 -72, i16 -72, i16 -72, i16 -48, i16 -592, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -108, i16 -108, i16 -584, i16 -584, i16 -584, i16 -584, i16 -620, i16 -620, i16 -72, i16 -72, i16 -72, i16 -72, i16 -584, i16 -584, i16 -72, i16 -584, i16 -584, i16 -72, i16 -72, i16 -510, i16 -510, i16 -510, i16 -510, i16 -1022, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 -52, i16 -52, i16 15414, i16 15420, i16 -564, i16 15426, i16 15432, i16 -544, i16 -52, i16 -72, i16 -72, i16 -72, i16 -52, i16 -52, i16 -52, i16 -72, i16 -72, i16 1, i16 -52, i16 -52, i16 -52, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 -48, i16 -72, i16 -72, i16 -52, i16 -46, i16 -44, i16 -44, i16 -46, i16 -44, i16 -44, i16 -46, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 10721, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10725, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6071, i16 6077, i16 10729, i16 6083, i16 6089, i16 6095, i16 1, i16 6101, i16 1, i16 6107, i16 6113, i16 6121, i16 1560, i16 1, i16 1, i16 1, i16 1588, i16 1, i16 1604, i16 1, i16 1624, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1652, i16 1, i16 1668, i16 1, i16 1, i16 1, i16 1672, i16 1, i16 1, i16 1, i16 1696, i16 6129, i16 6135, i16 3464, i16 6141, i16 3474, i16 6147, i16 6155, i16 1716, i16 1, i16 1, i16 1, i16 1748, i16 1, i16 1764, i16 1, i16 1788, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1820, i16 1, i16 1836, i16 1, i16 1, i16 1, i16 1844, i16 1, i16 1, i16 1, i16 1876, i16 3484, i16 3502, i16 6163, i16 6169, i16 3520, i16 1, i16 1, i16 1, i16 1900, i16 6175, i16 6181, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6187, i16 6193, i16 1, i16 6199, i16 1, i16 1, i16 1908, i16 6205, i16 1, i16 1, i16 1, i16 1, i16 6211, i16 6217, i16 6223, i16 1, i16 1912, i16 1, i16 1, i16 1920, i16 1, i16 1924, i16 1936, i16 1944, i16 1948, i16 6229, i16 1964, i16 1, i16 1, i16 1, i16 1968, i16 1, i16 1, i16 1, i16 1, i16 1972, i16 1, i16 1, i16 1, i16 1988, i16 1, i16 1, i16 1, i16 1992, i16 1, i16 1996, i16 1, i16 1, i16 2000, i16 1, i16 1, i16 2008, i16 1, i16 2012, i16 2024, i16 2032, i16 2036, i16 6235, i16 2052, i16 1, i16 1, i16 1, i16 2056, i16 1, i16 1, i16 1, i16 2060, i16 1, i16 1, i16 1, i16 2076, i16 1, i16 1, i16 1, i16 2080, i16 1, i16 2084, i16 1, i16 1, i16 6241, i16 6247, i16 1, i16 6253, i16 1, i16 1, i16 2088, i16 6259, i16 1, i16 1, i16 1, i16 1, i16 6265, i16 6271, i16 6277, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2092, i16 2096, i16 6283, i16 6289, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6295, i16 6301, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6307, i16 6313, i16 6319, i16 6325, i16 1, i16 1, i16 6331, i16 6337, i16 2100, i16 2104, i16 6343, i16 6349, i16 6355, i16 6361, i16 6367, i16 6373, i16 1, i16 1, i16 6379, i16 6385, i16 6391, i16 6397, i16 6403, i16 6409, i16 2108, i16 2112, i16 6415, i16 6421, i16 6427, i16 6433, i16 6439, i16 6445, i16 6451, i16 6457, i16 6463, i16 6469, i16 6475, i16 6481, i16 1, i16 1, i16 6487, i16 6493, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -52, i16 -68, i16 -72, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -68, i16 -56, i16 -52, i16 -492, i16 -490, i16 -488, i16 -486, i16 -484, i16 -482, i16 -480, i16 -478, i16 -476, i16 -474, i16 -474, i16 -472, i16 -470, i16 -468, i16 1, i16 -466, i16 1, i16 -464, i16 -462, i16 1, i16 -52, i16 -72, i16 1, i16 -476, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -452, i16 -450, i16 -448, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6498, i16 6504, i16 6511, i16 6517, i16 6523, i16 2116, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2128, i16 1, i16 2132, i16 -458, i16 -456, i16 -454, i16 -452, i16 -450, i16 -448, i16 -446, i16 -444, i16 -564, i16 -564, i16 -584, i16 -72, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -442, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6529, i16 2136, i16 6535, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2140, i16 6541, i16 1, i16 2144, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -52, i16 1, i16 1, i16 -52, i16 -52, i16 1, i16 -72, i16 -52, i16 -52, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -440, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -72, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -72, i16 -72, i16 -72, i16 -52, i16 -72, i16 -72, i16 -52, i16 -72, i16 -52, i16 -52, i16 -72, i16 -52, i16 -72, i16 -52, i16 -72, i16 -52, i16 -72, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 -52, i16 -52, i16 -52, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -72, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 -72, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -52, i16 -72, i16 -72, i16 -72, i16 -458, i16 -456, i16 -454, i16 -52, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -72, i16 -72, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2148, i16 6547, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2152, i16 6553, i16 1, i16 2156, i16 6559, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1010, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 -52, i16 -72, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 10732, i16 10738, i16 10744, i16 10750, i16 10756, i16 10762, i16 10768, i16 10774, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2160, i16 1, i16 1, i16 1, i16 6565, i16 6571, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 10780, i16 10786, i16 1, i16 10792, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10798, i16 1, i16 1, i16 10804, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10810, i16 10816, i16 10822, i16 1, i16 1, i16 10828, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2168, i16 6577, i16 1, i16 1, i16 6583, i16 6589, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 10834, i16 10840, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2180, i16 1, i16 6595, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2184, i16 2192, i16 1, i16 1, i16 6601, i16 6607, i16 6613, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2196, i16 1, i16 6619, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -344, i16 -842, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 1, i16 2200, i16 6625, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 2204, i16 6631, i16 6637, i16 1, i16 3530, i16 6645, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 -494, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2216, i16 2224, i16 1, i16 1, i16 6653, i16 6659, i16 6665, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1006, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2228, i16 6671, i16 1, i16 3540, i16 6679, i16 6687, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -306, i16 -306, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -298, i16 -298, i16 -298, i16 -298, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -276, i16 -276, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -268, i16 -268, i16 -268, i16 -268, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 1, i16 -72, i16 1, i16 -80, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10847, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10853, i16 1, i16 1, i16 1, i16 1, i16 10859, i16 1, i16 1, i16 1, i16 1, i16 10865, i16 1, i16 1, i16 1, i16 1, i16 10871, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10877, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -254, i16 -252, i16 15440, i16 -248, i16 15448, i16 10882, i16 1, i16 10888, i16 1, i16 -252, i16 -252, i16 -252, i16 -252, i16 1, i16 1, i16 -252, i16 15456, i16 -52, i16 -52, i16 -494, i16 1, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10895, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10901, i16 1, i16 1, i16 1, i16 1, i16 10907, i16 1, i16 1, i16 1, i16 1, i16 10913, i16 1, i16 1, i16 1, i16 1, i16 10919, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10925, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2240, i16 6693, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 -494, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 -512, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -56, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -68, i16 -52, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 -52, i16 -72, i16 1, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2244, i16 6699, i16 2248, i16 6705, i16 2252, i16 6711, i16 2256, i16 6717, i16 2260, i16 6723, i16 1, i16 1, i16 2264, i16 6729, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 2268, i16 6735, i16 2272, i16 6741, i16 2276, i16 2280, i16 6747, i16 6753, i16 2284, i16 6759, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -72, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 1, i16 -510, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 -52, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 1, i16 -510, i16 -510, i16 -510, i16 -510, i16 -510, i16 -510, i16 -510, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -52, i16 -52, i16 -44, i16 -84, i16 -72, i16 -108, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -48, i16 -56, i16 -56, i16 -72, i16 1, i16 -52, i16 -46, i16 -72, i16 -52, i16 -72, i16 6764, i16 6770, i16 6776, i16 6782, i16 6789, i16 6795, i16 6801, i16 6807, i16 6815, i16 6825, i16 6832, i16 6838, i16 6844, i16 6850, i16 6856, i16 6862, i16 6869, i16 6875, i16 6880, i16 6886, i16 6894, i16 6904, i16 6914, i16 6924, i16 6932, i16 6938, i16 6944, i16 6950, i16 6959, i16 6969, i16 6977, i16 6983, i16 6988, i16 6994, i16 7000, i16 7006, i16 7012, i16 7018, i16 7024, i16 7030, i16 7037, i16 7043, i16 7048, i16 7054, i16 7060, i16 7066, i16 7074, i16 7084, i16 7092, i16 7098, i16 7104, i16 7110, i16 7116, i16 7122, i16 3550, i16 3560, i16 7130, i16 7140, i16 7148, i16 7154, i16 7160, i16 7166, i16 7172, i16 7178, i16 7184, i16 7190, i16 7197, i16 7203, i16 7208, i16 7214, i16 7220, i16 7226, i16 7232, i16 7238, i16 7244, i16 7250, i16 7258, i16 7268, i16 7278, i16 7288, i16 7298, i16 7308, i16 7318, i16 7328, i16 7337, i16 7343, i16 7349, i16 7355, i16 7360, i16 7366, i16 3570, i16 3580, i16 7374, i16 7384, i16 7392, i16 7398, i16 7404, i16 7410, i16 3590, i16 3600, i16 7418, i16 7428, i16 7438, i16 7448, i16 7458, i16 7468, i16 7476, i16 7482, i16 7488, i16 7494, i16 7500, i16 7506, i16 7512, i16 7518, i16 7524, i16 7530, i16 7536, i16 7542, i16 7548, i16 7554, i16 7562, i16 7572, i16 7582, i16 7592, i16 7600, i16 7606, i16 7613, i16 7619, i16 7624, i16 7630, i16 7636, i16 7642, i16 7648, i16 7654, i16 7660, i16 7666, i16 7673, i16 7679, i16 7685, i16 7691, i16 7697, i16 7703, i16 7708, i16 7714, i16 7720, i16 7726, i16 7733, i16 7739, i16 7745, i16 7751, i16 7756, i16 7762, i16 7768, i16 7774, i16 1, i16 7781, i16 1, i16 1, i16 1, i16 1, i16 3610, i16 3624, i16 7786, i16 7792, i16 7800, i16 7810, i16 7820, i16 7830, i16 7840, i16 7850, i16 7860, i16 7870, i16 7880, i16 7890, i16 7900, i16 7910, i16 7920, i16 7930, i16 7940, i16 7950, i16 7960, i16 7970, i16 7980, i16 7990, i16 3638, i16 3648, i16 7998, i16 8004, i16 8010, i16 8016, i16 8024, i16 8034, i16 8044, i16 8054, i16 8064, i16 8074, i16 8084, i16 8094, i16 8104, i16 8114, i16 8122, i16 8128, i16 8134, i16 8140, i16 3658, i16 3668, i16 8146, i16 8152, i16 8160, i16 8170, i16 8180, i16 8190, i16 8200, i16 8210, i16 8220, i16 8230, i16 8240, i16 8250, i16 8260, i16 8270, i16 8280, i16 8290, i16 8300, i16 8310, i16 8320, i16 8330, i16 8340, i16 8350, i16 8358, i16 8364, i16 8370, i16 8376, i16 8384, i16 8394, i16 8404, i16 8414, i16 8424, i16 8434, i16 8444, i16 8454, i16 8464, i16 8474, i16 8482, i16 8488, i16 8495, i16 8501, i16 8506, i16 8512, i16 8518, i16 8524, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3678, i16 3700, i16 3724, i16 3738, i16 3752, i16 3766, i16 3780, i16 3794, i16 3806, i16 3828, i16 3852, i16 3866, i16 3880, i16 3894, i16 3908, i16 3922, i16 3934, i16 3948, i16 8533, i16 8543, i16 8553, i16 8563, i16 1, i16 1, i16 3962, i16 3976, i16 8573, i16 8583, i16 8593, i16 8603, i16 1, i16 1, i16 3990, i16 4012, i16 4036, i16 4050, i16 4064, i16 4078, i16 4092, i16 4106, i16 4118, i16 4140, i16 4164, i16 4178, i16 4192, i16 4206, i16 4220, i16 4234, i16 4246, i16 4264, i16 8613, i16 8623, i16 8633, i16 8643, i16 8653, i16 8663, i16 4282, i16 4300, i16 8673, i16 8683, i16 8693, i16 8703, i16 8713, i16 8723, i16 4318, i16 4332, i16 8733, i16 8743, i16 8753, i16 8763, i16 1, i16 1, i16 4346, i16 4360, i16 8773, i16 8783, i16 8793, i16 8803, i16 1, i16 1, i16 4374, i16 4392, i16 8813, i16 8823, i16 8833, i16 8843, i16 8853, i16 8863, i16 1, i16 4410, i16 1, i16 8873, i16 1, i16 8883, i16 1, i16 8893, i16 4428, i16 4450, i16 4474, i16 4488, i16 4502, i16 4516, i16 4530, i16 4544, i16 4556, i16 4578, i16 4602, i16 4616, i16 4630, i16 4644, i16 4658, i16 4672, i16 4684, i16 15262, i16 8901, i16 15270, i16 4694, i16 15278, i16 8907, i16 15286, i16 8913, i16 15294, i16 8919, i16 15302, i16 4704, i16 15310, i16 1, i16 1, i16 8926, i16 8936, i16 8951, i16 8967, i16 8983, i16 8999, i16 9015, i16 9031, i16 9042, i16 9052, i16 9067, i16 9083, i16 9099, i16 9115, i16 9131, i16 9147, i16 9158, i16 9168, i16 9183, i16 9199, i16 9215, i16 9231, i16 9247, i16 9263, i16 9274, i16 9284, i16 9299, i16 9315, i16 9331, i16 9347, i16 9363, i16 9379, i16 9390, i16 9400, i16 9415, i16 9431, i16 9447, i16 9463, i16 9479, i16 9495, i16 9506, i16 9516, i16 9531, i16 9547, i16 9563, i16 9579, i16 9595, i16 9611, i16 9621, i16 9627, i16 9635, i16 9642, i16 9651, i16 1, i16 4714, i16 9661, i16 9669, i16 9675, i16 9681, i16 15318, i16 9686, i16 1, i16 10930, i16 2288, i16 1, i16 9693, i16 9701, i16 9708, i16 9717, i16 1, i16 4724, i16 9727, i16 9735, i16 15326, i16 9741, i16 15334, i16 9746, i16 9753, i16 9759, i16 9765, i16 9771, i16 9777, i16 9785, i16 15344, i16 1, i16 1, i16 9793, i16 9801, i16 9809, i16 9815, i16 9821, i16 15354, i16 1, i16 9827, i16 9833, i16 9839, i16 9845, i16 9851, i16 9859, i16 15364, i16 9867, i16 9873, i16 9879, i16 9887, i16 9895, i16 9901, i16 9907, i16 15374, i16 9913, i16 9919, i16 15382, i16 10935, i16 1, i16 1, i16 9927, i16 9934, i16 9943, i16 1, i16 4734, i16 9953, i16 9961, i16 15390, i16 9967, i16 15398, i16 9972, i16 10939, i16 2300, i16 1, i16 -1527, i16 -1527, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -510, i16 -510, i16 -52, i16 -52, i16 -52, i16 -52, i16 -510, i16 -510, i16 -510, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 1, i16 1, i16 1, i16 -510, i16 -510, i16 -52, i16 -72, i16 -52, i16 -510, i16 -510, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10942, i16 1, i16 1, i16 1, i16 10946, i16 15406, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2312, i16 1, i16 2316, i16 1, i16 2320, i16 1, i16 1, i16 1, i16 1, i16 1, i16 9979, i16 9985, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 9991, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 9997, i16 10003, i16 10009, i16 2324, i16 1, i16 2328, i16 1, i16 2332, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2336, i16 10015, i16 1, i16 1, i16 1, i16 2340, i16 10021, i16 1, i16 2344, i16 10027, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2348, i16 10033, i16 2352, i16 10039, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2356, i16 1, i16 1, i16 1, i16 10045, i16 1, i16 2360, i16 10051, i16 2364, i16 1, i16 10057, i16 2368, i16 10063, i16 1, i16 1, i16 1, i16 2372, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10069, i16 2376, i16 10075, i16 1, i16 2380, i16 2384, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10081, i16 10087, i16 10093, i16 10099, i16 10105, i16 2388, i16 2392, i16 10111, i16 10117, i16 2396, i16 2400, i16 10123, i16 10129, i16 2404, i16 2408, i16 2412, i16 2416, i16 1, i16 1, i16 10135, i16 10141, i16 2420, i16 2424, i16 10147, i16 10153, i16 2428, i16 2432, i16 10159, i16 10165, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2436, i16 2440, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2444, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2448, i16 2452, i16 1, i16 2456, i16 10171, i16 10177, i16 10183, i16 10189, i16 1, i16 1, i16 2460, i16 2464, i16 2468, i16 2472, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10195, i16 10201, i16 10207, i16 10213, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10219, i16 10225, i16 10231, i16 10237, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10951, i16 10955, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10959, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -76, i16 -56, i16 -48, i16 -68, i16 -64, i16 -64, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2476, i16 1, i16 1, i16 1, i16 1, i16 2480, i16 10243, i16 2484, i16 10249, i16 2488, i16 10255, i16 2492, i16 10261, i16 2496, i16 10267, i16 2500, i16 10273, i16 2504, i16 10279, i16 2508, i16 10285, i16 2512, i16 10291, i16 2516, i16 10297, i16 2520, i16 10303, i16 2524, i16 10309, i16 1, i16 2528, i16 10315, i16 2532, i16 10321, i16 2536, i16 10327, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2540, i16 10333, i16 10339, i16 2548, i16 10345, i16 10351, i16 2556, i16 10357, i16 10363, i16 2564, i16 10369, i16 10375, i16 2572, i16 10381, i16 10387, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10393, i16 1, i16 1, i16 1, i16 1, i16 -1008, i16 -1008, i16 1, i16 1, i16 2580, i16 10399, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2584, i16 1, i16 1, i16 1, i16 1, i16 2588, i16 10405, i16 2592, i16 10411, i16 2596, i16 10417, i16 2600, i16 10423, i16 2604, i16 10429, i16 2608, i16 10435, i16 2612, i16 10441, i16 2616, i16 10447, i16 2620, i16 10453, i16 2624, i16 10459, i16 2628, i16 10465, i16 2632, i16 10471, i16 1, i16 2636, i16 10477, i16 2640, i16 10483, i16 2644, i16 10489, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2648, i16 10495, i16 10501, i16 2656, i16 10507, i16 10513, i16 2664, i16 10519, i16 10525, i16 2672, i16 10531, i16 10537, i16 2680, i16 10543, i16 10549, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2688, i16 2692, i16 2696, i16 2700, i16 1, i16 10555, i16 1, i16 1, i16 10561, i16 10567, i16 10573, i16 10579, i16 1, i16 1, i16 2704, i16 10585, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -72, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 1, i16 -52, i16 -52, i16 -72, i16 1, i16 1, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 1, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2786, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 2786, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 2786, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 2786, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 4745, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 15462, i16 1, i16 15462, i16 15462, i16 15462, i16 15462, i16 15462, i16 15462, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 15462, i16 15462, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 15462, i16 1, i16 1, i16 1, i16 1, i16 15462, i16 1, i16 1, i16 1, i16 15462, i16 1, i16 15462, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 15255, i16 1, i16 10965, i16 10969, i16 10973, i16 10977, i16 10981, i16 10985, i16 10989, i16 10993, i16 10993, i16 10997, i16 11001, i16 11005, i16 11009, i16 11013, i16 11017, i16 11021, i16 11025, i16 11029, i16 11033, i16 11037, i16 11041, i16 11045, i16 11049, i16 11053, i16 11057, i16 11061, i16 11065, i16 11069, i16 11073, i16 11077, i16 11081, i16 11085, i16 11089, i16 11093, i16 11097, i16 11101, i16 11105, i16 11109, i16 11113, i16 11117, i16 11121, i16 11125, i16 11129, i16 11133, i16 11137, i16 11141, i16 11145, i16 11149, i16 11153, i16 11157, i16 11161, i16 11165, i16 11169, i16 11173, i16 11177, i16 11181, i16 11185, i16 11189, i16 11193, i16 11197, i16 11201, i16 11205, i16 11209, i16 11213, i16 11217, i16 11221, i16 11225, i16 11229, i16 11233, i16 11237, i16 11241, i16 11245, i16 11249, i16 11253, i16 11257, i16 11261, i16 11265, i16 11269, i16 11273, i16 11277, i16 11281, i16 11285, i16 11289, i16 11293, i16 11297, i16 11301, i16 11305, i16 11309, i16 11313, i16 11317, i16 11321, i16 11325, i16 11041, i16 11329, i16 11333, i16 11337, i16 11341, i16 11345, i16 11349, i16 11353, i16 11357, i16 11361, i16 11365, i16 11369, i16 11373, i16 11377, i16 11381, i16 11385, i16 11389, i16 11393, i16 11397, i16 11401, i16 11405, i16 11409, i16 11413, i16 11417, i16 11421, i16 11425, i16 11429, i16 11433, i16 11437, i16 11441, i16 11445, i16 11449, i16 11453, i16 11457, i16 11461, i16 11465, i16 11469, i16 11473, i16 11477, i16 11481, i16 11485, i16 11489, i16 11493, i16 11497, i16 11501, i16 11505, i16 11509, i16 11513, i16 11517, i16 11521, i16 11525, i16 11529, i16 11533, i16 11537, i16 11541, i16 11545, i16 11549, i16 11553, i16 11557, i16 11561, i16 11565, i16 11569, i16 11573, i16 11577, i16 11581, i16 11585, i16 11589, i16 11593, i16 11597, i16 11401, i16 11601, i16 11605, i16 11609, i16 11613, i16 11617, i16 11621, i16 11625, i16 11629, i16 11337, i16 11633, i16 11637, i16 11641, i16 11645, i16 11649, i16 11653, i16 11657, i16 11661, i16 11665, i16 11669, i16 11673, i16 11677, i16 11681, i16 11685, i16 11689, i16 11693, i16 11697, i16 11701, i16 11705, i16 11709, i16 11041, i16 11713, i16 11717, i16 11721, i16 11725, i16 11729, i16 11733, i16 11737, i16 11741, i16 11745, i16 11749, i16 11753, i16 11757, i16 11761, i16 11765, i16 11769, i16 11773, i16 11777, i16 11781, i16 11785, i16 11789, i16 11793, i16 11797, i16 11801, i16 11805, i16 11809, i16 11813, i16 11817, i16 11345, i16 11821, i16 11825, i16 11829, i16 11833, i16 11837, i16 11841, i16 11845, i16 11849, i16 11853, i16 11857, i16 11861, i16 11865, i16 11869, i16 11873, i16 11877, i16 11881, i16 11885, i16 11889, i16 11893, i16 11897, i16 11901, i16 11905, i16 11909, i16 11913, i16 11917, i16 11921, i16 11925, i16 11929, i16 11933, i16 11937, i16 11941, i16 11945, i16 11949, i16 11953, i16 11957, i16 11961, i16 11965, i16 11969, i16 11973, i16 11977, i16 11981, i16 11985, i16 11989, i16 11993, i16 11997, i16 12001, i16 12005, i16 12009, i16 12013, i16 12017, i16 1, i16 1, i16 12021, i16 1, i16 12025, i16 1, i16 1, i16 12029, i16 12033, i16 12037, i16 12041, i16 12045, i16 12049, i16 12053, i16 12057, i16 12061, i16 12065, i16 1, i16 12069, i16 1, i16 12073, i16 1, i16 1, i16 12077, i16 12081, i16 1, i16 1, i16 1, i16 12085, i16 12089, i16 12093, i16 12097, i16 12101, i16 12105, i16 12109, i16 12113, i16 12117, i16 12121, i16 12125, i16 12129, i16 12133, i16 12137, i16 12141, i16 12145, i16 12149, i16 12153, i16 12157, i16 12161, i16 12165, i16 12169, i16 12173, i16 12177, i16 12181, i16 12185, i16 12189, i16 12193, i16 12197, i16 12201, i16 12205, i16 12209, i16 12213, i16 12217, i16 12221, i16 12225, i16 12229, i16 12233, i16 12237, i16 12241, i16 12245, i16 12249, i16 12253, i16 12257, i16 12261, i16 11557, i16 12265, i16 12269, i16 12273, i16 12277, i16 12281, i16 12285, i16 12285, i16 12289, i16 12293, i16 12297, i16 12301, i16 12305, i16 12309, i16 12313, i16 12317, i16 12077, i16 12321, i16 12325, i16 12329, i16 12333, i16 12337, i16 12343, i16 1, i16 1, i16 12347, i16 12351, i16 12355, i16 12359, i16 12363, i16 12367, i16 12371, i16 12375, i16 12133, i16 12379, i16 12383, i16 12387, i16 12021, i16 12391, i16 12395, i16 12399, i16 12403, i16 12407, i16 12411, i16 12415, i16 12419, i16 12423, i16 12427, i16 12431, i16 12435, i16 12169, i16 12439, i16 12173, i16 12443, i16 12447, i16 12451, i16 12455, i16 12459, i16 12025, i16 11125, i16 12463, i16 12467, i16 12471, i16 11405, i16 11753, i16 12475, i16 12479, i16 12201, i16 12483, i16 12205, i16 12487, i16 12491, i16 12495, i16 12033, i16 12499, i16 12503, i16 12507, i16 12511, i16 12515, i16 12037, i16 12519, i16 12523, i16 12527, i16 12531, i16 12535, i16 12539, i16 12261, i16 12543, i16 12547, i16 11557, i16 12551, i16 12277, i16 12555, i16 12559, i16 12563, i16 12567, i16 12571, i16 12297, i16 12575, i16 12073, i16 12579, i16 12301, i16 11329, i16 12583, i16 12305, i16 12587, i16 12313, i16 12591, i16 12595, i16 12599, i16 12603, i16 12607, i16 12321, i16 12057, i16 12611, i16 12325, i16 12615, i16 12329, i16 12619, i16 10993, i16 12623, i16 12629, i16 12635, i16 12641, i16 12645, i16 12649, i16 12653, i16 12659, i16 12665, i16 12671, i16 12675, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 12678, i16 -460, i16 12684, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 12690, i16 12696, i16 12704, i16 12714, i16 12722, i16 12728, i16 12734, i16 12740, i16 12746, i16 12752, i16 12758, i16 12764, i16 12770, i16 1, i16 12776, i16 12782, i16 12788, i16 12794, i16 12800, i16 1, i16 12806, i16 1, i16 12812, i16 12818, i16 1, i16 12824, i16 12830, i16 1, i16 12836, i16 12842, i16 12848, i16 12854, i16 12860, i16 12866, i16 12872, i16 12878, i16 12884, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 1, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -510, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -72, i16 -52, i16 -52, i16 -52, i16 -72, i16 -52, i16 -72, i16 -72, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2708, i16 10591, i16 2714, i16 10601, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2720, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10611, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 -1010, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 10621, i16 10631, i16 1, i16 2726, i16 2732, i16 -494, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -498, i16 -498, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2738, i16 1, i16 1, i16 1, i16 10641, i16 10651, i16 -494, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 -494, i16 1, i16 1, i16 1, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2750, i16 -1024, i16 10661, i16 10671, i16 -1024, i16 10681, i16 1, i16 1, i16 -494, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2768, i16 2774, i16 10691, i16 10701, i16 1, i16 1, i16 1, i16 -494, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -1024, i16 1, i16 1, i16 1, i16 1, i16 2780, i16 1, i16 1, i16 10711, i16 1, i16 1, i16 1, i16 1, i16 -494, i16 -494, i16 1, i16 -510, i16 -510, i16 -510, i16 -510, i16 -510, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -500, i16 -500, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -510, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 12890, i16 12900, i16 12920, i16 12944, i16 12968, i16 12992, i16 13016, i16 -80, i16 -80, i16 -510, i16 -510, i16 -510, i16 1, i16 1, i16 1, i16 -60, i16 -80, i16 -80, i16 -80, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -72, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 13030, i16 13040, i16 13060, i16 13084, i16 13108, i16 13132, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 -52, i16 -52, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 -72, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -52, i16 -498, i16 1, i16 1, i16 1, i16 1, i16 1, i16 13147, i16 13151, i16 13155, i16 13159, i16 13165, i16 12109, i16 13169, i16 13173, i16 13177, i16 13181, i16 12113, i16 13185, i16 13189, i16 13193, i16 12117, i16 13199, i16 13203, i16 13207, i16 13211, i16 13217, i16 13221, i16 13225, i16 13229, i16 13235, i16 13239, i16 13243, i16 13247, i16 12351, i16 13251, i16 13257, i16 13261, i16 13265, i16 13269, i16 13273, i16 13277, i16 13281, i16 13285, i16 12371, i16 12121, i16 12125, i16 12375, i16 13289, i16 13293, i16 11353, i16 13297, i16 12129, i16 13301, i16 13305, i16 13309, i16 13313, i16 13313, i16 13313, i16 13317, i16 13323, i16 13327, i16 13331, i16 13335, i16 13341, i16 13345, i16 13349, i16 13353, i16 13357, i16 13361, i16 13365, i16 13369, i16 13373, i16 13377, i16 13381, i16 13385, i16 13389, i16 13389, i16 12383, i16 13393, i16 13397, i16 13401, i16 13405, i16 12137, i16 13409, i16 13413, i16 13417, i16 11965, i16 13421, i16 13425, i16 13429, i16 13433, i16 13437, i16 13441, i16 13445, i16 13449, i16 13453, i16 13459, i16 13463, i16 13467, i16 13471, i16 13475, i16 13479, i16 13483, i16 13489, i16 13495, i16 13499, i16 13503, i16 13507, i16 13511, i16 13515, i16 13519, i16 13523, i16 13527, i16 13527, i16 13531, i16 13537, i16 13541, i16 11337, i16 13545, i16 13549, i16 13555, i16 13559, i16 13563, i16 13567, i16 13571, i16 13575, i16 12157, i16 13579, i16 13583, i16 13587, i16 13593, i16 13597, i16 13603, i16 13607, i16 13611, i16 13615, i16 13619, i16 13623, i16 13627, i16 13631, i16 13635, i16 13639, i16 13643, i16 13647, i16 13653, i16 13657, i16 13661, i16 13665, i16 11121, i16 13669, i16 13675, i16 13679, i16 13679, i16 13685, i16 13689, i16 13689, i16 13693, i16 13697, i16 13703, i16 13709, i16 13713, i16 13717, i16 13721, i16 13725, i16 13729, i16 13733, i16 13737, i16 13741, i16 13745, i16 12161, i16 13749, i16 13755, i16 13759, i16 13763, i16 12431, i16 13763, i16 13767, i16 12169, i16 13771, i16 13775, i16 13779, i16 13783, i16 12173, i16 11013, i16 13787, i16 13791, i16 13795, i16 13799, i16 13803, i16 13807, i16 13811, i16 13817, i16 13821, i16 13825, i16 13829, i16 13833, i16 13837, i16 13843, i16 13847, i16 13851, i16 13855, i16 13859, i16 13863, i16 13867, i16 13871, i16 13875, i16 12177, i16 13879, i16 13883, i16 13889, i16 13893, i16 13897, i16 13901, i16 12185, i16 13905, i16 13909, i16 13913, i16 13917, i16 13921, i16 13925, i16 13929, i16 13933, i16 11125, i16 12463, i16 13937, i16 13941, i16 13945, i16 13949, i16 13955, i16 13959, i16 13963, i16 13967, i16 12189, i16 13971, i16 13977, i16 13981, i16 13985, i16 12641, i16 13989, i16 13993, i16 13997, i16 14001, i16 14005, i16 14011, i16 14015, i16 14019, i16 14023, i16 14029, i16 14033, i16 14037, i16 14041, i16 11405, i16 14045, i16 14049, i16 14055, i16 14061, i16 14067, i16 14071, i16 14077, i16 14081, i16 14085, i16 14089, i16 14093, i16 12193, i16 11753, i16 14097, i16 14101, i16 14105, i16 14109, i16 14115, i16 14119, i16 14123, i16 14127, i16 12479, i16 14131, i16 14135, i16 14141, i16 14145, i16 14149, i16 14155, i16 14161, i16 14165, i16 12483, i16 14169, i16 14173, i16 14177, i16 14181, i16 14185, i16 14189, i16 14193, i16 14199, i16 14203, i16 14209, i16 14213, i16 14219, i16 12491, i16 14223, i16 14227, i16 14233, i16 14237, i16 14241, i16 14247, i16 14253, i16 14257, i16 14261, i16 14265, i16 14269, i16 14269, i16 14273, i16 14277, i16 12499, i16 14281, i16 14285, i16 14289, i16 14293, i16 14297, i16 14303, i16 14307, i16 11349, i16 14313, i16 14319, i16 14323, i16 14329, i16 14335, i16 14341, i16 14345, i16 12523, i16 14349, i16 14355, i16 14361, i16 14367, i16 14373, i16 14377, i16 14377, i16 12527, i16 12649, i16 14381, i16 14385, i16 14389, i16 14393, i16 14399, i16 11197, i16 12535, i16 14403, i16 14407, i16 12237, i16 14413, i16 14419, i16 12053, i16 14425, i16 14429, i16 12253, i16 14433, i16 14437, i16 14441, i16 14447, i16 14447, i16 14453, i16 14457, i16 14461, i16 14467, i16 14471, i16 14475, i16 14479, i16 14485, i16 14489, i16 14493, i16 14497, i16 14501, i16 14505, i16 14511, i16 14515, i16 14519, i16 14523, i16 14527, i16 14531, i16 14535, i16 14541, i16 14547, i16 14551, i16 14557, i16 14561, i16 14567, i16 14571, i16 12277, i16 14575, i16 14581, i16 14587, i16 14591, i16 14597, i16 14601, i16 14607, i16 14611, i16 14615, i16 14619, i16 14623, i16 14627, i16 14631, i16 14637, i16 14643, i16 14649, i16 13685, i16 14655, i16 14659, i16 14663, i16 14667, i16 14671, i16 14675, i16 14679, i16 14683, i16 14687, i16 14691, i16 14695, i16 14699, i16 11421, i16 14705, i16 14709, i16 14713, i16 14717, i16 14721, i16 14725, i16 12289, i16 14729, i16 14733, i16 14737, i16 14741, i16 14745, i16 14751, i16 14757, i16 14763, i16 14767, i16 14771, i16 14775, i16 14779, i16 14785, i16 14789, i16 14795, i16 14799, i16 14803, i16 14809, i16 14815, i16 14819, i16 11177, i16 14823, i16 14827, i16 14831, i16 14835, i16 14839, i16 14843, i16 12563, i16 14847, i16 14851, i16 14855, i16 14859, i16 14863, i16 14867, i16 14871, i16 14875, i16 14879, i16 14883, i16 14889, i16 14893, i16 14897, i16 14901, i16 14905, i16 14909, i16 14915, i16 14921, i16 14925, i16 14929, i16 12583, i16 12587, i16 14933, i16 14937, i16 14943, i16 14947, i16 14951, i16 14955, i16 14959, i16 14965, i16 14971, i16 14975, i16 14979, i16 14983, i16 14989, i16 12591, i16 14993, i16 14999, i16 15005, i16 15009, i16 15013, i16 15017, i16 15023, i16 15027, i16 15031, i16 15035, i16 15039, i16 15043, i16 15047, i16 15051, i16 15057, i16 15061, i16 15065, i16 15069, i16 15075, i16 15079, i16 15083, i16 15087, i16 15091, i16 15097, i16 15103, i16 15107, i16 15111, i16 15115, i16 15121, i16 15125, i16 12615, i16 12615, i16 15131, i16 15135, i16 15141, i16 15145, i16 15149, i16 15153, i16 15157, i16 15161, i16 15165, i16 15169, i16 12619, i16 15175, i16 15179, i16 15183, i16 15187, i16 15191, i16 15195, i16 15201, i16 15205, i16 15211, i16 15217, i16 15223, i16 15227, i16 15231, i16 15235, i16 15239, i16 15243, i16 15247, i16 15251, i16 15255, i16 1, i16 1], align 16
@_ZN6icu_69L11nfcInitOnceE = internal global { { { i32 } }, i32 } zeroinitializer, align 4

@_ZN6icu_6911Normalizer2D1Ev = hidden unnamed_addr alias void (%"class.icu_69::Normalizer2"*), void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev
@_ZN6icu_6915NoopNormalizer2D2Ev = hidden unnamed_addr alias void (%"class.icu_69::NoopNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::NoopNormalizer2"*)*)
@_ZN6icu_6915NoopNormalizer2D1Ev = hidden unnamed_addr alias void (%"class.icu_69::NoopNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::NoopNormalizer2"*)*)
@_ZN6icu_6919Normalizer2WithImplD2Ev = hidden unnamed_addr alias void (%"class.icu_69::Normalizer2WithImpl"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::Normalizer2WithImpl"*)*)
@_ZN6icu_6919Normalizer2WithImplD1Ev = hidden unnamed_addr alias void (%"class.icu_69::Normalizer2WithImpl"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::Normalizer2WithImpl"*)*)
@_ZN6icu_6920DecomposeNormalizer2D2Ev = hidden unnamed_addr alias void (%"class.icu_69::DecomposeNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::DecomposeNormalizer2"*)*)
@_ZN6icu_6920DecomposeNormalizer2D1Ev = hidden unnamed_addr alias void (%"class.icu_69::DecomposeNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::DecomposeNormalizer2"*)*)
@_ZN6icu_6918ComposeNormalizer2D2Ev = hidden unnamed_addr alias void (%"class.icu_69::ComposeNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::ComposeNormalizer2"*)*)
@_ZN6icu_6918ComposeNormalizer2D1Ev = hidden unnamed_addr alias void (%"class.icu_69::ComposeNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::ComposeNormalizer2"*)*)
@_ZN6icu_6914FCDNormalizer2D2Ev = hidden unnamed_addr alias void (%"class.icu_69::FCDNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::FCDNormalizer2"*)*)
@_ZN6icu_6914FCDNormalizer2D1Ev = hidden unnamed_addr alias void (%"class.icu_69::FCDNormalizer2"*), bitcast (void (%"class.icu_69::Normalizer2"*)* @_ZN6icu_6911Normalizer2D2Ev to void (%"class.icu_69::FCDNormalizer2"*)*)
@_ZN6icu_6913Norm2AllModesD1Ev = hidden unnamed_addr alias void (%"struct.icu_69::Norm2AllModes"*), void (%"struct.icu_69::Norm2AllModes"*)* @_ZN6icu_6913Norm2AllModesD2Ev

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6911Normalizer2D2Ev(%"class.icu_69::Normalizer2"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::Normalizer2", %"class.icu_69::Normalizer2"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #9
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6911Normalizer2D0Ev(%"class.icu_69::Normalizer2"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6911Normalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"* readnone, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %8 = alloca %"class.icu_69::UnicodeString", align 8
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %25

12:                                               ; preds = %7
  %13 = icmp eq %"class.icu_69::Edits"* %5, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %12
  store i32 16, i32* %6, align 4
  br label %25

15:                                               ; preds = %12
  %16 = bitcast %"class.icu_69::UnicodeString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6913UnicodeString8fromUTF8ENS_11StringPieceE(%"class.icu_69::UnicodeString"* nonnull sret %8, i8* %2, i32 %3) #9
  %17 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 64, i1 false) #9, !alias.scope !2
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !alias.scope !2
  %19 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %19, align 8, !alias.scope !2
  %20 = bitcast %"class.icu_69::Normalizer2"* %0 to %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)***
  %21 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)**, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*** %20, align 8, !noalias !2
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %21, i64 3
  %23 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %22, align 8, !noalias !2
  %24 = call dereferenceable(64) %"class.icu_69::UnicodeString"* %23(%"class.icu_69::Normalizer2"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %8, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, i32* dereferenceable(4) %6) #9
  call void @_ZNK6icu_6913UnicodeString6toUTF8ERNS_8ByteSinkE(%"class.icu_69::UnicodeString"* nonnull %9, %"class.icu_69::ByteSink"* dereferenceable(8) %4) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %17) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #9
  br label %25

25:                                               ; preds = %7, %15, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN6icu_6913UnicodeString8fromUTF8ENS_11StringPieceE(%"class.icu_69::UnicodeString"* sret, i8*, i32) local_unnamed_addr #5

declare void @_ZNK6icu_6913UnicodeString6toUTF8ERNS_8ByteSinkE(%"class.icu_69::UnicodeString"*, %"class.icu_69::ByteSink"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZNK6icu_6911Normalizer219getRawDecompositionEiRNS_13UnicodeStringE(%"class.icu_69::Normalizer2"* nocapture readnone, i32, %"class.icu_69::UnicodeString"* nocapture readnone dereferenceable(64)) unnamed_addr #6 align 2 {
  ret i8 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6icu_6911Normalizer211composePairEii(%"class.icu_69::Normalizer2"* nocapture readnone, i32, i32) unnamed_addr #6 align 2 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZNK6icu_6911Normalizer217getCombiningClassEi(%"class.icu_69::Normalizer2"* nocapture readnone, i32) unnamed_addr #6 align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6911Normalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode(%"class.icu_69::Normalizer2"*, i8*, i32, i32* dereferenceable(4)) unnamed_addr #1 align 2 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = load i32, i32* %3, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #9
  call void @_ZN6icu_6913UnicodeString8fromUTF8ENS_11StringPieceE(%"class.icu_69::UnicodeString"* nonnull sret %5, i8* %1, i32 %2) #9
  %10 = bitcast %"class.icu_69::Normalizer2"* %0 to i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)***
  %11 = load i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)**, i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*** %10, align 8
  %12 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %11, i64 11
  %13 = load i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %12, align 8
  %14 = call signext i8 %13(%"class.icu_69::Normalizer2"* %0, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32* dereferenceable(4) %3) #9
  %15 = icmp ne i8 %14, 0
  %16 = zext i1 %15 to i8
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #9
  br label %17

17:                                               ; preds = %4, %8
  %18 = phi i8 [ %16, %8 ], [ 0, %4 ]
  ret i8 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6915NoopNormalizer2D0Ev(%"class.icu_69::NoopNormalizer2"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::NoopNormalizer2", %"class.icu_69::NoopNormalizer2"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #9
  %3 = bitcast %"class.icu_69::NoopNormalizer2"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #0

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6919Normalizer2WithImplD0Ev(%"class.icu_69::Normalizer2WithImpl"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6920DecomposeNormalizer2D0Ev(%"class.icu_69::DecomposeNormalizer2"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #9
  %3 = bitcast %"class.icu_69::DecomposeNormalizer2"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6918ComposeNormalizer2D0Ev(%"class.icu_69::ComposeNormalizer2"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #9
  %3 = bitcast %"class.icu_69::ComposeNormalizer2"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6914FCDNormalizer2D0Ev(%"class.icu_69::FCDNormalizer2"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #9
  %3 = bitcast %"class.icu_69::FCDNormalizer2"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::Normalizer2"* @_ZN6icu_6918Normalizer2Factory15getNoopInstanceER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %28

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L12noopInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %22, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L12noopInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %7
  %11 = load i32, i32* %0, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 8) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  store %"class.icu_69::Normalizer2"* null, %"class.icu_69::Normalizer2"** @_ZN6icu_69L13noopSingletonE, align 8
  store i32 7, i32* %0, align 4
  br label %20

17:                                               ; preds = %13
  %18 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN6icu_6915NoopNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  store i8* %14, i8** bitcast (%"class.icu_69::Normalizer2"** @_ZN6icu_69L13noopSingletonE to i8**), align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %19 = load i32, i32* %0, align 4
  br label %20

20:                                               ; preds = %10, %16, %17
  %21 = phi i32 [ %11, %10 ], [ 7, %16 ], [ %19, %17 ]
  store i32 %21, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L12noopInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L12noopInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %26

22:                                               ; preds = %7, %4
  %23 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L12noopInitOnceE, i64 0, i32 1), align 4
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  store i32 %23, i32* %0, align 4
  br label %26

26:                                               ; preds = %20, %22, %25
  %27 = load %"class.icu_69::Normalizer2"*, %"class.icu_69::Normalizer2"** @_ZN6icu_69L13noopSingletonE, align 8
  br label %28

28:                                               ; preds = %1, %26
  %29 = phi %"class.icu_69::Normalizer2"* [ %27, %26 ], [ null, %1 ]
  ret %"class.icu_69::Normalizer2"* %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.icu_69::Normalizer2Impl"* @_ZN6icu_6918Normalizer2Factory7getImplEPKNS_11Normalizer2E(%"class.icu_69::Normalizer2"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::Normalizer2", %"class.icu_69::Normalizer2"* %0, i64 1
  %3 = bitcast %"class.icu_69::Normalizer2"* %2 to %"class.icu_69::Normalizer2Impl"**
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  ret %"class.icu_69::Normalizer2Impl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913Norm2AllModesD2Ev(%"struct.icu_69::Norm2AllModes"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %0, i64 0, i32 0
  %3 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %2, align 8
  %4 = icmp eq %"class.icu_69::Normalizer2Impl"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.icu_69::Normalizer2Impl"* %3 to void (%"class.icu_69::Normalizer2Impl"*)***
  %7 = load void (%"class.icu_69::Normalizer2Impl"*)**, void (%"class.icu_69::Normalizer2Impl"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %7, i64 1
  %9 = load void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %8, align 8
  tail call void %9(%"class.icu_69::Normalizer2Impl"* nonnull %3) #9
  br label %10

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %11) #9
  %12 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %12) #9
  %13 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %13) #9
  %14 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes14createInstanceEPNS_15Normalizer2ImplER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = icmp eq %"class.icu_69::Normalizer2Impl"* %0, null
  br i1 %6, label %43, label %7

7:                                                ; preds = %5
  %8 = bitcast %"class.icu_69::Normalizer2Impl"* %0 to void (%"class.icu_69::Normalizer2Impl"*)***
  %9 = load void (%"class.icu_69::Normalizer2Impl"*)**, void (%"class.icu_69::Normalizer2Impl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %9, i64 1
  %11 = load void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %10, align 8
  tail call void %11(%"class.icu_69::Normalizer2Impl"* nonnull %0) #9
  br label %43

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 88) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %12
  %16 = bitcast i8* %13 to %"struct.icu_69::Norm2AllModes"*
  %17 = bitcast i8* %13 to %"class.icu_69::Normalizer2Impl"**
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  %19 = bitcast i8* %18 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %13, i64 16
  %21 = bitcast i8* %20 to %"class.icu_69::Normalizer2Impl"**
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6918ComposeNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %22 = getelementptr inbounds i8, i8* %13, i64 24
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 32
  %24 = bitcast i8* %23 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %13, i64 40
  %26 = bitcast i8* %25 to %"class.icu_69::Normalizer2Impl"**
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6920DecomposeNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 48
  %28 = bitcast i8* %27 to i32 (...)***
  %29 = getelementptr inbounds i8, i8* %13, i64 56
  %30 = bitcast i8* %29 to %"class.icu_69::Normalizer2Impl"**
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %30, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6914FCDNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %31 = getelementptr inbounds i8, i8* %13, i64 64
  %32 = bitcast i8* %31 to i32 (...)***
  %33 = getelementptr inbounds i8, i8* %13, i64 72
  %34 = bitcast i8* %33 to %"class.icu_69::Normalizer2Impl"**
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6918ComposeNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %35 = getelementptr inbounds i8, i8* %13, i64 80
  store i8 1, i8* %35, align 8
  br label %43

36:                                               ; preds = %12
  store i32 7, i32* %1, align 4
  %37 = icmp eq %"class.icu_69::Normalizer2Impl"* %0, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.icu_69::Normalizer2Impl"* %0 to void (%"class.icu_69::Normalizer2Impl"*)***
  %40 = load void (%"class.icu_69::Normalizer2Impl"*)**, void (%"class.icu_69::Normalizer2Impl"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %40, i64 1
  %42 = load void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %41, align 8
  tail call void %42(%"class.icu_69::Normalizer2Impl"* nonnull %0) #9
  br label %43

43:                                               ; preds = %15, %38, %36, %5, %7
  %44 = phi %"struct.icu_69::Norm2AllModes"* [ null, %7 ], [ null, %5 ], [ null, %38 ], [ null, %36 ], [ %16, %15 ]
  ret %"struct.icu_69::Norm2AllModes"* %44
}

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %50

4:                                                ; preds = %1
  %5 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 80) #9
  %6 = icmp eq i8* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %5 to %"class.icu_69::Normalizer2Impl"*
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6915Normalizer2ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 32
  %11 = bitcast i8* %10 to %struct.UCPTrie**
  store %struct.UCPTrie* null, %struct.UCPTrie** %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false) #9
  tail call void @_ZN6icu_6915Normalizer2Impl4initEPKiPK7UCPTriePKtPKh(%"class.icu_69::Normalizer2Impl"* nonnull %8, i32* getelementptr inbounds ([20 x i32], [20 x i32]* @_ZL22norm2_nfc_data_indexes, i64 0, i64 0), %struct.UCPTrie* nonnull @_ZL19norm2_nfc_data_trie, i16* getelementptr inbounds ([7732 x i16], [7732 x i16]* @_ZL24norm2_nfc_data_extraData, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZL23norm2_nfc_data_smallFCD, i64 0, i64 0)) #9
  %13 = load i32, i32* %0, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %21, label %16

15:                                               ; preds = %4
  store i32 7, i32* %0, align 4
  br label %50

16:                                               ; preds = %7
  %17 = bitcast i8* %5 to void (%"class.icu_69::Normalizer2Impl"*)***
  %18 = load void (%"class.icu_69::Normalizer2Impl"*)**, void (%"class.icu_69::Normalizer2Impl"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %18, i64 1
  %20 = load void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %19, align 8
  tail call void %20(%"class.icu_69::Normalizer2Impl"* nonnull %8) #9
  br label %50

21:                                               ; preds = %7
  %22 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 88) #9
  %23 = icmp eq i8* %22, null
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  %25 = bitcast i8* %22 to %"struct.icu_69::Norm2AllModes"*
  %26 = bitcast i8* %22 to i8**
  store i8* %5, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %22, i64 8
  %28 = bitcast i8* %27 to i32 (...)***
  %29 = getelementptr inbounds i8, i8* %22, i64 16
  %30 = bitcast i8* %29 to i8**
  store i8* %5, i8** %30, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6918ComposeNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %31 = getelementptr inbounds i8, i8* %22, i64 24
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds i8, i8* %22, i64 32
  %33 = bitcast i8* %32 to i32 (...)***
  %34 = getelementptr inbounds i8, i8* %22, i64 40
  %35 = bitcast i8* %34 to i8**
  store i8* %5, i8** %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6920DecomposeNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %36 = getelementptr inbounds i8, i8* %22, i64 48
  %37 = bitcast i8* %36 to i32 (...)***
  %38 = getelementptr inbounds i8, i8* %22, i64 56
  %39 = bitcast i8* %38 to i8**
  store i8* %5, i8** %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6914FCDNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %40 = getelementptr inbounds i8, i8* %22, i64 64
  %41 = bitcast i8* %40 to i32 (...)***
  %42 = getelementptr inbounds i8, i8* %22, i64 72
  %43 = bitcast i8* %42 to i8**
  store i8* %5, i8** %43, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN6icu_6918ComposeNormalizer2E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %44 = getelementptr inbounds i8, i8* %22, i64 80
  store i8 1, i8* %44, align 8
  br label %50

45:                                               ; preds = %21
  store i32 7, i32* %0, align 4
  %46 = bitcast i8* %5 to void (%"class.icu_69::Normalizer2Impl"*)***
  %47 = load void (%"class.icu_69::Normalizer2Impl"*)**, void (%"class.icu_69::Normalizer2Impl"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %47, i64 1
  %49 = load void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %48, align 8
  tail call void %49(%"class.icu_69::Normalizer2Impl"* nonnull %8) #9
  br label %50

50:                                               ; preds = %45, %24, %16, %15, %1
  %51 = phi %"struct.icu_69::Norm2AllModes"* [ null, %1 ], [ null, %15 ], [ null, %16 ], [ null, %45 ], [ %25, %24 ]
  ret %"struct.icu_69::Norm2AllModes"* %51
}

declare void @_ZN6icu_6915Normalizer2Impl4initEPKiPK7UCPTriePKtPKh(%"class.icu_69::Normalizer2Impl"*, i32*, %struct.UCPTrie*, i16*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes14getNFCInstanceER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %10, %13, %16
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi %"struct.icu_69::Norm2AllModes"* [ %18, %17 ], [ null, %1 ]
  ret %"struct.icu_69::Norm2AllModes"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::Normalizer2"* @_ZN6icu_6911Normalizer214getNFCInstanceER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %16, %13, %10
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi %"struct.icu_69::Norm2AllModes"* [ %18, %17 ], [ null, %1 ]
  %21 = icmp eq %"struct.icu_69::Norm2AllModes"* %20, null
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %20, i64 0, i32 1
  %23 = select i1 %21, %"class.icu_69::ComposeNormalizer2"* null, %"class.icu_69::ComposeNormalizer2"* %22
  %24 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %23, i64 0, i32 0, i32 0
  ret %"class.icu_69::Normalizer2"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::Normalizer2"* @_ZN6icu_6911Normalizer214getNFDInstanceER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %16, %13, %10
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi %"struct.icu_69::Norm2AllModes"* [ %18, %17 ], [ null, %1 ]
  %21 = icmp eq %"struct.icu_69::Norm2AllModes"* %20, null
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %20, i64 0, i32 2
  %23 = select i1 %21, %"class.icu_69::DecomposeNormalizer2"* null, %"class.icu_69::DecomposeNormalizer2"* %22
  %24 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %23, i64 0, i32 0, i32 0
  ret %"class.icu_69::Normalizer2"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::Normalizer2"* @_ZN6icu_6918Normalizer2Factory14getFCDInstanceER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %16, %13, %10
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi %"struct.icu_69::Norm2AllModes"* [ %18, %17 ], [ null, %1 ]
  %21 = icmp eq %"struct.icu_69::Norm2AllModes"* %20, null
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %20, i64 0, i32 3
  %23 = select i1 %21, %"class.icu_69::FCDNormalizer2"* null, %"class.icu_69::FCDNormalizer2"* %22
  %24 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %23, i64 0, i32 0, i32 0
  ret %"class.icu_69::Normalizer2"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::Normalizer2"* @_ZN6icu_6918Normalizer2Factory14getFCCInstanceER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %16, %13, %10
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi %"struct.icu_69::Norm2AllModes"* [ %18, %17 ], [ null, %1 ]
  %21 = icmp eq %"struct.icu_69::Norm2AllModes"* %20, null
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %20, i64 0, i32 4
  %23 = select i1 %21, %"class.icu_69::ComposeNormalizer2"* null, %"class.icu_69::ComposeNormalizer2"* %22
  %24 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %23, i64 0, i32 0, i32 0
  ret %"class.icu_69::Normalizer2"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::Normalizer2Impl"* @_ZN6icu_6918Normalizer2Factory10getNFCImplER10UErrorCode(i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %23

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %10, %13, %16
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  %19 = icmp eq %"struct.icu_69::Norm2AllModes"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %18, i64 0, i32 0
  %22 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %21, align 8
  br label %23

23:                                               ; preds = %1, %17, %20
  %24 = phi %"class.icu_69::Normalizer2Impl"* [ %22, %20 ], [ null, %17 ], [ null, %1 ]
  ret %"class.icu_69::Normalizer2Impl"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UNormalizer2* @unorm2_getNFCInstance_69(i32* nocapture) local_unnamed_addr #1 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %16, %13, %10
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi %"struct.icu_69::Norm2AllModes"* [ %18, %17 ], [ null, %1 ]
  %21 = icmp eq %"struct.icu_69::Norm2AllModes"* %20, null
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %20, i64 0, i32 1
  %23 = bitcast %"class.icu_69::ComposeNormalizer2"* %22 to %struct.UNormalizer2*
  %24 = select i1 %21, %struct.UNormalizer2* null, %struct.UNormalizer2* %23
  ret %struct.UNormalizer2* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UNormalizer2* @unorm2_getNFDInstance_69(i32* nocapture) local_unnamed_addr #1 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %19

4:                                                ; preds = %1
  %5 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* dereferenceable(4) %0) #9
  store %"struct.icu_69::Norm2AllModes"* %11, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %12 = load i32, i32* %0, align 4
  store i32 %12, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %17

13:                                               ; preds = %7, %4
  %14 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store i32 %14, i32* %0, align 4
  br label %17

17:                                               ; preds = %16, %13, %10
  %18 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi %"struct.icu_69::Norm2AllModes"* [ %18, %17 ], [ null, %1 ]
  %21 = icmp eq %"struct.icu_69::Norm2AllModes"* %20, null
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %20, i64 0, i32 2
  %23 = bitcast %"class.icu_69::DecomposeNormalizer2"* %22 to %struct.UNormalizer2*
  %24 = select i1 %21, %struct.UNormalizer2* null, %struct.UNormalizer2* %23
  ret %struct.UNormalizer2* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @unorm2_close_69(%struct.UNormalizer2*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.UNormalizer2* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %5 = bitcast %struct.UNormalizer2* %0 to void (%"class.icu_69::Normalizer2"*)***
  %6 = load void (%"class.icu_69::Normalizer2"*)**, void (%"class.icu_69::Normalizer2"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.icu_69::Normalizer2"*)*, void (%"class.icu_69::Normalizer2"*)** %6, i64 1
  %8 = load void (%"class.icu_69::Normalizer2"*)*, void (%"class.icu_69::Normalizer2"*)** %7, align 8
  tail call void %8(%"class.icu_69::Normalizer2"* nonnull %4) #9
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_normalize_69(%struct.UNormalizer2*, i16*, i32, i16*, i32, i32*) local_unnamed_addr #1 {
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %11 = alloca %"class.icu_69::Char16Ptr", align 8
  %12 = load i32, i32* %5, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %93

14:                                               ; preds = %6
  %15 = icmp eq i16* %1, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = icmp eq i32 %2, 0
  br i1 %17, label %20, label %30

18:                                               ; preds = %14
  %19 = icmp slt i32 %2, -1
  br i1 %19, label %30, label %20

20:                                               ; preds = %16, %18
  %21 = icmp eq i16* %3, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = icmp eq i32 %4, 0
  br i1 %23, label %26, label %30

24:                                               ; preds = %20
  %25 = icmp slt i32 %4, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %22, %24
  %27 = icmp eq i16* %1, %3
  %28 = icmp ne i16* %1, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %31

30:                                               ; preds = %16, %22, %26, %24, %18
  store i32 1, i32* %5, align 4
  br label %93

31:                                               ; preds = %26
  %32 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6913UnicodeStringC1EPDsii(%"class.icu_69::UnicodeString"* nonnull %7, i16* %3, i32 0, i32 %4) #9
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %89, label %34

34:                                               ; preds = %31
  %35 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %36 = icmp eq %struct.UNormalizer2* %0, null
  br i1 %36, label %76, label %37

37:                                               ; preds = %34
  %38 = bitcast %struct.UNormalizer2* %0 to i8*
  %39 = call i8* @__dynamic_cast(i8* nonnull %38, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6911Normalizer2E to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919Normalizer2WithImplE to i8*), i64 0) #9
  %40 = bitcast i8* %39 to %"class.icu_69::Normalizer2WithImpl"*
  %41 = icmp eq i8* %39, null
  br i1 %41, label %76, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.icu_69::ReorderingBuffer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %8, i64 0, i32 1
  %45 = bitcast %"class.icu_69::UnicodeString"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 56, i1 false)
  %46 = getelementptr inbounds i8, i8* %39, i64 8
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.icu_69::ReorderingBuffer"* %8 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %8, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %7, %"class.icu_69::UnicodeString"** %50, align 8
  %51 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %8, i64 0, i32 2
  %52 = bitcast i16** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 29, i1 false) #9
  %53 = call signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %8, i32 %2, i32* dereferenceable(4) %5) #9
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %42
  %56 = icmp sgt i32 %2, -1
  %57 = sext i32 %2 to i64
  %58 = getelementptr inbounds i16, i16* %1, i64 %57
  %59 = select i1 %56, i16* %58, i16* null
  %60 = bitcast i8* %39 to void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)***
  %61 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)**, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)** %61, i64 18
  %63 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)** %62, align 8
  call void %63(%"class.icu_69::Normalizer2WithImpl"* nonnull %40, i16* %1, i16* %59, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %8, i32* dereferenceable(4) %5) #9
  br label %64

64:                                               ; preds = %42, %55
  %65 = load i16*, i16** %51, align 8
  %66 = icmp eq i16* %65, null
  br i1 %66, label %87, label %67

67:                                               ; preds = %64
  %68 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %50, align 8
  %69 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %8, i64 0, i32 4
  %70 = bitcast i16** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = ptrtoint i16* %65 to i64
  %73 = sub i64 %71, %72
  %74 = lshr exact i64 %73, 1
  %75 = trunc i64 %74 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %68, i32 %75) #9
  br label %87

76:                                               ; preds = %34, %37
  %77 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %77) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 64, i1 false)
  %78 = lshr i32 %2, 31
  %79 = trunc i32 %78 to i8
  %80 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %10, i64 0, i32 0
  store i16* %1, i16** %80, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %9, i8 signext %79, %"class.icu_69::ConstChar16Ptr"* nonnull %10, i32 %2) #9
  %81 = load i16*, i16** %80, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %81) #9, !srcloc !5
  %82 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)***
  %83 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)**, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*** %82, align 8
  %84 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %83, i64 3
  %85 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %84, align 8
  %86 = call dereferenceable(64) %"class.icu_69::UnicodeString"* %85(%"class.icu_69::Normalizer2"* %35, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7, i32* dereferenceable(4) %5) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #9
  br label %87

87:                                               ; preds = %67, %64, %76
  %88 = phi i8* [ %77, %76 ], [ %43, %64 ], [ %43, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %88) #9
  br label %89

89:                                               ; preds = %87, %31
  %90 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %11, i64 0, i32 0
  store i16* %3, i16** %90, align 8
  %91 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %7, %"class.icu_69::Char16Ptr"* nonnull %11, i32 %4, i32* dereferenceable(4) %5) #9
  %92 = load i16*, i16** %90, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %92) #9, !srcloc !6
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #9
  br label %93

93:                                               ; preds = %6, %89, %30
  %94 = phi i32 [ 0, %30 ], [ %91, %89 ], [ 0, %6 ]
  ret i32 %94
}

declare void @_ZN6icu_6913UnicodeStringC1EPDsii(%"class.icu_69::UnicodeString"*, i16*, i32, i32) unnamed_addr #5

; Function Attrs: nounwind readonly
declare i8* @__dynamic_cast(i8*, i8*, i8*, i64) local_unnamed_addr #8

declare signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"*, i32, i32* dereferenceable(4)) local_unnamed_addr #5

declare void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) unnamed_addr #5

declare i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"*, %"class.icu_69::Char16Ptr"*, i32, i32* dereferenceable(4)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_normalizeSecondAndAppend_69(%struct.UNormalizer2*, i16*, i32, i32, i16*, i32, i32*) local_unnamed_addr #1 {
  %8 = tail call fastcc i32 @_ZL24normalizeSecondAndAppendPK12UNormalizer2PDsiiPKDsiaP10UErrorCode(%struct.UNormalizer2* %0, i16* %1, i32 %2, i32 %3, i16* %4, i32 %5, i8 signext 1, i32* %6)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL24normalizeSecondAndAppendPK12UNormalizer2PDsiiPKDsiaP10UErrorCode(%struct.UNormalizer2*, i16*, i32, i32, i16*, i32, i8 signext, i32*) unnamed_addr #1 {
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = alloca %"class.icu_69::UnicodeString", align 8
  %11 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %12 = alloca %"class.icu_69::UnicodeString", align 8
  %13 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %14 = alloca %"class.icu_69::Char16Ptr", align 8
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %147

17:                                               ; preds = %8
  %18 = icmp eq i16* %4, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = icmp eq i32 %5, 0
  br i1 %20, label %23, label %34

21:                                               ; preds = %17
  %22 = icmp slt i32 %5, -1
  br i1 %22, label %34, label %23

23:                                               ; preds = %19, %21
  %24 = icmp eq i16* %1, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = or i32 %3, %2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %34

28:                                               ; preds = %23
  %29 = icmp slt i32 %3, 0
  %30 = icmp slt i32 %2, -1
  %31 = or i1 %30, %29
  %32 = icmp eq i16* %1, %4
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %19, %25, %28, %21
  store i32 1, i32* %7, align 4
  br label %147

35:                                               ; preds = %28, %25
  %36 = phi i1 [ false, %25 ], [ true, %28 ]
  %37 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6913UnicodeStringC1EPDsii(%"class.icu_69::UnicodeString"* nonnull %9, i16* %1, i32 %2, i32 %3) #9
  %38 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 0
  %39 = load i16, i16* %38, align 8
  %40 = icmp slt i16 %39, 0
  %41 = lshr i16 %39, 5
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = select i1 %40, i32 %44, i32 %42
  %46 = icmp eq i32 %5, 0
  br i1 %46, label %143, label %47

47:                                               ; preds = %35
  %48 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %49 = icmp eq %struct.UNormalizer2* %0, null
  br i1 %49, label %123, label %50

50:                                               ; preds = %47
  %51 = bitcast %struct.UNormalizer2* %0 to i8*
  %52 = call i8* @__dynamic_cast(i8* nonnull %51, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6911Normalizer2E to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6919Normalizer2WithImplE to i8*), i64 0) #9
  %53 = bitcast i8* %52 to %"class.icu_69::Normalizer2WithImpl"*
  %54 = icmp eq i8* %52, null
  br i1 %54, label %123, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.icu_69::UnicodeString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 64, i1 false)
  %57 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %58, align 8
  %59 = bitcast %"class.icu_69::ReorderingBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %11, i64 0, i32 1
  %61 = bitcast %"class.icu_69::UnicodeString"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 56, i1 false)
  %62 = getelementptr inbounds i8, i8* %52, i64 8
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.icu_69::ReorderingBuffer"* %11 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %11, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %9, %"class.icu_69::UnicodeString"** %66, align 8
  %67 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %11, i64 0, i32 2
  %68 = bitcast i16** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 29, i1 false) #9
  %69 = add i32 %5, 1
  %70 = add i32 %69, %45
  %71 = call signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %11, i32 %70, i32* dereferenceable(4) %7) #9
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %55
  %74 = icmp sgt i32 %5, -1
  %75 = sext i32 %5 to i64
  %76 = getelementptr inbounds i16, i16* %4, i64 %75
  %77 = select i1 %74, i16* %76, i16* null
  %78 = bitcast i8* %52 to void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)***
  %79 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)**, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)** %79, i64 19
  %81 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)** %80, align 8
  call void %81(%"class.icu_69::Normalizer2WithImpl"* nonnull %53, i16* %4, i16* %77, i8 signext %6, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %10, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %11, i32* dereferenceable(4) %7) #9
  br label %82

82:                                               ; preds = %55, %73
  %83 = load i16*, i16** %67, align 8
  %84 = icmp eq i16* %83, null
  br i1 %84, label %94, label %85

85:                                               ; preds = %82
  %86 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %66, align 8
  %87 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %11, i64 0, i32 4
  %88 = bitcast i16** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = ptrtoint i16* %83 to i64
  %91 = sub i64 %89, %90
  %92 = lshr exact i64 %91, 1
  %93 = trunc i64 %92 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %86, i32 %93) #9
  br label %94

94:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %59) #9
  %95 = load i32, i32* %7, align 4
  %96 = icmp slt i32 %95, 1
  br i1 %96, label %97, label %107

97:                                               ; preds = %94
  %98 = load i16, i16* %38, align 8
  %99 = icmp slt i16 %98, 0
  %100 = lshr i16 %98, 5
  %101 = zext i16 %100 to i32
  %102 = load i32, i32* %43, align 4
  %103 = select i1 %99, i32 %102, i32 %101
  %104 = icmp sle i32 %103, %3
  %105 = xor i1 %36, true
  %106 = or i1 %104, %105
  br i1 %106, label %140, label %108

107:                                              ; preds = %94
  br i1 %36, label %108, label %140

108:                                              ; preds = %97, %107
  %109 = sext i32 %45 to i64
  %110 = getelementptr inbounds i16, i16* %1, i64 %109
  %111 = load i16, i16* %58, align 8
  %112 = icmp slt i16 %111, 0
  %113 = lshr i16 %111, 5
  %114 = zext i16 %113 to i32
  %115 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = select i1 %112, i32 %116, i32 %114
  %118 = sext i32 %117 to i64
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds i16, i16* %110, i64 %119
  call void @_ZNK6icu_6913UnicodeString9doExtractEiiPDsi(%"class.icu_69::UnicodeString"* nonnull %10, i32 0, i32 2147483647, i16* %120, i32 0) #9
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %120) #9, !srcloc !6
  %121 = icmp slt i32 %45, %3
  br i1 %121, label %122, label %140

122:                                              ; preds = %108
  store i16 0, i16* %110, align 2
  br label %140

123:                                              ; preds = %47, %50
  %124 = bitcast %"class.icu_69::UnicodeString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %124) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 64, i1 false)
  %125 = lshr i32 %5, 31
  %126 = trunc i32 %125 to i8
  %127 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %13, i64 0, i32 0
  store i16* %4, i16** %127, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %12, i8 signext %126, %"class.icu_69::ConstChar16Ptr"* nonnull %13, i32 %5) #9
  %128 = load i16*, i16** %127, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %128) #9, !srcloc !5
  %129 = icmp eq i8 %6, 0
  %130 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)***
  %131 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)**, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*** %130, align 8
  br i1 %129, label %136, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %131, i64 5
  %134 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %133, align 8
  %135 = call dereferenceable(64) %"class.icu_69::UnicodeString"* %134(%"class.icu_69::Normalizer2"* %48, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %12, i32* dereferenceable(4) %7) #9
  br label %140

136:                                              ; preds = %123
  %137 = getelementptr inbounds %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %131, i64 6
  %138 = load %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)*, %"class.icu_69::UnicodeString"* (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"*, i32*)** %137, align 8
  %139 = call dereferenceable(64) %"class.icu_69::UnicodeString"* %138(%"class.icu_69::Normalizer2"* %48, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %12, i32* dereferenceable(4) %7) #9
  br label %140

140:                                              ; preds = %132, %136, %108, %122, %107, %97
  %141 = phi %"class.icu_69::UnicodeString"* [ %10, %97 ], [ %10, %107 ], [ %10, %122 ], [ %10, %108 ], [ %12, %136 ], [ %12, %132 ]
  %142 = phi i8* [ %56, %97 ], [ %56, %107 ], [ %56, %122 ], [ %56, %108 ], [ %124, %136 ], [ %124, %132 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %141) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %142) #9
  br label %143

143:                                              ; preds = %140, %35
  %144 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %14, i64 0, i32 0
  store i16* %1, i16** %144, align 8
  %145 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %9, %"class.icu_69::Char16Ptr"* nonnull %14, i32 %3, i32* dereferenceable(4) %7) #9
  %146 = load i16*, i16** %144, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %146) #9, !srcloc !6
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %37) #9
  br label %147

147:                                              ; preds = %8, %143, %34
  %148 = phi i32 [ 0, %34 ], [ %145, %143 ], [ 0, %8 ]
  ret i32 %148
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_append_69(%struct.UNormalizer2*, i16*, i32, i32, i16*, i32, i32*) local_unnamed_addr #1 {
  %8 = tail call fastcc i32 @_ZL24normalizeSecondAndAppendPK12UNormalizer2PDsiiPKDsiaP10UErrorCode(%struct.UNormalizer2* %0, i16* %1, i32 %2, i32 %3, i16* %4, i32 %5, i8 signext 0, i32* %6)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_getDecomposition_69(%struct.UNormalizer2*, i32, i16*, i32, i32*) local_unnamed_addr #1 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::Char16Ptr", align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %32

10:                                               ; preds = %5
  %11 = icmp eq i16* %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %17, label %16

14:                                               ; preds = %10
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %14
  store i32 1, i32* %4, align 4
  br label %32

17:                                               ; preds = %12, %14
  %18 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6913UnicodeStringC1EPDsii(%"class.icu_69::UnicodeString"* nonnull %6, i16* %2, i32 0, i32 %3) #9
  %19 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %20 = bitcast %struct.UNormalizer2* %0 to i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)***
  %21 = load i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)**, i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)*** %20, align 8
  %22 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)*, i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)** %21, i64 7
  %23 = load i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)*, i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)** %22, align 8
  %24 = call signext i8 %23(%"class.icu_69::Normalizer2"* %19, i32 %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6) #9
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %7, i64 0, i32 0
  store i16* %2, i16** %27, align 8
  %28 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %6, %"class.icu_69::Char16Ptr"* nonnull %7, i32 %3, i32* dereferenceable(4) %4) #9
  %29 = load i16*, i16** %27, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %29) #9, !srcloc !6
  br label %30

30:                                               ; preds = %17, %26
  %31 = phi i32 [ %28, %26 ], [ -1, %17 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #9
  br label %32

32:                                               ; preds = %5, %30, %16
  %33 = phi i32 [ 0, %16 ], [ %31, %30 ], [ 0, %5 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_getRawDecomposition_69(%struct.UNormalizer2*, i32, i16*, i32, i32*) local_unnamed_addr #1 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::Char16Ptr", align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %32

10:                                               ; preds = %5
  %11 = icmp eq i16* %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %17, label %16

14:                                               ; preds = %10
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %14
  store i32 1, i32* %4, align 4
  br label %32

17:                                               ; preds = %12, %14
  %18 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6913UnicodeStringC1EPDsii(%"class.icu_69::UnicodeString"* nonnull %6, i16* %2, i32 0, i32 %3) #9
  %19 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %20 = bitcast %struct.UNormalizer2* %0 to i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)***
  %21 = load i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)**, i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)*** %20, align 8
  %22 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)*, i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)** %21, i64 8
  %23 = load i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)*, i8 (%"class.icu_69::Normalizer2"*, i32, %"class.icu_69::UnicodeString"*)** %22, align 8
  %24 = call signext i8 %23(%"class.icu_69::Normalizer2"* %19, i32 %1, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6) #9
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %7, i64 0, i32 0
  store i16* %2, i16** %27, align 8
  %28 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %6, %"class.icu_69::Char16Ptr"* nonnull %7, i32 %3, i32* dereferenceable(4) %4) #9
  %29 = load i16*, i16** %27, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %29) #9, !srcloc !6
  br label %30

30:                                               ; preds = %17, %26
  %31 = phi i32 [ %28, %26 ], [ -1, %17 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #9
  br label %32

32:                                               ; preds = %5, %30, %16
  %33 = phi i32 [ 0, %16 ], [ %31, %30 ], [ 0, %5 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_composePair_69(%struct.UNormalizer2*, i32, i32) local_unnamed_addr #1 {
  %4 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %5 = bitcast %struct.UNormalizer2* %0 to i32 (%"class.icu_69::Normalizer2"*, i32, i32)***
  %6 = load i32 (%"class.icu_69::Normalizer2"*, i32, i32)**, i32 (%"class.icu_69::Normalizer2"*, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.icu_69::Normalizer2"*, i32, i32)*, i32 (%"class.icu_69::Normalizer2"*, i32, i32)** %6, i64 9
  %8 = load i32 (%"class.icu_69::Normalizer2"*, i32, i32)*, i32 (%"class.icu_69::Normalizer2"*, i32, i32)** %7, align 8
  %9 = tail call i32 %8(%"class.icu_69::Normalizer2"* %4, i32 %1, i32 %2) #9
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @unorm2_getCombiningClass_69(%struct.UNormalizer2*, i32) local_unnamed_addr #1 {
  %3 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %4 = bitcast %struct.UNormalizer2* %0 to i8 (%"class.icu_69::Normalizer2"*, i32)***
  %5 = load i8 (%"class.icu_69::Normalizer2"*, i32)**, i8 (%"class.icu_69::Normalizer2"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %5, i64 10
  %7 = load i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %6, align 8
  %8 = tail call zeroext i8 %7(%"class.icu_69::Normalizer2"* %3, i32 %1) #9
  ret i8 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @unorm2_isNormalized_69(%struct.UNormalizer2*, i16*, i32, i32*) local_unnamed_addr #1 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %28

9:                                                ; preds = %4
  %10 = icmp eq i16* %1, null
  %11 = icmp ne i32 %2, 0
  %12 = and i1 %10, %11
  %13 = icmp slt i32 %2, -1
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 1, i32* %3, align 4
  br label %28

16:                                               ; preds = %9
  %17 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 64, i1 false)
  %18 = lshr i32 %2, 31
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  store i16* %1, i16** %20, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %5, i8 signext %19, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 %2) #9
  %21 = load i16*, i16** %20, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %21) #9, !srcloc !5
  %22 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %23 = bitcast %struct.UNormalizer2* %0 to i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)***
  %24 = load i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)**, i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*** %23, align 8
  %25 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %24, i64 11
  %26 = load i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i8 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %25, align 8
  %27 = call signext i8 %26(%"class.icu_69::Normalizer2"* %22, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32* dereferenceable(4) %3) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %17) #9
  br label %28

28:                                               ; preds = %4, %16, %15
  %29 = phi i8 [ 0, %15 ], [ %27, %16 ], [ 0, %4 ]
  ret i8 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_quickCheck_69(%struct.UNormalizer2*, i16*, i32, i32*) local_unnamed_addr #1 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %28

9:                                                ; preds = %4
  %10 = icmp eq i16* %1, null
  %11 = icmp ne i32 %2, 0
  %12 = and i1 %10, %11
  %13 = icmp slt i32 %2, -1
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 1, i32* %3, align 4
  br label %28

16:                                               ; preds = %9
  %17 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 64, i1 false)
  %18 = lshr i32 %2, 31
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  store i16* %1, i16** %20, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %5, i8 signext %19, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 %2) #9
  %21 = load i16*, i16** %20, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %21) #9, !srcloc !5
  %22 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %23 = bitcast %struct.UNormalizer2* %0 to i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)***
  %24 = load i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)**, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %24, i64 13
  %26 = load i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %25, align 8
  %27 = call i32 %26(%"class.icu_69::Normalizer2"* %22, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32* dereferenceable(4) %3) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %17) #9
  br label %28

28:                                               ; preds = %4, %16, %15
  %29 = phi i32 [ 0, %15 ], [ %27, %16 ], [ 0, %4 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_spanQuickCheckYes_69(%struct.UNormalizer2*, i16*, i32, i32*) local_unnamed_addr #1 {
  %5 = alloca %"class.icu_69::UnicodeString", align 8
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %28

9:                                                ; preds = %4
  %10 = icmp eq i16* %1, null
  %11 = icmp ne i32 %2, 0
  %12 = and i1 %10, %11
  %13 = icmp slt i32 %2, -1
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 1, i32* %3, align 4
  br label %28

16:                                               ; preds = %9
  %17 = bitcast %"class.icu_69::UnicodeString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 64, i1 false)
  %18 = lshr i32 %2, 31
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  store i16* %1, i16** %20, align 8
  call void @_ZN6icu_6913UnicodeStringC1EaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* nonnull %5, i8 signext %19, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 %2) #9
  %21 = load i16*, i16** %20, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %21) #9, !srcloc !5
  %22 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %23 = bitcast %struct.UNormalizer2* %0 to i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)***
  %24 = load i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)**, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %24, i64 14
  %26 = load i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)*, i32 (%"class.icu_69::Normalizer2"*, %"class.icu_69::UnicodeString"*, i32*)** %25, align 8
  %27 = call i32 %26(%"class.icu_69::Normalizer2"* %22, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %5, i32* dereferenceable(4) %3) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %17) #9
  br label %28

28:                                               ; preds = %4, %16, %15
  %29 = phi i32 [ 0, %15 ], [ %27, %16 ], [ 0, %4 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @unorm2_hasBoundaryBefore_69(%struct.UNormalizer2*, i32) local_unnamed_addr #1 {
  %3 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %4 = bitcast %struct.UNormalizer2* %0 to i8 (%"class.icu_69::Normalizer2"*, i32)***
  %5 = load i8 (%"class.icu_69::Normalizer2"*, i32)**, i8 (%"class.icu_69::Normalizer2"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %5, i64 15
  %7 = load i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %6, align 8
  %8 = tail call signext i8 %7(%"class.icu_69::Normalizer2"* %3, i32 %1) #9
  ret i8 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @unorm2_hasBoundaryAfter_69(%struct.UNormalizer2*, i32) local_unnamed_addr #1 {
  %3 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %4 = bitcast %struct.UNormalizer2* %0 to i8 (%"class.icu_69::Normalizer2"*, i32)***
  %5 = load i8 (%"class.icu_69::Normalizer2"*, i32)**, i8 (%"class.icu_69::Normalizer2"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %5, i64 16
  %7 = load i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %6, align 8
  %8 = tail call signext i8 %7(%"class.icu_69::Normalizer2"* %3, i32 %1) #9
  ret i8 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @unorm2_isInert_69(%struct.UNormalizer2*, i32) local_unnamed_addr #1 {
  %3 = bitcast %struct.UNormalizer2* %0 to %"class.icu_69::Normalizer2"*
  %4 = bitcast %struct.UNormalizer2* %0 to i8 (%"class.icu_69::Normalizer2"*, i32)***
  %5 = load i8 (%"class.icu_69::Normalizer2"*, i32)**, i8 (%"class.icu_69::Normalizer2"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %5, i64 17
  %7 = load i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %6, align 8
  %8 = tail call signext i8 %7(%"class.icu_69::Normalizer2"* %3, i32 %1) #9
  ret i8 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @u_getCombiningClass_69(i32) local_unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #9
  store i32 0, i32* %2, align 4
  %4 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %2) #9
  store %"struct.icu_69::Norm2AllModes"* %10, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %11 = load i32, i32* %2, align 4
  store i32 %11, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %18

12:                                               ; preds = %6, %1
  %13 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = load i32, i32* %2, align 4
  br label %18

17:                                               ; preds = %12
  store i32 %13, i32* %2, align 4
  br label %32

18:                                               ; preds = %15, %9
  %19 = phi i32 [ %16, %15 ], [ %11, %9 ]
  %20 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  %21 = icmp eq %"struct.icu_69::Norm2AllModes"* %20, null
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %20, i64 0, i32 2
  %23 = select i1 %21, %"class.icu_69::DecomposeNormalizer2"* null, %"class.icu_69::DecomposeNormalizer2"* %22
  %24 = icmp sgt i32 %19, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %23, i64 0, i32 0, i32 0
  %27 = bitcast %"class.icu_69::DecomposeNormalizer2"* %23 to i8 (%"class.icu_69::Normalizer2"*, i32)***
  %28 = load i8 (%"class.icu_69::Normalizer2"*, i32)**, i8 (%"class.icu_69::Normalizer2"*, i32)*** %27, align 8
  %29 = getelementptr inbounds i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %28, i64 10
  %30 = load i8 (%"class.icu_69::Normalizer2"*, i32)*, i8 (%"class.icu_69::Normalizer2"*, i32)** %29, align 8
  %31 = tail call zeroext i8 %30(%"class.icu_69::Normalizer2"* %26, i32 %0) #9
  br label %32

32:                                               ; preds = %17, %18, %25
  %33 = phi i8 [ %31, %25 ], [ 0, %18 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #9
  ret i8 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @unorm_getFCD16_69(i32) local_unnamed_addr #1 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #9
  store i32 0, i32* %2, align 4
  %4 = load atomic i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = call %"struct.icu_69::Norm2AllModes"* @_ZN6icu_6913Norm2AllModes17createNFCInstanceER10UErrorCode(i32* nonnull dereferenceable(4) %2) #9
  store %"struct.icu_69::Norm2AllModes"* %10, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  tail call void @ucln_common_registerCleanup_69(i32 15, i8 ()* nonnull @_ZN6icu_69L24uprv_normalizer2_cleanupEv) #9
  %11 = load i32, i32* %2, align 4
  store i32 %11, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) bitcast ({ { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE to %"struct.icu_69::UInitOnce"*)) #9
  br label %16

12:                                               ; preds = %6, %1
  %13 = load i32, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 1), align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  store i32 %13, i32* %2, align 4
  br label %16

16:                                               ; preds = %15, %12, %9
  %17 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  %18 = icmp eq %"struct.icu_69::Norm2AllModes"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %17, i64 0, i32 0
  %21 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi %"class.icu_69::Normalizer2Impl"* [ %21, %19 ], [ null, %16 ]
  %24 = load i32, i32* %2, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %23, i64 0, i32 1
  %28 = load i16, i16* %27, align 8
  %29 = zext i16 %28 to i32
  %30 = icmp sgt i32 %29, %0
  br i1 %30, label %50, label %31

31:                                               ; preds = %26
  %32 = icmp slt i32 %0, 65536
  br i1 %32, label %33, label %48

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %23, i64 0, i32 16
  %35 = load i8*, i8** %34, align 8
  %36 = ashr i32 %0, 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %33
  %42 = zext i8 %39 to i32
  %43 = lshr i32 %0, 5
  %44 = and i32 %43, 7
  %45 = shl i32 1, %44
  %46 = and i32 %45, %42
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %41, %31
  %49 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %23, i32 %0) #9
  br label %50

50:                                               ; preds = %48, %41, %33, %26, %22
  %51 = phi i16 [ 0, %22 ], [ %49, %48 ], [ 0, %26 ], [ 0, %41 ], [ 0, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #9
  ret i16 %51
}

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919Normalizer2WithImpl9normalizeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %2) #9
  br label %79

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %10, i64 0, i32 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = sext i16 %12 to i32
  %14 = and i32 %13, 17
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %27

16:                                               ; preds = %9
  %17 = and i32 %13, 2
  %18 = icmp eq i32 %17, 0
  %19 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %10 to %struct.anon*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %19, i64 0, i32 1, i64 0
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %22 = load i16*, i16** %21, align 8
  %23 = select i1 %18, i16* %22, i16* %20
  %24 = icmp eq %"class.icu_69::UnicodeString"* %2, %1
  %25 = icmp eq i16* %23, null
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %9, %16
  store i32 1, i32* %3, align 4
  tail call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %2) #9
  br label %79

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %30 = load i16, i16* %29, align 8
  %31 = and i16 %30, 1
  %32 = icmp eq i16 %31, 0
  %33 = and i16 %30, 31
  %34 = select i1 %32, i16 %33, i16 2
  store i16 %34, i16* %29, align 8
  %35 = bitcast %"class.icu_69::ReorderingBuffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 64, i1 false)
  %36 = getelementptr inbounds %"class.icu_69::Normalizer2WithImpl", %"class.icu_69::Normalizer2WithImpl"* %0, i64 0, i32 1
  %37 = bitcast %"class.icu_69::Normalizer2Impl"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.icu_69::ReorderingBuffer"* %5 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %2, %"class.icu_69::UnicodeString"** %40, align 8
  %41 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 2
  %42 = bitcast i16** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 29, i1 false) #9
  %43 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %44 = load i16, i16* %43, align 8
  %45 = icmp slt i16 %44, 0
  %46 = lshr i16 %44, 5
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = select i1 %45, i32 %49, i32 %47
  %51 = call signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %5, i32 %50, i32* dereferenceable(4) %3) #9
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %66, label %53

53:                                               ; preds = %28
  %54 = load i16, i16* %43, align 8
  %55 = icmp slt i16 %54, 0
  %56 = lshr i16 %54, 5
  %57 = zext i16 %56 to i32
  %58 = load i32, i32* %48, align 4
  %59 = select i1 %55, i32 %58, i32 %57
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %23, i64 %60
  %62 = bitcast %"class.icu_69::Normalizer2WithImpl"* %0 to void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)***
  %63 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)**, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)** %63, i64 18
  %65 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32*)** %64, align 8
  call void %65(%"class.icu_69::Normalizer2WithImpl"* %0, i16* nonnull %23, i16* %61, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %5, i32* dereferenceable(4) %3) #9
  br label %66

66:                                               ; preds = %28, %53
  %67 = load i16*, i16** %41, align 8
  %68 = icmp eq i16* %67, null
  br i1 %68, label %78, label %69

69:                                               ; preds = %66
  %70 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %40, align 8
  %71 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 4
  %72 = bitcast i16** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = ptrtoint i16* %67 to i64
  %75 = sub i64 %73, %74
  %76 = lshr exact i64 %75, 1
  %77 = trunc i64 %76 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %70, i32 %77) #9
  br label %78

78:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #9
  br label %79

79:                                               ; preds = %27, %78, %8
  ret %"class.icu_69::UnicodeString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode(%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_aR10UErrorCode(%"class.icu_69::Normalizer2WithImpl"* %0, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %2, i8 signext 1, i32* dereferenceable(4) %3)
  ret %"class.icu_69::UnicodeString"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919Normalizer2WithImpl6appendERNS_13UnicodeStringERKS1_R10UErrorCode(%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_aR10UErrorCode(%"class.icu_69::Normalizer2WithImpl"* %0, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %2, i8 signext 0, i32* dereferenceable(4) %3)
  ret %"class.icu_69::UnicodeString"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6919Normalizer2WithImpl16getDecompositionEiRNS_13UnicodeStringE(%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #1 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = bitcast i64* %4 to i16*
  %9 = bitcast i32* %5 to i8*
  store i64 -6148914691236517206, i64* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  store i32 -1431655766, i32* %5, align 4
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2WithImpl", %"class.icu_69::Normalizer2WithImpl"* %0, i64 0, i32 1
  %11 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %10, align 8
  %12 = call i16* @_ZNK6icu_6915Normalizer2Impl16getDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"* %11, i32 %1, i16* nonnull %8, i32* nonnull dereferenceable(4) %5) #9
  %13 = icmp eq i16* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %3
  %15 = icmp eq i16* %12, %8
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = load i32, i32* %5, align 4
  call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #9
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %19 = load i16, i16* %18, align 8
  %20 = icmp slt i16 %19, 0
  %21 = lshr i16 %19, 5
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = select i1 %20, i32 %24, i32 %22
  %26 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"* %2, i32 0, i32 %25, i16* nonnull %8, i32 0, i32 %17) #9
  br label %32

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  store i16* %12, i16** %28, align 8
  %29 = load i32, i32* %5, align 4
  %30 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString5setToEaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %2, i8 signext 0, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 %29) #9
  %31 = load i16*, i16** %28, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %31) #9, !srcloc !5
  br label %32

32:                                               ; preds = %16, %27, %3
  %33 = phi i8 [ 0, %3 ], [ 1, %27 ], [ 1, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret i8 %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6919Normalizer2WithImpl19getRawDecompositionEiRNS_13UnicodeStringE(%"class.icu_69::Normalizer2WithImpl"*, i32, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #1 comdat align 2 {
  %4 = alloca [30 x i16], align 16
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::ConstChar16Ptr", align 8
  %7 = bitcast [30 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 60, i1 false)
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  store i32 -1431655766, i32* %5, align 4
  %9 = getelementptr inbounds %"class.icu_69::Normalizer2WithImpl", %"class.icu_69::Normalizer2WithImpl"* %0, i64 0, i32 1
  %10 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %9, align 8
  %11 = getelementptr inbounds [30 x i16], [30 x i16]* %4, i64 0, i64 0
  %12 = call i16* @_ZNK6icu_6915Normalizer2Impl19getRawDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"* %10, i32 %1, i16* nonnull %11, i32* nonnull dereferenceable(4) %5) #9
  %13 = icmp eq i16* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %3
  %15 = icmp eq i16* %12, %11
  br i1 %15, label %16, label %27

16:                                               ; preds = %14
  %17 = load i32, i32* %5, align 4
  call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %2) #9
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %19 = load i16, i16* %18, align 8
  %20 = icmp slt i16 %19, 0
  %21 = lshr i16 %19, 5
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = select i1 %20, i32 %24, i32 %22
  %26 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"* %2, i32 0, i32 %25, i16* nonnull %11, i32 0, i32 %17) #9
  br label %32

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.icu_69::ConstChar16Ptr", %"class.icu_69::ConstChar16Ptr"* %6, i64 0, i32 0
  store i16* %12, i16** %28, align 8
  %29 = load i32, i32* %5, align 4
  %30 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString5setToEaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"* %2, i8 signext 0, %"class.icu_69::ConstChar16Ptr"* nonnull %6, i32 %29) #9
  %31 = load i16*, i16** %28, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %31) #9, !srcloc !5
  br label %32

32:                                               ; preds = %16, %27, %3
  %33 = phi i8 [ 0, %3 ], [ 1, %27 ], [ 1, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %7) #9
  ret i8 %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6919Normalizer2WithImpl11composePairEii(%"class.icu_69::Normalizer2WithImpl"*, i32, i32) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::Normalizer2WithImpl", %"class.icu_69::Normalizer2WithImpl"* %0, i64 0, i32 1
  %5 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %4, align 8
  %6 = tail call i32 @_ZNK6icu_6915Normalizer2Impl11composePairEii(%"class.icu_69::Normalizer2Impl"* %5, i32 %1, i32 %2) #9
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK6icu_6919Normalizer2WithImpl17getCombiningClassEi(%"class.icu_69::Normalizer2WithImpl"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2WithImpl", %"class.icu_69::Normalizer2WithImpl"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = and i32 %1, -1024
  %6 = icmp eq i32 %5, 55296
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 13
  %9 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  %10 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 1
  %11 = bitcast %union.UCPTrieData* %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = icmp ult i32 %1, 65536
  br i1 %13, label %14, label %24

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = lshr i32 %1, 6
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %16, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %1, 63
  %23 = add nuw nsw i32 %22, %21
  br label %40

24:                                               ; preds = %7
  %25 = icmp ult i32 %1, 1114112
  br i1 %25, label %26, label %36

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, -2
  br label %40

34:                                               ; preds = %26
  %35 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %9, i32 %1) #9
  br label %40

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, -1
  br label %40

40:                                               ; preds = %14, %30, %34, %36
  %41 = phi i32 [ %23, %14 ], [ %39, %36 ], [ %33, %30 ], [ %35, %34 ]
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %12, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = icmp ugt i16 %44, -1025
  br i1 %45, label %46, label %49

46:                                               ; preds = %40
  %47 = lshr i16 %44, 1
  %48 = trunc i16 %47 to i8
  br label %71

49:                                               ; preds = %2, %40
  %50 = phi i16 [ %44, %40 ], [ 1, %2 ]
  %51 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 6
  %52 = load i16, i16* %51, align 2
  %53 = icmp ugt i16 %52, %50
  br i1 %53, label %71, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 10
  %56 = load i16, i16* %55, align 2
  %57 = icmp ugt i16 %56, %50
  br i1 %57, label %58, label %71

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 15
  %60 = load i16*, i16** %59, align 8
  %61 = lshr i16 %50, 1
  %62 = zext i16 %61 to i64
  %63 = getelementptr inbounds i16, i16* %60, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = trunc i16 %64 to i8
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %58
  %68 = getelementptr inbounds i16, i16* %63, i64 -1
  %69 = load i16, i16* %68, align 2
  %70 = trunc i16 %69 to i8
  br label %71

71:                                               ; preds = %46, %49, %54, %58, %67
  %72 = phi i8 [ %48, %46 ], [ 0, %54 ], [ 0, %49 ], [ %70, %67 ], [ 0, %58 ]
  ret i8 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6919Normalizer2WithImpl12isNormalizedERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %39

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %7, i64 0, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = sext i16 %9 to i32
  %11 = and i32 %10, 17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %6
  %14 = and i32 %10, 2
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %7 to %struct.anon*
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %16, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %19 = load i16*, i16** %18, align 8
  %20 = select i1 %15, i16* %19, i16* %17
  %21 = icmp eq i16* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %6, %13
  store i32 1, i32* %2, align 4
  br label %39

23:                                               ; preds = %13
  %24 = icmp slt i16 %9, 0
  %25 = lshr i16 %9, 5
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = select i1 %24, i32 %28, i32 %26
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i16, i16* %20, i64 %30
  %32 = bitcast %"class.icu_69::Normalizer2WithImpl"* %0 to i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)***
  %33 = load i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)**, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*** %32, align 8
  %34 = getelementptr inbounds i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)** %33, i64 20
  %35 = load i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)** %34, align 8
  %36 = tail call i16* %35(%"class.icu_69::Normalizer2WithImpl"* %0, i16* nonnull %20, i16* %31, i32* dereferenceable(4) %2) #9
  %37 = icmp eq i16* %31, %36
  %38 = zext i1 %37 to i8
  br label %39

39:                                               ; preds = %22, %23, %3
  %40 = phi i8 [ 0, %3 ], [ 0, %22 ], [ %38, %23 ]
  ret i8 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6919Normalizer2WithImpl10quickCheckERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %39

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %7, i64 0, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = sext i16 %9 to i32
  %11 = and i32 %10, 17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %6
  %14 = and i32 %10, 2
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %7 to %struct.anon*
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %16, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %19 = load i16*, i16** %18, align 8
  %20 = select i1 %15, i16* %19, i16* %17
  %21 = icmp eq i16* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %13, %6
  store i32 1, i32* %2, align 4
  br label %39

23:                                               ; preds = %13
  %24 = icmp slt i16 %9, 0
  %25 = lshr i16 %9, 5
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = select i1 %24, i32 %28, i32 %26
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i16, i16* %20, i64 %30
  %32 = bitcast %"class.icu_69::Normalizer2WithImpl"* %0 to i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)***
  %33 = load i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)**, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*** %32, align 8
  %34 = getelementptr inbounds i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)** %33, i64 20
  %35 = load i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)** %34, align 8
  %36 = tail call i16* %35(%"class.icu_69::Normalizer2WithImpl"* %0, i16* nonnull %20, i16* %31, i32* dereferenceable(4) %2) #9
  %37 = icmp eq i16* %31, %36
  %38 = zext i1 %37 to i32
  br label %39

39:                                               ; preds = %3, %22, %23
  %40 = phi i32 [ 0, %3 ], [ 0, %22 ], [ %38, %23 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6919Normalizer2WithImpl17spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %42

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %7, i64 0, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = sext i16 %9 to i32
  %11 = and i32 %10, 17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %6
  %14 = and i32 %10, 2
  %15 = icmp eq i32 %14, 0
  %16 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %7 to %struct.anon*
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %16, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %19 = load i16*, i16** %18, align 8
  %20 = select i1 %15, i16* %19, i16* %17
  %21 = icmp eq i16* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %6, %13
  store i32 1, i32* %2, align 4
  br label %42

23:                                               ; preds = %13
  %24 = icmp slt i16 %9, 0
  %25 = lshr i16 %9, 5
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = select i1 %24, i32 %28, i32 %26
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i16, i16* %20, i64 %30
  %32 = bitcast %"class.icu_69::Normalizer2WithImpl"* %0 to i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)***
  %33 = load i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)**, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*** %32, align 8
  %34 = getelementptr inbounds i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)** %33, i64 20
  %35 = load i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)*, i16* (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i32*)** %34, align 8
  %36 = tail call i16* %35(%"class.icu_69::Normalizer2WithImpl"* %0, i16* nonnull %20, i16* %31, i32* dereferenceable(4) %2) #9
  %37 = ptrtoint i16* %36 to i64
  %38 = ptrtoint i16* %20 to i64
  %39 = sub i64 %37, %38
  %40 = lshr exact i64 %39, 1
  %41 = trunc i64 %40 to i32
  br label %42

42:                                               ; preds = %22, %23, %3
  %43 = phi i32 [ 0, %3 ], [ 0, %22 ], [ %41, %23 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6919Normalizer2WithImpl13getQuickCheckEi(%"class.icu_69::Normalizer2WithImpl"*, i32) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6920DecomposeNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::DecomposeNormalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %8 = load i32, i32* %6, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %7
  %11 = icmp ne %"class.icu_69::Edits"* %5, null
  %12 = and i32 %1, 8192
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %13, %11
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %5) #9
  br label %16

16:                                               ; preds = %10, %15
  %17 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %17, align 8
  %19 = sext i32 %3 to i64
  %20 = getelementptr inbounds i8, i8* %2, i64 %19
  %21 = tail call i8* @_ZNK6icu_6915Normalizer2Impl13decomposeUTF8EjPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %18, i32 %1, i8* %2, i8* %20, %"class.icu_69::ByteSink"* %4, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #9
  %22 = bitcast %"class.icu_69::ByteSink"* %4 to void (%"class.icu_69::ByteSink"*)***
  %23 = load void (%"class.icu_69::ByteSink"*)**, void (%"class.icu_69::ByteSink"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %23, i64 4
  %25 = load void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %24, align 8
  tail call void %25(%"class.icu_69::ByteSink"* %4) #9
  br label %26

26:                                               ; preds = %7, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6920DecomposeNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode(%"class.icu_69::DecomposeNormalizer2"*, i8*, i32, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %10, align 8
  %12 = tail call i8* @_ZNK6icu_6915Normalizer2Impl13decomposeUTF8EjPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %11, i32 0, i8* %1, i8* %9, %"class.icu_69::ByteSink"* null, %"class.icu_69::Edits"* null, i32* dereferenceable(4) %3) #9
  %13 = icmp eq i8* %9, %12
  %14 = zext i1 %13 to i8
  br label %15

15:                                               ; preds = %4, %7
  %16 = phi i8 [ %14, %7 ], [ 0, %4 ]
  ret i8 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6920DecomposeNormalizer217hasBoundaryBeforeEi(%"class.icu_69::DecomposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl23hasDecompBoundaryBeforeEi(%"class.icu_69::Normalizer2Impl"* %4, i32 %1) #9
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6920DecomposeNormalizer216hasBoundaryAfterEi(%"class.icu_69::DecomposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl22hasDecompBoundaryAfterEi(%"class.icu_69::Normalizer2Impl"* %4, i32 %1) #9
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6920DecomposeNormalizer27isInertEi(%"class.icu_69::DecomposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = and i32 %1, -1024
  %6 = icmp eq i32 %5, 55296
  br i1 %6, label %45, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 13
  %9 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  %10 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 1
  %11 = bitcast %union.UCPTrieData* %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = icmp ult i32 %1, 65536
  br i1 %13, label %14, label %24

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = lshr i32 %1, 6
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %16, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %1, 63
  %23 = add nuw nsw i32 %22, %21
  br label %40

24:                                               ; preds = %7
  %25 = icmp ult i32 %1, 1114112
  br i1 %25, label %26, label %36

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, -2
  br label %40

34:                                               ; preds = %26
  %35 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %9, i32 %1) #9
  br label %40

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, -1
  br label %40

40:                                               ; preds = %36, %34, %30, %14
  %41 = phi i32 [ %23, %14 ], [ %39, %36 ], [ %33, %30 ], [ %35, %34 ]
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %12, i64 %42
  %44 = load i16, i16* %43, align 2
  br label %45

45:                                               ; preds = %40, %2
  %46 = phi i16 [ %44, %40 ], [ 1, %2 ]
  %47 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 4
  %48 = load i16, i16* %47, align 2
  %49 = icmp ugt i16 %48, %46
  %50 = icmp eq i16 %46, -512
  %51 = or i1 %50, %49
  br i1 %51, label %59, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 12
  %54 = load i16, i16* %53, align 2
  %55 = icmp ule i16 %54, %46
  %56 = icmp ult i16 %46, -1023
  %57 = and i1 %56, %55
  %58 = zext i1 %57 to i8
  br label %59

59:                                               ; preds = %45, %52
  %60 = phi i8 [ 1, %45 ], [ %58, %52 ]
  ret i8 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6920DecomposeNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::DecomposeNormalizer2"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %6 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %6, align 8
  %8 = tail call i16* @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %7, i16* %1, i16* %2, %"class.icu_69::ReorderingBuffer"* %3, i32* dereferenceable(4) %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6920DecomposeNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::DecomposeNormalizer2"*, i16*, i16*, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %8 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %8, align 8
  tail call void @_ZNK6icu_6915Normalizer2Impl18decomposeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %9, i16* %1, i16* %2, i8 signext %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %4, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %5, i32* dereferenceable(4) %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNK6icu_6920DecomposeNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode(%"class.icu_69::DecomposeNormalizer2"*, i16*, i16*, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %5, align 8
  %7 = tail call i16* @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %6, i16* %1, i16* %2, %"class.icu_69::ReorderingBuffer"* null, i32* dereferenceable(4) %3) #9
  ret i16* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6920DecomposeNormalizer213getQuickCheckEi(%"class.icu_69::DecomposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::DecomposeNormalizer2", %"class.icu_69::DecomposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = and i32 %1, -1024
  %6 = icmp eq i32 %5, 55296
  br i1 %6, label %45, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 13
  %9 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  %10 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 1
  %11 = bitcast %union.UCPTrieData* %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = icmp ult i32 %1, 65536
  br i1 %13, label %14, label %24

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = lshr i32 %1, 6
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %16, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %1, 63
  %23 = add nuw nsw i32 %22, %21
  br label %40

24:                                               ; preds = %7
  %25 = icmp ult i32 %1, 1114112
  br i1 %25, label %26, label %36

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, -2
  br label %40

34:                                               ; preds = %26
  %35 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %9, i32 %1) #9
  br label %40

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, -1
  br label %40

40:                                               ; preds = %36, %34, %30, %14
  %41 = phi i32 [ %23, %14 ], [ %39, %36 ], [ %33, %30 ], [ %35, %34 ]
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %12, i64 %42
  %44 = load i16, i16* %43, align 2
  br label %45

45:                                               ; preds = %2, %40
  %46 = phi i16 [ %44, %40 ], [ 1, %2 ]
  %47 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 4
  %48 = load i16, i16* %47, align 2
  %49 = icmp ugt i16 %48, %46
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 12
  %52 = load i16, i16* %51, align 2
  %53 = icmp ule i16 %52, %46
  %54 = zext i1 %53 to i32
  br label %55

55:                                               ; preds = %45, %50
  %56 = phi i32 [ 1, %45 ], [ %54, %50 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6918ComposeNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::ComposeNormalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %8 = load i32, i32* %6, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %28

10:                                               ; preds = %7
  %11 = icmp ne %"class.icu_69::Edits"* %5, null
  %12 = and i32 %1, 8192
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %13, %11
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %5) #9
  br label %16

16:                                               ; preds = %10, %15
  %17 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %17, align 8
  %19 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = sext i32 %3 to i64
  %22 = getelementptr inbounds i8, i8* %2, i64 %21
  %23 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl11composeUTF8EjaPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %18, i32 %1, i8 signext %20, i8* %2, i8* %22, %"class.icu_69::ByteSink"* %4, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #9
  %24 = bitcast %"class.icu_69::ByteSink"* %4 to void (%"class.icu_69::ByteSink"*)***
  %25 = load void (%"class.icu_69::ByteSink"*)**, void (%"class.icu_69::ByteSink"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %25, i64 4
  %27 = load void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %26, align 8
  tail call void %27(%"class.icu_69::ByteSink"* %4) #9
  br label %28

28:                                               ; preds = %7, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6918ComposeNormalizer212isNormalizedERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::ComposeNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %68

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %9, i64 0, i32 0, i32 0
  %11 = load i16, i16* %10, align 8
  %12 = sext i16 %11 to i32
  %13 = and i32 %12, 17
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %8
  %16 = and i32 %12, 2
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %9 to %struct.anon*
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %18, i64 0, i32 1, i64 0
  %20 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %21 = load i16*, i16** %20, align 8
  %22 = select i1 %17, i16* %21, i16* %19
  %23 = icmp eq i16* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %8, %15
  store i32 1, i32* %2, align 4
  br label %68

25:                                               ; preds = %15
  %26 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 64, i1 false)
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %28, align 8
  %29 = bitcast %"class.icu_69::ReorderingBuffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 64, i1 false)
  %30 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %31 = bitcast %"class.icu_69::Normalizer2Impl"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.icu_69::ReorderingBuffer"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %4, %"class.icu_69::UnicodeString"** %34, align 8
  %35 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 2
  %36 = bitcast i16** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 29, i1 false) #9
  %37 = call signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %5, i32 5, i32* dereferenceable(4) %2) #9
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %54, label %39

39:                                               ; preds = %25
  %40 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %30, align 8
  %41 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %42 = load i16, i16* %41, align 8
  %43 = icmp slt i16 %42, 0
  %44 = lshr i16 %42, 5
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = select i1 %43, i32 %47, i32 %45
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %22, i64 %49
  %51 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %52 = load i8, i8* %51, align 8
  %53 = call signext i8 @_ZNK6icu_6915Normalizer2Impl7composeEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %40, i16* nonnull %22, i16* %50, i8 signext %52, i8 signext 0, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %5, i32* dereferenceable(4) %2) #9
  br label %54

54:                                               ; preds = %25, %39
  %55 = phi i8 [ %53, %39 ], [ 0, %25 ]
  %56 = load i16*, i16** %35, align 8
  %57 = icmp eq i16* %56, null
  br i1 %57, label %67, label %58

58:                                               ; preds = %54
  %59 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %34, align 8
  %60 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 4
  %61 = bitcast i16** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = ptrtoint i16* %56 to i64
  %64 = sub i64 %62, %63
  %65 = lshr exact i64 %64, 1
  %66 = trunc i64 %65 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %59, i32 %66) #9
  br label %67

67:                                               ; preds = %54, %58
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #9
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #9
  br label %68

68:                                               ; preds = %24, %67, %3
  %69 = phi i8 [ 0, %3 ], [ 0, %24 ], [ %55, %67 ]
  ret i8 %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6918ComposeNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode(%"class.icu_69::ComposeNormalizer2"*, i8*, i32, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl11composeUTF8EjaPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %9, i32 0, i8 signext %11, i8* %1, i8* %13, %"class.icu_69::ByteSink"* null, %"class.icu_69::Edits"* null, i32* dereferenceable(4) %3) #9
  br label %15

15:                                               ; preds = %4, %7
  %16 = phi i8 [ %14, %7 ], [ 0, %4 ]
  ret i8 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6918ComposeNormalizer210quickCheckERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::ComposeNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %40

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %8, i64 0, i32 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = sext i16 %10 to i32
  %12 = and i32 %11, 17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %7
  %15 = and i32 %11, 2
  %16 = icmp eq i32 %15, 0
  %17 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %8 to %struct.anon*
  %18 = getelementptr inbounds %struct.anon, %struct.anon* %17, i64 0, i32 1, i64 0
  %19 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %20 = load i16*, i16** %19, align 8
  %21 = select i1 %16, i16* %20, i16* %18
  %22 = icmp eq i16* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %7, %14
  store i32 1, i32* %2, align 4
  br label %40

24:                                               ; preds = %14
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  store i32 1, i32* %4, align 4
  %26 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %27 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %26, align 8
  %28 = icmp slt i16 %10, 0
  %29 = lshr i16 %10, 5
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = select i1 %28, i32 %32, i32 %30
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i16, i16* %21, i64 %34
  %36 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %37 = load i8, i8* %36, align 8
  %38 = call i16* @_ZNK6icu_6915Normalizer2Impl17composeQuickCheckEPKDsS2_aP25UNormalizationCheckResult(%"class.icu_69::Normalizer2Impl"* %27, i16* nonnull %21, i16* %35, i8 signext %37, i32* nonnull %4) #9
  %39 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  br label %40

40:                                               ; preds = %23, %24, %3
  %41 = phi i32 [ 2, %3 ], [ 2, %23 ], [ %39, %24 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6918ComposeNormalizer217hasBoundaryBeforeEi(%"class.icu_69::ComposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %64, label %9

9:                                                ; preds = %2
  %10 = and i32 %1, -1024
  %11 = icmp eq i32 %10, 55296
  br i1 %11, label %50, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 13
  %14 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 1
  %16 = bitcast %union.UCPTrieData* %15 to i16**
  %17 = load i16*, i16** %16, align 8
  %18 = icmp ult i32 %1, 65536
  br i1 %18, label %19, label %29

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = lshr i32 %1, 6
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %21, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = and i32 %1, 63
  %28 = add nuw nsw i32 %27, %26
  br label %45

29:                                               ; preds = %12
  %30 = icmp ult i32 %1, 1114112
  br i1 %30, label %31, label %41

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -2
  br label %45

39:                                               ; preds = %31
  %40 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %14, i32 %1) #9
  br label %45

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, -1
  br label %45

45:                                               ; preds = %41, %39, %35, %19
  %46 = phi i32 [ %28, %19 ], [ %44, %41 ], [ %38, %35 ], [ %40, %39 ]
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %17, i64 %47
  %49 = load i16, i16* %48, align 2
  br label %50

50:                                               ; preds = %45, %9
  %51 = phi i16 [ %49, %45 ], [ 1, %9 ]
  %52 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 8
  %53 = load i16, i16* %52, align 2
  %54 = icmp ugt i16 %53, %51
  br i1 %54, label %64, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 10
  %57 = load i16, i16* %56, align 2
  %58 = icmp ugt i16 %57, %51
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 12
  %61 = load i16, i16* %60, align 2
  %62 = icmp ugt i16 %61, %51
  %63 = zext i1 %62 to i8
  br label %64

64:                                               ; preds = %2, %50, %55, %59
  %65 = phi i8 [ 1, %2 ], [ 1, %50 ], [ 0, %55 ], [ %63, %59 ]
  ret i8 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6918ComposeNormalizer216hasBoundaryAfterEi(%"class.icu_69::ComposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = and i32 %1, -1024
  %8 = icmp eq i32 %7, 55296
  br i1 %8, label %49, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 13
  %11 = load %struct.UCPTrie*, %struct.UCPTrie** %10, align 8
  %12 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 1
  %13 = bitcast %union.UCPTrieData* %12 to i16**
  %14 = load i16*, i16** %13, align 8
  %15 = icmp ult i32 %1, 65536
  br i1 %15, label %16, label %26

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = lshr i32 %1, 6
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %18, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %1, 63
  %25 = add nuw nsw i32 %24, %23
  br label %42

26:                                               ; preds = %9
  %27 = icmp ult i32 %1, 1114112
  br i1 %27, label %28, label %38

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, %1
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, -2
  br label %42

36:                                               ; preds = %28
  %37 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %11, i32 %1) #9
  br label %42

38:                                               ; preds = %26
  %39 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, -1
  br label %42

42:                                               ; preds = %38, %36, %32, %16
  %43 = phi i32 [ %25, %16 ], [ %41, %38 ], [ %35, %32 ], [ %37, %36 ]
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i16, i16* %14, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = and i16 %46, 1
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %72, label %49

49:                                               ; preds = %42, %2
  %50 = phi i16 [ %46, %42 ], [ 1, %2 ]
  %51 = icmp eq i8 %6, 0
  br i1 %51, label %72, label %52

52:                                               ; preds = %49
  %53 = icmp eq i16 %50, 1
  br i1 %53, label %69, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 10
  %56 = load i16, i16* %55, align 2
  %57 = icmp ugt i16 %56, %50
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = and i16 %50, 6
  %60 = icmp ult i16 %59, 3
  br label %69

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 15
  %63 = load i16*, i16** %62, align 8
  %64 = lshr i16 %50, 1
  %65 = zext i16 %64 to i64
  %66 = getelementptr inbounds i16, i16* %63, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = icmp ult i16 %67, 512
  br label %69

69:                                               ; preds = %61, %58, %52
  %70 = phi i1 [ true, %52 ], [ %60, %58 ], [ %68, %61 ]
  %71 = zext i1 %70 to i8
  br label %72

72:                                               ; preds = %42, %49, %69
  %73 = phi i8 [ 0, %42 ], [ 1, %49 ], [ %71, %69 ]
  ret i8 %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6918ComposeNormalizer27isInertEi(%"class.icu_69::ComposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = and i32 %1, -1024
  %8 = icmp eq i32 %7, 55296
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 13
  %11 = load %struct.UCPTrie*, %struct.UCPTrie** %10, align 8
  %12 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 1
  %13 = bitcast %union.UCPTrieData* %12 to i16**
  %14 = load i16*, i16** %13, align 8
  %15 = icmp ult i32 %1, 65536
  br i1 %15, label %16, label %26

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = lshr i32 %1, 6
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %18, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = and i32 %1, 63
  %25 = add nuw nsw i32 %24, %23
  br label %42

26:                                               ; preds = %9
  %27 = icmp ult i32 %1, 1114112
  br i1 %27, label %28, label %38

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, %1
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, -2
  br label %42

36:                                               ; preds = %28
  %37 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %11, i32 %1) #9
  br label %42

38:                                               ; preds = %26
  %39 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %11, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, -1
  br label %42

42:                                               ; preds = %38, %36, %32, %16
  %43 = phi i32 [ %25, %16 ], [ %41, %38 ], [ %35, %32 ], [ %37, %36 ]
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i16, i16* %14, i64 %44
  %46 = load i16, i16* %45, align 2
  br label %47

47:                                               ; preds = %42, %2
  %48 = phi i16 [ %46, %42 ], [ 1, %2 ]
  %49 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 6
  %50 = load i16, i16* %49, align 2
  %51 = icmp ule i16 %50, %48
  %52 = and i16 %48, 1
  %53 = icmp eq i16 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %68, label %55

55:                                               ; preds = %47
  %56 = icmp eq i8 %6, 0
  %57 = icmp eq i16 %48, 1
  %58 = or i1 %56, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 15
  %61 = load i16*, i16** %60, align 8
  %62 = lshr i16 %48, 1
  %63 = zext i16 %62 to i64
  %64 = getelementptr inbounds i16, i16* %61, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = icmp ult i16 %65, 512
  %67 = zext i1 %66 to i8
  br label %68

68:                                               ; preds = %47, %55, %59
  %69 = phi i8 [ 0, %47 ], [ 1, %55 ], [ %67, %59 ]
  ret i8 %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6918ComposeNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::ComposeNormalizer2"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %6 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl7composeEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %7, i16* %1, i16* %2, i8 signext %9, i8 signext 1, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %3, i32* dereferenceable(4) %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6918ComposeNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::ComposeNormalizer2"*, i16*, i16*, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %8 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8
  tail call void @_ZNK6icu_6915Normalizer2Impl16composeAndAppendEPKDsS2_aaRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %9, i16* %1, i16* %2, i8 signext %3, i8 signext %11, %"class.icu_69::UnicodeString"* dereferenceable(64) %4, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %5, i32* dereferenceable(4) %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNK6icu_6918ComposeNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode(%"class.icu_69::ComposeNormalizer2"*, i16*, i16*, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8
  %9 = tail call i16* @_ZNK6icu_6915Normalizer2Impl17composeQuickCheckEPKDsS2_aP25UNormalizationCheckResult(%"class.icu_69::Normalizer2Impl"* %6, i16* %1, i16* %2, i8 signext %8, i32* null) #9
  ret i16* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6918ComposeNormalizer213getQuickCheckEi(%"class.icu_69::ComposeNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::ComposeNormalizer2", %"class.icu_69::ComposeNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = and i32 %1, -1024
  %6 = icmp eq i32 %5, 55296
  br i1 %6, label %45, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 13
  %9 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  %10 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 1
  %11 = bitcast %union.UCPTrieData* %10 to i16**
  %12 = load i16*, i16** %11, align 8
  %13 = icmp ult i32 %1, 65536
  br i1 %13, label %14, label %24

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = lshr i32 %1, 6
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %16, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %1, 63
  %23 = add nuw nsw i32 %22, %21
  br label %40

24:                                               ; preds = %7
  %25 = icmp ult i32 %1, 1114112
  br i1 %25, label %26, label %36

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, -2
  br label %40

34:                                               ; preds = %26
  %35 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %9, i32 %1) #9
  br label %40

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %9, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, -1
  br label %40

40:                                               ; preds = %36, %34, %30, %14
  %41 = phi i32 [ %23, %14 ], [ %39, %36 ], [ %33, %30 ], [ %35, %34 ]
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %12, i64 %42
  %44 = load i16, i16* %43, align 2
  br label %45

45:                                               ; preds = %2, %40
  %46 = phi i16 [ %44, %40 ], [ 1, %2 ]
  %47 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 6
  %48 = load i16, i16* %47, align 2
  %49 = icmp ugt i16 %48, %46
  %50 = icmp ugt i16 %46, -511
  %51 = or i1 %50, %49
  br i1 %51, label %57, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 12
  %54 = load i16, i16* %53, align 2
  %55 = icmp ugt i16 %54, %46
  %56 = select i1 %55, i32 0, i32 2
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi i32 [ 1, %45 ], [ %56, %52 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6914FCDNormalizer217hasBoundaryBeforeEi(%"class.icu_69::FCDNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl23hasDecompBoundaryBeforeEi(%"class.icu_69::Normalizer2Impl"* %4, i32 %1) #9
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6914FCDNormalizer216hasBoundaryAfterEi(%"class.icu_69::FCDNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl22hasDecompBoundaryAfterEi(%"class.icu_69::Normalizer2Impl"* %4, i32 %1) #9
  ret i8 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6914FCDNormalizer27isInertEi(%"class.icu_69::FCDNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 1
  %6 = load i16, i16* %5, align 8
  %7 = zext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = icmp slt i32 %1, 65536
  br i1 %10, label %11, label %26

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %4, i64 0, i32 16
  %13 = load i8*, i8** %12, align 8
  %14 = ashr i32 %1, 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %11
  %20 = zext i8 %17 to i32
  %21 = lshr i32 %1, 5
  %22 = and i32 %21, 7
  %23 = shl i32 1, %22
  %24 = and i32 %23, %20
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %19, %9
  %27 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %4, i32 %1) #9
  %28 = icmp ult i16 %27, 2
  %29 = zext i1 %28 to i8
  br label %30

30:                                               ; preds = %2, %11, %19, %26
  %31 = phi i8 [ %29, %26 ], [ 1, %2 ], [ 1, %19 ], [ 1, %11 ]
  ret i8 %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6914FCDNormalizer29normalizeEPKDsS2_RNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::FCDNormalizer2"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %6 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %6, align 8
  %8 = tail call i16* @_ZNK6icu_6915Normalizer2Impl7makeFCDEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %7, i16* %1, i16* %2, %"class.icu_69::ReorderingBuffer"* %3, i32* dereferenceable(4) %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6914FCDNormalizer218normalizeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::FCDNormalizer2"*, i16*, i16*, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %8 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %8, align 8
  tail call void @_ZNK6icu_6915Normalizer2Impl16makeFCDAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %9, i16* %1, i16* %2, i8 signext %3, %"class.icu_69::UnicodeString"* dereferenceable(64) %4, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %5, i32* dereferenceable(4) %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNK6icu_6914FCDNormalizer217spanQuickCheckYesEPKDsS2_R10UErrorCode(%"class.icu_69::FCDNormalizer2"*, i16*, i16*, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::FCDNormalizer2", %"class.icu_69::FCDNormalizer2"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %5, align 8
  %7 = tail call i16* @_ZNK6icu_6915Normalizer2Impl7makeFCDEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %6, i16* %1, i16* %2, %"class.icu_69::ReorderingBuffer"* null, i32* dereferenceable(4) %3) #9
  ret i16* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915NoopNormalizer29normalizeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = icmp eq %"class.icu_69::UnicodeString"* %2, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"* %2, %"class.icu_69::UnicodeString"* dereferenceable(64) %1) #9
  br label %12

11:                                               ; preds = %7
  store i32 1, i32* %3, align 4
  br label %12

12:                                               ; preds = %4, %9, %11
  ret %"class.icu_69::UnicodeString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6icu_6915NoopNormalizer213normalizeUTF8EjNS_11StringPieceERNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::NoopNormalizer2"*, i32, i8*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %8 = load i32, i32* %6, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %30, label %10

10:                                               ; preds = %7
  %11 = icmp eq %"class.icu_69::Edits"* %5, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = and i32 %1, 8192
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"* nonnull %5) #9
  br label %16

16:                                               ; preds = %15, %12
  tail call void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"* nonnull %5, i32 %3) #9
  br label %17

17:                                               ; preds = %10, %16
  %18 = and i32 %1, 16384
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %17
  %21 = bitcast %"class.icu_69::ByteSink"* %4 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %22 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %22, i64 2
  %24 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %23, align 8
  tail call void %24(%"class.icu_69::ByteSink"* %4, i8* %2, i32 %3) #9
  br label %25

25:                                               ; preds = %20, %17
  %26 = bitcast %"class.icu_69::ByteSink"* %4 to void (%"class.icu_69::ByteSink"*)***
  %27 = load void (%"class.icu_69::ByteSink"*)**, void (%"class.icu_69::ByteSink"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %27, i64 4
  %29 = load void (%"class.icu_69::ByteSink"*)*, void (%"class.icu_69::ByteSink"*)** %28, align 8
  tail call void %29(%"class.icu_69::ByteSink"* %4) #9
  br label %30

30:                                               ; preds = %7, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915NoopNormalizer224normalizeSecondAndAppendERNS_13UnicodeStringERKS1_R10UErrorCode(%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %4
  %8 = icmp eq %"class.icu_69::UnicodeString"* %1, %2
  br i1 %8, label %19, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %11 = load i16, i16* %10, align 8
  %12 = icmp slt i16 %11, 0
  %13 = lshr i16 %11, 5
  %14 = zext i16 %13 to i32
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = select i1 %12, i32 %16, i32 %14
  %18 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %2, i32 0, i32 %17) #9
  br label %20

19:                                               ; preds = %7
  store i32 1, i32* %3, align 4
  br label %20

20:                                               ; preds = %4, %9, %19
  ret %"class.icu_69::UnicodeString"* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915NoopNormalizer26appendERNS_13UnicodeStringERKS1_R10UErrorCode(%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %4
  %8 = icmp eq %"class.icu_69::UnicodeString"* %1, %2
  br i1 %8, label %19, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %11 = load i16, i16* %10, align 8
  %12 = icmp slt i16 %11, 0
  %13 = lshr i16 %11, 5
  %14 = zext i16 %13 to i32
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = select i1 %12, i32 %16, i32 %14
  %18 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"* dereferenceable(64) %2, i32 0, i32 %17) #9
  br label %20

19:                                               ; preds = %7
  store i32 1, i32* %3, align 4
  br label %20

20:                                               ; preds = %4, %9, %19
  ret %"class.icu_69::UnicodeString"* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6915NoopNormalizer216getDecompositionEiRNS_13UnicodeStringE(%"class.icu_69::NoopNormalizer2"*, i32, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #1 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6915NoopNormalizer212isNormalizedERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  %6 = zext i1 %5 to i8
  ret i8 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6915NoopNormalizer216isNormalizedUTF8ENS_11StringPieceER10UErrorCode(%"class.icu_69::NoopNormalizer2"*, i8*, i32, i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  %7 = zext i1 %6 to i8
  ret i8 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6915NoopNormalizer210quickCheckERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6915NoopNormalizer217spanQuickCheckYesERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::NoopNormalizer2"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* dereferenceable(4)) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp slt i16 %5, 0
  %7 = lshr i16 %5, 5
  %8 = zext i16 %7 to i32
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = select i1 %6, i32 %10, i32 %8
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6915NoopNormalizer217hasBoundaryBeforeEi(%"class.icu_69::NoopNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6915NoopNormalizer216hasBoundaryAfterEi(%"class.icu_69::NoopNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6915NoopNormalizer27isInertEi(%"class.icu_69::NoopNormalizer2"*, i32) unnamed_addr #1 comdat align 2 {
  ret i8 1
}

declare signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #5

declare void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #5

declare void @ucln_common_registerCleanup_69(i32, i8 ()*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal signext i8 @_ZN6icu_69L24uprv_normalizer2_cleanupEv() #1 {
  %1 = load %"class.icu_69::Normalizer2"*, %"class.icu_69::Normalizer2"** @_ZN6icu_69L13noopSingletonE, align 8
  %2 = icmp eq %"class.icu_69::Normalizer2"* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = bitcast %"class.icu_69::Normalizer2"* %1 to void (%"class.icu_69::Normalizer2"*)***
  %5 = load void (%"class.icu_69::Normalizer2"*)**, void (%"class.icu_69::Normalizer2"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.icu_69::Normalizer2"*)*, void (%"class.icu_69::Normalizer2"*)** %5, i64 1
  %7 = load void (%"class.icu_69::Normalizer2"*)*, void (%"class.icu_69::Normalizer2"*)** %6, align 8
  tail call void %7(%"class.icu_69::Normalizer2"* nonnull %1) #9
  br label %8

8:                                                ; preds = %3, %0
  store %"class.icu_69::Normalizer2"* null, %"class.icu_69::Normalizer2"** @_ZN6icu_69L13noopSingletonE, align 8
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L12noopInitOnceE, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  %9 = load %"struct.icu_69::Norm2AllModes"*, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  %10 = icmp eq %"struct.icu_69::Norm2AllModes"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %9, i64 0, i32 0
  %13 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %12, align 8
  %14 = icmp eq %"class.icu_69::Normalizer2Impl"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.icu_69::Normalizer2Impl"* %13 to void (%"class.icu_69::Normalizer2Impl"*)***
  %17 = load void (%"class.icu_69::Normalizer2Impl"*)**, void (%"class.icu_69::Normalizer2Impl"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %17, i64 1
  %19 = load void (%"class.icu_69::Normalizer2Impl"*)*, void (%"class.icu_69::Normalizer2Impl"*)** %18, align 8
  tail call void %19(%"class.icu_69::Normalizer2Impl"* nonnull %13) #9
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %21) #9
  %22 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %22) #9
  %23 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %23) #9
  %24 = getelementptr inbounds %"struct.icu_69::Norm2AllModes", %"struct.icu_69::Norm2AllModes"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %24) #9
  %25 = bitcast %"struct.icu_69::Norm2AllModes"* %9 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %25) #9
  br label %26

26:                                               ; preds = %20, %8
  store %"struct.icu_69::Norm2AllModes"* null, %"struct.icu_69::Norm2AllModes"** @_ZN6icu_69L12nfcSingletonE, align 8
  store atomic i32 0, i32* getelementptr inbounds ({ { { i32 } }, i32 }, { { { i32 } }, i32 }* @_ZN6icu_69L11nfcInitOnceE, i64 0, i32 0, i32 0, i32 0) seq_cst, align 4
  ret i8 1
}

declare void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #5

declare void @_ZNK6icu_6913UnicodeString9doExtractEiiPDsi(%"class.icu_69::UnicodeString"*, i32, i32, i16*, i32) local_unnamed_addr #5

declare zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"*, i32) local_unnamed_addr #5

declare void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6919Normalizer2WithImpl24normalizeSecondAndAppendERNS_13UnicodeStringERKS1_aR10UErrorCode(%"class.icu_69::Normalizer2WithImpl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* dereferenceable(64), i8 signext, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %104, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  store i32 1, i32* %4, align 4
  br label %104

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %17, i64 0, i32 0, i32 0
  %19 = load i16, i16* %18, align 8
  %20 = sext i16 %19 to i32
  %21 = and i32 %20, 17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %34

23:                                               ; preds = %16
  %24 = and i32 %20, 2
  %25 = icmp eq i32 %24, 0
  %26 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %17 to %struct.anon*
  %27 = getelementptr inbounds %struct.anon, %struct.anon* %26, i64 0, i32 1, i64 0
  %28 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 3
  %29 = load i16*, i16** %28, align 8
  %30 = select i1 %25, i16* %29, i16* %27
  %31 = icmp eq %"class.icu_69::UnicodeString"* %1, %2
  %32 = icmp eq i16* %30, null
  %33 = or i1 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %16, %23
  store i32 1, i32* %4, align 4
  br label %104

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %37 = load i16, i16* %36, align 8
  %38 = icmp slt i16 %37, 0
  %39 = lshr i16 %37, 5
  %40 = zext i16 %39 to i32
  %41 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = select i1 %38, i32 %42, i32 %40
  %44 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 64, i1 false)
  %45 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %46, align 8
  %47 = bitcast %"class.icu_69::ReorderingBuffer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %47) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 64, i1 false)
  %48 = getelementptr inbounds %"class.icu_69::Normalizer2WithImpl", %"class.icu_69::Normalizer2WithImpl"* %0, i64 0, i32 1
  %49 = bitcast %"class.icu_69::Normalizer2Impl"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.icu_69::ReorderingBuffer"* %7 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %7, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %1, %"class.icu_69::UnicodeString"** %52, align 8
  %53 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %7, i64 0, i32 2
  %54 = bitcast i16** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 29, i1 false) #9
  %55 = icmp slt i16 %19, 0
  %56 = lshr i16 %19, 5
  %57 = zext i16 %56 to i32
  %58 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = select i1 %55, i32 %59, i32 %57
  %61 = add nsw i32 %60, %43
  %62 = call signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %7, i32 %61, i32* dereferenceable(4) %4) #9
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %78, label %64

64:                                               ; preds = %35
  %65 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %66 = load i16, i16* %65, align 8
  %67 = icmp slt i16 %66, 0
  %68 = lshr i16 %66, 5
  %69 = zext i16 %68 to i32
  %70 = load i32, i32* %58, align 4
  %71 = select i1 %67, i32 %70, i32 %69
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %30, i64 %72
  %74 = bitcast %"class.icu_69::Normalizer2WithImpl"* %0 to void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)***
  %75 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)**, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)** %75, i64 19
  %77 = load void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)*, void (%"class.icu_69::Normalizer2WithImpl"*, i16*, i16*, i8, %"class.icu_69::UnicodeString"*, %"class.icu_69::ReorderingBuffer"*, i32*)** %76, align 8
  call void %77(%"class.icu_69::Normalizer2WithImpl"* %0, i16* nonnull %30, i16* %73, i8 signext %3, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %7, i32* dereferenceable(4) %4) #9
  br label %78

78:                                               ; preds = %35, %64
  %79 = load i16*, i16** %53, align 8
  %80 = icmp eq i16* %79, null
  br i1 %80, label %90, label %81

81:                                               ; preds = %78
  %82 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %52, align 8
  %83 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %7, i64 0, i32 4
  %84 = bitcast i16** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint i16* %79 to i64
  %87 = sub i64 %85, %86
  %88 = lshr exact i64 %87, 1
  %89 = trunc i64 %88 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %82, i32 %89) #9
  br label %90

90:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %47) #9
  %91 = load i32, i32* %4, align 4
  %92 = icmp slt i32 %91, 1
  br i1 %92, label %103, label %93

93:                                               ; preds = %90
  %94 = load i16, i16* %46, align 8
  %95 = icmp slt i16 %94, 0
  %96 = lshr i16 %94, 5
  %97 = zext i16 %96 to i32
  %98 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %6, i64 0, i32 1, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = select i1 %95, i32 %99, i32 %97
  %101 = sub nsw i32 %43, %100
  %102 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiRKS0_ii(%"class.icu_69::UnicodeString"* %1, i32 %101, i32 2147483647, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %6, i32 0, i32 %100) #9
  br label %103

103:                                              ; preds = %90, %93
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %44) #9
  br label %104

104:                                              ; preds = %15, %5, %34, %103
  ret %"class.icu_69::UnicodeString"* %1
}

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiRKS0_ii(%"class.icu_69::UnicodeString"*, i32, i32, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32) local_unnamed_addr #5

declare i16* @_ZNK6icu_6915Normalizer2Impl16getDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"*, i32, i16*, i32* dereferenceable(4)) local_unnamed_addr #5

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString5setToEaNS_14ConstChar16PtrEi(%"class.icu_69::UnicodeString"*, i8 signext, %"class.icu_69::ConstChar16Ptr"*, i32) local_unnamed_addr #5

declare void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"*) local_unnamed_addr #5

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"*, i32, i32, i16*, i32, i32) local_unnamed_addr #5

declare i16* @_ZNK6icu_6915Normalizer2Impl19getRawDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"*, i32, i16*, i32* dereferenceable(4)) local_unnamed_addr #5

declare i32 @_ZNK6icu_6915Normalizer2Impl11composePairEii(%"class.icu_69::Normalizer2Impl"*, i32, i32) local_unnamed_addr #5

declare i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_695Edits5resetEv(%"class.icu_69::Edits"*) local_unnamed_addr #0

declare i8* @_ZNK6icu_6915Normalizer2Impl13decomposeUTF8EjPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i32, i8*, i8*, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #5

declare signext i8 @_ZNK6icu_6915Normalizer2Impl23hasDecompBoundaryBeforeEi(%"class.icu_69::Normalizer2Impl"*, i32) local_unnamed_addr #5

declare signext i8 @_ZNK6icu_6915Normalizer2Impl22hasDecompBoundaryAfterEi(%"class.icu_69::Normalizer2Impl"*, i32) local_unnamed_addr #5

declare i16* @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32* dereferenceable(4)) local_unnamed_addr #5

declare void @_ZNK6icu_6915Normalizer2Impl18decomposeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #5

declare signext i8 @_ZNK6icu_6915Normalizer2Impl11composeUTF8EjaPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i32, i8 signext, i8*, i8*, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #5

declare signext i8 @_ZNK6icu_6915Normalizer2Impl7composeEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, i8 signext, i8 signext, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #5

declare i16* @_ZNK6icu_6915Normalizer2Impl17composeQuickCheckEPKDsS2_aP25UNormalizationCheckResult(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, i8 signext, i32*) local_unnamed_addr #5

declare void @_ZNK6icu_6915Normalizer2Impl16composeAndAppendEPKDsS2_aaRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, i8 signext, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #5

declare i16* @_ZNK6icu_6915Normalizer2Impl7makeFCDEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32* dereferenceable(4)) local_unnamed_addr #5

declare void @_ZNK6icu_6915Normalizer2Impl16makeFCDAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #5

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #5

declare void @_ZN6icu_695Edits12addUnchangedEi(%"class.icu_69::Edits"*, i32) local_unnamed_addr #5

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendERKS0_ii(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32) local_unnamed_addr #5

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK6icu_6911Normalizer29normalizeERKNS_13UnicodeStringER10UErrorCode: argument 0"}
!4 = distinct !{!4, !"_ZNK6icu_6911Normalizer29normalizeERKNS_13UnicodeStringER10UErrorCode"}
!5 = !{i32 -2144119332}
!6 = !{i32 -2144119435}
