; ModuleID = '../../ui/aura/window_occlusion_tracker.cc'
source_filename = "../../ui/aura/window_occlusion_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.aura::WindowOcclusionTracker::ScopedPause" = type { i8 }
%"class.aura::WindowOcclusionTracker::ScopedExclude" = type { %"class.aura::WindowObserver", %"class.aura::Window"* }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.445", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::vector.173", i32, i32, i32, [4 x i8], %"class.base::ObserverList.464", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.468", %"class.base::WeakPtr.474" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.113", %"class.ui::Layer"*, %"class.base::ObserverList.391" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type { %"class.ui::LayerAnimationDelegate", %"class.cc::ContentLayerClient", %"class.cc::TextureLayerClient", i32, %"class.ui::Compositor"*, %"class.ui::Layer"*, %"class.std::__1::vector.299", %"class.std::__1::vector.306", %"class.ui::Layer"*, %"class.base::internal::flat_tree.314", i8, i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.315", i8, i8, i8, i8, %"class.cc::Region", %"class.cc::Region", float, float, float, float, i8, float, %"class.ui::Layer"*, %"class.ui::Layer"*, float, i32, %"class.std::__1::unique_ptr.321", %"class.std::__1::basic_string", %"class.ui::LayerDelegate"*, %"class.base::ObserverList.327", %"class.ui::LayerOwner"*, %class.scoped_refptr.331, %class.scoped_refptr.357, %class.scoped_refptr.358, %class.scoped_refptr.359, %class.scoped_refptr.360, %class.scoped_refptr.361, %class.scoped_refptr.362, %"class.cc::Layer"*, float, %"class.gfx::ImageSkia", %"class.gfx::Rect", %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.gfx::Size", i32, i32, float, i32, %"class.base::WeakPtrFactory.387" }
%"class.ui::LayerAnimationDelegate" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.ui::Compositor" = type { %"class.cc::LayerTreeHostClient", %"class.cc::LayerTreeHostSingleThreadClient", %"class.viz::HostFrameSinkClient", %"class.ui::ThroughputTrackerHost", %"class.gfx::Size", %"class.ui::ContextFactory"*, %"class.viz::mojom::DisplayPrivate"*, %"class.viz::mojom::ExternalBeginFrameController"*, %"class.std::__1::unique_ptr.116", %"class.ui::Layer"*, %"class.base::ObserverList.122", %"class.base::ObserverList.126", i32, i32, float, [4 x i8], %"class.std::__1::unordered_set", i8, i8, %"class.viz::FrameSinkId", %class.scoped_refptr.149, %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.base::WeakPtr.241", %class.scoped_refptr.242, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, i8, float, %"class.ui::LayerAnimatorCollection", %class.scoped_refptr.254, %"class.std::__1::unique_ptr.255", %class.SkMatrix44, %"class.gfx::DisplayColorSpaces", i8, i8, %"class.ui::CompositorLockManager", %"class.std::__1::unique_ptr.282", i8, i64, %"class.base::flat_map.288", %"class.base::WeakPtrFactory.298", %"class.base::WeakPtrFactory.298" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSingleThreadClient" = type { i32 (...)** }
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.ui::ContextFactory" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivate" = type opaque
%"class.viz::mojom::ExternalBeginFrameController" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.ui::PendingBeginFrameArgs"* }
%"struct.ui::PendingBeginFrameArgs" = type opaque
%"class.base::ObserverList.122" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList.123", i64, i32, [4 x i8] }>
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.29" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.123" = type { %"class.base::LinkNode.124" }
%"class.base::LinkNode.124" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.126" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList.127", i64, i32, [4 x i8] }>
%"class.base::LinkedList.127" = type { %"class.base::LinkNode.128" }
%"class.base::LinkNode.128" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { float }
%class.scoped_refptr.149 = type { %"class.cc::Layer"* }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.cc::AnimationHost"* }
%"class.cc::AnimationHost" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.cc::LayerTreeHost"* }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.521", %class.scoped_refptr.522, %"class.std::__1::unique_ptr.523", i32, %"class.std::__1::unique_ptr.529", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.535", %"class.std::__1::unique_ptr.541", i32, %"class.std::__1::unique_ptr.547", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.571", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.149, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.586", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.734, %"class.base::flat_map.735", %"class.base::internal::flat_tree.745", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.776", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.802", %"class.std::__1::unordered_map.810", %"class.std::__1::vector.834", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.843", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.864", %"class.std::__1::vector.870", %"class.base::flat_map.878", %"class.base::WeakPtrFactory.888" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.513", %class.scoped_refptr.242 }
%"class.std::__1::vector.513" = type { %"class.std::__1::__vector_base.514" }
%"class.std::__1::__vector_base.514" = type { %"class.std::__1::unique_ptr.515"*, %"class.std::__1::unique_ptr.515"*, %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::unique_ptr.515" = type opaque
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.std::__1::unique_ptr.515"* }
%"class.base::WeakPtr.521" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.522 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.243" }>
%"class.base::RefCountedThreadSafe.243" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.242, %class.scoped_refptr.242 }
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.553", %"class.std::__1::set.561" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.std::__1::unique_ptr.555"*, %"class.std::__1::unique_ptr.555"*, %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.std::__1::unique_ptr.555"* }
%"class.std::__1::set.561" = type { %"class.std::__1::__tree.562" }
%"class.std::__1::__tree.562" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.574, %class.scoped_refptr.575, %class.scoped_refptr.242, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.576", i64, %"class.base::WeakPtrFactory.582" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.574 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.575 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory.582" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.592", %"class.base::flat_map.592", %"class.base::flat_map.592", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.592" = type { %"class.base::internal::flat_tree.593" }
%"class.base::internal::flat_tree.593" = type { %"class.std::__1::vector.594" }
%"class.std::__1::vector.594" = type { %"class.std::__1::__vector_base.595" }
%"class.std::__1::__vector_base.595" = type { %"struct.std::__1::pair.596"*, %"struct.std::__1::pair.596"*, %"class.std::__1::__compressed_pair.597" }
%"struct.std::__1::pair.596" = type opaque
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::pair.596"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.609", %"class.std::__1::vector.616", %"class.std::__1::vector.623" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.602", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.602" = type { %"class.std::__1::__vector_base.603" }
%"class.std::__1::__vector_base.603" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.604" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.609" = type { %"class.std::__1::__vector_base.610" }
%"class.std::__1::__vector_base.610" = type { i32*, i32*, %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { i32* }
%"class.std::__1::vector.616" = type { %"class.std::__1::__vector_base.617" }
%"class.std::__1::__vector_base.617" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.618" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.623" = type { %"class.std::__1::__vector_base.624" }
%"class.std::__1::__vector_base.624" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.625" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.630", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.669" }
%"class.cc::PropertyTree.630" = type { i32 (...)**, %"class.std::__1::vector.631", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.631" = type { %"class.std::__1::__vector_base.632" }
%"class.std::__1::__vector_base.632" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.641" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.185", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.170" }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.180" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.173", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.172, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.172 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.185" = type { %"class.absl::optional_internal::optional_data.186" }
%"class.absl::optional_internal::optional_data.186" = type { %"class.absl::optional_internal::optional_data_base.187" }
%"class.absl::optional_internal::optional_data_base.187" = type { %"class.absl::optional_internal::optional_data_dtor_base.188" }
%"class.absl::optional_internal::optional_data_dtor_base.188" = type { i8, %union.anon.189 }
%union.anon.189 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.633" }
%"class.base::internal::flat_tree.633" = type { %"class.std::__1::vector.634" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { i32*, i32*, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { i32* }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.646" }
%"class.std::__1::__hash_table.646" = type <{ %"class.std::__1::unique_ptr.647", %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.662", %"class.std::__1::__compressed_pair.664", [4 x i8] }>
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649", %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.std::__1::__hash_node_base.650"** }
%"struct.std::__1::__hash_node_base.650" = type { %"struct.std::__1::__hash_node_base.650"* }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.std::__1::__bucket_list_deallocator.652" }
%"class.std::__1::__bucket_list_deallocator.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.std::__1::__hash_node_base.650" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"class.std::__1::unique_ptr.671"*, %"class.std::__1::unique_ptr.671"*, %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.std::__1::unique_ptr.671"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.682" }
%"class.cc::PropertyTree.682" = type { i32 (...)**, %"class.std::__1::vector.683", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.683" = type { %"class.std::__1::__vector_base.684" }
%"class.std::__1::__vector_base.684" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.685" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.690", i32, %"class.base::flat_map.698", %"class.base::flat_map.708", %"class.base::WeakPtr.718" }
%"class.cc::PropertyTree.690" = type { i32 (...)**, %"class.std::__1::vector.691", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.691" = type { %"class.std::__1::__vector_base.692" }
%"class.std::__1::__vector_base.692" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.693" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.698" = type { %"class.base::internal::flat_tree.699" }
%"class.base::internal::flat_tree.699" = type { %"class.std::__1::vector.700" }
%"class.std::__1::vector.700" = type { %"class.std::__1::__vector_base.701" }
%"class.std::__1::__vector_base.701" = type { %"struct.std::__1::pair.702"*, %"struct.std::__1::pair.702"*, %"class.std::__1::__compressed_pair.703" }
%"struct.std::__1::pair.702" = type opaque
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"struct.std::__1::pair.702"* }
%"class.base::flat_map.708" = type { %"class.base::internal::flat_tree.709" }
%"class.base::internal::flat_tree.709" = type { %"class.std::__1::vector.710" }
%"class.std::__1::vector.710" = type { %"class.std::__1::__vector_base.711" }
%"class.std::__1::__vector_base.711" = type { %"struct.std::__1::pair.712"*, %"struct.std::__1::pair.712"*, %"class.std::__1::__compressed_pair.713" }
%"struct.std::__1::pair.712" = type opaque
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"struct.std::__1::pair.712"* }
%"class.base::WeakPtr.718" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.719", %"class.std::__1::vector.726" }
%"class.std::__1::vector.719" = type { %"class.std::__1::__vector_base.720" }
%"class.std::__1::__vector_base.720" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.721" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.726" = type { %"class.std::__1::__vector_base.727" }
%"class.std::__1::__vector_base.727" = type { %"class.std::__1::vector.728"*, %"class.std::__1::vector.728"*, %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::vector.728" = type opaque
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.std::__1::vector.728"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.734 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.735" = type { %"class.base::internal::flat_tree.736" }
%"class.base::internal::flat_tree.736" = type { %"class.std::__1::vector.737" }
%"class.std::__1::vector.737" = type { %"class.std::__1::__vector_base.738" }
%"class.std::__1::__vector_base.738" = type { %"struct.std::__1::pair.739"*, %"struct.std::__1::pair.739"*, %"class.std::__1::__compressed_pair.740" }
%"struct.std::__1::pair.739" = type opaque
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"struct.std::__1::pair.739"* }
%"class.base::internal::flat_tree.745" = type { %"class.std::__1::vector.746" }
%"class.std::__1::vector.746" = type { %"class.std::__1::__vector_base.747" }
%"class.std::__1::__vector_base.747" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.753" }
%"class.std::__1::__hash_table.753" = type <{ %"class.std::__1::unique_ptr.754", %"class.std::__1::__compressed_pair.764", %"class.std::__1::__compressed_pair.769", %"class.std::__1::__compressed_pair.772", [4 x i8] }>
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756", %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"struct.std::__1::__hash_node_base.757"** }
%"struct.std::__1::__hash_node_base.757" = type { %"struct.std::__1::__hash_node_base.757"* }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.std::__1::__bucket_list_deallocator.759" }
%"class.std::__1::__bucket_list_deallocator.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.std::__1::__hash_node_base.757" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"class.std::__1::unordered_map.776" = type { %"class.std::__1::__hash_table.777" }
%"class.std::__1::__hash_table.777" = type <{ %"class.std::__1::unique_ptr.778", %"class.std::__1::__compressed_pair.788", %"class.std::__1::__compressed_pair.793", %"class.std::__1::__compressed_pair.796", [4 x i8] }>
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780", %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"struct.std::__1::__hash_node_base.781"** }
%"struct.std::__1::__hash_node_base.781" = type { %"struct.std::__1::__hash_node_base.781"* }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.std::__1::__bucket_list_deallocator.783" }
%"class.std::__1::__bucket_list_deallocator.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::__hash_node_base.781" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"struct.std::__1::pair.804"*, %"struct.std::__1::pair.804"*, %"class.std::__1::__compressed_pair.805" }
%"struct.std::__1::pair.804" = type opaque
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"struct.std::__1::pair.804"* }
%"class.std::__1::unordered_map.810" = type { %"class.std::__1::__hash_table.811" }
%"class.std::__1::__hash_table.811" = type <{ %"class.std::__1::unique_ptr.812", %"class.std::__1::__compressed_pair.822", %"class.std::__1::__compressed_pair.827", %"class.std::__1::__compressed_pair.830", [4 x i8] }>
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814", %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"struct.std::__1::__hash_node_base.815"** }
%"struct.std::__1::__hash_node_base.815" = type { %"struct.std::__1::__hash_node_base.815"* }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.std::__1::__bucket_list_deallocator.817" }
%"class.std::__1::__bucket_list_deallocator.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"struct.std::__1::__hash_node_base.815" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"class.std::__1::vector.834" = type { %"class.std::__1::__vector_base.835" }
%"class.std::__1::__vector_base.835" = type { %"class.base::OnceCallback.836"*, %"class.base::OnceCallback.836"*, %"class.std::__1::__compressed_pair.837" }
%"class.base::OnceCallback.836" = type opaque
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"class.base::OnceCallback.836"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.842" }
%"class.base::OnceCallback.842" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.191", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.191" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.849", %"class.std::__1::vector.856" }
%"class.std::__1::vector.849" = type { %"class.std::__1::__vector_base.850" }
%"class.std::__1::__vector_base.850" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.851" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.856" = type { %"class.std::__1::__vector_base.857" }
%"class.std::__1::__vector_base.857" = type { %"class.std::__1::unique_ptr.858"*, %"class.std::__1::unique_ptr.858"*, %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.929", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.929" = type { %"class.absl::optional_internal::optional_data.930" }
%"class.absl::optional_internal::optional_data.930" = type { %"class.absl::optional_internal::optional_data_base.931" }
%"class.absl::optional_internal::optional_data_base.931" = type { %"class.absl::optional_internal::optional_data_dtor_base.932" }
%"class.absl::optional_internal::optional_data_dtor_base.932" = type { i8, %union.anon.933 }
%union.anon.933 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.std::__1::unique_ptr.858"* }
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.870" = type { %"class.std::__1::__vector_base.871" }
%"class.std::__1::__vector_base.871" = type { %"class.std::__1::unique_ptr.872"*, %"class.std::__1::unique_ptr.872"*, %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::unique_ptr.872" = type opaque
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.std::__1::unique_ptr.872"* }
%"class.base::flat_map.878" = type { %"class.base::internal::flat_tree.879" }
%"class.base::internal::flat_tree.879" = type { %"class.std::__1::vector.880" }
%"class.std::__1::vector.880" = type { %"class.std::__1::__vector_base.881" }
%"class.std::__1::__vector_base.881" = type { %"struct.std::__1::pair.882"*, %"struct.std::__1::pair.882"*, %"class.std::__1::__compressed_pair.883" }
%"struct.std::__1::pair.882" = type opaque
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"struct.std::__1::pair.882"* }
%"class.base::WeakPtrFactory.888" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr.241" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.242 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.ui::LayerAnimatorCollection" = type { %"class.ui::CompositorAnimationObserver", %"class.ui::Compositor"*, %"class.base::TimeTicks", %"class.std::__1::set.244" }
%"class.ui::CompositorAnimationObserver" = type { i32 (...)** }
%"class.std::__1::set.244" = type { %"class.std::__1::__tree.245" }
%"class.std::__1::__tree.245" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.scoped_refptr.254 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.ui::ScopedAnimationDurationScaleMode"* }
%"class.ui::ScopedAnimationDurationScaleMode" = type opaque
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.261" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, %union.anon.265 }
%union.anon.265 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.ui::CompositorLockManager" = type { %class.scoped_refptr.242, %"class.base::TimeTicks", i8, %"class.std::__1::vector.266", %"class.base::WeakPtrFactory.281", %"class.base::WeakPtrFactory.281" }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.276" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr.268", %"class.base::WeakPtr.275" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr.271" }
%"class.base::WeakPtr.271" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.275" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory.281" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.ui::ScrollInputHandler"* }
%"class.ui::ScrollInputHandler" = type opaque
%"class.base::flat_map.288" = type { %"class.base::internal::flat_tree.289" }
%"class.base::internal::flat_tree.289" = type { %"class.std::__1::vector.290" }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.std::__1::pair.292"*, %"struct.std::__1::pair.292"*, %"class.std::__1::__compressed_pair.293" }
%"struct.std::__1::pair.292" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::pair.292"* }
%"class.base::WeakPtrFactory.298" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.ui::Layer"** }
%"class.std::__1::vector.306" = type { %"class.std::__1::__vector_base.307" }
%"class.std::__1::__vector_base.307" = type { %"class.std::__1::unique_ptr.308"*, %"class.std::__1::unique_ptr.308"*, %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::unique_ptr.308" = type opaque
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::unique_ptr.308"* }
%"class.base::internal::flat_tree.314" = type { %"class.std::__1::vector.299" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.ui::Layer::SubpixelPositionOffsetCache"* }
%"class.ui::Layer::SubpixelPositionOffsetCache" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.std::__1::vector.173"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.208 }
%union.anon.208 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList.327" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList.328", i64, i32, [4 x i8] }>
%"class.base::LinkedList.328" = type { %"class.base::LinkNode.329" }
%"class.base::LinkNode.329" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.331 = type { %"class.ui::LayerAnimator"* }
%"class.ui::LayerAnimator" = type { %"class.ui::LayerThreadedAnimationDelegate", %"class.base::RefCounted.332", %"class.cc::AnimationDelegate", %"class.base::circular_deque.333", %"class.ui::LayerAnimationDelegate"*, %class.scoped_refptr.336, %"class.std::__1::vector.337", i32, i8, %"class.base::TimeDelta", i32, %"class.base::TimeTicks", i8, i8, i8, [5 x i8], %"class.base::ObserverList.345", %"class.std::__1::vector.349" }
%"class.ui::LayerThreadedAnimationDelegate" = type { i32 (...)** }
%"class.base::RefCounted.332" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%"class.base::circular_deque.333" = type { %"class.base::internal::VectorBuffer.334", i64, i64 }
%"class.base::internal::VectorBuffer.334" = type { %"class.std::__1::unique_ptr.335"*, i64 }
%"class.std::__1::unique_ptr.335" = type opaque
%class.scoped_refptr.336 = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type opaque
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.ui::LayerAnimator::RunningAnimation"*, %"class.ui::LayerAnimator::RunningAnimation"*, %"class.std::__1::__compressed_pair.340" }
%"class.ui::LayerAnimator::RunningAnimation" = type { %"class.base::WeakPtr.339" }
%"class.base::WeakPtr.339" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.ui::LayerAnimator::RunningAnimation"* }
%"class.base::ObserverList.345" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList.346", i64, i32, [4 x i8] }>
%"class.base::LinkedList.346" = type { %"class.base::LinkNode.347" }
%"class.base::LinkNode.347" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.349" = type { %"class.std::__1::__vector_base.350" }
%"class.std::__1::__vector_base.350" = type { %"class.std::__1::unique_ptr.351"*, %"class.std::__1::unique_ptr.351"*, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::unique_ptr.351" = type opaque
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.std::__1::unique_ptr.351"* }
%class.scoped_refptr.357 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.358 = type { %"class.cc::MirrorLayer"* }
%"class.cc::MirrorLayer" = type opaque
%class.scoped_refptr.359 = type { %"class.cc::NinePatchLayer"* }
%"class.cc::NinePatchLayer" = type opaque
%class.scoped_refptr.360 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.scoped_refptr.361 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%class.scoped_refptr.362 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.363", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.369", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.167", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.203" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.150", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %class.scoped_refptr.149*, %class.scoped_refptr.149*, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %class.scoped_refptr.149* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.157" }
%"class.base::flat_map.157" = type { %"class.base::internal::flat_tree.158" }
%"class.base::internal::flat_tree.158" = type { %"class.std::__1::vector.159" }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"*, %"class.std::__1::__compressed_pair.162" }
%"struct.std::__1::pair.161" = type opaque
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::pair.161"* }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.185", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.192" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.212", %"class.std::__1::vector.212", %"class.std::__1::vector.219" }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { i8**, i8**, %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { i8** }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.221" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.363" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.364", %"class.viz::SurfaceId" }
%"class.absl::optional.364" = type { %"class.absl::optional_internal::optional_data.365" }
%"class.absl::optional_internal::optional_data.365" = type { %"class.absl::optional_internal::optional_data_base.366" }
%"class.absl::optional_internal::optional_data_base.366" = type { %"class.absl::optional_internal::optional_data_dtor_base.367" }
%"class.absl::optional_internal::optional_data_dtor_base.367" = type { i8, %union.anon.368 }
%union.anon.368 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.374 }
%class.scoped_refptr.374 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.377", i8, i32, i8, [7 x i8], %"class.absl::optional.382" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.375", i64 }
%"class.util::IdType.375" = type { %"class.base::StrongAlias.376" }
%"class.base::StrongAlias.376" = type { i64 }
%"class.absl::optional.377" = type { %"class.absl::optional_internal::optional_data.378" }
%"class.absl::optional_internal::optional_data.378" = type { %"class.absl::optional_internal::optional_data_base.379" }
%"class.absl::optional_internal::optional_data_base.379" = type { %"class.absl::optional_internal::optional_data_dtor_base.380" }
%"class.absl::optional_internal::optional_data_dtor_base.380" = type { i8, %union.anon.381 }
%union.anon.381 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.382" = type { %"class.absl::optional_internal::optional_data.383" }
%"class.absl::optional_internal::optional_data.383" = type { %"class.absl::optional_internal::optional_data_base.384" }
%"class.absl::optional_internal::optional_data_base.384" = type { %"class.absl::optional_internal::optional_data_dtor_base.385" }
%"class.absl::optional_internal::optional_data_dtor_base.385" = type { i8, [7 x i8], %union.anon.386 }
%union.anon.386 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtrFactory.387" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.391" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList.392", i64, i32, [4 x i8] }>
%"class.base::LinkedList.392" = type { %"class.base::LinkNode.393" }
%"class.base::LinkNode.393" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.ui::EventHandler"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.14" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.7" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::flat_map.5"* }
%"class.base::flat_map.5" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.395" }
%"class.std::__1::map.395" = type { %"class.std::__1::__tree.396" }
%"class.std::__1::__tree.396" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.404" }
%"class.std::__1::map.404" = type { %"class.std::__1::__tree.405" }
%"class.std::__1::__tree.405" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.417", %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.427", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.438", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.444" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.413" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.base::ObserverList.417" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList.418", i64, i32, [4 x i8] }>
%"class.base::LinkedList.418" = type { %"class.base::LinkNode.419" }
%"class.base::LinkNode.419" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type opaque
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.ui::Compositor"* }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.433, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.433 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted.434", [4 x i8] }>
%"class.base::RefCounted.434" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp.435, %class.SkPixmap, %class.sk_sp.437 }
%class.sk_sp.435 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.436, i32, i32 }
%class.sk_sp.436 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.42" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.437 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type opaque
%"class.base::WeakPtrFactory.444" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.445" = type { %"class.std::__1::__vector_base.446" }
%"class.std::__1::__vector_base.446" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.464" = type <{ %"class.std::__1::vector.39", %"class.base::LinkedList.465", i64, i32, [4 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.47" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.465" = type { %"class.base::LinkNode.466" }
%"class.base::LinkNode.466" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.474" = type { %"class.base::internal::WeakPtrBase" }
%"class.aura::WindowOcclusionTracker::ScopedForceVisible" = type { %"class.aura::WindowObserver", %"class.aura::Window"* }
%"class.aura::WindowOcclusionTracker" = type { %"class.ui::LayerAnimationObserver", %"class.aura::WindowObserver", %"class.aura::WindowTreeHostObserver", %"class.base::flat_map.108", %"class.base::flat_map.480", %"class.base::internal::flat_tree.490", %"class.base::internal::flat_tree.490", %"class.base::flat_map.491", i32, i32, i32, %"class.base::ScopedMultiSourceObservation", %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.502", %"class.aura::Window"*, %"class.aura::NativeWindowOcclusionTracker" }
%"class.ui::LayerAnimationObserver" = type { i32 (...)**, %"class.std::__1::set.97" }
%"class.std::__1::set.97" = type { %"class.std::__1::__tree.98" }
%"class.std::__1::__tree.98" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.aura::WindowTreeHostObserver" = type { i32 (...)** }
%"class.base::flat_map.108" = type { %"class.base::internal::flat_tree.109" }
%"class.base::internal::flat_tree.109" = type { %"class.std::__1::vector.110" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"*, %"class.std::__1::__compressed_pair.475" }
%"struct.std::__1::pair.112" = type { %"class.aura::Window"*, %"struct.aura::WindowOcclusionTracker::OcclusionData" }
%"struct.aura::WindowOcclusionTracker::OcclusionData" = type { i32, %class.SkRegion }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"struct.std::__1::pair.112"* }
%"class.base::flat_map.480" = type { %"class.base::internal::flat_tree.481" }
%"class.base::internal::flat_tree.481" = type { %"class.std::__1::vector.482" }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"*, %"class.std::__1::__compressed_pair.485" }
%"struct.std::__1::pair.484" = type { %"class.aura::Window"*, i64 }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.std::__1::pair.484"* }
%"class.base::internal::flat_tree.490" = type { %"class.std::__1::vector.445" }
%"class.base::flat_map.491" = type { %"class.base::internal::flat_tree.492" }
%"class.base::internal::flat_tree.492" = type { %"class.std::__1::vector.493" }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"*, %"class.std::__1::__compressed_pair.496" }
%"struct.std::__1::pair.495" = type <{ %"class.aura::Window"*, %"struct.aura::WindowOcclusionTracker::RootWindowState", [4 x i8] }>
%"struct.aura::WindowOcclusionTracker::RootWindowState" = type { i32, i8, i32 }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.std::__1::pair.495"* }
%"class.base::ScopedMultiSourceObservation" = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.445" }
%"class.base::RepeatingCallback.501" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.502" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.aura::NativeWindowOcclusionTracker" = type { i32 (...)** }
%"class.aura::Env" = type { %"class.ui::EventTarget", %"class.base::SupportsUserData.base", [7 x i8], %"class.base::ObserverList", %"class.base::ObserverList.34", %"class.base::ObserverList.38", %"class.std::__1::set", %"class.std::__1::unique_ptr.64", i32, %"class.gfx::Point", i8, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.ui::ContextFactory"*, i8, %"class.std::__1::unique_ptr.94", %"class.std::__1::vector.506" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.34" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList.35", i64, i32, [4 x i8] }>
%"class.base::LinkedList.35" = type { %"class.base::LinkNode.36" }
%"class.base::LinkNode.36" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.38" = type <{ %"class.std::__1::vector.39", %"class.base::LinkedList.52", i64, i32, [4 x i8] }>
%"class.base::LinkedList.52" = type { %"class.base::LinkNode.53" }
%"class.base::LinkNode.53" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.aura::EnvInputStateController"* }
%"class.aura::EnvInputStateController" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.ui::GestureRecognizer"* }
%"class.ui::GestureRecognizer" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.ui::CursorFactory"* }
%"class.ui::CursorFactory" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.aura::InputStateLookup"* }
%"class.aura::InputStateLookup" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.aura::WindowOcclusionTracker"* }
%"class.std::__1::vector.506" = type { %"class.std::__1::__vector_base.507" }
%"class.std::__1::__vector_base.507" = type { %"class.aura::WindowTreeHost"**, %"class.aura::WindowTreeHost"**, %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.aura::WindowTreeHost"** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::AutoReset" = type { %"struct.aura::WindowOcclusionTracker::OcclusionData"*, %"struct.aura::WindowOcclusionTracker::OcclusionData" }
%"class.aura::WindowOcclusionChangeBuilder" = type { i32 (...)** }
%"class.ui::LayerAnimationSequence" = type opaque
%"struct.aura::WindowObserver::HierarchyChangeParams" = type { %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, i32, %"class.aura::Window"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.921", [4 x i8] }>
%"struct.std::__1::atomic.921" = type { %"struct.std::__1::__atomic_base.922" }
%"struct.std::__1::__atomic_base.922" = type { %"struct.std::__1::__atomic_base.923" }
%"struct.std::__1::__atomic_base.923" = type { %"struct.std::__1::__cxx_atomic_impl.924" }
%"struct.std::__1::__cxx_atomic_impl.924" = type { %"struct.std::__1::__cxx_atomic_base_impl.925" }
%"struct.std::__1::__cxx_atomic_base_impl.925" = type { i32 }
%"class.base::internal::flat_tree.926" = type opaque
%"struct.std::__1::__temp_value" = type { %"struct.std::__1::aligned_storage<40, 8>::type", %"class.std::__1::allocator.478"* }
%"struct.std::__1::aligned_storage<40, 8>::type" = type { [40 x i8] }
%"class.std::__1::allocator.478" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"*, %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.476", %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.std::__1::allocator.478"* }
%"struct.std::__1::__split_buffer.952" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.448", %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.std::__1::allocator.450"* }
%"class.std::__1::allocator.450" = type { i8 }
%"struct.std::__1::__split_buffer.964" = type { %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"*, %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.497", %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.std::__1::allocator.499"* }
%"class.std::__1::allocator.499" = type { i8 }
%"struct.std::__1::__split_buffer.971" = type { %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"*, %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.486", %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.std::__1::allocator.488"* }
%"class.std::__1::allocator.488" = type { i8 }

$_ZN4base8internal9flat_treeIPN4aura6WindowENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_22WindowOcclusionTracker13OcclusionDataEEENS6_9allocatorISD_EEEEE5eraseIS4_EEmRKT_ = comdat any

$_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE = comdat any

$_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl = comdat any

$_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb = comdat any

$_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE = comdat any

$_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE = comdat any

$_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ = comdat any

$_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE = comdat any

$_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE = comdat any

$_ZN2ui22LayerAnimationObserver26OnLayerAnimationWillRepeatEPNS_22LayerAnimationSequenceE = comdat any

$_ZN2ui22LayerAnimationObserver28OnAnimatorAttachedToTimelineEv = comdat any

$_ZN2ui22LayerAnimationObserver30OnAnimatorDetachedFromTimelineEv = comdat any

$_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE = comdat any

$_ZN4aura22WindowTreeHostObserver13OnHostResizedEPNS_14WindowTreeHostE = comdat any

$_ZN4aura22WindowTreeHostObserver19OnHostMovedInPixelsEPNS_14WindowTreeHostERKN3gfx5PointE = comdat any

$_ZN4aura22WindowTreeHostObserver22OnHostWorkspaceChangedEPNS_14WindowTreeHostE = comdat any

$_ZN4aura22WindowTreeHostObserver20OnHostCloseRequestedEPNS_14WindowTreeHostE = comdat any

$_ZN4aura22WindowTreeHostObserver29OnHostWillProcessBoundsChangeEPNS_14WindowTreeHostE = comdat any

$_ZN4aura22WindowTreeHostObserver28OnHostDidProcessBoundsChangeEPNS_14WindowTreeHostE = comdat any

$_ZN4aura22WindowTreeHostObserver40OnCompositingFrameSinksToThrottleUpdatedEPKNS_14WindowTreeHostERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS4_8identityENSt3__14lessIvEENSA_6vectorIS8_NSA_9allocatorIS8_EEEEEE = comdat any

$_ZNSt3__16vectorINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker13OcclusionDataEEENS_9allocatorIS7_EEE7emplaceIJS7_EEENS_11__wrap_iterIPS7_EENSC_IPKS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker13OcclusionDataEEERNS_9allocatorIS7_EEE12emplace_backIJS7_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIPN4aura6WindowENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN4aura6WindowERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker15RootWindowStateEEENS_9allocatorIS7_EEE7emplaceIJRKS4_S6_EEENS_11__wrap_iterIPS7_EENSE_IPKS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker15RootWindowStateEEERNS_9allocatorIS7_EEE12emplace_backIJRKS4_S6_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIPN4aura6WindowEmEENS_9allocatorIS5_EEE7emplaceIJRKS4_mEEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowEmEERNS_9allocatorIS5_EEE12emplace_backIJRKS4_mEEEvDpOT_ = comdat any

@_ZTVN4aura22WindowOcclusionTracker13ScopedExcludeE = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::WindowOcclusionTracker::ScopedExclude"*)* @_ZN4aura22WindowOcclusionTracker13ScopedExcludeD2Ev to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker::ScopedExclude"*)* @_ZN4aura22WindowOcclusionTracker13ScopedExcludeD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker::ScopedExclude"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker13ScopedExclude18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8
@_ZTVN4aura22WindowOcclusionTracker18ScopedForceVisibleE = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*)* @_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleD2Ev to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*)* @_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32)* @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker18ScopedForceVisible18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)] }, align 8
@_ZTVN4aura22WindowOcclusionTrackerE = hidden unnamed_addr constant { [30 x i8*], [30 x i8*], [12 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui22LayerAnimationObserver23OnLayerAnimationStartedEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.ui::LayerAnimationSequence"*)* @_ZN4aura22WindowOcclusionTracker21OnLayerAnimationEndedEPN2ui22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui22LayerAnimationObserver26OnLayerAnimationWillRepeatEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.ui::LayerAnimationSequence"*)* @_ZN4aura22WindowOcclusionTracker23OnLayerAnimationAbortedEPN2ui22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.ui::LayerAnimationSequence"*)* @_ZN4aura22WindowOcclusionTracker25OnLayerAnimationScheduledEPN2ui22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*)* @_ZN4aura22WindowOcclusionTrackerD2Ev to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*)* @_ZN4aura22WindowOcclusionTrackerD0Ev to i8*), i8* bitcast (i1 (%"class.ui::LayerAnimationObserver"*)* @_ZNK2ui22LayerAnimationObserver41RequiresNotificationWhenAnimatorDestroyedEv to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui22LayerAnimationObserver20OnAttachedToSequenceEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*)* @_ZN2ui22LayerAnimationObserver22OnDetachedFromSequenceEPNS_22LayerAnimationSequenceE to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*)* @_ZN2ui22LayerAnimationObserver28OnAnimatorAttachedToTimelineEv to i8*), i8* bitcast (void (%"class.ui::LayerAnimationObserver"*)* @_ZN2ui22LayerAnimationObserver30OnAnimatorDetachedFromTimelineEv to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura22WindowOcclusionTracker24OnWindowHierarchyChangedERKNS_14WindowObserver21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i1)* @_ZN4aura22WindowOcclusionTracker25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZN4aura22WindowOcclusionTracker21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32)* @_ZN4aura22WindowOcclusionTracker18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32)* @_ZN4aura22WindowOcclusionTracker26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32)* @_ZN4aura22WindowOcclusionTracker19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowTreeHost"*, i32)* @_ZN4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateE to i8*)], [30 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*)* @_ZThn32_N4aura22WindowOcclusionTrackerD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*)* @_ZThn32_N4aura22WindowOcclusionTrackerD0Ev to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"struct.aura::WindowObserver::HierarchyChangeParams"*)* @_ZThn32_N4aura22WindowOcclusionTracker24OnWindowHierarchyChangedERKNS_14WindowObserver21HierarchyChangeParamsE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker13OnWindowAddedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker18OnWillRemoveWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64)* @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1)* @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i1)* @_ZThn32_N4aura22WindowOcclusionTracker25OnWindowVisibilityChangedEPNS_6WindowEb to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i32)* @_ZThn32_N4aura22WindowOcclusionTracker21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"*)* @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32)* @_ZThn32_N4aura22WindowOcclusionTracker19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32)* @_ZThn32_N4aura22WindowOcclusionTracker18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker21OnWindowAlphaShapeSetEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32)* @_ZThn32_N4aura22WindowOcclusionTracker26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker23OnWindowStackingChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker17OnWindowDestroyedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker25OnWindowAddedToRootWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker30OnWindowRemovingFromRootWindowEPNS_6WindowES2_ to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker22OnWindowLayerRecreatedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowObserver"*, %"class.aura::Window"*)* @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*)* @_ZThn32_N4aura22WindowOcclusionTracker40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE to i8*)], [12 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura22WindowTreeHostObserver13OnHostResizedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"*)* @_ZN4aura22WindowTreeHostObserver19OnHostMovedInPixelsEPNS_14WindowTreeHostERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura22WindowTreeHostObserver22OnHostWorkspaceChangedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura22WindowTreeHostObserver20OnHostCloseRequestedEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowTreeHost"*, i32)* @_ZThn56_N4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura22WindowTreeHostObserver29OnHostWillProcessBoundsChangeEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*)* @_ZN4aura22WindowTreeHostObserver28OnHostDidProcessBoundsChangeEPNS_14WindowTreeHostE to i8*), i8* bitcast (void (%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.926"*)* @_ZN4aura22WindowTreeHostObserver40OnCompositingFrameSinksToThrottleUpdatedEPKNS_14WindowTreeHostERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS4_8identityENSt3__14lessIvEENSA_6vectorIS8_NSA_9allocatorIS8_EEEEEE to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*)* @_ZThn56_N4aura22WindowOcclusionTrackerD1Ev to i8*), i8* bitcast (void (%"class.aura::WindowOcclusionTracker"*)* @_ZThn56_N4aura22WindowOcclusionTrackerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"WindowOcclusionChanged\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@__const._ZN4aura12_GLOBAL__N_132GetWindowTransformRelativeToRootEPNS_6WindowERKN3gfx9TransformEb.transform_relative_to_root = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@_ZN2cc5Layer18kIdentityTransformE = external local_unnamed_addr constant { { [4 x [4 x float]], i8 } }, align 4
@.str.2 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1
@_ZZN4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN4aura22WindowOcclusionTracker11ScopedPauseC1Ev = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker::ScopedPause"*), void (%"class.aura::WindowOcclusionTracker::ScopedPause"*)* @_ZN4aura22WindowOcclusionTracker11ScopedPauseC2Ev
@_ZN4aura22WindowOcclusionTracker11ScopedPauseD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker::ScopedPause"*), void (%"class.aura::WindowOcclusionTracker::ScopedPause"*)* @_ZN4aura22WindowOcclusionTracker11ScopedPauseD2Ev
@_ZN4aura22WindowOcclusionTracker13ScopedExcludeC1EPNS_6WindowE = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker::ScopedExclude"*, %"class.aura::Window"*), void (%"class.aura::WindowOcclusionTracker::ScopedExclude"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker13ScopedExcludeC2EPNS_6WindowE
@_ZN4aura22WindowOcclusionTracker13ScopedExcludeD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker::ScopedExclude"*), void (%"class.aura::WindowOcclusionTracker::ScopedExclude"*)* @_ZN4aura22WindowOcclusionTracker13ScopedExcludeD2Ev
@_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleC1EPNS_6WindowE = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*, %"class.aura::Window"*), void (%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*, %"class.aura::Window"*)* @_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleC2EPNS_6WindowE
@_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*), void (%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*)* @_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleD2Ev
@_ZN4aura22WindowOcclusionTrackerC1Ev = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker"*), void (%"class.aura::WindowOcclusionTracker"*)* @_ZN4aura22WindowOcclusionTrackerC2Ev
@_ZN4aura22WindowOcclusionTrackerD1Ev = hidden unnamed_addr alias void (%"class.aura::WindowOcclusionTracker"*), void (%"class.aura::WindowOcclusionTracker"*)* @_ZN4aura22WindowOcclusionTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker11ScopedPauseC2Ev(%"class.aura::WindowOcclusionTracker::ScopedPause"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  tail call void @_ZN4aura3Env28PauseWindowOcclusionTrackingEv(%"class.aura::Env"* %2) #12
  ret void
}

declare %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4aura3Env28PauseWindowOcclusionTrackingEv(%"class.aura::Env"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker11ScopedPauseD2Ev(%"class.aura::WindowOcclusionTracker::ScopedPause"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  tail call void @_ZN4aura3Env30UnpauseWindowOcclusionTrackingEv(%"class.aura::Env"* %2) #12
  ret void
}

declare void @_ZN4aura3Env30UnpauseWindowOcclusionTrackingEv(%"class.aura::Env"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker13ScopedExcludeC2EPNS_6WindowE(%"class.aura::WindowOcclusionTracker::ScopedExclude"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %3) #12
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura22WindowOcclusionTracker13ScopedExcludeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 1
  store %"class.aura::Window"* %1, %"class.aura::Window"** %5, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %3) #12
  %6 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %7 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %6) #12
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker7ExcludeEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %7, %"class.aura::Window"* %8)
  ret void
}

declare void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"*) unnamed_addr #1

declare void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

declare %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker7ExcludeEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.aura::Window"*, align 8
  store %"class.aura::Window"* %1, %"class.aura::Window"** %3, align 8
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.490", %"class.base::internal::flat_tree.490"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %8 = bitcast %"class.aura::Window"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.aura::Window"** %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"class.aura::Window"**
  br i1 %12, label %29, label %14

14:                                               ; preds = %2
  %15 = ashr exact i64 %11, 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.aura::Window"** [ %6, %14 ], [ %27, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %26, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %17, i64 %19
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp ult %"class.aura::Window"* %21, %1
  %23 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 1
  %24 = xor i64 %19, -1
  %25 = add i64 %18, %24
  %26 = select i1 %22, i64 %25, i64 %19
  %27 = select i1 %22, %"class.aura::Window"** %23, %"class.aura::Window"** %17
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %16

29:                                               ; preds = %16, %2
  %30 = phi %"class.aura::Window"** [ %6, %2 ], [ %27, %16 ]
  %31 = icmp eq %"class.aura::Window"** %30, %13
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %30, align 8
  %34 = icmp ugt %"class.aura::Window"* %33, %1
  br i1 %34, label %35, label %39

35:                                               ; preds = %32, %29
  %36 = getelementptr inbounds %"class.base::internal::flat_tree.490", %"class.base::internal::flat_tree.490"* %4, i64 0, i32 0
  %37 = call %"class.aura::Window"** @_ZNSt3__16vectorIPN4aura6WindowENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.445"* %36, %"class.aura::Window"** %30, %"class.aura::Window"** nonnull dereferenceable(8) %3) #12
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  br label %39

39:                                               ; preds = %32, %35
  %40 = phi %"class.aura::Window"* [ %1, %32 ], [ %38, %35 ]
  %41 = call zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %40)
  br i1 %41, label %42, label %91

42:                                               ; preds = %39
  %43 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %44 = call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %43) #12
  %45 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %45, align 8
  %47 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"struct.std::__1::pair.495"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = ptrtoint %"struct.std::__1::pair.495"* %46 to i64
  %51 = sub i64 %49, %50
  %52 = icmp eq i64 %51, 0
  %53 = inttoptr i64 %49 to %"struct.std::__1::pair.495"*
  br i1 %52, label %72, label %54

54:                                               ; preds = %42
  %55 = sdiv exact i64 %51, 24
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi %"struct.std::__1::pair.495"* [ %46, %54 ], [ %68, %56 ]
  %58 = phi i64 [ %55, %54 ], [ %67, %56 ]
  %59 = lshr i64 %58, 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %57, i64 %59
  %61 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %60, i64 0, i32 0
  %62 = load %"class.aura::Window"*, %"class.aura::Window"** %61, align 8
  %63 = icmp ult %"class.aura::Window"* %62, %44
  %64 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %60, i64 1
  %65 = xor i64 %59, -1
  %66 = add i64 %58, %65
  %67 = select i1 %63, i64 %66, i64 %59
  %68 = select i1 %63, %"struct.std::__1::pair.495"* %64, %"struct.std::__1::pair.495"* %57
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %70, label %56

70:                                               ; preds = %56
  %71 = ptrtoint %"struct.std::__1::pair.495"* %68 to i64
  br label %72

72:                                               ; preds = %70, %42
  %73 = phi i64 [ %71, %70 ], [ %50, %42 ]
  %74 = phi %"struct.std::__1::pair.495"* [ %68, %70 ], [ %46, %42 ]
  %75 = icmp eq %"struct.std::__1::pair.495"* %74, %53
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %74, i64 0, i32 0
  %78 = load %"class.aura::Window"*, %"class.aura::Window"** %77, align 8
  %79 = icmp ugt %"class.aura::Window"* %78, %44
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %74, i64 1
  %82 = ptrtoint %"struct.std::__1::pair.495"* %81 to i64
  br label %83

83:                                               ; preds = %80, %76, %72
  %84 = phi i64 [ %82, %80 ], [ %73, %72 ], [ %73, %76 ]
  %85 = inttoptr i64 %84 to %"struct.std::__1::pair.495"*
  %86 = icmp eq %"struct.std::__1::pair.495"* %74, %85
  %87 = select i1 %86, %"struct.std::__1::pair.495"* %53, %"struct.std::__1::pair.495"* %74
  %88 = icmp eq %"struct.std::__1::pair.495"* %87, %53
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %87, i64 0, i32 1, i32 1
  store i8 1, i8* %90, align 4
  call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  br label %91

91:                                               ; preds = %83, %89, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker13ScopedExcludeD2Ev(%"class.aura::WindowOcclusionTracker::ScopedExclude"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura22WindowOcclusionTracker13ScopedExcludeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %4, %"class.aura::WindowObserver"* %7) #12
  %8 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %9 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %8) #12
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker9UnexcludeEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %9, %"class.aura::Window"* %10) #12
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker13ScopedExclude8ShutdownEv(%"class.aura::WindowOcclusionTracker::ScopedExclude"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 1
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %3, %"class.aura::WindowObserver"* %6) #12
  %7 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %8 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %7) #12
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker9UnexcludeEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %8, %"class.aura::Window"* %9)
  store %"class.aura::Window"* null, %"class.aura::Window"** %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker13ScopedExcludeD0Ev(%"class.aura::WindowOcclusionTracker::ScopedExclude"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura22WindowOcclusionTracker13ScopedExcludeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %4, %"class.aura::WindowObserver"* %7) #12
  %8 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %9 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %8) #12
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker9UnexcludeEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %9, %"class.aura::Window"* %10) #12
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %12) #12
  %13 = bitcast %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker13ScopedExclude18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowOcclusionTracker::ScopedExclude"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedExclude", %"class.aura::WindowOcclusionTracker::ScopedExclude"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %4, %"class.aura::WindowObserver"* %7) #12
  %8 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %9 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %8) #12
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker9UnexcludeEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %9, %"class.aura::Window"* %10) #12
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

declare void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"*, %"class.aura::WindowObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker9UnexcludeEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %6 = bitcast %"class.aura::Window"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.aura::Window"** %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.aura::Window"**
  br i1 %10, label %29, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.aura::Window"** [ %4, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %15, i64 %17
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  %20 = icmp ult %"class.aura::Window"* %19, %1
  %21 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %23, i64 %17
  %25 = select i1 %20, %"class.aura::Window"** %21, %"class.aura::Window"** %15
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14
  %28 = ptrtoint %"class.aura::Window"** %25 to i64
  br label %29

29:                                               ; preds = %27, %2
  %30 = phi i64 [ %28, %27 ], [ %8, %2 ]
  %31 = phi %"class.aura::Window"** [ %25, %27 ], [ %4, %2 ]
  %32 = icmp eq %"class.aura::Window"** %31, %11
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = load %"class.aura::Window"*, %"class.aura::Window"** %31, align 8
  %35 = icmp ugt %"class.aura::Window"* %34, %1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %31, i64 1
  %38 = ptrtoint %"class.aura::Window"** %37 to i64
  br label %39

39:                                               ; preds = %36, %33, %29
  %40 = phi i64 [ %38, %36 ], [ %30, %29 ], [ %30, %33 ]
  %41 = inttoptr i64 %40 to %"class.aura::Window"**
  %42 = icmp eq %"class.aura::Window"** %31, %41
  br i1 %42, label %52, label %43

43:                                               ; preds = %39
  %44 = sub i64 %7, %40
  %45 = ashr exact i64 %44, 3
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.aura::Window"** %31 to i8*
  %49 = inttoptr i64 %40 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 %44, i1 false) #12
  br label %50

50:                                               ; preds = %47, %43
  %51 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %31, i64 %45
  store %"class.aura::Window"** %51, %"class.aura::Window"*** %5, align 8
  br label %52

52:                                               ; preds = %39, %50
  %53 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br i1 %53, label %54, label %102

54:                                               ; preds = %52
  %55 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %56 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %57 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %56, align 8
  %58 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"struct.std::__1::pair.495"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = ptrtoint %"struct.std::__1::pair.495"* %57 to i64
  %62 = sub i64 %60, %61
  %63 = icmp eq i64 %62, 0
  %64 = inttoptr i64 %60 to %"struct.std::__1::pair.495"*
  br i1 %63, label %83, label %65

65:                                               ; preds = %54
  %66 = sdiv exact i64 %62, 24
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi %"struct.std::__1::pair.495"* [ %57, %65 ], [ %79, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %78, %67 ]
  %70 = lshr i64 %69, 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %68, i64 %70
  %72 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %71, i64 0, i32 0
  %73 = load %"class.aura::Window"*, %"class.aura::Window"** %72, align 8
  %74 = icmp ult %"class.aura::Window"* %73, %55
  %75 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %71, i64 1
  %76 = xor i64 %70, -1
  %77 = add i64 %69, %76
  %78 = select i1 %74, i64 %77, i64 %70
  %79 = select i1 %74, %"struct.std::__1::pair.495"* %75, %"struct.std::__1::pair.495"* %68
  %80 = icmp eq i64 %78, 0
  br i1 %80, label %81, label %67

81:                                               ; preds = %67
  %82 = ptrtoint %"struct.std::__1::pair.495"* %79 to i64
  br label %83

83:                                               ; preds = %81, %54
  %84 = phi i64 [ %82, %81 ], [ %61, %54 ]
  %85 = phi %"struct.std::__1::pair.495"* [ %79, %81 ], [ %57, %54 ]
  %86 = icmp eq %"struct.std::__1::pair.495"* %85, %64
  br i1 %86, label %94, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %85, i64 0, i32 0
  %89 = load %"class.aura::Window"*, %"class.aura::Window"** %88, align 8
  %90 = icmp ugt %"class.aura::Window"* %89, %55
  br i1 %90, label %94, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %85, i64 1
  %93 = ptrtoint %"struct.std::__1::pair.495"* %92 to i64
  br label %94

94:                                               ; preds = %91, %87, %83
  %95 = phi i64 [ %93, %91 ], [ %84, %83 ], [ %84, %87 ]
  %96 = inttoptr i64 %95 to %"struct.std::__1::pair.495"*
  %97 = icmp eq %"struct.std::__1::pair.495"* %85, %96
  %98 = select i1 %97, %"struct.std::__1::pair.495"* %64, %"struct.std::__1::pair.495"* %85
  %99 = icmp eq %"struct.std::__1::pair.495"* %98, %64
  br i1 %99, label %102, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %98, i64 0, i32 1, i32 1
  store i8 1, i8* %101, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  br label %102

102:                                              ; preds = %94, %100, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleC2EPNS_6WindowE(%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %3) #12
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura22WindowOcclusionTracker18ScopedForceVisibleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 1
  store %"class.aura::Window"* %1, %"class.aura::Window"** %5, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %3) #12
  %6 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %7 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %6) #12
  %8 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker18ForceWindowVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %7, %"class.aura::Window"* %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18ForceWindowVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.aura::Window"*, align 8
  store %"class.aura::Window"* %1, %"class.aura::Window"** %4, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.base::flat_map.480", %"class.base::flat_map.480"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.484"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.484"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.484"*
  br i1 %13, label %31, label %15

15:                                               ; preds = %2
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.484"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.484"* %25, %"struct.std::__1::pair.484"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17, %2
  %32 = phi %"struct.std::__1::pair.484"* [ %7, %2 ], [ %29, %17 ]
  %33 = icmp eq %"struct.std::__1::pair.484"* %32, %14
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %32, i64 0, i32 0
  %36 = load %"class.aura::Window"*, %"class.aura::Window"** %35, align 8
  %37 = icmp ugt %"class.aura::Window"* %36, %1
  br i1 %37, label %38, label %42

38:                                               ; preds = %34, %31
  %39 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  store i64 0, i64* %3, align 8
  %40 = getelementptr inbounds %"class.base::flat_map.480", %"class.base::flat_map.480"* %5, i64 0, i32 0, i32 0
  %41 = call %"struct.std::__1::pair.484"* @_ZNSt3__16vectorINS_4pairIPN4aura6WindowEmEENS_9allocatorIS5_EEE7emplaceIJRKS4_mEEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector.482"* %40, %"struct.std::__1::pair.484"* %32, %"class.aura::Window"** nonnull dereferenceable(8) %4, i64* nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  br label %42

42:                                               ; preds = %34, %38
  %43 = phi %"struct.std::__1::pair.484"* [ %41, %38 ], [ %32, %34 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %43, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %99

48:                                               ; preds = %42
  %49 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  %50 = call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %49) #12
  %51 = icmp eq %"class.aura::Window"* %50, null
  br i1 %51, label %99, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %53, align 8
  %55 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"struct.std::__1::pair.495"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = ptrtoint %"struct.std::__1::pair.495"* %54 to i64
  %59 = sub i64 %57, %58
  %60 = icmp eq i64 %59, 0
  %61 = inttoptr i64 %57 to %"struct.std::__1::pair.495"*
  br i1 %60, label %80, label %62

62:                                               ; preds = %52
  %63 = sdiv exact i64 %59, 24
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi %"struct.std::__1::pair.495"* [ %54, %62 ], [ %76, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %75, %64 ]
  %67 = lshr i64 %66, 1
  %68 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %65, i64 %67
  %69 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %68, i64 0, i32 0
  %70 = load %"class.aura::Window"*, %"class.aura::Window"** %69, align 8
  %71 = icmp ult %"class.aura::Window"* %70, %50
  %72 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %68, i64 1
  %73 = xor i64 %67, -1
  %74 = add i64 %66, %73
  %75 = select i1 %71, i64 %74, i64 %67
  %76 = select i1 %71, %"struct.std::__1::pair.495"* %72, %"struct.std::__1::pair.495"* %65
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %78, label %64

78:                                               ; preds = %64
  %79 = ptrtoint %"struct.std::__1::pair.495"* %76 to i64
  br label %80

80:                                               ; preds = %78, %52
  %81 = phi i64 [ %79, %78 ], [ %58, %52 ]
  %82 = phi %"struct.std::__1::pair.495"* [ %76, %78 ], [ %54, %52 ]
  %83 = icmp eq %"struct.std::__1::pair.495"* %82, %61
  br i1 %83, label %91, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %82, i64 0, i32 0
  %86 = load %"class.aura::Window"*, %"class.aura::Window"** %85, align 8
  %87 = icmp ugt %"class.aura::Window"* %86, %50
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %82, i64 1
  %90 = ptrtoint %"struct.std::__1::pair.495"* %89 to i64
  br label %91

91:                                               ; preds = %88, %84, %80
  %92 = phi i64 [ %90, %88 ], [ %81, %80 ], [ %81, %84 ]
  %93 = inttoptr i64 %92 to %"struct.std::__1::pair.495"*
  %94 = icmp eq %"struct.std::__1::pair.495"* %82, %93
  %95 = select i1 %94, %"struct.std::__1::pair.495"* %61, %"struct.std::__1::pair.495"* %82
  %96 = icmp eq %"struct.std::__1::pair.495"* %95, %61
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %95, i64 0, i32 1, i32 1
  store i8 1, i8* %98, align 4
  call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  br label %99

99:                                               ; preds = %91, %97, %48, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleD2Ev(%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura22WindowOcclusionTracker18ScopedForceVisibleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %4, %"class.aura::WindowObserver"* %7) #12
  %8 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %9 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %8) #12
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker24RemoveForceWindowVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %9, %"class.aura::Window"* %10) #12
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18ScopedForceVisible8ShutdownEv(%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 1
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %3, %"class.aura::WindowObserver"* %6) #12
  %7 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %8 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %7) #12
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker24RemoveForceWindowVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %8, %"class.aura::Window"* %9)
  store %"class.aura::Window"* null, %"class.aura::Window"** %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18ScopedForceVisibleD0Ev(%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTVN4aura22WindowOcclusionTracker18ScopedForceVisibleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %4, %"class.aura::WindowObserver"* %7) #12
  %8 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %9 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %8) #12
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker24RemoveForceWindowVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %9, %"class.aura::Window"* %10) #12
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %12) #12
  %13 = bitcast %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18ScopedForceVisible18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowOcclusionTracker::ScopedForceVisible"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 1
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker::ScopedForceVisible", %"class.aura::WindowOcclusionTracker::ScopedForceVisible"* %0, i64 0, i32 0
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* nonnull %4, %"class.aura::WindowObserver"* %7) #12
  %8 = tail call %"class.aura::Env"* @_ZN4aura3Env11GetInstanceEv() #12
  %9 = tail call %"class.aura::WindowOcclusionTracker"* @_ZN4aura3Env25GetWindowOcclusionTrackerEv(%"class.aura::Env"* %8) #12
  %10 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker24RemoveForceWindowVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %9, %"class.aura::Window"* %10) #12
  store %"class.aura::Window"* null, %"class.aura::Window"** %3, align 8
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker24RemoveForceWindowVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.484"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.484"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.484"*
  br i1 %11, label %31, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 4
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi %"struct.std::__1::pair.484"* [ %5, %13 ], [ %27, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %26, %15 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %16, i64 %18
  %20 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %19, i64 0, i32 0
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp ult %"class.aura::Window"* %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %19, i64 1
  %24 = xor i64 %18, -1
  %25 = add i64 %17, %24
  %26 = select i1 %22, i64 %25, i64 %18
  %27 = select i1 %22, %"struct.std::__1::pair.484"* %23, %"struct.std::__1::pair.484"* %16
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = ptrtoint %"struct.std::__1::pair.484"* %27 to i64
  br label %31

31:                                               ; preds = %29, %2
  %32 = phi i64 [ %30, %29 ], [ %9, %2 ]
  %33 = phi %"struct.std::__1::pair.484"* [ %27, %29 ], [ %5, %2 ]
  %34 = icmp eq %"struct.std::__1::pair.484"* %33, %12
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %33, i64 0, i32 0
  %37 = load %"class.aura::Window"*, %"class.aura::Window"** %36, align 8
  %38 = icmp ugt %"class.aura::Window"* %37, %1
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %33, i64 1
  %41 = ptrtoint %"struct.std::__1::pair.484"* %40 to i64
  br label %42

42:                                               ; preds = %31, %35, %39
  %43 = phi i64 [ %41, %39 ], [ %32, %31 ], [ %32, %35 ]
  %44 = inttoptr i64 %43 to %"struct.std::__1::pair.484"*
  %45 = icmp eq %"struct.std::__1::pair.484"* %33, %44
  %46 = select i1 %45, %"struct.std::__1::pair.484"* %12, %"struct.std::__1::pair.484"* %33
  %47 = ptrtoint %"struct.std::__1::pair.484"* %46 to i64
  %48 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %46, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  store i64 %50, i64* %48, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %177

52:                                               ; preds = %42
  %53 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %6, align 8
  %54 = icmp eq %"struct.std::__1::pair.484"* %53, %46
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  %58 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %6, align 8
  br label %59

59:                                               ; preds = %55, %52
  %60 = phi %"struct.std::__1::pair.484"* [ %53, %52 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %46, i64 1
  %62 = icmp eq %"struct.std::__1::pair.484"* %61, %60
  br i1 %62, label %126, label %63

63:                                               ; preds = %59
  %64 = getelementptr %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %60, i64 -2, i32 0
  %65 = ptrtoint %"class.aura::Window"** %64 to i64
  %66 = sub i64 %65, %47
  %67 = lshr i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %85, label %71

71:                                               ; preds = %63, %71
  %72 = phi %"struct.std::__1::pair.484"* [ %82, %71 ], [ %46, %63 ]
  %73 = phi %"struct.std::__1::pair.484"* [ %81, %71 ], [ %61, %63 ]
  %74 = phi i64 [ %83, %71 ], [ %69, %63 ]
  %75 = bitcast %"struct.std::__1::pair.484"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"struct.std::__1::pair.484"* %72 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %73, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %72, i64 0, i32 1
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %73, i64 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %72, i64 1
  %83 = add i64 %74, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %71, !llvm.loop !2

85:                                               ; preds = %71, %63
  %86 = phi %"struct.std::__1::pair.484"* [ undef, %63 ], [ %82, %71 ]
  %87 = phi %"struct.std::__1::pair.484"* [ %46, %63 ], [ %82, %71 ]
  %88 = phi %"struct.std::__1::pair.484"* [ %61, %63 ], [ %81, %71 ]
  %89 = icmp ult i64 %66, 48
  br i1 %89, label %126, label %90

90:                                               ; preds = %85, %90
  %91 = phi %"struct.std::__1::pair.484"* [ %124, %90 ], [ %87, %85 ]
  %92 = phi %"struct.std::__1::pair.484"* [ %123, %90 ], [ %88, %85 ]
  %93 = bitcast %"struct.std::__1::pair.484"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"struct.std::__1::pair.484"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 0, i32 1
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 1
  %100 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 1
  %101 = bitcast %"struct.std::__1::pair.484"* %99 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"struct.std::__1::pair.484"* %100 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 1, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 1, i32 1
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 2
  %108 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 2
  %109 = bitcast %"struct.std::__1::pair.484"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"struct.std::__1::pair.484"* %108 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 2, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 2, i32 1
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 3
  %117 = bitcast %"struct.std::__1::pair.484"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.484"* %116 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 3, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 3, i32 1
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 4
  %124 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %91, i64 4
  %125 = icmp eq %"struct.std::__1::pair.484"* %123, %60
  br i1 %125, label %126, label %90

126:                                              ; preds = %85, %90, %59
  %127 = phi %"struct.std::__1::pair.484"* [ %46, %59 ], [ %86, %85 ], [ %124, %90 ]
  store %"struct.std::__1::pair.484"* %127, %"struct.std::__1::pair.484"** %6, align 8
  %128 = call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %129 = icmp eq %"class.aura::Window"* %128, null
  br i1 %129, label %177, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %132 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %131, align 8
  %133 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %134 = bitcast %"struct.std::__1::pair.495"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = ptrtoint %"struct.std::__1::pair.495"* %132 to i64
  %137 = sub i64 %135, %136
  %138 = icmp eq i64 %137, 0
  %139 = inttoptr i64 %135 to %"struct.std::__1::pair.495"*
  br i1 %138, label %158, label %140

140:                                              ; preds = %130
  %141 = sdiv exact i64 %137, 24
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi %"struct.std::__1::pair.495"* [ %132, %140 ], [ %154, %142 ]
  %144 = phi i64 [ %141, %140 ], [ %153, %142 ]
  %145 = lshr i64 %144, 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %143, i64 %145
  %147 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %146, i64 0, i32 0
  %148 = load %"class.aura::Window"*, %"class.aura::Window"** %147, align 8
  %149 = icmp ult %"class.aura::Window"* %148, %128
  %150 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %146, i64 1
  %151 = xor i64 %145, -1
  %152 = add i64 %144, %151
  %153 = select i1 %149, i64 %152, i64 %145
  %154 = select i1 %149, %"struct.std::__1::pair.495"* %150, %"struct.std::__1::pair.495"* %143
  %155 = icmp eq i64 %153, 0
  br i1 %155, label %156, label %142

156:                                              ; preds = %142
  %157 = ptrtoint %"struct.std::__1::pair.495"* %154 to i64
  br label %158

158:                                              ; preds = %156, %130
  %159 = phi i64 [ %157, %156 ], [ %136, %130 ]
  %160 = phi %"struct.std::__1::pair.495"* [ %154, %156 ], [ %132, %130 ]
  %161 = icmp eq %"struct.std::__1::pair.495"* %160, %139
  br i1 %161, label %169, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %160, i64 0, i32 0
  %164 = load %"class.aura::Window"*, %"class.aura::Window"** %163, align 8
  %165 = icmp ugt %"class.aura::Window"* %164, %128
  br i1 %165, label %169, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %160, i64 1
  %168 = ptrtoint %"struct.std::__1::pair.495"* %167 to i64
  br label %169

169:                                              ; preds = %166, %162, %158
  %170 = phi i64 [ %168, %166 ], [ %159, %158 ], [ %159, %162 ]
  %171 = inttoptr i64 %170 to %"struct.std::__1::pair.495"*
  %172 = icmp eq %"struct.std::__1::pair.495"* %160, %171
  %173 = select i1 %172, %"struct.std::__1::pair.495"* %139, %"struct.std::__1::pair.495"* %160
  %174 = icmp eq %"struct.std::__1::pair.495"* %173, %139
  br i1 %174, label %177, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %173, i64 0, i32 1, i32 1
  store i8 1, i8* %176, align 4
  call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  br label %177

177:                                              ; preds = %169, %175, %126, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker5TrackEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair.112", align 8
  %4 = alloca %"struct.aura::WindowOcclusionTracker::OcclusionData", align 8
  %5 = ptrtoint %"class.aura::Window"* %1 to i64
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0
  %7 = bitcast %"struct.std::__1::pair.112"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #12
  %8 = bitcast %"struct.aura::WindowOcclusionTracker::OcclusionData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %4, i64 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %4, i64 0, i32 1
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* %10) #12
  %11 = bitcast %"struct.std::__1::pair.112"* %3 to i64*
  store i64 %5, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %3, i64 0, i32 1, i32 0
  %13 = load i32, i32* %9, align 8
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %3, i64 0, i32 1, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %14, %class.SkRegion* dereferenceable(24) %10) #12
  %15 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.109", %"class.base::internal::flat_tree.109"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %16, align 8
  %18 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.112"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = ptrtoint %"struct.std::__1::pair.112"* %17 to i64
  %22 = sub i64 %20, %21
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %20 to %"struct.std::__1::pair.112"*
  br i1 %23, label %42, label %25

25:                                               ; preds = %2
  %26 = sdiv exact i64 %22, 40
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  br label %28

28:                                               ; preds = %28, %25
  %29 = phi %"struct.std::__1::pair.112"* [ %17, %25 ], [ %40, %28 ]
  %30 = phi i64 [ %26, %25 ], [ %39, %28 ]
  %31 = lshr i64 %30, 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %29, i64 %31
  %33 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %32, i64 0, i32 0
  %34 = load %"class.aura::Window"*, %"class.aura::Window"** %33, align 8
  %35 = icmp ult %"class.aura::Window"* %34, %27
  %36 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %32, i64 1
  %37 = xor i64 %31, -1
  %38 = add i64 %30, %37
  %39 = select i1 %35, i64 %38, i64 %31
  %40 = select i1 %35, %"struct.std::__1::pair.112"* %36, %"struct.std::__1::pair.112"* %29
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %28

42:                                               ; preds = %28, %2
  %43 = phi %"struct.std::__1::pair.112"* [ %17, %2 ], [ %40, %28 ]
  %44 = icmp eq %"struct.std::__1::pair.112"* %43, %24
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %43, i64 0, i32 0
  %47 = load %"class.aura::Window"*, %"class.aura::Window"** %15, align 8
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %46, align 8
  %49 = icmp ult %"class.aura::Window"* %47, %48
  br i1 %49, label %50, label %59

50:                                               ; preds = %45, %42
  %51 = getelementptr inbounds %"class.base::internal::flat_tree.109", %"class.base::internal::flat_tree.109"* %6, i64 0, i32 0
  %52 = call %"struct.std::__1::pair.112"* @_ZNSt3__16vectorINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker13OcclusionDataEEENS_9allocatorIS7_EEE7emplaceIJS7_EEENS_11__wrap_iterIPS7_EENSC_IPKS7_EEDpOT_(%"class.std::__1::vector.110"* %51, %"struct.std::__1::pair.112"* %43, %"struct.std::__1::pair.112"* nonnull dereferenceable(40) %3) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %14) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %10) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #12
  %53 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %54 = load %"class.aura::Window"**, %"class.aura::Window"*** %53, align 8
  %55 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %56 = load %"class.aura::Window"**, %"class.aura::Window"*** %55, align 8
  %57 = icmp eq %"class.aura::Window"** %54, %56
  %58 = ptrtoint %"class.aura::Window"** %54 to i64
  br i1 %57, label %67, label %60

59:                                               ; preds = %45
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %14) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %10) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #12
  br label %144

60:                                               ; preds = %50, %64
  %61 = phi %"class.aura::Window"** [ %65, %64 ], [ %54, %50 ]
  %62 = load %"class.aura::Window"*, %"class.aura::Window"** %61, align 8
  %63 = icmp eq %"class.aura::Window"* %62, %1
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %61, i64 1
  %66 = icmp eq %"class.aura::Window"** %65, %56
  br i1 %66, label %70, label %60

67:                                               ; preds = %60, %50
  %68 = phi %"class.aura::Window"** [ %54, %50 ], [ %61, %60 ]
  %69 = icmp eq %"class.aura::Window"** %68, %56
  br i1 %69, label %70, label %140

70:                                               ; preds = %64, %67
  %71 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1
  %72 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = load %"class.aura::Window"**, %"class.aura::Window"*** %72, align 8
  %74 = icmp eq %"class.aura::Window"** %56, %73
  %75 = ptrtoint %"class.aura::Window"** %73 to i64
  br i1 %74, label %81, label %76

76:                                               ; preds = %70
  %77 = bitcast %"class.aura::Window"** %56 to i64*
  store i64 %5, i64* %77, align 8
  %78 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %56, i64 1
  %79 = ptrtoint %"class.aura::Window"** %78 to i64
  %80 = bitcast %"class.aura::Window"*** %55 to i64*
  store i64 %79, i64* %80, align 8
  br label %137

81:                                               ; preds = %70
  %82 = ptrtoint %"class.aura::Window"** %56 to i64
  %83 = bitcast %"class.aura::Window"*** %55 to i64*
  %84 = bitcast %"class.std::__1::vector.445"* %71 to i64*
  %85 = sub i64 %82, %58
  %86 = ashr exact i64 %85, 3
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 2305843009213693951
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.std::__1::vector.445"* %71 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #14
  unreachable

91:                                               ; preds = %81
  %92 = bitcast %"class.aura::Window"*** %72 to i64*
  %93 = sub i64 %75, %58
  %94 = ashr exact i64 %93, 3
  %95 = icmp ult i64 %94, 1152921504606846975
  br i1 %95, label %96, label %104

96:                                               ; preds = %91
  %97 = ashr exact i64 %93, 2
  %98 = icmp ult i64 %97, %87
  %99 = select i1 %98, i64 %87, i64 %97
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %96
  %102 = icmp ugt i64 %99, 2305843009213693951
  br i1 %102, label %103, label %104

103:                                              ; preds = %101
  call void @abort() #14
  unreachable

104:                                              ; preds = %101, %91
  %105 = phi i64 [ %99, %101 ], [ 2305843009213693951, %91 ]
  %106 = shl i64 %105, 3
  %107 = call i8* @_Znwm(i64 %106) #13
  %108 = bitcast i8* %107 to %"class.aura::Window"**
  br label %109

109:                                              ; preds = %104, %96
  %110 = phi i64 [ %105, %104 ], [ 0, %96 ]
  %111 = phi %"class.aura::Window"** [ %108, %104 ], [ null, %96 ]
  %112 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %111, i64 %86
  %113 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %111, i64 %110
  %114 = ptrtoint %"class.aura::Window"** %113 to i64
  %115 = bitcast %"class.aura::Window"** %112 to i64*
  store i64 %5, i64* %115, align 8
  %116 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %112, i64 1
  %117 = ptrtoint %"class.aura::Window"** %116 to i64
  %118 = getelementptr inbounds %"class.std::__1::vector.445", %"class.std::__1::vector.445"* %71, i64 0, i32 0, i32 0
  %119 = load %"class.aura::Window"**, %"class.aura::Window"*** %118, align 8
  %120 = load i64, i64* %83, align 8
  %121 = ptrtoint %"class.aura::Window"** %119 to i64
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %112, i64 %124
  %126 = ptrtoint %"class.aura::Window"** %125 to i64
  %127 = icmp sgt i64 %122, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %109
  %129 = bitcast %"class.aura::Window"** %125 to i8*
  %130 = bitcast %"class.aura::Window"** %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 %122, i1 false) #12
  %131 = load %"class.aura::Window"**, %"class.aura::Window"*** %118, align 8
  br label %132

132:                                              ; preds = %128, %109
  %133 = phi %"class.aura::Window"** [ %119, %109 ], [ %131, %128 ]
  store i64 %126, i64* %84, align 8
  store i64 %117, i64* %83, align 8
  store i64 %114, i64* %92, align 8
  %134 = icmp eq %"class.aura::Window"** %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = bitcast %"class.aura::Window"** %133 to i8*
  call void @_ZdlPv(i8* %136) #13
  br label %137

137:                                              ; preds = %76, %132, %135
  %138 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 0
  %139 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %138, align 8
  call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %139) #12
  br label %140

140:                                              ; preds = %67, %137
  %141 = call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %142 = icmp eq %"class.aura::Window"* %141, null
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  call void @_ZN4aura22WindowOcclusionTracker24TrackedWindowAddedToRootEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br label %144

144:                                              ; preds = %59, %143, %140
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker24TrackedWindowAddedToRootEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.aura::WindowOcclusionTracker::RootWindowState", align 4
  %4 = alloca %"class.aura::Window"*, align 8
  %5 = bitcast %"class.aura::Window"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  store %"class.aura::Window"* %6, %"class.aura::Window"** %4, align 8
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.base::flat_map.491", %"class.base::flat_map.491"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %8, align 8
  %10 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair.495"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.495"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.495"*
  br i1 %15, label %33, label %17

17:                                               ; preds = %2
  %18 = sdiv exact i64 %14, 24
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %"struct.std::__1::pair.495"* [ %9, %17 ], [ %31, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %30, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %23, i64 0, i32 0
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %24, align 8
  %26 = icmp ult %"class.aura::Window"* %25, %6
  %27 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %23, i64 1
  %28 = xor i64 %22, -1
  %29 = add i64 %21, %28
  %30 = select i1 %26, i64 %29, i64 %22
  %31 = select i1 %26, %"struct.std::__1::pair.495"* %27, %"struct.std::__1::pair.495"* %20
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %2
  %34 = phi %"struct.std::__1::pair.495"* [ %9, %2 ], [ %31, %19 ]
  %35 = icmp eq %"struct.std::__1::pair.495"* %34, %16
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %34, i64 0, i32 0
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %37, align 8
  %39 = icmp ult %"class.aura::Window"* %6, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %36, %33
  %41 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.base::flat_map.491", %"class.base::flat_map.491"* %7, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 0, i64 12, i1 false) #12
  %43 = call %"struct.std::__1::pair.495"* @_ZNSt3__16vectorINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker15RootWindowStateEEENS_9allocatorIS7_EEE7emplaceIJRKS4_S6_EEENS_11__wrap_iterIPS7_EENSE_IPKS7_EEDpOT_(%"class.std::__1::vector.493"* %42, %"struct.std::__1::pair.495"* %34, %"class.aura::Window"** nonnull dereferenceable(8) %4, %"struct.aura::WindowOcclusionTracker::RootWindowState"* nonnull dereferenceable(12) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41) #12
  br label %44

44:                                               ; preds = %36, %40
  %45 = phi %"struct.std::__1::pair.495"* [ %43, %40 ], [ %34, %36 ]
  %46 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %45, i64 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 4
  %49 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %45, i64 0, i32 1, i32 1
  store i8 1, i8* %49, align 4
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %44
  %52 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  call void @_ZN4aura22WindowOcclusionTracker33AddObserverToWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %52)
  %53 = load %"class.aura::Window"*, %"class.aura::Window"** %4, align 8
  %54 = call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %53) #12
  %55 = icmp eq %"class.aura::WindowTreeHost"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 2
  call void @_ZN4aura14WindowTreeHost11AddObserverEPNS_22WindowTreeHostObserverE(%"class.aura::WindowTreeHost"* nonnull %54, %"class.aura::WindowTreeHostObserver"* %57) #12
  %58 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 15
  call void @_ZN4aura28NativeWindowOcclusionTracker35EnableNativeWindowOcclusionTrackingEPNS_14WindowTreeHostE(%"class.aura::NativeWindowOcclusionTracker"* %58, %"class.aura::WindowTreeHost"* nonnull %54) #12
  br label %59

59:                                               ; preds = %56, %51, %44
  call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker31ComputeTargetOcclusionForWindowEPNS_6WindowE(%"struct.aura::WindowOcclusionTracker::OcclusionData"* noalias sret, %"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::AutoReset", align 8
  %5 = alloca %"struct.aura::WindowOcclusionTracker::OcclusionData", align 8
  %6 = alloca %class.SkRegion, align 8
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = ptrtoint %"class.aura::Window"* %2 to i64
  %9 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %9, align 8
  %11 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair.112"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint %"struct.std::__1::pair.112"* %10 to i64
  %15 = sub i64 %13, %14
  %16 = icmp eq i64 %15, 0
  %17 = inttoptr i64 %13 to %"struct.std::__1::pair.112"*
  br i1 %16, label %36, label %18

18:                                               ; preds = %3
  %19 = sdiv exact i64 %15, 40
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %"struct.std::__1::pair.112"* [ %10, %18 ], [ %32, %20 ]
  %22 = phi i64 [ %19, %18 ], [ %31, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %21, i64 %23
  %25 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %24, i64 0, i32 0
  %26 = load %"class.aura::Window"*, %"class.aura::Window"** %25, align 8
  %27 = icmp ult %"class.aura::Window"* %26, %2
  %28 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %24, i64 1
  %29 = xor i64 %23, -1
  %30 = add i64 %22, %29
  %31 = select i1 %27, i64 %30, i64 %23
  %32 = select i1 %27, %"struct.std::__1::pair.112"* %28, %"struct.std::__1::pair.112"* %21
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %20

34:                                               ; preds = %20
  %35 = ptrtoint %"struct.std::__1::pair.112"* %32 to i64
  br label %36

36:                                               ; preds = %34, %3
  %37 = phi i64 [ %35, %34 ], [ %14, %3 ]
  %38 = phi %"struct.std::__1::pair.112"* [ %32, %34 ], [ %10, %3 ]
  %39 = icmp eq %"struct.std::__1::pair.112"* %38, %17
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %38, i64 0, i32 0
  %42 = load %"class.aura::Window"*, %"class.aura::Window"** %41, align 8
  %43 = icmp ugt %"class.aura::Window"* %42, %2
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %38, i64 1
  %46 = ptrtoint %"struct.std::__1::pair.112"* %45 to i64
  br label %47

47:                                               ; preds = %36, %40, %44
  %48 = phi i64 [ %46, %44 ], [ %37, %36 ], [ %37, %40 ]
  %49 = inttoptr i64 %48 to %"struct.std::__1::pair.112"*
  %50 = icmp eq %"struct.std::__1::pair.112"* %38, %49
  %51 = select i1 %50, %"struct.std::__1::pair.112"* %17, %"struct.std::__1::pair.112"* %38
  %52 = bitcast %"class.base::AutoReset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 40, i1 false)
  %53 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %51, i64 0, i32 1
  %54 = bitcast %"struct.aura::WindowOcclusionTracker::OcclusionData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %5, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %5, i64 0, i32 1
  %57 = bitcast %"struct.aura::WindowOcclusionTracker::OcclusionData"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 32, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* %56) #12
  %58 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %4, i64 0, i32 0
  store %"struct.aura::WindowOcclusionTracker::OcclusionData"* %53, %"struct.aura::WindowOcclusionTracker::OcclusionData"** %58, align 8
  %59 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %4, i64 0, i32 1
  %60 = bitcast %"struct.aura::WindowOcclusionTracker::OcclusionData"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 -86, i64 32, i1 false) #12, !alias.scope !4
  %61 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %59, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %53, i64 0, i32 0
  %63 = load i32, i32* %62, align 8, !noalias !4
  store i32 %63, i32* %61, align 8, !alias.scope !4
  %64 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %4, i64 0, i32 1, i32 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %51, i64 0, i32 1, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %64, %class.SkRegion* dereferenceable(24) %65) #12
  %66 = load i32, i32* %55, align 8, !noalias !4
  store i32 %66, i32* %62, align 8, !noalias !4
  %67 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %65, %class.SkRegion* dereferenceable(24) %56) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #12
  %68 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %1, i64 0, i32 14
  %69 = bitcast %"class.aura::Window"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %8, i64* %69, align 8
  %71 = call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %2) #12
  %72 = bitcast %class.SkRegion* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #12
  %73 = bitcast %class.SkRegion* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %6) #12
  %74 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %74) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %75 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %75, align 4
  %76 = call zeroext i1 @_ZN4aura22WindowOcclusionTracker22RecomputeOcclusionImplEPNS_6WindowERKN3gfx9TransformEPK7SkIRectP8SkRegion(%"class.aura::WindowOcclusionTracker"* %1, %"class.aura::Window"* %71, %"class.gfx::Transform"* nonnull dereferenceable(68) %7, %struct.SkIRect* null, %class.SkRegion* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %74) #12
  %77 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %0, i64 0, i32 0
  %78 = load i32, i32* %62, align 8
  store i32 %78, i32* %77, align 8
  %79 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %0, i64 0, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %79, %class.SkRegion* dereferenceable(24) %65) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #12
  %80 = icmp eq %"class.aura::Window"** %68, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %47
  store i64 %70, i64* %69, align 8
  br label %82

82:                                               ; preds = %47, %81
  %83 = load %"struct.aura::WindowOcclusionTracker::OcclusionData"*, %"struct.aura::WindowOcclusionTracker::OcclusionData"** %58, align 8
  %84 = icmp eq %"struct.aura::WindowOcclusionTracker::OcclusionData"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.base::AutoReset", %"class.base::AutoReset"* %4, i64 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %83, i64 0, i32 0
  store i32 %87, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::OcclusionData", %"struct.aura::WindowOcclusionTracker::OcclusionData"* %83, i64 0, i32 1
  %90 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %89, %class.SkRegion* dereferenceable(24) %64) #12
  br label %91

91:                                               ; preds = %82, %85
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %64) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura22WindowOcclusionTracker22RecomputeOcclusionImplEPNS_6WindowERKN3gfx9TransformEPK7SkIRectP8SkRegion(%"class.aura::WindowOcclusionTracker"* nocapture, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68), %struct.SkIRect*, %class.SkRegion*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = alloca %"class.gfx::Rect", align 4
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %struct.SkIRect*
  %15 = alloca %class.SkRegion, align 8
  %16 = alloca %class.SkRegion, align 8
  %17 = alloca %class.SkRegion, align 8
  %18 = alloca %class.SkRegion, align 8
  %19 = alloca { i64, i64 }, align 8
  %20 = bitcast { i64, i64 }* %19 to %struct.SkIRect*
  %21 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %21, align 8
  %23 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::pair.484"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = ptrtoint %"struct.std::__1::pair.484"* %22 to i64
  %27 = sub i64 %25, %26
  %28 = icmp eq i64 %27, 0
  %29 = inttoptr i64 %25 to %"struct.std::__1::pair.484"*
  br i1 %28, label %48, label %30

30:                                               ; preds = %5
  %31 = ashr exact i64 %27, 4
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi %"struct.std::__1::pair.484"* [ %22, %30 ], [ %44, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %43, %32 ]
  %35 = lshr i64 %34, 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %33, i64 %35
  %37 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %36, i64 0, i32 0
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %37, align 8
  %39 = icmp ult %"class.aura::Window"* %38, %1
  %40 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %36, i64 1
  %41 = xor i64 %35, -1
  %42 = add i64 %34, %41
  %43 = select i1 %39, i64 %42, i64 %35
  %44 = select i1 %39, %"struct.std::__1::pair.484"* %40, %"struct.std::__1::pair.484"* %33
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %46, label %32

46:                                               ; preds = %32
  %47 = ptrtoint %"struct.std::__1::pair.484"* %44 to i64
  br label %48

48:                                               ; preds = %46, %5
  %49 = phi i64 [ %47, %46 ], [ %26, %5 ]
  %50 = phi %"struct.std::__1::pair.484"* [ %44, %46 ], [ %22, %5 ]
  %51 = icmp eq %"struct.std::__1::pair.484"* %50, %29
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %50, i64 0, i32 0
  %54 = load %"class.aura::Window"*, %"class.aura::Window"** %53, align 8
  %55 = icmp ugt %"class.aura::Window"* %54, %1
  br i1 %55, label %56, label %72

56:                                               ; preds = %48, %52
  %57 = ptrtoint %"struct.std::__1::pair.484"* %50 to i64
  %58 = icmp eq i64 %49, %57
  br i1 %58, label %59, label %72

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %61 = load %"class.aura::Window"*, %"class.aura::Window"** %60, align 8
  %62 = icmp eq %"class.aura::Window"* %61, null
  %63 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %64 = load %"class.ui::Layer"*, %"class.ui::Layer"** %63, align 8
  br i1 %62, label %67, label %65

65:                                               ; preds = %59
  %66 = tail call zeroext i1 @_ZNK2ui5Layer19GetTargetVisibilityEv(%"class.ui::Layer"* %64) #12
  br i1 %66, label %72, label %71

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %64, i64 0, i32 14
  %69 = load i8, i8* %68, align 8, !range !7
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %67, %65
  tail call void @_ZN4aura22WindowOcclusionTracker34SetWindowAndDescendantsAreOccludedEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext true, i1 zeroext true)
  br label %290

72:                                               ; preds = %52, %67, %56, %65
  %73 = phi i1 [ true, %56 ], [ false, %67 ], [ false, %65 ], [ true, %52 ]
  %74 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %75 = load %"class.aura::Window"*, %"class.aura::Window"** %74, align 8
  %76 = icmp eq %"class.aura::Window"* %75, null
  br i1 %76, label %77, label %113

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %79 = load %"class.aura::Window"**, %"class.aura::Window"*** %78, align 8
  %80 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %81 = bitcast %"class.aura::Window"*** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = ptrtoint %"class.aura::Window"** %79 to i64
  %84 = sub i64 %82, %83
  %85 = icmp eq i64 %84, 0
  %86 = inttoptr i64 %82 to %"class.aura::Window"**
  br i1 %85, label %102, label %87

87:                                               ; preds = %77
  %88 = ashr exact i64 %84, 3
  br label %89

89:                                               ; preds = %89, %87
  %90 = phi %"class.aura::Window"** [ %79, %87 ], [ %100, %89 ]
  %91 = phi i64 [ %88, %87 ], [ %99, %89 ]
  %92 = lshr i64 %91, 1
  %93 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %90, i64 %92
  %94 = load %"class.aura::Window"*, %"class.aura::Window"** %93, align 8
  %95 = icmp ult %"class.aura::Window"* %94, %1
  %96 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %93, i64 1
  %97 = xor i64 %92, -1
  %98 = add i64 %91, %97
  %99 = select i1 %95, i64 %98, i64 %92
  %100 = select i1 %95, %"class.aura::Window"** %96, %"class.aura::Window"** %90
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %102, label %89

102:                                              ; preds = %89, %77
  %103 = phi %"class.aura::Window"** [ %79, %77 ], [ %100, %89 ]
  %104 = icmp eq %"class.aura::Window"** %103, %86
  br i1 %104, label %113, label %105

105:                                              ; preds = %102
  %106 = load %"class.aura::Window"*, %"class.aura::Window"** %103, align 8
  %107 = icmp ugt %"class.aura::Window"* %106, %1
  br i1 %107, label %113, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %110 = load %"class.ui::Layer"*, %"class.ui::Layer"** %109, align 8
  %111 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %110) #12
  %112 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %111, i32 71) #12
  br i1 %112, label %144, label %113

113:                                              ; preds = %102, %72, %105, %108
  %114 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %115 = load %"class.aura::Window"**, %"class.aura::Window"*** %114, align 8
  %116 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %117 = bitcast %"class.aura::Window"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = ptrtoint %"class.aura::Window"** %115 to i64
  %120 = sub i64 %118, %119
  %121 = icmp eq i64 %120, 0
  %122 = inttoptr i64 %118 to %"class.aura::Window"**
  br i1 %121, label %138, label %123

123:                                              ; preds = %113
  %124 = ashr exact i64 %120, 3
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi %"class.aura::Window"** [ %115, %123 ], [ %136, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %135, %125 ]
  %128 = lshr i64 %127, 1
  %129 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %126, i64 %128
  %130 = load %"class.aura::Window"*, %"class.aura::Window"** %129, align 8
  %131 = icmp ult %"class.aura::Window"* %130, %1
  %132 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %129, i64 1
  %133 = xor i64 %128, -1
  %134 = add i64 %127, %133
  %135 = select i1 %131, i64 %134, i64 %128
  %136 = select i1 %131, %"class.aura::Window"** %132, %"class.aura::Window"** %126
  %137 = icmp eq i64 %135, 0
  br i1 %137, label %138, label %125

138:                                              ; preds = %125, %113
  %139 = phi %"class.aura::Window"** [ %115, %113 ], [ %136, %125 ]
  %140 = icmp eq %"class.aura::Window"** %139, %122
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = load %"class.aura::Window"*, %"class.aura::Window"** %139, align 8
  %143 = icmp ugt %"class.aura::Window"* %142, %1
  br i1 %143, label %145, label %144

144:                                              ; preds = %141, %108
  tail call void @_ZN4aura22WindowOcclusionTracker34SetWindowAndDescendantsAreOccludedEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext false, i1 zeroext true)
  br label %290

145:                                              ; preds = %141, %138
  %146 = bitcast %"class.gfx::Transform"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %146) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %146, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN4aura12_GLOBAL__N_132GetWindowTransformRelativeToRootEPNS_6WindowERKN3gfx9TransformEb.transform_relative_to_root to i8*), i64 68, i1 false)
  %147 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 8
  %148 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %147, align 8, !noalias !8
  %149 = icmp eq %"class.aura::WindowTreeHost"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %146, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %151 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %12, i64 0, i32 0, i32 1
  store i8 0, i8* %151, align 4, !alias.scope !8
  br label %191

152:                                              ; preds = %145
  %153 = load %"class.aura::Window"*, %"class.aura::Window"** %74, align 8
  %154 = icmp eq %"class.aura::Window"* %153, null
  %155 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %155) #12, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %155, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN4aura12_GLOBAL__N_132GetWindowTransformRelativeToRootEPNS_6WindowERKN3gfx9TransformEb.transform_relative_to_root to i8*), i64 68, i1 false) #12, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %155, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12, !noalias !8
  %156 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %156, align 4, !noalias !8
  %157 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %157) #12, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %157, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN4aura12_GLOBAL__N_132GetWindowTransformRelativeToRootEPNS_6WindowERKN3gfx9TransformEb.transform_relative_to_root to i8*), i64 68, i1 false) #12, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %157, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12, !noalias !8
  %158 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %8, i64 0, i32 0, i32 1
  store i8 0, i8* %158, align 4, !noalias !8
  %159 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %160 = load %"class.ui::Layer"*, %"class.ui::Layer"** %159, align 8, !noalias !8
  br i1 %154, label %174, label %161

161:                                              ; preds = %152
  %162 = tail call { i64, i64 } @_ZNK2ui5Layer15GetTargetBoundsEv(%"class.ui::Layer"* %160) #12, !noalias !8
  %163 = extractvalue { i64, i64 } %162, 0
  %164 = trunc i64 %163 to i32
  %165 = sitofp i32 %164 to float
  %166 = load %"class.ui::Layer"*, %"class.ui::Layer"** %159, align 8, !noalias !8
  %167 = tail call { i64, i64 } @_ZNK2ui5Layer15GetTargetBoundsEv(%"class.ui::Layer"* %166) #12, !noalias !8
  %168 = extractvalue { i64, i64 } %167, 0
  %169 = lshr i64 %168, 32
  %170 = trunc i64 %169 to i32
  %171 = sitofp i32 %170 to float
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* nonnull %7, float %165, float %171) #12, !noalias !8
  %172 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %172) #12, !noalias !8
  %173 = load %"class.ui::Layer"*, %"class.ui::Layer"** %159, align 8, !noalias !8
  call void @_ZNK2ui5Layer18GetTargetTransformEv(%"class.gfx::Transform"* nonnull sret %9, %"class.ui::Layer"* %173) #12, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %157, i8* nonnull align 4 %172, i64 68, i1 false) #12, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %172) #12, !noalias !8
  br label %190

174:                                              ; preds = %152
  %175 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %160, i64 0, i32 12, i32 0, i32 0
  %176 = load i32, i32* %175, align 4, !noalias !8
  %177 = sitofp i32 %176 to float
  %178 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %160, i64 0, i32 12, i32 0, i32 1
  %179 = load i32, i32* %178, align 4, !noalias !8
  %180 = sitofp i32 %179 to float
  call void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"* nonnull %7, float %177, float %180) #12, !noalias !8
  %181 = load %"class.ui::Layer"*, %"class.ui::Layer"** %159, align 8, !noalias !8
  %182 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %181, i64 0, i32 42
  %183 = load %"class.cc::Layer"*, %"class.cc::Layer"** %182, align 8, !noalias !8
  %184 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %183, i64 0, i32 6, i32 0, i32 0, i32 0
  %185 = load %"struct.cc::Layer::LayerTreeInputs"*, %"struct.cc::Layer::LayerTreeInputs"** %184, align 8, !noalias !8
  %186 = icmp eq %"struct.cc::Layer::LayerTreeInputs"* %185, null
  %187 = getelementptr inbounds %"struct.cc::Layer::LayerTreeInputs", %"struct.cc::Layer::LayerTreeInputs"* %185, i64 0, i32 6
  %188 = bitcast %"class.gfx::Transform"* %187 to i8*
  %189 = select i1 %186, i8* bitcast ({ { [4 x [4 x float]], i8 } }* @_ZN2cc5Layer18kIdentityTransformE to i8*), i8* %188
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %157, i8* align 4 %189, i64 68, i1 false) #12, !noalias !8
  br label %190

190:                                              ; preds = %174, %161
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* nonnull %8, %"class.gfx::Transform"* nonnull dereferenceable(68) %7) #12, !noalias !8
  call void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"* nonnull %8, %"class.gfx::Transform"* dereferenceable(68) %2) #12, !noalias !8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %146, i8* nonnull align 4 %157, i64 68, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %157) #12, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %155) #12, !noalias !8
  br label %191

191:                                              ; preds = %150, %190
  %192 = call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* nonnull %12) #12
  br i1 %192, label %194, label %193

193:                                              ; preds = %191
  call void @_ZN4aura22WindowOcclusionTracker34SetWindowAndDescendantsAreOccludedEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext false, i1 zeroext true)
  br label %288

194:                                              ; preds = %191
  %195 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #12
  %196 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %197 = select i1 %73, %struct.SkIRect* null, %struct.SkIRect* %3
  %198 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 -86, i64 16, i1 false)
  %199 = load %"class.aura::Window"*, %"class.aura::Window"** %74, align 8
  %200 = icmp eq %"class.aura::Window"* %199, null
  br i1 %200, label %206, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %203 = load %"class.ui::Layer"*, %"class.ui::Layer"** %202, align 8
  %204 = call { i64, i64 } @_ZNK2ui5Layer15GetTargetBoundsEv(%"class.ui::Layer"* %203) #12
  %205 = extractvalue { i64, i64 } %204, 1
  br label %210

206:                                              ; preds = %194
  %207 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 7, i32 1
  %208 = bitcast %"class.gfx::Size"* %207 to i64*
  %209 = load i64, i64* %208, align 4
  br label %210

210:                                              ; preds = %201, %206
  %211 = phi i64 [ %205, %201 ], [ %209, %206 ]
  %212 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212) #12
  %213 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %213, align 4
  %214 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  store i32 0, i32* %214, align 4
  %215 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1
  %216 = bitcast %"class.gfx::Size"* %215 to i64*
  store i64 %211, i64* %216, align 4
  %217 = call fastcc { i64, i64 } @_ZN4aura12_GLOBAL__N_134ComputeClippedAndTransformedBoundsERKN3gfx4RectERKNS1_9TransformEPK7SkIRect(%"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.gfx::Transform"* nonnull dereferenceable(68) %12, %struct.SkIRect* %197) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212) #12
  %218 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %219 = extractvalue { i64, i64 } %217, 0
  store i64 %219, i64* %218, align 8
  %220 = extractvalue { i64, i64 } %217, 1
  store i64 %220, i64* %196, align 8
  %221 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %222 = load %"class.ui::Layer"*, %"class.ui::Layer"** %221, align 8
  %223 = call zeroext i1 @_ZNK2ui5Layer16GetMasksToBoundsEv(%"class.ui::Layer"* %222) #12
  %224 = select i1 %223, %struct.SkIRect* %14, %struct.SkIRect* %3
  %225 = bitcast %class.SkRegion* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #12
  %226 = bitcast %class.SkRegion* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* nonnull %15, %class.SkRegion* dereferenceable(24) %4) #12
  %227 = bitcast %class.SkRegion* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #12
  %228 = bitcast %class.SkRegion* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %16) #12
  %229 = select i1 %73, %class.SkRegion* %16, %class.SkRegion* %4
  %230 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 1
  %231 = load %"class.aura::Window"**, %"class.aura::Window"*** %230, align 8
  %232 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 0
  %233 = load %"class.aura::Window"**, %"class.aura::Window"*** %232, align 8
  %234 = icmp eq %"class.aura::Window"** %231, %233
  br i1 %234, label %235, label %237

235:                                              ; preds = %237, %210
  %236 = phi i1 [ false, %210 ], [ %243, %237 ]
  br i1 %73, label %251, label %245

237:                                              ; preds = %210, %237
  %238 = phi i1 [ %243, %237 ], [ false, %210 ]
  %239 = phi %"class.aura::Window"** [ %240, %237 ], [ %231, %210 ]
  %240 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %239, i64 -1
  %241 = load %"class.aura::Window"*, %"class.aura::Window"** %240, align 8
  %242 = call zeroext i1 @_ZN4aura22WindowOcclusionTracker22RecomputeOcclusionImplEPNS_6WindowERKN3gfx9TransformEPK7SkIRectP8SkRegion(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %241, %"class.gfx::Transform"* nonnull dereferenceable(68) %12, %struct.SkIRect* %224, %class.SkRegion* %229)
  %243 = or i1 %238, %242
  %244 = icmp eq %"class.aura::Window"** %240, %233
  br i1 %244, label %235, label %237

245:                                              ; preds = %235
  %246 = call zeroext i1 @_ZNK8SkRegion8containsERK7SkIRect(%class.SkRegion* %4, %struct.SkIRect* nonnull dereferenceable(16) %14) #12
  %247 = xor i1 %246, true
  %248 = or i1 %236, %247
  br i1 %248, label %253, label %249

249:                                              ; preds = %245
  %250 = bitcast %class.SkRegion* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #12
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %17) #12
  call void @_ZN4aura22WindowOcclusionTracker11SetOccludedEPNS_6WindowEbbRK8SkRegion(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext true, i1 zeroext true, %class.SkRegion* nonnull dereferenceable(24) %17)
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #12
  br label %286

251:                                              ; preds = %235
  %252 = bitcast %class.SkRegion* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #12
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %18) #12
  br label %255

253:                                              ; preds = %245
  %254 = bitcast %class.SkRegion* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #12
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* nonnull %18, %class.SkRegion* nonnull dereferenceable(24) %15) #12
  br label %255

255:                                              ; preds = %253, %251
  %256 = phi i8* [ %254, %253 ], [ %252, %251 ]
  call void @_ZN4aura22WindowOcclusionTracker11SetOccludedEPNS_6WindowEbbRK8SkRegion(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext false, i1 zeroext true, %class.SkRegion* nonnull dereferenceable(24) %18)
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %256) #12
  br i1 %73, label %286, label %257

257:                                              ; preds = %255
  %258 = call zeroext i1 @_ZNK4aura22WindowOcclusionTracker35VisibleWindowCanOccludeOtherWindowsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br i1 %258, label %259, label %286

259:                                              ; preds = %257
  %260 = bitcast { i64, i64 }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %260) #12
  %261 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 23, i32 0, i32 0
  %262 = bitcast { i64, i64 }* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 -86, i64 16, i1 false)
  %263 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %261, align 8
  %264 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 23, i32 0, i32 1
  %265 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %264, align 8
  %266 = icmp eq %"class.gfx::Rect"* %263, %265
  br i1 %266, label %283, label %267

267:                                              ; preds = %259
  %268 = bitcast %"class.gfx::Rect"* %263 to i8*
  %269 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  %270 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %270, i8* align 4 %268, i64 16, i1 false) #12
  %271 = bitcast %"class.gfx::Rect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %271) #12
  %272 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 7, i32 1
  %273 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 0
  store i32 0, i32* %273, align 4
  %274 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  store i32 0, i32* %274, align 4
  %275 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1
  %276 = bitcast %"class.gfx::Size"* %272 to i64*
  %277 = bitcast %"class.gfx::Size"* %275 to i64*
  %278 = load i64, i64* %276, align 4
  store i64 %278, i64* %277, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %271) #12
  %279 = call fastcc { i64, i64 } @_ZN4aura12_GLOBAL__N_134ComputeClippedAndTransformedBoundsERKN3gfx4RectERKNS1_9TransformEPK7SkIRect(%"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::Transform"* nonnull dereferenceable(68) %12, %struct.SkIRect* %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #12
  %280 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 0
  %281 = extractvalue { i64, i64 } %279, 0
  store i64 %281, i64* %280, align 8
  %282 = extractvalue { i64, i64 } %279, 1
  store i64 %282, i64* %269, align 8
  br label %284

283:                                              ; preds = %259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %260, i8* nonnull align 8 %195, i64 16, i1 false)
  br label %284

284:                                              ; preds = %283, %267
  %285 = call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* %4, %class.SkRegion* dereferenceable(24) %4, %struct.SkIRect* nonnull dereferenceable(16) %20, i32 2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %260) #12
  br label %286

286:                                              ; preds = %255, %257, %284, %249
  %287 = phi i1 [ false, %249 ], [ true, %284 ], [ true, %257 ], [ true, %255 ]
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #12
  br label %288

288:                                              ; preds = %286, %193
  %289 = phi i1 [ %287, %286 ], [ true, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %146) #12
  br label %290

290:                                              ; preds = %288, %144, %71
  %291 = phi i1 [ true, %144 ], [ %289, %288 ], [ false, %71 ]
  ret i1 %291
}

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTrackerC2Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0
  tail call void @_ZN2ui22LayerAnimationObserverC2Ev(%"class.ui::LayerAnimationObserver"* %2) #12
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 1
  tail call void @_ZN4aura14WindowObserverC2Ev(%"class.aura::WindowObserver"* %3) #12
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [30 x i8*], [12 x i8*] }, { [30 x i8*], [30 x i8*], [12 x i8*] }* @_ZTVN4aura22WindowOcclusionTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.aura::WindowObserver", %"class.aura::WindowObserver"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [30 x i8*], [12 x i8*] }, { [30 x i8*], [30 x i8*], [12 x i8*] }* @_ZTVN4aura22WindowOcclusionTrackerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [30 x i8*], [12 x i8*] }, { [30 x i8*], [30 x i8*], [12 x i8*] }* @_ZTVN4aura22WindowOcclusionTrackerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 0
  %9 = bitcast %"class.base::flat_map.108"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 132, i1 false)
  store %"class.aura::WindowObserver"* %3, %"class.aura::WindowObserver"** %8, align 8
  %10 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1
  %11 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 15
  %12 = bitcast %"class.std::__1::vector.445"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 48, i1 false)
  tail call void @_ZN4aura28NativeWindowOcclusionTrackerC1Ev(%"class.aura::NativeWindowOcclusionTracker"* %11) #12
  ret void
}

declare void @_ZN2ui22LayerAnimationObserverC2Ev(%"class.ui::LayerAnimationObserver"*) unnamed_addr #1

declare void @_ZN4aura28NativeWindowOcclusionTrackerC1Ev(%"class.aura::NativeWindowOcclusionTracker"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTrackerD2Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [30 x i8*], [12 x i8*] }, { [30 x i8*], [30 x i8*], [12 x i8*] }* @_ZTVN4aura22WindowOcclusionTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.aura::WindowObserver", %"class.aura::WindowObserver"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [30 x i8*], [12 x i8*] }, { [30 x i8*], [30 x i8*], [12 x i8*] }* @_ZTVN4aura22WindowOcclusionTrackerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [30 x i8*], [12 x i8*] }, { [30 x i8*], [30 x i8*], [12 x i8*] }* @_ZTVN4aura22WindowOcclusionTrackerE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 15
  tail call void @_ZN4aura28NativeWindowOcclusionTrackerD1Ev(%"class.aura::NativeWindowOcclusionTracker"* %6) #12
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 13, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %7) #12
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 12, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %8) #12
  %9 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.445", %"class.std::__1::vector.445"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.aura::Window"**, %"class.aura::Window"*** %10, align 8
  %12 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %13 = load %"class.aura::Window"**, %"class.aura::Window"*** %12, align 8
  %14 = icmp eq %"class.aura::Window"** %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = ptrtoint %"class.aura::Window"** %11 to i64
  br label %29

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 0
  br label %23

19:                                               ; preds = %23
  %20 = bitcast %"class.std::__1::vector.445"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = inttoptr i64 %21 to %"class.aura::Window"**
  br label %29

23:                                               ; preds = %23, %17
  %24 = phi %"class.aura::Window"** [ %11, %17 ], [ %27, %23 ]
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %24, align 8
  %26 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %18, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %25, %"class.aura::WindowObserver"* %26) #12
  %27 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %24, i64 1
  %28 = icmp eq %"class.aura::Window"** %27, %13
  br i1 %28, label %19, label %23

29:                                               ; preds = %19, %15
  %30 = phi %"class.aura::Window"** [ %11, %15 ], [ %22, %19 ]
  %31 = phi i64 [ %16, %15 ], [ %21, %19 ]
  %32 = bitcast %"class.aura::Window"*** %12 to i64*
  store i64 %31, i64* %32, align 8
  %33 = icmp eq %"class.aura::Window"** %30, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = ptrtoint %"class.aura::Window"** %30 to i64
  store i64 %35, i64* %32, align 8
  %36 = bitcast %"class.aura::Window"** %30 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %29, %34
  %38 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %38, align 8
  %40 = icmp eq %"struct.std::__1::pair.495"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %"struct.std::__1::pair.495"* %39 to i64
  %43 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"struct.std::__1::pair.495"** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast %"struct.std::__1::pair.495"* %39 to i8*
  tail call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %"class.aura::Window"**, %"class.aura::Window"*** %47, align 8
  %49 = icmp eq %"class.aura::Window"** %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint %"class.aura::Window"** %48 to i64
  %52 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %53 = bitcast %"class.aura::Window"*** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast %"class.aura::Window"** %48 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %46, %50
  %56 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %57 = load %"class.aura::Window"**, %"class.aura::Window"*** %56, align 8
  %58 = icmp eq %"class.aura::Window"** %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint %"class.aura::Window"** %57 to i64
  %61 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %62 = bitcast %"class.aura::Window"*** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.aura::Window"** %57 to i8*
  tail call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %55, %59
  %65 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %66 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %65, align 8
  %67 = icmp eq %"struct.std::__1::pair.484"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = ptrtoint %"struct.std::__1::pair.484"* %66 to i64
  %70 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast %"struct.std::__1::pair.484"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = bitcast %"struct.std::__1::pair.484"* %66 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %64, %68
  %74 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0
  %75 = getelementptr inbounds %"class.base::internal::flat_tree.109", %"class.base::internal::flat_tree.109"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %75, align 8
  %77 = icmp eq %"struct.std::__1::pair.112"* %76, null
  br i1 %77, label %93, label %78

78:                                               ; preds = %73
  %79 = bitcast %"struct.std::__1::pair.112"* %76 to i8*
  %80 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %81 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %80, align 8
  %82 = icmp eq %"struct.std::__1::pair.112"* %81, %76
  br i1 %82, label %91, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"struct.std::__1::pair.112"* [ %85, %83 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %84, i64 -1
  %86 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %84, i64 -1, i32 1, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %86) #12
  %87 = icmp eq %"struct.std::__1::pair.112"* %85, %76
  br i1 %87, label %88, label %83

88:                                               ; preds = %83
  %89 = bitcast %"class.base::internal::flat_tree.109"* %74 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %88, %78
  %92 = phi i8* [ %90, %88 ], [ %79, %78 ]
  store %"struct.std::__1::pair.112"* %76, %"struct.std::__1::pair.112"** %80, align 8
  tail call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %73, %91
  tail call void @_ZN4aura14WindowObserverD2Ev(%"class.aura::WindowObserver"* %3) #12
  %94 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0
  tail call void @_ZN2ui22LayerAnimationObserverD2Ev(%"class.ui::LayerAnimationObserver"* %94) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4aura28NativeWindowOcclusionTrackerD1Ev(%"class.aura::NativeWindowOcclusionTracker"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui22LayerAnimationObserverD2Ev(%"class.ui::LayerAnimationObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTrackerD1Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %3 = bitcast %"class.base::RepeatingCallback.501"* %2 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTrackerD2Ev(%"class.aura::WindowOcclusionTracker"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura22WindowOcclusionTrackerD1Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 11, i32 1
  %3 = bitcast %"class.std::__1::vector.445"* %2 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTrackerD2Ev(%"class.aura::WindowOcclusionTracker"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTrackerD0Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4aura22WindowOcclusionTrackerD2Ev(%"class.aura::WindowOcclusionTracker"* %0) #12
  %2 = bitcast %"class.aura::WindowOcclusionTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTrackerD0Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %3 = bitcast %"class.base::RepeatingCallback.501"* %2 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTrackerD2Ev(%"class.aura::WindowOcclusionTracker"* %3) #12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura22WindowOcclusionTrackerD0Ev(%"class.aura::WindowOcclusionTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 11, i32 1
  %3 = bitcast %"class.std::__1::vector.445"* %2 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTrackerD2Ev(%"class.aura::WindowOcclusionTracker"* %3) #12
  %4 = bitcast %"class.std::__1::vector.445"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura22WindowOcclusionTracker20OcclusionStatesMatchERKN4base8flat_mapIPNS_6WindowENS0_13OcclusionDataENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_S5_EENS6_9allocatorISB_EEEEEE(%"class.base::flat_map.108"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::flat_map.108", %"class.base::flat_map.108"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %2, align 8
  %4 = getelementptr inbounds %"class.base::flat_map.108", %"class.base::flat_map.108"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.112"* %3, %5
  br i1 %6, label %18, label %9

7:                                                ; preds = %9
  %8 = icmp eq %"struct.std::__1::pair.112"* %17, %5
  br i1 %8, label %18, label %9

9:                                                ; preds = %1, %7
  %10 = phi %"struct.std::__1::pair.112"* [ %17, %7 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %10, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %10, i64 0, i32 0
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %15 = tail call i32 @_ZNK4aura6Window17GetOcclusionStateEv(%"class.aura::Window"* %14) #12
  %16 = icmp eq i32 %12, %15
  %17 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %10, i64 1
  br i1 %16, label %7, label %18

18:                                               ; preds = %9, %7, %1
  %19 = phi i1 [ true, %1 ], [ true, %7 ], [ false, %9 ]
  ret i1 %19
}

declare i32 @_ZNK4aura6Window17GetOcclusionStateEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkRegion, align 8
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %class.SkRegion, align 8
  %5 = alloca %class.SkRegion, align 8
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 10
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %112

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %112

13:                                               ; preds = %9
  store i32 0, i32* %10, align 4
  %14 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %class.SkRegion* %2 to i8*
  %17 = bitcast %"class.gfx::Transform"* %3 to i8*
  %18 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %class.SkRegion* %4 to i8*
  %24 = bitcast %class.SkRegion* %2 to i8*
  br label %25

25:                                               ; preds = %13, %83
  %26 = phi i32 [ 0, %13 ], [ %84, %83 ]
  %27 = icmp eq i32 %26, 3
  %28 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %14, align 8
  %29 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %15, align 8
  %30 = icmp eq %"struct.std::__1::pair.495"* %28, %29
  br i1 %30, label %109, label %34

31:                                               ; preds = %51
  %32 = and i8 %52, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %109, label %55

34:                                               ; preds = %25, %51
  %35 = phi i8 [ %52, %51 ], [ 0, %25 ]
  %36 = phi %"struct.std::__1::pair.495"* [ %53, %51 ], [ %28, %25 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 4, !range !7
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %34
  store i8 0, i8* %37, align 4
  br i1 %27, label %51, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %36, i64 0, i32 0
  %43 = load %"class.aura::Window"*, %"class.aura::Window"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %36, i64 0, i32 1, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 2
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %43) #12
  call void @_ZN4aura22WindowOcclusionTracker34SetWindowAndDescendantsAreOccludedEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %43, i1 zeroext true, i1 zeroext %48)
  br label %51

49:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %2) #12
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  store i8 0, i8* %18, align 4
  %50 = call zeroext i1 @_ZN4aura22WindowOcclusionTracker22RecomputeOcclusionImplEPNS_6WindowERKN3gfx9TransformEPK7SkIRectP8SkRegion(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %43, %"class.gfx::Transform"* nonnull dereferenceable(68) %3, %struct.SkIRect* null, %class.SkRegion* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %51

51:                                               ; preds = %47, %49, %34, %40
  %52 = phi i8 [ 1, %40 ], [ %35, %34 ], [ 1, %49 ], [ 1, %47 ]
  %53 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %36, i64 1
  %54 = icmp eq %"struct.std::__1::pair.495"* %53, %29
  br i1 %54, label %31, label %34

55:                                               ; preds = %31
  %56 = load i32, i32* %19, align 8
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %19, align 8
  %58 = load i32, i32* %10, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %10, align 4
  %60 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %20, align 8
  %61 = icmp eq %"class.base::internal::BindStateBase"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %60, i64 0, i32 1
  %64 = bitcast void ()** %63 to %"class.aura::WindowOcclusionChangeBuilder"* (%"class.base::internal::BindStateBase"*)**
  %65 = load %"class.aura::WindowOcclusionChangeBuilder"* (%"class.base::internal::BindStateBase"*)*, %"class.aura::WindowOcclusionChangeBuilder"* (%"class.base::internal::BindStateBase"*)** %64, align 8
  %66 = call %"class.aura::WindowOcclusionChangeBuilder"* %65(%"class.base::internal::BindStateBase"* nonnull %60) #12
  br label %69

67:                                               ; preds = %55
  %68 = call %"class.aura::WindowOcclusionChangeBuilder"* @_ZN4aura28WindowOcclusionChangeBuilder6CreateEv() #12
  br label %69

69:                                               ; preds = %67, %62
  %70 = phi %"class.aura::WindowOcclusionChangeBuilder"* [ %68, %67 ], [ %66, %62 ]
  %71 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %21, align 8
  %72 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %22, align 8
  %73 = icmp eq %"struct.std::__1::pair.112"* %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.aura::WindowOcclusionChangeBuilder"* %70 to void (%"class.aura::WindowOcclusionChangeBuilder"*, %"class.aura::Window"*, i32, %class.SkRegion*)***
  br label %86

76:                                               ; preds = %106, %69
  %77 = icmp eq %"class.aura::WindowOcclusionChangeBuilder"* %70, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.aura::WindowOcclusionChangeBuilder"* %70 to void (%"class.aura::WindowOcclusionChangeBuilder"*)***
  %80 = load void (%"class.aura::WindowOcclusionChangeBuilder"*)**, void (%"class.aura::WindowOcclusionChangeBuilder"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.aura::WindowOcclusionChangeBuilder"*)*, void (%"class.aura::WindowOcclusionChangeBuilder"*)** %80, i64 1
  %82 = load void (%"class.aura::WindowOcclusionChangeBuilder"*)*, void (%"class.aura::WindowOcclusionChangeBuilder"*)** %81, align 8
  call void %82(%"class.aura::WindowOcclusionChangeBuilder"* nonnull %70) #12
  br label %83

83:                                               ; preds = %76, %78
  %84 = load i32, i32* %10, align 4
  %85 = icmp slt i32 %84, 4
  br i1 %85, label %25, label %109

86:                                               ; preds = %74, %106
  %87 = phi %"struct.std::__1::pair.112"* [ %71, %74 ], [ %107, %106 ]
  %88 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %87, i64 0, i32 0
  %89 = load %"class.aura::Window"*, %"class.aura::Window"** %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %87, i64 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %106, label %93

93:                                               ; preds = %86
  br i1 %27, label %94, label %100

94:                                               ; preds = %93
  %95 = call zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %89)
  %96 = select i1 %95, i32 1, i32 3
  store i32 %96, i32* %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %4) #12
  %97 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %87, i64 0, i32 1, i32 1
  %98 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %97, %class.SkRegion* nonnull dereferenceable(24) %4) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  %99 = load i32, i32* %90, align 8
  br label %100

100:                                              ; preds = %94, %93
  %101 = phi i32 [ %99, %94 ], [ %91, %93 ]
  %102 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %87, i64 0, i32 1, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* nonnull %5, %class.SkRegion* dereferenceable(24) %102) #12
  %103 = load void (%"class.aura::WindowOcclusionChangeBuilder"*, %"class.aura::Window"*, i32, %class.SkRegion*)**, void (%"class.aura::WindowOcclusionChangeBuilder"*, %"class.aura::Window"*, i32, %class.SkRegion*)*** %75, align 8
  %104 = getelementptr inbounds void (%"class.aura::WindowOcclusionChangeBuilder"*, %"class.aura::Window"*, i32, %class.SkRegion*)*, void (%"class.aura::WindowOcclusionChangeBuilder"*, %"class.aura::Window"*, i32, %class.SkRegion*)** %103, i64 2
  %105 = load void (%"class.aura::WindowOcclusionChangeBuilder"*, %"class.aura::Window"*, i32, %class.SkRegion*)*, void (%"class.aura::WindowOcclusionChangeBuilder"*, %"class.aura::Window"*, i32, %class.SkRegion*)** %104, align 8
  call void %105(%"class.aura::WindowOcclusionChangeBuilder"* %70, %"class.aura::Window"* %89, i32 %101, %class.SkRegion* nonnull %5) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %5) #12
  br label %106

106:                                              ; preds = %86, %100
  %107 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %87, i64 1
  %108 = icmp eq %"struct.std::__1::pair.112"* %107, %72
  br i1 %108, label %76, label %86

109:                                              ; preds = %25, %31, %83
  %110 = icmp eq i32* %10, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %109
  store i32 0, i32* %10, align 4
  br label %112

112:                                              ; preds = %111, %109, %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker34SetWindowAndDescendantsAreOccludedEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkRegion, align 8
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.484"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.484"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.484"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %4
  %16 = ashr exact i64 %12, 4
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.484"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.484"* %25, %"struct.std::__1::pair.484"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair.484"* %29 to i64
  br label %33

33:                                               ; preds = %31, %4
  %34 = phi i64 [ %32, %31 ], [ %11, %4 ]
  %35 = phi %"struct.std::__1::pair.484"* [ %29, %31 ], [ %7, %4 ]
  %36 = icmp eq %"struct.std::__1::pair.484"* %35, %14
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %35, i64 0, i32 0
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %40 = icmp ugt %"class.aura::Window"* %39, %1
  br i1 %40, label %41, label %52

41:                                               ; preds = %33, %37
  %42 = ptrtoint %"struct.std::__1::pair.484"* %35 to i64
  %43 = icmp ne i64 %34, %42
  %44 = xor i1 %3, true
  %45 = or i1 %43, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %48 = load %"class.ui::Layer"*, %"class.ui::Layer"** %47, align 8
  %49 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %48, i64 0, i32 14
  %50 = load i8, i8* %49, align 8, !range !7
  %51 = icmp ne i8 %50, 0
  br label %52

52:                                               ; preds = %37, %41, %46
  %53 = phi i1 [ %43, %41 ], [ false, %46 ], [ true, %37 ]
  %54 = phi i1 [ %43, %41 ], [ %51, %46 ], [ true, %37 ]
  %55 = xor i1 %53, true
  %56 = and i1 %55, %2
  %57 = bitcast %class.SkRegion* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #12
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %5) #12
  call void @_ZN4aura22WindowOcclusionTracker11SetOccludedEPNS_6WindowEbbRK8SkRegion(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext %56, i1 zeroext %54, %class.SkRegion* nonnull dereferenceable(24) %5)
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 0
  %59 = load %"class.aura::Window"**, %"class.aura::Window"*** %58, align 8
  %60 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 1
  %61 = load %"class.aura::Window"**, %"class.aura::Window"*** %60, align 8
  %62 = icmp eq %"class.aura::Window"** %59, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %64, %52
  ret void

64:                                               ; preds = %52, %64
  %65 = phi %"class.aura::Window"** [ %67, %64 ], [ %59, %52 ]
  %66 = load %"class.aura::Window"*, %"class.aura::Window"** %65, align 8
  call void @_ZN4aura22WindowOcclusionTracker34SetWindowAndDescendantsAreOccludedEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %66, i1 zeroext %56, i1 zeroext %54)
  %67 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %65, i64 1
  %68 = icmp eq %"class.aura::Window"** %67, %61
  br i1 %68, label %63, label %64
}

declare zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"*) local_unnamed_addr #1

declare %"class.aura::WindowOcclusionChangeBuilder"* @_ZN4aura28WindowOcclusionChangeBuilder6CreateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %6 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.484"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.484"* %6 to i64
  br i1 %7, label %14, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.aura::Window"* %1, null
  br i1 %10, label %76, label %11

11:                                               ; preds = %9
  %12 = bitcast %"struct.std::__1::pair.484"** %5 to i64*
  %13 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  br label %16

14:                                               ; preds = %2
  %15 = tail call zeroext i1 @_ZNK4aura6Window9IsVisibleEv(%"class.aura::Window"* %1) #12
  br label %81

16:                                               ; preds = %73, %11
  %17 = phi i64 [ %8, %11 ], [ %75, %73 ]
  %18 = phi %"struct.std::__1::pair.484"* [ %4, %11 ], [ %74, %73 ]
  %19 = phi %"class.aura::Window"* [ %1, %11 ], [ %71, %73 ]
  %20 = ptrtoint %"struct.std::__1::pair.484"* %18 to i64
  %21 = sub i64 %17, %20
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %17 to %"struct.std::__1::pair.484"*
  br i1 %22, label %42, label %24

24:                                               ; preds = %16
  %25 = ashr exact i64 %21, 4
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi %"struct.std::__1::pair.484"* [ %18, %24 ], [ %38, %26 ]
  %28 = phi i64 [ %25, %24 ], [ %37, %26 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %30, i64 0, i32 0
  %32 = load %"class.aura::Window"*, %"class.aura::Window"** %31, align 8
  %33 = icmp ult %"class.aura::Window"* %32, %1
  %34 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %30, i64 1
  %35 = xor i64 %29, -1
  %36 = add i64 %28, %35
  %37 = select i1 %33, i64 %36, i64 %29
  %38 = select i1 %33, %"struct.std::__1::pair.484"* %34, %"struct.std::__1::pair.484"* %27
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %26

40:                                               ; preds = %26
  %41 = ptrtoint %"struct.std::__1::pair.484"* %38 to i64
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi i64 [ %41, %40 ], [ %20, %16 ]
  %44 = phi %"struct.std::__1::pair.484"* [ %38, %40 ], [ %18, %16 ]
  %45 = icmp eq %"struct.std::__1::pair.484"* %44, %23
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %44, i64 0, i32 0
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %47, align 8
  %49 = icmp ugt %"class.aura::Window"* %48, %1
  br i1 %49, label %50, label %69

50:                                               ; preds = %42, %46
  %51 = ptrtoint %"struct.std::__1::pair.484"* %44 to i64
  %52 = icmp eq i64 %43, %51
  br i1 %52, label %53, label %69

53:                                               ; preds = %50
  %54 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %55 = icmp eq %"class.aura::Window"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %19, i64 0, i32 1, i32 2
  %58 = load %"class.ui::Layer"*, %"class.ui::Layer"** %57, align 8
  %59 = tail call zeroext i1 @_ZNK2ui5Layer19GetTargetVisibilityEv(%"class.ui::Layer"* %58) #12
  br i1 %59, label %60, label %81

60:                                               ; preds = %56
  %61 = load %"class.aura::Window"*, %"class.aura::Window"** %13, align 8
  %62 = icmp eq %"class.aura::Window"* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %60, %53
  %64 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %19, i64 0, i32 1, i32 2
  %65 = load %"class.ui::Layer"*, %"class.ui::Layer"** %64, align 8
  %66 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %65, i64 0, i32 14
  %67 = load i8, i8* %66, align 8, !range !7
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %81, label %69

69:                                               ; preds = %60, %63, %50, %46
  %70 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %19, i64 0, i32 13
  %71 = load %"class.aura::Window"*, %"class.aura::Window"** %70, align 8
  %72 = icmp eq %"class.aura::Window"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %3, align 8
  %75 = load i64, i64* %12, align 8
  br label %16

76:                                               ; preds = %69, %9
  %77 = phi %"class.aura::Window"* [ null, %9 ], [ %19, %69 ]
  %78 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %77, i64 0, i32 8
  %79 = load %"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHost"** %78, align 8
  %80 = icmp ne %"class.aura::WindowTreeHost"* %79, null
  br label %81

81:                                               ; preds = %63, %56, %76, %14
  %82 = phi i1 [ %15, %14 ], [ %80, %76 ], [ false, %56 ], [ false, %63 ]
  ret i1 %82
}

declare dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker21WindowIsForcedVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.484"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.484"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.484"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.484"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %18, i64 0, i32 0
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = icmp ult %"class.aura::Window"* %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.484"* %22, %"struct.std::__1::pair.484"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair.484"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair.484"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair.484"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %32, i64 0, i32 0
  %36 = load %"class.aura::Window"*, %"class.aura::Window"** %35, align 8
  %37 = icmp ugt %"class.aura::Window"* %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.484"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = ptrtoint %"struct.std::__1::pair.484"* %32 to i64
  %44 = icmp ne i64 %42, %43
  ret i1 %44
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker21ShouldUseTargetValuesEv(%"class.aura::WindowOcclusionTracker"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %3 = load %"class.aura::Window"*, %"class.aura::Window"** %2, align 8
  %4 = icmp ne %"class.aura::Window"* %3, null
  ret i1 %4
}

declare zeroext i1 @_ZNK2ui5Layer19GetTargetVisibilityEv(%"class.ui::Layer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker16WindowIsAnimatedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  br i1 %5, label %6, label %42

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %10 = bitcast %"class.aura::Window"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint %"class.aura::Window"** %8 to i64
  %13 = sub i64 %11, %12
  %14 = icmp eq i64 %13, 0
  %15 = inttoptr i64 %11 to %"class.aura::Window"**
  br i1 %14, label %31, label %16

16:                                               ; preds = %6
  %17 = ashr exact i64 %13, 3
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi %"class.aura::Window"** [ %8, %16 ], [ %29, %18 ]
  %20 = phi i64 [ %17, %16 ], [ %28, %18 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %19, i64 %21
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %1
  %25 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %22, i64 1
  %26 = xor i64 %21, -1
  %27 = add i64 %20, %26
  %28 = select i1 %24, i64 %27, i64 %21
  %29 = select i1 %24, %"class.aura::Window"** %25, %"class.aura::Window"** %19
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %18

31:                                               ; preds = %18, %6
  %32 = phi %"class.aura::Window"** [ %8, %6 ], [ %29, %18 ]
  %33 = icmp eq %"class.aura::Window"** %32, %15
  br i1 %33, label %42, label %34

34:                                               ; preds = %31
  %35 = load %"class.aura::Window"*, %"class.aura::Window"** %32, align 8
  %36 = icmp ugt %"class.aura::Window"* %35, %1
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %39 = load %"class.ui::Layer"*, %"class.ui::Layer"** %38, align 8
  %40 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %39) #12
  %41 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %40, i32 71) #12
  br label %42

42:                                               ; preds = %34, %2, %31, %37
  %43 = phi i1 [ false, %34 ], [ false, %2 ], [ %41, %37 ], [ false, %31 ]
  ret i1 %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker16WindowIsExcludedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %6 = bitcast %"class.aura::Window"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.aura::Window"** %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.aura::Window"**
  br i1 %10, label %27, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.aura::Window"** [ %4, %12 ], [ %25, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %24, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %15, i64 %17
  %19 = load %"class.aura::Window"*, %"class.aura::Window"** %18, align 8
  %20 = icmp ult %"class.aura::Window"* %19, %1
  %21 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %18, i64 1
  %22 = xor i64 %17, -1
  %23 = add i64 %16, %22
  %24 = select i1 %20, i64 %23, i64 %17
  %25 = select i1 %20, %"class.aura::Window"** %21, %"class.aura::Window"** %15
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %14

27:                                               ; preds = %14, %2
  %28 = phi %"class.aura::Window"** [ %4, %2 ], [ %25, %14 ]
  %29 = icmp eq %"class.aura::Window"** %28, %11
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load %"class.aura::Window"*, %"class.aura::Window"** %28, align 8
  %32 = icmp ule %"class.aura::Window"* %31, %1
  br label %33

33:                                               ; preds = %27, %30
  %34 = phi i1 [ false, %27 ], [ %32, %30 ]
  ret i1 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui5Layer16GetMasksToBoundsEv(%"class.ui::Layer"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkRegion8containsERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker11SetOccludedEPNS_6WindowEbbRK8SkRegion(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*, i1 zeroext, i1 zeroext, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = icmp eq %"class.aura::Window"* %7, null
  %9 = icmp eq %"class.aura::Window"* %7, %1
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %116

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %12, align 8
  %14 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair.112"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = ptrtoint %"struct.std::__1::pair.112"* %13 to i64
  %18 = sub i64 %16, %17
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %16 to %"struct.std::__1::pair.112"*
  br i1 %19, label %39, label %21

21:                                               ; preds = %11
  %22 = sdiv exact i64 %18, 40
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi %"struct.std::__1::pair.112"* [ %13, %21 ], [ %35, %23 ]
  %25 = phi i64 [ %22, %21 ], [ %34, %23 ]
  %26 = lshr i64 %25, 1
  %27 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %24, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %27, i64 0, i32 0
  %29 = load %"class.aura::Window"*, %"class.aura::Window"** %28, align 8
  %30 = icmp ult %"class.aura::Window"* %29, %1
  %31 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %27, i64 1
  %32 = xor i64 %26, -1
  %33 = add i64 %25, %32
  %34 = select i1 %30, i64 %33, i64 %26
  %35 = select i1 %30, %"struct.std::__1::pair.112"* %31, %"struct.std::__1::pair.112"* %24
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %23

37:                                               ; preds = %23
  %38 = ptrtoint %"struct.std::__1::pair.112"* %35 to i64
  br label %39

39:                                               ; preds = %37, %11
  %40 = phi i64 [ %38, %37 ], [ %17, %11 ]
  %41 = phi %"struct.std::__1::pair.112"* [ %35, %37 ], [ %13, %11 ]
  %42 = icmp eq %"struct.std::__1::pair.112"* %41, %20
  br i1 %42, label %50, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %41, i64 0, i32 0
  %45 = load %"class.aura::Window"*, %"class.aura::Window"** %44, align 8
  %46 = icmp ugt %"class.aura::Window"* %45, %1
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %41, i64 1
  %49 = ptrtoint %"struct.std::__1::pair.112"* %48 to i64
  br label %50

50:                                               ; preds = %39, %43, %47
  %51 = phi i64 [ %49, %47 ], [ %40, %39 ], [ %40, %43 ]
  %52 = inttoptr i64 %51 to %"struct.std::__1::pair.112"*
  %53 = icmp eq %"struct.std::__1::pair.112"* %41, %52
  %54 = select i1 %53, %"struct.std::__1::pair.112"* %20, %"struct.std::__1::pair.112"* %41
  %55 = icmp eq %"struct.std::__1::pair.112"* %54, %20
  br i1 %55, label %116, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %54, i64 0, i32 1, i32 1
  %58 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %57, %class.SkRegion* dereferenceable(24) %4) #12
  %59 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %59, align 8
  %61 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %"struct.std::__1::pair.484"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint %"struct.std::__1::pair.484"* %60 to i64
  %65 = sub i64 %63, %64
  %66 = icmp eq i64 %65, 0
  %67 = inttoptr i64 %63 to %"struct.std::__1::pair.484"*
  br i1 %66, label %86, label %68

68:                                               ; preds = %56
  %69 = ashr exact i64 %65, 4
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi %"struct.std::__1::pair.484"* [ %60, %68 ], [ %82, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %81, %70 ]
  %73 = lshr i64 %72, 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %71, i64 %73
  %75 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %74, i64 0, i32 0
  %76 = load %"class.aura::Window"*, %"class.aura::Window"** %75, align 8
  %77 = icmp ult %"class.aura::Window"* %76, %1
  %78 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %74, i64 1
  %79 = xor i64 %73, -1
  %80 = add i64 %72, %79
  %81 = select i1 %77, i64 %80, i64 %73
  %82 = select i1 %77, %"struct.std::__1::pair.484"* %78, %"struct.std::__1::pair.484"* %71
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %70
  %85 = ptrtoint %"struct.std::__1::pair.484"* %82 to i64
  br label %86

86:                                               ; preds = %84, %56
  %87 = phi i64 [ %85, %84 ], [ %64, %56 ]
  %88 = phi %"struct.std::__1::pair.484"* [ %82, %84 ], [ %60, %56 ]
  %89 = icmp eq %"struct.std::__1::pair.484"* %88, %67
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %88, i64 0, i32 0
  %92 = load %"class.aura::Window"*, %"class.aura::Window"** %91, align 8
  %93 = icmp ugt %"class.aura::Window"* %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %54, i64 0, i32 1, i32 0
  br label %112

96:                                               ; preds = %86, %90
  %97 = ptrtoint %"struct.std::__1::pair.484"* %88 to i64
  %98 = icmp ne i64 %87, %97
  %99 = xor i1 %3, true
  %100 = or i1 %98, %99
  br i1 %100, label %108, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %103 = load %"class.ui::Layer"*, %"class.ui::Layer"** %102, align 8
  %104 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %103, i64 0, i32 14
  %105 = load i8, i8* %104, align 8, !range !7
  %106 = icmp eq i8 %105, 0
  %107 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %54, i64 0, i32 1, i32 0
  br i1 %106, label %110, label %112

108:                                              ; preds = %96
  %109 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %54, i64 0, i32 1, i32 0
  br i1 %98, label %112, label %110

110:                                              ; preds = %101, %108
  %111 = phi i32* [ %107, %101 ], [ %109, %108 ]
  store i32 3, i32* %111, align 8
  br label %116

112:                                              ; preds = %101, %94, %108
  %113 = phi i32* [ %95, %94 ], [ %109, %108 ], [ %107, %101 ]
  br i1 %2, label %114, label %115

114:                                              ; preds = %112
  store i32 2, i32* %113, align 8
  br label %116

115:                                              ; preds = %112
  store i32 1, i32* %113, align 8
  br label %116

116:                                              ; preds = %50, %114, %115, %110, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker35VisibleWindowCanOccludeOtherWindowsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = icmp eq %"class.aura::Window"* %4, null
  %6 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %7 = load %"class.ui::Layer"*, %"class.ui::Layer"** %6, align 8
  br i1 %5, label %21, label %8

8:                                                ; preds = %2
  %9 = tail call float @_ZNK2ui5Layer16GetTargetOpacityEv(%"class.ui::Layer"* %7) #12
  %10 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %7, i64 0, i32 5
  %11 = load %"class.ui::Layer"*, %"class.ui::Layer"** %10, align 8
  %12 = icmp eq %"class.ui::Layer"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %8, %13
  %14 = phi %"class.ui::Layer"* [ %19, %13 ], [ %11, %8 ]
  %15 = phi float [ %17, %13 ], [ %9, %8 ]
  %16 = tail call float @_ZNK2ui5Layer16GetTargetOpacityEv(%"class.ui::Layer"* nonnull %14) #12
  %17 = fmul float %15, %16
  %18 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %14, i64 0, i32 5
  %19 = load %"class.ui::Layer"*, %"class.ui::Layer"** %18, align 8
  %20 = icmp eq %"class.ui::Layer"* %19, null
  br i1 %20, label %23, label %13

21:                                               ; preds = %2
  %22 = tail call float @_ZNK2ui5Layer18GetCombinedOpacityEv(%"class.ui::Layer"* %7) #12
  br label %23

23:                                               ; preds = %13, %8, %21
  %24 = phi float [ %22, %21 ], [ %9, %8 ], [ %17, %13 ]
  %25 = load %"class.ui::Layer"*, %"class.ui::Layer"** %6, align 8
  %26 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %42

29:                                               ; preds = %23
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %31 = icmp eq %"class.aura::Window"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @_ZNK2ui5Layer14GetTargetColorEv(%"class.ui::Layer"* %25) #12
  br label %36

34:                                               ; preds = %29
  %35 = tail call i32 @_ZNK2ui5Layer16background_colorEv(%"class.ui::Layer"* %25) #12
  br label %36

36:                                               ; preds = %34, %32
  %37 = phi i32 [ %33, %32 ], [ %35, %34 ]
  %38 = lshr i32 %37, 24
  %39 = uitofp i32 %38 to float
  %40 = fdiv float %39, 2.550000e+02
  %41 = fmul float %24, %40
  br label %42

42:                                               ; preds = %36, %23
  %43 = phi float [ %41, %36 ], [ %24, %23 ]
  %44 = tail call zeroext i1 @_ZNK4aura6Window14GetTransparentEv(%"class.aura::Window"* %1) #12
  br i1 %44, label %74, label %45

45:                                               ; preds = %42
  %46 = load %"class.ui::Layer"*, %"class.ui::Layer"** %6, align 8
  %47 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %46, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %51, align 8
  %53 = icmp eq %"class.base::internal::BindStateBase"* %52, null
  br i1 %53, label %74, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %52, i64 0, i32 1
  %56 = bitcast void ()** %55 to i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)**
  %57 = load i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.base::internal::BindStateBase"* nonnull %52, %"class.aura::Window"* %1) #12
  br label %59

59:                                               ; preds = %45, %54
  %60 = phi i1 [ %58, %54 ], [ true, %45 ]
  %61 = fcmp oeq float %43, 1.000000e+00
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %74

63:                                               ; preds = %59, %70
  %64 = phi %"class.aura::Window"* [ %72, %70 ], [ %1, %59 ]
  %65 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %64, i64 0, i32 1, i32 2
  %66 = load %"class.ui::Layer"*, %"class.ui::Layer"** %65, align 8
  %67 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %66, i64 0, i32 30, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::vector.173"*, %"class.std::__1::vector.173"** %67, align 8
  %69 = icmp eq %"class.std::__1::vector.173"* %68, null
  br i1 %69, label %70, label %74

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %64, i64 0, i32 13
  %72 = load %"class.aura::Window"*, %"class.aura::Window"** %71, align 8
  %73 = icmp eq %"class.aura::Window"* %72, null
  br i1 %73, label %80, label %63

74:                                               ; preds = %63, %50, %59, %42
  %75 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 23, i32 0, i32 0
  %76 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %75, align 8
  %77 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 23, i32 0, i32 1
  %78 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %77, align 8
  %79 = icmp ne %"class.gfx::Rect"* %76, %78
  br label %80

80:                                               ; preds = %70, %74
  %81 = phi i1 [ %79, %74 ], [ true, %70 ]
  ret i1 %81
}

declare float @_ZNK2ui5Layer18GetCombinedOpacityEv(%"class.ui::Layer"*) local_unnamed_addr #1

declare i32 @_ZNK2ui5Layer14GetTargetColorEv(%"class.ui::Layer"*) local_unnamed_addr #1

declare i32 @_ZNK2ui5Layer16background_colorEv(%"class.ui::Layer"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4aura6Window14GetTransparentEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker16WindowHasContentEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %4 = load %"class.ui::Layer"*, %"class.ui::Layer"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %9, align 8
  %11 = icmp eq %"class.base::internal::BindStateBase"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %14 = bitcast void ()** %13 to i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)**
  %15 = load i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.base::internal::BindStateBase"* nonnull %10, %"class.aura::Window"* %1) #12
  br label %17

17:                                               ; preds = %8, %2, %12
  %18 = phi i1 [ %16, %12 ], [ true, %2 ], [ false, %8 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker22CleanupAnimatedWindowsEv(%"class.aura::WindowOcclusionTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.aura::Window"**, %"class.aura::Window"*** %2, align 8
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %5 = load %"class.aura::Window"**, %"class.aura::Window"*** %4, align 8
  %6 = icmp eq %"class.aura::Window"** %3, %5
  br i1 %6, label %66, label %7

7:                                                ; preds = %1, %63
  %8 = phi %"class.aura::Window"** [ %64, %63 ], [ %3, %1 ]
  %9 = load %"class.aura::Window"*, %"class.aura::Window"** %8, align 8
  %10 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %9, i64 0, i32 1, i32 2
  %11 = load %"class.ui::Layer"*, %"class.ui::Layer"** %10, align 8
  %12 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %11) #12
  %13 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %12, i32 79) #12
  br i1 %13, label %63, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0
  tail call void @_ZN2ui13LayerAnimator14RemoveObserverEPNS_22LayerAnimationObserverE(%"class.ui::LayerAnimator"* %12, %"class.ui::LayerAnimationObserver"* %15) #12
  %16 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %9) #12
  %17 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %17, align 8
  %19 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::pair.495"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = ptrtoint %"struct.std::__1::pair.495"* %18 to i64
  %23 = sub i64 %21, %22
  %24 = icmp eq i64 %23, 0
  %25 = inttoptr i64 %21 to %"struct.std::__1::pair.495"*
  br i1 %24, label %44, label %26

26:                                               ; preds = %14
  %27 = sdiv exact i64 %23, 24
  br label %28

28:                                               ; preds = %28, %26
  %29 = phi %"struct.std::__1::pair.495"* [ %18, %26 ], [ %40, %28 ]
  %30 = phi i64 [ %27, %26 ], [ %39, %28 ]
  %31 = lshr i64 %30, 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %29, i64 %31
  %33 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %32, i64 0, i32 0
  %34 = load %"class.aura::Window"*, %"class.aura::Window"** %33, align 8
  %35 = icmp ult %"class.aura::Window"* %34, %16
  %36 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %32, i64 1
  %37 = xor i64 %31, -1
  %38 = add i64 %30, %37
  %39 = select i1 %35, i64 %38, i64 %31
  %40 = select i1 %35, %"struct.std::__1::pair.495"* %36, %"struct.std::__1::pair.495"* %29
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %28

42:                                               ; preds = %28
  %43 = ptrtoint %"struct.std::__1::pair.495"* %40 to i64
  br label %44

44:                                               ; preds = %42, %14
  %45 = phi i64 [ %43, %42 ], [ %22, %14 ]
  %46 = phi %"struct.std::__1::pair.495"* [ %40, %42 ], [ %18, %14 ]
  %47 = icmp eq %"struct.std::__1::pair.495"* %46, %25
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %46, i64 0, i32 0
  %50 = load %"class.aura::Window"*, %"class.aura::Window"** %49, align 8
  %51 = icmp ugt %"class.aura::Window"* %50, %16
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %46, i64 1
  %54 = ptrtoint %"struct.std::__1::pair.495"* %53 to i64
  br label %55

55:                                               ; preds = %52, %48, %44
  %56 = phi i64 [ %54, %52 ], [ %45, %44 ], [ %45, %48 ]
  %57 = inttoptr i64 %56 to %"struct.std::__1::pair.495"*
  %58 = icmp eq %"struct.std::__1::pair.495"* %46, %57
  %59 = select i1 %58, %"struct.std::__1::pair.495"* %25, %"struct.std::__1::pair.495"* %46
  %60 = icmp eq %"struct.std::__1::pair.495"* %59, %25
  br i1 %60, label %66, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %59, i64 0, i32 1, i32 1
  store i8 1, i8* %62, align 4
  br label %66

63:                                               ; preds = %7
  %64 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %8, i64 1
  %65 = icmp eq %"class.aura::Window"** %64, %5
  br i1 %65, label %144, label %7

66:                                               ; preds = %61, %55, %1
  %67 = phi %"class.aura::Window"** [ %8, %61 ], [ %8, %55 ], [ %3, %1 ]
  %68 = ptrtoint %"class.aura::Window"** %67 to i64
  %69 = icmp eq %"class.aura::Window"** %67, %5
  br i1 %69, label %144, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %67, i64 1
  %72 = icmp eq %"class.aura::Window"** %71, %5
  br i1 %72, label %144, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0
  %75 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast %"struct.std::__1::pair.495"** %76 to i64*
  br label %78

78:                                               ; preds = %138, %73
  %79 = phi %"class.aura::Window"** [ %140, %138 ], [ %71, %73 ]
  %80 = phi i64 [ %139, %138 ], [ %68, %73 ]
  %81 = load %"class.aura::Window"*, %"class.aura::Window"** %79, align 8
  %82 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %81, i64 0, i32 1, i32 2
  %83 = load %"class.ui::Layer"*, %"class.ui::Layer"** %82, align 8
  %84 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %83) #12
  %85 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %84, i32 79) #12
  br i1 %85, label %131, label %86

86:                                               ; preds = %78
  tail call void @_ZN2ui13LayerAnimator14RemoveObserverEPNS_22LayerAnimationObserverE(%"class.ui::LayerAnimator"* %84, %"class.ui::LayerAnimationObserver"* %74) #12
  %87 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %81) #12
  %88 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %75, align 8
  %89 = load i64, i64* %77, align 8
  %90 = ptrtoint %"struct.std::__1::pair.495"* %88 to i64
  %91 = sub i64 %89, %90
  %92 = icmp eq i64 %91, 0
  %93 = inttoptr i64 %89 to %"struct.std::__1::pair.495"*
  br i1 %92, label %112, label %94

94:                                               ; preds = %86
  %95 = sdiv exact i64 %91, 24
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi %"struct.std::__1::pair.495"* [ %88, %94 ], [ %108, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %107, %96 ]
  %99 = lshr i64 %98, 1
  %100 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %97, i64 %99
  %101 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %100, i64 0, i32 0
  %102 = load %"class.aura::Window"*, %"class.aura::Window"** %101, align 8
  %103 = icmp ult %"class.aura::Window"* %102, %87
  %104 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %100, i64 1
  %105 = xor i64 %99, -1
  %106 = add i64 %98, %105
  %107 = select i1 %103, i64 %106, i64 %99
  %108 = select i1 %103, %"struct.std::__1::pair.495"* %104, %"struct.std::__1::pair.495"* %97
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %110, label %96

110:                                              ; preds = %96
  %111 = ptrtoint %"struct.std::__1::pair.495"* %108 to i64
  br label %112

112:                                              ; preds = %110, %86
  %113 = phi i64 [ %111, %110 ], [ %90, %86 ]
  %114 = phi %"struct.std::__1::pair.495"* [ %108, %110 ], [ %88, %86 ]
  %115 = icmp eq %"struct.std::__1::pair.495"* %114, %93
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %114, i64 0, i32 0
  %118 = load %"class.aura::Window"*, %"class.aura::Window"** %117, align 8
  %119 = icmp ugt %"class.aura::Window"* %118, %87
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %114, i64 1
  %122 = ptrtoint %"struct.std::__1::pair.495"* %121 to i64
  br label %123

123:                                              ; preds = %120, %116, %112
  %124 = phi i64 [ %122, %120 ], [ %113, %112 ], [ %113, %116 ]
  %125 = inttoptr i64 %124 to %"struct.std::__1::pair.495"*
  %126 = icmp eq %"struct.std::__1::pair.495"* %114, %125
  %127 = select i1 %126, %"struct.std::__1::pair.495"* %93, %"struct.std::__1::pair.495"* %114
  %128 = icmp eq %"struct.std::__1::pair.495"* %127, %93
  br i1 %128, label %138, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %127, i64 0, i32 1, i32 1
  store i8 1, i8* %130, align 4
  br label %138

131:                                              ; preds = %78
  %132 = bitcast %"class.aura::Window"** %79 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = inttoptr i64 %80 to %"class.aura::Window"**
  %135 = inttoptr i64 %80 to i64*
  store i64 %133, i64* %135, align 8
  %136 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %134, i64 1
  %137 = ptrtoint %"class.aura::Window"** %136 to i64
  br label %138

138:                                              ; preds = %131, %129, %123
  %139 = phi i64 [ %137, %131 ], [ %80, %123 ], [ %80, %129 ]
  %140 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %79, i64 1
  %141 = icmp eq %"class.aura::Window"** %140, %5
  br i1 %141, label %142, label %78

142:                                              ; preds = %138
  %143 = inttoptr i64 %139 to %"class.aura::Window"**
  br label %144

144:                                              ; preds = %63, %142, %70, %66
  %145 = phi %"class.aura::Window"** [ %5, %66 ], [ %67, %70 ], [ %143, %142 ], [ %5, %63 ]
  %146 = load %"class.aura::Window"**, %"class.aura::Window"*** %4, align 8
  %147 = icmp eq %"class.aura::Window"** %145, %146
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  store %"class.aura::Window"** %145, %"class.aura::Window"*** %4, align 8
  br label %149

149:                                              ; preds = %144, %148
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura22WindowOcclusionTracker26MaybeObserveAnimatedWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.aura::Window"*, align 8
  store %"class.aura::Window"* %1, %"class.aura::Window"** %3, align 8
  %4 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %5 = load %"class.ui::Layer"*, %"class.ui::Layer"** %4, align 8
  %6 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %5) #12
  %7 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %6, i32 79) #12
  br i1 %7, label %8, label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.base::internal::flat_tree.490", %"class.base::internal::flat_tree.490"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.aura::Window"**, %"class.aura::Window"*** %10, align 8
  %12 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %13 = bitcast %"class.aura::Window"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint %"class.aura::Window"** %11 to i64
  %16 = sub i64 %14, %15
  %17 = icmp eq i64 %16, 0
  %18 = inttoptr i64 %14 to %"class.aura::Window"**
  br i1 %17, label %34, label %19

19:                                               ; preds = %8
  %20 = ashr exact i64 %16, 3
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi %"class.aura::Window"** [ %11, %19 ], [ %32, %21 ]
  %23 = phi i64 [ %20, %19 ], [ %31, %21 ]
  %24 = lshr i64 %23, 1
  %25 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %22, i64 %24
  %26 = load %"class.aura::Window"*, %"class.aura::Window"** %25, align 8
  %27 = icmp ult %"class.aura::Window"* %26, %1
  %28 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %25, i64 1
  %29 = xor i64 %24, -1
  %30 = add i64 %23, %29
  %31 = select i1 %27, i64 %30, i64 %24
  %32 = select i1 %27, %"class.aura::Window"** %28, %"class.aura::Window"** %22
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %21

34:                                               ; preds = %21, %8
  %35 = phi %"class.aura::Window"** [ %11, %8 ], [ %32, %21 ]
  %36 = icmp eq %"class.aura::Window"** %35, %18
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %35, align 8
  %39 = icmp ugt %"class.aura::Window"* %38, %1
  br i1 %39, label %40, label %44

40:                                               ; preds = %37, %34
  %41 = getelementptr inbounds %"class.base::internal::flat_tree.490", %"class.base::internal::flat_tree.490"* %9, i64 0, i32 0
  %42 = call %"class.aura::Window"** @_ZNSt3__16vectorIPN4aura6WindowENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.445"* %41, %"class.aura::Window"** %35, %"class.aura::Window"** nonnull dereferenceable(8) %3) #12
  %43 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0
  call void @_ZN2ui13LayerAnimator11AddObserverEPNS_22LayerAnimationObserverE(%"class.ui::LayerAnimator"* %6, %"class.ui::LayerAnimationObserver"* %43) #12
  br label %44

44:                                               ; preds = %37, %2, %40
  %45 = phi i1 [ true, %40 ], [ false, %2 ], [ false, %37 ]
  ret i1 %45
}

declare %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"*, i32) local_unnamed_addr #1

declare void @_ZN2ui13LayerAnimator11AddObserverEPNS_22LayerAnimationObserverE(%"class.ui::LayerAnimator"*, %"class.ui::LayerAnimationObserver"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsTrackedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.112"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.112"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.112"*
  br i1 %10, label %28, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.112"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 0, i32 0
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = icmp ult %"class.aura::Window"* %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.112"* %22, %"struct.std::__1::pair.112"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %2
  %29 = phi %"struct.std::__1::pair.112"* [ %4, %2 ], [ %26, %14 ]
  %30 = icmp eq %"struct.std::__1::pair.112"* %29, %11
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %29, i64 0, i32 0
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %32, align 8
  %34 = icmp ule %"class.aura::Window"* %33, %1
  br label %35

35:                                               ; preds = %28, %31
  %36 = phi i1 [ false, %28 ], [ %34, %31 ]
  ret i1 %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4aura22WindowOcclusionTracker26MarkRootWindowStateAsDirtyEPNS0_15RootWindowStateE(%"class.aura::WindowOcclusionTracker"* nocapture readnone, %"struct.aura::WindowOcclusionTracker::RootWindowState"* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::RootWindowState", %"struct.aura::WindowOcclusionTracker::RootWindowState"* %1, i64 0, i32 1
  store i8 1, i8* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura22WindowOcclusionTracker21MarkRootWindowAsDirtyEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.495"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.495"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.495"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 24
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.495"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %18, i64 0, i32 0
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = icmp ult %"class.aura::Window"* %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.495"* %22, %"struct.std::__1::pair.495"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair.495"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair.495"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair.495"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %32, i64 0, i32 0
  %36 = load %"class.aura::Window"*, %"class.aura::Window"** %35, align 8
  %37 = icmp ugt %"class.aura::Window"* %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair.495"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair.495"*
  %44 = icmp eq %"struct.std::__1::pair.495"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair.495"* %11, %"struct.std::__1::pair.495"* %32
  %46 = icmp eq %"struct.std::__1::pair.495"* %45, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %45, i64 0, i32 1, i32 1
  store i8 1, i8* %48, align 4
  br label %49

49:                                               ; preds = %41, %47
  %50 = phi i1 [ true, %47 ], [ false, %41 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker24WindowOrParentIsAnimatedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.aura::Window"* %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %8 = bitcast %"class.aura::Window"*** %7 to i64*
  br label %9

9:                                                ; preds = %46, %4
  %10 = phi %"class.aura::Window"* [ %1, %4 ], [ %48, %46 ]
  %11 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %12 = icmp eq %"class.aura::Window"* %11, null
  br i1 %12, label %13, label %46

13:                                               ; preds = %9
  %14 = load %"class.aura::Window"**, %"class.aura::Window"*** %6, align 8
  %15 = load i64, i64* %8, align 8
  %16 = ptrtoint %"class.aura::Window"** %14 to i64
  %17 = sub i64 %15, %16
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %15 to %"class.aura::Window"**
  br i1 %18, label %35, label %20

20:                                               ; preds = %13
  %21 = ashr exact i64 %17, 3
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi %"class.aura::Window"** [ %14, %20 ], [ %33, %22 ]
  %24 = phi i64 [ %21, %20 ], [ %32, %22 ]
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %23, i64 %25
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %26, align 8
  %28 = icmp ult %"class.aura::Window"* %27, %10
  %29 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %26, i64 1
  %30 = xor i64 %25, -1
  %31 = add i64 %24, %30
  %32 = select i1 %28, i64 %31, i64 %25
  %33 = select i1 %28, %"class.aura::Window"** %29, %"class.aura::Window"** %23
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %22

35:                                               ; preds = %22, %13
  %36 = phi %"class.aura::Window"** [ %14, %13 ], [ %33, %22 ]
  %37 = icmp eq %"class.aura::Window"** %36, %19
  br i1 %37, label %46, label %38

38:                                               ; preds = %35
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %36, align 8
  %40 = icmp ugt %"class.aura::Window"* %39, %10
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %10, i64 0, i32 1, i32 2
  %43 = load %"class.ui::Layer"*, %"class.ui::Layer"** %42, align 8
  %44 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %43) #12
  %45 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %44, i32 71) #12
  br i1 %45, label %50, label %46

46:                                               ; preds = %41, %35, %9, %38
  %47 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %10, i64 0, i32 13
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %47, align 8
  %49 = icmp eq %"class.aura::Window"* %48, null
  br i1 %49, label %50, label %9

50:                                               ; preds = %41, %46, %2
  %51 = phi i1 [ false, %2 ], [ true, %41 ], [ false, %46 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker37WindowOrDescendantIsTrackedAndVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br i1 %3, label %4, label %50

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %5, align 8
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair.112"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.std::__1::pair.112"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"struct.std::__1::pair.112"*
  br i1 %12, label %30, label %14

14:                                               ; preds = %4
  %15 = sdiv exact i64 %11, 40
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.std::__1::pair.112"* [ %6, %14 ], [ %28, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %20, i64 0, i32 0
  %22 = load %"class.aura::Window"*, %"class.aura::Window"** %21, align 8
  %23 = icmp ult %"class.aura::Window"* %22, %1
  %24 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair.112"* %24, %"struct.std::__1::pair.112"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16, %4
  %31 = phi %"struct.std::__1::pair.112"* [ %6, %4 ], [ %28, %16 ]
  %32 = icmp eq %"struct.std::__1::pair.112"* %31, %13
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %31, i64 0, i32 0
  %35 = load %"class.aura::Window"*, %"class.aura::Window"** %34, align 8
  %36 = icmp ugt %"class.aura::Window"* %35, %1
  br i1 %36, label %37, label %50

37:                                               ; preds = %33, %30
  %38 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 0
  %39 = load %"class.aura::Window"**, %"class.aura::Window"*** %38, align 8
  %40 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 1
  %41 = load %"class.aura::Window"**, %"class.aura::Window"*** %40, align 8
  %42 = icmp eq %"class.aura::Window"** %39, %41
  br i1 %42, label %50, label %45

43:                                               ; preds = %45
  %44 = icmp eq %"class.aura::Window"** %49, %41
  br i1 %44, label %50, label %45

45:                                               ; preds = %37, %43
  %46 = phi %"class.aura::Window"** [ %49, %43 ], [ %39, %37 ]
  %47 = load %"class.aura::Window"*, %"class.aura::Window"** %46, align 8
  %48 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker37WindowOrDescendantIsTrackedAndVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %47)
  %49 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %46, i64 1
  br i1 %48, label %50, label %43

50:                                               ; preds = %43, %45, %37, %33, %2
  %51 = phi i1 [ false, %2 ], [ true, %33 ], [ false, %37 ], [ false, %43 ], [ true, %45 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker40WindowOrDescendantCanOccludeOtherWindowsEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %2, label %16, label %5

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %7 = load %"class.aura::Window"*, %"class.aura::Window"** %6, align 8
  %8 = icmp eq %"class.aura::Window"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %7, i64 0, i32 1, i32 2
  %11 = load %"class.ui::Layer"*, %"class.ui::Layer"** %10, align 8
  %12 = tail call float @_ZNK2ui5Layer18GetCombinedOpacityEv(%"class.ui::Layer"* %11) #12
  %13 = fcmp une float %12, 1.000000e+00
  %14 = or i1 %13, %3
  %15 = xor i1 %13, true
  br i1 %14, label %22, label %17

16:                                               ; preds = %4, %5
  br i1 %3, label %22, label %17

17:                                               ; preds = %9, %16
  %18 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %19 = load %"class.ui::Layer"*, %"class.ui::Layer"** %18, align 8
  %20 = tail call float @_ZNK2ui5Layer7opacityEv(%"class.ui::Layer"* %19) #12
  %21 = fcmp oeq float %20, 1.000000e+00
  br label %22

22:                                               ; preds = %9, %16, %17
  %23 = phi i1 [ %15, %9 ], [ true, %16 ], [ %21, %17 ]
  %24 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br i1 %24, label %25, label %104

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %27 = load %"class.ui::Layer"*, %"class.ui::Layer"** %26, align 8
  %28 = icmp eq %"class.ui::Layer"* %27, null
  %29 = xor i1 %23, true
  %30 = or i1 %28, %29
  br i1 %30, label %104, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %32, align 8
  %34 = icmp eq %"class.aura::Window"* %33, null
  br i1 %34, label %35, label %69

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %"class.aura::Window"**, %"class.aura::Window"*** %36, align 8
  %38 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %39 = bitcast %"class.aura::Window"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = ptrtoint %"class.aura::Window"** %37 to i64
  %42 = sub i64 %40, %41
  %43 = icmp eq i64 %42, 0
  %44 = inttoptr i64 %40 to %"class.aura::Window"**
  br i1 %43, label %60, label %45

45:                                               ; preds = %35
  %46 = ashr exact i64 %42, 3
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi %"class.aura::Window"** [ %37, %45 ], [ %58, %47 ]
  %49 = phi i64 [ %46, %45 ], [ %57, %47 ]
  %50 = lshr i64 %49, 1
  %51 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %48, i64 %50
  %52 = load %"class.aura::Window"*, %"class.aura::Window"** %51, align 8
  %53 = icmp ult %"class.aura::Window"* %52, %1
  %54 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %51, i64 1
  %55 = xor i64 %50, -1
  %56 = add i64 %49, %55
  %57 = select i1 %53, i64 %56, i64 %50
  %58 = select i1 %53, %"class.aura::Window"** %54, %"class.aura::Window"** %48
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %47, %35
  %61 = phi %"class.aura::Window"** [ %37, %35 ], [ %58, %47 ]
  %62 = icmp eq %"class.aura::Window"** %61, %44
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = load %"class.aura::Window"*, %"class.aura::Window"** %61, align 8
  %65 = icmp ugt %"class.aura::Window"* %64, %1
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %27) #12
  %68 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %67, i32 71) #12
  br i1 %68, label %104, label %69

69:                                               ; preds = %60, %31, %63, %66
  %70 = tail call zeroext i1 @_ZNK4aura6Window14GetTransparentEv(%"class.aura::Window"* %1) #12
  br i1 %70, label %85, label %71

71:                                               ; preds = %69
  %72 = load %"class.ui::Layer"*, %"class.ui::Layer"** %26, align 8
  %73 = getelementptr inbounds %"class.ui::Layer", %"class.ui::Layer"* %72, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %104

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %77, align 8
  %79 = icmp eq %"class.base::internal::BindStateBase"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %78, i64 0, i32 1
  %82 = bitcast void ()** %81 to i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)**
  %83 = load i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.aura::Window"*)** %82, align 8
  %84 = tail call zeroext i1 %83(%"class.base::internal::BindStateBase"* nonnull %78, %"class.aura::Window"* %1) #12
  br i1 %84, label %104, label %85

85:                                               ; preds = %76, %80, %69
  %86 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 23, i32 0, i32 0
  %87 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %86, align 8
  %88 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 23, i32 0, i32 1
  %89 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %88, align 8
  %90 = icmp eq %"class.gfx::Rect"* %87, %89
  br i1 %90, label %91, label %104

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 0
  %93 = load %"class.aura::Window"**, %"class.aura::Window"*** %92, align 8
  %94 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 1
  %95 = load %"class.aura::Window"**, %"class.aura::Window"*** %94, align 8
  %96 = icmp eq %"class.aura::Window"** %93, %95
  br i1 %96, label %104, label %99

97:                                               ; preds = %99
  %98 = icmp eq %"class.aura::Window"** %103, %95
  br i1 %98, label %104, label %99

99:                                               ; preds = %91, %97
  %100 = phi %"class.aura::Window"** [ %103, %97 ], [ %93, %91 ]
  %101 = load %"class.aura::Window"*, %"class.aura::Window"** %100, align 8
  %102 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker40WindowOrDescendantCanOccludeOtherWindowsEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %101, i1 zeroext true, i1 zeroext false)
  %103 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %100, i64 1
  br i1 %102, label %104, label %97

104:                                              ; preds = %97, %99, %91, %85, %25, %66, %22, %80, %71
  %105 = phi i1 [ false, %25 ], [ false, %66 ], [ false, %22 ], [ true, %85 ], [ true, %80 ], [ true, %71 ], [ false, %91 ], [ false, %97 ], [ true, %99 ]
  ret i1 %105
}

declare float @_ZNK2ui5Layer7opacityEv(%"class.ui::Layer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker43WindowOpacityChangeMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br i1 %3, label %4, label %83

4:                                                ; preds = %2
  %5 = icmp eq %"class.aura::Window"* %1, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %10 = bitcast %"class.aura::Window"*** %9 to i64*
  br label %11

11:                                               ; preds = %48, %6
  %12 = phi %"class.aura::Window"* [ %1, %6 ], [ %50, %48 ]
  %13 = load %"class.aura::Window"*, %"class.aura::Window"** %7, align 8
  %14 = icmp eq %"class.aura::Window"* %13, null
  br i1 %14, label %15, label %48

15:                                               ; preds = %11
  %16 = load %"class.aura::Window"**, %"class.aura::Window"*** %8, align 8
  %17 = load i64, i64* %10, align 8
  %18 = ptrtoint %"class.aura::Window"** %16 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %17 to %"class.aura::Window"**
  br i1 %20, label %37, label %22

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 3
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"class.aura::Window"** [ %16, %22 ], [ %35, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %34, %24 ]
  %27 = lshr i64 %26, 1
  %28 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %25, i64 %27
  %29 = load %"class.aura::Window"*, %"class.aura::Window"** %28, align 8
  %30 = icmp ult %"class.aura::Window"* %29, %12
  %31 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %28, i64 1
  %32 = xor i64 %27, -1
  %33 = add i64 %26, %32
  %34 = select i1 %30, i64 %33, i64 %27
  %35 = select i1 %30, %"class.aura::Window"** %31, %"class.aura::Window"** %25
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %24

37:                                               ; preds = %24, %15
  %38 = phi %"class.aura::Window"** [ %16, %15 ], [ %35, %24 ]
  %39 = icmp eq %"class.aura::Window"** %38, %21
  br i1 %39, label %48, label %40

40:                                               ; preds = %37
  %41 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %42 = icmp ugt %"class.aura::Window"* %41, %12
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %12, i64 0, i32 1, i32 2
  %45 = load %"class.ui::Layer"*, %"class.ui::Layer"** %44, align 8
  %46 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %45) #12
  %47 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %46, i32 71) #12
  br i1 %47, label %83, label %48

48:                                               ; preds = %43, %40, %37, %11
  %49 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %12, i64 0, i32 13
  %50 = load %"class.aura::Window"*, %"class.aura::Window"** %49, align 8
  %51 = icmp eq %"class.aura::Window"* %50, null
  br i1 %51, label %52, label %11

52:                                               ; preds = %48, %4
  %53 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %54 = load %"class.aura::Window"**, %"class.aura::Window"*** %53, align 8
  %55 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %56 = bitcast %"class.aura::Window"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = ptrtoint %"class.aura::Window"** %54 to i64
  %59 = sub i64 %57, %58
  %60 = icmp eq i64 %59, 0
  %61 = inttoptr i64 %57 to %"class.aura::Window"**
  br i1 %60, label %77, label %62

62:                                               ; preds = %52
  %63 = ashr exact i64 %59, 3
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi %"class.aura::Window"** [ %54, %62 ], [ %75, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %74, %64 ]
  %67 = lshr i64 %66, 1
  %68 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %65, i64 %67
  %69 = load %"class.aura::Window"*, %"class.aura::Window"** %68, align 8
  %70 = icmp ult %"class.aura::Window"* %69, %1
  %71 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %68, i64 1
  %72 = xor i64 %67, -1
  %73 = add i64 %66, %72
  %74 = select i1 %70, i64 %73, i64 %67
  %75 = select i1 %70, %"class.aura::Window"** %71, %"class.aura::Window"** %65
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %77, label %64

77:                                               ; preds = %64, %52
  %78 = phi %"class.aura::Window"** [ %54, %52 ], [ %75, %64 ]
  %79 = icmp eq %"class.aura::Window"** %78, %61
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = load %"class.aura::Window"*, %"class.aura::Window"** %78, align 8
  %82 = icmp ugt %"class.aura::Window"* %81, %1
  br label %83

83:                                               ; preds = %43, %80, %77, %2
  %84 = phi i1 [ false, %2 ], [ true, %77 ], [ %82, %80 ], [ false, %43 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura22WindowOcclusionTracker34WindowMoveMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* nocapture readonly, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.aura::Window"* %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %8 = bitcast %"class.aura::Window"*** %7 to i64*
  br label %9

9:                                                ; preds = %46, %4
  %10 = phi %"class.aura::Window"* [ %1, %4 ], [ %48, %46 ]
  %11 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %12 = icmp eq %"class.aura::Window"* %11, null
  br i1 %12, label %13, label %46

13:                                               ; preds = %9
  %14 = load %"class.aura::Window"**, %"class.aura::Window"*** %6, align 8
  %15 = load i64, i64* %8, align 8
  %16 = ptrtoint %"class.aura::Window"** %14 to i64
  %17 = sub i64 %15, %16
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %15 to %"class.aura::Window"**
  br i1 %18, label %35, label %20

20:                                               ; preds = %13
  %21 = ashr exact i64 %17, 3
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi %"class.aura::Window"** [ %14, %20 ], [ %33, %22 ]
  %24 = phi i64 [ %21, %20 ], [ %32, %22 ]
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %23, i64 %25
  %27 = load %"class.aura::Window"*, %"class.aura::Window"** %26, align 8
  %28 = icmp ult %"class.aura::Window"* %27, %10
  %29 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %26, i64 1
  %30 = xor i64 %25, -1
  %31 = add i64 %24, %30
  %32 = select i1 %28, i64 %31, i64 %25
  %33 = select i1 %28, %"class.aura::Window"** %29, %"class.aura::Window"** %23
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %22

35:                                               ; preds = %22, %13
  %36 = phi %"class.aura::Window"** [ %14, %13 ], [ %33, %22 ]
  %37 = icmp eq %"class.aura::Window"** %36, %19
  br i1 %37, label %46, label %38

38:                                               ; preds = %35
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %36, align 8
  %40 = icmp ugt %"class.aura::Window"* %39, %10
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %10, i64 0, i32 1, i32 2
  %43 = load %"class.ui::Layer"*, %"class.ui::Layer"** %42, align 8
  %44 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %43) #12
  %45 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %44, i32 71) #12
  br i1 %45, label %85, label %46

46:                                               ; preds = %41, %38, %35, %9
  %47 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %10, i64 0, i32 13
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %47, align 8
  %49 = icmp eq %"class.aura::Window"* %48, null
  br i1 %49, label %50, label %9

50:                                               ; preds = %46, %2
  %51 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %52 = load %"class.aura::Window"**, %"class.aura::Window"*** %51, align 8
  %53 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %54 = bitcast %"class.aura::Window"*** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint %"class.aura::Window"** %52 to i64
  %57 = sub i64 %55, %56
  %58 = icmp eq i64 %57, 0
  %59 = inttoptr i64 %55 to %"class.aura::Window"**
  br i1 %58, label %75, label %60

60:                                               ; preds = %50
  %61 = ashr exact i64 %57, 3
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi %"class.aura::Window"** [ %52, %60 ], [ %73, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %72, %62 ]
  %65 = lshr i64 %64, 1
  %66 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %63, i64 %65
  %67 = load %"class.aura::Window"*, %"class.aura::Window"** %66, align 8
  %68 = icmp ult %"class.aura::Window"* %67, %1
  %69 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %66, i64 1
  %70 = xor i64 %65, -1
  %71 = add i64 %64, %70
  %72 = select i1 %68, i64 %71, i64 %65
  %73 = select i1 %68, %"class.aura::Window"** %69, %"class.aura::Window"** %63
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %62

75:                                               ; preds = %62, %50
  %76 = phi %"class.aura::Window"** [ %52, %50 ], [ %73, %62 ]
  %77 = icmp eq %"class.aura::Window"** %76, %59
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = load %"class.aura::Window"*, %"class.aura::Window"** %76, align 8
  %80 = icmp ugt %"class.aura::Window"* %79, %1
  br i1 %80, label %81, label %85

81:                                               ; preds = %78, %75
  %82 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker40WindowOrDescendantCanOccludeOtherWindowsEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext false, i1 zeroext false)
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker37WindowOrDescendantIsTrackedAndVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br label %85

85:                                               ; preds = %41, %78, %81, %83
  %86 = phi i1 [ false, %78 ], [ true, %81 ], [ %84, %83 ], [ false, %41 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker33AddObserverToWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.112"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.112"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.112"*
  br i1 %10, label %28, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.112"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 0, i32 0
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = icmp ult %"class.aura::Window"* %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.112"* %22, %"struct.std::__1::pair.112"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %2
  %29 = phi %"struct.std::__1::pair.112"* [ %4, %2 ], [ %26, %14 ]
  %30 = icmp eq %"struct.std::__1::pair.112"* %29, %11
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %29, i64 0, i32 0
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %32, align 8
  %34 = icmp ugt %"class.aura::Window"* %33, %1
  br i1 %34, label %35, label %109

35:                                               ; preds = %31, %28
  %36 = ptrtoint %"class.aura::Window"* %1 to i64
  %37 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1
  %38 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %39 = load %"class.aura::Window"**, %"class.aura::Window"*** %38, align 8
  %40 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.aura::Window"**, %"class.aura::Window"*** %40, align 8
  %42 = icmp eq %"class.aura::Window"** %39, %41
  %43 = ptrtoint %"class.aura::Window"** %41 to i64
  br i1 %42, label %49, label %44

44:                                               ; preds = %35
  %45 = bitcast %"class.aura::Window"** %39 to i64*
  store i64 %36, i64* %45, align 8
  %46 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %39, i64 1
  %47 = ptrtoint %"class.aura::Window"** %46 to i64
  %48 = bitcast %"class.aura::Window"*** %38 to i64*
  store i64 %47, i64* %48, align 8
  br label %106

49:                                               ; preds = %35
  %50 = ptrtoint %"class.aura::Window"** %39 to i64
  %51 = bitcast %"class.aura::Window"*** %38 to i64*
  %52 = bitcast %"class.std::__1::vector.445"* %37 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %50, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::vector.445"* %37 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #14
  unreachable

60:                                               ; preds = %49
  %61 = bitcast %"class.aura::Window"*** %40 to i64*
  %62 = sub i64 %43, %53
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %56
  %68 = select i1 %67, i64 %56, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @abort() #14
  unreachable

73:                                               ; preds = %70, %60
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %60 ]
  %75 = shl i64 %74, 3
  %76 = tail call i8* @_Znwm(i64 %75) #13
  %77 = bitcast i8* %76 to %"class.aura::Window"**
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi %"class.aura::Window"** [ %77, %73 ], [ null, %65 ]
  %81 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %80, i64 %55
  %82 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %80, i64 %79
  %83 = ptrtoint %"class.aura::Window"** %82 to i64
  %84 = bitcast %"class.aura::Window"** %81 to i64*
  store i64 %36, i64* %84, align 8
  %85 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %81, i64 1
  %86 = ptrtoint %"class.aura::Window"** %85 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector.445", %"class.std::__1::vector.445"* %37, i64 0, i32 0, i32 0
  %88 = load %"class.aura::Window"**, %"class.aura::Window"*** %87, align 8
  %89 = load i64, i64* %51, align 8
  %90 = ptrtoint %"class.aura::Window"** %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %81, i64 %93
  %95 = ptrtoint %"class.aura::Window"** %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %78
  %98 = bitcast %"class.aura::Window"** %94 to i8*
  %99 = bitcast %"class.aura::Window"** %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #12
  %100 = load %"class.aura::Window"**, %"class.aura::Window"*** %87, align 8
  br label %101

101:                                              ; preds = %97, %78
  %102 = phi %"class.aura::Window"** [ %88, %78 ], [ %100, %97 ]
  store i64 %95, i64* %52, align 8
  store i64 %86, i64* %51, align 8
  store i64 %83, i64* %61, align 8
  %103 = icmp eq %"class.aura::Window"** %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.aura::Window"** %102 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %44, %101, %104
  %107 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 0
  %108 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %107, align 8
  tail call void @_ZN4aura6Window11AddObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %108) #12
  br label %109

109:                                              ; preds = %31, %106
  %110 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 0
  %111 = load %"class.aura::Window"**, %"class.aura::Window"*** %110, align 8
  %112 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 1
  %113 = load %"class.aura::Window"**, %"class.aura::Window"*** %112, align 8
  %114 = icmp eq %"class.aura::Window"** %111, %113
  br i1 %114, label %115, label %116

115:                                              ; preds = %116, %109
  ret void

116:                                              ; preds = %109, %116
  %117 = phi %"class.aura::Window"** [ %119, %116 ], [ %111, %109 ]
  %118 = load %"class.aura::Window"*, %"class.aura::Window"** %117, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker33AddObserverToWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %118)
  %119 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %117, i64 1
  %120 = icmp eq %"class.aura::Window"** %119, %113
  br i1 %120, label %115, label %116
}

declare %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"*) local_unnamed_addr #1

declare void @_ZN4aura14WindowTreeHost11AddObserverEPNS_22WindowTreeHostObserverE(%"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHostObserver"*) local_unnamed_addr #1

declare void @_ZN4aura28NativeWindowOcclusionTracker35EnableNativeWindowOcclusionTrackingEPNS_14WindowTreeHostE(%"class.aura::NativeWindowOcclusionTracker"*, %"class.aura::WindowTreeHost"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker28TrackedWindowRemovedFromRootEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %5, align 8
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair.495"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.std::__1::pair.495"* %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"struct.std::__1::pair.495"*
  br i1 %12, label %32, label %14

14:                                               ; preds = %2
  %15 = sdiv exact i64 %11, 24
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"struct.std::__1::pair.495"* [ %6, %14 ], [ %28, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %20, i64 0, i32 0
  %22 = load %"class.aura::Window"*, %"class.aura::Window"** %21, align 8
  %23 = icmp ult %"class.aura::Window"* %22, %4
  %24 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair.495"* %24, %"struct.std::__1::pair.495"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.std::__1::pair.495"* %28 to i64
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi i64 [ %31, %30 ], [ %10, %2 ]
  %34 = phi %"struct.std::__1::pair.495"* [ %28, %30 ], [ %6, %2 ]
  %35 = icmp eq %"struct.std::__1::pair.495"* %34, %13
  br i1 %35, label %43, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %34, i64 0, i32 0
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %37, align 8
  %39 = icmp ult %"class.aura::Window"* %4, %38
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %34, i64 1
  %42 = ptrtoint %"struct.std::__1::pair.495"* %41 to i64
  br label %43

43:                                               ; preds = %32, %36, %40
  %44 = phi i64 [ %42, %40 ], [ %33, %32 ], [ %33, %36 ]
  %45 = inttoptr i64 %44 to %"struct.std::__1::pair.495"*
  %46 = icmp eq %"struct.std::__1::pair.495"* %34, %45
  %47 = select i1 %46, %"struct.std::__1::pair.495"* %13, %"struct.std::__1::pair.495"* %34
  %48 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %47, i64 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %48, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %82

52:                                               ; preds = %43
  tail call void @_ZN4aura22WindowOcclusionTracker38RemoveObserverFromWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %4)
  %53 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %7, align 8
  %54 = icmp eq %"struct.std::__1::pair.495"* %53, %47
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  %58 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %7, align 8
  br label %59

59:                                               ; preds = %55, %52
  %60 = phi %"struct.std::__1::pair.495"* [ %53, %52 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %47, i64 1
  %62 = icmp eq %"struct.std::__1::pair.495"* %61, %60
  br i1 %62, label %76, label %63

63:                                               ; preds = %59, %63
  %64 = phi %"struct.std::__1::pair.495"* [ %74, %63 ], [ %47, %59 ]
  %65 = phi %"struct.std::__1::pair.495"* [ %73, %63 ], [ %61, %59 ]
  %66 = bitcast %"struct.std::__1::pair.495"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.std::__1::pair.495"* %64 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %65, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %64, i64 0, i32 1
  %71 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %70 to i8*
  %72 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 4 %72, i64 12, i1 false) #12
  %73 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %65, i64 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %64, i64 1
  %75 = icmp eq %"struct.std::__1::pair.495"* %73, %60
  br i1 %75, label %76, label %63

76:                                               ; preds = %63, %59
  %77 = phi %"struct.std::__1::pair.495"* [ %47, %59 ], [ %74, %63 ]
  store %"struct.std::__1::pair.495"* %77, %"struct.std::__1::pair.495"** %7, align 8
  %78 = call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %4) #12
  %79 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 2
  call void @_ZN4aura14WindowTreeHost14RemoveObserverEPNS_22WindowTreeHostObserverE(%"class.aura::WindowTreeHost"* %78, %"class.aura::WindowTreeHostObserver"* %79) #12
  %80 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 15
  %81 = call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %4) #12
  call void @_ZN4aura28NativeWindowOcclusionTracker36DisableNativeWindowOcclusionTrackingEPNS_14WindowTreeHostE(%"class.aura::NativeWindowOcclusionTracker"* %80, %"class.aura::WindowTreeHost"* %81) #12
  br label %82

82:                                               ; preds = %76, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker38RemoveObserverFromWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.112"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.112"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.112"*
  br i1 %10, label %28, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.112"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 0, i32 0
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = icmp ult %"class.aura::Window"* %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.112"* %22, %"struct.std::__1::pair.112"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %2
  %29 = phi %"struct.std::__1::pair.112"* [ %4, %2 ], [ %26, %14 ]
  %30 = icmp eq %"struct.std::__1::pair.112"* %29, %11
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %29, i64 0, i32 0
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %32, align 8
  %34 = icmp ugt %"class.aura::Window"* %33, %1
  br i1 %34, label %35, label %128

35:                                               ; preds = %31, %28
  %36 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %37 = load %"class.aura::Window"**, %"class.aura::Window"*** %36, align 8
  %38 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %39 = load %"class.aura::Window"**, %"class.aura::Window"*** %38, align 8
  %40 = icmp eq %"class.aura::Window"** %37, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35, %45
  %42 = phi %"class.aura::Window"** [ %46, %45 ], [ %37, %35 ]
  %43 = load %"class.aura::Window"*, %"class.aura::Window"** %42, align 8
  %44 = icmp eq %"class.aura::Window"* %43, %1
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %42, i64 1
  %47 = icmp eq %"class.aura::Window"** %46, %39
  br i1 %47, label %74, label %41

48:                                               ; preds = %41, %35
  %49 = phi %"class.aura::Window"** [ %37, %35 ], [ %42, %41 ]
  %50 = icmp eq %"class.aura::Window"** %49, %39
  br i1 %50, label %74, label %51

51:                                               ; preds = %48
  %52 = ptrtoint %"class.aura::Window"** %39 to i64
  br i1 %40, label %60, label %53

53:                                               ; preds = %51, %57
  %54 = phi %"class.aura::Window"** [ %58, %57 ], [ %37, %51 ]
  %55 = load %"class.aura::Window"*, %"class.aura::Window"** %54, align 8
  %56 = icmp eq %"class.aura::Window"* %55, %1
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %54, i64 1
  %59 = icmp eq %"class.aura::Window"** %58, %39
  br i1 %59, label %60, label %53

60:                                               ; preds = %57, %53, %51
  %61 = phi %"class.aura::Window"** [ %37, %51 ], [ %54, %53 ], [ %39, %57 ]
  %62 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %61, i64 1
  %63 = ptrtoint %"class.aura::Window"** %62 to i64
  %64 = sub i64 %52, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %60
  %68 = bitcast %"class.aura::Window"** %61 to i8*
  %69 = bitcast %"class.aura::Window"** %62 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 %64, i1 false) #12
  br label %70

70:                                               ; preds = %60, %67
  %71 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %61, i64 %65
  store %"class.aura::Window"** %71, %"class.aura::Window"*** %38, align 8
  %72 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 0
  %73 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %72, align 8
  tail call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %1, %"class.aura::WindowObserver"* %73) #12
  br label %74

74:                                               ; preds = %45, %48, %70
  %75 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %76 = load %"class.ui::Layer"*, %"class.ui::Layer"** %75, align 8
  %77 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %76) #12
  %78 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0
  tail call void @_ZN2ui13LayerAnimator14RemoveObserverEPNS_22LayerAnimationObserverE(%"class.ui::LayerAnimator"* %77, %"class.ui::LayerAnimationObserver"* %78) #12
  %79 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %80 = load %"class.aura::Window"**, %"class.aura::Window"*** %79, align 8
  %81 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %82 = bitcast %"class.aura::Window"*** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = ptrtoint %"class.aura::Window"** %80 to i64
  %85 = sub i64 %83, %84
  %86 = icmp eq i64 %85, 0
  %87 = inttoptr i64 %83 to %"class.aura::Window"**
  br i1 %86, label %105, label %88

88:                                               ; preds = %74
  %89 = ashr exact i64 %85, 3
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi %"class.aura::Window"** [ %80, %88 ], [ %101, %90 ]
  %92 = phi i64 [ %89, %88 ], [ %100, %90 ]
  %93 = lshr i64 %92, 1
  %94 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 %93
  %95 = load %"class.aura::Window"*, %"class.aura::Window"** %94, align 8
  %96 = icmp ult %"class.aura::Window"* %95, %1
  %97 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %94, i64 1
  %98 = xor i64 %93, -1
  %99 = add i64 %92, %98
  %100 = select i1 %96, i64 %99, i64 %93
  %101 = select i1 %96, %"class.aura::Window"** %97, %"class.aura::Window"** %91
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %103, label %90

103:                                              ; preds = %90
  %104 = ptrtoint %"class.aura::Window"** %101 to i64
  br label %105

105:                                              ; preds = %103, %74
  %106 = phi i64 [ %104, %103 ], [ %84, %74 ]
  %107 = phi %"class.aura::Window"** [ %101, %103 ], [ %80, %74 ]
  %108 = icmp eq %"class.aura::Window"** %107, %87
  br i1 %108, label %115, label %109

109:                                              ; preds = %105
  %110 = load %"class.aura::Window"*, %"class.aura::Window"** %107, align 8
  %111 = icmp ugt %"class.aura::Window"* %110, %1
  br i1 %111, label %115, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %107, i64 1
  %114 = ptrtoint %"class.aura::Window"** %113 to i64
  br label %115

115:                                              ; preds = %112, %109, %105
  %116 = phi i64 [ %114, %112 ], [ %106, %105 ], [ %106, %109 ]
  %117 = inttoptr i64 %116 to %"class.aura::Window"**
  %118 = icmp eq %"class.aura::Window"** %107, %117
  br i1 %118, label %128, label %119

119:                                              ; preds = %115
  %120 = sub i64 %83, %116
  %121 = ashr exact i64 %120, 3
  %122 = icmp eq i64 %120, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = bitcast %"class.aura::Window"** %107 to i8*
  %125 = inttoptr i64 %116 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 %120, i1 false) #12
  br label %126

126:                                              ; preds = %123, %119
  %127 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %107, i64 %121
  store %"class.aura::Window"** %127, %"class.aura::Window"*** %81, align 8
  br label %128

128:                                              ; preds = %31, %126, %115
  %129 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 0
  %130 = load %"class.aura::Window"**, %"class.aura::Window"*** %129, align 8
  %131 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 14, i32 0, i32 1
  %132 = load %"class.aura::Window"**, %"class.aura::Window"*** %131, align 8
  %133 = icmp eq %"class.aura::Window"** %130, %132
  br i1 %133, label %134, label %135

134:                                              ; preds = %135, %128
  ret void

135:                                              ; preds = %128, %135
  %136 = phi %"class.aura::Window"** [ %138, %135 ], [ %130, %128 ]
  %137 = load %"class.aura::Window"*, %"class.aura::Window"** %136, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker38RemoveObserverFromWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %137)
  %138 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %136, i64 1
  %139 = icmp eq %"class.aura::Window"** %138, %132
  br i1 %139, label %134, label %135
}

declare void @_ZN4aura14WindowTreeHost14RemoveObserverEPNS_22WindowTreeHostObserverE(%"class.aura::WindowTreeHost"*, %"class.aura::WindowTreeHostObserver"*) local_unnamed_addr #1

declare void @_ZN4aura28NativeWindowOcclusionTracker36DisableNativeWindowOcclusionTrackingEPNS_14WindowTreeHostE(%"class.aura::NativeWindowOcclusionTracker"*, %"class.aura::WindowTreeHost"*) local_unnamed_addr #1

declare void @_ZN2ui13LayerAnimator14RemoveObserverEPNS_22LayerAnimationObserverE(%"class.ui::LayerAnimator"*, %"class.ui::LayerAnimationObserver"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker5PauseEv(%"class.aura::WindowOcclusionTracker"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker7UnpauseEv(%"class.aura::WindowOcclusionTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker21OnLayerAnimationEndedEPN2ui22LayerAnimationSequenceE(%"class.aura::WindowOcclusionTracker"*, %"class.ui::LayerAnimationSequence"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4aura22WindowOcclusionTracker22CleanupAnimatedWindowsEv(%"class.aura::WindowOcclusionTracker"* %0)
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker23OnLayerAnimationAbortedEPN2ui22LayerAnimationSequenceE(%"class.aura::WindowOcclusionTracker"*, %"class.ui::LayerAnimationSequence"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN4aura22WindowOcclusionTracker22CleanupAnimatedWindowsEv(%"class.aura::WindowOcclusionTracker"* %0)
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker25OnLayerAnimationScheduledEPN2ui22LayerAnimationSequenceE(%"class.aura::WindowOcclusionTracker"* nocapture, %"class.ui::LayerAnimationSequence"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker24OnWindowHierarchyChangedERKNS_14WindowObserver21HierarchyChangeParamsE(%"class.aura::WindowOcclusionTracker"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 0
  %4 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %5 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %4) #12
  %6 = icmp eq %"class.aura::Window"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %8, align 8
  %10 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair.495"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.495"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.495"*
  br i1 %15, label %33, label %17

17:                                               ; preds = %7
  %18 = sdiv exact i64 %14, 24
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %"struct.std::__1::pair.495"* [ %9, %17 ], [ %31, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %30, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %23, i64 0, i32 0
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %24, align 8
  %26 = icmp ult %"class.aura::Window"* %25, %5
  %27 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %23, i64 1
  %28 = xor i64 %22, -1
  %29 = add i64 %21, %28
  %30 = select i1 %26, i64 %29, i64 %22
  %31 = select i1 %26, %"struct.std::__1::pair.495"* %27, %"struct.std::__1::pair.495"* %20
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %7
  %34 = phi %"struct.std::__1::pair.495"* [ %9, %7 ], [ %31, %19 ]
  %35 = icmp eq %"struct.std::__1::pair.495"* %34, %16
  br i1 %35, label %57, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %34, i64 0, i32 0
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %37, align 8
  %39 = icmp ult %"class.aura::Window"* %5, %38
  br i1 %39, label %57, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %42 = load %"class.aura::Window"**, %"class.aura::Window"*** %41, align 8
  %43 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %44 = load %"class.aura::Window"**, %"class.aura::Window"*** %43, align 8
  %45 = icmp eq %"class.aura::Window"** %42, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %40, %50
  %47 = phi %"class.aura::Window"** [ %51, %50 ], [ %42, %40 ]
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %47, align 8
  %49 = icmp eq %"class.aura::Window"* %48, %4
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %47, i64 1
  %52 = icmp eq %"class.aura::Window"** %51, %44
  br i1 %52, label %56, label %46

53:                                               ; preds = %46, %40
  %54 = phi %"class.aura::Window"** [ %42, %40 ], [ %47, %46 ]
  %55 = icmp eq %"class.aura::Window"** %54, %44
  br i1 %55, label %56, label %57

56:                                               ; preds = %50, %53
  tail call void @_ZN4aura22WindowOcclusionTracker33AddObserverToWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %4)
  br label %57

57:                                               ; preds = %53, %36, %33, %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker24OnWindowHierarchyChangedERKNS_14WindowObserver21HierarchyChangeParamsE(%"class.aura::WindowOcclusionTracker"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  %5 = getelementptr inbounds %"struct.aura::WindowObserver::HierarchyChangeParams", %"struct.aura::WindowObserver::HierarchyChangeParams"* %1, i64 0, i32 0
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %5, align 8
  %7 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %6) #12
  %8 = icmp eq %"class.aura::Window"* %7, null
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %3, i64 20
  %11 = bitcast %"class.base::RepeatingCallback.501"* %10 to %"struct.std::__1::pair.495"**
  %12 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %11, align 8
  %13 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %3, i64 21
  %14 = bitcast %"class.base::RepeatingCallback.501"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint %"struct.std::__1::pair.495"* %12 to i64
  %17 = sub i64 %15, %16
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %15 to %"struct.std::__1::pair.495"*
  br i1 %18, label %36, label %20

20:                                               ; preds = %9
  %21 = sdiv exact i64 %17, 24
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi %"struct.std::__1::pair.495"* [ %12, %20 ], [ %34, %22 ]
  %24 = phi i64 [ %21, %20 ], [ %33, %22 ]
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %23, i64 %25
  %27 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %26, i64 0, i32 0
  %28 = load %"class.aura::Window"*, %"class.aura::Window"** %27, align 8
  %29 = icmp ult %"class.aura::Window"* %28, %7
  %30 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %26, i64 1
  %31 = xor i64 %25, -1
  %32 = add i64 %24, %31
  %33 = select i1 %29, i64 %32, i64 %25
  %34 = select i1 %29, %"struct.std::__1::pair.495"* %30, %"struct.std::__1::pair.495"* %23
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %22

36:                                               ; preds = %22, %9
  %37 = phi %"struct.std::__1::pair.495"* [ %12, %9 ], [ %34, %22 ]
  %38 = icmp eq %"struct.std::__1::pair.495"* %37, %19
  br i1 %38, label %62, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %37, i64 0, i32 0
  %41 = load %"class.aura::Window"*, %"class.aura::Window"** %40, align 8
  %42 = icmp ult %"class.aura::Window"* %7, %41
  br i1 %42, label %62, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %3, i64 26
  %45 = bitcast %"class.base::RepeatingCallback.501"* %44 to %"class.aura::Window"***
  %46 = load %"class.aura::Window"**, %"class.aura::Window"*** %45, align 8
  %47 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %3, i64 27
  %48 = bitcast %"class.base::RepeatingCallback.501"* %47 to %"class.aura::Window"***
  %49 = load %"class.aura::Window"**, %"class.aura::Window"*** %48, align 8
  %50 = icmp eq %"class.aura::Window"** %46, %49
  br i1 %50, label %58, label %51

51:                                               ; preds = %43, %55
  %52 = phi %"class.aura::Window"** [ %56, %55 ], [ %46, %43 ]
  %53 = load %"class.aura::Window"*, %"class.aura::Window"** %52, align 8
  %54 = icmp eq %"class.aura::Window"* %53, %6
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %52, i64 1
  %57 = icmp eq %"class.aura::Window"** %56, %49
  br i1 %57, label %61, label %51

58:                                               ; preds = %51, %43
  %59 = phi %"class.aura::Window"** [ %46, %43 ], [ %52, %51 ]
  %60 = icmp eq %"class.aura::Window"** %59, %49
  br i1 %60, label %61, label %62

61:                                               ; preds = %55, %58
  tail call void @_ZN4aura22WindowOcclusionTracker33AddObserverToWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %6) #12
  br label %62

62:                                               ; preds = %2, %36, %39, %58, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.495"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.495"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %5
  %16 = sdiv exact i64 %12, 24
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.495"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %3
  %25 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.495"* %25, %"struct.std::__1::pair.495"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair.495"* %29 to i64
  br label %33

33:                                               ; preds = %31, %5
  %34 = phi i64 [ %32, %31 ], [ %11, %5 ]
  %35 = phi %"struct.std::__1::pair.495"* [ %29, %31 ], [ %7, %5 ]
  %36 = icmp eq %"struct.std::__1::pair.495"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 0, i32 0
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %40 = icmp ult %"class.aura::Window"* %3, %39
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair.495"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair.495"*
  %47 = icmp eq %"struct.std::__1::pair.495"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair.495"* %14, %"struct.std::__1::pair.495"* %35
  %49 = icmp eq %"struct.std::__1::pair.495"* %48, %14
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %48, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 4, !range !7
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker34WindowMoveMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  store i8 1, i8* %51, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %57

57:                                               ; preds = %2, %44, %50, %54, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %105, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.495"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.495"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %5
  %16 = sdiv exact i64 %12, 24
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.495"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %3
  %25 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.495"* %25, %"struct.std::__1::pair.495"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair.495"* %29 to i64
  br label %33

33:                                               ; preds = %31, %5
  %34 = phi i64 [ %32, %31 ], [ %11, %5 ]
  %35 = phi %"struct.std::__1::pair.495"* [ %29, %31 ], [ %7, %5 ]
  %36 = icmp eq %"struct.std::__1::pair.495"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 0, i32 0
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %40 = icmp ult %"class.aura::Window"* %3, %39
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair.495"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair.495"*
  %47 = icmp eq %"struct.std::__1::pair.495"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair.495"* %14, %"struct.std::__1::pair.495"* %35
  %49 = icmp eq %"struct.std::__1::pair.495"* %48, %14
  br i1 %49, label %105, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %48, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 4, !range !7
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %105

54:                                               ; preds = %50
  %55 = icmp eq %"class.aura::Window"* %1, null
  br i1 %55, label %102, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %58 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %60 = bitcast %"class.aura::Window"*** %59 to i64*
  br label %61

61:                                               ; preds = %98, %56
  %62 = phi %"class.aura::Window"* [ %1, %56 ], [ %100, %98 ]
  %63 = load %"class.aura::Window"*, %"class.aura::Window"** %57, align 8
  %64 = icmp eq %"class.aura::Window"* %63, null
  br i1 %64, label %65, label %98

65:                                               ; preds = %61
  %66 = load %"class.aura::Window"**, %"class.aura::Window"*** %58, align 8
  %67 = load i64, i64* %60, align 8
  %68 = ptrtoint %"class.aura::Window"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = icmp eq i64 %69, 0
  %71 = inttoptr i64 %67 to %"class.aura::Window"**
  br i1 %70, label %87, label %72

72:                                               ; preds = %65
  %73 = ashr exact i64 %69, 3
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi %"class.aura::Window"** [ %66, %72 ], [ %85, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %84, %74 ]
  %77 = lshr i64 %76, 1
  %78 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %75, i64 %77
  %79 = load %"class.aura::Window"*, %"class.aura::Window"** %78, align 8
  %80 = icmp ult %"class.aura::Window"* %79, %62
  %81 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %78, i64 1
  %82 = xor i64 %77, -1
  %83 = add i64 %76, %82
  %84 = select i1 %80, i64 %83, i64 %77
  %85 = select i1 %80, %"class.aura::Window"** %81, %"class.aura::Window"** %75
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %87, label %74

87:                                               ; preds = %74, %65
  %88 = phi %"class.aura::Window"** [ %66, %65 ], [ %85, %74 ]
  %89 = icmp eq %"class.aura::Window"** %88, %71
  br i1 %89, label %98, label %90

90:                                               ; preds = %87
  %91 = load %"class.aura::Window"*, %"class.aura::Window"** %88, align 8
  %92 = icmp ugt %"class.aura::Window"* %91, %62
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %62, i64 0, i32 1, i32 2
  %95 = load %"class.ui::Layer"*, %"class.ui::Layer"** %94, align 8
  %96 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %95) #12
  %97 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %96, i32 71) #12
  br i1 %97, label %105, label %98

98:                                               ; preds = %93, %90, %87, %61
  %99 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %62, i64 0, i32 13
  %100 = load %"class.aura::Window"*, %"class.aura::Window"** %99, align 8
  %101 = icmp eq %"class.aura::Window"* %100, null
  br i1 %101, label %102, label %61

102:                                              ; preds = %98, %54
  %103 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker40WindowOrDescendantCanOccludeOtherWindowsEPNS_6WindowEbb(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1, i1 zeroext false, i1 zeroext false) #12
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  store i8 1, i8* %51, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %105

105:                                              ; preds = %93, %2, %44, %50, %102, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN4aura22WindowOcclusionTracker26MaybeObserveAnimatedWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  %5 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %6 = icmp eq %"class.aura::Window"* %5, null
  br i1 %6, label %111, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %8, align 8
  %10 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair.495"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.495"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.495"*
  br i1 %15, label %35, label %17

17:                                               ; preds = %7
  %18 = sdiv exact i64 %14, 24
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %"struct.std::__1::pair.495"* [ %9, %17 ], [ %31, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %30, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %23, i64 0, i32 0
  %25 = load %"class.aura::Window"*, %"class.aura::Window"** %24, align 8
  %26 = icmp ult %"class.aura::Window"* %25, %5
  %27 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %23, i64 1
  %28 = xor i64 %22, -1
  %29 = add i64 %21, %28
  %30 = select i1 %26, i64 %29, i64 %22
  %31 = select i1 %26, %"struct.std::__1::pair.495"* %27, %"struct.std::__1::pair.495"* %20
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %19
  %34 = ptrtoint %"struct.std::__1::pair.495"* %31 to i64
  br label %35

35:                                               ; preds = %33, %7
  %36 = phi i64 [ %34, %33 ], [ %13, %7 ]
  %37 = phi %"struct.std::__1::pair.495"* [ %31, %33 ], [ %9, %7 ]
  %38 = icmp eq %"struct.std::__1::pair.495"* %37, %16
  br i1 %38, label %46, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %37, i64 0, i32 0
  %41 = load %"class.aura::Window"*, %"class.aura::Window"** %40, align 8
  %42 = icmp ult %"class.aura::Window"* %5, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %37, i64 1
  %45 = ptrtoint %"struct.std::__1::pair.495"* %44 to i64
  br label %46

46:                                               ; preds = %43, %39, %35
  %47 = phi i64 [ %45, %43 ], [ %36, %35 ], [ %36, %39 ]
  %48 = inttoptr i64 %47 to %"struct.std::__1::pair.495"*
  %49 = icmp eq %"struct.std::__1::pair.495"* %37, %48
  %50 = select i1 %49, %"struct.std::__1::pair.495"* %16, %"struct.std::__1::pair.495"* %37
  %51 = icmp eq %"struct.std::__1::pair.495"* %50, %16
  br i1 %51, label %111, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %50, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 4, !range !7
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %111

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %58 = load %"class.aura::Window"*, %"class.aura::Window"** %57, align 8
  %59 = icmp eq %"class.aura::Window"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker15WindowIsVisibleEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* nonnull %58) #12
  br i1 %61, label %62, label %111

62:                                               ; preds = %60, %56
  %63 = icmp eq %"class.aura::Window"* %1, null
  br i1 %63, label %110, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 14
  %66 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %68 = bitcast %"class.aura::Window"*** %67 to i64*
  br label %69

69:                                               ; preds = %106, %64
  %70 = phi %"class.aura::Window"* [ %1, %64 ], [ %108, %106 ]
  %71 = load %"class.aura::Window"*, %"class.aura::Window"** %65, align 8
  %72 = icmp eq %"class.aura::Window"* %71, null
  br i1 %72, label %73, label %106

73:                                               ; preds = %69
  %74 = load %"class.aura::Window"**, %"class.aura::Window"*** %66, align 8
  %75 = load i64, i64* %68, align 8
  %76 = ptrtoint %"class.aura::Window"** %74 to i64
  %77 = sub i64 %75, %76
  %78 = icmp eq i64 %77, 0
  %79 = inttoptr i64 %75 to %"class.aura::Window"**
  br i1 %78, label %95, label %80

80:                                               ; preds = %73
  %81 = ashr exact i64 %77, 3
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi %"class.aura::Window"** [ %74, %80 ], [ %93, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %92, %82 ]
  %85 = lshr i64 %84, 1
  %86 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %83, i64 %85
  %87 = load %"class.aura::Window"*, %"class.aura::Window"** %86, align 8
  %88 = icmp ult %"class.aura::Window"* %87, %70
  %89 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %86, i64 1
  %90 = xor i64 %85, -1
  %91 = add i64 %84, %90
  %92 = select i1 %88, i64 %91, i64 %85
  %93 = select i1 %88, %"class.aura::Window"** %89, %"class.aura::Window"** %83
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %95, label %82

95:                                               ; preds = %82, %73
  %96 = phi %"class.aura::Window"** [ %74, %73 ], [ %93, %82 ]
  %97 = icmp eq %"class.aura::Window"** %96, %79
  br i1 %97, label %106, label %98

98:                                               ; preds = %95
  %99 = load %"class.aura::Window"*, %"class.aura::Window"** %96, align 8
  %100 = icmp ugt %"class.aura::Window"* %99, %70
  br i1 %100, label %106, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %70, i64 0, i32 1, i32 2
  %103 = load %"class.ui::Layer"*, %"class.ui::Layer"** %102, align 8
  %104 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %103) #12
  %105 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %104, i32 71) #12
  br i1 %105, label %111, label %106

106:                                              ; preds = %101, %98, %95, %69
  %107 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %70, i64 0, i32 13
  %108 = load %"class.aura::Window"*, %"class.aura::Window"** %107, align 8
  %109 = icmp eq %"class.aura::Window"* %108, null
  br i1 %109, label %110, label %69

110:                                              ; preds = %106, %62
  store i8 1, i8* %53, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %111

111:                                              ; preds = %101, %3, %46, %52, %60, %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %5 = bitcast %"class.base::RepeatingCallback.501"* %4 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowOcclusionTracker"* %5, %"class.aura::Window"* %1, i1 zeroext undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), %"class.gfx::Rect"* nocapture readnone dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZN4aura22WindowOcclusionTracker26MaybeObserveAnimatedWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  %9 = zext i1 %8 to i8
  br label %10

10:                                               ; preds = %7, %5
  %11 = phi i8 [ 0, %5 ], [ %9, %7 ]
  %12 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %13 = icmp eq %"class.aura::Window"* %12, null
  br i1 %13, label %68, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %15, align 8
  %17 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.std::__1::pair.495"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = ptrtoint %"struct.std::__1::pair.495"* %16 to i64
  %21 = sub i64 %19, %20
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %19 to %"struct.std::__1::pair.495"*
  br i1 %22, label %42, label %24

24:                                               ; preds = %14
  %25 = sdiv exact i64 %21, 24
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi %"struct.std::__1::pair.495"* [ %16, %24 ], [ %38, %26 ]
  %28 = phi i64 [ %25, %24 ], [ %37, %26 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %30, i64 0, i32 0
  %32 = load %"class.aura::Window"*, %"class.aura::Window"** %31, align 8
  %33 = icmp ult %"class.aura::Window"* %32, %12
  %34 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %30, i64 1
  %35 = xor i64 %29, -1
  %36 = add i64 %28, %35
  %37 = select i1 %33, i64 %36, i64 %29
  %38 = select i1 %33, %"struct.std::__1::pair.495"* %34, %"struct.std::__1::pair.495"* %27
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %26

40:                                               ; preds = %26
  %41 = ptrtoint %"struct.std::__1::pair.495"* %38 to i64
  br label %42

42:                                               ; preds = %40, %14
  %43 = phi i64 [ %41, %40 ], [ %20, %14 ]
  %44 = phi %"struct.std::__1::pair.495"* [ %38, %40 ], [ %16, %14 ]
  %45 = icmp eq %"struct.std::__1::pair.495"* %44, %23
  br i1 %45, label %53, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %44, i64 0, i32 0
  %48 = load %"class.aura::Window"*, %"class.aura::Window"** %47, align 8
  %49 = icmp ult %"class.aura::Window"* %12, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %44, i64 1
  %52 = ptrtoint %"struct.std::__1::pair.495"* %51 to i64
  br label %53

53:                                               ; preds = %50, %46, %42
  %54 = phi i64 [ %52, %50 ], [ %43, %42 ], [ %43, %46 ]
  %55 = inttoptr i64 %54 to %"struct.std::__1::pair.495"*
  %56 = icmp eq %"struct.std::__1::pair.495"* %44, %55
  %57 = select i1 %56, %"struct.std::__1::pair.495"* %23, %"struct.std::__1::pair.495"* %44
  %58 = icmp eq %"struct.std::__1::pair.495"* %57, %23
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %57, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 4, !range !7
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = icmp eq i8 %11, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker34WindowMoveMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %66, label %67, label %68

67:                                               ; preds = %65, %63
  store i8 1, i8* %60, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %68

68:                                               ; preds = %10, %53, %59, %65, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), %"class.gfx::Rect"* nocapture readnone dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %7 = bitcast %"class.base::RepeatingCallback.501"* %6 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"* %7, %"class.aura::Window"* %1, %"class.gfx::Rect"* dereferenceable(16) undef, %"class.gfx::Rect"* dereferenceable(16) undef, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZN4aura22WindowOcclusionTracker26MaybeObserveAnimatedWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  %7 = zext i1 %6 to i8
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i8 [ 0, %3 ], [ %7, %5 ]
  %10 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %66, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %13, align 8
  %15 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair.495"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"struct.std::__1::pair.495"* %14 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %17 to %"struct.std::__1::pair.495"*
  br i1 %20, label %40, label %22

22:                                               ; preds = %12
  %23 = sdiv exact i64 %19, 24
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"struct.std::__1::pair.495"* [ %14, %22 ], [ %36, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %35, %24 ]
  %27 = lshr i64 %26, 1
  %28 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %25, i64 %27
  %29 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %28, i64 0, i32 0
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %29, align 8
  %31 = icmp ult %"class.aura::Window"* %30, %10
  %32 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %28, i64 1
  %33 = xor i64 %27, -1
  %34 = add i64 %26, %33
  %35 = select i1 %31, i64 %34, i64 %27
  %36 = select i1 %31, %"struct.std::__1::pair.495"* %32, %"struct.std::__1::pair.495"* %25
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %24

38:                                               ; preds = %24
  %39 = ptrtoint %"struct.std::__1::pair.495"* %36 to i64
  br label %40

40:                                               ; preds = %38, %12
  %41 = phi i64 [ %39, %38 ], [ %18, %12 ]
  %42 = phi %"struct.std::__1::pair.495"* [ %36, %38 ], [ %14, %12 ]
  %43 = icmp eq %"struct.std::__1::pair.495"* %42, %21
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %42, i64 0, i32 0
  %46 = load %"class.aura::Window"*, %"class.aura::Window"** %45, align 8
  %47 = icmp ult %"class.aura::Window"* %10, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %42, i64 1
  %50 = ptrtoint %"struct.std::__1::pair.495"* %49 to i64
  br label %51

51:                                               ; preds = %48, %44, %40
  %52 = phi i64 [ %50, %48 ], [ %41, %40 ], [ %41, %44 ]
  %53 = inttoptr i64 %52 to %"struct.std::__1::pair.495"*
  %54 = icmp eq %"struct.std::__1::pair.495"* %42, %53
  %55 = select i1 %54, %"struct.std::__1::pair.495"* %21, %"struct.std::__1::pair.495"* %42
  %56 = icmp eq %"struct.std::__1::pair.495"* %55, %21
  br i1 %56, label %66, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %55, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 4, !range !7
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = icmp eq i8 %9, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker43WindowOpacityChangeMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %64, label %65, label %66

65:                                               ; preds = %63, %61
  store i8 1, i8* %58, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %66

66:                                               ; preds = %8, %51, %57, %63, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %5 = bitcast %"class.base::RepeatingCallback.501"* %4 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"* %5, %"class.aura::Window"* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.495"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.495"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %5
  %16 = sdiv exact i64 %12, 24
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.495"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %3
  %25 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.495"* %25, %"struct.std::__1::pair.495"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair.495"* %29 to i64
  br label %33

33:                                               ; preds = %31, %5
  %34 = phi i64 [ %32, %31 ], [ %11, %5 ]
  %35 = phi %"struct.std::__1::pair.495"* [ %29, %31 ], [ %7, %5 ]
  %36 = icmp eq %"struct.std::__1::pair.495"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 0, i32 0
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %40 = icmp ult %"class.aura::Window"* %3, %39
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair.495"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair.495"*
  %47 = icmp eq %"struct.std::__1::pair.495"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair.495"* %14, %"struct.std::__1::pair.495"* %35
  %49 = icmp eq %"struct.std::__1::pair.495"* %48, %14
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %48, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 4, !range !7
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker43WindowOpacityChangeMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  store i8 1, i8* %51, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %57

57:                                               ; preds = %2, %44, %50, %54, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZN4aura22WindowOcclusionTracker26MaybeObserveAnimatedWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  %7 = zext i1 %6 to i8
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i8 [ 0, %3 ], [ %7, %5 ]
  %10 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %66, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %13, align 8
  %15 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair.495"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"struct.std::__1::pair.495"* %14 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %17 to %"struct.std::__1::pair.495"*
  br i1 %20, label %40, label %22

22:                                               ; preds = %12
  %23 = sdiv exact i64 %19, 24
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"struct.std::__1::pair.495"* [ %14, %22 ], [ %36, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %35, %24 ]
  %27 = lshr i64 %26, 1
  %28 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %25, i64 %27
  %29 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %28, i64 0, i32 0
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %29, align 8
  %31 = icmp ult %"class.aura::Window"* %30, %10
  %32 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %28, i64 1
  %33 = xor i64 %27, -1
  %34 = add i64 %26, %33
  %35 = select i1 %31, i64 %34, i64 %27
  %36 = select i1 %31, %"struct.std::__1::pair.495"* %32, %"struct.std::__1::pair.495"* %25
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %24

38:                                               ; preds = %24
  %39 = ptrtoint %"struct.std::__1::pair.495"* %36 to i64
  br label %40

40:                                               ; preds = %38, %12
  %41 = phi i64 [ %39, %38 ], [ %18, %12 ]
  %42 = phi %"struct.std::__1::pair.495"* [ %36, %38 ], [ %14, %12 ]
  %43 = icmp eq %"struct.std::__1::pair.495"* %42, %21
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %42, i64 0, i32 0
  %46 = load %"class.aura::Window"*, %"class.aura::Window"** %45, align 8
  %47 = icmp ult %"class.aura::Window"* %10, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %42, i64 1
  %50 = ptrtoint %"struct.std::__1::pair.495"* %49 to i64
  br label %51

51:                                               ; preds = %48, %44, %40
  %52 = phi i64 [ %50, %48 ], [ %41, %40 ], [ %41, %44 ]
  %53 = inttoptr i64 %52 to %"struct.std::__1::pair.495"*
  %54 = icmp eq %"struct.std::__1::pair.495"* %42, %53
  %55 = select i1 %54, %"struct.std::__1::pair.495"* %21, %"struct.std::__1::pair.495"* %42
  %56 = icmp eq %"struct.std::__1::pair.495"* %55, %21
  br i1 %56, label %66, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %55, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 4, !range !7
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = icmp eq i8 %9, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker43WindowOpacityChangeMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %64, label %65, label %66

65:                                               ; preds = %63, %61
  store i8 1, i8* %58, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %66

66:                                               ; preds = %8, %51, %57, %63, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %5 = bitcast %"class.base::RepeatingCallback.501"* %4 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"* %5, %"class.aura::Window"* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZN4aura22WindowOcclusionTracker26MaybeObserveAnimatedWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  %7 = zext i1 %6 to i8
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i8 [ 0, %3 ], [ %7, %5 ]
  %10 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %11 = icmp eq %"class.aura::Window"* %10, null
  br i1 %11, label %66, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %13, align 8
  %15 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair.495"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"struct.std::__1::pair.495"* %14 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %17 to %"struct.std::__1::pair.495"*
  br i1 %20, label %40, label %22

22:                                               ; preds = %12
  %23 = sdiv exact i64 %19, 24
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"struct.std::__1::pair.495"* [ %14, %22 ], [ %36, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %35, %24 ]
  %27 = lshr i64 %26, 1
  %28 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %25, i64 %27
  %29 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %28, i64 0, i32 0
  %30 = load %"class.aura::Window"*, %"class.aura::Window"** %29, align 8
  %31 = icmp ult %"class.aura::Window"* %30, %10
  %32 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %28, i64 1
  %33 = xor i64 %27, -1
  %34 = add i64 %26, %33
  %35 = select i1 %31, i64 %34, i64 %27
  %36 = select i1 %31, %"struct.std::__1::pair.495"* %32, %"struct.std::__1::pair.495"* %25
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %24

38:                                               ; preds = %24
  %39 = ptrtoint %"struct.std::__1::pair.495"* %36 to i64
  br label %40

40:                                               ; preds = %38, %12
  %41 = phi i64 [ %39, %38 ], [ %18, %12 ]
  %42 = phi %"struct.std::__1::pair.495"* [ %36, %38 ], [ %14, %12 ]
  %43 = icmp eq %"struct.std::__1::pair.495"* %42, %21
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %42, i64 0, i32 0
  %46 = load %"class.aura::Window"*, %"class.aura::Window"** %45, align 8
  %47 = icmp ult %"class.aura::Window"* %10, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %42, i64 1
  %50 = ptrtoint %"struct.std::__1::pair.495"* %49 to i64
  br label %51

51:                                               ; preds = %48, %44, %40
  %52 = phi i64 [ %50, %48 ], [ %41, %40 ], [ %41, %44 ]
  %53 = inttoptr i64 %52 to %"struct.std::__1::pair.495"*
  %54 = icmp eq %"struct.std::__1::pair.495"* %42, %53
  %55 = select i1 %54, %"struct.std::__1::pair.495"* %21, %"struct.std::__1::pair.495"* %42
  %56 = icmp eq %"struct.std::__1::pair.495"* %55, %21
  br i1 %56, label %66, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %55, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 4, !range !7
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = icmp eq i8 %9, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker34WindowMoveMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %64, label %65, label %66

65:                                               ; preds = %63, %61
  store i8 1, i8* %58, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %66

66:                                               ; preds = %8, %51, %57, %63, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %5 = bitcast %"class.base::RepeatingCallback.501"* %4 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowOcclusionTracker"* %5, %"class.aura::Window"* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.495"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.495"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %5
  %16 = sdiv exact i64 %12, 24
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.495"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %3
  %25 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.495"* %25, %"struct.std::__1::pair.495"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair.495"* %29 to i64
  br label %33

33:                                               ; preds = %31, %5
  %34 = phi i64 [ %32, %31 ], [ %11, %5 ]
  %35 = phi %"struct.std::__1::pair.495"* [ %29, %31 ], [ %7, %5 ]
  %36 = icmp eq %"struct.std::__1::pair.495"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 0, i32 0
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %40 = icmp ult %"class.aura::Window"* %3, %39
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair.495"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair.495"*
  %47 = icmp eq %"struct.std::__1::pair.495"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair.495"* %14, %"struct.std::__1::pair.495"* %35
  %49 = icmp eq %"struct.std::__1::pair.495"* %48, %14
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %48, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 4, !range !7
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker34WindowMoveMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  store i8 1, i8* %51, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %57

57:                                               ; preds = %2, %44, %50, %54, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.aura::Window"*, align 8
  store %"class.aura::Window"* %1, %"class.aura::Window"** %3, align 8
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0
  %5 = call i64 @_ZN4base8internal9flat_treeIPN4aura6WindowENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_22WindowOcclusionTracker13OcclusionDataEEENS6_9allocatorISD_EEEEE5eraseIS4_EEmRKT_(%"class.base::internal::flat_tree.109"* %4, %"class.aura::Window"** nonnull dereferenceable(8) %3)
  %6 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %7 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 1, i32 0, i32 1
  %10 = load %"class.aura::Window"**, %"class.aura::Window"*** %9, align 8
  %11 = icmp eq %"class.aura::Window"** %8, %10
  %12 = ptrtoint %"class.aura::Window"** %10 to i64
  br i1 %11, label %20, label %13

13:                                               ; preds = %2, %17
  %14 = phi %"class.aura::Window"** [ %18, %17 ], [ %8, %2 ]
  %15 = load %"class.aura::Window"*, %"class.aura::Window"** %14, align 8
  %16 = icmp eq %"class.aura::Window"* %15, %6
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %14, i64 1
  %19 = icmp eq %"class.aura::Window"** %18, %10
  br i1 %19, label %20, label %13

20:                                               ; preds = %17, %13, %2
  %21 = phi %"class.aura::Window"** [ %8, %2 ], [ %14, %13 ], [ %10, %17 ]
  %22 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %21, i64 1
  %23 = ptrtoint %"class.aura::Window"** %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.aura::Window"** %21 to i8*
  %29 = bitcast %"class.aura::Window"** %22 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #12
  br label %30

30:                                               ; preds = %20, %27
  %31 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %21, i64 %25
  store %"class.aura::Window"** %31, %"class.aura::Window"*** %9, align 8
  %32 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 11, i32 0
  %33 = load %"class.aura::WindowObserver"*, %"class.aura::WindowObserver"** %32, align 8
  call void @_ZN4aura6Window14RemoveObserverEPNS_14WindowObserverE(%"class.aura::Window"* %6, %"class.aura::WindowObserver"* %33) #12
  %34 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %35 = load %"class.aura::Window"**, %"class.aura::Window"*** %34, align 8
  %36 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %37 = bitcast %"class.aura::Window"*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = ptrtoint %"class.aura::Window"** %35 to i64
  %40 = sub i64 %38, %39
  %41 = icmp eq i64 %40, 0
  %42 = inttoptr i64 %38 to %"class.aura::Window"**
  br i1 %41, label %61, label %43

43:                                               ; preds = %30
  %44 = ashr exact i64 %40, 3
  %45 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  br label %46

46:                                               ; preds = %46, %43
  %47 = phi %"class.aura::Window"** [ %35, %43 ], [ %57, %46 ]
  %48 = phi i64 [ %44, %43 ], [ %56, %46 ]
  %49 = lshr i64 %48, 1
  %50 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %47, i64 %49
  %51 = load %"class.aura::Window"*, %"class.aura::Window"** %50, align 8
  %52 = icmp ult %"class.aura::Window"* %51, %45
  %53 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %50, i64 1
  %54 = xor i64 %49, -1
  %55 = add i64 %48, %54
  %56 = select i1 %52, i64 %55, i64 %49
  %57 = select i1 %52, %"class.aura::Window"** %53, %"class.aura::Window"** %47
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %59, label %46

59:                                               ; preds = %46
  %60 = ptrtoint %"class.aura::Window"** %57 to i64
  br label %61

61:                                               ; preds = %59, %30
  %62 = phi i64 [ %60, %59 ], [ %39, %30 ]
  %63 = phi %"class.aura::Window"** [ %57, %59 ], [ %35, %30 ]
  %64 = icmp eq %"class.aura::Window"** %63, %42
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = load %"class.aura::Window"*, %"class.aura::Window"** %3, align 8
  %67 = load %"class.aura::Window"*, %"class.aura::Window"** %63, align 8
  %68 = icmp ult %"class.aura::Window"* %66, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %63, i64 1
  %71 = ptrtoint %"class.aura::Window"** %70 to i64
  br label %72

72:                                               ; preds = %69, %65, %61
  %73 = phi i64 [ %71, %69 ], [ %62, %61 ], [ %62, %65 ]
  %74 = inttoptr i64 %73 to %"class.aura::Window"**
  %75 = icmp eq %"class.aura::Window"** %63, %74
  br i1 %75, label %85, label %76

76:                                               ; preds = %72
  %77 = sub i64 %38, %73
  %78 = ashr exact i64 %77, 3
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.aura::Window"** %63 to i8*
  %82 = inttoptr i64 %73 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %77, i1 false) #12
  br label %83

83:                                               ; preds = %80, %76
  %84 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %63, i64 %78
  store %"class.aura::Window"** %84, %"class.aura::Window"*** %36, align 8
  br label %85

85:                                               ; preds = %72, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base8internal9flat_treeIPN4aura6WindowENS0_8GetFirstENSt3__14lessIvEENS6_6vectorINS6_4pairIS4_NS2_22WindowOcclusionTracker13OcclusionDataEEENS6_9allocatorISD_EEEEE5eraseIS4_EEmRKT_(%"class.base::internal::flat_tree.109"*, %"class.aura::Window"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.109", %"class.base::internal::flat_tree.109"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.109", %"class.base::internal::flat_tree.109"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.112"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.112"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.112"*
  br i1 %10, label %31, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  %14 = load %"class.aura::Window"*, %"class.aura::Window"** %1, align 8
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi %"struct.std::__1::pair.112"* [ %4, %12 ], [ %27, %15 ]
  %17 = phi i64 [ %13, %12 ], [ %26, %15 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %16, i64 %18
  %20 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %19, i64 0, i32 0
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp ult %"class.aura::Window"* %21, %14
  %23 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %19, i64 1
  %24 = xor i64 %18, -1
  %25 = add i64 %17, %24
  %26 = select i1 %22, i64 %25, i64 %18
  %27 = select i1 %22, %"struct.std::__1::pair.112"* %23, %"struct.std::__1::pair.112"* %16
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = ptrtoint %"struct.std::__1::pair.112"* %27 to i64
  br label %31

31:                                               ; preds = %29, %2
  %32 = phi i64 [ %30, %29 ], [ %8, %2 ]
  %33 = phi %"struct.std::__1::pair.112"* [ %27, %29 ], [ %4, %2 ]
  %34 = icmp eq %"struct.std::__1::pair.112"* %33, %11
  br i1 %34, label %43, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %33, i64 0, i32 0
  %37 = load %"class.aura::Window"*, %"class.aura::Window"** %1, align 8
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %36, align 8
  %39 = icmp ult %"class.aura::Window"* %37, %38
  br i1 %39, label %43, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %33, i64 1
  %42 = ptrtoint %"struct.std::__1::pair.112"* %41 to i64
  br label %43

43:                                               ; preds = %31, %35, %40
  %44 = phi i64 [ %42, %40 ], [ %32, %31 ], [ %32, %35 ]
  %45 = inttoptr i64 %44 to %"struct.std::__1::pair.112"*
  %46 = ptrtoint %"struct.std::__1::pair.112"* %33 to i64
  %47 = sub i64 %44, %46
  %48 = sdiv exact i64 %47, 40
  %49 = icmp eq %"struct.std::__1::pair.112"* %33, %45
  br i1 %49, label %79, label %50

50:                                               ; preds = %43
  %51 = icmp eq %"struct.std::__1::pair.112"* %11, %45
  br i1 %51, label %69, label %52

52:                                               ; preds = %50, %52
  %53 = phi %"struct.std::__1::pair.112"* [ %65, %52 ], [ %33, %50 ]
  %54 = phi %"struct.std::__1::pair.112"* [ %64, %52 ], [ %45, %50 ]
  %55 = bitcast %"struct.std::__1::pair.112"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.std::__1::pair.112"* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %54, i64 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %53, i64 0, i32 1, i32 0
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %53, i64 0, i32 1, i32 1
  %62 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %54, i64 0, i32 1, i32 1
  %63 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %61, %class.SkRegion* dereferenceable(24) %62) #12
  %64 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %54, i64 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %53, i64 1
  %66 = icmp eq %"struct.std::__1::pair.112"* %64, %11
  br i1 %66, label %67, label %52

67:                                               ; preds = %52
  %68 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %5, align 8
  br label %69

69:                                               ; preds = %67, %50
  %70 = phi %"struct.std::__1::pair.112"* [ %11, %50 ], [ %68, %67 ]
  %71 = phi %"struct.std::__1::pair.112"* [ %33, %50 ], [ %65, %67 ]
  %72 = icmp eq %"struct.std::__1::pair.112"* %70, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %69, %73
  %74 = phi %"struct.std::__1::pair.112"* [ %75, %73 ], [ %70, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 -1, i32 1, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %76) #12
  %77 = icmp eq %"struct.std::__1::pair.112"* %75, %71
  br i1 %77, label %78, label %73

78:                                               ; preds = %73, %69
  store %"struct.std::__1::pair.112"* %71, %"struct.std::__1::pair.112"** %5, align 8
  br label %79

79:                                               ; preds = %43, %78
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %5 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.112"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.112"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.112"*
  br i1 %10, label %28, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair.112"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 0, i32 0
  %20 = load %"class.aura::Window"*, %"class.aura::Window"** %19, align 8
  %21 = icmp ult %"class.aura::Window"* %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair.112"* %22, %"struct.std::__1::pair.112"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14, %2
  %29 = phi %"struct.std::__1::pair.112"* [ %4, %2 ], [ %26, %14 ]
  %30 = icmp eq %"struct.std::__1::pair.112"* %29, %11
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %29, i64 0, i32 0
  %33 = load %"class.aura::Window"*, %"class.aura::Window"** %32, align 8
  %34 = icmp ugt %"class.aura::Window"* %33, %1
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN4aura22WindowOcclusionTracker24TrackedWindowAddedToRootEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br label %36

36:                                               ; preds = %31, %28, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  %5 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %3, i64 8
  %6 = bitcast %"class.base::RepeatingCallback.501"* %5 to %"struct.std::__1::pair.112"**
  %7 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %6, align 8
  %8 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %3, i64 9
  %9 = bitcast %"class.base::RepeatingCallback.501"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.112"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.112"*
  br i1 %13, label %31, label %15

15:                                               ; preds = %2
  %16 = sdiv exact i64 %12, 40
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.112"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.112"* %25, %"struct.std::__1::pair.112"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17, %2
  %32 = phi %"struct.std::__1::pair.112"* [ %7, %2 ], [ %29, %17 ]
  %33 = icmp eq %"struct.std::__1::pair.112"* %32, %14
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %32, i64 0, i32 0
  %36 = load %"class.aura::Window"*, %"class.aura::Window"** %35, align 8
  %37 = icmp ugt %"class.aura::Window"* %36, %1
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @_ZN4aura22WindowOcclusionTracker24TrackedWindowAddedToRootEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1) #12
  br label %39

39:                                               ; preds = %31, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.112"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.112"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.112"*
  br i1 %11, label %29, label %13

13:                                               ; preds = %3
  %14 = sdiv exact i64 %10, 40
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi %"struct.std::__1::pair.112"* [ %5, %13 ], [ %27, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %26, %15 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %16, i64 %18
  %20 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %19, i64 0, i32 0
  %21 = load %"class.aura::Window"*, %"class.aura::Window"** %20, align 8
  %22 = icmp ult %"class.aura::Window"* %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %19, i64 1
  %24 = xor i64 %18, -1
  %25 = add i64 %17, %24
  %26 = select i1 %22, i64 %25, i64 %18
  %27 = select i1 %22, %"struct.std::__1::pair.112"* %23, %"struct.std::__1::pair.112"* %16
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %15

29:                                               ; preds = %15, %3
  %30 = phi %"struct.std::__1::pair.112"* [ %5, %3 ], [ %27, %15 ]
  %31 = icmp eq %"struct.std::__1::pair.112"* %30, %12
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %30, i64 0, i32 0
  %34 = load %"class.aura::Window"*, %"class.aura::Window"** %33, align 8
  %35 = icmp ugt %"class.aura::Window"* %34, %1
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  tail call void @_ZN4aura22WindowOcclusionTracker28TrackedWindowRemovedFromRootEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  br label %37

37:                                               ; preds = %32, %29, %36
  tail call void @_ZN4aura22WindowOcclusionTracker38RemoveObserverFromWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*, %"class.aura::Window"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %5 = bitcast %"class.base::RepeatingCallback.501"* %4 to %"class.aura::WindowOcclusionTracker"*
  %6 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %4, i64 8
  %7 = bitcast %"class.base::RepeatingCallback.501"* %6 to %"struct.std::__1::pair.112"**
  %8 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %7, align 8
  %9 = getelementptr inbounds %"class.base::RepeatingCallback.501", %"class.base::RepeatingCallback.501"* %4, i64 9
  %10 = bitcast %"class.base::RepeatingCallback.501"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint %"struct.std::__1::pair.112"* %8 to i64
  %13 = sub i64 %11, %12
  %14 = icmp eq i64 %13, 0
  %15 = inttoptr i64 %11 to %"struct.std::__1::pair.112"*
  br i1 %14, label %32, label %16

16:                                               ; preds = %3
  %17 = sdiv exact i64 %13, 40
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi %"struct.std::__1::pair.112"* [ %8, %16 ], [ %30, %18 ]
  %20 = phi i64 [ %17, %16 ], [ %29, %18 ]
  %21 = lshr i64 %20, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %19, i64 %21
  %23 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %22, i64 0, i32 0
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %23, align 8
  %25 = icmp ult %"class.aura::Window"* %24, %1
  %26 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %22, i64 1
  %27 = xor i64 %21, -1
  %28 = add i64 %20, %27
  %29 = select i1 %25, i64 %28, i64 %21
  %30 = select i1 %25, %"struct.std::__1::pair.112"* %26, %"struct.std::__1::pair.112"* %19
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %18

32:                                               ; preds = %18, %3
  %33 = phi %"struct.std::__1::pair.112"* [ %8, %3 ], [ %30, %18 ]
  %34 = icmp eq %"struct.std::__1::pair.112"* %33, %15
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %33, i64 0, i32 0
  %37 = load %"class.aura::Window"*, %"class.aura::Window"** %36, align 8
  %38 = icmp ugt %"class.aura::Window"* %37, %1
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @_ZN4aura22WindowOcclusionTracker28TrackedWindowRemovedFromRootEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %5, %"class.aura::Window"* %1) #12
  br label %40

40:                                               ; preds = %32, %35, %39
  tail call void @_ZN4aura22WindowOcclusionTracker38RemoveObserverFromWindowAndDescendantsEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %5, %"class.aura::Window"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 1, i32 2
  %4 = load %"class.ui::Layer"*, %"class.ui::Layer"** %3, align 8
  %5 = tail call %"class.ui::LayerAnimator"* @_ZN2ui5Layer11GetAnimatorEv(%"class.ui::Layer"* %4) #12
  %6 = tail call zeroext i1 @_ZNK2ui13LayerAnimator24IsAnimatingOnePropertyOfEj(%"class.ui::LayerAnimator"* %5, i32 79) #12
  br i1 %6, label %109, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.aura::Window"**, %"class.aura::Window"*** %8, align 8
  %10 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %11 = bitcast %"class.aura::Window"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"class.aura::Window"** %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"class.aura::Window"**
  br i1 %15, label %34, label %17

17:                                               ; preds = %7
  %18 = ashr exact i64 %14, 3
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %"class.aura::Window"** [ %9, %17 ], [ %30, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %29, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %20, i64 %22
  %24 = load %"class.aura::Window"*, %"class.aura::Window"** %23, align 8
  %25 = icmp ult %"class.aura::Window"* %24, %1
  %26 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %23, i64 1
  %27 = xor i64 %22, -1
  %28 = add i64 %21, %27
  %29 = select i1 %25, i64 %28, i64 %22
  %30 = select i1 %25, %"class.aura::Window"** %26, %"class.aura::Window"** %20
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %19

32:                                               ; preds = %19
  %33 = ptrtoint %"class.aura::Window"** %30 to i64
  br label %34

34:                                               ; preds = %32, %7
  %35 = phi i64 [ %33, %32 ], [ %13, %7 ]
  %36 = phi %"class.aura::Window"** [ %30, %32 ], [ %9, %7 ]
  %37 = icmp eq %"class.aura::Window"** %36, %16
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %36, align 8
  %40 = icmp ugt %"class.aura::Window"* %39, %1
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %36, i64 1
  %43 = ptrtoint %"class.aura::Window"** %42 to i64
  br label %44

44:                                               ; preds = %41, %38, %34
  %45 = phi i64 [ %43, %41 ], [ %35, %34 ], [ %35, %38 ]
  %46 = inttoptr i64 %45 to %"class.aura::Window"**
  %47 = ptrtoint %"class.aura::Window"** %36 to i64
  %48 = icmp eq %"class.aura::Window"** %36, %46
  br i1 %48, label %58, label %49

49:                                               ; preds = %44
  %50 = sub i64 %12, %45
  %51 = ashr exact i64 %50, 3
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.aura::Window"** %36 to i8*
  %55 = inttoptr i64 %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 %50, i1 false) #12
  br label %56

56:                                               ; preds = %53, %49
  %57 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %36, i64 %51
  store %"class.aura::Window"** %57, %"class.aura::Window"*** %10, align 8
  br label %58

58:                                               ; preds = %44, %56
  %59 = icmp eq i64 %45, %47
  br i1 %59, label %109, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 0
  tail call void @_ZN2ui13LayerAnimator14RemoveObserverEPNS_22LayerAnimationObserverE(%"class.ui::LayerAnimator"* %5, %"class.ui::LayerAnimationObserver"* %61) #12
  %62 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %63 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %63, align 8
  %65 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast %"struct.std::__1::pair.495"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = ptrtoint %"struct.std::__1::pair.495"* %64 to i64
  %69 = sub i64 %67, %68
  %70 = icmp eq i64 %69, 0
  %71 = inttoptr i64 %67 to %"struct.std::__1::pair.495"*
  br i1 %70, label %90, label %72

72:                                               ; preds = %60
  %73 = sdiv exact i64 %69, 24
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi %"struct.std::__1::pair.495"* [ %64, %72 ], [ %86, %74 ]
  %76 = phi i64 [ %73, %72 ], [ %85, %74 ]
  %77 = lshr i64 %76, 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %75, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %78, i64 0, i32 0
  %80 = load %"class.aura::Window"*, %"class.aura::Window"** %79, align 8
  %81 = icmp ult %"class.aura::Window"* %80, %62
  %82 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %78, i64 1
  %83 = xor i64 %77, -1
  %84 = add i64 %76, %83
  %85 = select i1 %81, i64 %84, i64 %77
  %86 = select i1 %81, %"struct.std::__1::pair.495"* %82, %"struct.std::__1::pair.495"* %75
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %88, label %74

88:                                               ; preds = %74
  %89 = ptrtoint %"struct.std::__1::pair.495"* %86 to i64
  br label %90

90:                                               ; preds = %88, %60
  %91 = phi i64 [ %89, %88 ], [ %68, %60 ]
  %92 = phi %"struct.std::__1::pair.495"* [ %86, %88 ], [ %64, %60 ]
  %93 = icmp eq %"struct.std::__1::pair.495"* %92, %71
  br i1 %93, label %101, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %92, i64 0, i32 0
  %96 = load %"class.aura::Window"*, %"class.aura::Window"** %95, align 8
  %97 = icmp ugt %"class.aura::Window"* %96, %62
  br i1 %97, label %101, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %92, i64 1
  %100 = ptrtoint %"struct.std::__1::pair.495"* %99 to i64
  br label %101

101:                                              ; preds = %98, %94, %90
  %102 = phi i64 [ %100, %98 ], [ %91, %90 ], [ %91, %94 ]
  %103 = inttoptr i64 %102 to %"struct.std::__1::pair.495"*
  %104 = icmp eq %"struct.std::__1::pair.495"* %92, %103
  %105 = select i1 %104, %"struct.std::__1::pair.495"* %71, %"struct.std::__1::pair.495"* %92
  %106 = icmp eq %"struct.std::__1::pair.495"* %105, %71
  br i1 %106, label %109, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %105, i64 0, i32 1, i32 1
  store i8 1, i8* %108, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  br label %109

109:                                              ; preds = %101, %58, %107, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #12
  %4 = icmp eq %"class.aura::Window"* %3, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %6, align 8
  %8 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair.495"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair.495"*
  br i1 %13, label %33, label %15

15:                                               ; preds = %5
  %16 = sdiv exact i64 %12, 24
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair.495"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 0, i32 0
  %23 = load %"class.aura::Window"*, %"class.aura::Window"** %22, align 8
  %24 = icmp ult %"class.aura::Window"* %23, %3
  %25 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair.495"* %25, %"struct.std::__1::pair.495"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = ptrtoint %"struct.std::__1::pair.495"* %29 to i64
  br label %33

33:                                               ; preds = %31, %5
  %34 = phi i64 [ %32, %31 ], [ %11, %5 ]
  %35 = phi %"struct.std::__1::pair.495"* [ %29, %31 ], [ %7, %5 ]
  %36 = icmp eq %"struct.std::__1::pair.495"* %35, %14
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 0, i32 0
  %39 = load %"class.aura::Window"*, %"class.aura::Window"** %38, align 8
  %40 = icmp ult %"class.aura::Window"* %3, %39
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %35, i64 1
  %43 = ptrtoint %"struct.std::__1::pair.495"* %42 to i64
  br label %44

44:                                               ; preds = %41, %37, %33
  %45 = phi i64 [ %43, %41 ], [ %34, %33 ], [ %34, %37 ]
  %46 = inttoptr i64 %45 to %"struct.std::__1::pair.495"*
  %47 = icmp eq %"struct.std::__1::pair.495"* %35, %46
  %48 = select i1 %47, %"struct.std::__1::pair.495"* %14, %"struct.std::__1::pair.495"* %35
  %49 = icmp eq %"struct.std::__1::pair.495"* %48, %14
  br i1 %49, label %59, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %48, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 4, !range !7
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker43WindowOpacityChangeMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = tail call zeroext i1 @_ZNK4aura22WindowOcclusionTracker34WindowMoveMayAffectOcclusionStatesEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %0, %"class.aura::Window"* %1) #12
  br i1 %57, label %58, label %59

58:                                               ; preds = %56, %54
  store i8 1, i8* %51, align 4
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0) #12
  br label %59

59:                                               ; preds = %2, %44, %50, %56, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4aura22WindowOcclusionTracker40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 12
  %4 = bitcast %"class.base::RepeatingCallback.501"* %3 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowOcclusionTracker"* %4, %"class.aura::Window"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowTreeHost"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = load atomic i64, i64* @_ZZN4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %5 = inttoptr i64 %4 to %"class.base::HistogramBase"*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #12
  %9 = ptrtoint %"class.base::HistogramBase"* %8 to i64
  store atomic i64 %9, i64* @_ZZN4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.base::HistogramBase"* [ %5, %3 ], [ %8, %7 ]
  %12 = bitcast %"class.base::HistogramBase"* %11 to void (%"class.base::HistogramBase"*, i32)***
  %13 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, i64 6
  %15 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, align 8
  tail call void %15(%"class.base::HistogramBase"* %11, i32 %2) #12
  %16 = getelementptr inbounds %"class.aura::WindowTreeHost", %"class.aura::WindowTreeHost"* %1, i64 0, i32 4
  %17 = load %"class.aura::Window"*, %"class.aura::Window"** %16, align 8
  %18 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %18, align 8
  %20 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair.495"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"struct.std::__1::pair.495"* %19 to i64
  %24 = sub i64 %22, %23
  %25 = icmp eq i64 %24, 0
  %26 = inttoptr i64 %22 to %"struct.std::__1::pair.495"*
  br i1 %25, label %45, label %27

27:                                               ; preds = %10
  %28 = sdiv exact i64 %24, 24
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"struct.std::__1::pair.495"* [ %19, %27 ], [ %41, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %40, %29 ]
  %32 = lshr i64 %31, 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %30, i64 %32
  %34 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %33, i64 0, i32 0
  %35 = load %"class.aura::Window"*, %"class.aura::Window"** %34, align 8
  %36 = icmp ult %"class.aura::Window"* %35, %17
  %37 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %33, i64 1
  %38 = xor i64 %32, -1
  %39 = add i64 %31, %38
  %40 = select i1 %36, i64 %39, i64 %32
  %41 = select i1 %36, %"struct.std::__1::pair.495"* %37, %"struct.std::__1::pair.495"* %30
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %29

43:                                               ; preds = %29
  %44 = ptrtoint %"struct.std::__1::pair.495"* %41 to i64
  br label %45

45:                                               ; preds = %43, %10
  %46 = phi i64 [ %44, %43 ], [ %23, %10 ]
  %47 = phi %"struct.std::__1::pair.495"* [ %41, %43 ], [ %19, %10 ]
  %48 = icmp eq %"struct.std::__1::pair.495"* %47, %26
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %47, i64 0, i32 0
  %51 = load %"class.aura::Window"*, %"class.aura::Window"** %50, align 8
  %52 = icmp ult %"class.aura::Window"* %17, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %47, i64 1
  %55 = ptrtoint %"struct.std::__1::pair.495"* %54 to i64
  br label %56

56:                                               ; preds = %45, %49, %53
  %57 = phi i64 [ %55, %53 ], [ %46, %45 ], [ %46, %49 ]
  %58 = inttoptr i64 %57 to %"struct.std::__1::pair.495"*
  %59 = icmp eq %"struct.std::__1::pair.495"* %47, %58
  %60 = select i1 %59, %"struct.std::__1::pair.495"* %26, %"struct.std::__1::pair.495"* %47
  %61 = icmp eq %"struct.std::__1::pair.495"* %60, %26
  br i1 %61, label %69, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %60, i64 0, i32 1, i32 2
  store i32 %2, i32* %63, align 8
  %64 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %18, align 8
  %65 = load i64, i64* %21, align 8
  %66 = ptrtoint %"struct.std::__1::pair.495"* %64 to i64
  %67 = sub i64 %65, %66
  %68 = inttoptr i64 %65 to %"struct.std::__1::pair.495"*
  br label %69

69:                                               ; preds = %56, %62
  %70 = phi %"struct.std::__1::pair.495"* [ %26, %56 ], [ %68, %62 ]
  %71 = phi i64 [ %24, %56 ], [ %67, %62 ]
  %72 = phi i64 [ %23, %56 ], [ %66, %62 ]
  %73 = phi %"struct.std::__1::pair.495"* [ %19, %56 ], [ %64, %62 ]
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %93, label %75

75:                                               ; preds = %69
  %76 = sdiv exact i64 %71, 24
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi %"struct.std::__1::pair.495"* [ %73, %75 ], [ %89, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %88, %77 ]
  %80 = lshr i64 %79, 1
  %81 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %78, i64 %80
  %82 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %81, i64 0, i32 0
  %83 = load %"class.aura::Window"*, %"class.aura::Window"** %82, align 8
  %84 = icmp ult %"class.aura::Window"* %83, %17
  %85 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %81, i64 1
  %86 = xor i64 %80, -1
  %87 = add i64 %79, %86
  %88 = select i1 %84, i64 %87, i64 %80
  %89 = select i1 %84, %"struct.std::__1::pair.495"* %85, %"struct.std::__1::pair.495"* %78
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %91, label %77

91:                                               ; preds = %77
  %92 = ptrtoint %"struct.std::__1::pair.495"* %89 to i64
  br label %93

93:                                               ; preds = %91, %69
  %94 = phi i64 [ %92, %91 ], [ %72, %69 ]
  %95 = phi %"struct.std::__1::pair.495"* [ %89, %91 ], [ %73, %69 ]
  %96 = icmp eq %"struct.std::__1::pair.495"* %95, %70
  br i1 %96, label %104, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %95, i64 0, i32 0
  %99 = load %"class.aura::Window"*, %"class.aura::Window"** %98, align 8
  %100 = icmp ugt %"class.aura::Window"* %99, %17
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %95, i64 1
  %103 = ptrtoint %"struct.std::__1::pair.495"* %102 to i64
  br label %104

104:                                              ; preds = %101, %97, %93
  %105 = phi i64 [ %103, %101 ], [ %94, %93 ], [ %94, %97 ]
  %106 = inttoptr i64 %105 to %"struct.std::__1::pair.495"*
  %107 = icmp eq %"struct.std::__1::pair.495"* %95, %106
  %108 = select i1 %107, %"struct.std::__1::pair.495"* %70, %"struct.std::__1::pair.495"* %95
  %109 = icmp eq %"struct.std::__1::pair.495"* %108, %70
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %108, i64 0, i32 1, i32 1
  store i8 1, i8* %111, align 4
  br label %112

112:                                              ; preds = %104, %110
  tail call void @_ZN4aura22WindowOcclusionTracker21MaybeComputeOcclusionEv(%"class.aura::WindowOcclusionTracker"* %0)
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateE(%"class.aura::WindowOcclusionTracker"*, %"class.aura::WindowTreeHost"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::WindowOcclusionTracker", %"class.aura::WindowOcclusionTracker"* %0, i64 -1, i32 11, i32 1
  %5 = bitcast %"class.std::__1::vector.445"* %4 to %"class.aura::WindowOcclusionTracker"*
  tail call void @_ZN4aura22WindowOcclusionTracker23OnOcclusionStateChangedEPNS_14WindowTreeHostENS_6Window14OcclusionStateE(%"class.aura::WindowOcclusionTracker"* %5, %"class.aura::WindowTreeHost"* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowHierarchyChangingERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowHierarchyChangedERKNS0_21HierarchyChangeParamsE(%"class.aura::WindowObserver"*, %"struct.aura::WindowObserver::HierarchyChangeParams"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver13OnWindowAddedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWillRemoveWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver15OnWindowRemovedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowParentChangedEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowPropertyChangedEPNS_6WindowEPKvl(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowVisibilityChangingEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowVisibilityChangedEPNS_6WindowEb(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowBoundsChangedEPNS_6WindowERKN3gfx4RectES6_N2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver31OnWindowTargetTransformChangingEPNS_6WindowERKN3gfx9TransformE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnWindowTransformedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowOpacitySetEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver21OnWindowAlphaShapeSetEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver26OnWindowTransparentChangedEPNS_6WindowEN2ui20PropertyChangeReasonE(%"class.aura::WindowObserver"*, %"class.aura::Window"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver23OnWindowStackingChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnWindowDestroyedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver25OnWindowAddedToRootWindowEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver30OnWindowRemovingFromRootWindowEPNS_6WindowES2_(%"class.aura::WindowObserver"*, %"class.aura::Window"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver20OnWindowTitleChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver22OnWindowLayerRecreatedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver24OnWindowOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver19OnResizeLoopStartedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver17OnResizeLoopEndedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver40OnWindowOpaqueRegionsForOcclusionChangedEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2ui22LayerAnimationObserver23OnLayerAnimationStartedEPNS_22LayerAnimationSequenceE(%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22LayerAnimationObserver26OnLayerAnimationWillRepeatEPNS_22LayerAnimationSequenceE(%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2ui22LayerAnimationObserver41RequiresNotificationWhenAnimatorDestroyedEv(%"class.ui::LayerAnimationObserver"*) unnamed_addr #1

declare void @_ZN2ui22LayerAnimationObserver20OnAttachedToSequenceEPNS_22LayerAnimationSequenceE(%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

declare void @_ZN2ui22LayerAnimationObserver22OnDetachedFromSequenceEPNS_22LayerAnimationSequenceE(%"class.ui::LayerAnimationObserver"*, %"class.ui::LayerAnimationSequence"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22LayerAnimationObserver28OnAnimatorAttachedToTimelineEv(%"class.ui::LayerAnimationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22LayerAnimationObserver30OnAnimatorDetachedFromTimelineEv(%"class.ui::LayerAnimationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura14WindowObserver18OnWindowDestroyingEPNS_6WindowE(%"class.aura::WindowObserver"*, %"class.aura::Window"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura22WindowTreeHostObserver13OnHostResizedEPNS_14WindowTreeHostE(%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura22WindowTreeHostObserver19OnHostMovedInPixelsEPNS_14WindowTreeHostERKN3gfx5PointE(%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura22WindowTreeHostObserver22OnHostWorkspaceChangedEPNS_14WindowTreeHostE(%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura22WindowTreeHostObserver20OnHostCloseRequestedEPNS_14WindowTreeHostE(%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura22WindowTreeHostObserver29OnHostWillProcessBoundsChangeEPNS_14WindowTreeHostE(%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura22WindowTreeHostObserver28OnHostDidProcessBoundsChangeEPNS_14WindowTreeHostE(%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4aura22WindowTreeHostObserver40OnCompositingFrameSinksToThrottleUpdatedEPKNS_14WindowTreeHostERKN4base8internal9flat_treeIN3viz11FrameSinkIdENS4_8identityENSt3__14lessIvEENSA_6vectorIS8_NSA_9allocatorIS8_EEEEEE(%"class.aura::WindowTreeHostObserver"*, %"class.aura::WindowTreeHost"*, %"class.base::internal::flat_tree.926"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #1

declare { i64, i64 } @_ZNK2ui5Layer15GetTargetBoundsEv(%"class.ui::Layer"*) local_unnamed_addr #1

declare void @_ZNK2ui5Layer18GetTargetTransformEv(%"class.gfx::Transform"* sret, %"class.ui::Layer"*) local_unnamed_addr #1

declare void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN4aura12_GLOBAL__N_134ComputeClippedAndTransformedBoundsERKN3gfx4RectERKNS1_9TransformEPK7SkIRect(%"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68), %struct.SkIRect*) unnamed_addr #0 {
  %4 = alloca %"class.gfx::RectF", align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %9 = bitcast %"class.gfx::RectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 1
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %0, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  store float %16, float* %10, align 4
  store float %19, float* %11, align 4
  %24 = icmp sgt i32 %21, 0
  %25 = select i1 %24, i32 %21, i32 0
  %26 = sitofp i32 %25 to float
  store float %26, float* %12, align 4
  %27 = icmp sgt i32 %23, 0
  %28 = select i1 %27, i32 %23, i32 0
  %29 = sitofp i32 %28 to float
  store float %29, float* %13, align 4
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %1, %"class.gfx::RectF"* nonnull %4) #12
  %30 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #12
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %32 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #12
  %33 = call { i64, i64 } @_ZN3gfx14ToEnclosedRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %4) #12
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %35 = extractvalue { i64, i64 } %33, 0
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %37 = extractvalue { i64, i64 } %33, 1
  store i64 %37, i64* %36, align 8
  %38 = call { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %8) #12
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %40 = extractvalue { i64, i64 } %38, 0
  store i64 %40, i64* %39, align 8
  %41 = extractvalue { i64, i64 } %38, 1
  store i64 %41, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #12
  %42 = icmp eq %struct.SkIRect* %2, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %3
  %44 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %6, %struct.SkIRect* nonnull dereferenceable(16) %2) #12
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = load i64, i64* %39, align 8
  %47 = load i64, i64* %31, align 8
  br label %48

48:                                               ; preds = %3, %45, %43
  %49 = phi i64 [ 0, %43 ], [ %46, %45 ], [ %40, %3 ]
  %50 = phi i64 [ 0, %43 ], [ %47, %45 ], [ %41, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  %51 = insertvalue { i64, i64 } undef, i64 %49, 0
  %52 = insertvalue { i64, i64 } %51, i64 %50, 1
  ret { i64, i64 } %52
}

declare void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx14ToEnclosedRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #1

declare float @_ZNK2ui5Layer16GetTargetOpacityEv(%"class.ui::Layer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.112"* @_ZNSt3__16vectorINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker13OcclusionDataEEENS_9allocatorIS7_EEE7emplaceIJS7_EEENS_11__wrap_iterIPS7_EENSC_IPKS7_EEDpOT_(%"class.std::__1::vector.110"*, %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__temp_value", align 8
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = ptrtoint %"struct.std::__1::pair.112"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.112"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.112"* %11 to i64
  br i1 %12, label %14, label %93

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair.112"* %9, %1
  br i1 %15, label %16, label %28

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair.112"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.std::__1::pair.112"* %1 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %2, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %2, i64 0, i32 1, i32 1
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %23, %class.SkRegion* dereferenceable(24) %24) #12
  %25 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 1
  %26 = ptrtoint %"struct.std::__1::pair.112"* %25 to i64
  %27 = bitcast %"struct.std::__1::pair.112"** %8 to i64*
  store i64 %26, i64* %27, align 8
  br label %221

28:                                               ; preds = %14
  %29 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  %30 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %0, i64 0, i32 0, i32 2
  %31 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 1
  %32 = bitcast %"class.std::__1::allocator.478"** %31 to %"class.std::__1::__compressed_pair.475"**
  store %"class.std::__1::__compressed_pair.475"* %30, %"class.std::__1::__compressed_pair.475"** %32, align 8
  %33 = bitcast %"struct.std::__1::pair.112"* %2 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__temp_value"* %4 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 0, i32 0, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %2, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 0, i32 0, i64 16
  %41 = bitcast i8* %40 to %class.SkRegion*
  %42 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %2, i64 0, i32 1, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %41, %class.SkRegion* dereferenceable(24) %42) #12
  %43 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %8, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 1
  %45 = ptrtoint %"struct.std::__1::pair.112"* %43 to i64
  %46 = ptrtoint %"struct.std::__1::pair.112"* %44 to i64
  %47 = sub i64 %45, %46
  %48 = sdiv exact i64 %47, 40
  %49 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 %48
  %50 = bitcast %"struct.std::__1::pair.112"** %8 to i64*
  %51 = icmp ult %"struct.std::__1::pair.112"* %49, %43
  br i1 %51, label %72, label %54

52:                                               ; preds = %72
  %53 = ptrtoint %"struct.std::__1::pair.112"* %84 to i64
  br label %54

54:                                               ; preds = %52, %28
  %55 = phi i64 [ %53, %52 ], [ %45, %28 ]
  store i64 %55, i64* %50, align 8
  %56 = icmp eq i64 %47, 0
  br i1 %56, label %86, label %57

57:                                               ; preds = %54, %57
  %58 = phi %"struct.std::__1::pair.112"* [ %61, %57 ], [ %43, %54 ]
  %59 = phi %"struct.std::__1::pair.112"* [ %60, %57 ], [ %49, %54 ]
  %60 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %59, i64 -1
  %61 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %58, i64 -1
  %62 = bitcast %"struct.std::__1::pair.112"* %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.std::__1::pair.112"* %61 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %59, i64 -1, i32 1, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %58, i64 -1, i32 1, i32 0
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %58, i64 -1, i32 1, i32 1
  %69 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %59, i64 -1, i32 1, i32 1
  %70 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %68, %class.SkRegion* dereferenceable(24) %69) #12
  %71 = icmp eq %"struct.std::__1::pair.112"* %60, %1
  br i1 %71, label %86, label %57

72:                                               ; preds = %28, %72
  %73 = phi %"struct.std::__1::pair.112"* [ %84, %72 ], [ %43, %28 ]
  %74 = phi %"struct.std::__1::pair.112"* [ %83, %72 ], [ %49, %28 ]
  %75 = bitcast %"struct.std::__1::pair.112"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"struct.std::__1::pair.112"* %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %73, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 0, i32 1, i32 0
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %73, i64 0, i32 1, i32 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 0, i32 1, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %81, %class.SkRegion* dereferenceable(24) %82) #12
  %83 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 1
  %84 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %73, i64 1
  %85 = icmp ult %"struct.std::__1::pair.112"* %83, %43
  br i1 %85, label %72, label %52

86:                                               ; preds = %57, %54
  %87 = load i64, i64* %35, align 8
  %88 = bitcast %"struct.std::__1::pair.112"* %1 to i64*
  store i64 %87, i64* %88, align 8
  %89 = load i32, i32* %37, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 0, i32 1, i32 0
  store i32 %89, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 0, i32 1, i32 1
  %92 = call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %91, %class.SkRegion* dereferenceable(24) %41) #12
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %41) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #12
  br label %221

93:                                               ; preds = %3
  %94 = ptrtoint %"struct.std::__1::pair.112"* %9 to i64
  %95 = getelementptr inbounds %"class.std::__1::vector.110", %"class.std::__1::vector.110"* %0, i64 0, i32 0, i32 2
  %96 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #12
  %97 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %100 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %102 = bitcast %"struct.std::__1::pair.112"** %8 to i64*
  %103 = bitcast %"class.std::__1::vector.110"* %0 to i64*
  %104 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 40, i1 false)
  %105 = load i64, i64* %103, align 8
  %106 = sub i64 %94, %105
  %107 = sdiv exact i64 %106, 40
  %108 = add nsw i64 %107, 1
  %109 = icmp ugt i64 %108, 461168601842738790
  br i1 %109, label %110, label %112

110:                                              ; preds = %93
  %111 = bitcast %"class.std::__1::vector.110"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %111) #14
  unreachable

112:                                              ; preds = %93
  %113 = bitcast %"struct.std::__1::pair.112"** %10 to i64*
  %114 = sub i64 %13, %105
  %115 = sdiv exact i64 %114, 40
  %116 = icmp ult i64 %115, 230584300921369395
  br i1 %116, label %121, label %117

117:                                              ; preds = %112
  %118 = sub i64 %6, %105
  %119 = sdiv exact i64 %118, 40
  store %"struct.std::__1::pair.112"* null, %"struct.std::__1::pair.112"** %100, align 8
  %120 = bitcast %"class.std::__1::allocator.478"** %101 to %"class.std::__1::__compressed_pair.475"**
  store %"class.std::__1::__compressed_pair.475"* %95, %"class.std::__1::__compressed_pair.475"** %120, align 8
  br label %129

121:                                              ; preds = %112
  %122 = shl nsw i64 %115, 1
  %123 = icmp ult i64 %122, %108
  %124 = select i1 %123, i64 %108, i64 %122
  %125 = sub i64 %6, %105
  %126 = sdiv exact i64 %125, 40
  store %"struct.std::__1::pair.112"* null, %"struct.std::__1::pair.112"** %100, align 8
  %127 = bitcast %"class.std::__1::allocator.478"** %101 to %"class.std::__1::__compressed_pair.475"**
  store %"class.std::__1::__compressed_pair.475"* %95, %"class.std::__1::__compressed_pair.475"** %127, align 8
  %128 = icmp eq i64 %124, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %121, %117
  %130 = phi i64 [ %119, %117 ], [ %126, %121 ]
  %131 = phi i64 [ 461168601842738790, %117 ], [ %124, %121 ]
  %132 = mul i64 %131, 40
  %133 = tail call i8* @_Znwm(i64 %132) #13
  %134 = bitcast i8* %133 to %"struct.std::__1::pair.112"*
  br label %135

135:                                              ; preds = %121, %129
  %136 = phi i64 [ %130, %129 ], [ %126, %121 ]
  %137 = phi i64 [ %131, %129 ], [ 0, %121 ]
  %138 = phi %"struct.std::__1::pair.112"* [ %134, %129 ], [ null, %121 ]
  store %"struct.std::__1::pair.112"* %138, %"struct.std::__1::pair.112"** %97, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %138, i64 %136
  store %"struct.std::__1::pair.112"* %139, %"struct.std::__1::pair.112"** %99, align 8
  store %"struct.std::__1::pair.112"* %139, %"struct.std::__1::pair.112"** %98, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %138, i64 %137
  store %"struct.std::__1::pair.112"* %140, %"struct.std::__1::pair.112"** %100, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker13OcclusionDataEEERNS_9allocatorIS7_EEE12emplace_backIJS7_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"struct.std::__1::pair.112"* dereferenceable(40) %2)
  %141 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %98, align 8
  %142 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %7, align 8
  %143 = icmp eq %"struct.std::__1::pair.112"* %142, %1
  br i1 %143, label %160, label %144

144:                                              ; preds = %135, %144
  %145 = phi %"struct.std::__1::pair.112"* [ %158, %144 ], [ %141, %135 ]
  %146 = phi %"struct.std::__1::pair.112"* [ %148, %144 ], [ %1, %135 ]
  %147 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %145, i64 -1
  %148 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %146, i64 -1
  %149 = bitcast %"struct.std::__1::pair.112"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.std::__1::pair.112"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %145, i64 -1, i32 1, i32 0
  %153 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %146, i64 -1, i32 1, i32 0
  %154 = load i32, i32* %153, align 8
  store i32 %154, i32* %152, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %145, i64 -1, i32 1, i32 1
  %156 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %146, i64 -1, i32 1, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %155, %class.SkRegion* dereferenceable(24) %156) #12
  %157 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %98, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %157, i64 -1
  store %"struct.std::__1::pair.112"* %158, %"struct.std::__1::pair.112"** %98, align 8
  %159 = icmp eq %"struct.std::__1::pair.112"* %148, %142
  br i1 %159, label %160, label %144

160:                                              ; preds = %144, %135
  %161 = phi %"struct.std::__1::pair.112"* [ %141, %135 ], [ %158, %144 ]
  %162 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %8, align 8
  %163 = icmp eq %"struct.std::__1::pair.112"* %162, %1
  br i1 %163, label %164, label %170

164:                                              ; preds = %160
  %165 = ptrtoint %"struct.std::__1::pair.112"* %162 to i64
  %166 = ptrtoint %"struct.std::__1::pair.112"* %161 to i64
  %167 = bitcast %"struct.std::__1::pair.112"** %98 to i64*
  %168 = bitcast %"struct.std::__1::pair.112"** %99 to i64*
  %169 = load i64, i64* %168, align 8
  br label %193

170:                                              ; preds = %160
  %171 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %99, align 8
  br label %172

172:                                              ; preds = %172, %170
  %173 = phi %"struct.std::__1::pair.112"* [ %185, %172 ], [ %171, %170 ]
  %174 = phi %"struct.std::__1::pair.112"* [ %183, %172 ], [ %1, %170 ]
  %175 = bitcast %"struct.std::__1::pair.112"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"struct.std::__1::pair.112"* %173 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %173, i64 0, i32 1, i32 0
  %179 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %174, i64 0, i32 1, i32 0
  %180 = load i32, i32* %179, align 8
  store i32 %180, i32* %178, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %173, i64 0, i32 1, i32 1
  %182 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %174, i64 0, i32 1, i32 1
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %181, %class.SkRegion* dereferenceable(24) %182) #12
  %183 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %174, i64 1
  %184 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %99, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %184, i64 1
  store %"struct.std::__1::pair.112"* %185, %"struct.std::__1::pair.112"** %99, align 8
  %186 = icmp eq %"struct.std::__1::pair.112"* %183, %162
  br i1 %186, label %187, label %172

187:                                              ; preds = %172
  %188 = ptrtoint %"struct.std::__1::pair.112"* %185 to i64
  %189 = bitcast %"struct.std::__1::pair.112"** %98 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = load i64, i64* %102, align 8
  %192 = bitcast %"struct.std::__1::pair.112"** %99 to i64*
  br label %193

193:                                              ; preds = %164, %187
  %194 = phi i64* [ %168, %164 ], [ %192, %187 ]
  %195 = phi i64 [ %169, %164 ], [ %188, %187 ]
  %196 = phi i64 [ %165, %164 ], [ %191, %187 ]
  %197 = phi i64* [ %167, %164 ], [ %189, %187 ]
  %198 = phi i64 [ %166, %164 ], [ %190, %187 ]
  %199 = load i64, i64* %103, align 8
  store i64 %198, i64* %103, align 8
  store i64 %199, i64* %197, align 8
  store i64 %195, i64* %102, align 8
  store i64 %196, i64* %194, align 8
  %200 = load i64, i64* %113, align 8
  %201 = bitcast %"struct.std::__1::pair.112"** %100 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %113, align 8
  store i64 %200, i64* %201, align 8
  %203 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %199, i64* %203, align 8
  %204 = inttoptr i64 %199 to %"struct.std::__1::pair.112"*
  %205 = inttoptr i64 %196 to %"struct.std::__1::pair.112"*
  %206 = icmp eq %"struct.std::__1::pair.112"* %205, %204
  br i1 %206, label %215, label %207

207:                                              ; preds = %193, %207
  %208 = phi %"struct.std::__1::pair.112"* [ %211, %207 ], [ %205, %193 ]
  %209 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %208, i64 -1
  store %"struct.std::__1::pair.112"* %209, %"struct.std::__1::pair.112"** %99, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %208, i64 -1, i32 1, i32 1
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %210) #12
  %211 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %99, align 8
  %212 = icmp eq %"struct.std::__1::pair.112"* %211, %204
  br i1 %212, label %213, label %207

213:                                              ; preds = %207
  %214 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %97, align 8
  br label %215

215:                                              ; preds = %213, %193
  %216 = phi %"struct.std::__1::pair.112"* [ %214, %213 ], [ %204, %193 ]
  %217 = icmp eq %"struct.std::__1::pair.112"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %215
  %219 = bitcast %"struct.std::__1::pair.112"* %216 to i8*
  call void @_ZdlPv(i8* %219) #13
  br label %220

220:                                              ; preds = %215, %218
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #12
  br label %221

221:                                              ; preds = %16, %86, %220
  %222 = phi %"struct.std::__1::pair.112"* [ %1, %16 ], [ %1, %86 ], [ %141, %220 ]
  ret %"struct.std::__1::pair.112"* %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker13OcclusionDataEEERNS_9allocatorIS7_EEE12emplace_backIJS7_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.112"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.112"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.112"* %6 to i64
  br i1 %7, label %9, label %109

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %12, align 8
  %14 = icmp ugt %"struct.std::__1::pair.112"* %11, %13
  %15 = ptrtoint %"struct.std::__1::pair.112"* %13 to i64
  br i1 %14, label %16, label %45

16:                                               ; preds = %9
  %17 = ptrtoint %"struct.std::__1::pair.112"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = sdiv exact i64 %18, 40
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %11, i64 %21
  %23 = icmp eq %"struct.std::__1::pair.112"* %11, %4
  br i1 %23, label %41, label %24

24:                                               ; preds = %16, %24
  %25 = phi %"struct.std::__1::pair.112"* [ %37, %24 ], [ %22, %16 ]
  %26 = phi %"struct.std::__1::pair.112"* [ %36, %24 ], [ %11, %16 ]
  %27 = bitcast %"struct.std::__1::pair.112"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::pair.112"* %25 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %26, i64 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %25, i64 0, i32 1, i32 0
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %25, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %26, i64 0, i32 1, i32 1
  %35 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %33, %class.SkRegion* dereferenceable(24) %34) #12
  %36 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %26, i64 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %25, i64 1
  %38 = icmp eq %"struct.std::__1::pair.112"* %36, %4
  br i1 %38, label %39, label %24

39:                                               ; preds = %24
  %40 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %10, align 8
  br label %41

41:                                               ; preds = %39, %16
  %42 = phi %"struct.std::__1::pair.112"* [ %4, %16 ], [ %40, %39 ]
  %43 = phi %"struct.std::__1::pair.112"* [ %22, %16 ], [ %37, %39 ]
  store %"struct.std::__1::pair.112"* %43, %"struct.std::__1::pair.112"** %3, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %42, i64 %21
  store %"struct.std::__1::pair.112"* %44, %"struct.std::__1::pair.112"** %10, align 8
  br label %109

45:                                               ; preds = %9
  %46 = bitcast %"struct.std::__1::pair.112"** %5 to i64*
  %47 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %48 = sub i64 %8, %15
  %49 = sdiv exact i64 %48, 40
  %50 = shl nsw i64 %49, 1
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 461168601842738790
  br i1 %53, label %54, label %55

54:                                               ; preds = %45
  tail call void @abort() #14
  unreachable

55:                                               ; preds = %45
  %56 = lshr i64 %52, 2
  %57 = mul i64 %52, 40
  %58 = tail call i8* @_Znwm(i64 %57) #13
  %59 = bitcast i8* %58 to %"struct.std::__1::pair.112"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %59, i64 %56
  %62 = ptrtoint %"struct.std::__1::pair.112"* %61 to i64
  %63 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %59, i64 %52
  %64 = ptrtoint %"struct.std::__1::pair.112"* %63 to i64
  %65 = ptrtoint %"struct.std::__1::pair.112"* %11 to i64
  %66 = ptrtoint %"struct.std::__1::pair.112"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = sdiv exact i64 %67, 40
  %69 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %92, label %71

71:                                               ; preds = %55, %71
  %72 = phi %"struct.std::__1::pair.112"* [ %83, %71 ], [ %61, %55 ]
  %73 = phi i64 [ %84, %71 ], [ %62, %55 ]
  %74 = phi %"struct.std::__1::pair.112"* [ %85, %71 ], [ %11, %55 ]
  %75 = bitcast %"struct.std::__1::pair.112"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = inttoptr i64 %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %72, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 0, i32 1, i32 0
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %72, i64 0, i32 1, i32 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 0, i32 1, i32 1
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %81, %class.SkRegion* dereferenceable(24) %82) #12
  %83 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %72, i64 1
  %84 = ptrtoint %"struct.std::__1::pair.112"* %83 to i64
  %85 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %74, i64 1
  %86 = icmp eq %"struct.std::__1::pair.112"* %69, %83
  br i1 %86, label %87, label %71

87:                                               ; preds = %71
  %88 = ptrtoint %"struct.std::__1::pair.112"* %69 to i64
  %89 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %12, align 8
  %90 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %10, align 8
  %91 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  br label %92

92:                                               ; preds = %55, %87
  %93 = phi %"struct.std::__1::pair.112"* [ %91, %87 ], [ %4, %55 ]
  %94 = phi %"struct.std::__1::pair.112"* [ %90, %87 ], [ %11, %55 ]
  %95 = phi %"struct.std::__1::pair.112"* [ %89, %87 ], [ %13, %55 ]
  %96 = phi i64 [ %88, %87 ], [ %62, %55 ]
  store i64 %60, i64* %47, align 8
  %97 = bitcast %"struct.std::__1::pair.112"** %10 to i64*
  store i64 %62, i64* %97, align 8
  %98 = bitcast %"struct.std::__1::pair.112"** %3 to i64*
  store i64 %96, i64* %98, align 8
  store i64 %64, i64* %46, align 8
  %99 = icmp eq %"struct.std::__1::pair.112"* %93, %94
  br i1 %99, label %105, label %100

100:                                              ; preds = %92, %100
  %101 = phi %"struct.std::__1::pair.112"* [ %102, %100 ], [ %93, %92 ]
  %102 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %101, i64 -1
  %103 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %101, i64 -1, i32 1, i32 1
  tail call void @_ZN8SkRegionD1Ev(%class.SkRegion* %103) #12
  %104 = icmp eq %"struct.std::__1::pair.112"* %102, %94
  br i1 %104, label %105, label %100

105:                                              ; preds = %100, %92
  %106 = icmp eq %"struct.std::__1::pair.112"* %95, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = bitcast %"struct.std::__1::pair.112"* %95 to i8*
  tail call void @_ZdlPv(i8* %108) #13
  br label %109

109:                                              ; preds = %107, %105, %41, %2
  %110 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %111 = bitcast %"struct.std::__1::pair.112"* %1 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"struct.std::__1::pair.112"* %110 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %110, i64 0, i32 1, i32 0
  %115 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 0, i32 1, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %110, i64 0, i32 1, i32 1
  %118 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %1, i64 0, i32 1, i32 1
  tail call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* %117, %class.SkRegion* dereferenceable(24) %118) #12
  %119 = load %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"** %3, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.112", %"struct.std::__1::pair.112"* %119, i64 1
  store %"struct.std::__1::pair.112"* %120, %"struct.std::__1::pair.112"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.aura::Window"** @_ZNSt3__16vectorIPN4aura6WindowENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.445"*, %"class.aura::Window"**, %"class.aura::Window"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.aura::Window"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.952", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.445", %"class.std::__1::vector.445"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.445", %"class.std::__1::vector.445"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.445", %"class.std::__1::vector.445"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.aura::Window"**, %"class.aura::Window"*** %9, align 8
  %11 = icmp ult %"class.aura::Window"** %8, %10
  %12 = ptrtoint %"class.aura::Window"** %8 to i64
  %13 = ptrtoint %"class.aura::Window"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.aura::Window"** %8, %1
  %16 = bitcast %"class.aura::Window"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.aura::Window"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %1, i64 1
  %21 = ptrtoint %"class.aura::Window"** %20 to i64
  %22 = bitcast %"class.aura::Window"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %1, i64 1
  %25 = ptrtoint %"class.aura::Window"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %1, i64 %27
  %29 = bitcast %"class.aura::Window"*** %7 to i64*
  %30 = icmp ult %"class.aura::Window"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %32
  %34 = bitcast %"class.aura::Window"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.aura::Window"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.aura::Window"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %45
  %47 = bitcast %"class.aura::Window"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %1, i64 %55
  %57 = icmp ult %"class.aura::Window"** %8, %56
  %58 = icmp ult %"class.aura::Window"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %61
  %63 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %72
  %75 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %28, i64 %72
  %76 = bitcast %"class.aura::Window"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !11
  %78 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %75, i64 2
  %79 = bitcast %"class.aura::Window"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !11
  %81 = bitcast %"class.aura::Window"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !14, !noalias !11
  %82 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %74, i64 2
  %83 = bitcast %"class.aura::Window"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !14, !noalias !11
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %84
  %86 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %28, i64 %84
  %87 = bitcast %"class.aura::Window"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !11
  %89 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %86, i64 2
  %90 = bitcast %"class.aura::Window"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !11
  %92 = bitcast %"class.aura::Window"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !14, !noalias !11
  %93 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %85, i64 2
  %94 = bitcast %"class.aura::Window"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !14, !noalias !11
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %95
  %97 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %28, i64 %95
  %98 = bitcast %"class.aura::Window"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !11
  %100 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %97, i64 2
  %101 = bitcast %"class.aura::Window"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !11
  %103 = bitcast %"class.aura::Window"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !14, !noalias !11
  %104 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %96, i64 2
  %105 = bitcast %"class.aura::Window"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !14, !noalias !11
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %106
  %108 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %28, i64 %106
  %109 = bitcast %"class.aura::Window"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !11
  %111 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %108, i64 2
  %112 = bitcast %"class.aura::Window"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !11
  %114 = bitcast %"class.aura::Window"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !14, !noalias !11
  %115 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %107, i64 2
  %116 = bitcast %"class.aura::Window"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !14, !noalias !11
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !16

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %124
  %127 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %28, i64 %124
  %128 = bitcast %"class.aura::Window"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !11
  %130 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %127, i64 2
  %131 = bitcast %"class.aura::Window"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !11
  %133 = bitcast %"class.aura::Window"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !14, !noalias !11
  %134 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %126, i64 2
  %135 = bitcast %"class.aura::Window"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !14, !noalias !11
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !18

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.aura::Window"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.aura::Window"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %8, i64 %148
  %150 = bitcast %"class.aura::Window"** %149 to i8*
  %151 = bitcast %"class.aura::Window"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #12
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.aura::Window"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.aura::Window"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.aura::Window"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.aura::Window"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %154, i64 1
  %159 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %153, i64 1
  %160 = icmp ult %"class.aura::Window"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !19

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.aura::Window"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.445", %"class.std::__1::vector.445"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer.952"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #12
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.aura::Window"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.445"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer.952"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.445"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #14
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.aura::Window"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.aura::Window"** null, %"class.aura::Window"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.450"** %170 to %"class.std::__1::__compressed_pair.447"**
  store %"class.std::__1::__compressed_pair.447"* %164, %"class.std::__1::__compressed_pair.447"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.aura::Window"** null, %"class.aura::Window"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.450"** %170 to %"class.std::__1::__compressed_pair.447"**
  store %"class.std::__1::__compressed_pair.447"* %164, %"class.std::__1::__compressed_pair.447"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #14
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #13
  %206 = bitcast i8* %205 to %"class.aura::Window"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.aura::Window"** [ %206, %201 ], [ null, %190 ]
  store %"class.aura::Window"** %210, %"class.aura::Window"*** %166, align 8
  %211 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %210, i64 %208
  store %"class.aura::Window"** %211, %"class.aura::Window"*** %168, align 8
  store %"class.aura::Window"** %211, %"class.aura::Window"*** %167, align 8
  %212 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %210, i64 %209
  store %"class.aura::Window"** %212, %"class.aura::Window"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN4aura6WindowERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.952"* nonnull %5, %"class.aura::Window"** dereferenceable(8) %2)
  %213 = load %"class.aura::Window"**, %"class.aura::Window"*** %167, align 8
  %214 = load %"class.aura::Window"**, %"class.aura::Window"*** %6, align 8
  %215 = ptrtoint %"class.aura::Window"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %213, i64 %218
  store %"class.aura::Window"** %219, %"class.aura::Window"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.aura::Window"** %219 to i8*
  %223 = bitcast %"class.aura::Window"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #12
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.aura::Window"**, %"class.aura::Window"*** %7, align 8
  %226 = icmp eq %"class.aura::Window"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.aura::Window"** %225 to i64
  %229 = bitcast %"class.aura::Window"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.aura::Window"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %225, i64 -1
  %235 = ptrtoint %"class.aura::Window"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.aura::Window"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.aura::Window"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %243, i64 1
  %248 = load %"class.aura::Window"**, %"class.aura::Window"*** %168, align 8
  %249 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %248, i64 1
  store %"class.aura::Window"** %249, %"class.aura::Window"*** %168, align 8
  %250 = bitcast %"class.aura::Window"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !20

253:                                              ; preds = %241
  %254 = bitcast %"class.aura::Window"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.aura::Window"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.aura::Window"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.aura::Window"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.aura::Window"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %262, i64 1
  %266 = load %"class.aura::Window"**, %"class.aura::Window"*** %168, align 8
  %267 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %266, i64 1
  store %"class.aura::Window"** %267, %"class.aura::Window"*** %168, align 8
  %268 = bitcast %"class.aura::Window"** %267 to i64*
  %269 = bitcast %"class.aura::Window"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %262, i64 2
  %272 = load %"class.aura::Window"**, %"class.aura::Window"*** %168, align 8
  %273 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %272, i64 1
  store %"class.aura::Window"** %273, %"class.aura::Window"*** %168, align 8
  %274 = bitcast %"class.aura::Window"** %273 to i64*
  %275 = bitcast %"class.aura::Window"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %262, i64 3
  %278 = load %"class.aura::Window"**, %"class.aura::Window"*** %168, align 8
  %279 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %278, i64 1
  store %"class.aura::Window"** %279, %"class.aura::Window"*** %168, align 8
  %280 = bitcast %"class.aura::Window"** %279 to i64*
  %281 = bitcast %"class.aura::Window"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %262, i64 4
  %284 = load %"class.aura::Window"**, %"class.aura::Window"*** %168, align 8
  %285 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %284, i64 1
  store %"class.aura::Window"** %285, %"class.aura::Window"*** %168, align 8
  %286 = icmp eq %"class.aura::Window"** %283, %225
  %287 = bitcast %"class.aura::Window"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.aura::Window"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.aura::Window"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.aura::Window"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.aura::Window"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.aura::Window"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer.952"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.aura::Window"**
  %305 = inttoptr i64 %296 to %"class.aura::Window"**
  %306 = icmp eq %"class.aura::Window"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %305, i64 -1
  %309 = ptrtoint %"class.aura::Window"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.aura::Window"*, %"class.aura::Window"** %305, i64 %312
  store %"class.aura::Window"** %313, %"class.aura::Window"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #13
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #12
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.aura::Window"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.aura::Window"** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4aura6WindowERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.952"*, %"class.aura::Window"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %0, i64 0, i32 2
  %4 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.aura::Window"**, %"class.aura::Window"*** %5, align 8
  %7 = icmp eq %"class.aura::Window"** %4, %6
  %8 = ptrtoint %"class.aura::Window"** %6 to i64
  %9 = bitcast %"class.aura::Window"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %0, i64 0, i32 1
  %12 = load %"class.aura::Window"**, %"class.aura::Window"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.952", %"struct.std::__1::__split_buffer.952"* %0, i64 0, i32 0
  %14 = load %"class.aura::Window"**, %"class.aura::Window"*** %13, align 8
  %15 = icmp ugt %"class.aura::Window"** %12, %14
  %16 = ptrtoint %"class.aura::Window"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.aura::Window"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %12, i64 %22
  %24 = ptrtoint %"class.aura::Window"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.aura::Window"** %23 to i8*
  %30 = bitcast %"class.aura::Window"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #12
  %31 = load %"class.aura::Window"**, %"class.aura::Window"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.aura::Window"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %23, i64 %26
  store %"class.aura::Window"** %34, %"class.aura::Window"*** %3, align 8
  %35 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %33, i64 %22
  store %"class.aura::Window"** %35, %"class.aura::Window"*** %11, align 8
  %36 = bitcast %"class.aura::Window"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.aura::Window"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.952"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.aura::Window"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %50, i64 %47
  %53 = ptrtoint %"class.aura::Window"** %52 to i64
  %54 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %50, i64 %43
  %55 = ptrtoint %"class.aura::Window"** %54 to i64
  %56 = ptrtoint %"class.aura::Window"** %12 to i64
  %57 = ptrtoint %"class.aura::Window"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.aura::Window"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.aura::Window"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.aura::Window"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %69, i64 1
  %77 = ptrtoint %"class.aura::Window"** %76 to i64
  %78 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !21

81:                                               ; preds = %68
  %82 = ptrtoint %"class.aura::Window"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.aura::Window"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.aura::Window"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.aura::Window"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.aura::Window"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.aura::Window"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 1
  %96 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 1
  %97 = bitcast %"class.aura::Window"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.aura::Window"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 2
  %101 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 2
  %102 = bitcast %"class.aura::Window"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.aura::Window"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 3
  %106 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 3
  %107 = bitcast %"class.aura::Window"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.aura::Window"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 4
  %111 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 4
  %112 = bitcast %"class.aura::Window"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.aura::Window"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 5
  %116 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 5
  %117 = bitcast %"class.aura::Window"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.aura::Window"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 6
  %121 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 6
  %122 = bitcast %"class.aura::Window"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.aura::Window"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 7
  %126 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 7
  %127 = bitcast %"class.aura::Window"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.aura::Window"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %89, i64 8
  %131 = ptrtoint %"class.aura::Window"** %130 to i64
  %132 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %91, i64 8
  %133 = icmp eq %"class.aura::Window"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.aura::Window"** %60 to i64
  %136 = load %"class.aura::Window"**, %"class.aura::Window"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.aura::Window"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.aura::Window"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.aura::Window"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.aura::Window"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.aura::Window"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast %"class.aura::Window"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.aura::Window"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.aura::Window"**, %"class.aura::Window"*** %3, align 8
  %153 = getelementptr inbounds %"class.aura::Window"*, %"class.aura::Window"** %152, i64 1
  store %"class.aura::Window"** %153, %"class.aura::Window"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.495"* @_ZNSt3__16vectorINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker15RootWindowStateEEENS_9allocatorIS7_EEE7emplaceIJRKS4_S6_EEENS_11__wrap_iterIPS7_EENSE_IPKS7_EEDpOT_(%"class.std::__1::vector.493"*, %"struct.std::__1::pair.495"*, %"class.aura::Window"** dereferenceable(8), %"struct.aura::WindowOcclusionTracker::RootWindowState"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__split_buffer.964", align 8
  %6 = ptrtoint %"struct.std::__1::pair.495"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.495"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.495"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.495"* %11 to i64
  br i1 %12, label %15, label %103

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.495"* %9, %1
  %17 = bitcast %"class.aura::Window"** %2 to i64*
  %18 = load i64, i64* %17, align 8
  br i1 %16, label %19, label %27

19:                                               ; preds = %15
  %20 = bitcast %"struct.std::__1::pair.495"* %1 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %1, i64 0, i32 1
  %22 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %21 to i8*
  %23 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 4 %23, i64 12, i1 false) #12
  %24 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %1, i64 1
  %25 = ptrtoint %"struct.std::__1::pair.495"* %24 to i64
  %26 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  store i64 %25, i64* %26, align 8
  br label %209

27:                                               ; preds = %15
  %28 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %3 to i8*
  %29 = load i8, i8* %28, align 4
  %30 = getelementptr inbounds i8, i8* %28, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %28, i64 2
  %33 = load i8, i8* %32, align 2
  %34 = getelementptr inbounds i8, i8* %28, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::RootWindowState", %"struct.aura::WindowOcclusionTracker::RootWindowState"* %3, i64 0, i32 1
  %37 = load i8, i8* %36, align 4
  %38 = getelementptr inbounds i8, i8* %28, i64 5
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %28, i64 6
  %41 = load i8, i8* %40, align 2
  %42 = getelementptr inbounds i8, i8* %28, i64 7
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds %"struct.aura::WindowOcclusionTracker::RootWindowState", %"struct.aura::WindowOcclusionTracker::RootWindowState"* %3, i64 0, i32 2
  %45 = bitcast i32* %44 to i8*
  %46 = load i8, i8* %45, align 4
  %47 = getelementptr inbounds i8, i8* %28, i64 9
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds i8, i8* %28, i64 10
  %50 = load i8, i8* %49, align 2
  %51 = getelementptr inbounds i8, i8* %28, i64 11
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %1, i64 1
  %54 = ptrtoint %"struct.std::__1::pair.495"* %53 to i64
  %55 = sub i64 %13, %54
  %56 = sdiv exact i64 %55, 24
  %57 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %1, i64 %56
  %58 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  %59 = icmp ult %"struct.std::__1::pair.495"* %57, %9
  br i1 %59, label %78, label %62

60:                                               ; preds = %78
  %61 = ptrtoint %"struct.std::__1::pair.495"* %84 to i64
  br label %62

62:                                               ; preds = %60, %27
  %63 = phi i64 [ %61, %60 ], [ %13, %27 ]
  store i64 %63, i64* %58, align 8
  %64 = icmp eq i64 %55, 0
  br i1 %64, label %86, label %65

65:                                               ; preds = %62, %65
  %66 = phi %"struct.std::__1::pair.495"* [ %69, %65 ], [ %9, %62 ]
  %67 = phi %"struct.std::__1::pair.495"* [ %68, %65 ], [ %57, %62 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %66, i64 -1
  %70 = bitcast %"struct.std::__1::pair.495"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"struct.std::__1::pair.495"* %69 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %67, i64 -1, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %66, i64 -1, i32 1
  %75 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %74 to i8*
  %76 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 4 %76, i64 12, i1 false) #12
  %77 = icmp eq %"struct.std::__1::pair.495"* %68, %1
  br i1 %77, label %86, label %65

78:                                               ; preds = %27, %78
  %79 = phi %"struct.std::__1::pair.495"* [ %84, %78 ], [ %9, %27 ]
  %80 = phi %"struct.std::__1::pair.495"* [ %83, %78 ], [ %57, %27 ]
  %81 = bitcast %"struct.std::__1::pair.495"* %79 to i8*
  %82 = bitcast %"struct.std::__1::pair.495"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #12
  %83 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %80, i64 1
  %84 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %79, i64 1
  %85 = icmp ult %"struct.std::__1::pair.495"* %83, %9
  br i1 %85, label %78, label %60

86:                                               ; preds = %65, %62
  %87 = bitcast %"struct.std::__1::pair.495"* %1 to i64*
  store i64 %18, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %1, i64 0, i32 1
  %89 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %88 to i8*
  store i8 %29, i8* %89, align 8
  %90 = bitcast %"struct.std::__1::pair.495"* %1 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 9
  store i8 %31, i8* %91, align 1
  %92 = getelementptr inbounds i8, i8* %90, i64 10
  store i8 %33, i8* %92, align 2
  %93 = getelementptr inbounds i8, i8* %90, i64 11
  store i8 %35, i8* %93, align 1
  %94 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %1, i64 0, i32 1, i32 1
  store i8 %37, i8* %94, align 4
  %95 = getelementptr inbounds i8, i8* %90, i64 13
  store i8 %39, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %90, i64 14
  store i8 %41, i8* %96, align 2
  %97 = getelementptr inbounds i8, i8* %90, i64 15
  store i8 %43, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %1, i64 0, i32 1, i32 2
  %99 = bitcast i32* %98 to i8*
  store i8 %46, i8* %99, align 8
  %100 = getelementptr inbounds i8, i8* %90, i64 17
  store i8 %48, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %90, i64 18
  store i8 %50, i8* %101, align 2
  %102 = getelementptr inbounds i8, i8* %90, i64 19
  store i8 %52, i8* %102, align 1
  br label %209

103:                                              ; preds = %4
  %104 = getelementptr inbounds %"class.std::__1::vector.493", %"class.std::__1::vector.493"* %0, i64 0, i32 0, i32 2
  %105 = bitcast %"struct.std::__1::__split_buffer.964"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #12
  %106 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %5, i64 0, i32 0
  %107 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %5, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %5, i64 0, i32 2
  %109 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %5, i64 0, i32 3, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %5, i64 0, i32 3, i32 1, i32 0
  %111 = bitcast %"struct.std::__1::pair.495"** %8 to i64*
  %112 = bitcast %"class.std::__1::vector.493"* %0 to i64*
  %113 = bitcast %"struct.std::__1::__split_buffer.964"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 40, i1 false)
  %114 = load i64, i64* %112, align 8
  %115 = sub i64 %13, %114
  %116 = sdiv exact i64 %115, 24
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 768614336404564650
  br i1 %118, label %119, label %121

119:                                              ; preds = %103
  %120 = bitcast %"class.std::__1::vector.493"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #14
  unreachable

121:                                              ; preds = %103
  %122 = bitcast %"struct.std::__1::pair.495"** %10 to i64*
  %123 = sub i64 %14, %114
  %124 = sdiv exact i64 %123, 24
  %125 = icmp ult i64 %124, 384307168202282325
  br i1 %125, label %130, label %126

126:                                              ; preds = %121
  %127 = sub i64 %6, %114
  %128 = sdiv exact i64 %127, 24
  store %"struct.std::__1::pair.495"* null, %"struct.std::__1::pair.495"** %109, align 8
  %129 = bitcast %"class.std::__1::allocator.499"** %110 to %"class.std::__1::__compressed_pair.496"**
  store %"class.std::__1::__compressed_pair.496"* %104, %"class.std::__1::__compressed_pair.496"** %129, align 8
  br label %138

130:                                              ; preds = %121
  %131 = shl nsw i64 %124, 1
  %132 = icmp ult i64 %131, %117
  %133 = select i1 %132, i64 %117, i64 %131
  %134 = sub i64 %6, %114
  %135 = sdiv exact i64 %134, 24
  store %"struct.std::__1::pair.495"* null, %"struct.std::__1::pair.495"** %109, align 8
  %136 = bitcast %"class.std::__1::allocator.499"** %110 to %"class.std::__1::__compressed_pair.496"**
  store %"class.std::__1::__compressed_pair.496"* %104, %"class.std::__1::__compressed_pair.496"** %136, align 8
  %137 = icmp eq i64 %133, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %130, %126
  %139 = phi i64 [ %128, %126 ], [ %135, %130 ]
  %140 = phi i64 [ 768614336404564650, %126 ], [ %133, %130 ]
  %141 = mul i64 %140, 24
  %142 = tail call i8* @_Znwm(i64 %141) #13
  %143 = bitcast i8* %142 to %"struct.std::__1::pair.495"*
  br label %144

144:                                              ; preds = %130, %138
  %145 = phi i64 [ %139, %138 ], [ %135, %130 ]
  %146 = phi i64 [ %140, %138 ], [ 0, %130 ]
  %147 = phi %"struct.std::__1::pair.495"* [ %143, %138 ], [ null, %130 ]
  store %"struct.std::__1::pair.495"* %147, %"struct.std::__1::pair.495"** %106, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %147, i64 %145
  store %"struct.std::__1::pair.495"* %148, %"struct.std::__1::pair.495"** %108, align 8
  store %"struct.std::__1::pair.495"* %148, %"struct.std::__1::pair.495"** %107, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %147, i64 %146
  store %"struct.std::__1::pair.495"* %149, %"struct.std::__1::pair.495"** %109, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker15RootWindowStateEEERNS_9allocatorIS7_EEE12emplace_backIJRKS4_S6_EEEvDpOT_(%"struct.std::__1::__split_buffer.964"* nonnull %5, %"class.aura::Window"** dereferenceable(8) %2, %"struct.aura::WindowOcclusionTracker::RootWindowState"* dereferenceable(12) %3)
  %150 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %107, align 8
  %151 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %7, align 8
  %152 = ptrtoint %"struct.std::__1::pair.495"* %151 to i64
  %153 = sub i64 %6, %152
  %154 = sdiv exact i64 %153, -24
  %155 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %150, i64 %154
  store %"struct.std::__1::pair.495"* %155, %"struct.std::__1::pair.495"** %107, align 8
  %156 = icmp sgt i64 %153, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %144
  %158 = bitcast %"struct.std::__1::pair.495"* %155 to i8*
  %159 = bitcast %"struct.std::__1::pair.495"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 %153, i1 false) #12
  br label %160

160:                                              ; preds = %157, %144
  %161 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %8, align 8
  %162 = icmp eq %"struct.std::__1::pair.495"* %161, %1
  br i1 %162, label %163, label %167

163:                                              ; preds = %160
  %164 = ptrtoint %"struct.std::__1::pair.495"* %161 to i64
  %165 = bitcast %"struct.std::__1::pair.495"** %108 to i64*
  %166 = load i64, i64* %165, align 8
  br label %183

167:                                              ; preds = %160
  %168 = bitcast %"struct.std::__1::pair.495"** %108 to i8**
  %169 = load i8*, i8** %168, align 8
  br label %170

170:                                              ; preds = %170, %167
  %171 = phi i8* [ %169, %167 ], [ %178, %170 ]
  %172 = phi %"struct.std::__1::pair.495"* [ %1, %167 ], [ %174, %170 ]
  %173 = bitcast %"struct.std::__1::pair.495"* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %173, i64 24, i1 false) #12
  %174 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %172, i64 1
  %175 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %108, align 8
  %176 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %175, i64 1
  store %"struct.std::__1::pair.495"* %176, %"struct.std::__1::pair.495"** %108, align 8
  %177 = icmp eq %"struct.std::__1::pair.495"* %174, %161
  %178 = bitcast %"struct.std::__1::pair.495"* %176 to i8*
  br i1 %177, label %179, label %170

179:                                              ; preds = %170
  %180 = ptrtoint %"struct.std::__1::pair.495"* %176 to i64
  %181 = load i64, i64* %111, align 8
  %182 = bitcast %"struct.std::__1::pair.495"** %108 to i64*
  br label %183

183:                                              ; preds = %163, %179
  %184 = phi i64* [ %165, %163 ], [ %182, %179 ]
  %185 = phi i64 [ %166, %163 ], [ %180, %179 ]
  %186 = phi i64 [ %164, %163 ], [ %181, %179 ]
  %187 = load i64, i64* %112, align 8
  %188 = bitcast %"struct.std::__1::pair.495"** %107 to i64*
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %112, align 8
  store i64 %187, i64* %188, align 8
  store i64 %185, i64* %111, align 8
  store i64 %186, i64* %184, align 8
  %190 = load i64, i64* %122, align 8
  %191 = bitcast %"struct.std::__1::pair.495"** %109 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %122, align 8
  store i64 %190, i64* %191, align 8
  %193 = bitcast %"struct.std::__1::__split_buffer.964"* %5 to i64*
  store i64 %187, i64* %193, align 8
  %194 = inttoptr i64 %187 to %"struct.std::__1::pair.495"*
  %195 = inttoptr i64 %186 to %"struct.std::__1::pair.495"*
  %196 = icmp eq %"struct.std::__1::pair.495"* %195, %194
  br i1 %196, label %204, label %197

197:                                              ; preds = %183
  %198 = getelementptr %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %195, i64 -1, i32 0
  %199 = ptrtoint %"class.aura::Window"** %198 to i64
  %200 = sub i64 %199, %187
  %201 = udiv i64 %200, 24
  %202 = xor i64 %201, -1
  %203 = getelementptr %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %195, i64 %202
  store %"struct.std::__1::pair.495"* %203, %"struct.std::__1::pair.495"** %108, align 8
  br label %204

204:                                              ; preds = %197, %183
  %205 = icmp eq i64 %187, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = inttoptr i64 %187 to i8*
  call void @_ZdlPv(i8* %207) #13
  br label %208

208:                                              ; preds = %204, %206
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #12
  br label %209

209:                                              ; preds = %19, %86, %208
  %210 = phi %"struct.std::__1::pair.495"* [ %1, %19 ], [ %1, %86 ], [ %150, %208 ]
  ret %"struct.std::__1::pair.495"* %210
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowENS2_22WindowOcclusionTracker15RootWindowStateEEERNS_9allocatorIS7_EEE12emplace_backIJRKS4_S6_EEEvDpOT_(%"struct.std::__1::__split_buffer.964"*, %"class.aura::Window"** dereferenceable(8), %"struct.aura::WindowOcclusionTracker::RootWindowState"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.495"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.495"* %7 to i64
  br i1 %8, label %10, label %93

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.964", %"struct.std::__1::__split_buffer.964"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.495"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.495"* %14 to i64
  br i1 %15, label %17, label %44

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.495"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = sdiv exact i64 %19, 24
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair.495"* %12, %5
  br i1 %24, label %40, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair.495"* [ %36, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair.495"* [ %35, %25 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair.495"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::pair.495"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %27, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %26, i64 0, i32 1
  %33 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %32 to i8*
  %34 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 4 %34, i64 12, i1 false) #12
  %35 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %27, i64 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %26, i64 1
  %37 = icmp eq %"struct.std::__1::pair.495"* %35, %5
  br i1 %37, label %38, label %25

38:                                               ; preds = %25
  %39 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %11, align 8
  br label %40

40:                                               ; preds = %38, %17
  %41 = phi %"struct.std::__1::pair.495"* [ %5, %17 ], [ %39, %38 ]
  %42 = phi %"struct.std::__1::pair.495"* [ %23, %17 ], [ %36, %38 ]
  store %"struct.std::__1::pair.495"* %42, %"struct.std::__1::pair.495"** %4, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %41, i64 %22
  store %"struct.std::__1::pair.495"* %43, %"struct.std::__1::pair.495"** %11, align 8
  br label %93

44:                                               ; preds = %10
  %45 = bitcast %"struct.std::__1::pair.495"** %6 to i64*
  %46 = bitcast %"struct.std::__1::__split_buffer.964"* %0 to i64*
  %47 = sub i64 %9, %16
  %48 = sdiv exact i64 %47, 24
  %49 = shl nsw i64 %48, 1
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 1, i64 %49
  %52 = icmp ugt i64 %51, 768614336404564650
  br i1 %52, label %53, label %54

53:                                               ; preds = %44
  tail call void @abort() #14
  unreachable

54:                                               ; preds = %44
  %55 = lshr i64 %51, 2
  %56 = mul i64 %51, 24
  %57 = tail call i8* @_Znwm(i64 %56) #13
  %58 = bitcast i8* %57 to %"struct.std::__1::pair.495"*
  %59 = ptrtoint i8* %57 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %58, i64 %55
  %61 = ptrtoint %"struct.std::__1::pair.495"* %60 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %58, i64 %51
  %63 = ptrtoint %"struct.std::__1::pair.495"* %62 to i64
  %64 = ptrtoint %"struct.std::__1::pair.495"* %12 to i64
  %65 = ptrtoint %"struct.std::__1::pair.495"* %5 to i64
  %66 = sub i64 %65, %64
  %67 = sdiv exact i64 %66, 24
  %68 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %60, i64 %67
  %69 = icmp eq i64 %66, 0
  br i1 %69, label %83, label %70

70:                                               ; preds = %54, %70
  %71 = phi %"struct.std::__1::pair.495"* [ %76, %70 ], [ %60, %54 ]
  %72 = phi i64 [ %77, %70 ], [ %61, %54 ]
  %73 = phi %"struct.std::__1::pair.495"* [ %78, %70 ], [ %12, %54 ]
  %74 = inttoptr i64 %72 to i8*
  %75 = bitcast %"struct.std::__1::pair.495"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #12
  %76 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %71, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.495"* %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %73, i64 1
  %79 = icmp eq %"struct.std::__1::pair.495"* %68, %76
  br i1 %79, label %80, label %70

80:                                               ; preds = %70
  %81 = ptrtoint %"struct.std::__1::pair.495"* %68 to i64
  %82 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %13, align 8
  br label %83

83:                                               ; preds = %54, %80
  %84 = phi %"struct.std::__1::pair.495"* [ %82, %80 ], [ %14, %54 ]
  %85 = phi i64 [ %81, %80 ], [ %61, %54 ]
  store i64 %59, i64* %46, align 8
  %86 = bitcast %"struct.std::__1::pair.495"** %11 to i64*
  store i64 %61, i64* %86, align 8
  %87 = bitcast %"struct.std::__1::pair.495"** %4 to i64*
  store i64 %85, i64* %87, align 8
  store i64 %63, i64* %45, align 8
  %88 = icmp eq %"struct.std::__1::pair.495"* %84, null
  %89 = inttoptr i64 %85 to %"struct.std::__1::pair.495"*
  br i1 %88, label %93, label %90

90:                                               ; preds = %83
  %91 = bitcast %"struct.std::__1::pair.495"* %84 to i8*
  tail call void @_ZdlPv(i8* %91) #13
  %92 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %4, align 8
  br label %93

93:                                               ; preds = %90, %83, %40, %3
  %94 = phi %"struct.std::__1::pair.495"* [ %92, %90 ], [ %89, %83 ], [ %42, %40 ], [ %5, %3 ]
  %95 = bitcast %"class.aura::Window"** %1 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"struct.std::__1::pair.495"* %94 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %94, i64 0, i32 1
  %99 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %98 to i8*
  %100 = bitcast %"struct.aura::WindowOcclusionTracker::RootWindowState"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 4 %100, i64 12, i1 false) #12
  %101 = load %"struct.std::__1::pair.495"*, %"struct.std::__1::pair.495"** %4, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.495", %"struct.std::__1::pair.495"* %101, i64 1
  store %"struct.std::__1::pair.495"* %102, %"struct.std::__1::pair.495"** %4, align 8
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.484"* @_ZNSt3__16vectorINS_4pairIPN4aura6WindowEmEENS_9allocatorIS5_EEE7emplaceIJRKS4_mEEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector.482"*, %"struct.std::__1::pair.484"*, %"class.aura::Window"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.484"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.971", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.482", %"class.std::__1::vector.482"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.482", %"class.std::__1::vector.482"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.482", %"class.std::__1::vector.482"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.484"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.484"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.484"* %11 to i64
  br i1 %12, label %15, label %150

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.484"* %9, %1
  %17 = bitcast %"class.aura::Window"** %2 to i64*
  %18 = load i64, i64* %17, align 8
  br i1 %16, label %19, label %26

19:                                               ; preds = %15
  %20 = bitcast %"struct.std::__1::pair.484"* %1 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %1, i64 0, i32 1
  %22 = load i64, i64* %3, align 8
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair.484"* %23 to i64
  %25 = bitcast %"struct.std::__1::pair.484"** %8 to i64*
  store i64 %24, i64* %25, align 8
  br label %301

26:                                               ; preds = %15
  %27 = load i64, i64* %3, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %1, i64 1
  %29 = ptrtoint %"struct.std::__1::pair.484"* %28 to i64
  %30 = sub i64 %13, %29
  %31 = ashr exact i64 %30, 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %1, i64 %31
  %33 = bitcast %"struct.std::__1::pair.484"** %8 to i64*
  %34 = icmp ult %"struct.std::__1::pair.484"* %32, %9
  br i1 %34, label %35, label %64

35:                                               ; preds = %26
  %36 = sub nsw i64 0, %31
  %37 = getelementptr %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %9, i64 %36, i32 0
  %38 = bitcast %"class.aura::Window"** %37 to i8*
  %39 = xor i64 %5, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.std::__1::pair.484"* [ %53, %46 ], [ %9, %35 ]
  %48 = phi %"struct.std::__1::pair.484"* [ %52, %46 ], [ %32, %35 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %35 ]
  %50 = bitcast %"struct.std::__1::pair.484"* %47 to i8*
  %51 = bitcast %"struct.std::__1::pair.484"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #12
  %52 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %48, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !22

56:                                               ; preds = %46, %35
  %57 = phi %"struct.std::__1::pair.484"* [ %9, %35 ], [ %53, %46 ]
  %58 = phi %"struct.std::__1::pair.484"* [ %32, %35 ], [ %52, %46 ]
  %59 = phi %"struct.std::__1::pair.484"* [ undef, %35 ], [ %53, %46 ]
  %60 = icmp ult i8* %40, inttoptr (i64 48 to i8*)
  br i1 %60, label %61, label %127

61:                                               ; preds = %127, %56
  %62 = phi %"struct.std::__1::pair.484"* [ %59, %56 ], [ %145, %127 ]
  %63 = ptrtoint %"struct.std::__1::pair.484"* %62 to i64
  br label %64

64:                                               ; preds = %61, %26
  %65 = phi i64 [ %63, %61 ], [ %13, %26 ]
  store i64 %65, i64* %33, align 8
  %66 = icmp eq i64 %30, 0
  br i1 %66, label %147, label %67

67:                                               ; preds = %64
  %68 = add i64 %30, -16
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"struct.std::__1::pair.484"* [ %78, %73 ], [ %9, %67 ]
  %75 = phi %"struct.std::__1::pair.484"* [ %77, %73 ], [ %32, %67 ]
  %76 = phi i64 [ %85, %73 ], [ %71, %67 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %74, i64 -1
  %79 = bitcast %"struct.std::__1::pair.484"* %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"struct.std::__1::pair.484"* %78 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %75, i64 -1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %74, i64 -1, i32 1
  store i64 %83, i64* %84, align 8
  %85 = add i64 %76, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73, !llvm.loop !23

87:                                               ; preds = %73, %67
  %88 = phi %"struct.std::__1::pair.484"* [ %9, %67 ], [ %78, %73 ]
  %89 = phi %"struct.std::__1::pair.484"* [ %32, %67 ], [ %77, %73 ]
  %90 = icmp ult i64 %68, 48
  br i1 %90, label %147, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::pair.484"* [ %119, %91 ], [ %88, %87 ]
  %93 = phi %"struct.std::__1::pair.484"* [ %118, %91 ], [ %89, %87 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -1
  %95 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -1
  %96 = bitcast %"struct.std::__1::pair.484"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"struct.std::__1::pair.484"* %95 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -1, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -1, i32 1
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -2
  %103 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -2
  %104 = bitcast %"struct.std::__1::pair.484"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"struct.std::__1::pair.484"* %103 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -2, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -2, i32 1
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -3
  %111 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -3
  %112 = bitcast %"struct.std::__1::pair.484"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.484"* %111 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -3, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -3, i32 1
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -4
  %119 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -4
  %120 = bitcast %"struct.std::__1::pair.484"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"struct.std::__1::pair.484"* %119 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 -4, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %92, i64 -4, i32 1
  store i64 %124, i64* %125, align 8
  %126 = icmp eq %"struct.std::__1::pair.484"* %118, %1
  br i1 %126, label %147, label %91

127:                                              ; preds = %56, %127
  %128 = phi %"struct.std::__1::pair.484"* [ %145, %127 ], [ %57, %56 ]
  %129 = phi %"struct.std::__1::pair.484"* [ %144, %127 ], [ %58, %56 ]
  %130 = bitcast %"struct.std::__1::pair.484"* %128 to i8*
  %131 = bitcast %"struct.std::__1::pair.484"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #12
  %132 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %129, i64 1
  %133 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %128, i64 1
  %134 = bitcast %"struct.std::__1::pair.484"* %133 to i8*
  %135 = bitcast %"struct.std::__1::pair.484"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 16, i1 false) #12
  %136 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %129, i64 2
  %137 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %128, i64 2
  %138 = bitcast %"struct.std::__1::pair.484"* %137 to i8*
  %139 = bitcast %"struct.std::__1::pair.484"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 16, i1 false) #12
  %140 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %129, i64 3
  %141 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %128, i64 3
  %142 = bitcast %"struct.std::__1::pair.484"* %141 to i8*
  %143 = bitcast %"struct.std::__1::pair.484"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 16, i1 false) #12
  %144 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %129, i64 4
  %145 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %128, i64 4
  %146 = icmp ult %"struct.std::__1::pair.484"* %144, %9
  br i1 %146, label %127, label %61

147:                                              ; preds = %87, %91, %64
  %148 = bitcast %"struct.std::__1::pair.484"* %1 to i64*
  store i64 %18, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %1, i64 0, i32 1
  store i64 %27, i64* %149, align 8
  br label %301

150:                                              ; preds = %4
  %151 = getelementptr inbounds %"class.std::__1::vector.482", %"class.std::__1::vector.482"* %0, i64 0, i32 0, i32 2
  %152 = bitcast %"struct.std::__1::__split_buffer.971"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %152) #12
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %6, i64 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %6, i64 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %6, i64 0, i32 2
  %156 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %6, i64 0, i32 3, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %6, i64 0, i32 3, i32 1, i32 0
  %158 = bitcast %"struct.std::__1::pair.484"** %8 to i64*
  %159 = bitcast %"class.std::__1::vector.482"* %0 to i64*
  %160 = bitcast %"struct.std::__1::__split_buffer.971"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 40, i1 false)
  %161 = load i64, i64* %159, align 8
  %162 = sub i64 %13, %161
  %163 = ashr exact i64 %162, 4
  %164 = add nsw i64 %163, 1
  %165 = icmp ugt i64 %164, 1152921504606846975
  br i1 %165, label %166, label %168

166:                                              ; preds = %150
  %167 = bitcast %"class.std::__1::vector.482"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #14
  unreachable

168:                                              ; preds = %150
  %169 = bitcast %"struct.std::__1::pair.484"** %10 to i64*
  %170 = sub i64 %14, %161
  %171 = ashr exact i64 %170, 4
  %172 = icmp ult i64 %171, 576460752303423487
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = sub i64 %5, %161
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair.484"* null, %"struct.std::__1::pair.484"** %156, align 8
  %176 = bitcast %"class.std::__1::allocator.488"** %157 to %"class.std::__1::__compressed_pair.485"**
  store %"class.std::__1::__compressed_pair.485"* %151, %"class.std::__1::__compressed_pair.485"** %176, align 8
  br label %188

177:                                              ; preds = %168
  %178 = ashr exact i64 %170, 3
  %179 = icmp ult i64 %178, %164
  %180 = select i1 %179, i64 %164, i64 %178
  %181 = sub i64 %5, %161
  %182 = ashr exact i64 %181, 4
  store %"struct.std::__1::pair.484"* null, %"struct.std::__1::pair.484"** %156, align 8
  %183 = bitcast %"class.std::__1::allocator.488"** %157 to %"class.std::__1::__compressed_pair.485"**
  store %"class.std::__1::__compressed_pair.485"* %151, %"class.std::__1::__compressed_pair.485"** %183, align 8
  %184 = icmp eq i64 %180, 0
  br i1 %184, label %194, label %185

185:                                              ; preds = %177
  %186 = icmp ugt i64 %180, 1152921504606846975
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  tail call void @abort() #14
  unreachable

188:                                              ; preds = %173, %185
  %189 = phi i64 [ 1152921504606846975, %173 ], [ %180, %185 ]
  %190 = phi i64 [ %175, %173 ], [ %182, %185 ]
  %191 = shl i64 %189, 4
  %192 = tail call i8* @_Znwm(i64 %191) #13
  %193 = bitcast i8* %192 to %"struct.std::__1::pair.484"*
  br label %194

194:                                              ; preds = %177, %188
  %195 = phi i64 [ %190, %188 ], [ %182, %177 ]
  %196 = phi i64 [ %189, %188 ], [ 0, %177 ]
  %197 = phi %"struct.std::__1::pair.484"* [ %193, %188 ], [ null, %177 ]
  store %"struct.std::__1::pair.484"* %197, %"struct.std::__1::pair.484"** %153, align 8
  %198 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %197, i64 %195
  store %"struct.std::__1::pair.484"* %198, %"struct.std::__1::pair.484"** %155, align 8
  store %"struct.std::__1::pair.484"* %198, %"struct.std::__1::pair.484"** %154, align 8
  %199 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %197, i64 %196
  store %"struct.std::__1::pair.484"* %199, %"struct.std::__1::pair.484"** %156, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowEmEERNS_9allocatorIS5_EEE12emplace_backIJRKS4_mEEEvDpOT_(%"struct.std::__1::__split_buffer.971"* nonnull %6, %"class.aura::Window"** dereferenceable(8) %2, i64* dereferenceable(8) %3)
  %200 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %154, align 8
  %201 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %7, align 8
  %202 = ptrtoint %"struct.std::__1::pair.484"* %201 to i64
  %203 = sub i64 %5, %202
  %204 = ashr exact i64 %203, 4
  %205 = sub nsw i64 0, %204
  %206 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %200, i64 %205
  store %"struct.std::__1::pair.484"* %206, %"struct.std::__1::pair.484"** %154, align 8
  %207 = icmp sgt i64 %203, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %194
  %209 = bitcast %"struct.std::__1::pair.484"* %206 to i8*
  %210 = bitcast %"struct.std::__1::pair.484"* %201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 %203, i1 false) #12
  br label %211

211:                                              ; preds = %208, %194
  %212 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %8, align 8
  %213 = icmp eq %"struct.std::__1::pair.484"* %212, %1
  br i1 %213, label %214, label %218

214:                                              ; preds = %211
  %215 = ptrtoint %"struct.std::__1::pair.484"* %212 to i64
  %216 = bitcast %"struct.std::__1::pair.484"** %155 to i64*
  %217 = load i64, i64* %216, align 8
  br label %275

218:                                              ; preds = %211
  %219 = bitcast %"struct.std::__1::pair.484"** %155 to i8**
  %220 = load i8*, i8** %219, align 8
  %221 = getelementptr %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %212, i64 -1, i32 0
  %222 = ptrtoint %"class.aura::Window"** %221 to i64
  %223 = sub i64 %222, %5
  %224 = lshr i64 %223, 4
  %225 = add nuw nsw i64 %224, 1
  %226 = and i64 %225, 3
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %241, label %228

228:                                              ; preds = %218, %228
  %229 = phi i8* [ %236, %228 ], [ %220, %218 ]
  %230 = phi %"struct.std::__1::pair.484"* [ %233, %228 ], [ %1, %218 ]
  %231 = phi i64 [ %237, %228 ], [ %226, %218 ]
  %232 = bitcast %"struct.std::__1::pair.484"* %230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %232, i64 16, i1 false) #12
  %233 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %230, i64 1
  %234 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %155, align 8
  %235 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %234, i64 1
  store %"struct.std::__1::pair.484"* %235, %"struct.std::__1::pair.484"** %155, align 8
  %236 = bitcast %"struct.std::__1::pair.484"* %235 to i8*
  %237 = add i64 %231, -1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %228, !llvm.loop !24

239:                                              ; preds = %228
  %240 = bitcast %"struct.std::__1::pair.484"* %235 to i8*
  br label %241

241:                                              ; preds = %218, %239
  %242 = phi %"struct.std::__1::pair.484"* [ undef, %218 ], [ %235, %239 ]
  %243 = phi i8* [ %220, %218 ], [ %240, %239 ]
  %244 = phi %"struct.std::__1::pair.484"* [ %1, %218 ], [ %233, %239 ]
  %245 = icmp ult i64 %223, 48
  br i1 %245, label %270, label %246

246:                                              ; preds = %241, %246
  %247 = phi i8* [ %269, %246 ], [ %243, %241 ]
  %248 = phi %"struct.std::__1::pair.484"* [ %265, %246 ], [ %244, %241 ]
  %249 = bitcast %"struct.std::__1::pair.484"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %249, i64 16, i1 false) #12
  %250 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %248, i64 1
  %251 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %155, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %251, i64 1
  store %"struct.std::__1::pair.484"* %252, %"struct.std::__1::pair.484"** %155, align 8
  %253 = bitcast %"struct.std::__1::pair.484"* %252 to i8*
  %254 = bitcast %"struct.std::__1::pair.484"* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 16, i1 false) #12
  %255 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %248, i64 2
  %256 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %155, align 8
  %257 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %256, i64 1
  store %"struct.std::__1::pair.484"* %257, %"struct.std::__1::pair.484"** %155, align 8
  %258 = bitcast %"struct.std::__1::pair.484"* %257 to i8*
  %259 = bitcast %"struct.std::__1::pair.484"* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 16, i1 false) #12
  %260 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %248, i64 3
  %261 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %155, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %261, i64 1
  store %"struct.std::__1::pair.484"* %262, %"struct.std::__1::pair.484"** %155, align 8
  %263 = bitcast %"struct.std::__1::pair.484"* %262 to i8*
  %264 = bitcast %"struct.std::__1::pair.484"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %264, i64 16, i1 false) #12
  %265 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %248, i64 4
  %266 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %155, align 8
  %267 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %266, i64 1
  store %"struct.std::__1::pair.484"* %267, %"struct.std::__1::pair.484"** %155, align 8
  %268 = icmp eq %"struct.std::__1::pair.484"* %265, %212
  %269 = bitcast %"struct.std::__1::pair.484"* %267 to i8*
  br i1 %268, label %270, label %246

270:                                              ; preds = %246, %241
  %271 = phi %"struct.std::__1::pair.484"* [ %242, %241 ], [ %267, %246 ]
  %272 = ptrtoint %"struct.std::__1::pair.484"* %271 to i64
  %273 = load i64, i64* %158, align 8
  %274 = bitcast %"struct.std::__1::pair.484"** %155 to i64*
  br label %275

275:                                              ; preds = %214, %270
  %276 = phi i64* [ %216, %214 ], [ %274, %270 ]
  %277 = phi i64 [ %217, %214 ], [ %272, %270 ]
  %278 = phi i64 [ %215, %214 ], [ %273, %270 ]
  %279 = load i64, i64* %159, align 8
  %280 = bitcast %"struct.std::__1::pair.484"** %154 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %159, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %158, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %169, align 8
  %283 = bitcast %"struct.std::__1::pair.484"** %156 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %169, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.971"* %6 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to %"struct.std::__1::pair.484"*
  %287 = inttoptr i64 %278 to %"struct.std::__1::pair.484"*
  %288 = icmp eq %"struct.std::__1::pair.484"* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %287, i64 -1, i32 0
  %291 = ptrtoint %"class.aura::Window"** %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 4
  %294 = xor i64 %293, -1
  %295 = getelementptr %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %287, i64 %294
  store %"struct.std::__1::pair.484"* %295, %"struct.std::__1::pair.484"** %155, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %152) #12
  br label %301

301:                                              ; preds = %19, %147, %300
  %302 = phi %"struct.std::__1::pair.484"* [ %1, %19 ], [ %1, %147 ], [ %200, %300 ]
  ret %"struct.std::__1::pair.484"* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIPN4aura6WindowEmEERNS_9allocatorIS5_EEE12emplace_backIJRKS4_mEEEvDpOT_(%"struct.std::__1::__split_buffer.971"*, %"class.aura::Window"** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.484"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.484"* %7 to i64
  br i1 %8, label %10, label %180

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.484"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.971", %"struct.std::__1::__split_buffer.971"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.484"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.484"* %15 to i64
  br i1 %16, label %18, label %96

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.484"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.484"* %12, %5
  br i1 %25, label %92, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %5, i64 -1, i32 0
  %28 = ptrtoint %"class.aura::Window"** %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.484"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.484"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = bitcast %"struct.std::__1::pair.484"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::pair.484"* %35 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %35, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !25

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.484"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.484"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.484"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %89, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.484"* [ %87, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.484"* [ %86, %53 ], [ %51, %48 ]
  %56 = bitcast %"struct.std::__1::pair.484"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::pair.484"* %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 1
  %63 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 1
  %64 = bitcast %"struct.std::__1::pair.484"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"struct.std::__1::pair.484"* %63 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 1, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 1, i32 1
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 2
  %71 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 2
  %72 = bitcast %"struct.std::__1::pair.484"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"struct.std::__1::pair.484"* %71 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 2, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 2, i32 1
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 3
  %79 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 3
  %80 = bitcast %"struct.std::__1::pair.484"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"struct.std::__1::pair.484"* %79 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 3, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 3, i32 1
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %55, i64 4
  %87 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %54, i64 4
  %88 = icmp eq %"struct.std::__1::pair.484"* %86, %5
  br i1 %88, label %89, label %53

89:                                               ; preds = %53, %48
  %90 = phi %"struct.std::__1::pair.484"* [ %49, %48 ], [ %87, %53 ]
  %91 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %11, align 8
  br label %92

92:                                               ; preds = %89, %18
  %93 = phi %"struct.std::__1::pair.484"* [ %5, %18 ], [ %91, %89 ]
  %94 = phi %"struct.std::__1::pair.484"* [ %24, %18 ], [ %90, %89 ]
  store %"struct.std::__1::pair.484"* %94, %"struct.std::__1::pair.484"** %4, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %93, i64 %23
  store %"struct.std::__1::pair.484"* %95, %"struct.std::__1::pair.484"** %11, align 8
  br label %180

96:                                               ; preds = %10
  %97 = bitcast %"struct.std::__1::pair.484"** %6 to i64*
  %98 = bitcast %"struct.std::__1::__split_buffer.971"* %0 to i64*
  %99 = sub i64 %9, %17
  %100 = ashr exact i64 %99, 3
  %101 = icmp eq i64 %99, 0
  %102 = select i1 %101, i64 1, i64 %100
  %103 = icmp ugt i64 %102, 1152921504606846975
  br i1 %103, label %104, label %105

104:                                              ; preds = %96
  tail call void @abort() #14
  unreachable

105:                                              ; preds = %96
  %106 = lshr i64 %102, 2
  %107 = shl i64 %102, 4
  %108 = tail call i8* @_Znwm(i64 %107) #13
  %109 = bitcast i8* %108 to %"struct.std::__1::pair.484"*
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %109, i64 %106
  %112 = ptrtoint %"struct.std::__1::pair.484"* %111 to i64
  %113 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %109, i64 %102
  %114 = ptrtoint %"struct.std::__1::pair.484"* %113 to i64
  %115 = ptrtoint %"struct.std::__1::pair.484"* %5 to i64
  %116 = sub i64 %115, %13
  %117 = ashr exact i64 %116, 4
  %118 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %111, i64 %117
  %119 = icmp eq i64 %116, 0
  br i1 %119, label %170, label %120

120:                                              ; preds = %105
  %121 = add i64 %116, -16
  %122 = lshr i64 %121, 4
  %123 = add nuw nsw i64 %122, 1
  %124 = and i64 %123, 3
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %140, label %126

126:                                              ; preds = %120, %126
  %127 = phi %"struct.std::__1::pair.484"* [ %133, %126 ], [ %111, %120 ]
  %128 = phi i64 [ %134, %126 ], [ %112, %120 ]
  %129 = phi %"struct.std::__1::pair.484"* [ %135, %126 ], [ %12, %120 ]
  %130 = phi i64 [ %136, %126 ], [ %124, %120 ]
  %131 = inttoptr i64 %128 to i8*
  %132 = bitcast %"struct.std::__1::pair.484"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #12
  %133 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %127, i64 1
  %134 = ptrtoint %"struct.std::__1::pair.484"* %133 to i64
  %135 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %129, i64 1
  %136 = add i64 %130, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %126, !llvm.loop !26

138:                                              ; preds = %126
  %139 = ptrtoint %"struct.std::__1::pair.484"* %133 to i64
  br label %140

140:                                              ; preds = %120, %138
  %141 = phi %"struct.std::__1::pair.484"* [ %111, %120 ], [ %133, %138 ]
  %142 = phi i64 [ %112, %120 ], [ %139, %138 ]
  %143 = phi %"struct.std::__1::pair.484"* [ %12, %120 ], [ %135, %138 ]
  %144 = icmp ult i64 %121, 48
  br i1 %144, label %167, label %145

145:                                              ; preds = %140, %145
  %146 = phi %"struct.std::__1::pair.484"* [ %163, %145 ], [ %141, %140 ]
  %147 = phi i64 [ %164, %145 ], [ %142, %140 ]
  %148 = phi %"struct.std::__1::pair.484"* [ %165, %145 ], [ %143, %140 ]
  %149 = inttoptr i64 %147 to i8*
  %150 = bitcast %"struct.std::__1::pair.484"* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 16, i1 false) #12
  %151 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %146, i64 1
  %152 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %148, i64 1
  %153 = bitcast %"struct.std::__1::pair.484"* %151 to i8*
  %154 = bitcast %"struct.std::__1::pair.484"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 16, i1 false) #12
  %155 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %146, i64 2
  %156 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %148, i64 2
  %157 = bitcast %"struct.std::__1::pair.484"* %155 to i8*
  %158 = bitcast %"struct.std::__1::pair.484"* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 16, i1 false) #12
  %159 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %146, i64 3
  %160 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %148, i64 3
  %161 = bitcast %"struct.std::__1::pair.484"* %159 to i8*
  %162 = bitcast %"struct.std::__1::pair.484"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 16, i1 false) #12
  %163 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %146, i64 4
  %164 = ptrtoint %"struct.std::__1::pair.484"* %163 to i64
  %165 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %148, i64 4
  %166 = icmp eq %"struct.std::__1::pair.484"* %118, %163
  br i1 %166, label %167, label %145

167:                                              ; preds = %145, %140
  %168 = ptrtoint %"struct.std::__1::pair.484"* %118 to i64
  %169 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %14, align 8
  br label %170

170:                                              ; preds = %105, %167
  %171 = phi %"struct.std::__1::pair.484"* [ %169, %167 ], [ %15, %105 ]
  %172 = phi i64 [ %168, %167 ], [ %112, %105 ]
  store i64 %110, i64* %98, align 8
  %173 = bitcast %"struct.std::__1::pair.484"** %11 to i64*
  store i64 %112, i64* %173, align 8
  %174 = bitcast %"struct.std::__1::pair.484"** %4 to i64*
  store i64 %172, i64* %174, align 8
  store i64 %114, i64* %97, align 8
  %175 = icmp eq %"struct.std::__1::pair.484"* %171, null
  %176 = inttoptr i64 %172 to %"struct.std::__1::pair.484"*
  br i1 %175, label %180, label %177

177:                                              ; preds = %170
  %178 = bitcast %"struct.std::__1::pair.484"* %171 to i8*
  tail call void @_ZdlPv(i8* %178) #13
  %179 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %4, align 8
  br label %180

180:                                              ; preds = %177, %170, %92, %3
  %181 = phi %"struct.std::__1::pair.484"* [ %179, %177 ], [ %176, %170 ], [ %94, %92 ], [ %5, %3 ]
  %182 = bitcast %"class.aura::Window"** %1 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast %"struct.std::__1::pair.484"* %181 to i64*
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %181, i64 0, i32 1
  %186 = load i64, i64* %2, align 8
  store i64 %186, i64* %185, align 8
  %187 = load %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"** %4, align 8
  %188 = getelementptr inbounds %"struct.std::__1::pair.484", %"struct.std::__1::pair.484"* %187, i64 1
  store %"struct.std::__1::pair.484"* %188, %"struct.std::__1::pair.484"** %4, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__18exchangeIN4aura22WindowOcclusionTracker13OcclusionDataES3_EET_RS4_OT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__18exchangeIN4aura22WindowOcclusionTracker13OcclusionDataES3_EET_RS4_OT0_"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4aura12_GLOBAL__N_132GetWindowTransformRelativeToRootEPNS_6WindowERKN3gfx9TransformEb: argument 0"}
!10 = distinct !{!10, !"_ZN4aura12_GLOBAL__N_132GetWindowTransformRelativeToRootEPNS_6WindowERKN3gfx9TransformEb"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
