; ModuleID = '../../third_party/blink/renderer/core/html/forms/checkbox_input_type.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/checkbox_input_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.140", i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.317", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.256", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { i64 }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { float }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.259", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.268" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.548" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CheckboxInputType" = type { %"class.blink::BaseCheckableInputType.base", [7 x i8] }
%"class.blink::BaseCheckableInputType.base" = type <{ %"class.blink::InputType", %"class.blink::InputTypeView", i8 }>
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.37", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.29", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.39", %"class.blink::Member.41", %"class.blink::Member.4", %"class.blink::Member.43", %"class.blink::Member.43", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::Member.66", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.71", %"class.blink::HeapVector.73" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.89", %"class.WTF::Vector.89", i8, i32, %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.104", %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.113", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.79", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.124", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.54", %"class.blink::Member.333", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::UserActionElementSet", %"class.blink::Member.342", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.349", i16, i8, %"class.blink::Member.356", %"class.blink::Member.358", %"class.blink::Member.360", %"class.blink::Member.362", %"class.blink::TextLinkColors", %"class.blink::Member.364", i8, [7 x i8], %"class.blink::HeapHashMap.366", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.54", %"class.WTF::Vector.373", %"class.blink::Member.378", %"class.blink::Member.380", i8, %"class.blink::Member.54", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.382", %"class.blink::HeapVector.384", %"class.std::__1::unique_ptr.392", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.398", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.411", %"class.WTF::Vector.413", i8, i8, %"class.std::__1::unique_ptr.418", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.424", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.432", i8, i32, %"class.blink::Member.434", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.440", %"class.WTF::HashMap.442", %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.41", %"class.blink::Member.41", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.455", i8, i32, %"class.blink::Member.462", %"class.blink::Member.464", i32, %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.std::__1::unique_ptr.472", i64, %"class.std::__1::unique_ptr.478", i32, i32, %"class.blink::Member.484", %"class.blink::Member.486", %"class.blink::Member.488", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.490", %"class.WTF::Vector.492", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.497", %"class.blink::Member.504", %"class.std::__1::unique_ptr.506", %"class.blink::Member.512", i8, i8, %"class.WTF::String", %"class.blink::Member.514", i8, [7 x i8], %"class.blink::HeapHashMap.516", %"class.blink::HeapObserverSet", %"class.blink::Member.530", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.532", i32, i8, i8, %"class.blink::WeakMember.534", %"class.blink::Member.535" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.82" }
%"class.blink::HeapHashMap.82" = type { %"class.WTF::HashMap.85" }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i32 }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.123 }
%class.scoped_refptr.123 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126" }
%"class.WTF::VectorBufferBase.126" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.128", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.128" = type { %"class.base::RefCounted.129" }
%"class.base::RefCounted.129" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.132" }
%"class.blink::HeapHashMap.132" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.335" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::HeapHashSet.349" = type { %"class.WTF::HashSet.352" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::WeakMember.355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.355" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.366" = type { %"class.WTF::HashMap.369" }
%"class.WTF::HashMap.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"struct.WTF::KeyValuePair.372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.372" = type opaque
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.384" = type { %"class.WTF::Vector.387" }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::Member.390"*, i32, i32 }
%"class.blink::Member.390" = type opaque
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.398" = type { %"class.WTF::HashSet.401" }
%"class.WTF::HashSet.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"class.blink::WeakMember.404"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.404" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.405", i32, [4 x i8] }>
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"struct.std::__1::pair.408"*, i32, i32 }
%"struct.std::__1::pair.408" = type opaque
%"class.blink::Member.411" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.54"*, i32, i32 }
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.430" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.41" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"struct.WTF::KeyValuePair.446"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.446" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.332", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.323, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.323 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.324" }>
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.326", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.326" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.327" }
%"struct.std::__1::atomic.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i8 }
%"class.blink::WeakMember.332" = type { %"class.blink::MemberBase.42" }
%"class.blink::HeapHashSet.455" = type { %"class.WTF::HashSet.458" }
%"class.WTF::HashSet.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"class.blink::Member.461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.461" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.497" = type { %"class.WTF::HashMap.500" }
%"class.WTF::HashMap.500" = type { %"class.WTF::HashTable.501" }
%"class.WTF::HashTable.501" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.516" = type { %"class.WTF::HashMap.519" }
%"class.WTF::HashMap.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.523" }
%"class.blink::HeapHashSet.523" = type { %"class.WTF::HashSet.526" }
%"class.WTF::HashSet.526" = type { %"class.WTF::HashTable.527" }
%"class.WTF::HashTable.527" = type <{ %"class.blink::WeakMember.529"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.529" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.41", %"class.blink::HeapHashSet.539", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.546", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.539" = type { %"class.WTF::HashSet.542" }
%"class.WTF::HashSet.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"class.blink::Member.545"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.545" = type opaque
%"class.blink::HeapTaskRunnerTimer.546" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.547", { i64, i64 } }
%"class.blink::WeakMember.547" = type { %"class.blink::MemberBase.533" }
%"class.blink::WeakMember.534" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.54", i32, %"class.blink::HeapVector" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.68" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::HeapHashMap.70"* }
%"class.blink::HeapHashMap.70" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.73" = type { %"class.WTF::Vector.76" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::Member.79"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.23", %"class.blink::Member.25", %"class.blink::Member.27", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.10 }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::InputType"* }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::InputTypeView"* }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.767", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.559", i32, %"class.blink::Member.765" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.555", %"class.blink::Member.557", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::Event"* }
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.582", %"class.blink::Member.584", %"class.blink::Member.586", %"class.blink::Member.588", i8, %"class.WTF::Vector.590" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.575" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.563" }
%"class.blink::HeapVector.563" = type { %"class.WTF::Vector.566" }
%"class.WTF::Vector.566" = type { %"class.WTF::VectorBuffer.567" }
%"class.WTF::VectorBuffer.567" = type { %"class.WTF::VectorBufferBase.568", [32 x i8] }
%"class.WTF::VectorBufferBase.568" = type { %"struct.std::__1::pair.569"*, i32, i32 }
%"struct.std::__1::pair.569" = type { %"class.WTF::AtomicString", %"class.blink::Member.570" }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::HeapVector.572"* }
%"class.blink::HeapVector.572" = type opaque
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.WTF::Vector.578"* }
%"class.WTF::Vector.578" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.776", %"class.blink::Member.778", %"class.blink::Member.559", i8, i32, i8, i32, %"class.blink::Member.780", %"class.blink::Member.584", %"class.blink::FrameLifecycle", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.582", %"class.blink::Member.782", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.792", i8, %"class.base::UnguessableToken", %"class.absl::optional.794", %"class.absl::optional.799", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.582", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.582", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.784" }
%"class.std::__1::vector.784" = type { %"class.std::__1::__vector_base.785" }
%"class.std::__1::__vector_base.785" = type { %"struct.std::__1::pair.786"*, %"struct.std::__1::pair.786"*, %"class.std::__1::__compressed_pair.787" }
%"struct.std::__1::pair.786" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.std::__1::pair.786"* }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.598 }
%union.anon.598 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.799" = type { %"class.absl::optional_internal::optional_data.800" }
%"class.absl::optional_internal::optional_data.800" = type { %"class.absl::optional_internal::optional_data_base.801" }
%"class.absl::optional_internal::optional_data_base.801" = type { %"class.absl::optional_internal::optional_data_dtor_base.802" }
%"class.absl::optional_internal::optional_data_dtor_base.802" = type { i8, %union.anon.803 }
%union.anon.803 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.804" }
%"class.blink::HeapHashSet.804" = type { %"class.WTF::HashSet.807" }
%"class.WTF::HashSet.807" = type { %"class.WTF::HashTable.808" }
%"class.WTF::HashTable.808" = type <{ %"class.blink::WeakMember.810"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.810" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.757" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.593, %"class.std::__1::unique_ptr.707", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.595, i32 }>
%class.scoped_refptr.593 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.595, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.673", %"class.absl::optional.678", %"class.absl::optional.634", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.698", i8, [7 x i8], %class.scoped_refptr.595, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.594" }>
%"class.base::RefCountedThreadSafe.594" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.608", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.614" }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.614" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.595, %"class.std::__1::unique_ptr.615", %"class.absl::optional.624", %"struct.std::__1::atomic.317", i8, i8, i8, i8, i32, i32, %"class.absl::optional.634", %"class.std::__1::unique_ptr.639", i8, i64, %class.scoped_refptr.669, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.672" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.595, i8, %"class.mojo::ScopedHandleBase.618", %class.scoped_refptr.619, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.620" }
%"class.mojo::ScopedHandleBase.618" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.619 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.620" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.624" = type { %"class.absl::optional_internal::optional_data.625" }
%"class.absl::optional_internal::optional_data.625" = type { %"class.absl::optional_internal::optional_data_base.626" }
%"class.absl::optional_internal::optional_data_base.626" = type { %"class.absl::optional_internal::optional_data_dtor_base.627" }
%"class.absl::optional_internal::optional_data_dtor_base.627" = type { i8, %union.anon.628 }
%union.anon.628 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.629", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.629" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.642", i8, i64, %class.scoped_refptr.643, %class.scoped_refptr.665 }
%"class.base::RepeatingCallback.642" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.643 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.644", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.654", i8, [7 x i8] }>
%"class.base::RefCounted.644" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.645 }
%class.scoped_refptr.645 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::map.654" = type { %"class.std::__1::__tree.655" }
%"class.std::__1::__tree.655" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%class.scoped_refptr.665 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.669 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.670 }
%class.scoped_refptr.670 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.773", [4 x i8], %"class.base::RepeatingCallback.710", %class.scoped_refptr.595, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.773" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.710" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.671 }
%class.scoped_refptr.671 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.672" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.673" = type { %"class.absl::optional_internal::optional_data.674" }
%"class.absl::optional_internal::optional_data.674" = type { %"class.absl::optional_internal::optional_data_base.675" }
%"class.absl::optional_internal::optional_data_base.675" = type { %"class.absl::optional_internal::optional_data_dtor_base.676" }
%"class.absl::optional_internal::optional_data_dtor_base.676" = type { i8, %union.anon.677 }
%union.anon.677 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.678" = type { %"class.absl::optional_internal::optional_data.679" }
%"class.absl::optional_internal::optional_data.679" = type { %"class.absl::optional_internal::optional_data_base.680" }
%"class.absl::optional_internal::optional_data_base.680" = type { %"class.absl::optional_internal::optional_data_dtor_base.681" }
%"class.absl::optional_internal::optional_data_dtor_base.681" = type { i8, [7 x i8], %union.anon.682 }
%union.anon.682 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.634" = type { %"class.absl::optional_internal::optional_data.635" }
%"class.absl::optional_internal::optional_data.635" = type { %"class.absl::optional_internal::optional_data_base.636" }
%"class.absl::optional_internal::optional_data_base.636" = type { %"class.absl::optional_internal::optional_data_dtor_base.637" }
%"class.absl::optional_internal::optional_data_dtor_base.637" = type { i8, %union.anon.638 }
%union.anon.638 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.683 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.683 = type { %"class.std::__1::map.686" }
%"class.std::__1::map.686" = type { %"class.std::__1::__tree.687" }
%"class.std::__1::__tree.687" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.688", %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.697"*, i64 }
%"class.std::__1::unique_ptr.697" = type opaque
%"class.std::__1::map.698" = type { %"class.std::__1::__tree.699" }
%"class.std::__1::__tree.699" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.700", %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.710", %"class.base::OnceCallback.711", %"class.absl::optional.712", %"class.absl::optional.717", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.724", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.732", %"class.std::__1::map.743", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.752", i8, %class.scoped_refptr.595, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.753" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.711" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.712" = type { %"class.absl::optional_internal::optional_data.713" }
%"class.absl::optional_internal::optional_data.713" = type { %"class.absl::optional_internal::optional_data_base.714" }
%"class.absl::optional_internal::optional_data_base.714" = type { %"class.absl::optional_internal::optional_data_dtor_base.715" }
%"class.absl::optional_internal::optional_data_dtor_base.715" = type { i8, %union.anon.716 }
%union.anon.716 = type { %"class.base::TimeDelta" }
%"class.absl::optional.717" = type { %"class.absl::optional_internal::optional_data.718" }
%"class.absl::optional_internal::optional_data.718" = type { %"class.absl::optional_internal::optional_data_base.719" }
%"class.absl::optional_internal::optional_data_base.719" = type { %"class.absl::optional_internal::optional_data_dtor_base.720" }
%"class.absl::optional_internal::optional_data_dtor_base.720" = type { i8, %union.anon.721 }
%union.anon.721 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.595, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.722" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.722" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.727", %class.scoped_refptr.728 }
%"class.base::RepeatingCallback.727" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.728 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.594", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.732" = type { %"class.std::__1::__tree.733" }
%"class.std::__1::__tree.733" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.734", %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::map.743" = type { %"class.std::__1::__tree.744" }
%"class.std::__1::__tree.744" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.745", %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.base::OnceCallback.752" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.753" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.595 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ClickHandlingState" = type { %"class.blink::EventDispatchHandlingState", i8, i8, %"class.blink::Member" }
%"class.blink::EventDispatchHandlingState" = type { i32 (...)** }
%"class.blink::BaseCheckableInputType" = type <{ %"class.blink::InputType", %"class.blink::InputTypeView", i8, [7 x i8] }>
%"class.blink::FormData" = type opaque
%"class.absl::optional.813" = type { %"class.absl::optional_internal::optional_data.814" }
%"class.absl::optional_internal::optional_data.814" = type { %"class.absl::optional_internal::optional_data_base.815" }
%"class.absl::optional_internal::optional_data_base.815" = type { %"class.absl::optional_internal::optional_data_dtor_base.816" }
%"class.absl::optional_internal::optional_data_dtor_base.816" = type { i8, %union.anon.817 }
%union.anon.817 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.818" }
%"class.base::time_internal::TimeBase.818" = type { i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.819" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.819" = type { %"class.v8::TracedReference.820" }
%"class.v8::TracedReference.820" = type { %"class.v8::BasicTracedReference.821" }
%"class.v8::BasicTracedReference.821" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::FileList" = type opaque
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::DragData" = type opaque
%"class.blink::ColorChooserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FormControlState" = type opaque
%"class.blink::MouseEvent" = type opaque
%"class.blink::BeforeTextInsertedEvent" = type opaque
%"class.blink::LayoutObject" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"class.blink::AXObject" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink22BaseCheckableInputTypeD2Ev = comdat any

$_ZN5blink17CheckboxInputTypeD0Ev = comdat any

$_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv = comdat any

$_ZThn16_N5blink17CheckboxInputTypeD1Ev = comdat any

$_ZThn16_N5blink17CheckboxInputTypeD0Ev = comdat any

$_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv = comdat any

$_ZN5blink13InputTypeView21EnsureFallbackContentEv = comdat any

$_ZN5blink13InputTypeView20EnsurePrimaryContentEv = comdat any

$_ZNK5blink13InputTypeView18HasFallbackContentEv = comdat any

$_ZNK5blink13InputTypeView17FocusedFieldIndexEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_26EventDispatchHandlingStateEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_26EventDispatchHandlingStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_26EventDispatchHandlingStateEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink16input_type_names9kCheckboxE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Enter\00", align 1
@_ZTVN5blink17CheckboxInputTypeE = hidden unnamed_addr constant { [100 x i8*], [60 x i8*] } { [100 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*)* @_ZN5blink17CheckboxInputTypeD0Ev to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*)* @_ZNK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::InputTypeView"* (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType10CreateViewEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::CheckboxInputType"*)* @_ZNK5blink17CheckboxInputType15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsInteractiveContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12IsTextButtonEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsTextFieldEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20IsFormDataAppendableEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormData"*)* @_ZNK5blink22BaseCheckableInputType16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType21ResultForDialogSubmitEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24ValueInFilenameValueModeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12DefaultLabelEv to i8*), i8* bitcast (i32 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType12GetValueModeEv to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType11ValueAsDateEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.absl::optional.813"*, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE to i8*), i8* bitcast (double (%"class.blink::InputType"*)* @_ZNK5blink9InputType13ValueAsDoubleEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::Decimal"*, i32, %"class.blink::ExceptionState"*)* @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType14ReadingCheckedEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, i1)* @_ZN5blink9InputType21WillUpdateCheckednessEb to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType18SupportsValidationEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsRequiredEv to i8*), i8* bitcast (i1 (%"class.blink::CheckboxInputType"*, %"class.WTF::String"*)* @_ZNK5blink17CheckboxInputType12ValueMissingERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*, i32)* @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*)* @_ZNK5blink9InputType21DefaultValueForStepUpEv to i8*), i8* bitcast (void (%"class.blink::StepRange"*, %"class.blink::InputType"*, i32)* @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12BadInputTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_ to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType16TypeMismatchTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CheckboxInputType"*)* @_ZNK5blink17CheckboxInputType16ValueMissingTextEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType17CanSetStringValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType12VisibleValueEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20LayoutObjectIsNeededEv to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*)* @_ZN5blink17CheckboxInputType10CountUsageEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType27ShouldRespectAlignAttributeEv to i8*), i8* bitcast (%"class.blink::FileList"* (%"class.blink::InputType"*)* @_ZN5blink9InputType5FilesEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType8SetFilesEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::FileList"*)* @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.WTF::Vector.822"*)* @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::DragData"*)* @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*)* @_ZN5blink9InputType19DroppedFileSystemIdEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType20CanSetSuggestedValueEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.WTF::String"*)* @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.WTF::String"*, i1, i32, i32)* @_ZN5blink22BaseCheckableInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType26ShouldRespectListAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType14IsEnumeratableEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType11IsCheckableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType11IsSteppableEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MaxLengthEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType9MinLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType19SupportsPlaceholderEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType16SupportsReadOnlyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::InputTypeView"*)* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::InputType"*, %"class.blink::QualifiedName"*)* @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::InputType"*)* @_ZNK5blink9InputType24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::InputType"*, %"class.blink::HTMLInputElement"*)* @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType24OnAttachWithLayoutObjectEv to i8*), i8* bitcast (void (%"class.blink::Decimal"*, %"class.blink::InputType"*, %"class.WTF::String"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputType"*, %"class.blink::Decimal"*)* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE to i8*), i8* bitcast (i1 (%"class.blink::CheckboxInputType"*)* @_ZNK5blink17CheckboxInputType25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType26SupportsInputModeAttributeEv to i8*), i8* bitcast (i1 (%"class.blink::InputType"*)* @_ZNK5blink9InputType20SupportsSelectionAPIEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType6HeightEv to i8*), i8* bitcast (i32 (%"class.blink::InputType"*)* @_ZNK5blink9InputType5WidthEv to i8*), i8* bitcast (void (%"class.blink::InputType"*)* @_ZN5blink9InputType19DispatchSearchEventEv to i8*), i8* bitcast (%"class.blink::ColorChooserClient"* (%"class.blink::InputType"*)* @_ZN5blink9InputType21GetColorChooserClientEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZN5blink22BaseCheckableInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv to i8*), i8* bitcast (void ()* @_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*)* @_ZN5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, i32)* @_ZN5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*, %"class.blink::KeyboardEvent"*)* @_ZN5blink17CheckboxInputType16HandleKeyupEventERNS_13KeyboardEventE to i8*), i8* bitcast (%"class.blink::ClickHandlingState"* (%"class.blink::CheckboxInputType"*)* @_ZN5blink17CheckboxInputType17WillDispatchClickEv to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)* @_ZN5blink17CheckboxInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE to i8*)], [60 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*)* @_ZThn16_N5blink17CheckboxInputTypeD1Ev to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*)* @_ZThn16_N5blink17CheckboxInputTypeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, i32, i32*)* @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*)* @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE to i8*), i8* bitcast (%"class.blink::ClickHandlingState"* (%"class.blink::CheckboxInputType"*)* @_ZThn16_N5blink17CheckboxInputType17WillDispatchClickEv to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*, %"class.blink::Event"*, %"class.blink::ClickHandlingState"*)* @_ZThn16_N5blink17CheckboxInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::CheckboxInputType"*, %"class.blink::KeyboardEvent"*)* @_ZThn16_N5blink17CheckboxInputType16HandleKeyupEventERNS_13KeyboardEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*)* @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FormForSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32)* @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_N5blink22BaseCheckableInputType15HandleBlurEventEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::Event"*)* @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, i32)* @_ZThn16_N5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView4BlurEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17SubtreeHasChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32)* @_ZNK5blink13InputTypeView18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*)* @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE to i8*), i8* bitcast (i8 (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ComputedTextDirectionEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView14ClosePopupViewEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14HasOpenedPopupEv to i8*), i8* bitcast (i1 (%"class.blink::BaseCheckableInputType"*)* @_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19CreateShadowSubtreeEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv to i8*), i8* bitcast (%"class.blink::HTMLInputElement"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView12UploadButtonEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView14FileStatusTextEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20StepAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19AltAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView19SrcAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView10UpdateViewEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24MultipleAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21ValueAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, %"class.WTF::String"*, i1)* @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView26ListAttributeTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*, i1)* @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView17PopupRootAXObjectEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView21EnsureFallbackContentEv to i8*), i8* bitcast (void (%"class.blink::InputTypeView"*)* @_ZN5blink13InputTypeView20EnsurePrimaryContentEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView18HasFallbackContentEv to i8*), i8* bitcast (void ()* @_ZThn16_NK5blink22BaseCheckableInputType20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*)* @_ZThn16_N5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView15IsDraggedSliderEv to i8*), i8* bitcast (i1 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView11HasBadInputEv to i8*), i8* bitcast (i32 (%"class.blink::InputTypeView"*)* @_ZNK5blink13InputTypeView17FocusedFieldIndexEv to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_26EventDispatchHandlingStateEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_26EventDispatchHandlingStateEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink18ClickHandlingStateE = external unnamed_addr constant { [3 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CheckboxInputType10CountUsageEv(%"class.blink::CheckboxInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"* %2, i32 2851) #7
  ret void
}

declare void @_ZNK5blink9InputType19CountUsageIfVisibleENS_5mojom10WebFeatureE(%"class.blink::InputType"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17CheckboxInputType15FormControlTypeEv(%"class.blink::CheckboxInputType"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CheckboxInputType12ValueMissingERKN3WTF6StringE(%"class.blink::CheckboxInputType"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.blink::HTMLInputElement"** %3 to %"class.blink::HTMLFormControlElement"**
  %5 = load %"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormControlElement"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %5) #7
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %9 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %8) #7
  %10 = xor i1 %9, true
  br label %11

11:                                               ; preds = %7, %2
  %12 = phi i1 [ false, %2 ], [ %10, %7 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17CheckboxInputType16ValueMissingTextEv(%"class.blink::CheckboxInputType"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0
  %3 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"* %2) #7
  %4 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %3, i32 25042) #7
  ret %"class.WTF::StringImpl"* %4
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink9InputType9GetLocaleEv(%"class.blink::InputType"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CheckboxInputType16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::CheckboxInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::KeyboardEvent", %"class.blink::KeyboardEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %13, i64* %14, align 8
  br label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %25 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7
  %28 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 1, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7
  br i1 %31, label %66, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %38) #7
  %40 = call zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"* %39) #7
  br i1 %40, label %41, label %68

41:                                               ; preds = %32
  %42 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #7
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %48 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %47, i64* %48, align 8
  br label %57

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %57

57:                                               ; preds = %49, %45
  %58 = phi i64 [ %56, %49 ], [ %47, %45 ]
  %59 = phi i32 [ %52, %49 ], [ 0, %45 ]
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %59, i32* %60, align 8
  %61 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #7
  %62 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %58, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 5, i32* %64, align 8
  %65 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #7
  br i1 %65, label %66, label %68

66:                                               ; preds = %57, %23
  %67 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 1
  call void @_ZNK5blink13InputTypeView30DispatchSimulatedClickIfActiveERNS_13KeyboardEventE(%"class.blink::InputTypeView"* %67, %"class.blink::KeyboardEvent"* dereferenceable(176) %1) #7
  br label %68

68:                                               ; preds = %66, %57, %32
  ret void
}

declare zeroext i1 @_ZN5blink26IsSpatialNavigationEnabledEPKNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZNK5blink13InputTypeView30DispatchSimulatedClickIfActiveERNS_13KeyboardEventE(%"class.blink::InputTypeView"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink17CheckboxInputType16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::CheckboxInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::CheckboxInputType"*
  tail call void @_ZN5blink17CheckboxInputType16HandleKeyupEventERNS_13KeyboardEventE(%"class.blink::CheckboxInputType"* %4, %"class.blink::KeyboardEvent"* dereferenceable(176) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClickHandlingState"* @_ZN5blink17CheckboxInputType17WillDispatchClickEv(%"class.blink::CheckboxInputType"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_26EventDispatchHandlingStateEEEPhm(i64 24) #7
  %3 = bitcast i8* %2 to %"class.blink::ClickHandlingState"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink18ClickHandlingStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast i8* %7 to %"class.blink::HTMLInputElement"**
  store %"class.blink::HTMLInputElement"* null, %"class.blink::HTMLInputElement"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %14) #7
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %4, align 8
  %17 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %17, i64 0, i32 5
  %19 = load i16, i16* %18, align 4
  %20 = and i16 %19, 8
  %21 = icmp eq i16 %20, 0
  %22 = getelementptr inbounds i8, i8* %2, i64 9
  %23 = lshr exact i16 %20, 3
  %24 = trunc i16 %23 to i8
  store i8 %24, i8* %22, align 1
  br i1 %21, label %28, label %25

25:                                               ; preds = %1
  %26 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  tail call void @_ZN5blink16HTMLInputElement16setIndeterminateEb(%"class.blink::HTMLInputElement"* %26, i1 zeroext false) #7
  %27 = load i8, i8* %4, align 8, !range !2
  br label %28

28:                                               ; preds = %1, %25
  %29 = phi i8 [ %16, %1 ], [ %27, %25 ]
  %30 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %13, align 8
  %31 = icmp eq i8 %29, 0
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %30, i1 zeroext %31, i32 1) #7
  %32 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 2
  store i8 1, i8* %32, align 8
  ret %"class.blink::ClickHandlingState"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink16HTMLInputElement16setIndeterminateEb(%"class.blink::HTMLInputElement"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClickHandlingState"* @_ZThn16_N5blink17CheckboxInputType17WillDispatchClickEv(%"class.blink::CheckboxInputType"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::CheckboxInputType"*
  %4 = tail call %"class.blink::ClickHandlingState"* @_ZN5blink17CheckboxInputType17WillDispatchClickEv(%"class.blink::CheckboxInputType"* %3)
  ret %"class.blink::ClickHandlingState"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CheckboxInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::CheckboxInputType"* nocapture, %"class.blink::Event"* nocapture dereferenceable(104), %"class.blink::ClickHandlingState"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 96
  %7 = icmp eq i16 %6, 0
  %8 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %8, align 8
  br i1 %7, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ClickHandlingState", %"class.blink::ClickHandlingState"* %2, i64 0, i32 2
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  tail call void @_ZN5blink16HTMLInputElement16setIndeterminateEb(%"class.blink::HTMLInputElement"* %9, i1 zeroext %13) #7
  %14 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %8, align 8
  %15 = getelementptr inbounds %"class.blink::ClickHandlingState", %"class.blink::ClickHandlingState"* %2, i64 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp ne i8 %16, 0
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %14, i1 zeroext %17, i32 0) #7
  br label %19

18:                                               ; preds = %3
  tail call void @_ZN5blink16HTMLInputElement35DispatchInputAndChangeEventIfNeededEv(%"class.blink::HTMLInputElement"* %9) #7
  br label %19

19:                                               ; preds = %18, %10
  %20 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %20, align 8
  %21 = load i16, i16* %4, align 8
  %22 = or i16 %21, 64
  store i16 %22, i16* %4, align 8
  ret void
}

declare void @_ZN5blink16HTMLInputElement35DispatchInputAndChangeEventIfNeededEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink17CheckboxInputType16DidDispatchClickERNS_5EventERKNS_18ClickHandlingStateE(%"class.blink::CheckboxInputType"* nocapture, %"class.blink::Event"* nocapture dereferenceable(104), %"class.blink::ClickHandlingState"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %5 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = and i16 %6, 96
  %8 = icmp eq i16 %7, 0
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 1, i32 0, i32 0
  %10 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %9, align 8
  br i1 %8, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::ClickHandlingState", %"class.blink::ClickHandlingState"* %2, i64 0, i32 2
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp ne i8 %13, 0
  tail call void @_ZN5blink16HTMLInputElement16setIndeterminateEb(%"class.blink::HTMLInputElement"* %10, i1 zeroext %14) #7
  %15 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %9, align 8
  %16 = getelementptr inbounds %"class.blink::ClickHandlingState", %"class.blink::ClickHandlingState"* %2, i64 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp ne i8 %17, 0
  tail call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %15, i1 zeroext %18, i32 0) #7
  br label %20

19:                                               ; preds = %3
  tail call void @_ZN5blink16HTMLInputElement35DispatchInputAndChangeEventIfNeededEv(%"class.blink::HTMLInputElement"* %10) #7
  br label %20

20:                                               ; preds = %11, %19
  %21 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 5
  %22 = bitcast %"class.blink::Member"* %21 to i8*
  store i8 0, i8* %22, align 8
  %23 = load i16, i16* %5, align 8
  %24 = or i16 %23, 64
  store i16 %24, i16* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CheckboxInputType25ShouldAppearIndeterminateEv(%"class.blink::CheckboxInputType"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %3, i64 0, i32 5
  %5 = load i16, i16* %4, align 4
  %6 = and i16 %5, 8
  %7 = icmp ne i16 %6, 0
  ret i1 %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22BaseCheckableInputTypeD2Ev(%"class.blink::BaseCheckableInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 1
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %2) #7
  %3 = getelementptr inbounds %"class.blink::BaseCheckableInputType", %"class.blink::BaseCheckableInputType"* %0, i64 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %3) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17CheckboxInputTypeD0Ev(%"class.blink::CheckboxInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %2) #7
  %3 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %3) #7
  ret void
}

declare void @_ZNK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE(%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*) unnamed_addr #1

declare %"class.blink::InputTypeView"* @_ZN5blink22BaseCheckableInputType10CreateViewEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsInteractiveContentEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12IsTextButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsTextFieldEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20IsFormDataAppendableEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink22BaseCheckableInputType16AppendToFormDataERNS_8FormDataE(%"class.blink::BaseCheckableInputType"*, %"class.blink::FormData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType21ResultForDialogSubmitEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType24ValueInFilenameValueModeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12DefaultLabelEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink22BaseCheckableInputType12GetValueModeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare double @_ZNK5blink9InputType11ValueAsDateEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType14SetValueAsDateERKN4absl8optionalIN4base4TimeEEERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.absl::optional.813"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare double @_ZNK5blink9InputType13ValueAsDoubleEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType16SetValueAsDoubleEdNS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, double, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink9InputType17SetValueAsDecimalERKNS_7DecimalENS_22TextFieldEventBehaviorERNS_14ExceptionStateE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZNK5blink22BaseCheckableInputType14ReadingCheckedEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType21WillUpdateCheckednessEb(%"class.blink::InputType"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType18SupportsValidationEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15TypeMismatchForERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType12TypeMismatchEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsRequiredEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType15PatternMismatchERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType7TooLongERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType8TooShortERKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9InputType21DefaultValueForStepUpEv(%"class.blink::Decimal"* sret, %"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* sret, %"class.blink::InputType"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12BadInputTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17ValueNotEqualTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType17RangeOverflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType18RangeUnderflowTextERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType27ReversedRangeOutOfRangeTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16RangeInvalidTextERKNS_7DecimalES3_(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType16TypeMismatchTextEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22BaseCheckableInputType17CanSetStringValueEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType13LocalizeValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType12VisibleValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType13SanitizeValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType22SanitizeUserInputValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9InputType20WarnIfValueIsInvalidERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19IsKeyboardFocusableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType25MayTriggerVirtualKeyboardEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27CanBeSuccessfulSubmitButtonEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink22BaseCheckableInputType25MatchesDefaultPseudoClassEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20LayoutObjectIsNeededEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType48SanitizeValueInResponseToMinOrMaxAttributeChangeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType27ShouldRespectAlignAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::FileList"* @_ZN5blink9InputType5FilesEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType8SetFilesEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType25SetFilesAndDispatchEventsEPNS_8FileListE(%"class.blink::InputType"*, %"class.blink::FileList"*) unnamed_addr #1

declare void @_ZN5blink9InputType17SetFilesFromPathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InputType"*, %"class.WTF::Vector.822"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType19ReceiveDroppedFilesEPKNS_8DragDataE(%"class.blink::InputType"*, %"class.blink::DragData"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9InputType19DroppedFileSystemIdEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType20CanSetSuggestedValueEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType40ShouldSendChangeEventAfterCheckedChangedEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType11CanSetValueERKN3WTF6StringE(%"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType8SetValueERKN3WTF6StringEbNS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::BaseCheckableInputType"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType26ShouldRespectListAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType14IsEnumeratableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink22BaseCheckableInputType11IsCheckableEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType11IsSteppableEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9InputType37ShouldRespectHeightAndWidthAttributesEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MaxLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType9MinLengthEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType19SupportsPlaceholderEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType16SupportsReadOnlyEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType14DefaultToolTipERKNS_13InputTypeViewE(%"class.blink::InputType"*, %"class.blink::InputTypeView"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN5blink9InputType24FindClosestTickMarkValueERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::InputType"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink9InputType24SubResourceAttributeNameEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType26CopyNonAttributePropertiesERKNS_16HTMLInputElementE(%"class.blink::InputType"*, %"class.blink::HTMLInputElement"* dereferenceable(320)) unnamed_addr #1

declare void @_ZN5blink9InputType24OnAttachWithLayoutObjectEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZNK5blink9InputType13ParseToNumberERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.blink::InputType"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9InputType9SerializeERKNS_7DecimalE(%"class.blink::InputType"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType26SupportsInputModeAttributeEv(%"class.blink::InputType"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9InputType20SupportsSelectionAPIEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType6HeightEv(%"class.blink::InputType"*) unnamed_addr #1

declare i32 @_ZNK5blink9InputType5WidthEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink9InputType19DispatchSearchEventEv(%"class.blink::InputType"*) unnamed_addr #1

declare %"class.blink::ColorChooserClient"* @_ZN5blink9InputType21GetColorChooserClientEv(%"class.blink::InputType"*) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType15HandleBlurEventEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink22BaseCheckableInputType20SaveFormControlStateEv() unnamed_addr

declare void @_ZN5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #1

declare void @_ZN5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::BaseCheckableInputType"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_NK5blink22BaseCheckableInputType5TraceEPNS_7VisitorE(%"class.blink::BaseCheckableInputType"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink17CheckboxInputTypeD1Ev(%"class.blink::CheckboxInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %4) #7
  %5 = bitcast %"class.blink::Member"* %2 to %"class.blink::InputType"*
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %5) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink17CheckboxInputTypeD0Ev(%"class.blink::CheckboxInputType"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CheckboxInputType", %"class.blink::CheckboxInputType"* %0, i64 -1, i32 0, i32 1, i32 2
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %2, i64 2
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::InputTypeView"*
  tail call void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"* %4) #7
  %5 = bitcast %"class.blink::Member"* %2 to %"class.blink::InputType"*
  tail call void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"* %5) #7
  ret void
}

declare zeroext i1 @_ZNK5blink13InputTypeView27SizeShouldIncludeDecorationEiRi(%"class.blink::InputTypeView"*, i32, i32* dereferenceable(4)) unnamed_addr #1

declare void @_ZN5blink13InputTypeView16HandleClickEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20HandleMouseDownEventERNS_10MouseEventE(%"class.blink::InputTypeView"*, %"class.blink::MouseEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType18HandleKeydownEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType19HandleKeypressEventERNS_13KeyboardEventE(%"class.blink::BaseCheckableInputType"*, %"class.blink::KeyboardEvent"* dereferenceable(176)) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView29HandleBeforeTextInsertedEventERNS_23BeforeTextInsertedEventE(%"class.blink::InputTypeView"*, %"class.blink::BeforeTextInsertedEvent"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView12ForwardEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZN5blink13InputTypeView22ShouldSubmitImplicitlyERKNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink13InputTypeView17FormForSubmissionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView19HasCustomFocusLogicEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView18HandleFocusInEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::InputTypeView"*, %"class.blink::Element"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType15HandleBlurEventEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView22HandleDOMActivateEventERNS_5EventE(%"class.blink::InputTypeView"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::BaseCheckableInputType"*, i32) unnamed_addr #0 align 2

declare void @_ZN5blink13InputTypeView4BlurEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView17SubtreeHasChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27TypeShouldForceLegacyLayoutEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink13InputTypeView18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare void @_ZN5blink13InputTypeView26CustomStyleForLayoutObjectERNS_13ComputedStyleE(%"class.blink::InputTypeView"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare zeroext i8 @_ZN5blink13InputTypeView21ComputedTextDirectionEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView14ClosePopupViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView14HasOpenedPopupEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK5blink22BaseCheckableInputType18NeedsShadowSubtreeEv(%"class.blink::BaseCheckableInputType"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink13InputTypeView19CreateShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20DestroyShadowSubtreeEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.blink::HTMLInputElement"* @_ZNK5blink13InputTypeView12UploadButtonEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13InputTypeView14FileStatusTextEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MinOrMaxAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView20StepAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19AltAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView19SrcAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView10UpdateViewEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24MultipleAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24DisabledAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24ReadonlyAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView24RequiredAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView21ValueAttributeChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView11DidSetValueERKN3WTF6StringEb(%"class.blink::InputTypeView"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) unnamed_addr #1

declare void @_ZN5blink13InputTypeView26ListAttributeTargetChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27CapsLockStateMayHaveChangedEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView27ShouldDrawCapsLockIndicatorEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView27UpdateClearButtonVisibilityEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare void @_ZN5blink13InputTypeView21UpdatePlaceholderTextEb(%"class.blink::InputTypeView"*, i1 zeroext) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink13InputTypeView17PopupRootAXObjectEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView21EnsureFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13InputTypeView20EnsurePrimaryContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13InputTypeView18HasFallbackContentEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZThn16_NK5blink22BaseCheckableInputType20SaveFormControlStateEv() unnamed_addr

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink22BaseCheckableInputType23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::BaseCheckableInputType"*, %"class.blink::FormControlState"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13InputTypeView15IsDraggedSliderEv(%"class.blink::InputTypeView"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InputTypeView11HasBadInputEv(%"class.blink::InputTypeView"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink13InputTypeView17FocusedFieldIndexEv(%"class.blink::InputTypeView"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13InputTypeViewD2Ev(%"class.blink::InputTypeView"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink9InputTypeD2Ev(%"class.blink::InputType"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_26EventDispatchHandlingStateEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_26EventDispatchHandlingStateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26EventDispatchHandlingStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventDispatchHandlingState"*
  %4 = bitcast i8* %1 to void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)**, void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventDispatchHandlingState"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::EventDispatchHandlingState"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_26EventDispatchHandlingStateEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
