; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/decoration_manager.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/decoration_manager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.241", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.897", %"class.std::__1::vector.272", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr.14", %"class.std::__1::function", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unordered_map.110", %"class.std::__1::unordered_map.138", i32, [4 x i8], %"class.std::__1::unordered_map.162", %"class.std::__1::unordered_map.186", %"class.std::__1::unique_ptr.210", %"class.std::__1::map", %"class.std::__1::map.351", %"class.std::__1::unordered_map.360", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.610", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.860", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.spvtools::opt::Module"* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map.21", %"class.std::__1::set", %"class.std::__1::unordered_map.52" }
%"class.std::__1::unordered_map.21" = type { %"class.std::__1::__hash_table.22" }
%"class.std::__1::__hash_table.22" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.41", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base.26"** }
%"struct.std::__1::__hash_node_base.26" = type { %"struct.std::__1::__hash_node_base.26"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator.28" }
%"class.std::__1::__bucket_list_deallocator.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base.26" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.52" = type { %"class.std::__1::__hash_table.53" }
%"class.std::__1::__hash_table.53" = type <{ %"class.std::__1::unique_ptr.54", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74", [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56", %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base.57"** }
%"struct.std::__1::__hash_node_base.57" = type { %"struct.std::__1::__hash_node_base.57"* }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::__bucket_list_deallocator.59" }
%"class.std::__1::__bucket_list_deallocator.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.57" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.106", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::set.95"* }
%"class.std::__1::set.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.spvtools::EnumSet.106" = type { i64, %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unordered_map.110" = type { %"class.std::__1::__hash_table.111" }
%"class.std::__1::__hash_table.111" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base.115"** }
%"struct.std::__1::__hash_node_base.115" = type { %"struct.std::__1::__hash_node_base.115"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator.117" }
%"class.std::__1::__bucket_list_deallocator.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.115" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.138" = type { %"class.std::__1::__hash_table.139" }
%"class.std::__1::__hash_table.139" = type <{ %"class.std::__1::unique_ptr.140", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base.143"** }
%"struct.std::__1::__hash_node_base.143" = type { %"struct.std::__1::__hash_node_base.143"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator.145" }
%"class.std::__1::__bucket_list_deallocator.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.143" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.162" = type { %"class.std::__1::__hash_table.163" }
%"class.std::__1::__hash_table.163" = type <{ %"class.std::__1::unique_ptr.164", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166", %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.167"** }
%"struct.std::__1::__hash_node_base.167" = type { %"struct.std::__1::__hash_node_base.167"* }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::__bucket_list_deallocator.169" }
%"class.std::__1::__bucket_list_deallocator.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base.167" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.186" = type { %"class.std::__1::__hash_table.187" }
%"class.std::__1::__hash_table.187" = type <{ %"class.std::__1::unique_ptr.188", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.206", [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190", %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base.191"** }
%"struct.std::__1::__hash_node_base.191" = type { %"struct.std::__1::__hash_node_base.191"* }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.std::__1::__bucket_list_deallocator.193" }
%"class.std::__1::__bucket_list_deallocator.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::__hash_node_base.191" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.213", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.291", %"class.std::__1::unordered_map.315" }
%"class.std::__1::unordered_map.213" = type { %"class.std::__1::__hash_table.214" }
%"class.std::__1::__hash_table.214" = type <{ %"class.std::__1::unique_ptr.215", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", [4 x i8] }>
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217", %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::__hash_node_base.218"** }
%"struct.std::__1::__hash_node_base.218" = type { %"struct.std::__1::__hash_node_base.218"* }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__bucket_list_deallocator.220" }
%"class.std::__1::__bucket_list_deallocator.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.218" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.241", %"class.spvtools::opt::InstructionList" }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.241", %"class.std::__1::vector", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.278", %"class.std::__1::unique_ptr.241", %"class.std::__1::vector" }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"class.std::__1::unique_ptr.280"*, %"class.std::__1::unique_ptr.280"*, %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::unique_ptr.280"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.241"*, %"class.std::__1::unique_ptr.241"*, %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.std::__1::unique_ptr.241"* }
%"class.std::__1::unordered_map.291" = type { %"class.std::__1::__hash_table.292" }
%"class.std::__1::__hash_table.292" = type <{ %"class.std::__1::unique_ptr.293", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.311", [4 x i8] }>
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.296"** }
%"struct.std::__1::__hash_node_base.296" = type { %"struct.std::__1::__hash_node_base.296"* }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::__bucket_list_deallocator.298" }
%"class.std::__1::__bucket_list_deallocator.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.296" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.315" = type { %"class.std::__1::__hash_table.316" }
%"class.std::__1::__hash_table.316" = type <{ %"class.std::__1::unique_ptr.317", %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.335", [4 x i8] }>
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319", %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.std::__1::__hash_node_base.320"** }
%"struct.std::__1::__hash_node_base.320" = type { %"struct.std::__1::__hash_node_base.320"* }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.std::__1::__bucket_list_deallocator.322" }
%"class.std::__1::__bucket_list_deallocator.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.std::__1::__hash_node_base.320" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.342" }
%"class.std::__1::__tree.342" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.351" = type { %"class.std::__1::__tree.352" }
%"class.std::__1::__tree.352" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.353", %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.382", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.390", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.445" }
%"class.std::__1::unordered_map.390" = type { %"class.std::__1::__hash_table.391" }
%"class.std::__1::__hash_table.391" = type <{ %"class.std::__1::unique_ptr.392", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.410", [4 x i8] }>
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394", %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.395"** }
%"struct.std::__1::__hash_node_base.395" = type { %"struct.std::__1::__hash_node_base.395"* }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.std::__1::__bucket_list_deallocator.397" }
%"class.std::__1::__bucket_list_deallocator.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.std::__1::__hash_node_base.395" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.414" }
%"class.std::__1::__tree.414" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.424" }
%"class.std::__1::__hash_table.424" = type <{ %"class.std::__1::unique_ptr.425", %"class.std::__1::__compressed_pair.435", %"class.std::__1::__compressed_pair.440", %"class.std::__1::__compressed_pair.442", [4 x i8] }>
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427", %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::__hash_node_base.428"** }
%"struct.std::__1::__hash_node_base.428" = type { %"struct.std::__1::__hash_node_base.428"* }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.std::__1::__bucket_list_deallocator.430" }
%"class.std::__1::__bucket_list_deallocator.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"struct.std::__1::__hash_node_base.428" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.445" = type { %"class.std::__1::__vector_base.446" }
%"class.std::__1::__vector_base.446" = type { %"class.std::__1::unique_ptr.447"*, %"class.std::__1::unique_ptr.447"*, %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.450", i32, [4 x i8] }>
%"class.std::__1::vector.450" = type { %"class.std::__1::__vector_base.451" }
%"class.std::__1::__vector_base.451" = type { %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"*, %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { i32*, i32*, %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { i32* }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::vector.257"* }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.std::__1::unique_ptr.447"* }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.470", %"class.std::__1::unordered_map.494", %"class.std::__1::unordered_set.518", %"class.std::__1::vector.540", %"class.std::__1::unordered_map.470", %"class.std::__1::unordered_map.553" }
%"class.std::__1::unordered_map.494" = type { %"class.std::__1::__hash_table.495" }
%"class.std::__1::__hash_table.495" = type <{ %"class.std::__1::unique_ptr.496", %"class.std::__1::__compressed_pair.506", %"class.std::__1::__compressed_pair.511", %"class.std::__1::__compressed_pair.514", [4 x i8] }>
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498", %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"struct.std::__1::__hash_node_base.499"** }
%"struct.std::__1::__hash_node_base.499" = type { %"struct.std::__1::__hash_node_base.499"* }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.std::__1::__bucket_list_deallocator.501" }
%"class.std::__1::__bucket_list_deallocator.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.499" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_set.518" = type { %"class.std::__1::__hash_table.519" }
%"class.std::__1::__hash_table.519" = type <{ %"class.std::__1::unique_ptr.520", %"class.std::__1::__compressed_pair.530", %"class.std::__1::__compressed_pair.535", %"class.std::__1::__compressed_pair.537", [4 x i8] }>
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522", %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.std::__1::__hash_node_base.523"** }
%"struct.std::__1::__hash_node_base.523" = type { %"struct.std::__1::__hash_node_base.523"* }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.std::__1::__bucket_list_deallocator.525" }
%"class.std::__1::__bucket_list_deallocator.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.std::__1::__hash_node_base.523" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.540" = type { %"class.std::__1::__vector_base.541" }
%"class.std::__1::__vector_base.541" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.548" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.542" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.470" = type { %"class.std::__1::__hash_table.471" }
%"class.std::__1::__hash_table.471" = type <{ %"class.std::__1::unique_ptr.472", %"class.std::__1::__compressed_pair.482", %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.490", [4 x i8] }>
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474", %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"struct.std::__1::__hash_node_base.475"** }
%"struct.std::__1::__hash_node_base.475" = type { %"struct.std::__1::__hash_node_base.475"* }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.std::__1::__bucket_list_deallocator.477" }
%"class.std::__1::__bucket_list_deallocator.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.std::__1::__hash_node_base.475" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.553" = type { %"class.std::__1::__hash_table.554" }
%"class.std::__1::__hash_table.554" = type <{ %"class.std::__1::unique_ptr.555", %"class.std::__1::__compressed_pair.565", %"class.std::__1::__compressed_pair.570", %"class.std::__1::__compressed_pair.573", [4 x i8] }>
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557", %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.std::__1::__hash_node_base.558"** }
%"struct.std::__1::__hash_node_base.558" = type { %"struct.std::__1::__hash_node_base.558"* }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.std::__1::__bucket_list_deallocator.560" }
%"class.std::__1::__bucket_list_deallocator.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"struct.std::__1::__hash_node_base.558" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.21", %"class.std::__1::unordered_map.21", %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.583", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.583" = type { %"class.std::__1::__hash_table.584" }
%"class.std::__1::__hash_table.584" = type <{ %"class.std::__1::unique_ptr.585", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.603", [4 x i8] }>
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587", %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.588"** }
%"struct.std::__1::__hash_node_base.588" = type { %"struct.std::__1::__hash_node_base.588"* }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__bucket_list_deallocator.590" }
%"class.std::__1::__bucket_list_deallocator.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.588" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector.252", %"class.std::__1::vector.272", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.267" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.254" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::multimap.613"* }
%"class.std::__1::multimap.613" = type { %"class.std::__1::__tree.614" }
%"class.std::__1::__tree.614" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.615", %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.628", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.645", %"class.std::__1::map.667" }
%"class.std::__1::map.628" = type { %"class.std::__1::__tree.629" }
%"class.std::__1::__tree.629" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.638", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.638" = type { %"class.std::__1::__vector_base.639" }
%"class.std::__1::__vector_base.639" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.645" = type { %"class.std::__1::__hash_table.646" }
%"class.std::__1::__hash_table.646" = type <{ %"class.std::__1::unique_ptr.647", %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.662", %"class.std::__1::__compressed_pair.664", [4 x i8] }>
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649", %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.std::__1::__hash_node_base.650"** }
%"struct.std::__1::__hash_node_base.650" = type { %"struct.std::__1::__hash_node_base.650"* }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.std::__1::__bucket_list_deallocator.652" }
%"class.std::__1::__bucket_list_deallocator.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.std::__1::__hash_node_base.650" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map.667" = type { %"class.std::__1::__tree.668" }
%"class.std::__1::__tree.668" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.669", %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.684" }
%"class.std::__1::unordered_map.684" = type { %"class.std::__1::__hash_table.685" }
%"class.std::__1::__hash_table.685" = type <{ %"class.std::__1::unique_ptr.686", %"class.std::__1::__compressed_pair.696", %"class.std::__1::__compressed_pair.701", %"class.std::__1::__compressed_pair.704", [4 x i8] }>
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688", %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"struct.std::__1::__hash_node_base.689"** }
%"struct.std::__1::__hash_node_base.689" = type { %"struct.std::__1::__hash_node_base.689"* }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.std::__1::__bucket_list_deallocator.691" }
%"class.std::__1::__bucket_list_deallocator.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"struct.std::__1::__hash_node_base.689" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.714", %"class.std::__1::unordered_map.186", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.714" = type { %"class.std::__1::__hash_table.715" }
%"class.std::__1::__hash_table.715" = type <{ %"class.std::__1::unique_ptr.716", %"class.std::__1::__compressed_pair.726", %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.734", [4 x i8] }>
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718", %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.std::__1::__hash_node_base.719"** }
%"struct.std::__1::__hash_node_base.719" = type { %"struct.std::__1::__hash_node_base.719"* }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.std::__1::__bucket_list_deallocator.721" }
%"class.std::__1::__bucket_list_deallocator.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"struct.std::__1::__hash_node_base.719" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.804" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.747", %"class.std::__1::map.771", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.782" }
%"class.std::__1::unordered_map.747" = type { %"class.std::__1::__hash_table.748" }
%"class.std::__1::__hash_table.748" = type <{ %"class.std::__1::unique_ptr.749", %"class.std::__1::__compressed_pair.759", %"class.std::__1::__compressed_pair.764", %"class.std::__1::__compressed_pair.767", [4 x i8] }>
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751", %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"struct.std::__1::__hash_node_base.752"** }
%"struct.std::__1::__hash_node_base.752" = type { %"struct.std::__1::__hash_node_base.752"* }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.std::__1::__bucket_list_deallocator.754" }
%"class.std::__1::__bucket_list_deallocator.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"struct.std::__1::__hash_node_base.752" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map.771" = type { %"class.std::__1::__tree.772" }
%"class.std::__1::__tree.772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { %"class.std::__1::function.784"*, %"class.std::__1::function.784"*, %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::function.784" = type { %"class.std::__1::__function::__policy_func.787" }
%"class.std::__1::__function::__policy_func.787" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.788", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.788" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.789"*)* }
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.std::__1::function.784"* }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.807", %"class.std::__1::map.831", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.842" }
%"class.std::__1::unordered_map.807" = type { %"class.std::__1::__hash_table.808" }
%"class.std::__1::__hash_table.808" = type <{ %"class.std::__1::unique_ptr.809", %"class.std::__1::__compressed_pair.819", %"class.std::__1::__compressed_pair.824", %"class.std::__1::__compressed_pair.827", [4 x i8] }>
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811", %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"struct.std::__1::__hash_node_base.812"** }
%"struct.std::__1::__hash_node_base.812" = type { %"struct.std::__1::__hash_node_base.812"* }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.std::__1::__bucket_list_deallocator.814" }
%"class.std::__1::__bucket_list_deallocator.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::__hash_node_base.812" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map.831" = type { %"class.std::__1::__tree.832" }
%"class.std::__1::__tree.832" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.833", %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.833" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { %"class.std::__1::function.844"*, %"class.std::__1::function.844"*, %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::function.844" = type { %"class.std::__1::__function::__policy_func.847" }
%"class.std::__1::__function::__policy_func.847" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.848", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.848" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.789"*)* }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.std::__1::function.844"* }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.863", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.863" = type { %"class.std::__1::__hash_table.864" }
%"class.std::__1::__hash_table.864" = type <{ %"class.std::__1::unique_ptr.865", %"class.std::__1::__compressed_pair.875", %"class.std::__1::__compressed_pair.880", %"class.std::__1::__compressed_pair.883", [4 x i8] }>
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867", %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"struct.std::__1::__hash_node_base.868"** }
%"struct.std::__1::__hash_node_base.868" = type { %"struct.std::__1::__hash_node_base.868"* }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.std::__1::__bucket_list_deallocator.870" }
%"class.std::__1::__bucket_list_deallocator.870" = type { %"class.std::__1::__compressed_pair.871" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.std::__1::__hash_node_base.868" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.887" }
%"class.std::__1::vector.887" = type { %"class.std::__1::__vector_base.888" }
%"class.std::__1::__vector_base.888" = type { i64*, i64*, %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { i64* }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.897" = type { %"class.std::__1::__vector_base.898" }
%"class.std::__1::__vector_base.898" = type { %"class.std::__1::unique_ptr.899"*, %"class.std::__1::unique_ptr.899"*, %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::unique_ptr.899"* }
%"class.std::__1::vector.272" = type { %"class.std::__1::__vector_base.273" }
%"class.std::__1::__vector_base.273" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"class.std::__1::function.910" = type { %"class.std::__1::__function::__policy_func.914" }
%"class.std::__1::__function::__policy_func.914" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.915", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.915" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::unordered_set.923" = type { %"class.std::__1::__hash_table.924" }
%"class.std::__1::__hash_table.924" = type <{ %"class.std::__1::unique_ptr.925", %"class.std::__1::__compressed_pair.935", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.942", [4 x i8] }>
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927", %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.std::__1::__hash_node_base.928"** }
%"struct.std::__1::__hash_node_base.928" = type { %"struct.std::__1::__hash_node_base.928"* }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.std::__1::__bucket_list_deallocator.930" }
%"class.std::__1::__bucket_list_deallocator.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::__hash_node_base.928" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node.1014" = type { %"struct.std::__1::__hash_node_base.928", i64, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%class.anon.1032 = type { i8, %"class.std::__1::vector.916"* }
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.spvtools::opt::Instruction"** }
%class.anon.1033 = type { i8, %"class.std::__1::vector.947"* }
%"class.std::__1::set.955" = type { %"class.std::__1::__tree.956" }
%"class.std::__1::__tree.956" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.957", %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short" = type { [5 x i32], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [3 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" = type { i32*, i64, i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.1039" = type { i8 }
%"class.std::__1::function.968" = type { %"class.std::__1::__function::__policy_func.972" }
%"class.std::__1::__function::__policy_func.972" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.973", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.973" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::vector.976" = type { %"class.std::__1::__vector_base.977" }
%"class.std::__1::__vector_base.977" = type { i32*, i32*, %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { i32* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"struct.spvtools::opt::analysis::DecorationManager::TargetData" }
%"struct.spvtools::opt::analysis::DecorationManager::TargetData" = type { %"class.std::__1::vector.916", %"class.std::__1::vector.916", %"class.std::__1::vector.916" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028", %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.std::__1::__hash_node_destructor.1030" }
%"class.std::__1::__hash_node_destructor.1030" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }

$_ZN8spvtools3opt11Instruction15RemoveInOperandEj = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjb = comdat any

$_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjb = comdat any

$_ZNSt3__1eqIjN8spvtools3opt8analysis17DecorationManager10TargetDataENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESN_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS5_PvEE = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE28__node_insert_unique_prepareEmRS5_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE = comdat any

$_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjbENKUlRKNS7_IS5_NS9_IS5_EEEEE_clESF_ = comdat any

$_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjbENKUlRKNS8_IPS4_NSA_ISD_EEEEE_clESH_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt8analysiseqERKNS1_17DecorationManager10TargetDataES5_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt8analysis17DecorationManager17ForEachDecorationEjjNS_8functionIFvRKNS5_11InstructionEEEEE3$_3FbSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNS_8functionIFbRKNS5_11InstructionEEEEE3$_4SC_EEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager21RemoveDecorationsFromEjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, %"class.std::__1::function.910"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.916", align 8
  %5 = alloca %"class.std::__1::unordered_set.923", align 8
  %6 = alloca %"class.std::__1::vector.916", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %962, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #11, !range !2
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %962, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %962, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %962

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %962, label %35

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 1
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 2
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %63, align 8
  %65 = bitcast %"class.std::__1::vector.916"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %4, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %4, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 24, i1 false) #11
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 9
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"class.spvtools::opt::Instruction"***
  %71 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 10
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"class.spvtools::opt::Instruction"***
  %74 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %73, align 8
  %75 = icmp eq %"class.spvtools::opt::Instruction"** %71, %74
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to %"class.spvtools::opt::Instruction"***
  %78 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 4
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %79 to %"class.spvtools::opt::Instruction"***
  %81 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %80, align 8
  %82 = icmp eq %"class.spvtools::opt::Instruction"** %78, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %60
  %84 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 0
  %86 = bitcast %"class.spvtools::opt::Instruction"*** %67 to i64*
  %87 = bitcast %"class.std::__1::vector.916"* %4 to i64*
  %88 = bitcast %"class.spvtools::opt::Instruction"*** %68 to i64*
  br label %129

89:                                               ; preds = %190, %60
  %90 = bitcast %"class.std::__1::unordered_set.923"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.std::__1::unordered_set.923", %"class.std::__1::unordered_set.923"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::unordered_set.923", %"class.std::__1::unordered_set.923"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::unordered_set.923", %"class.std::__1::unordered_set.923"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::unordered_set.923", %"class.std::__1::unordered_set.923"* %5, i64 0, i32 0, i32 4, i64 0
  %95 = getelementptr inbounds %"class.std::__1::unordered_set.923", %"class.std::__1::unordered_set.923"* %5, i64 0, i32 0, i32 3
  %96 = bitcast %"class.std::__1::__compressed_pair.942"* %95 to i32*
  %97 = bitcast i8* %94 to i32*
  store i32 -1431655766, i32* %97, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 6
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to %"class.spvtools::opt::Instruction"***
  %100 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 7
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.spvtools::opt::Instruction"***
  %103 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %102, align 8
  %104 = icmp eq %"class.spvtools::opt::Instruction"** %100, %103
  br i1 %104, label %358, label %105

105:                                              ; preds = %89
  %106 = bitcast %"class.std::__1::vector.916"* %6 to i8*
  %107 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %6, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %6, i64 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 1, i32 0
  %111 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 0
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %108 to i64*
  %113 = bitcast %"class.std::__1::vector.916"* %6 to i64*
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %109 to i64*
  %115 = getelementptr inbounds %"class.std::__1::unordered_set.923", %"class.std::__1::unordered_set.923"* %5, i64 0, i32 0
  %116 = bitcast %"class.spvtools::opt::Instruction"*** %67 to i64*
  %117 = bitcast %"class.std::__1::vector.916"* %4 to i64*
  %118 = bitcast %"class.spvtools::opt::Instruction"*** %68 to i64*
  %119 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  %120 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  %121 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %122 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %123 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %124 = bitcast i32** %122 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %125 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %126 = bitcast %"class.std::__1::unique_ptr.254"* %125 to i64*
  %127 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %123 to i32*
  %128 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %371

129:                                              ; preds = %83, %190
  %130 = phi i64 [ 0, %83 ], [ %191, %190 ]
  %131 = phi %"class.spvtools::opt::Instruction"** [ null, %83 ], [ %192, %190 ]
  %132 = phi %"class.spvtools::opt::Instruction"** [ %78, %83 ], [ %193, %190 ]
  %133 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %134 = ptrtoint %"class.spvtools::opt::Instruction"* %133 to i64
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %84, align 8
  %136 = tail call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* %85, %"class.spvtools::opt::Instruction"* dereferenceable(112) %133) #11
  br i1 %136, label %137, label %190

137:                                              ; preds = %129
  %138 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %68, align 8
  %139 = icmp eq %"class.spvtools::opt::Instruction"** %131, %138
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.spvtools::opt::Instruction"** %131 to i64*
  store i64 %134, i64* %141, align 8
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %131, i64 1
  %143 = ptrtoint %"class.spvtools::opt::Instruction"** %142 to i64
  store i64 %143, i64* %86, align 8
  br label %190

144:                                              ; preds = %137
  %145 = ptrtoint %"class.spvtools::opt::Instruction"** %138 to i64
  %146 = load i64, i64* %87, align 8
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 3
  %149 = add nsw i64 %148, 1
  %150 = icmp ugt i64 %149, 2305843009213693951
  br i1 %150, label %151, label %153

151:                                              ; preds = %144
  %152 = bitcast %"class.std::__1::vector.916"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %152) #12
  unreachable

153:                                              ; preds = %144
  %154 = icmp ult i64 %148, 1152921504606846975
  br i1 %154, label %155, label %163

155:                                              ; preds = %153
  %156 = ashr exact i64 %147, 2
  %157 = icmp ult i64 %156, %149
  %158 = select i1 %157, i64 %149, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %168, label %160

160:                                              ; preds = %155
  %161 = icmp ugt i64 %158, 2305843009213693951
  br i1 %161, label %162, label %163

162:                                              ; preds = %160
  tail call void @abort() #12
  unreachable

163:                                              ; preds = %160, %153
  %164 = phi i64 [ %158, %160 ], [ 2305843009213693951, %153 ]
  %165 = shl i64 %164, 3
  %166 = tail call i8* @_Znwm(i64 %165) #13
  %167 = bitcast i8* %166 to %"class.spvtools::opt::Instruction"**
  br label %168

168:                                              ; preds = %163, %155
  %169 = phi i64 [ %164, %163 ], [ 0, %155 ]
  %170 = phi %"class.spvtools::opt::Instruction"** [ %167, %163 ], [ null, %155 ]
  %171 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %170, i64 %148
  %172 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %170, i64 %169
  %173 = ptrtoint %"class.spvtools::opt::Instruction"** %172 to i64
  %174 = bitcast %"class.spvtools::opt::Instruction"** %171 to i64*
  store i64 %134, i64* %174, align 8
  %175 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %171, i64 1
  %176 = ptrtoint %"class.spvtools::opt::Instruction"** %175 to i64
  %177 = sub i64 %130, %146
  %178 = ashr exact i64 %177, 3
  %179 = sub nsw i64 0, %178
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %171, i64 %179
  %181 = ptrtoint %"class.spvtools::opt::Instruction"** %180 to i64
  %182 = icmp sgt i64 %177, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %168
  %184 = bitcast %"class.spvtools::opt::Instruction"** %180 to i8*
  %185 = inttoptr i64 %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 %177, i1 false) #11
  br label %186

186:                                              ; preds = %183, %168
  store i64 %181, i64* %87, align 8
  store i64 %176, i64* %86, align 8
  store i64 %173, i64* %88, align 8
  %187 = icmp eq i64 %146, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %186
  %189 = inttoptr i64 %146 to i8*
  tail call void @_ZdlPv(i8* %189) #13
  br label %190

190:                                              ; preds = %188, %186, %140, %129
  %191 = phi i64 [ %176, %188 ], [ %176, %186 ], [ %143, %140 ], [ %130, %129 ]
  %192 = phi %"class.spvtools::opt::Instruction"** [ %175, %188 ], [ %175, %186 ], [ %142, %140 ], [ %131, %129 ]
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, i64 1
  %194 = icmp eq %"class.spvtools::opt::Instruction"** %193, %81
  br i1 %194, label %89, label %129

195:                                              ; preds = %813
  %196 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, align 8
  %197 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %102, align 8
  %198 = icmp eq %"class.spvtools::opt::Instruction"** %196, %197
  br i1 %198, label %358, label %199

199:                                              ; preds = %195
  %200 = load i64, i64* %92, align 8
  %201 = icmp eq i64 %200, 0
  %202 = call i64 @llvm.ctpop.i64(i64 %200) #11, !range !2
  %203 = icmp ugt i64 %202, 1
  %204 = add i64 %200, -1
  %205 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %91, align 8
  br label %206

206:                                              ; preds = %264, %199
  %207 = phi %"class.spvtools::opt::Instruction"** [ %196, %199 ], [ %265, %264 ]
  %208 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %207, align 8
  %209 = ptrtoint %"class.spvtools::opt::Instruction"* %208 to i64
  %210 = lshr i64 %209, 32
  %211 = shl i64 %209, 3
  %212 = and i64 %211, 4294967288
  %213 = add nuw nsw i64 %212, 8
  %214 = xor i64 %213, %210
  %215 = mul i64 %214, -7070675565921424023
  %216 = lshr i64 %215, 47
  %217 = xor i64 %215, %210
  %218 = xor i64 %217, %216
  %219 = mul i64 %218, -7070675565921424023
  %220 = lshr i64 %219, 47
  %221 = xor i64 %220, %219
  %222 = mul i64 %221, -7070675565921424023
  br i1 %201, label %264, label %223

223:                                              ; preds = %206
  br i1 %203, label %226, label %224

224:                                              ; preds = %223
  %225 = and i64 %222, %204
  br label %230

226:                                              ; preds = %223
  %227 = icmp ult i64 %222, %200
  br i1 %227, label %230, label %228

228:                                              ; preds = %226
  %229 = urem i64 %222, %200
  br label %230

230:                                              ; preds = %228, %226, %224
  %231 = phi i64 [ %225, %224 ], [ %229, %228 ], [ %222, %226 ]
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %205, i64 %231
  %233 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %232, align 8
  %234 = icmp eq %"struct.std::__1::__hash_node_base.928"* %233, null
  br i1 %234, label %264, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %233, i64 0, i32 0
  %237 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %236, align 8
  %238 = icmp eq %"struct.std::__1::__hash_node_base.928"* %237, null
  br i1 %238, label %264, label %239

239:                                              ; preds = %235, %260
  %240 = phi %"struct.std::__1::__hash_node_base.928"* [ %262, %260 ], [ %237, %235 ]
  %241 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %240, i64 1
  %242 = bitcast %"struct.std::__1::__hash_node_base.928"* %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = icmp eq i64 %222, %243
  br i1 %244, label %255, label %245

245:                                              ; preds = %239
  br i1 %203, label %248, label %246

246:                                              ; preds = %245
  %247 = and i64 %243, %204
  br label %252

248:                                              ; preds = %245
  %249 = icmp ult i64 %243, %200
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = urem i64 %243, %200
  br label %252

252:                                              ; preds = %250, %248, %246
  %253 = phi i64 [ %247, %246 ], [ %251, %250 ], [ %243, %248 ]
  %254 = icmp eq i64 %253, %231
  br i1 %254, label %260, label %264

255:                                              ; preds = %239
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %240, i64 2
  %257 = bitcast %"struct.std::__1::__hash_node_base.928"* %256 to %"class.spvtools::opt::Instruction"**
  %258 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %257, align 8
  %259 = icmp eq %"class.spvtools::opt::Instruction"* %258, %208
  br i1 %259, label %267, label %260

260:                                              ; preds = %255, %252
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %240, i64 0, i32 0
  %262 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %261, align 8
  %263 = icmp eq %"struct.std::__1::__hash_node_base.928"* %262, null
  br i1 %263, label %264, label %239

264:                                              ; preds = %260, %252, %235, %230, %206
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %207, i64 1
  %266 = icmp eq %"class.spvtools::opt::Instruction"** %265, %197
  br i1 %266, label %358, label %206

267:                                              ; preds = %255
  %268 = icmp eq %"class.spvtools::opt::Instruction"** %207, %197
  br i1 %268, label %358, label %269

269:                                              ; preds = %267
  %270 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %207, i64 1
  %271 = icmp eq %"class.spvtools::opt::Instruction"** %270, %197
  br i1 %271, label %353, label %272

272:                                              ; preds = %269
  %273 = ptrtoint %"class.spvtools::opt::Instruction"** %207 to i64
  br label %274

274:                                              ; preds = %272, %346
  %275 = phi %"class.spvtools::opt::Instruction"** [ %348, %346 ], [ %270, %272 ]
  %276 = phi i64 [ %347, %346 ], [ %273, %272 ]
  %277 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %275, align 8
  %278 = ptrtoint %"class.spvtools::opt::Instruction"* %277 to i64
  %279 = lshr i64 %278, 32
  %280 = shl i64 %278, 3
  %281 = and i64 %280, 4294967288
  %282 = add nuw nsw i64 %281, 8
  %283 = xor i64 %282, %279
  %284 = mul i64 %283, -7070675565921424023
  %285 = lshr i64 %284, 47
  %286 = xor i64 %284, %279
  %287 = xor i64 %286, %285
  %288 = mul i64 %287, -7070675565921424023
  %289 = lshr i64 %288, 47
  %290 = xor i64 %289, %288
  %291 = mul i64 %290, -7070675565921424023
  %292 = load i64, i64* %92, align 8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %341, label %294

294:                                              ; preds = %274
  %295 = call i64 @llvm.ctpop.i64(i64 %292) #11, !range !2
  %296 = icmp ugt i64 %295, 1
  br i1 %296, label %300, label %297

297:                                              ; preds = %294
  %298 = add i64 %292, -1
  %299 = and i64 %291, %298
  br label %304

300:                                              ; preds = %294
  %301 = icmp ult i64 %291, %292
  br i1 %301, label %304, label %302

302:                                              ; preds = %300
  %303 = urem i64 %291, %292
  br label %304

304:                                              ; preds = %302, %300, %297
  %305 = phi i64 [ %299, %297 ], [ %303, %302 ], [ %291, %300 ]
  %306 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %91, align 8
  %307 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %306, i64 %305
  %308 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %307, align 8
  %309 = icmp eq %"struct.std::__1::__hash_node_base.928"* %308, null
  br i1 %309, label %341, label %310

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %308, i64 0, i32 0
  %312 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %311, align 8
  %313 = icmp eq %"struct.std::__1::__hash_node_base.928"* %312, null
  br i1 %313, label %341, label %314

314:                                              ; preds = %310
  %315 = add i64 %292, -1
  br label %316

316:                                              ; preds = %337, %314
  %317 = phi %"struct.std::__1::__hash_node_base.928"* [ %312, %314 ], [ %339, %337 ]
  %318 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %317, i64 1
  %319 = bitcast %"struct.std::__1::__hash_node_base.928"* %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = icmp eq i64 %291, %320
  br i1 %321, label %332, label %322

322:                                              ; preds = %316
  br i1 %296, label %325, label %323

323:                                              ; preds = %322
  %324 = and i64 %320, %315
  br label %329

325:                                              ; preds = %322
  %326 = icmp ult i64 %320, %292
  br i1 %326, label %329, label %327

327:                                              ; preds = %325
  %328 = urem i64 %320, %292
  br label %329

329:                                              ; preds = %327, %325, %323
  %330 = phi i64 [ %324, %323 ], [ %328, %327 ], [ %320, %325 ]
  %331 = icmp eq i64 %330, %305
  br i1 %331, label %337, label %341

332:                                              ; preds = %316
  %333 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %317, i64 2
  %334 = bitcast %"struct.std::__1::__hash_node_base.928"* %333 to %"class.spvtools::opt::Instruction"**
  %335 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %334, align 8
  %336 = icmp eq %"class.spvtools::opt::Instruction"* %335, %277
  br i1 %336, label %346, label %337

337:                                              ; preds = %332, %329
  %338 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %317, i64 0, i32 0
  %339 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %338, align 8
  %340 = icmp eq %"struct.std::__1::__hash_node_base.928"* %339, null
  br i1 %340, label %341, label %316

341:                                              ; preds = %337, %329, %310, %304, %274
  %342 = inttoptr i64 %276 to %"class.spvtools::opt::Instruction"**
  %343 = inttoptr i64 %276 to i64*
  store i64 %278, i64* %343, align 8
  %344 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %342, i64 1
  %345 = ptrtoint %"class.spvtools::opt::Instruction"** %344 to i64
  br label %346

346:                                              ; preds = %332, %341
  %347 = phi i64 [ %345, %341 ], [ %276, %332 ]
  %348 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %275, i64 1
  %349 = icmp eq %"class.spvtools::opt::Instruction"** %348, %197
  br i1 %349, label %350, label %274

350:                                              ; preds = %346
  %351 = inttoptr i64 %347 to %"class.spvtools::opt::Instruction"**
  %352 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %102, align 8
  br label %353

353:                                              ; preds = %350, %269
  %354 = phi %"class.spvtools::opt::Instruction"** [ %197, %269 ], [ %352, %350 ]
  %355 = phi %"class.spvtools::opt::Instruction"** [ %207, %269 ], [ %351, %350 ]
  %356 = icmp eq %"class.spvtools::opt::Instruction"** %355, %354
  br i1 %356, label %358, label %357

357:                                              ; preds = %353
  store %"class.spvtools::opt::Instruction"** %355, %"class.spvtools::opt::Instruction"*** %102, align 8
  br label %358

358:                                              ; preds = %264, %89, %195, %267, %353, %357
  %359 = phi i8 [ %808, %353 ], [ %808, %357 ], [ %808, %267 ], [ %808, %195 ], [ 0, %89 ], [ %808, %264 ]
  %360 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %66, align 8
  %361 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %67, align 8
  %362 = icmp ne %"class.spvtools::opt::Instruction"** %360, %361
  %363 = zext i1 %362 to i32
  %364 = and i8 %359, 1
  %365 = zext i8 %364 to i32
  %366 = or i32 %363, %365
  %367 = icmp eq %"class.spvtools::opt::Instruction"** %360, %361
  br i1 %367, label %368, label %825

368:                                              ; preds = %358
  %369 = ptrtoint %"class.spvtools::opt::Instruction"** %360 to i64
  %370 = bitcast %"class.std::__1::vector.916"* %4 to i64*
  br label %820

371:                                              ; preds = %105, %813
  %372 = phi i8 [ 0, %105 ], [ %808, %813 ]
  %373 = phi %"class.spvtools::opt::Instruction"** [ %100, %105 ], [ %814, %813 ]
  %374 = bitcast %"class.spvtools::opt::Instruction"** %373 to i64*
  %375 = load i64, i64* %374, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 24, i1 false) #11
  %376 = inttoptr i64 %375 to %"class.spvtools::opt::Instruction"*
  %377 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %376, i64 0, i32 3
  %378 = load i8, i8* %377, align 4, !range !3
  %379 = icmp eq i8 %378, 0
  %380 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %376, i64 0, i32 4
  %381 = load i8, i8* %380, align 1, !range !3
  %382 = icmp eq i8 %381, 0
  %383 = select i1 %382, i32 1, i32 2
  %384 = xor i1 %382, true
  %385 = zext i1 %384 to i32
  %386 = select i1 %379, i32 %385, i32 %383
  %387 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %376, i32 %386) #11
  %388 = zext i32 %387 to i64
  %389 = load i64, i64* %9, align 8
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %438, label %391

391:                                              ; preds = %371
  %392 = call i64 @llvm.ctpop.i64(i64 %389) #11, !range !2
  %393 = icmp ugt i64 %392, 1
  br i1 %393, label %397, label %394

394:                                              ; preds = %391
  %395 = add i64 %389, 4294967295
  %396 = and i64 %395, %388
  br label %401

397:                                              ; preds = %391
  %398 = icmp ugt i64 %389, %388
  br i1 %398, label %401, label %399

399:                                              ; preds = %397
  %400 = urem i64 %388, %389
  br label %401

401:                                              ; preds = %399, %397, %394
  %402 = phi i64 [ %396, %394 ], [ %400, %399 ], [ %388, %397 ]
  %403 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %404 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %403, i64 %402
  %405 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %404, align 8
  %406 = icmp eq %"struct.std::__1::__hash_node_base"* %405, null
  br i1 %406, label %438, label %407

407:                                              ; preds = %401
  %408 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %405, i64 0, i32 0
  %409 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %408, align 8
  %410 = icmp eq %"struct.std::__1::__hash_node_base"* %409, null
  br i1 %410, label %438, label %411

411:                                              ; preds = %407
  %412 = add i64 %389, -1
  br label %413

413:                                              ; preds = %434, %411
  %414 = phi %"struct.std::__1::__hash_node_base"* [ %409, %411 ], [ %436, %434 ]
  %415 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %414, i64 1
  %416 = bitcast %"struct.std::__1::__hash_node_base"* %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = icmp eq i64 %417, %388
  br i1 %418, label %429, label %419

419:                                              ; preds = %413
  br i1 %393, label %422, label %420

420:                                              ; preds = %419
  %421 = and i64 %417, %412
  br label %426

422:                                              ; preds = %419
  %423 = icmp ult i64 %417, %389
  br i1 %423, label %426, label %424

424:                                              ; preds = %422
  %425 = urem i64 %417, %389
  br label %426

426:                                              ; preds = %424, %422, %420
  %427 = phi i64 [ %421, %420 ], [ %425, %424 ], [ %417, %422 ]
  %428 = icmp eq i64 %427, %402
  br i1 %428, label %434, label %438

429:                                              ; preds = %413
  %430 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %414, i64 2
  %431 = bitcast %"struct.std::__1::__hash_node_base"* %430 to i32*
  %432 = load i32, i32* %431, align 4
  %433 = icmp eq i32 %432, %387
  br i1 %433, label %438, label %434

434:                                              ; preds = %429, %426
  %435 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %414, i64 0, i32 0
  %436 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %435, align 8
  %437 = icmp eq %"struct.std::__1::__hash_node_base"* %436, null
  br i1 %437, label %438, label %413

438:                                              ; preds = %426, %429, %434, %371, %401, %407
  %439 = phi %"struct.std::__1::__hash_node_base"* [ null, %401 ], [ null, %371 ], [ null, %407 ], [ %414, %429 ], [ null, %434 ], [ null, %426 ]
  %440 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %439, i64 3
  %441 = bitcast %"struct.std::__1::__hash_node_base"* %440 to %"class.spvtools::opt::Instruction"***
  %442 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %441, align 8
  %443 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %439, i64 4
  %444 = bitcast %"struct.std::__1::__hash_node_base"* %443 to %"class.spvtools::opt::Instruction"***
  %445 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %444, align 8
  %446 = icmp eq %"class.spvtools::opt::Instruction"** %442, %445
  br i1 %446, label %447, label %469

447:                                              ; preds = %438
  %448 = ptrtoint %"class.spvtools::opt::Instruction"** %442 to i64
  %449 = ptrtoint %"class.spvtools::opt::Instruction"** %445 to i64
  br label %458

450:                                              ; preds = %528
  %451 = load i64, i64* %112, align 8
  %452 = load i64, i64* %113, align 8
  %453 = bitcast %"struct.std::__1::__hash_node_base"* %443 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = bitcast %"struct.std::__1::__hash_node_base"* %440 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = inttoptr i64 %452 to %"class.spvtools::opt::Instruction"**
  br label %458

458:                                              ; preds = %447, %450
  %459 = phi %"class.spvtools::opt::Instruction"** [ %457, %450 ], [ null, %447 ]
  %460 = phi i64 [ %456, %450 ], [ %448, %447 ]
  %461 = phi i64 [ %454, %450 ], [ %449, %447 ]
  %462 = phi i64 [ %452, %450 ], [ 0, %447 ]
  %463 = phi i64 [ %451, %450 ], [ 0, %447 ]
  %464 = sub i64 %463, %462
  %465 = sub i64 %461, %460
  %466 = icmp ne i64 %464, %465
  %467 = icmp eq i64 %465, 0
  %468 = or i1 %466, %467
  br i1 %468, label %531, label %806

469:                                              ; preds = %438, %528
  %470 = phi %"class.spvtools::opt::Instruction"** [ %529, %528 ], [ %442, %438 ]
  %471 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %470, align 8
  %472 = ptrtoint %"class.spvtools::opt::Instruction"* %471 to i64
  %473 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %110, align 8
  %474 = call zeroext i1 %473(%"union.std::__1::__function::__policy_storage"* %111, %"class.spvtools::opt::Instruction"* dereferenceable(112) %471) #11
  br i1 %474, label %528, label %475

475:                                              ; preds = %469
  %476 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %108, align 8
  %477 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %109, align 8
  %478 = icmp eq %"class.spvtools::opt::Instruction"** %476, %477
  %479 = ptrtoint %"class.spvtools::opt::Instruction"** %477 to i64
  br i1 %478, label %484, label %480

480:                                              ; preds = %475
  %481 = bitcast %"class.spvtools::opt::Instruction"** %476 to i64*
  store i64 %472, i64* %481, align 8
  %482 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %476, i64 1
  %483 = ptrtoint %"class.spvtools::opt::Instruction"** %482 to i64
  store i64 %483, i64* %112, align 8
  br label %528

484:                                              ; preds = %475
  %485 = ptrtoint %"class.spvtools::opt::Instruction"** %476 to i64
  %486 = load i64, i64* %113, align 8
  %487 = sub i64 %485, %486
  %488 = ashr exact i64 %487, 3
  %489 = add nsw i64 %488, 1
  %490 = icmp ugt i64 %489, 2305843009213693951
  br i1 %490, label %491, label %493

491:                                              ; preds = %484
  %492 = bitcast %"class.std::__1::vector.916"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %492) #12
  unreachable

493:                                              ; preds = %484
  %494 = sub i64 %479, %486
  %495 = ashr exact i64 %494, 3
  %496 = icmp ult i64 %495, 1152921504606846975
  br i1 %496, label %497, label %505

497:                                              ; preds = %493
  %498 = ashr exact i64 %494, 2
  %499 = icmp ult i64 %498, %489
  %500 = select i1 %499, i64 %489, i64 %498
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %510, label %502

502:                                              ; preds = %497
  %503 = icmp ugt i64 %500, 2305843009213693951
  br i1 %503, label %504, label %505

504:                                              ; preds = %502
  call void @abort() #12
  unreachable

505:                                              ; preds = %502, %493
  %506 = phi i64 [ %500, %502 ], [ 2305843009213693951, %493 ]
  %507 = shl i64 %506, 3
  %508 = call i8* @_Znwm(i64 %507) #13
  %509 = bitcast i8* %508 to %"class.spvtools::opt::Instruction"**
  br label %510

510:                                              ; preds = %505, %497
  %511 = phi i64 [ %506, %505 ], [ 0, %497 ]
  %512 = phi i8* [ %508, %505 ], [ null, %497 ]
  %513 = phi %"class.spvtools::opt::Instruction"** [ %509, %505 ], [ null, %497 ]
  %514 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %513, i64 %488
  %515 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %513, i64 %511
  %516 = ptrtoint %"class.spvtools::opt::Instruction"** %515 to i64
  %517 = bitcast %"class.spvtools::opt::Instruction"** %514 to i64*
  store i64 %472, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %514, i64 1
  %519 = ptrtoint %"class.spvtools::opt::Instruction"** %518 to i64
  %520 = ptrtoint %"class.spvtools::opt::Instruction"** %513 to i64
  %521 = icmp sgt i64 %487, 0
  br i1 %521, label %522, label %524

522:                                              ; preds = %510
  %523 = inttoptr i64 %486 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %512, i8* align 8 %523, i64 %487, i1 false) #11
  br label %524

524:                                              ; preds = %522, %510
  store i64 %520, i64* %113, align 8
  store i64 %519, i64* %112, align 8
  store i64 %516, i64* %114, align 8
  %525 = icmp eq i64 %486, 0
  br i1 %525, label %528, label %526

526:                                              ; preds = %524
  %527 = inttoptr i64 %486 to i8*
  call void @_ZdlPv(i8* %527) #13
  br label %528

528:                                              ; preds = %526, %524, %480, %469
  %529 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %470, i64 1
  %530 = icmp eq %"class.spvtools::opt::Instruction"** %529, %445
  br i1 %530, label %450, label %469

531:                                              ; preds = %458
  %532 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %376, i64 0, i32 2
  %533 = load i32, i32* %532, align 8
  %534 = icmp eq i32 %533, 74
  %535 = select i1 %534, i32 1, i32 2
  %536 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %376, i64 0, i32 6
  %537 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %376, i64 0, i32 6, i32 0, i32 1
  %538 = bitcast %"struct.spvtools::opt::Operand"** %537 to i64*
  %539 = bitcast %"class.std::__1::vector.252"* %536 to i64*
  %540 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %376, i64 0, i32 6, i32 0, i32 0
  br label %541

541:                                              ; preds = %567, %531
  %542 = phi i32 [ %568, %567 ], [ 1, %531 ]
  %543 = phi i8 [ %545, %567 ], [ %372, %531 ]
  br label %544

544:                                              ; preds = %541, %623
  %545 = phi i8 [ 1, %623 ], [ %543, %541 ]
  %546 = load i64, i64* %538, align 8
  %547 = load i64, i64* %539, align 8
  %548 = sub i64 %546, %547
  %549 = sdiv exact i64 %548, 48
  %550 = load i8, i8* %377, align 4, !range !3
  %551 = icmp eq i8 %550, 0
  %552 = load i8, i8* %380, align 1, !range !3
  %553 = icmp eq i8 %552, 0
  %554 = select i1 %553, i32 1, i32 2
  %555 = xor i1 %553, true
  %556 = zext i1 %555 to i32
  %557 = select i1 %551, i32 %556, i32 %554
  %558 = trunc i64 %549 to i32
  %559 = sub i32 %558, %557
  %560 = icmp ult i32 %542, %559
  br i1 %560, label %563, label %561

561:                                              ; preds = %544
  %562 = icmp eq i32 %559, 1
  br i1 %562, label %624, label %703

563:                                              ; preds = %544
  %564 = add i32 %557, %542
  %565 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %376, i32 %564) #11
  %566 = icmp eq i32 %565, %1
  br i1 %566, label %569, label %567

567:                                              ; preds = %563
  %568 = add i32 %542, %535
  br label %541

569:                                              ; preds = %563
  %570 = load i64, i64* %538, align 8
  %571 = load i64, i64* %539, align 8
  %572 = sub i64 %570, %571
  %573 = sdiv exact i64 %572, 48
  %574 = load i8, i8* %377, align 4, !range !3
  %575 = icmp eq i8 %574, 0
  %576 = load i8, i8* %380, align 1, !range !3
  %577 = icmp eq i8 %576, 0
  %578 = select i1 %577, i32 1, i32 2
  %579 = xor i1 %577, true
  %580 = zext i1 %579 to i32
  %581 = select i1 %575, i32 %580, i32 %578
  %582 = trunc i64 %573 to i32
  %583 = sub i32 %582, %581
  %584 = sub i32 %583, %535
  %585 = icmp ult i32 %542, %584
  %586 = inttoptr i64 %571 to %"struct.spvtools::opt::Operand"*
  br i1 %585, label %587, label %598

587:                                              ; preds = %569
  %588 = add i32 %584, %581
  %589 = zext i32 %588 to i64
  %590 = add i32 %581, %542
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %586, i64 %589, i32 0
  %593 = load i32, i32* %592, align 8
  %594 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %586, i64 %591, i32 0
  store i32 %593, i32* %594, align 8
  %595 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %586, i64 %591, i32 1
  %596 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %586, i64 %589, i32 1
  %597 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %595, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %596) #11
  br label %598

598:                                              ; preds = %587, %569
  br i1 %534, label %623, label %599

599:                                              ; preds = %598
  br i1 %585, label %600, label %621

600:                                              ; preds = %599
  %601 = load i8, i8* %377, align 4, !range !3
  %602 = icmp eq i8 %601, 0
  %603 = load i8, i8* %380, align 1, !range !3
  %604 = icmp eq i8 %603, 0
  %605 = select i1 %604, i32 1, i32 2
  %606 = xor i1 %604, true
  %607 = zext i1 %606 to i32
  %608 = select i1 %602, i32 %607, i32 %605
  %609 = add nuw nsw i32 %608, 1
  %610 = add i32 %609, %584
  %611 = zext i32 %610 to i64
  %612 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %540, align 8
  %613 = add i32 %609, %542
  %614 = zext i32 %613 to i64
  %615 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %612, i64 %611, i32 0
  %616 = load i32, i32* %615, align 8
  %617 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %612, i64 %614, i32 0
  store i32 %616, i32* %617, align 8
  %618 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %612, i64 %614, i32 1
  %619 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %612, i64 %611, i32 1
  %620 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %618, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %619) #11
  br label %621

621:                                              ; preds = %600, %599
  %622 = add i32 %584, 1
  call void @_ZN8spvtools3opt11Instruction15RemoveInOperandEj(%"class.spvtools::opt::Instruction"* %376, i32 %622)
  br label %623

623:                                              ; preds = %598, %621
  call void @_ZN8spvtools3opt11Instruction15RemoveInOperandEj(%"class.spvtools::opt::Instruction"* %376, i32 %584)
  br label %544

624:                                              ; preds = %561
  %625 = call i8* @_Znwm(i64 24) #13, !noalias !4
  %626 = getelementptr inbounds i8, i8* %625, i64 16
  %627 = bitcast i8* %626 to i64*
  store i64 %375, i64* %627, align 8, !noalias !4
  %628 = lshr i64 %375, 32
  %629 = shl i64 %375, 3
  %630 = and i64 %629, 4294967288
  %631 = add nuw nsw i64 %630, 8
  %632 = xor i64 %631, %628
  %633 = mul i64 %632, -7070675565921424023
  %634 = lshr i64 %633, 47
  %635 = xor i64 %633, %628
  %636 = xor i64 %635, %634
  %637 = mul i64 %636, -7070675565921424023
  %638 = lshr i64 %637, 47
  %639 = xor i64 %638, %637
  %640 = mul i64 %639, -7070675565921424023
  %641 = getelementptr inbounds i8, i8* %625, i64 8
  %642 = bitcast i8* %641 to i64*
  store i64 %640, i64* %642, align 8, !noalias !4
  %643 = bitcast i8* %625 to %"struct.std::__1::__hash_node_base.928"**
  store %"struct.std::__1::__hash_node_base.928"* null, %"struct.std::__1::__hash_node_base.928"** %643, align 8, !noalias !4
  %644 = bitcast i8* %625 to %"struct.std::__1::__hash_node.1014"*
  %645 = call { %"struct.std::__1::__hash_node_base.928"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS5_PvEE(%"class.std::__1::__hash_table.924"* nonnull %115, %"struct.std::__1::__hash_node.1014"* nonnull %644) #11
  %646 = extractvalue { %"struct.std::__1::__hash_node_base.928"*, i8 } %645, 1
  %647 = and i8 %646, 1
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %649, label %650

649:                                              ; preds = %624
  call void @_ZdlPv(i8* nonnull %625) #13
  br label %650

650:                                              ; preds = %624, %649
  %651 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %67, align 8
  %652 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %68, align 8
  %653 = icmp eq %"class.spvtools::opt::Instruction"** %651, %652
  %654 = ptrtoint %"class.spvtools::opt::Instruction"** %652 to i64
  br i1 %653, label %659, label %655

655:                                              ; preds = %650
  %656 = bitcast %"class.spvtools::opt::Instruction"** %651 to i64*
  store i64 %375, i64* %656, align 8
  %657 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %651, i64 1
  %658 = ptrtoint %"class.spvtools::opt::Instruction"** %657 to i64
  store i64 %658, i64* %116, align 8
  br label %733

659:                                              ; preds = %650
  %660 = ptrtoint %"class.spvtools::opt::Instruction"** %651 to i64
  %661 = load i64, i64* %117, align 8
  %662 = sub i64 %660, %661
  %663 = ashr exact i64 %662, 3
  %664 = add nsw i64 %663, 1
  %665 = icmp ugt i64 %664, 2305843009213693951
  br i1 %665, label %666, label %668

666:                                              ; preds = %659
  %667 = bitcast %"class.std::__1::vector.916"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %667) #12
  unreachable

668:                                              ; preds = %659
  %669 = sub i64 %654, %661
  %670 = ashr exact i64 %669, 3
  %671 = icmp ult i64 %670, 1152921504606846975
  br i1 %671, label %672, label %680

672:                                              ; preds = %668
  %673 = ashr exact i64 %669, 2
  %674 = icmp ult i64 %673, %664
  %675 = select i1 %674, i64 %664, i64 %673
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %685, label %677

677:                                              ; preds = %672
  %678 = icmp ugt i64 %675, 2305843009213693951
  br i1 %678, label %679, label %680

679:                                              ; preds = %677
  call void @abort() #12
  unreachable

680:                                              ; preds = %677, %668
  %681 = phi i64 [ %675, %677 ], [ 2305843009213693951, %668 ]
  %682 = shl i64 %681, 3
  %683 = call i8* @_Znwm(i64 %682) #13
  %684 = bitcast i8* %683 to %"class.spvtools::opt::Instruction"**
  br label %685

685:                                              ; preds = %680, %672
  %686 = phi i64 [ %681, %680 ], [ 0, %672 ]
  %687 = phi i8* [ %683, %680 ], [ null, %672 ]
  %688 = phi %"class.spvtools::opt::Instruction"** [ %684, %680 ], [ null, %672 ]
  %689 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %688, i64 %663
  %690 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %688, i64 %686
  %691 = ptrtoint %"class.spvtools::opt::Instruction"** %690 to i64
  %692 = bitcast %"class.spvtools::opt::Instruction"** %689 to i64*
  store i64 %375, i64* %692, align 8
  %693 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %689, i64 1
  %694 = ptrtoint %"class.spvtools::opt::Instruction"** %693 to i64
  %695 = ptrtoint %"class.spvtools::opt::Instruction"** %688 to i64
  %696 = icmp sgt i64 %662, 0
  br i1 %696, label %697, label %699

697:                                              ; preds = %685
  %698 = inttoptr i64 %661 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %687, i8* align 8 %698, i64 %662, i1 false) #11
  br label %699

699:                                              ; preds = %697, %685
  store i64 %695, i64* %117, align 8
  store i64 %694, i64* %116, align 8
  store i64 %691, i64* %118, align 8
  %700 = icmp eq i64 %661, 0
  br i1 %700, label %733, label %701

701:                                              ; preds = %699
  %702 = inttoptr i64 %661 to i8*
  call void @_ZdlPv(i8* %702) #13
  br label %733

703:                                              ; preds = %561
  %704 = and i8 %545, 1
  %705 = icmp eq i8 %704, 0
  br i1 %705, label %733, label %706

706:                                              ; preds = %703
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %64, %"class.spvtools::opt::Instruction"* %376) #11
  %707 = call i8* @_Znwm(i64 24) #13, !noalias !7
  %708 = getelementptr inbounds i8, i8* %707, i64 16
  %709 = bitcast i8* %708 to i64*
  store i64 %375, i64* %709, align 8, !noalias !7
  %710 = lshr i64 %375, 32
  %711 = shl i64 %375, 3
  %712 = and i64 %711, 4294967288
  %713 = add nuw nsw i64 %712, 8
  %714 = xor i64 %713, %710
  %715 = mul i64 %714, -7070675565921424023
  %716 = lshr i64 %715, 47
  %717 = xor i64 %715, %710
  %718 = xor i64 %717, %716
  %719 = mul i64 %718, -7070675565921424023
  %720 = lshr i64 %719, 47
  %721 = xor i64 %720, %719
  %722 = mul i64 %721, -7070675565921424023
  %723 = getelementptr inbounds i8, i8* %707, i64 8
  %724 = bitcast i8* %723 to i64*
  store i64 %722, i64* %724, align 8, !noalias !7
  %725 = bitcast i8* %707 to %"struct.std::__1::__hash_node_base.928"**
  store %"struct.std::__1::__hash_node_base.928"* null, %"struct.std::__1::__hash_node_base.928"** %725, align 8, !noalias !7
  %726 = bitcast i8* %707 to %"struct.std::__1::__hash_node.1014"*
  %727 = call { %"struct.std::__1::__hash_node_base.928"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS5_PvEE(%"class.std::__1::__hash_table.924"* nonnull %115, %"struct.std::__1::__hash_node.1014"* nonnull %726) #11
  %728 = extractvalue { %"struct.std::__1::__hash_node_base.928"*, i8 } %727, 1
  %729 = and i8 %728, 1
  %730 = icmp eq i8 %729, 0
  br i1 %730, label %731, label %732

731:                                              ; preds = %706
  call void @_ZdlPv(i8* nonnull %707) #13
  br label %732

732:                                              ; preds = %706, %731
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %64, %"class.spvtools::opt::Instruction"* %376) #11
  br label %733

733:                                              ; preds = %701, %699, %655, %703, %732
  %734 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %107, align 8
  %735 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %108, align 8
  %736 = icmp eq %"class.spvtools::opt::Instruction"** %734, %735
  br i1 %736, label %806, label %737

737:                                              ; preds = %733, %790
  %738 = phi %"class.spvtools::opt::Instruction"** [ %802, %790 ], [ %734, %733 ]
  %739 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %738, align 8
  %740 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %741 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %740, i64 0, i32 2
  %742 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %741, align 8
  %743 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %739, %"class.spvtools::opt::IRContext"* %742) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %119) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %123, %"struct.std::__1::aligned_storage<4, 4>::type"** %124, align 8
  store i64 0, i64* %126, align 8
  store i64 1, i64* %121, align 8
  store i32 %1, i32* %127, align 8
  %744 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %743, i64 0, i32 3
  %745 = load i8, i8* %744, align 4, !range !3
  %746 = icmp eq i8 %745, 0
  %747 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %743, i64 0, i32 4
  %748 = load i8, i8* %747, align 1, !range !3
  %749 = icmp eq i8 %748, 0
  %750 = select i1 %749, i64 1, i64 2
  %751 = xor i1 %749, true
  %752 = zext i1 %751 to i64
  %753 = select i1 %746, i64 %752, i64 %750
  %754 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %743, i64 0, i32 6, i32 0, i32 0
  %755 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %754, align 8
  %756 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %755, i64 %753, i32 1
  %757 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %756, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %758 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %128, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %128, align 8
  %759 = icmp eq %"class.std::__1::vector.257"* %758, null
  br i1 %759, label %771, label %760

760:                                              ; preds = %737
  %761 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %758, i64 0, i32 0, i32 0
  %762 = load i32*, i32** %761, align 8
  %763 = icmp eq i32* %762, null
  br i1 %763, label %769, label %764

764:                                              ; preds = %760
  %765 = ptrtoint i32* %762 to i64
  %766 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %758, i64 0, i32 0, i32 1
  %767 = bitcast i32** %766 to i64*
  store i64 %765, i64* %767, align 8
  %768 = bitcast i32* %762 to i8*
  call void @_ZdlPv(i8* %768) #13
  br label %769

769:                                              ; preds = %764, %760
  %770 = bitcast %"class.std::__1::vector.257"* %758 to i8*
  call void @_ZdlPv(i8* %770) #13
  br label %771

771:                                              ; preds = %737, %769
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %119) #11
  %772 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %773 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %772, i64 0, i32 13, i32 0, i32 1
  %774 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %743, i64 0, i32 0, i32 1
  %775 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %774, align 8
  %776 = icmp eq %"class.spvtools::opt::Instruction"* %775, null
  br i1 %776, label %790, label %777

777:                                              ; preds = %771
  %778 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %743, i64 0, i32 0, i32 2
  %779 = bitcast %"class.spvtools::opt::Instruction"** %778 to i64*
  %780 = load i64, i64* %779, align 8
  %781 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %775, i64 0, i32 0, i32 2
  %782 = bitcast %"class.spvtools::opt::Instruction"** %781 to i64*
  store i64 %780, i64* %782, align 8
  %783 = bitcast %"class.spvtools::opt::Instruction"** %774 to i64*
  %784 = load i64, i64* %783, align 8
  %785 = bitcast %"class.spvtools::opt::Instruction"** %778 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %786 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %785, align 8
  %787 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %786, i64 0, i32 1
  %788 = bitcast %"class.spvtools::opt::Instruction"** %787 to i64*
  store i64 %784, i64* %788, align 8
  %789 = bitcast %"class.spvtools::opt::Instruction"** %774 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %789, i8 0, i64 16, i1 false) #11
  br label %790

790:                                              ; preds = %771, %777
  store %"class.spvtools::opt::Instruction"* %773, %"class.spvtools::opt::Instruction"** %774, align 8
  %791 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %772, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %792 = bitcast %"class.spvtools::opt::Instruction"** %791 to i64*
  %793 = load i64, i64* %792, align 8
  %794 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %743, i64 0, i32 0, i32 2
  %795 = bitcast %"class.spvtools::opt::Instruction"** %794 to i64*
  store i64 %793, i64* %795, align 8
  store %"class.spvtools::opt::Instruction"* %743, %"class.spvtools::opt::Instruction"** %791, align 8
  %796 = bitcast %"class.spvtools::opt::Instruction"** %794 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %797 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %796, align 8
  %798 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %797, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %743, %"class.spvtools::opt::Instruction"** %798, align 8
  %799 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %800 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %799, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %801 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %800, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %64, %"class.spvtools::opt::Instruction"* %801) #11
  %802 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %738, i64 1
  %803 = icmp eq %"class.spvtools::opt::Instruction"** %802, %735
  br i1 %803, label %804, label %737

804:                                              ; preds = %790
  %805 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %107, align 8
  br label %806

806:                                              ; preds = %458, %804, %733
  %807 = phi %"class.spvtools::opt::Instruction"** [ %734, %733 ], [ %459, %458 ], [ %805, %804 ]
  %808 = phi i8 [ %545, %733 ], [ %372, %458 ], [ %545, %804 ]
  %809 = icmp eq %"class.spvtools::opt::Instruction"** %807, null
  br i1 %809, label %813, label %810

810:                                              ; preds = %806
  %811 = ptrtoint %"class.spvtools::opt::Instruction"** %807 to i64
  store i64 %811, i64* %112, align 8
  %812 = bitcast %"class.spvtools::opt::Instruction"** %807 to i8*
  call void @_ZdlPv(i8* %812) #13
  br label %813

813:                                              ; preds = %806, %810
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  %814 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %373, i64 1
  %815 = icmp eq %"class.spvtools::opt::Instruction"** %814, %103
  br i1 %815, label %195, label %371

816:                                              ; preds = %825
  %817 = bitcast %"class.std::__1::vector.916"* %4 to i64*
  %818 = load i64, i64* %817, align 8
  %819 = inttoptr i64 %818 to %"class.spvtools::opt::Instruction"**
  br label %820

820:                                              ; preds = %368, %816
  %821 = phi %"class.spvtools::opt::Instruction"** [ %360, %368 ], [ %819, %816 ]
  %822 = phi i64* [ %370, %368 ], [ %817, %816 ]
  %823 = phi i64 [ %369, %368 ], [ %818, %816 ]
  %824 = bitcast %"class.spvtools::opt::Instruction"*** %67 to i64*
  store i64 %823, i64* %824, align 8
  br i1 %75, label %912, label %831

825:                                              ; preds = %358, %825
  %826 = phi %"class.spvtools::opt::Instruction"** [ %829, %825 ], [ %360, %358 ]
  %827 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %826, align 8
  %828 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %64, %"class.spvtools::opt::Instruction"* %827) #11
  %829 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %826, i64 1
  %830 = icmp eq %"class.spvtools::opt::Instruction"** %829, %361
  br i1 %830, label %816, label %825

831:                                              ; preds = %820
  %832 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %77, align 8
  %833 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %80, align 8
  %834 = icmp eq %"class.spvtools::opt::Instruction"** %832, %833
  br i1 %834, label %835, label %912

835:                                              ; preds = %831
  %836 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, align 8
  %837 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %102, align 8
  %838 = icmp eq %"class.spvtools::opt::Instruction"** %836, %837
  br i1 %838, label %839, label %912

839:                                              ; preds = %835
  %840 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, align 8
  %841 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %73, align 8
  %842 = icmp eq %"class.spvtools::opt::Instruction"** %840, %841
  br i1 %842, label %912, label %843

843:                                              ; preds = %839
  %844 = bitcast %"class.spvtools::opt::Instruction"*** %68 to i64*
  br label %845

845:                                              ; preds = %906, %843
  %846 = phi i64 [ %823, %843 ], [ %908, %906 ]
  %847 = phi %"class.spvtools::opt::Instruction"** [ %821, %843 ], [ %907, %906 ]
  %848 = phi %"class.spvtools::opt::Instruction"** [ %840, %843 ], [ %904, %906 ]
  %849 = bitcast %"class.spvtools::opt::Instruction"** %848 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %68, align 8
  %852 = icmp eq %"class.spvtools::opt::Instruction"** %847, %851
  br i1 %852, label %857, label %853

853:                                              ; preds = %845
  %854 = bitcast %"class.spvtools::opt::Instruction"** %847 to i64*
  store i64 %850, i64* %854, align 8
  %855 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %847, i64 1
  %856 = ptrtoint %"class.spvtools::opt::Instruction"** %855 to i64
  store i64 %856, i64* %824, align 8
  br label %903

857:                                              ; preds = %845
  %858 = ptrtoint %"class.spvtools::opt::Instruction"** %851 to i64
  %859 = load i64, i64* %822, align 8
  %860 = sub i64 %858, %859
  %861 = ashr exact i64 %860, 3
  %862 = add nsw i64 %861, 1
  %863 = icmp ugt i64 %862, 2305843009213693951
  br i1 %863, label %864, label %866

864:                                              ; preds = %857
  %865 = bitcast %"class.std::__1::vector.916"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %865) #12
  unreachable

866:                                              ; preds = %857
  %867 = icmp ult i64 %861, 1152921504606846975
  br i1 %867, label %868, label %876

868:                                              ; preds = %866
  %869 = ashr exact i64 %860, 2
  %870 = icmp ult i64 %869, %862
  %871 = select i1 %870, i64 %862, i64 %869
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %881, label %873

873:                                              ; preds = %868
  %874 = icmp ugt i64 %871, 2305843009213693951
  br i1 %874, label %875, label %876

875:                                              ; preds = %873
  call void @abort() #12
  unreachable

876:                                              ; preds = %873, %866
  %877 = phi i64 [ %871, %873 ], [ 2305843009213693951, %866 ]
  %878 = shl i64 %877, 3
  %879 = call i8* @_Znwm(i64 %878) #13
  %880 = bitcast i8* %879 to %"class.spvtools::opt::Instruction"**
  br label %881

881:                                              ; preds = %876, %868
  %882 = phi i64 [ %877, %876 ], [ 0, %868 ]
  %883 = phi %"class.spvtools::opt::Instruction"** [ %880, %876 ], [ null, %868 ]
  %884 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %883, i64 %861
  %885 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %883, i64 %882
  %886 = ptrtoint %"class.spvtools::opt::Instruction"** %885 to i64
  %887 = bitcast %"class.spvtools::opt::Instruction"** %884 to i64*
  store i64 %850, i64* %887, align 8
  %888 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %884, i64 1
  %889 = ptrtoint %"class.spvtools::opt::Instruction"** %888 to i64
  %890 = sub i64 %846, %859
  %891 = ashr exact i64 %890, 3
  %892 = sub nsw i64 0, %891
  %893 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %884, i64 %892
  %894 = ptrtoint %"class.spvtools::opt::Instruction"** %893 to i64
  %895 = icmp sgt i64 %890, 0
  br i1 %895, label %896, label %899

896:                                              ; preds = %881
  %897 = bitcast %"class.spvtools::opt::Instruction"** %893 to i8*
  %898 = inttoptr i64 %859 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %897, i8* align 8 %898, i64 %890, i1 false) #11
  br label %899

899:                                              ; preds = %896, %881
  store i64 %894, i64* %822, align 8
  store i64 %889, i64* %824, align 8
  store i64 %886, i64* %844, align 8
  %900 = icmp eq i64 %859, 0
  br i1 %900, label %903, label %901

901:                                              ; preds = %899
  %902 = inttoptr i64 %859 to i8*
  call void @_ZdlPv(i8* %902) #13
  br label %903

903:                                              ; preds = %853, %899, %901
  %904 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %848, i64 1
  %905 = icmp eq %"class.spvtools::opt::Instruction"** %904, %841
  br i1 %905, label %909, label %906

906:                                              ; preds = %903
  %907 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %67, align 8
  %908 = ptrtoint %"class.spvtools::opt::Instruction"** %907 to i64
  br label %845

909:                                              ; preds = %903
  %910 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %66, align 8
  %911 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %67, align 8
  br label %912

912:                                              ; preds = %909, %839, %820, %835, %831
  %913 = phi %"class.spvtools::opt::Instruction"** [ %911, %909 ], [ %821, %839 ], [ %821, %820 ], [ %821, %835 ], [ %821, %831 ]
  %914 = phi %"class.spvtools::opt::Instruction"** [ %910, %909 ], [ %821, %839 ], [ %821, %820 ], [ %821, %835 ], [ %821, %831 ]
  %915 = icmp ne %"class.spvtools::opt::Instruction"** %914, %913
  %916 = zext i1 %915 to i32
  %917 = or i32 %366, %916
  %918 = icmp ne i32 %917, 0
  %919 = icmp eq %"class.spvtools::opt::Instruction"** %914, %913
  br i1 %919, label %920, label %924

920:                                              ; preds = %924, %912
  %921 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %77, align 8
  %922 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %80, align 8
  %923 = icmp eq %"class.spvtools::opt::Instruction"** %921, %922
  br i1 %923, label %930, label %941

924:                                              ; preds = %912, %924
  %925 = phi %"class.spvtools::opt::Instruction"** [ %928, %924 ], [ %914, %912 ]
  %926 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %925, align 8
  %927 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %64, %"class.spvtools::opt::Instruction"* %926) #11
  %928 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %925, i64 1
  %929 = icmp eq %"class.spvtools::opt::Instruction"** %928, %913
  br i1 %929, label %920, label %924

930:                                              ; preds = %920
  %931 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, align 8
  %932 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %102, align 8
  %933 = icmp eq %"class.spvtools::opt::Instruction"** %931, %932
  br i1 %933, label %934, label %941

934:                                              ; preds = %930
  %935 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, align 8
  %936 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %73, align 8
  %937 = icmp eq %"class.spvtools::opt::Instruction"** %935, %936
  br i1 %937, label %938, label %941

938:                                              ; preds = %934
  %939 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0
  %940 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::__hash_table"* %939, %"struct.std::__1::__hash_node_base"* %36) #11
  br label %941

941:                                              ; preds = %938, %934, %930, %920
  %942 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %93, align 8
  %943 = icmp eq %"struct.std::__1::__hash_node_base.928"* %942, null
  br i1 %943, label %950, label %944

944:                                              ; preds = %941, %944
  %945 = phi %"struct.std::__1::__hash_node_base.928"* [ %947, %944 ], [ %942, %941 ]
  %946 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %945, i64 0, i32 0
  %947 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %946, align 8
  %948 = bitcast %"struct.std::__1::__hash_node_base.928"* %945 to i8*
  call void @_ZdlPv(i8* %948) #13
  %949 = icmp eq %"struct.std::__1::__hash_node_base.928"* %947, null
  br i1 %949, label %950, label %944

950:                                              ; preds = %944, %941
  %951 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %91, align 8
  store %"struct.std::__1::__hash_node_base.928"** null, %"struct.std::__1::__hash_node_base.928"*** %91, align 8
  %952 = icmp eq %"struct.std::__1::__hash_node_base.928"** %951, null
  br i1 %952, label %955, label %953

953:                                              ; preds = %950
  %954 = bitcast %"struct.std::__1::__hash_node_base.928"** %951 to i8*
  call void @_ZdlPv(i8* %954) #13
  br label %955

955:                                              ; preds = %950, %953
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %90) #11
  %956 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %66, align 8
  %957 = icmp eq %"class.spvtools::opt::Instruction"** %956, null
  br i1 %957, label %961, label %958

958:                                              ; preds = %955
  %959 = ptrtoint %"class.spvtools::opt::Instruction"** %956 to i64
  store i64 %959, i64* %824, align 8
  %960 = bitcast %"class.spvtools::opt::Instruction"** %956 to i8*
  call void @_ZdlPv(i8* %960) #13
  br label %961

961:                                              ; preds = %955, %958
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  br label %962

962:                                              ; preds = %56, %48, %29, %3, %22, %961
  %963 = phi i1 [ %918, %961 ], [ false, %22 ], [ false, %3 ], [ false, %29 ], [ false, %48 ], [ false, %56 ]
  ret i1 %963
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11Instruction15RemoveInOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 %5
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i64 1, i64 2
  %14 = xor i1 %12, true
  %15 = zext i1 %14 to i64
  %16 = select i1 %9, i64 %15, i64 %13
  %17 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 %16
  %18 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 1
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %20 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %19, align 8
  %21 = icmp eq %"struct.spvtools::opt::Operand"* %18, %20
  br i1 %21, label %37, label %22

22:                                               ; preds = %2, %22
  %23 = phi %"struct.spvtools::opt::Operand"* [ %32, %22 ], [ %17, %2 ]
  %24 = phi %"struct.spvtools::opt::Operand"* [ %31, %22 ], [ %18, %2 ]
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 0, i32 0
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 1
  %30 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %28, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %29) #11
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 1
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 1
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %31, %20
  br i1 %33, label %34, label %22

34:                                               ; preds = %22
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %19, align 8
  %36 = icmp eq %"struct.spvtools::opt::Operand"* %35, %32
  br i1 %36, label %60, label %37

37:                                               ; preds = %34, %2
  %38 = phi %"struct.spvtools::opt::Operand"* [ %32, %34 ], [ %17, %2 ]
  %39 = phi %"struct.spvtools::opt::Operand"* [ %35, %34 ], [ %18, %2 ]
  br label %40

40:                                               ; preds = %58, %37
  %41 = phi %"struct.spvtools::opt::Operand"* [ %42, %58 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %44, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %44, align 8
  %46 = icmp eq %"class.std::__1::vector.257"* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %45, i64 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %45, i64 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %51, %47
  %57 = bitcast %"class.std::__1::vector.257"* %45 to i8*
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %56, %40
  %59 = icmp eq %"struct.spvtools::opt::Operand"* %42, %38
  br i1 %59, label %60, label %40

60:                                               ; preds = %58, %34
  %61 = phi %"struct.spvtools::opt::Operand"* [ %32, %34 ], [ %38, %58 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %19, align 8
  ret void
}

declare void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %3, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.257"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.257"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager17GetDecorationsForEjb(%"class.std::__1::vector.916"* noalias sret, %"class.spvtools::opt::analysis::DecorationManager"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjb(%"class.std::__1::vector.916"* sret %0, %"class.spvtools::opt::analysis::DecorationManager"* %1, i32 %2, i1 zeroext %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjb(%"class.std::__1::vector.916"* noalias sret, %"class.spvtools::opt::analysis::DecorationManager"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.anon.1032, align 8
  %6 = bitcast %"class.std::__1::vector.916"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = zext i32 %2 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %144, label %11

11:                                               ; preds = %4
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %144, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %144, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %144

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %2
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %144, label %34

59:                                               ; preds = %50
  %60 = zext i1 %3 to i8
  %61 = getelementptr inbounds %class.anon.1032, %class.anon.1032* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11
  %62 = bitcast %class.anon.1032* %5 to i64*
  store i64 -6148914691236517206, i64* %62, align 8
  store i8 %60, i8* %61, align 8
  %63 = getelementptr inbounds %class.anon.1032, %class.anon.1032* %5, i64 0, i32 1
  store %"class.std::__1::vector.916"* %0, %"class.std::__1::vector.916"** %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 3
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.std::__1::vector.916"*
  call void @_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjbENKUlRKNS7_IS5_NS9_IS5_EEEEE_clESF_(%class.anon.1032* nonnull %5, %"class.std::__1::vector.916"* dereferenceable(24) %65)
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 6
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to %"class.spvtools::opt::Instruction"***
  %68 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 7
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"class.spvtools::opt::Instruction"***
  %71 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::Instruction"** %68, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %138, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11
  br label %144

74:                                               ; preds = %59, %138
  %75 = phi %"class.spvtools::opt::Instruction"** [ %142, %138 ], [ %68, %59 ]
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 3
  %78 = load i8, i8* %77, align 4, !range !3
  %79 = icmp eq i8 %78, 0
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 4
  %81 = load i8, i8* %80, align 1, !range !3
  %82 = icmp eq i8 %81, 0
  %83 = select i1 %82, i32 1, i32 2
  %84 = xor i1 %82, true
  %85 = zext i1 %84 to i32
  %86 = select i1 %79, i32 %85, i32 %83
  %87 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %76, i32 %86) #11
  %88 = zext i32 %87 to i64
  %89 = load i64, i64* %8, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %138, label %91

91:                                               ; preds = %74
  %92 = call i64 @llvm.ctpop.i64(i64 %89) #11, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = add i64 %89, 4294967295
  %96 = and i64 %95, %88
  br label %101

97:                                               ; preds = %91
  %98 = icmp ugt i64 %89, %88
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %88, %89
  br label %101

101:                                              ; preds = %99, %97, %94
  %102 = phi i64 [ %96, %94 ], [ %100, %99 ], [ %88, %97 ]
  %103 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, i64 %102
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %138, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %138, label %111

111:                                              ; preds = %107
  %112 = add i64 %89, -1
  br label %113

113:                                              ; preds = %134, %111
  %114 = phi %"struct.std::__1::__hash_node_base"* [ %109, %111 ], [ %136, %134 ]
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, %88
  br i1 %118, label %129, label %119

119:                                              ; preds = %113
  br i1 %93, label %122, label %120

120:                                              ; preds = %119
  %121 = and i64 %117, %112
  br label %126

122:                                              ; preds = %119
  %123 = icmp ult i64 %117, %89
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %117, %89
  br label %126

126:                                              ; preds = %124, %122, %120
  %127 = phi i64 [ %121, %120 ], [ %125, %124 ], [ %117, %122 ]
  %128 = icmp eq i64 %127, %102
  br i1 %128, label %134, label %138

129:                                              ; preds = %113
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 2
  %131 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, %87
  br i1 %133, label %138, label %134

134:                                              ; preds = %129, %126
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"* %136, null
  br i1 %137, label %138, label %113

138:                                              ; preds = %126, %129, %134, %74, %101, %107
  %139 = phi %"struct.std::__1::__hash_node_base"* [ null, %101 ], [ null, %74 ], [ null, %107 ], [ %114, %129 ], [ null, %134 ], [ null, %126 ]
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %139, i64 3
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to %"class.std::__1::vector.916"*
  call void @_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjbENKUlRKNS7_IS5_NS9_IS5_EEEEE_clESF_(%class.anon.1032* nonnull %5, %"class.std::__1::vector.916"* dereferenceable(24) %141)
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, i64 1
  %143 = icmp eq %"class.spvtools::opt::Instruction"** %142, %71
  br i1 %143, label %73, label %74

144:                                              ; preds = %55, %47, %28, %4, %21, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt8analysis17DecorationManager17GetDecorationsForEjb(%"class.std::__1::vector.947"* noalias sret, %"class.spvtools::opt::analysis::DecorationManager"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjb(%"class.std::__1::vector.947"* sret %0, %"class.spvtools::opt::analysis::DecorationManager"* %1, i32 %2, i1 zeroext %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjb(%"class.std::__1::vector.947"* noalias sret, %"class.spvtools::opt::analysis::DecorationManager"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.anon.1033, align 8
  %6 = bitcast %"class.std::__1::vector.947"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = zext i32 %2 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %144, label %11

11:                                               ; preds = %4
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %144, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %144, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %144

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %2
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %144, label %34

59:                                               ; preds = %50
  %60 = zext i1 %3 to i8
  %61 = getelementptr inbounds %class.anon.1033, %class.anon.1033* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11
  %62 = bitcast %class.anon.1033* %5 to i64*
  store i64 -6148914691236517206, i64* %62, align 8
  store i8 %60, i8* %61, align 8
  %63 = getelementptr inbounds %class.anon.1033, %class.anon.1033* %5, i64 0, i32 1
  store %"class.std::__1::vector.947"* %0, %"class.std::__1::vector.947"** %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 3
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.std::__1::vector.916"*
  call void @_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjbENKUlRKNS8_IPS4_NSA_ISD_EEEEE_clESH_(%class.anon.1033* nonnull %5, %"class.std::__1::vector.916"* dereferenceable(24) %65)
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 6
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to %"class.spvtools::opt::Instruction"***
  %68 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 7
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"class.spvtools::opt::Instruction"***
  %71 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::Instruction"** %68, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %138, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11
  br label %144

74:                                               ; preds = %59, %138
  %75 = phi %"class.spvtools::opt::Instruction"** [ %142, %138 ], [ %68, %59 ]
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 3
  %78 = load i8, i8* %77, align 4, !range !3
  %79 = icmp eq i8 %78, 0
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 4
  %81 = load i8, i8* %80, align 1, !range !3
  %82 = icmp eq i8 %81, 0
  %83 = select i1 %82, i32 1, i32 2
  %84 = xor i1 %82, true
  %85 = zext i1 %84 to i32
  %86 = select i1 %79, i32 %85, i32 %83
  %87 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %76, i32 %86) #11
  %88 = zext i32 %87 to i64
  %89 = load i64, i64* %8, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %138, label %91

91:                                               ; preds = %74
  %92 = call i64 @llvm.ctpop.i64(i64 %89) #11, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = add i64 %89, 4294967295
  %96 = and i64 %95, %88
  br label %101

97:                                               ; preds = %91
  %98 = icmp ugt i64 %89, %88
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %88, %89
  br label %101

101:                                              ; preds = %99, %97, %94
  %102 = phi i64 [ %96, %94 ], [ %100, %99 ], [ %88, %97 ]
  %103 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, i64 %102
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %138, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %138, label %111

111:                                              ; preds = %107
  %112 = add i64 %89, -1
  br label %113

113:                                              ; preds = %134, %111
  %114 = phi %"struct.std::__1::__hash_node_base"* [ %109, %111 ], [ %136, %134 ]
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, %88
  br i1 %118, label %129, label %119

119:                                              ; preds = %113
  br i1 %93, label %122, label %120

120:                                              ; preds = %119
  %121 = and i64 %117, %112
  br label %126

122:                                              ; preds = %119
  %123 = icmp ult i64 %117, %89
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %117, %89
  br label %126

126:                                              ; preds = %124, %122, %120
  %127 = phi i64 [ %121, %120 ], [ %125, %124 ], [ %117, %122 ]
  %128 = icmp eq i64 %127, %102
  br i1 %128, label %134, label %138

129:                                              ; preds = %113
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 2
  %131 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, %87
  br i1 %133, label %138, label %134

134:                                              ; preds = %129, %126
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"* %136, null
  br i1 %137, label %138, label %113

138:                                              ; preds = %126, %129, %134, %74, %101, %107
  %139 = phi %"struct.std::__1::__hash_node_base"* [ null, %101 ], [ null, %74 ], [ null, %107 ], [ %114, %129 ], [ null, %134 ], [ null, %126 ]
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %139, i64 3
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to %"class.std::__1::vector.916"*
  call void @_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjbENKUlRKNS8_IPS4_NSA_ISD_EEEEE_clESH_(%class.anon.1033* nonnull %5, %"class.std::__1::vector.916"* dereferenceable(24) %141)
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, i64 1
  %143 = icmp eq %"class.spvtools::opt::Instruction"** %142, %71
  br i1 %143, label %73, label %74

144:                                              ; preds = %55, %47, %28, %4, %21, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.947", align 8
  %5 = alloca %"class.std::__1::vector.947", align 8
  %6 = alloca %"class.std::__1::set.955", align 8
  %7 = alloca %"class.std::__1::set.955", align 8
  %8 = alloca %"class.std::__1::set.955", align 8
  %9 = alloca %"class.std::__1::set.955", align 8
  %10 = alloca %"class.std::__1::set.955", align 8
  %11 = alloca %"class.std::__1::set.955", align 8
  %12 = alloca %"class.std::__1::set.955", align 8
  %13 = alloca %"class.std::__1::set.955", align 8
  %14 = bitcast %"class.std::__1::vector.947"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector.947"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjb(%"class.std::__1::vector.947"* nonnull sret %4, %"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %1, i1 zeroext false) #11
  %18 = bitcast %"class.std::__1::vector.947"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %5, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::vector.947"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjb(%"class.std::__1::vector.947"* nonnull sret %5, %"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %2, i1 zeroext false) #11
  %22 = bitcast %"class.std::__1::set.955"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_node_base"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"** %23, align 8
  %28 = bitcast %"class.std::__1::set.955"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_node_base"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %29, align 8
  %34 = bitcast %"class.std::__1::set.955"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_node_base"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %35, align 8
  %40 = bitcast %"class.std::__1::set.955"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %45 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %41, align 8
  call fastcc void @"_ZZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjjENK3$_1clERKNSt3__16vectorIPKNS0_11InstructionENS4_9allocatorIS8_EEEEPNS4_3setINS4_12basic_stringIDiNS4_11char_traitsIDiEENS9_IDiEEEENS4_4lessISJ_EENS9_ISJ_EEEESO_SO_SO_"(%"class.std::__1::vector.947"* nonnull dereferenceable(24) %4, %"class.std::__1::set.955"* nonnull %6, %"class.std::__1::set.955"* nonnull %7, %"class.std::__1::set.955"* nonnull %8, %"class.std::__1::set.955"* nonnull %9)
  %46 = bitcast %"class.std::__1::set.955"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_node_base"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %47, align 8
  %52 = bitcast %"class.std::__1::set.955"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %53 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_node_base"** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %53, align 8
  %58 = bitcast %"class.std::__1::set.955"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_node_base"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"** %59, align 8
  %64 = bitcast %"class.std::__1::set.955"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %69 = bitcast %"class.std::__1::__tree_node_base"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %68, %"class.std::__1::__tree_end_node"** %65, align 8
  call fastcc void @"_ZZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjjENK3$_1clERKNSt3__16vectorIPKNS0_11InstructionENS4_9allocatorIS8_EEEEPNS4_3setINS4_12basic_stringIDiNS4_11char_traitsIDiEENS9_IDiEEEENS4_4lessISJ_EENS9_ISJ_EEEESO_SO_SO_"(%"class.std::__1::vector.947"* nonnull dereferenceable(24) %5, %"class.std::__1::set.955"* nonnull %10, %"class.std::__1::set.955"* nonnull %11, %"class.std::__1::set.955"* nonnull %12, %"class.std::__1::set.955"* nonnull %13)
  %70 = load i64, i64* %25, align 8
  %71 = load i64, i64* %49, align 8
  %72 = icmp eq i64 %70, %71
  br i1 %72, label %73, label %533

73:                                               ; preds = %3
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %74, %26
  br i1 %75, label %185, label %76

76:                                               ; preds = %73
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  br label %78

78:                                               ; preds = %182, %76
  %79 = phi %"class.std::__1::__tree_end_node"* [ %183, %182 ], [ %77, %76 ]
  %80 = phi %"class.std::__1::__tree_end_node"* [ %154, %182 ], [ %74, %76 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 4
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 4
  %83 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 5
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = zext i8 %85 to i64
  %91 = select i1 %86, i64 %89, i64 %90
  %92 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 5
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %94 to i64
  %100 = select i1 %95, i64 %98, i64 %99
  %101 = icmp eq i64 %91, %100
  br i1 %101, label %102, label %533

102:                                              ; preds = %78
  %103 = icmp eq i64 %91, 0
  br i1 %103, label %125, label %104

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::__tree_end_node"* %82 to i32**
  %106 = load i32*, i32** %105, align 8
  %107 = bitcast %"class.std::__1::__tree_end_node"* %82 to i32*
  %108 = select i1 %95, i32* %106, i32* %107
  %109 = bitcast %"class.std::__1::__tree_end_node"* %81 to i32**
  %110 = load i32*, i32** %109, align 8
  %111 = bitcast %"class.std::__1::__tree_end_node"* %81 to i32*
  %112 = select i1 %86, i32* %110, i32* %111
  br label %113

113:                                              ; preds = %120, %104
  %114 = phi i64 [ %121, %120 ], [ %91, %104 ]
  %115 = phi i32* [ %123, %120 ], [ %108, %104 ]
  %116 = phi i32* [ %122, %120 ], [ %112, %104 ]
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %115, align 4
  %119 = icmp eq i32 %118, %117
  br i1 %119, label %120, label %533

120:                                              ; preds = %113
  %121 = add i64 %114, -1
  %122 = getelementptr inbounds i32, i32* %116, i64 1
  %123 = getelementptr inbounds i32, i32* %115, i64 1
  %124 = icmp eq i64 %121, 0
  br i1 %124, label %125, label %113

125:                                              ; preds = %120, %102
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %129, label %137

129:                                              ; preds = %125
  %130 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 2
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"class.std::__1::__tree_end_node"**
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, %130
  br i1 %136, label %153, label %144

137:                                              ; preds = %125, %137
  %138 = phi %"class.std::__1::__tree_node_base"* [ %140, %137 ], [ %127, %125 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %137

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 0
  br label %153

144:                                              ; preds = %129, %144
  %145 = phi %"class.std::__1::__tree_end_node"** [ %148, %144 ], [ %132, %129 ]
  %146 = bitcast %"class.std::__1::__tree_end_node"** %145 to %"class.std::__1::__tree_node_base"**
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %147, i64 0, i32 2
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, %147
  br i1 %152, label %153, label %144

153:                                              ; preds = %144, %142, %129
  %154 = phi %"class.std::__1::__tree_end_node"* [ %143, %142 ], [ %133, %129 ], [ %149, %144 ]
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 1, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, null
  br i1 %157, label %158, label %166

158:                                              ; preds = %153
  %159 = bitcast %"class.std::__1::__tree_end_node"* %79 to %"class.std::__1::__tree_node_base"*
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 2
  %161 = bitcast %"class.std::__1::__tree_end_node"* %160 to %"class.std::__1::__tree_end_node"**
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %159
  br i1 %165, label %182, label %173

166:                                              ; preds = %153, %166
  %167 = phi %"class.std::__1::__tree_node_base"* [ %169, %166 ], [ %156, %153 ]
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, null
  br i1 %170, label %171, label %166

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %167, i64 0, i32 0
  br label %182

173:                                              ; preds = %158, %173
  %174 = phi %"class.std::__1::__tree_end_node"** [ %177, %173 ], [ %161, %158 ]
  %175 = bitcast %"class.std::__1::__tree_end_node"** %174 to %"class.std::__1::__tree_node_base"**
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 2
  %178 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 0, i32 0
  %180 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %179, align 8
  %181 = icmp eq %"class.std::__1::__tree_node_base"* %180, %176
  br i1 %181, label %182, label %173

182:                                              ; preds = %173, %171, %158
  %183 = phi %"class.std::__1::__tree_end_node"* [ %172, %171 ], [ %162, %158 ], [ %178, %173 ]
  %184 = icmp eq %"class.std::__1::__tree_end_node"* %154, %26
  br i1 %184, label %185, label %78

185:                                              ; preds = %182, %73
  %186 = load i64, i64* %31, align 8
  %187 = load i64, i64* %55, align 8
  %188 = icmp eq i64 %186, %187
  br i1 %188, label %189, label %533

189:                                              ; preds = %185
  %190 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %191 = icmp eq %"class.std::__1::__tree_end_node"* %190, %32
  br i1 %191, label %301, label %192

192:                                              ; preds = %189
  %193 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  br label %194

194:                                              ; preds = %298, %192
  %195 = phi %"class.std::__1::__tree_end_node"* [ %299, %298 ], [ %193, %192 ]
  %196 = phi %"class.std::__1::__tree_end_node"* [ %270, %298 ], [ %190, %192 ]
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 4
  %198 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 4
  %199 = bitcast %"class.std::__1::__tree_end_node"* %197 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %199, i64 0, i32 1, i32 1
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 5
  %204 = bitcast %"class.std::__1::__tree_end_node"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = zext i8 %201 to i64
  %207 = select i1 %202, i64 %205, i64 %206
  %208 = bitcast %"class.std::__1::__tree_end_node"* %198 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %208, i64 0, i32 1, i32 1
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  %212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 5
  %213 = bitcast %"class.std::__1::__tree_end_node"* %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = zext i8 %210 to i64
  %216 = select i1 %211, i64 %214, i64 %215
  %217 = icmp eq i64 %207, %216
  br i1 %217, label %218, label %533

218:                                              ; preds = %194
  %219 = icmp eq i64 %207, 0
  br i1 %219, label %241, label %220

220:                                              ; preds = %218
  %221 = bitcast %"class.std::__1::__tree_end_node"* %198 to i32**
  %222 = load i32*, i32** %221, align 8
  %223 = bitcast %"class.std::__1::__tree_end_node"* %198 to i32*
  %224 = select i1 %211, i32* %222, i32* %223
  %225 = bitcast %"class.std::__1::__tree_end_node"* %197 to i32**
  %226 = load i32*, i32** %225, align 8
  %227 = bitcast %"class.std::__1::__tree_end_node"* %197 to i32*
  %228 = select i1 %202, i32* %226, i32* %227
  br label %229

229:                                              ; preds = %236, %220
  %230 = phi i64 [ %237, %236 ], [ %207, %220 ]
  %231 = phi i32* [ %239, %236 ], [ %224, %220 ]
  %232 = phi i32* [ %238, %236 ], [ %228, %220 ]
  %233 = load i32, i32* %232, align 4
  %234 = load i32, i32* %231, align 4
  %235 = icmp eq i32 %234, %233
  br i1 %235, label %236, label %533

236:                                              ; preds = %229
  %237 = add i64 %230, -1
  %238 = getelementptr inbounds i32, i32* %232, i64 1
  %239 = getelementptr inbounds i32, i32* %231, i64 1
  %240 = icmp eq i64 %237, 0
  br i1 %240, label %241, label %229

241:                                              ; preds = %236, %218
  %242 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 1, i32 0
  %243 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %242, align 8
  %244 = icmp eq %"class.std::__1::__tree_node_base"* %243, null
  br i1 %244, label %245, label %253

245:                                              ; preds = %241
  %246 = bitcast %"class.std::__1::__tree_end_node"* %196 to %"class.std::__1::__tree_node_base"*
  %247 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 2
  %248 = bitcast %"class.std::__1::__tree_end_node"* %247 to %"class.std::__1::__tree_end_node"**
  %249 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 0, i32 0
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, %246
  br i1 %252, label %269, label %260

253:                                              ; preds = %241, %253
  %254 = phi %"class.std::__1::__tree_node_base"* [ %256, %253 ], [ %243, %241 ]
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %254, i64 0, i32 0, i32 0
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, null
  br i1 %257, label %258, label %253

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %254, i64 0, i32 0
  br label %269

260:                                              ; preds = %245, %260
  %261 = phi %"class.std::__1::__tree_end_node"** [ %264, %260 ], [ %248, %245 ]
  %262 = bitcast %"class.std::__1::__tree_end_node"** %261 to %"class.std::__1::__tree_node_base"**
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %263, i64 0, i32 2
  %265 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %265, i64 0, i32 0
  %267 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %266, align 8
  %268 = icmp eq %"class.std::__1::__tree_node_base"* %267, %263
  br i1 %268, label %269, label %260

269:                                              ; preds = %260, %258, %245
  %270 = phi %"class.std::__1::__tree_end_node"* [ %259, %258 ], [ %249, %245 ], [ %265, %260 ]
  %271 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 1, i32 0
  %272 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %271, align 8
  %273 = icmp eq %"class.std::__1::__tree_node_base"* %272, null
  br i1 %273, label %274, label %282

274:                                              ; preds = %269
  %275 = bitcast %"class.std::__1::__tree_end_node"* %195 to %"class.std::__1::__tree_node_base"*
  %276 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %195, i64 2
  %277 = bitcast %"class.std::__1::__tree_end_node"* %276 to %"class.std::__1::__tree_end_node"**
  %278 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %277, align 8
  %279 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %278, i64 0, i32 0
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %279, align 8
  %281 = icmp eq %"class.std::__1::__tree_node_base"* %280, %275
  br i1 %281, label %298, label %289

282:                                              ; preds = %269, %282
  %283 = phi %"class.std::__1::__tree_node_base"* [ %285, %282 ], [ %272, %269 ]
  %284 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %283, i64 0, i32 0, i32 0
  %285 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  %286 = icmp eq %"class.std::__1::__tree_node_base"* %285, null
  br i1 %286, label %287, label %282

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %283, i64 0, i32 0
  br label %298

289:                                              ; preds = %274, %289
  %290 = phi %"class.std::__1::__tree_end_node"** [ %293, %289 ], [ %277, %274 ]
  %291 = bitcast %"class.std::__1::__tree_end_node"** %290 to %"class.std::__1::__tree_node_base"**
  %292 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %291, align 8
  %293 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %292, i64 0, i32 2
  %294 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %293, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %294, i64 0, i32 0
  %296 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %295, align 8
  %297 = icmp eq %"class.std::__1::__tree_node_base"* %296, %292
  br i1 %297, label %298, label %289

298:                                              ; preds = %289, %287, %274
  %299 = phi %"class.std::__1::__tree_end_node"* [ %288, %287 ], [ %278, %274 ], [ %294, %289 ]
  %300 = icmp eq %"class.std::__1::__tree_end_node"* %270, %32
  br i1 %300, label %301, label %194

301:                                              ; preds = %298, %189
  %302 = load i64, i64* %43, align 8
  %303 = load i64, i64* %67, align 8
  %304 = icmp eq i64 %302, %303
  br i1 %304, label %305, label %533

305:                                              ; preds = %301
  %306 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %307 = icmp eq %"class.std::__1::__tree_end_node"* %306, %44
  br i1 %307, label %417, label %308

308:                                              ; preds = %305
  %309 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  br label %310

310:                                              ; preds = %414, %308
  %311 = phi %"class.std::__1::__tree_end_node"* [ %415, %414 ], [ %309, %308 ]
  %312 = phi %"class.std::__1::__tree_end_node"* [ %386, %414 ], [ %306, %308 ]
  %313 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 4
  %314 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 4
  %315 = bitcast %"class.std::__1::__tree_end_node"* %313 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %315, i64 0, i32 1, i32 1
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  %319 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 5
  %320 = bitcast %"class.std::__1::__tree_end_node"* %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = zext i8 %317 to i64
  %323 = select i1 %318, i64 %321, i64 %322
  %324 = bitcast %"class.std::__1::__tree_end_node"* %314 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %325 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %324, i64 0, i32 1, i32 1
  %326 = load i8, i8* %325, align 1
  %327 = icmp slt i8 %326, 0
  %328 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 5
  %329 = bitcast %"class.std::__1::__tree_end_node"* %328 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = zext i8 %326 to i64
  %332 = select i1 %327, i64 %330, i64 %331
  %333 = icmp eq i64 %323, %332
  br i1 %333, label %334, label %533

334:                                              ; preds = %310
  %335 = icmp eq i64 %323, 0
  br i1 %335, label %357, label %336

336:                                              ; preds = %334
  %337 = bitcast %"class.std::__1::__tree_end_node"* %314 to i32**
  %338 = load i32*, i32** %337, align 8
  %339 = bitcast %"class.std::__1::__tree_end_node"* %314 to i32*
  %340 = select i1 %327, i32* %338, i32* %339
  %341 = bitcast %"class.std::__1::__tree_end_node"* %313 to i32**
  %342 = load i32*, i32** %341, align 8
  %343 = bitcast %"class.std::__1::__tree_end_node"* %313 to i32*
  %344 = select i1 %318, i32* %342, i32* %343
  br label %345

345:                                              ; preds = %352, %336
  %346 = phi i64 [ %353, %352 ], [ %323, %336 ]
  %347 = phi i32* [ %355, %352 ], [ %340, %336 ]
  %348 = phi i32* [ %354, %352 ], [ %344, %336 ]
  %349 = load i32, i32* %348, align 4
  %350 = load i32, i32* %347, align 4
  %351 = icmp eq i32 %350, %349
  br i1 %351, label %352, label %533

352:                                              ; preds = %345
  %353 = add i64 %346, -1
  %354 = getelementptr inbounds i32, i32* %348, i64 1
  %355 = getelementptr inbounds i32, i32* %347, i64 1
  %356 = icmp eq i64 %353, 0
  br i1 %356, label %357, label %345

357:                                              ; preds = %352, %334
  %358 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 1, i32 0
  %359 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %358, align 8
  %360 = icmp eq %"class.std::__1::__tree_node_base"* %359, null
  br i1 %360, label %361, label %369

361:                                              ; preds = %357
  %362 = bitcast %"class.std::__1::__tree_end_node"* %312 to %"class.std::__1::__tree_node_base"*
  %363 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %312, i64 2
  %364 = bitcast %"class.std::__1::__tree_end_node"* %363 to %"class.std::__1::__tree_end_node"**
  %365 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %364, align 8
  %366 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %365, i64 0, i32 0
  %367 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %366, align 8
  %368 = icmp eq %"class.std::__1::__tree_node_base"* %367, %362
  br i1 %368, label %385, label %376

369:                                              ; preds = %357, %369
  %370 = phi %"class.std::__1::__tree_node_base"* [ %372, %369 ], [ %359, %357 ]
  %371 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %370, i64 0, i32 0, i32 0
  %372 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %371, align 8
  %373 = icmp eq %"class.std::__1::__tree_node_base"* %372, null
  br i1 %373, label %374, label %369

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %370, i64 0, i32 0
  br label %385

376:                                              ; preds = %361, %376
  %377 = phi %"class.std::__1::__tree_end_node"** [ %380, %376 ], [ %364, %361 ]
  %378 = bitcast %"class.std::__1::__tree_end_node"** %377 to %"class.std::__1::__tree_node_base"**
  %379 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %378, align 8
  %380 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %379, i64 0, i32 2
  %381 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %380, align 8
  %382 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %381, i64 0, i32 0
  %383 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %382, align 8
  %384 = icmp eq %"class.std::__1::__tree_node_base"* %383, %379
  br i1 %384, label %385, label %376

385:                                              ; preds = %376, %374, %361
  %386 = phi %"class.std::__1::__tree_end_node"* [ %375, %374 ], [ %365, %361 ], [ %381, %376 ]
  %387 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 1, i32 0
  %388 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %387, align 8
  %389 = icmp eq %"class.std::__1::__tree_node_base"* %388, null
  br i1 %389, label %390, label %398

390:                                              ; preds = %385
  %391 = bitcast %"class.std::__1::__tree_end_node"* %311 to %"class.std::__1::__tree_node_base"*
  %392 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %311, i64 2
  %393 = bitcast %"class.std::__1::__tree_end_node"* %392 to %"class.std::__1::__tree_end_node"**
  %394 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %393, align 8
  %395 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %394, i64 0, i32 0
  %396 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %395, align 8
  %397 = icmp eq %"class.std::__1::__tree_node_base"* %396, %391
  br i1 %397, label %414, label %405

398:                                              ; preds = %385, %398
  %399 = phi %"class.std::__1::__tree_node_base"* [ %401, %398 ], [ %388, %385 ]
  %400 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %399, i64 0, i32 0, i32 0
  %401 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %400, align 8
  %402 = icmp eq %"class.std::__1::__tree_node_base"* %401, null
  br i1 %402, label %403, label %398

403:                                              ; preds = %398
  %404 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %399, i64 0, i32 0
  br label %414

405:                                              ; preds = %390, %405
  %406 = phi %"class.std::__1::__tree_end_node"** [ %409, %405 ], [ %393, %390 ]
  %407 = bitcast %"class.std::__1::__tree_end_node"** %406 to %"class.std::__1::__tree_node_base"**
  %408 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %407, align 8
  %409 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %408, i64 0, i32 2
  %410 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %409, align 8
  %411 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %410, i64 0, i32 0
  %412 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %411, align 8
  %413 = icmp eq %"class.std::__1::__tree_node_base"* %412, %408
  br i1 %413, label %414, label %405

414:                                              ; preds = %405, %403, %390
  %415 = phi %"class.std::__1::__tree_end_node"* [ %404, %403 ], [ %394, %390 ], [ %410, %405 ]
  %416 = icmp eq %"class.std::__1::__tree_end_node"* %386, %44
  br i1 %416, label %417, label %310

417:                                              ; preds = %414, %305
  %418 = load i64, i64* %37, align 8
  %419 = load i64, i64* %61, align 8
  %420 = icmp eq i64 %418, %419
  br i1 %420, label %421, label %533

421:                                              ; preds = %417
  %422 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %423 = icmp eq %"class.std::__1::__tree_end_node"* %422, %38
  br i1 %423, label %533, label %424

424:                                              ; preds = %421
  %425 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  br label %426

426:                                              ; preds = %530, %424
  %427 = phi %"class.std::__1::__tree_end_node"* [ %531, %530 ], [ %425, %424 ]
  %428 = phi %"class.std::__1::__tree_end_node"* [ %502, %530 ], [ %422, %424 ]
  %429 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %428, i64 4
  %430 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 4
  %431 = bitcast %"class.std::__1::__tree_end_node"* %429 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %432 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %431, i64 0, i32 1, i32 1
  %433 = load i8, i8* %432, align 1
  %434 = icmp slt i8 %433, 0
  %435 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %428, i64 5
  %436 = bitcast %"class.std::__1::__tree_end_node"* %435 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = zext i8 %433 to i64
  %439 = select i1 %434, i64 %437, i64 %438
  %440 = bitcast %"class.std::__1::__tree_end_node"* %430 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %441 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %440, i64 0, i32 1, i32 1
  %442 = load i8, i8* %441, align 1
  %443 = icmp slt i8 %442, 0
  %444 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 5
  %445 = bitcast %"class.std::__1::__tree_end_node"* %444 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = zext i8 %442 to i64
  %448 = select i1 %443, i64 %446, i64 %447
  %449 = icmp eq i64 %439, %448
  br i1 %449, label %450, label %533

450:                                              ; preds = %426
  %451 = icmp eq i64 %439, 0
  br i1 %451, label %473, label %452

452:                                              ; preds = %450
  %453 = bitcast %"class.std::__1::__tree_end_node"* %430 to i32**
  %454 = load i32*, i32** %453, align 8
  %455 = bitcast %"class.std::__1::__tree_end_node"* %430 to i32*
  %456 = select i1 %443, i32* %454, i32* %455
  %457 = bitcast %"class.std::__1::__tree_end_node"* %429 to i32**
  %458 = load i32*, i32** %457, align 8
  %459 = bitcast %"class.std::__1::__tree_end_node"* %429 to i32*
  %460 = select i1 %434, i32* %458, i32* %459
  br label %461

461:                                              ; preds = %468, %452
  %462 = phi i64 [ %469, %468 ], [ %439, %452 ]
  %463 = phi i32* [ %471, %468 ], [ %456, %452 ]
  %464 = phi i32* [ %470, %468 ], [ %460, %452 ]
  %465 = load i32, i32* %464, align 4
  %466 = load i32, i32* %463, align 4
  %467 = icmp eq i32 %466, %465
  br i1 %467, label %468, label %533

468:                                              ; preds = %461
  %469 = add i64 %462, -1
  %470 = getelementptr inbounds i32, i32* %464, i64 1
  %471 = getelementptr inbounds i32, i32* %463, i64 1
  %472 = icmp eq i64 %469, 0
  br i1 %472, label %473, label %461

473:                                              ; preds = %468, %450
  %474 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %428, i64 1, i32 0
  %475 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %474, align 8
  %476 = icmp eq %"class.std::__1::__tree_node_base"* %475, null
  br i1 %476, label %477, label %485

477:                                              ; preds = %473
  %478 = bitcast %"class.std::__1::__tree_end_node"* %428 to %"class.std::__1::__tree_node_base"*
  %479 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %428, i64 2
  %480 = bitcast %"class.std::__1::__tree_end_node"* %479 to %"class.std::__1::__tree_end_node"**
  %481 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %480, align 8
  %482 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %481, i64 0, i32 0
  %483 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %482, align 8
  %484 = icmp eq %"class.std::__1::__tree_node_base"* %483, %478
  br i1 %484, label %501, label %492

485:                                              ; preds = %473, %485
  %486 = phi %"class.std::__1::__tree_node_base"* [ %488, %485 ], [ %475, %473 ]
  %487 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %486, i64 0, i32 0, i32 0
  %488 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %487, align 8
  %489 = icmp eq %"class.std::__1::__tree_node_base"* %488, null
  br i1 %489, label %490, label %485

490:                                              ; preds = %485
  %491 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %486, i64 0, i32 0
  br label %501

492:                                              ; preds = %477, %492
  %493 = phi %"class.std::__1::__tree_end_node"** [ %496, %492 ], [ %480, %477 ]
  %494 = bitcast %"class.std::__1::__tree_end_node"** %493 to %"class.std::__1::__tree_node_base"**
  %495 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %494, align 8
  %496 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %495, i64 0, i32 2
  %497 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %496, align 8
  %498 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %497, i64 0, i32 0
  %499 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %498, align 8
  %500 = icmp eq %"class.std::__1::__tree_node_base"* %499, %495
  br i1 %500, label %501, label %492

501:                                              ; preds = %492, %490, %477
  %502 = phi %"class.std::__1::__tree_end_node"* [ %491, %490 ], [ %481, %477 ], [ %497, %492 ]
  %503 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 1, i32 0
  %504 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %503, align 8
  %505 = icmp eq %"class.std::__1::__tree_node_base"* %504, null
  br i1 %505, label %506, label %514

506:                                              ; preds = %501
  %507 = bitcast %"class.std::__1::__tree_end_node"* %427 to %"class.std::__1::__tree_node_base"*
  %508 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %427, i64 2
  %509 = bitcast %"class.std::__1::__tree_end_node"* %508 to %"class.std::__1::__tree_end_node"**
  %510 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %509, align 8
  %511 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %510, i64 0, i32 0
  %512 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %511, align 8
  %513 = icmp eq %"class.std::__1::__tree_node_base"* %512, %507
  br i1 %513, label %530, label %521

514:                                              ; preds = %501, %514
  %515 = phi %"class.std::__1::__tree_node_base"* [ %517, %514 ], [ %504, %501 ]
  %516 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %515, i64 0, i32 0, i32 0
  %517 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %516, align 8
  %518 = icmp eq %"class.std::__1::__tree_node_base"* %517, null
  br i1 %518, label %519, label %514

519:                                              ; preds = %514
  %520 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %515, i64 0, i32 0
  br label %530

521:                                              ; preds = %506, %521
  %522 = phi %"class.std::__1::__tree_end_node"** [ %525, %521 ], [ %509, %506 ]
  %523 = bitcast %"class.std::__1::__tree_end_node"** %522 to %"class.std::__1::__tree_node_base"**
  %524 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %523, align 8
  %525 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %524, i64 0, i32 2
  %526 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %525, align 8
  %527 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %526, i64 0, i32 0
  %528 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %527, align 8
  %529 = icmp eq %"class.std::__1::__tree_node_base"* %528, %524
  br i1 %529, label %530, label %521

530:                                              ; preds = %521, %519, %506
  %531 = phi %"class.std::__1::__tree_end_node"* [ %520, %519 ], [ %510, %506 ], [ %526, %521 ]
  %532 = icmp eq %"class.std::__1::__tree_end_node"* %502, %38
  br i1 %532, label %533, label %426

533:                                              ; preds = %78, %113, %194, %229, %310, %345, %530, %426, %461, %301, %185, %3, %421, %417
  %534 = phi i1 [ false, %417 ], [ true, %421 ], [ false, %3 ], [ false, %185 ], [ false, %301 ], [ false, %461 ], [ true, %530 ], [ false, %426 ], [ false, %345 ], [ false, %310 ], [ false, %229 ], [ false, %194 ], [ false, %113 ], [ false, %78 ]
  %535 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0
  %536 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"class.std::__1::__tree_node"**
  %537 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %536, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %535, %"class.std::__1::__tree_node"* %537) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  %538 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0
  %539 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_node"**
  %540 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %539, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %538, %"class.std::__1::__tree_node"* %540) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #11
  %541 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0
  %542 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.std::__1::__tree_node"**
  %543 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %542, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %541, %"class.std::__1::__tree_node"* %543) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  %544 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0
  %545 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node"**
  %546 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %545, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %544, %"class.std::__1::__tree_node"* %546) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  %547 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0
  %548 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node"**
  %549 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %548, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %547, %"class.std::__1::__tree_node"* %549) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  %550 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0
  %551 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %552 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %551, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %550, %"class.std::__1::__tree_node"* %552) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  %553 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0
  %554 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %555 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %554, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %553, %"class.std::__1::__tree_node"* %555) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  %556 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0
  %557 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node"**
  %558 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %557, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %556, %"class.std::__1::__tree_node"* %558) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %559 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %19, align 8
  %560 = icmp eq %"class.spvtools::opt::Instruction"** %559, null
  br i1 %560, label %565, label %561

561:                                              ; preds = %533
  %562 = ptrtoint %"class.spvtools::opt::Instruction"** %559 to i64
  %563 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  store i64 %562, i64* %563, align 8
  %564 = bitcast %"class.spvtools::opt::Instruction"** %559 to i8*
  call void @_ZdlPv(i8* %564) #13
  br label %565

565:                                              ; preds = %533, %561
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %566 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  %567 = icmp eq %"class.spvtools::opt::Instruction"** %566, null
  br i1 %567, label %572, label %568

568:                                              ; preds = %565
  %569 = ptrtoint %"class.spvtools::opt::Instruction"** %566 to i64
  %570 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  store i64 %569, i64* %570, align 8
  %571 = bitcast %"class.spvtools::opt::Instruction"** %566 to i8*
  call void @_ZdlPv(i8* %571) #13
  br label %572

572:                                              ; preds = %565, %568
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret i1 %534
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK8spvtools3opt8analysis17DecorationManager22HaveTheSameDecorationsEjjENK3$_1clERKNSt3__16vectorIPKNS0_11InstructionENS4_9allocatorIS8_EEEEPNS4_3setINS4_12basic_stringIDiNS4_11char_traitsIDiEENS9_IDiEEEENS4_4lessISJ_EENS9_ISJ_EEEESO_SO_SO_"(%"class.std::__1::vector.947"* nocapture readonly dereferenceable(24), %"class.std::__1::set.955"*, %"class.std::__1::set.955"*, %"class.std::__1::set.955"*, %"class.std::__1::set.955"*) unnamed_addr #3 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"** %8, %10
  br i1 %11, label %25, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i32*
  %20 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %2, i64 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %1, i64 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  br label %26

25:                                               ; preds = %128, %5
  ret void

26:                                               ; preds = %12, %128
  %27 = phi %"class.spvtools::opt::Instruction"** [ %8, %12 ], [ %129, %128 ]
  %28 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #11
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 6
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 6, i32 0, i32 1
  %31 = bitcast %"struct.spvtools::opt::Operand"** %30 to i64*
  %32 = bitcast %"class.std::__1::vector.252"* %29 to i64*
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 3
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 4
  br label %35

35:                                               ; preds = %83, %26
  %36 = phi i32 [ 1, %26 ], [ %84, %83 ]
  %37 = load i64, i64* %31, align 8
  %38 = load i64, i64* %32, align 8
  %39 = sub i64 %37, %38
  %40 = sdiv exact i64 %39, 48
  %41 = load i8, i8* %33, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  %43 = load i8, i8* %34, align 1, !range !3
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i32 1, i32 2
  %46 = xor i1 %44, true
  %47 = zext i1 %46 to i32
  %48 = select i1 %42, i32 %47, i32 %45
  %49 = trunc i64 %40 to i32
  %50 = sub i32 %49, %48
  %51 = icmp ult i32 %36, %50
  %52 = inttoptr i64 %38 to %"struct.spvtools::opt::Operand"*
  br i1 %51, label %56, label %53

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  switch i32 %55, label %123 [
    i32 71, label %120
    i32 72, label %117
    i32 332, label %118
    i32 5632, label %119
  ]

56:                                               ; preds = %35
  %57 = add i32 %48, %36
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %52, i64 %58, i32 1, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %59, align 8
  %61 = icmp eq %"class.std::__1::vector.257"* %60, null
  %62 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %60, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %52, i64 %58, i32 1, i32 2
  %64 = select i1 %61, i32** %63, i32** %62
  %65 = load i32*, i32** %64, align 8
  br i1 %61, label %75, label %66

66:                                               ; preds = %56
  %67 = load i32*, i32** %62, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %60, i64 0, i32 0, i32 1
  %69 = bitcast i32** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = ptrtoint i32* %67 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 2
  %74 = getelementptr inbounds i32, i32* %67, i64 %73
  br label %80

75:                                               ; preds = %56
  %76 = load i32*, i32** %63, align 8
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %52, i64 %58, i32 1, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  br label %80

80:                                               ; preds = %66, %75
  %81 = phi i32* [ %74, %66 ], [ %79, %75 ]
  %82 = icmp eq i32* %65, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %111, %80
  %84 = add i32 %36, 1
  br label %35

85:                                               ; preds = %80, %111
  %86 = phi i32* [ %115, %111 ], [ %65, %80 ]
  %87 = load i32, i32* %86, align 4
  %88 = load i8, i8* %18, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = zext i8 %88 to i64
  br label %97

92:                                               ; preds = %85
  %93 = load i64, i64* %16, align 8
  %94 = and i64 %93, 9223372036854775807
  %95 = add nsw i64 %94, -1
  %96 = load i64, i64* %15, align 8
  br label %97

97:                                               ; preds = %92, %90
  %98 = phi i64 [ 4, %90 ], [ %95, %92 ]
  %99 = phi i64 [ %91, %90 ], [ %96, %92 ]
  %100 = icmp eq i64 %99, %98
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %6, i64 %98, i64 1, i64 %98, i64 %98, i64 0, i64 0) #11
  %102 = load i8, i8* %18, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %108, label %105

104:                                              ; preds = %97
  br i1 %89, label %108, label %105

105:                                              ; preds = %104, %101
  %106 = trunc i64 %99 to i8
  %107 = add i8 %106, 1
  store i8 %107, i8* %18, align 1
  br label %111

108:                                              ; preds = %104, %101
  %109 = load i32*, i32** %14, align 8
  %110 = add i64 %99, 1
  store i64 %110, i64* %15, align 8
  br label %111

111:                                              ; preds = %105, %108
  %112 = phi i32* [ %19, %105 ], [ %109, %108 ]
  %113 = getelementptr inbounds i32, i32* %112, i64 %99
  store i32 %87, i32* %113, align 4
  %114 = getelementptr inbounds i32, i32* %113, i64 1
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i32, i32* %86, i64 1
  %116 = icmp eq i32* %115, %81
  br i1 %116, label %83, label %85

117:                                              ; preds = %53
  br label %120

118:                                              ; preds = %53
  br label %120

119:                                              ; preds = %53
  br label %120

120:                                              ; preds = %53, %117, %118, %119
  %121 = phi %"class.std::__1::__tree.956"* [ %20, %119 ], [ %21, %118 ], [ %22, %117 ], [ %23, %53 ]
  %122 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.956"* %121, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  br label %123

123:                                              ; preds = %120, %53
  %124 = load i8, i8* %18, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %123, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, i64 1
  %130 = icmp eq %"class.spvtools::opt::Instruction"** %129, %10
  br i1 %130, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt8analysis17DecorationManager23HaveSubsetOfDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.947", align 8
  %5 = alloca %"class.std::__1::vector.947", align 8
  %6 = alloca %"class.std::__1::set.955", align 8
  %7 = alloca %"class.std::__1::set.955", align 8
  %8 = alloca %"class.std::__1::set.955", align 8
  %9 = alloca %"class.std::__1::set.955", align 8
  %10 = alloca %"class.std::__1::set.955", align 8
  %11 = alloca %"class.std::__1::set.955", align 8
  %12 = alloca %"class.std::__1::set.955", align 8
  %13 = alloca %"class.std::__1::set.955", align 8
  %14 = bitcast %"class.std::__1::vector.947"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector.947"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjb(%"class.std::__1::vector.947"* nonnull sret %4, %"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %1, i1 zeroext false) #11
  %18 = bitcast %"class.std::__1::vector.947"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %5, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::vector.947"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjb(%"class.std::__1::vector.947"* nonnull sret %5, %"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %2, i1 zeroext false) #11
  %22 = bitcast %"class.std::__1::set.955"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node_base"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %25, %"class.std::__1::__tree_end_node"** %23, align 8
  %27 = bitcast %"class.std::__1::set.955"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node_base"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %28, align 8
  %32 = bitcast %"class.std::__1::set.955"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_node_base"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"** %33, align 8
  %37 = bitcast %"class.std::__1::set.955"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %38, align 8
  call fastcc void @"_ZZNK8spvtools3opt8analysis17DecorationManager23HaveSubsetOfDecorationsEjjENK3$_2clERKNSt3__16vectorIPKNS0_11InstructionENS4_9allocatorIS8_EEEEPNS4_3setINS4_12basic_stringIDiNS4_11char_traitsIDiEENS9_IDiEEEENS4_4lessISJ_EENS9_ISJ_EEEESO_SO_SO_"(%"class.std::__1::vector.947"* nonnull dereferenceable(24) %4, %"class.std::__1::set.955"* nonnull %6, %"class.std::__1::set.955"* nonnull %7, %"class.std::__1::set.955"* nonnull %8, %"class.std::__1::set.955"* nonnull %9)
  %42 = bitcast %"class.std::__1::set.955"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_node_base"** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %45, %"class.std::__1::__tree_end_node"** %43, align 8
  %47 = bitcast %"class.std::__1::set.955"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_node_base"** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %48, align 8
  %52 = bitcast %"class.std::__1::set.955"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %53 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_node_base"** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %53, align 8
  %57 = bitcast %"class.std::__1::set.955"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_node_base"** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %58, align 8
  call fastcc void @"_ZZNK8spvtools3opt8analysis17DecorationManager23HaveSubsetOfDecorationsEjjENK3$_2clERKNSt3__16vectorIPKNS0_11InstructionENS4_9allocatorIS8_EEEEPNS4_3setINS4_12basic_stringIDiNS4_11char_traitsIDiEENS9_IDiEEEENS4_4lessISJ_EENS9_ISJ_EEEESO_SO_SO_"(%"class.std::__1::vector.947"* nonnull dereferenceable(24) %5, %"class.std::__1::set.955"* nonnull %10, %"class.std::__1::set.955"* nonnull %11, %"class.std::__1::set.955"* nonnull %12, %"class.std::__1::set.955"* nonnull %13)
  %62 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_18IsSubsetERKNSt3__13setINS0_12basic_stringIDiNS0_11char_traitsIDiEENS0_9allocatorIDiEEEENS0_4lessIS7_EENS5_IS7_EEEESD_(%"class.std::__1::set.955"* nonnull dereferenceable(24) %6, %"class.std::__1::set.955"* nonnull dereferenceable(24) %10)
  br i1 %62, label %63, label %69

63:                                               ; preds = %3
  %64 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_18IsSubsetERKNSt3__13setINS0_12basic_stringIDiNS0_11char_traitsIDiEENS0_9allocatorIDiEEEENS0_4lessIS7_EENS5_IS7_EEEESD_(%"class.std::__1::set.955"* nonnull dereferenceable(24) %7, %"class.std::__1::set.955"* nonnull dereferenceable(24) %11)
  br i1 %64, label %65, label %69

65:                                               ; preds = %63
  %66 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_18IsSubsetERKNSt3__13setINS0_12basic_stringIDiNS0_11char_traitsIDiEENS0_9allocatorIDiEEEENS0_4lessIS7_EENS5_IS7_EEEESD_(%"class.std::__1::set.955"* nonnull dereferenceable(24) %9, %"class.std::__1::set.955"* nonnull dereferenceable(24) %13)
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_18IsSubsetERKNSt3__13setINS0_12basic_stringIDiNS0_11char_traitsIDiEENS0_9allocatorIDiEEEENS0_4lessIS7_EENS5_IS7_EEEESD_(%"class.std::__1::set.955"* nonnull dereferenceable(24) %8, %"class.std::__1::set.955"* nonnull dereferenceable(24) %12)
  br label %69

69:                                               ; preds = %67, %65, %63, %3
  %70 = phi i1 [ false, %65 ], [ false, %63 ], [ false, %3 ], [ %68, %67 ]
  %71 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %13, i64 0, i32 0
  %72 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %71, %"class.std::__1::__tree_node"* %73) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  %74 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %12, i64 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %74, %"class.std::__1::__tree_node"* %76) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  %77 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %11, i64 0, i32 0
  %78 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node"**
  %79 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %78, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %77, %"class.std::__1::__tree_node"* %79) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  %80 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %10, i64 0, i32 0
  %81 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node"**
  %82 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %80, %"class.std::__1::__tree_node"* %82) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  %83 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %9, i64 0, i32 0
  %84 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node"**
  %85 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %84, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %83, %"class.std::__1::__tree_node"* %85) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  %86 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %8, i64 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %88 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %87, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %86, %"class.std::__1::__tree_node"* %88) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  %89 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %7, i64 0, i32 0
  %90 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"**
  %91 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %90, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %89, %"class.std::__1::__tree_node"* %91) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %92 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %6, i64 0, i32 0
  %93 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %94 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %93, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* nonnull %92, %"class.std::__1::__tree_node"* %94) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %95 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %19, align 8
  %96 = icmp eq %"class.spvtools::opt::Instruction"** %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %69
  %98 = ptrtoint %"class.spvtools::opt::Instruction"** %95 to i64
  %99 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  store i64 %98, i64* %99, align 8
  %100 = bitcast %"class.spvtools::opt::Instruction"** %95 to i8*
  call void @_ZdlPv(i8* %100) #13
  br label %101

101:                                              ; preds = %69, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %102 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  %103 = icmp eq %"class.spvtools::opt::Instruction"** %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %101
  %105 = ptrtoint %"class.spvtools::opt::Instruction"** %102 to i64
  %106 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  store i64 %105, i64* %106, align 8
  %107 = bitcast %"class.spvtools::opt::Instruction"** %102 to i8*
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %101, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret i1 %70
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZNK8spvtools3opt8analysis17DecorationManager23HaveSubsetOfDecorationsEjjENK3$_2clERKNSt3__16vectorIPKNS0_11InstructionENS4_9allocatorIS8_EEEEPNS4_3setINS4_12basic_stringIDiNS4_11char_traitsIDiEENS9_IDiEEEENS4_4lessISJ_EENS9_ISJ_EEEESO_SO_SO_"(%"class.std::__1::vector.947"* nocapture readonly dereferenceable(24), %"class.std::__1::set.955"*, %"class.std::__1::set.955"*, %"class.std::__1::set.955"*, %"class.std::__1::set.955"*) unnamed_addr #3 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"** %8, %10
  br i1 %11, label %25, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %6 to i32*
  %20 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %2, i64 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %1, i64 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  br label %26

25:                                               ; preds = %128, %5
  ret void

26:                                               ; preds = %12, %128
  %27 = phi %"class.spvtools::opt::Instruction"** [ %8, %12 ], [ %129, %128 ]
  %28 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #11
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 6
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 6, i32 0, i32 1
  %31 = bitcast %"struct.spvtools::opt::Operand"** %30 to i64*
  %32 = bitcast %"class.std::__1::vector.252"* %29 to i64*
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 3
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 4
  br label %35

35:                                               ; preds = %83, %26
  %36 = phi i32 [ 1, %26 ], [ %84, %83 ]
  %37 = load i64, i64* %31, align 8
  %38 = load i64, i64* %32, align 8
  %39 = sub i64 %37, %38
  %40 = sdiv exact i64 %39, 48
  %41 = load i8, i8* %33, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  %43 = load i8, i8* %34, align 1, !range !3
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i32 1, i32 2
  %46 = xor i1 %44, true
  %47 = zext i1 %46 to i32
  %48 = select i1 %42, i32 %47, i32 %45
  %49 = trunc i64 %40 to i32
  %50 = sub i32 %49, %48
  %51 = icmp ult i32 %36, %50
  %52 = inttoptr i64 %38 to %"struct.spvtools::opt::Operand"*
  br i1 %51, label %56, label %53

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  switch i32 %55, label %123 [
    i32 71, label %120
    i32 72, label %117
    i32 332, label %118
    i32 5632, label %119
  ]

56:                                               ; preds = %35
  %57 = add i32 %48, %36
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %52, i64 %58, i32 1, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %59, align 8
  %61 = icmp eq %"class.std::__1::vector.257"* %60, null
  %62 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %60, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %52, i64 %58, i32 1, i32 2
  %64 = select i1 %61, i32** %63, i32** %62
  %65 = load i32*, i32** %64, align 8
  br i1 %61, label %75, label %66

66:                                               ; preds = %56
  %67 = load i32*, i32** %62, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %60, i64 0, i32 0, i32 1
  %69 = bitcast i32** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = ptrtoint i32* %67 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 2
  %74 = getelementptr inbounds i32, i32* %67, i64 %73
  br label %80

75:                                               ; preds = %56
  %76 = load i32*, i32** %63, align 8
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %52, i64 %58, i32 1, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  br label %80

80:                                               ; preds = %66, %75
  %81 = phi i32* [ %74, %66 ], [ %79, %75 ]
  %82 = icmp eq i32* %65, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %111, %80
  %84 = add i32 %36, 1
  br label %35

85:                                               ; preds = %80, %111
  %86 = phi i32* [ %115, %111 ], [ %65, %80 ]
  %87 = load i32, i32* %86, align 4
  %88 = load i8, i8* %18, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = zext i8 %88 to i64
  br label %97

92:                                               ; preds = %85
  %93 = load i64, i64* %16, align 8
  %94 = and i64 %93, 9223372036854775807
  %95 = add nsw i64 %94, -1
  %96 = load i64, i64* %15, align 8
  br label %97

97:                                               ; preds = %92, %90
  %98 = phi i64 [ 4, %90 ], [ %95, %92 ]
  %99 = phi i64 [ %91, %90 ], [ %96, %92 ]
  %100 = icmp eq i64 %99, %98
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* nonnull %6, i64 %98, i64 1, i64 %98, i64 %98, i64 0, i64 0) #11
  %102 = load i8, i8* %18, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %108, label %105

104:                                              ; preds = %97
  br i1 %89, label %108, label %105

105:                                              ; preds = %104, %101
  %106 = trunc i64 %99 to i8
  %107 = add i8 %106, 1
  store i8 %107, i8* %18, align 1
  br label %111

108:                                              ; preds = %104, %101
  %109 = load i32*, i32** %14, align 8
  %110 = add i64 %99, 1
  store i64 %110, i64* %15, align 8
  br label %111

111:                                              ; preds = %105, %108
  %112 = phi i32* [ %19, %105 ], [ %109, %108 ]
  %113 = getelementptr inbounds i32, i32* %112, i64 %99
  store i32 %87, i32* %113, align 4
  %114 = getelementptr inbounds i32, i32* %113, i64 1
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i32, i32* %86, i64 1
  %116 = icmp eq i32* %115, %81
  br i1 %116, label %83, label %85

117:                                              ; preds = %53
  br label %120

118:                                              ; preds = %53
  br label %120

119:                                              ; preds = %53
  br label %120

120:                                              ; preds = %53, %117, %118, %119
  %121 = phi %"class.std::__1::__tree.956"* [ %20, %119 ], [ %21, %118 ], [ %22, %117 ], [ %23, %53 ]
  %122 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.956"* %121, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  br label %123

123:                                              ; preds = %120, %53
  %124 = load i8, i8* %18, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %123, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, i64 1
  %130 = icmp eq %"class.spvtools::opt::Instruction"** %129, %10
  br i1 %130, label %25, label %26
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_18IsSubsetERKNSt3__13setINS0_12basic_stringIDiNS0_11char_traitsIDiEENS0_9allocatorIDiEEEENS0_4lessIS7_EENS5_IS7_EEEESD_(%"class.std::__1::set.955"* dereferenceable(24), %"class.std::__1::set.955"* dereferenceable(24)) unnamed_addr #4 {
  %3 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %178, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::set.955", %"class.std::__1::set.955"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %11

11:                                               ; preds = %7, %174
  %12 = phi %"class.std::__1::__tree_end_node"* [ %4, %7 ], [ %176, %174 ]
  %13 = phi %"class.std::__1::__tree_end_node"* [ %9, %7 ], [ %175, %174 ]
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %13, %10
  br i1 %14, label %178, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 4
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 4
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 5
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %20 to i64
  %26 = select i1 %21, i64 %24, i64 %25
  %27 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %29 to i64
  %35 = select i1 %30, i64 %33, i64 %34
  %36 = icmp ult i64 %26, %35
  %37 = select i1 %36, i64 %26, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %62, label %39

39:                                               ; preds = %15
  %40 = bitcast %"class.std::__1::__tree_end_node"* %16 to i32**
  %41 = load i32*, i32** %40, align 8
  %42 = bitcast %"class.std::__1::__tree_end_node"* %16 to i32*
  %43 = select i1 %30, i32* %41, i32* %42
  %44 = bitcast %"class.std::__1::__tree_end_node"* %17 to i32**
  %45 = load i32*, i32** %44, align 8
  %46 = bitcast %"class.std::__1::__tree_end_node"* %17 to i32*
  %47 = select i1 %21, i32* %45, i32* %46
  br label %48

48:                                               ; preds = %57, %39
  %49 = phi i64 [ %58, %57 ], [ %37, %39 ]
  %50 = phi i32* [ %60, %57 ], [ %47, %39 ]
  %51 = phi i32* [ %59, %57 ], [ %43, %39 ]
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* %50, align 4
  %54 = icmp ult i32 %52, %53
  br i1 %54, label %178, label %55

55:                                               ; preds = %48
  %56 = icmp ult i32 %53, %52
  br i1 %56, label %64, label %57

57:                                               ; preds = %55
  %58 = add i64 %49, -1
  %59 = getelementptr inbounds i32, i32* %51, i64 1
  %60 = getelementptr inbounds i32, i32* %50, i64 1
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %62, label %48

62:                                               ; preds = %57, %15
  %63 = icmp ult i64 %35, %26
  br i1 %63, label %178, label %64

64:                                               ; preds = %55, %62
  %65 = icmp eq i64 %35, %26
  br i1 %65, label %66, label %146

66:                                               ; preds = %64
  %67 = icmp eq i64 %26, 0
  br i1 %67, label %89, label %68

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::__tree_end_node"* %17 to i32**
  %70 = load i32*, i32** %69, align 8
  %71 = bitcast %"class.std::__1::__tree_end_node"* %17 to i32*
  %72 = select i1 %21, i32* %70, i32* %71
  %73 = bitcast %"class.std::__1::__tree_end_node"* %16 to i32**
  %74 = load i32*, i32** %73, align 8
  %75 = bitcast %"class.std::__1::__tree_end_node"* %16 to i32*
  %76 = select i1 %30, i32* %74, i32* %75
  br label %77

77:                                               ; preds = %84, %68
  %78 = phi i64 [ %85, %84 ], [ %26, %68 ]
  %79 = phi i32* [ %87, %84 ], [ %72, %68 ]
  %80 = phi i32* [ %86, %84 ], [ %76, %68 ]
  %81 = load i32, i32* %80, align 4
  %82 = load i32, i32* %79, align 4
  %83 = icmp eq i32 %82, %81
  br i1 %83, label %84, label %146

84:                                               ; preds = %77
  %85 = add i64 %78, -1
  %86 = getelementptr inbounds i32, i32* %80, i64 1
  %87 = getelementptr inbounds i32, i32* %79, i64 1
  %88 = icmp eq i64 %85, 0
  br i1 %88, label %89, label %77

89:                                               ; preds = %84, %66
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 1, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %101

93:                                               ; preds = %89
  %94 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_end_node"**
  %97 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, %94
  br i1 %100, label %117, label %108

101:                                              ; preds = %89, %101
  %102 = phi %"class.std::__1::__tree_node_base"* [ %104, %101 ], [ %91, %89 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %101

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %102, i64 0, i32 0
  br label %117

108:                                              ; preds = %93, %108
  %109 = phi %"class.std::__1::__tree_end_node"** [ %112, %108 ], [ %96, %93 ]
  %110 = bitcast %"class.std::__1::__tree_end_node"** %109 to %"class.std::__1::__tree_node_base"**
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 2
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %111
  br i1 %116, label %117, label %108

117:                                              ; preds = %108, %93, %106
  %118 = phi %"class.std::__1::__tree_end_node"* [ %107, %106 ], [ %97, %93 ], [ %113, %108 ]
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %130

122:                                              ; preds = %117
  %123 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %125 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.std::__1::__tree_end_node"**
  %126 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, %123
  br i1 %129, label %174, label %137

130:                                              ; preds = %117, %130
  %131 = phi %"class.std::__1::__tree_node_base"* [ %133, %130 ], [ %120, %117 ]
  %132 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %135, label %130

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 0
  br label %174

137:                                              ; preds = %122, %137
  %138 = phi %"class.std::__1::__tree_end_node"** [ %141, %137 ], [ %125, %122 ]
  %139 = bitcast %"class.std::__1::__tree_end_node"** %138 to %"class.std::__1::__tree_node_base"**
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %140, i64 0, i32 2
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %140
  br i1 %145, label %174, label %137

146:                                              ; preds = %77, %64
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 1, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, null
  br i1 %149, label %150, label %158

150:                                              ; preds = %146
  %151 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node_base"*
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %13, i64 2
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to %"class.std::__1::__tree_end_node"**
  %154 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %154, i64 0, i32 0
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %155, align 8
  %157 = icmp eq %"class.std::__1::__tree_node_base"* %156, %151
  br i1 %157, label %174, label %165

158:                                              ; preds = %146, %158
  %159 = phi %"class.std::__1::__tree_node_base"* [ %161, %158 ], [ %148, %146 ]
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, null
  br i1 %162, label %163, label %158

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %159, i64 0, i32 0
  br label %174

165:                                              ; preds = %150, %165
  %166 = phi %"class.std::__1::__tree_end_node"** [ %169, %165 ], [ %153, %150 ]
  %167 = bitcast %"class.std::__1::__tree_end_node"** %166 to %"class.std::__1::__tree_node_base"**
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %168, i64 0, i32 2
  %170 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %169, align 8
  %171 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %170, i64 0, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, %168
  br i1 %173, label %174, label %165

174:                                              ; preds = %165, %137, %163, %150, %135, %122
  %175 = phi %"class.std::__1::__tree_end_node"* [ %136, %135 ], [ %126, %122 ], [ %164, %163 ], [ %154, %150 ], [ %142, %137 ], [ %170, %165 ]
  %176 = phi %"class.std::__1::__tree_end_node"* [ %118, %135 ], [ %118, %122 ], [ %12, %163 ], [ %12, %150 ], [ %118, %137 ], [ %12, %165 ]
  %177 = icmp eq %"class.std::__1::__tree_end_node"* %176, %5
  br i1 %177, label %178, label %11

178:                                              ; preds = %62, %11, %174, %48, %2
  %179 = phi i1 [ true, %2 ], [ false, %48 ], [ false, %62 ], [ false, %11 ], [ true, %174 ]
  ret i1 %179
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt8analysis17DecorationManager21AreDecorationsTheSameEPKNS0_11InstructionES5_b(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readnone, %"class.spvtools::opt::Instruction"* nocapture readonly, %"class.spvtools::opt::Instruction"* nocapture readonly, i1 zeroext) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %145 [
    i32 71, label %7
    i32 72, label %7
    i32 332, label %7
    i32 5632, label %7
  ]

7:                                                ; preds = %4, %4, %4, %4
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %6, %9
  br i1 %10, label %11, label %145

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.252"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 48
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 1, i32 2
  %27 = xor i1 %25, true
  %28 = zext i1 %27 to i32
  %29 = select i1 %22, i32 %28, i32 %26
  %30 = trunc i64 %19 to i32
  %31 = sub i32 %30, %29
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6, i32 0, i32 1
  %34 = bitcast %"struct.spvtools::opt::Operand"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.252"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = sdiv exact i64 %38, 48
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %41 = load i8, i8* %40, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %44 = load i8, i8* %43, align 1, !range !3
  %45 = icmp eq i8 %44, 0
  %46 = select i1 %45, i32 1, i32 2
  %47 = xor i1 %45, true
  %48 = zext i1 %47 to i32
  %49 = select i1 %42, i32 %48, i32 %46
  %50 = trunc i64 %39 to i32
  %51 = sub i32 %50, %49
  %52 = icmp eq i32 %31, %51
  %53 = inttoptr i64 %17 to %"struct.spvtools::opt::Operand"*
  %54 = inttoptr i64 %37 to %"struct.spvtools::opt::Operand"*
  br i1 %52, label %55, label %145

55:                                               ; preds = %11
  %56 = zext i1 %3 to i32
  %57 = icmp ugt i32 %31, %56
  br i1 %57, label %58, label %145

58:                                               ; preds = %55
  %59 = zext i1 %3 to i64
  %60 = zext i32 %31 to i64
  br label %61

61:                                               ; preds = %142, %58
  %62 = phi i64 [ %59, %58 ], [ %143, %142 ]
  %63 = trunc i64 %62 to i32
  %64 = add i32 %29, %63
  %65 = zext i32 %64 to i64
  %66 = add i32 %49, %63
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %53, i64 %65, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %67, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %73, label %145

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %53, i64 %65, i32 1, i32 4, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %74, align 8
  %76 = icmp eq %"class.std::__1::vector.257"* %75, null
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %53, i64 %65, i32 1, i32 1
  %79 = load i64, i64* %78, align 8
  br label %88

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %75, i64 0, i32 0, i32 1
  %82 = bitcast i32** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.257"* %75 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 2
  br label %88

88:                                               ; preds = %80, %77
  %89 = phi i64 [ %87, %80 ], [ %79, %77 ]
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %67, i32 1, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %90, align 8
  %92 = icmp eq %"class.std::__1::vector.257"* %91, null
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %67, i32 1, i32 1
  %95 = load i64, i64* %94, align 8
  br label %104

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %91, i64 0, i32 0, i32 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector.257"* %91 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %99, %101
  %103 = ashr exact i64 %102, 2
  br label %104

104:                                              ; preds = %96, %93
  %105 = phi i64 [ %103, %96 ], [ %95, %93 ]
  %106 = icmp eq i64 %89, %105
  br i1 %106, label %107, label %145

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %91, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %67, i32 1, i32 2
  %110 = select i1 %92, i32** %109, i32** %108
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %75, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %53, i64 %65, i32 1, i32 2
  %114 = select i1 %76, i32** %113, i32** %112
  %115 = load i32*, i32** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %75, i64 0, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  %118 = load i32*, i32** %113, align 8
  %119 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %53, i64 %65, i32 1, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  br label %122

122:                                              ; preds = %139, %107
  %123 = phi i32* [ %111, %107 ], [ %141, %139 ]
  %124 = phi i32* [ %115, %107 ], [ %140, %139 ]
  br i1 %76, label %132, label %125

125:                                              ; preds = %122
  %126 = load i32*, i32** %112, align 8
  %127 = load i64, i64* %117, align 8
  %128 = ptrtoint i32* %126 to i64
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 2
  %131 = getelementptr inbounds i32, i32* %126, i64 %130
  br label %132

132:                                              ; preds = %125, %122
  %133 = phi i32* [ %131, %125 ], [ %121, %122 ]
  %134 = icmp eq i32* %124, %133
  br i1 %134, label %142, label %135

135:                                              ; preds = %132
  %136 = load i32, i32* %124, align 4
  %137 = load i32, i32* %123, align 4
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = getelementptr inbounds i32, i32* %124, i64 1
  %141 = getelementptr inbounds i32, i32* %123, i64 1
  br label %122

142:                                              ; preds = %132
  %143 = add nuw nsw i64 %62, 1
  %144 = icmp eq i64 %143, %60
  br i1 %144, label %145, label %61

145:                                              ; preds = %61, %104, %142, %135, %55, %4, %11, %7
  %146 = phi i1 [ false, %7 ], [ false, %11 ], [ false, %4 ], [ true, %55 ], [ false, %135 ], [ false, %61 ], [ false, %104 ], [ true, %142 ]
  ret i1 %146
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 1
  %3 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Module"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %3, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %3, i64 0, i32 13, i32 0, i32 1
  %8 = bitcast %"class.spvtools::opt::Instruction"** %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = inttoptr i64 %9 to %"class.spvtools::opt::Instruction"*
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, %10
  br i1 %11, label %21, label %12

12:                                               ; preds = %5, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %19, %12 ], [ %10, %5 ]
  %14 = phi i64 [ %18, %12 ], [ %9, %5 ]
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DecorationManager"* %0, %"class.spvtools::opt::Instruction"* %13)
  %15 = inttoptr i64 %14 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %16 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %15, i64 0, i32 1
  %17 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %18 to %"class.spvtools::opt::Instruction"*
  %20 = icmp eq %"class.spvtools::opt::Instruction"* %7, %19
  br i1 %20, label %21, label %12

21:                                               ; preds = %12, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1039", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1039", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.1039", align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %295 [
    i32 71, label %15
    i32 332, label %15
    i32 5632, label %15
    i32 72, label %15
    i32 74, label %105
    i32 75, label %105
  ]

15:                                               ; preds = %2, %2, %2, %2
  %16 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 4, !range !3
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i32 1, i32 2
  %24 = xor i1 %22, true
  %25 = zext i1 %24 to i32
  %26 = select i1 %19, i32 %25, i32 %23
  %27 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %26) #11
  store i32 %27, i32* %9, align 4
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %28, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %8) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 4
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to %"class.spvtools::opt::Instruction"***
  %37 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 5
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to %"class.spvtools::opt::Instruction"***
  %40 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %39, align 8
  %41 = icmp eq %"class.spvtools::opt::Instruction"** %37, %40
  %42 = ptrtoint %"class.spvtools::opt::Instruction"** %40 to i64
  br i1 %41, label %48, label %43

43:                                               ; preds = %15
  %44 = bitcast %"class.spvtools::opt::Instruction"** %37 to i64*
  store i64 %12, i64* %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, i64 1
  %46 = ptrtoint %"class.spvtools::opt::Instruction"** %45 to i64
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  store i64 %46, i64* %47, align 8
  br label %293

48:                                               ; preds = %15
  %49 = ptrtoint %"class.spvtools::opt::Instruction"** %37 to i64
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %49, %52
  %54 = ashr exact i64 %53, 3
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %48
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #12
  unreachable

59:                                               ; preds = %48
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %61 = sub i64 %42, %52
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %72

64:                                               ; preds = %59
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %55
  %67 = select i1 %66, i64 %55, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = icmp ugt i64 %67, 2305843009213693951
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  call void @abort() #12
  unreachable

72:                                               ; preds = %69, %59
  %73 = phi i64 [ %67, %69 ], [ 2305843009213693951, %59 ]
  %74 = shl i64 %73, 3
  %75 = call i8* @_Znwm(i64 %74) #13
  %76 = bitcast i8* %75 to %"class.spvtools::opt::Instruction"**
  br label %77

77:                                               ; preds = %72, %64
  %78 = phi i64 [ %73, %72 ], [ 0, %64 ]
  %79 = phi %"class.spvtools::opt::Instruction"** [ %76, %72 ], [ null, %64 ]
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %79, i64 %54
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %79, i64 %78
  %82 = ptrtoint %"class.spvtools::opt::Instruction"** %81 to i64
  %83 = bitcast %"class.spvtools::opt::Instruction"** %80 to i64*
  store i64 %12, i64* %83, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, i64 1
  %85 = ptrtoint %"class.spvtools::opt::Instruction"** %84 to i64
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %34 to %"class.spvtools::opt::Instruction"***
  %87 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %86, align 8
  %88 = load i64, i64* %50, align 8
  %89 = ptrtoint %"class.spvtools::opt::Instruction"** %87 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, i64 %92
  %94 = ptrtoint %"class.spvtools::opt::Instruction"** %93 to i64
  %95 = icmp sgt i64 %90, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %77
  %97 = bitcast %"class.spvtools::opt::Instruction"** %93 to i8*
  %98 = bitcast %"class.spvtools::opt::Instruction"** %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %90, i1 false) #11
  %99 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %86, align 8
  br label %100

100:                                              ; preds = %96, %77
  %101 = phi %"class.spvtools::opt::Instruction"** [ %87, %77 ], [ %99, %96 ]
  store i64 %94, i64* %51, align 8
  store i64 %85, i64* %50, align 8
  store i64 %82, i64* %60, align 8
  %102 = icmp eq %"class.spvtools::opt::Instruction"** %101, null
  br i1 %102, label %293, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.spvtools::opt::Instruction"** %101 to i8*
  call void @_ZdlPv(i8* %104) #13
  br label %293

105:                                              ; preds = %2, %2
  %106 = icmp eq i32 %14, 74
  %107 = select i1 %106, i32 1, i32 2
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %110 = bitcast %"struct.spvtools::opt::Operand"** %109 to i64*
  %111 = bitcast %"class.std::__1::vector.252"* %108 to i64*
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %113 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %114 = bitcast i32* %10 to i8*
  %115 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::tuple"* %3 to i8*
  %117 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %4, i64 0, i32 0
  br label %119

119:                                              ; preds = %291, %105
  %120 = phi i32 [ %107, %105 ], [ %292, %291 ]
  %121 = load i64, i64* %110, align 8
  %122 = load i64, i64* %111, align 8
  %123 = sub i64 %121, %122
  %124 = sdiv exact i64 %123, 48
  %125 = load i8, i8* %112, align 4, !range !3
  %126 = icmp eq i8 %125, 0
  %127 = load i8, i8* %113, align 1, !range !3
  %128 = icmp eq i8 %127, 0
  %129 = select i1 %128, i32 1, i32 2
  %130 = xor i1 %128, true
  %131 = zext i1 %130 to i32
  %132 = select i1 %126, i32 %131, i32 %129
  %133 = trunc i64 %124 to i32
  %134 = sub i32 %133, %132
  %135 = icmp ult i32 %120, %134
  br i1 %135, label %215, label %136

136:                                              ; preds = %119
  %137 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #11
  %138 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %132) #11
  store i32 %138, i32* %11, align 4
  %139 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #11
  %140 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::tuple.1039", %"class.std::__1::tuple.1039"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %141) #11
  %142 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %115, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %6) #11
  %143 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %142, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %141) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #11
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 9
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 10
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %145 to %"class.spvtools::opt::Instruction"***
  %147 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 11
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %148 to %"class.spvtools::opt::Instruction"***
  %150 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %149, align 8
  %151 = icmp eq %"class.spvtools::opt::Instruction"** %147, %150
  %152 = ptrtoint %"class.spvtools::opt::Instruction"** %150 to i64
  br i1 %151, label %158, label %153

153:                                              ; preds = %136
  %154 = bitcast %"class.spvtools::opt::Instruction"** %147 to i64*
  store i64 %12, i64* %154, align 8
  %155 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %147, i64 1
  %156 = ptrtoint %"class.spvtools::opt::Instruction"** %155 to i64
  %157 = bitcast %"struct.std::__1::__hash_node_base"* %145 to i64*
  store i64 %156, i64* %157, align 8
  br label %293

158:                                              ; preds = %136
  %159 = ptrtoint %"class.spvtools::opt::Instruction"** %147 to i64
  %160 = bitcast %"struct.std::__1::__hash_node_base"* %145 to i64*
  %161 = bitcast %"struct.std::__1::__hash_node_base"* %144 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %159, %162
  %164 = ashr exact i64 %163, 3
  %165 = add nsw i64 %164, 1
  %166 = icmp ugt i64 %165, 2305843009213693951
  br i1 %166, label %167, label %169

167:                                              ; preds = %158
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %144 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %168) #12
  unreachable

169:                                              ; preds = %158
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %148 to i64*
  %171 = sub i64 %152, %162
  %172 = ashr exact i64 %171, 3
  %173 = icmp ult i64 %172, 1152921504606846975
  br i1 %173, label %174, label %182

174:                                              ; preds = %169
  %175 = ashr exact i64 %171, 2
  %176 = icmp ult i64 %175, %165
  %177 = select i1 %176, i64 %165, i64 %175
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %174
  %180 = icmp ugt i64 %177, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  call void @abort() #12
  unreachable

182:                                              ; preds = %179, %169
  %183 = phi i64 [ %177, %179 ], [ 2305843009213693951, %169 ]
  %184 = shl i64 %183, 3
  %185 = call i8* @_Znwm(i64 %184) #13
  %186 = bitcast i8* %185 to %"class.spvtools::opt::Instruction"**
  br label %187

187:                                              ; preds = %182, %174
  %188 = phi i64 [ %183, %182 ], [ 0, %174 ]
  %189 = phi %"class.spvtools::opt::Instruction"** [ %186, %182 ], [ null, %174 ]
  %190 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %189, i64 %164
  %191 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %189, i64 %188
  %192 = ptrtoint %"class.spvtools::opt::Instruction"** %191 to i64
  %193 = bitcast %"class.spvtools::opt::Instruction"** %190 to i64*
  store i64 %12, i64* %193, align 8
  %194 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %190, i64 1
  %195 = ptrtoint %"class.spvtools::opt::Instruction"** %194 to i64
  %196 = bitcast %"struct.std::__1::__hash_node_base"* %144 to %"class.spvtools::opt::Instruction"***
  %197 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %196, align 8
  %198 = load i64, i64* %160, align 8
  %199 = ptrtoint %"class.spvtools::opt::Instruction"** %197 to i64
  %200 = sub i64 %198, %199
  %201 = ashr exact i64 %200, 3
  %202 = sub nsw i64 0, %201
  %203 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %190, i64 %202
  %204 = ptrtoint %"class.spvtools::opt::Instruction"** %203 to i64
  %205 = icmp sgt i64 %200, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %187
  %207 = bitcast %"class.spvtools::opt::Instruction"** %203 to i8*
  %208 = bitcast %"class.spvtools::opt::Instruction"** %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 %200, i1 false) #11
  %209 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %196, align 8
  br label %210

210:                                              ; preds = %206, %187
  %211 = phi %"class.spvtools::opt::Instruction"** [ %197, %187 ], [ %209, %206 ]
  store i64 %204, i64* %161, align 8
  store i64 %195, i64* %160, align 8
  store i64 %192, i64* %170, align 8
  %212 = icmp eq %"class.spvtools::opt::Instruction"** %211, null
  br i1 %212, label %293, label %213

213:                                              ; preds = %210
  %214 = bitcast %"class.spvtools::opt::Instruction"** %211 to i8*
  call void @_ZdlPv(i8* %214) #13
  br label %293

215:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #11
  store i32 -1431655766, i32* %10, align 4
  %216 = add i32 %132, %120
  %217 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %216) #11
  store i32 %217, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  store i32* %10, i32** %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %118) #11
  %218 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %115, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1039"* nonnull dereferenceable(1) %4) #11
  %219 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %218, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  %220 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %219, i64 6
  %221 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %219, i64 7
  %222 = bitcast %"struct.std::__1::__hash_node_base"* %221 to %"class.spvtools::opt::Instruction"***
  %223 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %222, align 8
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %219, i64 8
  %225 = bitcast %"struct.std::__1::__hash_node_base"* %224 to %"class.spvtools::opt::Instruction"***
  %226 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %225, align 8
  %227 = icmp eq %"class.spvtools::opt::Instruction"** %223, %226
  %228 = ptrtoint %"class.spvtools::opt::Instruction"** %226 to i64
  br i1 %227, label %234, label %229

229:                                              ; preds = %215
  %230 = bitcast %"class.spvtools::opt::Instruction"** %223 to i64*
  store i64 %12, i64* %230, align 8
  %231 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %223, i64 1
  %232 = ptrtoint %"class.spvtools::opt::Instruction"** %231 to i64
  %233 = bitcast %"struct.std::__1::__hash_node_base"* %221 to i64*
  store i64 %232, i64* %233, align 8
  br label %291

234:                                              ; preds = %215
  %235 = ptrtoint %"class.spvtools::opt::Instruction"** %223 to i64
  %236 = bitcast %"struct.std::__1::__hash_node_base"* %221 to i64*
  %237 = bitcast %"struct.std::__1::__hash_node_base"* %220 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = sub i64 %235, %238
  %240 = ashr exact i64 %239, 3
  %241 = add nsw i64 %240, 1
  %242 = icmp ugt i64 %241, 2305843009213693951
  br i1 %242, label %243, label %245

243:                                              ; preds = %234
  %244 = bitcast %"struct.std::__1::__hash_node_base"* %220 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %244) #12
  unreachable

245:                                              ; preds = %234
  %246 = bitcast %"struct.std::__1::__hash_node_base"* %224 to i64*
  %247 = sub i64 %228, %238
  %248 = ashr exact i64 %247, 3
  %249 = icmp ult i64 %248, 1152921504606846975
  br i1 %249, label %250, label %258

250:                                              ; preds = %245
  %251 = ashr exact i64 %247, 2
  %252 = icmp ult i64 %251, %241
  %253 = select i1 %252, i64 %241, i64 %251
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %263, label %255

255:                                              ; preds = %250
  %256 = icmp ugt i64 %253, 2305843009213693951
  br i1 %256, label %257, label %258

257:                                              ; preds = %255
  call void @abort() #12
  unreachable

258:                                              ; preds = %255, %245
  %259 = phi i64 [ %253, %255 ], [ 2305843009213693951, %245 ]
  %260 = shl i64 %259, 3
  %261 = call i8* @_Znwm(i64 %260) #13
  %262 = bitcast i8* %261 to %"class.spvtools::opt::Instruction"**
  br label %263

263:                                              ; preds = %258, %250
  %264 = phi i64 [ %259, %258 ], [ 0, %250 ]
  %265 = phi %"class.spvtools::opt::Instruction"** [ %262, %258 ], [ null, %250 ]
  %266 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %265, i64 %240
  %267 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %265, i64 %264
  %268 = ptrtoint %"class.spvtools::opt::Instruction"** %267 to i64
  %269 = bitcast %"class.spvtools::opt::Instruction"** %266 to i64*
  store i64 %12, i64* %269, align 8
  %270 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %266, i64 1
  %271 = ptrtoint %"class.spvtools::opt::Instruction"** %270 to i64
  %272 = bitcast %"struct.std::__1::__hash_node_base"* %220 to %"class.spvtools::opt::Instruction"***
  %273 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %272, align 8
  %274 = load i64, i64* %236, align 8
  %275 = ptrtoint %"class.spvtools::opt::Instruction"** %273 to i64
  %276 = sub i64 %274, %275
  %277 = ashr exact i64 %276, 3
  %278 = sub nsw i64 0, %277
  %279 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %266, i64 %278
  %280 = ptrtoint %"class.spvtools::opt::Instruction"** %279 to i64
  %281 = icmp sgt i64 %276, 0
  br i1 %281, label %282, label %286

282:                                              ; preds = %263
  %283 = bitcast %"class.spvtools::opt::Instruction"** %279 to i8*
  %284 = bitcast %"class.spvtools::opt::Instruction"** %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %283, i8* align 8 %284, i64 %276, i1 false) #11
  %285 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %272, align 8
  br label %286

286:                                              ; preds = %282, %263
  %287 = phi %"class.spvtools::opt::Instruction"** [ %273, %263 ], [ %285, %282 ]
  store i64 %280, i64* %237, align 8
  store i64 %271, i64* %236, align 8
  store i64 %268, i64* %246, align 8
  %288 = icmp eq %"class.spvtools::opt::Instruction"** %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %286
  %290 = bitcast %"class.spvtools::opt::Instruction"** %287 to i8*
  call void @_ZdlPv(i8* %290) #13
  br label %291

291:                                              ; preds = %229, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #11
  %292 = add i32 %120, %107
  br label %119

293:                                              ; preds = %213, %210, %153, %103, %100, %43
  %294 = phi i8* [ %16, %43 ], [ %16, %100 ], [ %16, %103 ], [ %137, %153 ], [ %137, %210 ], [ %137, %213 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %294) #11
  br label %295

295:                                              ; preds = %293, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationE6SpvOp_NSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readonly, i32, %"class.std::__1::vector.252"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 1
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = tail call i8* @_Znwm(i64 112) #13
  %9 = bitcast i8* %8 to %"class.spvtools::opt::Instruction"*
  tail call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %9, %"class.spvtools::opt::IRContext"* %7, i32 %1, i32 0, i32 0, %"class.std::__1::vector.252"* dereferenceable(24) %2) #11
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %15, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DecorationManager"* %16, %"class.spvtools::opt::Instruction"* nonnull %9) #11
  %17 = load i32, i32* %10, align 8
  br label %18

18:                                               ; preds = %14, %3
  %19 = phi i32 [ %11, %3 ], [ %17, %14 ]
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %23, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %24, %"class.spvtools::opt::Instruction"* nonnull %9) #11
  br label %25

25:                                               ; preds = %22, %18
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %27, i64 0, i32 13, i32 0, i32 1
  %29 = getelementptr inbounds i8, i8* %8, i64 8
  %30 = bitcast i8* %29 to %"class.spvtools::opt::Instruction"**
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds i8, i8* %8, i64 16
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 2
  %38 = bitcast %"class.spvtools::opt::Instruction"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast i8* %29 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast i8* %34 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %42 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %42, i64 0, i32 1
  %44 = bitcast %"class.spvtools::opt::Instruction"** %43 to i64*
  store i64 %40, i64* %44, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  br label %45

45:                                               ; preds = %25, %33
  store %"class.spvtools::opt::Instruction"* %28, %"class.spvtools::opt::Instruction"** %30, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %27, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds i8, i8* %8, i64 16
  %50 = bitcast i8* %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.spvtools::opt::Instruction"** %46 to i8**
  store i8* %8, i8** %51, align 8
  %52 = bitcast i8* %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %53 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %52, align 8
  %54 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %53, i64 0, i32 1
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i8**
  store i8* %8, i8** %55, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector.252"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationEjj(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.252", align 8
  %5 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #11
  %9 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %13 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %14 = bitcast i32** %12 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %13, %"struct.std::__1::aligned_storage<4, 4>::type"** %14, align 8
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %16 = bitcast %"class.std::__1::unique_ptr.254"* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %13 to i32*
  store i64 1, i64* %11, align 8
  store i32 %1, i32* %17, align 8
  %18 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %24 = bitcast i32** %22 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %23, %"struct.std::__1::aligned_storage<4, 4>::type"** %24, align 8
  %25 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %26 = bitcast %"class.std::__1::unique_ptr.254"* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %19, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %28 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %32 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %33 = bitcast i32** %31 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %32, %"struct.std::__1::aligned_storage<4, 4>::type"** %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %35 = bitcast %"class.std::__1::unique_ptr.254"* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %32 to i32*
  store i64 1, i64* %30, align 8
  store i32 %2, i32* %36, align 8
  %37 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 0
  store i32 6, i32* %37, align 8
  %38 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %38, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 2
  %42 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 3, i64 0
  %43 = bitcast i32** %41 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %42, %"struct.std::__1::aligned_storage<4, 4>::type"** %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 4
  %45 = bitcast %"class.std::__1::unique_ptr.254"* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %38, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  %47 = call i8* @_Znwm(i64 96) #13
  %48 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %4, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::vector.252"* %4 to i8**
  store i8* %47, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 96
  %51 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"struct.spvtools::opt::Operand"** %51 to i8**
  store i8* %50, i8** %52, align 8
  %53 = bitcast i8* %47 to i32*
  %54 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %53, align 8
  %56 = getelementptr inbounds i8, i8* %47, i64 8
  %57 = bitcast i8* %56 to %"class.spvtools::utils::SmallVector"*
  %58 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %59 = bitcast i8* %56 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds i8, i8* %47, i64 16
  %61 = bitcast i8* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %47, i64 24
  %63 = getelementptr inbounds i8, i8* %47, i64 32
  %64 = bitcast i8* %62 to i8**
  store i8* %63, i8** %64, align 8
  %65 = getelementptr inbounds i8, i8* %47, i64 40
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %57, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %58) #11
  %68 = getelementptr inbounds i8, i8* %47, i64 48
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 0
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* %69, align 8
  %72 = getelementptr inbounds i8, i8* %47, i64 56
  %73 = bitcast i8* %72 to %"class.spvtools::utils::SmallVector"*
  %74 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1
  %75 = bitcast i8* %72 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds i8, i8* %47, i64 64
  %77 = bitcast i8* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %47, i64 72
  %79 = getelementptr inbounds i8, i8* %47, i64 80
  %80 = bitcast i8* %78 to i8**
  store i8* %79, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %47, i64 88
  %82 = bitcast i8* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %73, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %74) #11
  %84 = getelementptr inbounds i8, i8* %47, i64 96
  %85 = bitcast %"struct.spvtools::opt::Operand"** %48 to i64*
  %86 = ptrtoint i8* %84 to i64
  store i64 %86, i64* %85, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationE6SpvOp_NSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %0, i32 71, %"class.std::__1::vector.252"* nonnull %4)
  %87 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %4, i64 0, i32 0, i32 0
  %88 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %87, align 8
  %89 = icmp eq %"struct.spvtools::opt::Operand"* %88, null
  br i1 %89, label %118, label %90

90:                                               ; preds = %3
  %91 = bitcast %"struct.spvtools::opt::Operand"* %88 to i8*
  %92 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %48, align 8
  %93 = icmp eq %"struct.spvtools::opt::Operand"* %92, %88
  br i1 %93, label %116, label %94

94:                                               ; preds = %90, %112
  %95 = phi %"struct.spvtools::opt::Operand"* [ %96, %112 ], [ %92, %90 ]
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 -1
  %97 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %95, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %98, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %98, align 8
  %100 = icmp eq %"class.std::__1::vector.257"* %99, null
  br i1 %100, label %112, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %99, i64 0, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = icmp eq i32* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %101
  %106 = ptrtoint i32* %103 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %99, i64 0, i32 0, i32 1
  %108 = bitcast i32** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast i32* %103 to i8*
  call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %105, %101
  %111 = bitcast %"class.std::__1::vector.257"* %99 to i8*
  call void @_ZdlPv(i8* %111) #13
  br label %112

112:                                              ; preds = %110, %94
  %113 = icmp eq %"struct.spvtools::opt::Operand"* %96, %88
  br i1 %113, label %114, label %94

114:                                              ; preds = %112
  %115 = load i8*, i8** %49, align 8
  br label %116

116:                                              ; preds = %114, %90
  %117 = phi i8* [ %115, %114 ], [ %91, %90 ]
  store %"struct.spvtools::opt::Operand"* %88, %"struct.spvtools::opt::Operand"** %48, align 8
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %3, %116
  %119 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %120, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %120, align 8
  %122 = icmp eq %"class.std::__1::vector.257"* %121, null
  br i1 %122, label %134, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %121, i64 0, i32 0, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = icmp eq i32* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = ptrtoint i32* %125 to i64
  %129 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %121, i64 0, i32 0, i32 1
  %130 = bitcast i32** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = bitcast i32* %125 to i8*
  call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %127, %123
  %133 = bitcast %"class.std::__1::vector.257"* %121 to i8*
  call void @_ZdlPv(i8* %133) #13
  br label %134

134:                                              ; preds = %118, %132
  %135 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %136 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %137 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %136, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %136, align 8
  %138 = icmp eq %"class.std::__1::vector.257"* %137, null
  br i1 %138, label %177, label %166

139:                                              ; preds = %177
  %140 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %179, i64 0, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %139
  %144 = ptrtoint i32* %141 to i64
  %145 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %179, i64 0, i32 0, i32 1
  %146 = bitcast i32** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast i32* %141 to i8*
  call void @_ZdlPv(i8* %147) #13
  br label %148

148:                                              ; preds = %143, %139
  %149 = bitcast %"class.std::__1::vector.257"* %179 to i8*
  call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %177, %148
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %151 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %151, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %151, align 8
  %153 = icmp eq %"class.std::__1::vector.257"* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %152, i64 0, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = ptrtoint i32* %156 to i64
  %160 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %152, i64 0, i32 0, i32 1
  %161 = bitcast i32** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %158, %154
  %164 = bitcast %"class.std::__1::vector.257"* %152 to i8*
  call void @_ZdlPv(i8* %164) #13
  br label %165

165:                                              ; preds = %150, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #11
  ret void

166:                                              ; preds = %134
  %167 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %137, i64 0, i32 0, i32 0
  %168 = load i32*, i32** %167, align 8
  %169 = icmp eq i32* %168, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %166
  %171 = ptrtoint i32* %168 to i64
  %172 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %137, i64 0, i32 0, i32 1
  %173 = bitcast i32** %172 to i64*
  store i64 %171, i64* %173, align 8
  %174 = bitcast i32* %168 to i8*
  call void @_ZdlPv(i8* %174) #13
  br label %175

175:                                              ; preds = %170, %166
  %176 = bitcast %"class.std::__1::vector.257"* %137 to i8*
  call void @_ZdlPv(i8* %176) #13
  br label %177

177:                                              ; preds = %175, %134
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %178 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %179 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %178, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %178, align 8
  %180 = icmp eq %"class.std::__1::vector.257"* %179, null
  br i1 %180, label %150, label %139
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager16AddDecorationValEjjj(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.252", align 8
  %6 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %10) #11
  %11 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %14 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %16 = bitcast i32** %14 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %15, %"struct.std::__1::aligned_storage<4, 4>::type"** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %18 = bitcast %"class.std::__1::unique_ptr.254"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %15 to i32*
  store i64 1, i64* %13, align 8
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %21, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %26 = bitcast i32** %24 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %25, %"struct.std::__1::aligned_storage<4, 4>::type"** %26, align 8
  %27 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %28 = bitcast %"class.std::__1::unique_ptr.254"* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %21, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  %30 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %34 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %35 = bitcast i32** %33 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %34, %"struct.std::__1::aligned_storage<4, 4>::type"** %35, align 8
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %37 = bitcast %"class.std::__1::unique_ptr.254"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %34 to i32*
  store i64 1, i64* %32, align 8
  store i32 %2, i32* %38, align 8
  %39 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 6, i32* %39, align 8
  %40 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %44 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.254"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %49 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #11
  %50 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %54 = bitcast i32** %52 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %53, %"struct.std::__1::aligned_storage<4, 4>::type"** %54, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %56 = bitcast %"class.std::__1::unique_ptr.254"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %53 to i32*
  store i64 1, i64* %51, align 8
  store i32 %3, i32* %57, align 8
  %58 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 0
  store i32 6, i32* %58, align 8
  %59 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1
  %60 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %59, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 2
  %63 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 3, i64 0
  %64 = bitcast i32** %62 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %63, %"struct.std::__1::aligned_storage<4, 4>::type"** %64, align 8
  %65 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 4
  %66 = bitcast %"class.std::__1::unique_ptr.254"* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %59, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %68 = call i8* @_Znwm(i64 144) #13
  %69 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %5, i64 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::vector.252"* %5 to i8**
  store i8* %68, i8** %70, align 8
  %71 = getelementptr inbounds i8, i8* %68, i64 144
  %72 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"struct.spvtools::opt::Operand"** %72 to i8**
  store i8* %71, i8** %73, align 8
  %74 = bitcast i8* %68 to i32*
  %75 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  store i32 %76, i32* %74, align 8
  %77 = getelementptr inbounds i8, i8* %68, i64 8
  %78 = bitcast i8* %77 to %"class.spvtools::utils::SmallVector"*
  %79 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %80 = bitcast i8* %77 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds i8, i8* %68, i64 16
  %82 = bitcast i8* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %68, i64 24
  %84 = getelementptr inbounds i8, i8* %68, i64 32
  %85 = bitcast i8* %83 to i8**
  store i8* %84, i8** %85, align 8
  %86 = getelementptr inbounds i8, i8* %68, i64 40
  %87 = bitcast i8* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %78, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %79) #11
  %89 = getelementptr inbounds i8, i8* %68, i64 48
  %90 = bitcast i8* %89 to i32*
  %91 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  %92 = load i32, i32* %91, align 8
  store i32 %92, i32* %90, align 8
  %93 = getelementptr inbounds i8, i8* %68, i64 56
  %94 = bitcast i8* %93 to %"class.spvtools::utils::SmallVector"*
  %95 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %96 = bitcast i8* %93 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds i8, i8* %68, i64 64
  %98 = bitcast i8* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %68, i64 72
  %100 = getelementptr inbounds i8, i8* %68, i64 80
  %101 = bitcast i8* %99 to i8**
  store i8* %100, i8** %101, align 8
  %102 = getelementptr inbounds i8, i8* %68, i64 88
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %94, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %95) #11
  %105 = getelementptr inbounds i8, i8* %68, i64 96
  %106 = bitcast i8* %105 to i32*
  %107 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 0
  %108 = load i32, i32* %107, align 8
  store i32 %108, i32* %106, align 8
  %109 = getelementptr inbounds i8, i8* %68, i64 104
  %110 = bitcast i8* %109 to %"class.spvtools::utils::SmallVector"*
  %111 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1
  %112 = bitcast i8* %109 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = getelementptr inbounds i8, i8* %68, i64 112
  %114 = bitcast i8* %113 to i64*
  store i64 0, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %68, i64 120
  %116 = getelementptr inbounds i8, i8* %68, i64 128
  %117 = bitcast i8* %115 to i8**
  store i8* %116, i8** %117, align 8
  %118 = getelementptr inbounds i8, i8* %68, i64 136
  %119 = bitcast i8* %118 to i64*
  store i64 0, i64* %119, align 8
  %120 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #11
  %121 = getelementptr inbounds i8, i8* %68, i64 144
  %122 = bitcast %"struct.spvtools::opt::Operand"** %69 to i64*
  %123 = ptrtoint i8* %121 to i64
  store i64 %123, i64* %122, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationE6SpvOp_NSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %0, i32 71, %"class.std::__1::vector.252"* nonnull %5)
  %124 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %5, i64 0, i32 0, i32 0
  %125 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %124, align 8
  %126 = icmp eq %"struct.spvtools::opt::Operand"* %125, null
  br i1 %126, label %155, label %127

127:                                              ; preds = %4
  %128 = bitcast %"struct.spvtools::opt::Operand"* %125 to i8*
  %129 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %69, align 8
  %130 = icmp eq %"struct.spvtools::opt::Operand"* %129, %125
  br i1 %130, label %153, label %131

131:                                              ; preds = %127, %149
  %132 = phi %"struct.spvtools::opt::Operand"* [ %133, %149 ], [ %129, %127 ]
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 -1
  %134 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %136 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %135, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %135, align 8
  %137 = icmp eq %"class.std::__1::vector.257"* %136, null
  br i1 %137, label %149, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %136, i64 0, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = ptrtoint i32* %140 to i64
  %144 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %136, i64 0, i32 0, i32 1
  %145 = bitcast i32** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast i32* %140 to i8*
  call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %142, %138
  %148 = bitcast %"class.std::__1::vector.257"* %136 to i8*
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %147, %131
  %150 = icmp eq %"struct.spvtools::opt::Operand"* %133, %125
  br i1 %150, label %151, label %131

151:                                              ; preds = %149
  %152 = load i8*, i8** %70, align 8
  br label %153

153:                                              ; preds = %151, %127
  %154 = phi i8* [ %152, %151 ], [ %128, %127 ]
  store %"struct.spvtools::opt::Operand"* %125, %"struct.spvtools::opt::Operand"** %69, align 8
  call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %4, %153
  %156 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %158 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %157, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %157, align 8
  %159 = icmp eq %"class.std::__1::vector.257"* %158, null
  br i1 %159, label %171, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %158, i64 0, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = icmp eq i32* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %160
  %165 = ptrtoint i32* %162 to i64
  %166 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %158, i64 0, i32 0, i32 1
  %167 = bitcast i32** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast i32* %162 to i8*
  call void @_ZdlPv(i8* %168) #13
  br label %169

169:                                              ; preds = %164, %160
  %170 = bitcast %"class.std::__1::vector.257"* %158 to i8*
  call void @_ZdlPv(i8* %170) #13
  br label %171

171:                                              ; preds = %155, %169
  %172 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %173 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %174 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %173, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %173, align 8
  %175 = icmp eq %"class.std::__1::vector.257"* %174, null
  br i1 %175, label %229, label %218

176:                                              ; preds = %245
  %177 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %247, i64 0, i32 0, i32 0
  %178 = load i32*, i32** %177, align 8
  %179 = icmp eq i32* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  %181 = ptrtoint i32* %178 to i64
  %182 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %247, i64 0, i32 0, i32 1
  %183 = bitcast i32** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = bitcast i32* %178 to i8*
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %180, %176
  %186 = bitcast %"class.std::__1::vector.257"* %247 to i8*
  call void @_ZdlPv(i8* %186) #13
  br label %187

187:                                              ; preds = %245, %185
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %189 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %188, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %188, align 8
  %190 = icmp eq %"class.std::__1::vector.257"* %189, null
  br i1 %190, label %202, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %189, i64 0, i32 0, i32 0
  %193 = load i32*, i32** %192, align 8
  %194 = icmp eq i32* %193, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i32* %193 to i64
  %197 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %189, i64 0, i32 0, i32 1
  %198 = bitcast i32** %197 to i64*
  store i64 %196, i64* %198, align 8
  %199 = bitcast i32* %193 to i8*
  call void @_ZdlPv(i8* %199) #13
  br label %200

200:                                              ; preds = %195, %191
  %201 = bitcast %"class.std::__1::vector.257"* %189 to i8*
  call void @_ZdlPv(i8* %201) #13
  br label %202

202:                                              ; preds = %187, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %203 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %204 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %203, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %203, align 8
  %205 = icmp eq %"class.std::__1::vector.257"* %204, null
  br i1 %205, label %217, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %204, i64 0, i32 0, i32 0
  %208 = load i32*, i32** %207, align 8
  %209 = icmp eq i32* %208, null
  br i1 %209, label %215, label %210

210:                                              ; preds = %206
  %211 = ptrtoint i32* %208 to i64
  %212 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %204, i64 0, i32 0, i32 1
  %213 = bitcast i32** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast i32* %208 to i8*
  call void @_ZdlPv(i8* %214) #13
  br label %215

215:                                              ; preds = %210, %206
  %216 = bitcast %"class.std::__1::vector.257"* %204 to i8*
  call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %202, %215
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %10) #11
  ret void

218:                                              ; preds = %171
  %219 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %174, i64 0, i32 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = icmp eq i32* %220, null
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = ptrtoint i32* %220 to i64
  %224 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %174, i64 0, i32 0, i32 1
  %225 = bitcast i32** %224 to i64*
  store i64 %223, i64* %225, align 8
  %226 = bitcast i32* %220 to i8*
  call void @_ZdlPv(i8* %226) #13
  br label %227

227:                                              ; preds = %222, %218
  %228 = bitcast %"class.std::__1::vector.257"* %174 to i8*
  call void @_ZdlPv(i8* %228) #13
  br label %229

229:                                              ; preds = %227, %171
  %230 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %230, align 8
  %231 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %232 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %231, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %231, align 8
  %233 = icmp eq %"class.std::__1::vector.257"* %232, null
  br i1 %233, label %245, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %232, i64 0, i32 0, i32 0
  %236 = load i32*, i32** %235, align 8
  %237 = icmp eq i32* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = ptrtoint i32* %236 to i64
  %240 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %232, i64 0, i32 0, i32 1
  %241 = bitcast i32** %240 to i64*
  store i64 %239, i64* %241, align 8
  %242 = bitcast i32* %236 to i8*
  call void @_ZdlPv(i8* %242) #13
  br label %243

243:                                              ; preds = %238, %234
  %244 = bitcast %"class.std::__1::vector.257"* %232 to i8*
  call void @_ZdlPv(i8* %244) #13
  br label %245

245:                                              ; preds = %243, %229
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %246 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %247 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %246, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %246, align 8
  %248 = icmp eq %"class.std::__1::vector.257"* %247, null
  br i1 %248, label %187, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager19AddMemberDecorationEjjjj(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.252", align 8
  %7 = alloca [4 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = bitcast [4 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %12) #11
  %13 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %18 = bitcast i32** %16 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %17, %"struct.std::__1::aligned_storage<4, 4>::type"** %18, align 8
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %20 = bitcast %"class.std::__1::unique_ptr.254"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %17 to i32*
  store i64 1, i64* %15, align 8
  store i32 %1, i32* %21, align 8
  %22 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %23, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %27 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %28 = bitcast i32** %26 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %27, %"struct.std::__1::aligned_storage<4, 4>::type"** %28, align 8
  %29 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %30 = bitcast %"class.std::__1::unique_ptr.254"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %23, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %32 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.254"* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %36 to i32*
  store i64 1, i64* %34, align 8
  store i32 %2, i32* %40, align 8
  %41 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  store i32 6, i32* %41, align 8
  %42 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 2
  %46 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 3, i64 0
  %47 = bitcast i32** %45 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %46, %"struct.std::__1::aligned_storage<4, 4>::type"** %47, align 8
  %48 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4
  %49 = bitcast %"class.std::__1::unique_ptr.254"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %42, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %51 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %56 = bitcast i32** %54 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %55, %"struct.std::__1::aligned_storage<4, 4>::type"** %56, align 8
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %58 = bitcast %"class.std::__1::unique_ptr.254"* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %55 to i32*
  store i64 1, i64* %53, align 8
  store i32 %3, i32* %59, align 8
  %60 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 0
  store i32 6, i32* %60, align 8
  %61 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %61, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 2
  %65 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 3, i64 0
  %66 = bitcast i32** %64 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %65, %"struct.std::__1::aligned_storage<4, 4>::type"** %66, align 8
  %67 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 4
  %68 = bitcast %"class.std::__1::unique_ptr.254"* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %61, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %70 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %75 = bitcast i32** %73 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %74, %"struct.std::__1::aligned_storage<4, 4>::type"** %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %77 = bitcast %"class.std::__1::unique_ptr.254"* %76 to i64*
  store i64 0, i64* %77, align 8
  %78 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %74 to i32*
  store i64 1, i64* %72, align 8
  store i32 %4, i32* %78, align 8
  %79 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 0
  store i32 6, i32* %79, align 8
  %80 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1
  %81 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %80, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %81, align 8
  %82 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1, i32 1
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1, i32 2
  %84 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1, i32 3, i64 0
  %85 = bitcast i32** %83 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %84, %"struct.std::__1::aligned_storage<4, 4>::type"** %85, align 8
  %86 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1, i32 4
  %87 = bitcast %"class.std::__1::unique_ptr.254"* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %80, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %89 = call i8* @_Znwm(i64 192) #13
  %90 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %6, i64 0, i32 0, i32 1
  %91 = bitcast %"class.std::__1::vector.252"* %6 to i8**
  store i8* %89, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %89, i64 192
  %93 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast %"struct.spvtools::opt::Operand"** %93 to i8**
  store i8* %92, i8** %94, align 8
  %95 = bitcast i8* %89 to i32*
  %96 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  store i32 %97, i32* %95, align 8
  %98 = getelementptr inbounds i8, i8* %89, i64 8
  %99 = bitcast i8* %98 to %"class.spvtools::utils::SmallVector"*
  %100 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %101 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %89, i64 16
  %103 = bitcast i8* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %89, i64 24
  %105 = getelementptr inbounds i8, i8* %89, i64 32
  %106 = bitcast i8* %104 to i8**
  store i8* %105, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %89, i64 40
  %108 = bitcast i8* %107 to i64*
  store i64 0, i64* %108, align 8
  %109 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %99, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %100) #11
  %110 = getelementptr inbounds i8, i8* %89, i64 48
  %111 = bitcast i8* %110 to i32*
  %112 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 0
  %113 = load i32, i32* %112, align 8
  store i32 %113, i32* %111, align 8
  %114 = getelementptr inbounds i8, i8* %89, i64 56
  %115 = bitcast i8* %114 to %"class.spvtools::utils::SmallVector"*
  %116 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1
  %117 = bitcast i8* %114 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds i8, i8* %89, i64 64
  %119 = bitcast i8* %118 to i64*
  store i64 0, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %89, i64 72
  %121 = getelementptr inbounds i8, i8* %89, i64 80
  %122 = bitcast i8* %120 to i8**
  store i8* %121, i8** %122, align 8
  %123 = getelementptr inbounds i8, i8* %89, i64 88
  %124 = bitcast i8* %123 to i64*
  store i64 0, i64* %124, align 8
  %125 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %115, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %116) #11
  %126 = getelementptr inbounds i8, i8* %89, i64 96
  %127 = bitcast i8* %126 to i32*
  %128 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 0
  %129 = load i32, i32* %128, align 8
  store i32 %129, i32* %127, align 8
  %130 = getelementptr inbounds i8, i8* %89, i64 104
  %131 = bitcast i8* %130 to %"class.spvtools::utils::SmallVector"*
  %132 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1
  %133 = bitcast i8* %130 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %134 = getelementptr inbounds i8, i8* %89, i64 112
  %135 = bitcast i8* %134 to i64*
  store i64 0, i64* %135, align 8
  %136 = getelementptr inbounds i8, i8* %89, i64 120
  %137 = getelementptr inbounds i8, i8* %89, i64 128
  %138 = bitcast i8* %136 to i8**
  store i8* %137, i8** %138, align 8
  %139 = getelementptr inbounds i8, i8* %89, i64 136
  %140 = bitcast i8* %139 to i64*
  store i64 0, i64* %140, align 8
  %141 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %131, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %132) #11
  %142 = getelementptr inbounds i8, i8* %89, i64 144
  %143 = bitcast i8* %142 to i32*
  %144 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 0
  %145 = load i32, i32* %144, align 8
  store i32 %145, i32* %143, align 8
  %146 = getelementptr inbounds i8, i8* %89, i64 152
  %147 = bitcast i8* %146 to %"class.spvtools::utils::SmallVector"*
  %148 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1
  %149 = bitcast i8* %146 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %150 = getelementptr inbounds i8, i8* %89, i64 160
  %151 = bitcast i8* %150 to i64*
  store i64 0, i64* %151, align 8
  %152 = getelementptr inbounds i8, i8* %89, i64 168
  %153 = getelementptr inbounds i8, i8* %89, i64 176
  %154 = bitcast i8* %152 to i8**
  store i8* %153, i8** %154, align 8
  %155 = getelementptr inbounds i8, i8* %89, i64 184
  %156 = bitcast i8* %155 to i64*
  store i64 0, i64* %156, align 8
  %157 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %147, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %148) #11
  %158 = getelementptr inbounds i8, i8* %89, i64 192
  %159 = bitcast %"struct.spvtools::opt::Operand"** %90 to i64*
  %160 = ptrtoint i8* %158 to i64
  store i64 %160, i64* %159, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager13AddDecorationE6SpvOp_NSt3__16vectorINS0_7OperandENS4_9allocatorIS6_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %0, i32 72, %"class.std::__1::vector.252"* nonnull %6)
  %161 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %6, i64 0, i32 0, i32 0
  %162 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %161, align 8
  %163 = icmp eq %"struct.spvtools::opt::Operand"* %162, null
  br i1 %163, label %192, label %164

164:                                              ; preds = %5
  %165 = bitcast %"struct.spvtools::opt::Operand"* %162 to i8*
  %166 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %90, align 8
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %166, %162
  br i1 %167, label %190, label %168

168:                                              ; preds = %164, %186
  %169 = phi %"struct.spvtools::opt::Operand"* [ %170, %186 ], [ %166, %164 ]
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %169, i64 -1
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %169, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %172 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %169, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %172, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %172, align 8
  %174 = icmp eq %"class.std::__1::vector.257"* %173, null
  br i1 %174, label %186, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %173, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint i32* %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %173, i64 0, i32 0, i32 1
  %182 = bitcast i32** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast i32* %177 to i8*
  call void @_ZdlPv(i8* %183) #13
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.257"* %173 to i8*
  call void @_ZdlPv(i8* %185) #13
  br label %186

186:                                              ; preds = %184, %168
  %187 = icmp eq %"struct.spvtools::opt::Operand"* %170, %162
  br i1 %187, label %188, label %168

188:                                              ; preds = %186
  %189 = load i8*, i8** %91, align 8
  br label %190

190:                                              ; preds = %188, %164
  %191 = phi i8* [ %189, %188 ], [ %165, %164 ]
  store %"struct.spvtools::opt::Operand"* %162, %"struct.spvtools::opt::Operand"** %90, align 8
  call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %5, %190
  %193 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %194 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 3, i32 1, i32 4, i32 0, i32 0, i32 0
  %195 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %194, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %194, align 8
  %196 = icmp eq %"class.std::__1::vector.257"* %195, null
  br i1 %196, label %208, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %195, i64 0, i32 0, i32 0
  %199 = load i32*, i32** %198, align 8
  %200 = icmp eq i32* %199, null
  br i1 %200, label %206, label %201

201:                                              ; preds = %197
  %202 = ptrtoint i32* %199 to i64
  %203 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %195, i64 0, i32 0, i32 1
  %204 = bitcast i32** %203 to i64*
  store i64 %202, i64* %204, align 8
  %205 = bitcast i32* %199 to i8*
  call void @_ZdlPv(i8* %205) #13
  br label %206

206:                                              ; preds = %201, %197
  %207 = bitcast %"class.std::__1::vector.257"* %195 to i8*
  call void @_ZdlPv(i8* %207) #13
  br label %208

208:                                              ; preds = %192, %206
  %209 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %209, align 8
  %210 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %211 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %210, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %210, align 8
  %212 = icmp eq %"class.std::__1::vector.257"* %211, null
  br i1 %212, label %281, label %270

213:                                              ; preds = %313
  %214 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %315, i64 0, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = ptrtoint i32* %215 to i64
  %219 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %315, i64 0, i32 0, i32 1
  %220 = bitcast i32** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast i32* %215 to i8*
  call void @_ZdlPv(i8* %221) #13
  br label %222

222:                                              ; preds = %217, %213
  %223 = bitcast %"class.std::__1::vector.257"* %315 to i8*
  call void @_ZdlPv(i8* %223) #13
  br label %224

224:                                              ; preds = %313, %222
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %225 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %226 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %225, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %225, align 8
  %227 = icmp eq %"class.std::__1::vector.257"* %226, null
  br i1 %227, label %239, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %226, i64 0, i32 0, i32 0
  %230 = load i32*, i32** %229, align 8
  %231 = icmp eq i32* %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %228
  %233 = ptrtoint i32* %230 to i64
  %234 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %226, i64 0, i32 0, i32 1
  %235 = bitcast i32** %234 to i64*
  store i64 %233, i64* %235, align 8
  %236 = bitcast i32* %230 to i8*
  call void @_ZdlPv(i8* %236) #13
  br label %237

237:                                              ; preds = %232, %228
  %238 = bitcast %"class.std::__1::vector.257"* %226 to i8*
  call void @_ZdlPv(i8* %238) #13
  br label %239

239:                                              ; preds = %224, %237
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %240 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %241 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %240, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %240, align 8
  %242 = icmp eq %"class.std::__1::vector.257"* %241, null
  br i1 %242, label %254, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %241, i64 0, i32 0, i32 0
  %245 = load i32*, i32** %244, align 8
  %246 = icmp eq i32* %245, null
  br i1 %246, label %252, label %247

247:                                              ; preds = %243
  %248 = ptrtoint i32* %245 to i64
  %249 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %241, i64 0, i32 0, i32 1
  %250 = bitcast i32** %249 to i64*
  store i64 %248, i64* %250, align 8
  %251 = bitcast i32* %245 to i8*
  call void @_ZdlPv(i8* %251) #13
  br label %252

252:                                              ; preds = %247, %243
  %253 = bitcast %"class.std::__1::vector.257"* %241 to i8*
  call void @_ZdlPv(i8* %253) #13
  br label %254

254:                                              ; preds = %239, %252
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %255 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %256 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %255, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %255, align 8
  %257 = icmp eq %"class.std::__1::vector.257"* %256, null
  br i1 %257, label %269, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %256, i64 0, i32 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = icmp eq i32* %260, null
  br i1 %261, label %267, label %262

262:                                              ; preds = %258
  %263 = ptrtoint i32* %260 to i64
  %264 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %256, i64 0, i32 0, i32 1
  %265 = bitcast i32** %264 to i64*
  store i64 %263, i64* %265, align 8
  %266 = bitcast i32* %260 to i8*
  call void @_ZdlPv(i8* %266) #13
  br label %267

267:                                              ; preds = %262, %258
  %268 = bitcast %"class.std::__1::vector.257"* %256 to i8*
  call void @_ZdlPv(i8* %268) #13
  br label %269

269:                                              ; preds = %254, %267
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %12) #11
  ret void

270:                                              ; preds = %208
  %271 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %211, i64 0, i32 0, i32 0
  %272 = load i32*, i32** %271, align 8
  %273 = icmp eq i32* %272, null
  br i1 %273, label %279, label %274

274:                                              ; preds = %270
  %275 = ptrtoint i32* %272 to i64
  %276 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %211, i64 0, i32 0, i32 1
  %277 = bitcast i32** %276 to i64*
  store i64 %275, i64* %277, align 8
  %278 = bitcast i32* %272 to i8*
  call void @_ZdlPv(i8* %278) #13
  br label %279

279:                                              ; preds = %274, %270
  %280 = bitcast %"class.std::__1::vector.257"* %211 to i8*
  call void @_ZdlPv(i8* %280) #13
  br label %281

281:                                              ; preds = %279, %208
  %282 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %282, align 8
  %283 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %284 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %283, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %283, align 8
  %285 = icmp eq %"class.std::__1::vector.257"* %284, null
  br i1 %285, label %297, label %286

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %284, i64 0, i32 0, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %295, label %290

290:                                              ; preds = %286
  %291 = ptrtoint i32* %288 to i64
  %292 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %284, i64 0, i32 0, i32 1
  %293 = bitcast i32** %292 to i64*
  store i64 %291, i64* %293, align 8
  %294 = bitcast i32* %288 to i8*
  call void @_ZdlPv(i8* %294) #13
  br label %295

295:                                              ; preds = %290, %286
  %296 = bitcast %"class.std::__1::vector.257"* %284 to i8*
  call void @_ZdlPv(i8* %296) #13
  br label %297

297:                                              ; preds = %295, %281
  %298 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %298, align 8
  %299 = getelementptr inbounds [4 x %"struct.spvtools::opt::Operand"], [4 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %300 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %299, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %299, align 8
  %301 = icmp eq %"class.std::__1::vector.257"* %300, null
  br i1 %301, label %313, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %300, i64 0, i32 0, i32 0
  %304 = load i32*, i32** %303, align 8
  %305 = icmp eq i32* %304, null
  br i1 %305, label %311, label %306

306:                                              ; preds = %302
  %307 = ptrtoint i32* %304 to i64
  %308 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %300, i64 0, i32 0, i32 1
  %309 = bitcast i32** %308 to i64*
  store i64 %307, i64* %309, align 8
  %310 = bitcast i32* %304 to i8*
  call void @_ZdlPv(i8* %310) #13
  br label %311

311:                                              ; preds = %306, %302
  %312 = bitcast %"class.std::__1::vector.257"* %300 to i8*
  call void @_ZdlPv(i8* %312) #13
  br label %313

313:                                              ; preds = %311, %297
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %314 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %315 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %314, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %314, align 8
  %316 = icmp eq %"class.std::__1::vector.257"* %315, null
  br i1 %316, label %224, label %213
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::function.910"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.916", align 8
  %6 = bitcast %"class.std::__1::vector.916"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @_ZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjb(%"class.std::__1::vector.916"* nonnull sret %5, %"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %1, i1 zeroext true) #11
  %7 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %5, i64 0, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"** %8, %10
  br i1 %11, label %60, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %3, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %3, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %12, %54
  %16 = phi %"class.spvtools::opt::Instruction"** [ %8, %12 ], [ %55, %54 ]
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %54 [
    i32 72, label %20
    i32 71, label %37
    i32 332, label %37
    i32 5632, label %37
  ]

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !3
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 1, i32 2
  %28 = xor i1 %26, true
  %29 = zext i1 %28 to i32
  %30 = select i1 %23, i32 %29, i32 %27
  %31 = add nuw nsw i32 %30, 2
  %32 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %17, i32 %31) #11
  %33 = icmp eq i32 %32, %2
  br i1 %33, label %34, label %54

34:                                               ; preds = %20
  %35 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %13, align 8
  %36 = call zeroext i1 %35(%"union.std::__1::__function::__policy_storage"* %14, %"class.spvtools::opt::Instruction"* dereferenceable(112) %17) #11
  br i1 %36, label %54, label %57

37:                                               ; preds = %15, %15, %15
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !3
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !3
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %43, i32 1, i32 2
  %45 = xor i1 %43, true
  %46 = zext i1 %45 to i32
  %47 = select i1 %40, i32 %46, i32 %44
  %48 = add nuw nsw i32 %47, 1
  %49 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %17, i32 %48) #11
  %50 = icmp eq i32 %49, %2
  br i1 %50, label %51, label %54

51:                                               ; preds = %37
  %52 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %13, align 8
  %53 = call zeroext i1 %52(%"union.std::__1::__function::__policy_storage"* %14, %"class.spvtools::opt::Instruction"* dereferenceable(112) %17) #11
  br i1 %53, label %54, label %57

54:                                               ; preds = %15, %37, %51, %20, %34
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, i64 1
  %56 = icmp eq %"class.spvtools::opt::Instruction"** %55, %10
  br i1 %56, label %57, label %15

57:                                               ; preds = %54, %51, %34
  %58 = phi i32 [ 1, %34 ], [ 1, %51 ], [ 2, %54 ]
  %59 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  br label %60

60:                                               ; preds = %57, %4
  %61 = phi %"class.spvtools::opt::Instruction"** [ %8, %4 ], [ %59, %57 ]
  %62 = phi i32 [ 2, %4 ], [ %58, %57 ]
  %63 = icmp eq %"class.spvtools::opt::Instruction"** %61, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = ptrtoint %"class.spvtools::opt::Instruction"** %61 to i64
  %66 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast %"class.spvtools::opt::Instruction"** %61 to i8*
  call void @_ZdlPv(i8* %67) #13
  br label %68

68:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  %69 = icmp eq i32 %62, 2
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager17ForEachDecorationEjjNSt3__18functionIFvRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::function.968"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function.910", align 8
  %6 = ptrtoint %"class.std::__1::function.968"* %3 to i64
  %7 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %5, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_8analysis17DecorationManager17ForEachDecorationEjjNS_8functionIFvS6_EEEE3$_3S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt8analysis17DecorationManager17ForEachDecorationEjjNS_8functionIFvRKNS5_11InstructionEEEEE3$_3FbSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function.910"* %5 to i64*
  store i64 %6, i64* %9, align 8
  %10 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %1, i32 %2, %"class.std::__1::function.910"* nonnull %5)
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void %13(i8* %17) #11
  br label %18

18:                                               ; preds = %4, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::function.910"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function.910", align 8
  %6 = ptrtoint %"class.std::__1::function.910"* %3 to i64
  %7 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %5, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_8analysis17DecorationManager14FindDecorationEjjNS_8functionIS7_EEE3$_4S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt8analysis17DecorationManager14FindDecorationEjjNS_8functionIFbRKNS5_11InstructionEEEEE3$_4SC_EEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function.910"* %5 to i64*
  store i64 %6, i64* %9, align 8
  %10 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %1, i32 %2, %"class.std::__1::function.910"* nonnull %5)
  %11 = xor i1 %10, true
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %5, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #11
  br label %19

19:                                               ; preds = %4, %16
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjj(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"class.std::__1::vector.916", align 8
  %6 = alloca %"struct.spvtools::opt::Operand", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"struct.spvtools::opt::Operand", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %448, label %15

15:                                               ; preds = %3
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #11, !range !2
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, 4294967295
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %11
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %23, %21, %18
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %448, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %448, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br label %38

38:                                               ; preds = %59, %36
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %34, %36 ], [ %61, %59 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %11
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  br i1 %17, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %37
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %13
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %13
  br label %51

51:                                               ; preds = %49, %47, %45
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %59, label %448

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %63, label %59

59:                                               ; preds = %54, %51
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base"* %61, null
  br i1 %62, label %448, label %38

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 1
  %65 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %65, i64 0, i32 2
  %67 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 3
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to %"class.spvtools::opt::Instruction"***
  %70 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 4
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to %"class.spvtools::opt::Instruction"***
  %73 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"** %70, %73
  br i1 %74, label %86, label %75

75:                                               ; preds = %63
  %76 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %79 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %81 = bitcast i32** %79 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %82 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %83 = bitcast %"class.std::__1::unique_ptr.254"* %82 to i64*
  %84 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %80 to i32*
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %184

86:                                               ; preds = %235, %63
  %87 = bitcast %"class.std::__1::vector.916"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %5, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %5, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 24, i1 false) #11
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 7
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %262, label %100

100:                                              ; preds = %86
  %101 = icmp ugt i64 %98, 2305843009213693951
  br i1 %101, label %102, label %104

102:                                              ; preds = %100
  %103 = bitcast %"class.std::__1::vector.916"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %103) #12
  unreachable

104:                                              ; preds = %100
  %105 = call i8* @_Znwm(i64 %97) #13
  %106 = bitcast i8* %105 to %"class.spvtools::opt::Instruction"**
  %107 = bitcast %"class.spvtools::opt::Instruction"*** %89 to i8**
  store i8* %105, i8** %107, align 8
  %108 = bitcast %"class.std::__1::vector.916"* %5 to i8**
  store i8* %105, i8** %108, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %106, i64 %98
  store %"class.spvtools::opt::Instruction"** %109, %"class.spvtools::opt::Instruction"*** %90, align 8
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %91 to %"class.spvtools::opt::Instruction"***
  %111 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %110, align 8
  %112 = load i64, i64* %93, align 8
  %113 = bitcast %"class.spvtools::opt::Instruction"*** %89 to i64*
  %114 = ptrtoint i8* %105 to i64
  %115 = ptrtoint %"class.spvtools::opt::Instruction"** %111 to i64
  %116 = sub i64 %112, %115
  %117 = icmp sgt i64 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %104
  %119 = lshr exact i64 %116, 3
  %120 = bitcast %"class.spvtools::opt::Instruction"** %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %105, i8* align 8 %120, i64 %116, i1 false) #11
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %106, i64 %119
  %122 = ptrtoint %"class.spvtools::opt::Instruction"** %121 to i64
  br label %123

123:                                              ; preds = %104, %118
  %124 = phi i64 [ %122, %118 ], [ %114, %104 ]
  store i64 %124, i64* %113, align 8
  %125 = inttoptr i64 %124 to %"class.spvtools::opt::Instruction"**
  %126 = icmp eq %"class.spvtools::opt::Instruction"** %106, %125
  br i1 %126, label %257, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  %129 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %131 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %130, i64 0, i32 0
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %134 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %135 = bitcast i32** %133 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %136 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %137 = bitcast %"class.std::__1::unique_ptr.254"* %136 to i64*
  %138 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %139 = bitcast %"struct.spvtools::opt::Operand"* %9 to i8*
  %140 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  %142 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %143 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %144 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %145 = bitcast i32** %143 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %146 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %147 = bitcast %"class.std::__1::unique_ptr.254"* %146 to i64*
  %148 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %144 to i32*
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 0
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1
  %151 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %150, i64 0, i32 0
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 1
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 2
  %154 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 3, i64 0
  %155 = bitcast i32** %153 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4
  %157 = bitcast %"class.std::__1::unique_ptr.254"* %156 to i64*
  %158 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 0
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  %162 = bitcast %"struct.spvtools::opt::Operand"* %6 to i8*
  %163 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  %164 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  %165 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %166 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %167 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %168 = bitcast i32** %166 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %169 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %170 = bitcast %"class.std::__1::unique_ptr.254"* %169 to i64*
  %171 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %167 to i32*
  %172 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 0
  %173 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1
  %174 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %173, i64 0, i32 0
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 1
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 2
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 3, i64 0
  %178 = bitcast i32** %176 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4
  %180 = bitcast %"class.std::__1::unique_ptr.254"* %179 to i64*
  %181 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 0
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %263

184:                                              ; preds = %249, %75
  %185 = phi %"class.spvtools::opt::IRContext"* [ %67, %75 ], [ %252, %249 ]
  %186 = phi %"class.spvtools::opt::Instruction"** [ %70, %75 ], [ %247, %249 ]
  %187 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %186, align 8
  %188 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %187, %"class.spvtools::opt::IRContext"* %185) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %80, %"struct.std::__1::aligned_storage<4, 4>::type"** %81, align 8
  store i64 0, i64* %83, align 8
  store i64 1, i64* %78, align 8
  store i32 %2, i32* %84, align 8
  %189 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %188, i64 0, i32 3
  %190 = load i8, i8* %189, align 4, !range !3
  %191 = icmp eq i8 %190, 0
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %188, i64 0, i32 4
  %193 = load i8, i8* %192, align 1, !range !3
  %194 = icmp eq i8 %193, 0
  %195 = select i1 %194, i64 1, i64 2
  %196 = xor i1 %194, true
  %197 = zext i1 %196 to i64
  %198 = select i1 %191, i64 %197, i64 %195
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %188, i64 0, i32 6, i32 0, i32 0
  %200 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %199, align 8
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 %198, i32 1
  %202 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %201, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %203 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %85, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %85, align 8
  %204 = icmp eq %"class.std::__1::vector.257"* %203, null
  br i1 %204, label %216, label %205

205:                                              ; preds = %184
  %206 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %203, i64 0, i32 0, i32 0
  %207 = load i32*, i32** %206, align 8
  %208 = icmp eq i32* %207, null
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = ptrtoint i32* %207 to i64
  %211 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %203, i64 0, i32 0, i32 1
  %212 = bitcast i32** %211 to i64*
  store i64 %210, i64* %212, align 8
  %213 = bitcast i32* %207 to i8*
  call void @_ZdlPv(i8* %213) #13
  br label %214

214:                                              ; preds = %209, %205
  %215 = bitcast %"class.std::__1::vector.257"* %203 to i8*
  call void @_ZdlPv(i8* %215) #13
  br label %216

216:                                              ; preds = %184, %214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76) #11
  %217 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %217, i64 0, i32 13, i32 0, i32 1
  %219 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %188, i64 0, i32 0, i32 1
  %220 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %219, align 8
  %221 = icmp eq %"class.spvtools::opt::Instruction"* %220, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %188, i64 0, i32 0, i32 2
  %224 = bitcast %"class.spvtools::opt::Instruction"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %220, i64 0, i32 0, i32 2
  %227 = bitcast %"class.spvtools::opt::Instruction"** %226 to i64*
  store i64 %225, i64* %227, align 8
  %228 = bitcast %"class.spvtools::opt::Instruction"** %219 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.spvtools::opt::Instruction"** %223 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %231 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %230, align 8
  %232 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %231, i64 0, i32 1
  %233 = bitcast %"class.spvtools::opt::Instruction"** %232 to i64*
  store i64 %229, i64* %233, align 8
  %234 = bitcast %"class.spvtools::opt::Instruction"** %219 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 16, i1 false) #11
  br label %235

235:                                              ; preds = %216, %222
  store %"class.spvtools::opt::Instruction"* %218, %"class.spvtools::opt::Instruction"** %219, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %217, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %237 = bitcast %"class.spvtools::opt::Instruction"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %188, i64 0, i32 0, i32 2
  %240 = bitcast %"class.spvtools::opt::Instruction"** %239 to i64*
  store i64 %238, i64* %240, align 8
  store %"class.spvtools::opt::Instruction"* %188, %"class.spvtools::opt::Instruction"** %236, align 8
  %241 = bitcast %"class.spvtools::opt::Instruction"** %239 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %242 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %241, align 8
  %243 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %242, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %188, %"class.spvtools::opt::Instruction"** %243, align 8
  %244 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %245 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %244, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %246 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %245, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %67, %"class.spvtools::opt::Instruction"* %246) #11
  %247 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %186, i64 1
  %248 = icmp eq %"class.spvtools::opt::Instruction"** %247, %73
  br i1 %248, label %86, label %249

249:                                              ; preds = %235
  %250 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %251 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %250, i64 0, i32 2
  %252 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %251, align 8
  br label %184

253:                                              ; preds = %445
  %254 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %88, align 8
  %255 = bitcast %"class.spvtools::opt::Instruction"** %254 to i8*
  %256 = icmp eq %"class.spvtools::opt::Instruction"** %254, null
  br i1 %256, label %262, label %257

257:                                              ; preds = %123, %253
  %258 = phi %"class.spvtools::opt::Instruction"** [ %254, %253 ], [ %106, %123 ]
  %259 = phi i8* [ %255, %253 ], [ %105, %123 ]
  %260 = ptrtoint %"class.spvtools::opt::Instruction"** %258 to i64
  %261 = bitcast %"class.spvtools::opt::Instruction"*** %89 to i64*
  store i64 %260, i64* %261, align 8
  call void @_ZdlPv(i8* %259) #13
  br label %262

262:                                              ; preds = %86, %253, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  br label %448

263:                                              ; preds = %127, %445
  %264 = phi %"class.spvtools::opt::Instruction"** [ %106, %127 ], [ %446, %445 ]
  %265 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 2
  %267 = load i32, i32* %266, align 8
  switch i32 %267, label %445 [
    i32 74, label %268
    i32 75, label %321
  ]

268:                                              ; preds = %263
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %67, %"class.spvtools::opt::Instruction"* %265) #11
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %162) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %163) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %164, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %167, %"struct.std::__1::aligned_storage<4, 4>::type"** %168, align 8
  store i64 0, i64* %170, align 8
  store i64 1, i64* %165, align 8
  store i32 %2, i32* %171, align 8
  store i32 1, i32* %172, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %174, align 8
  store i64 0, i64* %175, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %177, %"struct.std::__1::aligned_storage<4, 4>::type"** %178, align 8
  store i64 0, i64* %180, align 8
  %269 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %173, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  %270 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 6, i32 0, i32 1
  %271 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %270, align 8
  %272 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %273 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %272, align 8
  %274 = icmp ult %"struct.spvtools::opt::Operand"* %271, %273
  br i1 %274, label %275, label %290

275:                                              ; preds = %268
  %276 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 0
  %277 = load i32, i32* %172, align 8
  store i32 %277, i32* %276, align 8
  %278 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1
  %279 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %278, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %279, align 8
  %280 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 1
  store i64 0, i64* %280, align 8
  %281 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 2
  %282 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 3, i64 0
  %283 = bitcast i32** %281 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %282, %"struct.std::__1::aligned_storage<4, 4>::type"** %283, align 8
  %284 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 0, i32 1, i32 4
  %285 = bitcast %"class.std::__1::unique_ptr.254"* %284 to i64*
  store i64 0, i64* %285, align 8
  %286 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %278, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %173) #11
  %287 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %271, i64 1
  %288 = ptrtoint %"struct.spvtools::opt::Operand"* %287 to i64
  %289 = bitcast %"struct.spvtools::opt::Operand"** %270 to i64*
  store i64 %288, i64* %289, align 8
  br label %292

290:                                              ; preds = %268
  %291 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.252"* %291, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %6) #11
  br label %292

292:                                              ; preds = %275, %290
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %293 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %182, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %182, align 8
  %294 = icmp eq %"class.std::__1::vector.257"* %293, null
  br i1 %294, label %306, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %293, i64 0, i32 0, i32 0
  %297 = load i32*, i32** %296, align 8
  %298 = icmp eq i32* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %295
  %300 = ptrtoint i32* %297 to i64
  %301 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %293, i64 0, i32 0, i32 1
  %302 = bitcast i32** %301 to i64*
  store i64 %300, i64* %302, align 8
  %303 = bitcast i32* %297 to i8*
  call void @_ZdlPv(i8* %303) #13
  br label %304

304:                                              ; preds = %299, %295
  %305 = bitcast %"class.std::__1::vector.257"* %293 to i8*
  call void @_ZdlPv(i8* %305) #13
  br label %306

306:                                              ; preds = %292, %304
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %164, align 8
  %307 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %183, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %183, align 8
  %308 = icmp eq %"class.std::__1::vector.257"* %307, null
  br i1 %308, label %320, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %307, i64 0, i32 0, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %318, label %313

313:                                              ; preds = %309
  %314 = ptrtoint i32* %311 to i64
  %315 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %307, i64 0, i32 0, i32 1
  %316 = bitcast i32** %315 to i64*
  store i64 %314, i64* %316, align 8
  %317 = bitcast i32* %311 to i8*
  call void @_ZdlPv(i8* %317) #13
  br label %318

318:                                              ; preds = %313, %309
  %319 = bitcast %"class.std::__1::vector.257"* %307 to i8*
  call void @_ZdlPv(i8* %319) #13
  br label %320

320:                                              ; preds = %306, %318
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %163) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %162) #11
  br label %444

321:                                              ; preds = %263
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %67, %"class.spvtools::opt::Instruction"* %265) #11
  %322 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 6
  %323 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 6, i32 0, i32 1
  %324 = bitcast %"struct.spvtools::opt::Operand"** %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = bitcast %"class.std::__1::vector.252"* %322 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = sub i64 %325, %327
  %329 = sdiv exact i64 %328, 48
  %330 = trunc i64 %329 to i32
  %331 = icmp ugt i32 %330, 1
  br i1 %331, label %332, label %444

332:                                              ; preds = %321
  %333 = inttoptr i64 %327 to %"struct.spvtools::opt::Operand"*
  %334 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 6, i32 0, i32 0
  %335 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  br label %336

336:                                              ; preds = %442, %332
  %337 = phi %"struct.spvtools::opt::Operand"* [ %333, %332 ], [ %443, %442 ]
  %338 = phi i32 [ 1, %332 ], [ %440, %442 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %128) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 48, i1 false)
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %337, i64 %339, i32 0
  %341 = load i32, i32* %340, align 8
  store i32 %341, i32* %129, align 8
  %342 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %337, i64 %339, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %131, align 8
  store i64 0, i64* %132, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %134, %"struct.std::__1::aligned_storage<4, 4>::type"** %135, align 8
  store i64 0, i64* %137, align 8
  %343 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %130, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %342) #11
  %344 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %138, align 8
  %345 = icmp eq %"class.std::__1::vector.257"* %344, null
  %346 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %344, i64 0, i32 0, i32 0
  %347 = select i1 %345, i32** %133, i32** %346
  %348 = load i32*, i32** %347, align 8
  %349 = load i32, i32* %348, align 4
  %350 = icmp eq i32 %349, %1
  br i1 %350, label %351, label %425

351:                                              ; preds = %336
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %139) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %140) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %144, %"struct.std::__1::aligned_storage<4, 4>::type"** %145, align 8
  store i64 0, i64* %147, align 8
  store i64 1, i64* %142, align 8
  store i32 %2, i32* %148, align 8
  store i32 1, i32* %149, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  store i64 0, i64* %152, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %154, %"struct.std::__1::aligned_storage<4, 4>::type"** %155, align 8
  store i64 0, i64* %157, align 8
  %352 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %150, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %353 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %323, align 8
  %354 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %335, align 8
  %355 = icmp ult %"struct.spvtools::opt::Operand"* %353, %354
  br i1 %355, label %356, label %370

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %353, i64 0, i32 0
  %358 = load i32, i32* %149, align 8
  store i32 %358, i32* %357, align 8
  %359 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %353, i64 0, i32 1
  %360 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %359, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %360, align 8
  %361 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %353, i64 0, i32 1, i32 1
  store i64 0, i64* %361, align 8
  %362 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %353, i64 0, i32 1, i32 2
  %363 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %353, i64 0, i32 1, i32 3, i64 0
  %364 = bitcast i32** %362 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %363, %"struct.std::__1::aligned_storage<4, 4>::type"** %364, align 8
  %365 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %353, i64 0, i32 1, i32 4
  %366 = bitcast %"class.std::__1::unique_ptr.254"* %365 to i64*
  store i64 0, i64* %366, align 8
  %367 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %359, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %150) #11
  %368 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %353, i64 1
  %369 = ptrtoint %"struct.spvtools::opt::Operand"* %368 to i64
  store i64 %369, i64* %324, align 8
  br label %371

370:                                              ; preds = %351
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.252"* %322, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %9) #11
  br label %371

371:                                              ; preds = %356, %370
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %372 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %159, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %159, align 8
  %373 = icmp eq %"class.std::__1::vector.257"* %372, null
  br i1 %373, label %385, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %372, i64 0, i32 0, i32 0
  %376 = load i32*, i32** %375, align 8
  %377 = icmp eq i32* %376, null
  br i1 %377, label %383, label %378

378:                                              ; preds = %374
  %379 = ptrtoint i32* %376 to i64
  %380 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %372, i64 0, i32 0, i32 1
  %381 = bitcast i32** %380 to i64*
  store i64 %379, i64* %381, align 8
  %382 = bitcast i32* %376 to i8*
  call void @_ZdlPv(i8* %382) #13
  br label %383

383:                                              ; preds = %378, %374
  %384 = bitcast %"class.std::__1::vector.257"* %372 to i8*
  call void @_ZdlPv(i8* %384) #13
  br label %385

385:                                              ; preds = %371, %383
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %386 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %160, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %160, align 8
  %387 = icmp eq %"class.std::__1::vector.257"* %386, null
  br i1 %387, label %399, label %388

388:                                              ; preds = %385
  %389 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %386, i64 0, i32 0, i32 0
  %390 = load i32*, i32** %389, align 8
  %391 = icmp eq i32* %390, null
  br i1 %391, label %397, label %392

392:                                              ; preds = %388
  %393 = ptrtoint i32* %390 to i64
  %394 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %386, i64 0, i32 0, i32 1
  %395 = bitcast i32** %394 to i64*
  store i64 %393, i64* %395, align 8
  %396 = bitcast i32* %390 to i8*
  call void @_ZdlPv(i8* %396) #13
  br label %397

397:                                              ; preds = %392, %388
  %398 = bitcast %"class.std::__1::vector.257"* %386 to i8*
  call void @_ZdlPv(i8* %398) #13
  br label %399

399:                                              ; preds = %385, %397
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %140) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %139) #11
  %400 = add i32 %338, 1
  %401 = zext i32 %400 to i64
  %402 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %334, align 8
  %403 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %402, i64 %401, i32 0
  %404 = load i32, i32* %403, align 8
  store i32 %404, i32* %129, align 8
  %405 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %402, i64 %401, i32 1
  %406 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %130, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %405) #11
  %407 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %323, align 8
  %408 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %335, align 8
  %409 = icmp ult %"struct.spvtools::opt::Operand"* %407, %408
  br i1 %409, label %410, label %424

410:                                              ; preds = %399
  %411 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 0, i32 0
  %412 = load i32, i32* %129, align 8
  store i32 %412, i32* %411, align 8
  %413 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 0, i32 1
  %414 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %413, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %414, align 8
  %415 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 0, i32 1, i32 1
  store i64 0, i64* %415, align 8
  %416 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 0, i32 1, i32 2
  %417 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 0, i32 1, i32 3, i64 0
  %418 = bitcast i32** %416 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %417, %"struct.std::__1::aligned_storage<4, 4>::type"** %418, align 8
  %419 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 0, i32 1, i32 4
  %420 = bitcast %"class.std::__1::unique_ptr.254"* %419 to i64*
  store i64 0, i64* %420, align 8
  %421 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %413, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %130) #11
  %422 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %407, i64 1
  %423 = ptrtoint %"struct.spvtools::opt::Operand"* %422 to i64
  store i64 %423, i64* %324, align 8
  br label %425

424:                                              ; preds = %399
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.252"* %322, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #11
  br label %425

425:                                              ; preds = %424, %410, %336
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %426 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %138, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %138, align 8
  %427 = icmp eq %"class.std::__1::vector.257"* %426, null
  br i1 %427, label %439, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %426, i64 0, i32 0, i32 0
  %430 = load i32*, i32** %429, align 8
  %431 = icmp eq i32* %430, null
  br i1 %431, label %437, label %432

432:                                              ; preds = %428
  %433 = ptrtoint i32* %430 to i64
  %434 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %426, i64 0, i32 0, i32 1
  %435 = bitcast i32** %434 to i64*
  store i64 %433, i64* %435, align 8
  %436 = bitcast i32* %430 to i8*
  call void @_ZdlPv(i8* %436) #13
  br label %437

437:                                              ; preds = %432, %428
  %438 = bitcast %"class.std::__1::vector.257"* %426 to i8*
  call void @_ZdlPv(i8* %438) #13
  br label %439

439:                                              ; preds = %425, %437
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %128) #11
  %440 = add i32 %338, 2
  %441 = icmp ult i32 %440, %330
  br i1 %441, label %442, label %444

442:                                              ; preds = %439
  %443 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %334, align 8
  br label %336

444:                                              ; preds = %439, %321, %320
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %67, %"class.spvtools::opt::Instruction"* %265) #11
  br label %445

445:                                              ; preds = %444, %263
  %446 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %264, i64 1
  %447 = icmp eq %"class.spvtools::opt::Instruction"** %446, %125
  br i1 %447, label %253, label %263

448:                                              ; preds = %59, %51, %32, %3, %25, %262
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readonly, i32, i32, %"class.std::__1::vector.976"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = alloca %"class.std::__1::vector.916", align 8
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %251, label %11

11:                                               ; preds = %4
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %251, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %251, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %251

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %58, label %251, label %34

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 1
  %61 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %61, i64 0, i32 2
  %63 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 3
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.spvtools::opt::Instruction"***
  %66 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 4
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to %"class.spvtools::opt::Instruction"***
  %69 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %68, align 8
  %70 = icmp eq %"class.spvtools::opt::Instruction"** %66, %69
  br i1 %70, label %84, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %3, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %3, i64 0, i32 0, i32 1
  %74 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  %75 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %79 = bitcast i32** %77 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %81 = bitcast %"class.std::__1::unique_ptr.254"* %80 to i64*
  %82 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %78 to i32*
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %125

84:                                               ; preds = %217, %59
  %85 = bitcast %"class.std::__1::vector.916"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #11
  %86 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %6, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %6, i64 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #11
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 7
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %229, label %98

98:                                               ; preds = %84
  %99 = icmp ugt i64 %96, 2305843009213693951
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = bitcast %"class.std::__1::vector.916"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %101) #12
  unreachable

102:                                              ; preds = %98
  %103 = call i8* @_Znwm(i64 %95) #13
  %104 = bitcast i8* %103 to %"class.spvtools::opt::Instruction"**
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %87 to i8**
  store i8* %103, i8** %105, align 8
  %106 = bitcast %"class.std::__1::vector.916"* %6 to i8**
  store i8* %103, i8** %106, align 8
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %104, i64 %96
  store %"class.spvtools::opt::Instruction"** %107, %"class.spvtools::opt::Instruction"*** %88, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %89 to %"class.spvtools::opt::Instruction"***
  %109 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %108, align 8
  %110 = load i64, i64* %91, align 8
  %111 = bitcast %"class.spvtools::opt::Instruction"*** %87 to i64*
  %112 = ptrtoint i8* %103 to i64
  %113 = ptrtoint %"class.spvtools::opt::Instruction"** %109 to i64
  %114 = sub i64 %110, %113
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %121

116:                                              ; preds = %102
  %117 = lshr exact i64 %114, 3
  %118 = bitcast %"class.spvtools::opt::Instruction"** %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %118, i64 %114, i1 false) #11
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %104, i64 %117
  %120 = ptrtoint %"class.spvtools::opt::Instruction"** %119 to i64
  br label %121

121:                                              ; preds = %102, %116
  %122 = phi i64 [ %120, %116 ], [ %112, %102 ]
  store i64 %122, i64* %111, align 8
  %123 = inttoptr i64 %122 to %"class.spvtools::opt::Instruction"**
  %124 = icmp eq %"class.spvtools::opt::Instruction"** %104, %123
  br i1 %124, label %224, label %230

125:                                              ; preds = %71, %217
  %126 = phi %"class.spvtools::opt::Instruction"** [ %66, %71 ], [ %218, %217 ]
  %127 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %126, align 8
  %128 = load i32*, i32** %72, align 8
  %129 = load i32*, i32** %73, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 3
  %131 = load i8, i8* %130, align 4, !range !3
  %132 = icmp eq i8 %131, 0
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 4
  %134 = load i8, i8* %133, align 1, !range !3
  %135 = icmp eq i8 %134, 0
  %136 = select i1 %135, i32 1, i32 2
  %137 = xor i1 %135, true
  %138 = zext i1 %137 to i32
  %139 = select i1 %132, i32 %138, i32 %136
  %140 = add nuw nsw i32 %139, 1
  %141 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %127, i32 %140) #11
  %142 = icmp eq i32* %128, %129
  br i1 %142, label %150, label %143

143:                                              ; preds = %125, %147
  %144 = phi i32* [ %148, %147 ], [ %128, %125 ]
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, %141
  br i1 %146, label %150, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds i32, i32* %144, i64 1
  %149 = icmp eq i32* %148, %129
  br i1 %149, label %150, label %143

150:                                              ; preds = %143, %147, %125
  %151 = phi i32* [ %128, %125 ], [ %144, %143 ], [ %129, %147 ]
  %152 = load i32*, i32** %73, align 8
  %153 = icmp eq i32* %151, %152
  br i1 %153, label %217, label %154

154:                                              ; preds = %150
  %155 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %60, align 8
  %156 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %155, i64 0, i32 2
  %157 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %156, align 8
  %158 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %127, %"class.spvtools::opt::IRContext"* %157) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %78, %"struct.std::__1::aligned_storage<4, 4>::type"** %79, align 8
  store i64 0, i64* %81, align 8
  store i64 1, i64* %76, align 8
  store i32 %2, i32* %82, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 3
  %160 = load i8, i8* %159, align 4, !range !3
  %161 = icmp eq i8 %160, 0
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 4
  %163 = load i8, i8* %162, align 1, !range !3
  %164 = icmp eq i8 %163, 0
  %165 = select i1 %164, i64 1, i64 2
  %166 = xor i1 %164, true
  %167 = zext i1 %166 to i64
  %168 = select i1 %161, i64 %167, i64 %165
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 6, i32 0, i32 0
  %170 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %169, align 8
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %170, i64 %168, i32 1
  %172 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %171, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %173 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %83, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %83, align 8
  %174 = icmp eq %"class.std::__1::vector.257"* %173, null
  br i1 %174, label %186, label %175

175:                                              ; preds = %154
  %176 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %173, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint i32* %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %173, i64 0, i32 0, i32 1
  %182 = bitcast i32** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast i32* %177 to i8*
  call void @_ZdlPv(i8* %183) #13
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.257"* %173 to i8*
  call void @_ZdlPv(i8* %185) #13
  br label %186

186:                                              ; preds = %154, %184
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #11
  %187 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %60, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %187, i64 0, i32 13, i32 0, i32 1
  %189 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 0, i32 1
  %190 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %189, align 8
  %191 = icmp eq %"class.spvtools::opt::Instruction"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 0, i32 2
  %194 = bitcast %"class.spvtools::opt::Instruction"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %190, i64 0, i32 0, i32 2
  %197 = bitcast %"class.spvtools::opt::Instruction"** %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = bitcast %"class.spvtools::opt::Instruction"** %189 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.spvtools::opt::Instruction"** %193 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %201 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %200, align 8
  %202 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %201, i64 0, i32 1
  %203 = bitcast %"class.spvtools::opt::Instruction"** %202 to i64*
  store i64 %199, i64* %203, align 8
  %204 = bitcast %"class.spvtools::opt::Instruction"** %189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #11
  br label %205

205:                                              ; preds = %186, %192
  store %"class.spvtools::opt::Instruction"* %188, %"class.spvtools::opt::Instruction"** %189, align 8
  %206 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %187, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %207 = bitcast %"class.spvtools::opt::Instruction"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 0, i32 2
  %210 = bitcast %"class.spvtools::opt::Instruction"** %209 to i64*
  store i64 %208, i64* %210, align 8
  store %"class.spvtools::opt::Instruction"* %158, %"class.spvtools::opt::Instruction"** %206, align 8
  %211 = bitcast %"class.spvtools::opt::Instruction"** %209 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %212 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %211, align 8
  %213 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %212, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %158, %"class.spvtools::opt::Instruction"** %213, align 8
  %214 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %60, align 8
  %215 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %214, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  %216 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %215, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %63, %"class.spvtools::opt::Instruction"* %216) #11
  br label %217

217:                                              ; preds = %150, %205
  %218 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %126, i64 1
  %219 = icmp eq %"class.spvtools::opt::Instruction"** %218, %69
  br i1 %219, label %84, label %125

220:                                              ; preds = %248
  %221 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %86, align 8
  %222 = bitcast %"class.spvtools::opt::Instruction"** %221 to i8*
  %223 = icmp eq %"class.spvtools::opt::Instruction"** %221, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %121, %220
  %225 = phi %"class.spvtools::opt::Instruction"** [ %221, %220 ], [ %104, %121 ]
  %226 = phi i8* [ %222, %220 ], [ %103, %121 ]
  %227 = ptrtoint %"class.spvtools::opt::Instruction"** %225 to i64
  %228 = bitcast %"class.spvtools::opt::Instruction"*** %87 to i64*
  store i64 %227, i64* %228, align 8
  call void @_ZdlPv(i8* %226) #13
  br label %229

229:                                              ; preds = %84, %220, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #11
  br label %251

230:                                              ; preds = %121, %248
  %231 = phi %"class.spvtools::opt::Instruction"** [ %249, %248 ], [ %104, %121 ]
  %232 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %231, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 2
  %234 = load i32, i32* %233, align 8
  %235 = icmp eq i32 %234, 74
  br i1 %235, label %236, label %248

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 3
  %238 = load i8, i8* %237, align 4, !range !3
  %239 = icmp eq i8 %238, 0
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 4
  %241 = load i8, i8* %240, align 1, !range !3
  %242 = icmp eq i8 %241, 0
  %243 = select i1 %242, i32 1, i32 2
  %244 = xor i1 %242, true
  %245 = zext i1 %244 to i32
  %246 = select i1 %239, i32 %245, i32 %243
  %247 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %232, i32 %246) #11
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %0, i32 %247, i32 %2, %"class.std::__1::vector.976"* dereferenceable(24) %3)
  br label %248

248:                                              ; preds = %230, %236
  %249 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %231, i64 1
  %250 = icmp eq %"class.spvtools::opt::Instruction"** %249, %123
  br i1 %250, label %220, label %230

251:                                              ; preds = %55, %47, %28, %4, %21, %229
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt8analysis17DecorationManager16RemoveDecorationEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DecorationManager"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %435 [
    i32 71, label %5
    i32 332, label %5
    i32 5632, label %5
    i32 72, label %5
    i32 74, label %146
    i32 75, label %146
  ]

5:                                                ; preds = %2, %2, %2, %2
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 1, i32 2
  %13 = xor i1 %11, true
  %14 = zext i1 %13 to i32
  %15 = select i1 %8, i32 %14, i32 %12
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %15) #11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %435, label %21

21:                                               ; preds = %5
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #11, !range !2
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, 4294967295
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ugt i64 %19, %17
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %29, %27, %24
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %435, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %435, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %65, %42
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %67, %65 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %55, %53, %51
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %65, label %435

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %16
  br i1 %64, label %69, label %65

65:                                               ; preds = %60, %57
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base"* %67, null
  br i1 %68, label %435, label %44

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 3
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"class.spvtools::opt::Instruction"***
  %72 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 4
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to %"class.spvtools::opt::Instruction"***
  %75 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %74, align 8
  %76 = icmp eq %"class.spvtools::opt::Instruction"** %72, %75
  br i1 %76, label %84, label %77

77:                                               ; preds = %69, %81
  %78 = phi %"class.spvtools::opt::Instruction"** [ %82, %81 ], [ %72, %69 ]
  %79 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %78, align 8
  %80 = icmp eq %"class.spvtools::opt::Instruction"* %79, %1
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %78, i64 1
  %83 = icmp eq %"class.spvtools::opt::Instruction"** %82, %75
  br i1 %83, label %435, label %77

84:                                               ; preds = %77, %69
  %85 = phi %"class.spvtools::opt::Instruction"** [ %72, %69 ], [ %78, %77 ]
  %86 = ptrtoint %"class.spvtools::opt::Instruction"** %85 to i64
  %87 = icmp eq %"class.spvtools::opt::Instruction"** %85, %75
  br i1 %87, label %435, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %85, i64 1
  %90 = icmp eq %"class.spvtools::opt::Instruction"** %89, %75
  br i1 %90, label %141, label %91

91:                                               ; preds = %88
  %92 = getelementptr %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %75, i64 -2
  %93 = ptrtoint %"class.spvtools::opt::Instruction"** %92 to i64
  %94 = sub i64 %93, %86
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %116, label %99

99:                                               ; preds = %91, %111
  %100 = phi %"class.spvtools::opt::Instruction"** [ %113, %111 ], [ %89, %91 ]
  %101 = phi i64 [ %112, %111 ], [ %86, %91 ]
  %102 = phi i64 [ %114, %111 ], [ %97, %91 ]
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %100, align 8
  %104 = icmp eq %"class.spvtools::opt::Instruction"* %103, %1
  br i1 %104, label %111, label %105

105:                                              ; preds = %99
  %106 = ptrtoint %"class.spvtools::opt::Instruction"* %103 to i64
  %107 = inttoptr i64 %101 to %"class.spvtools::opt::Instruction"**
  %108 = inttoptr i64 %101 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %107, i64 1
  %110 = ptrtoint %"class.spvtools::opt::Instruction"** %109 to i64
  br label %111

111:                                              ; preds = %105, %99
  %112 = phi i64 [ %101, %99 ], [ %110, %105 ]
  %113 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %100, i64 1
  %114 = add i64 %102, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %99, !llvm.loop !10

116:                                              ; preds = %111, %91
  %117 = phi i64 [ undef, %91 ], [ %112, %111 ]
  %118 = phi %"class.spvtools::opt::Instruction"** [ %89, %91 ], [ %113, %111 ]
  %119 = phi i64 [ %86, %91 ], [ %112, %111 ]
  %120 = icmp ult i64 %94, 24
  br i1 %120, label %137, label %121

121:                                              ; preds = %116, %464
  %122 = phi %"class.spvtools::opt::Instruction"** [ %466, %464 ], [ %118, %116 ]
  %123 = phi i64 [ %465, %464 ], [ %119, %116 ]
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, %1
  br i1 %125, label %132, label %126

126:                                              ; preds = %121
  %127 = ptrtoint %"class.spvtools::opt::Instruction"* %124 to i64
  %128 = inttoptr i64 %123 to %"class.spvtools::opt::Instruction"**
  %129 = inttoptr i64 %123 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %128, i64 1
  %131 = ptrtoint %"class.spvtools::opt::Instruction"** %130 to i64
  br label %132

132:                                              ; preds = %126, %121
  %133 = phi i64 [ %123, %121 ], [ %131, %126 ]
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, i64 1
  %135 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %134, align 8
  %136 = icmp eq %"class.spvtools::opt::Instruction"* %135, %1
  br i1 %136, label %442, label %436

137:                                              ; preds = %464, %116
  %138 = phi i64 [ %117, %116 ], [ %465, %464 ]
  %139 = inttoptr i64 %138 to %"class.spvtools::opt::Instruction"**
  %140 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %74, align 8
  br label %141

141:                                              ; preds = %137, %88
  %142 = phi %"class.spvtools::opt::Instruction"** [ %75, %88 ], [ %140, %137 ]
  %143 = phi %"class.spvtools::opt::Instruction"** [ %85, %88 ], [ %139, %137 ]
  %144 = icmp eq %"class.spvtools::opt::Instruction"** %143, %142
  br i1 %144, label %435, label %145

145:                                              ; preds = %141
  store %"class.spvtools::opt::Instruction"** %143, %"class.spvtools::opt::Instruction"*** %74, align 8
  br label %435

146:                                              ; preds = %2, %2
  %147 = icmp eq i32 %4, 74
  %148 = select i1 %147, i32 1, i32 2
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %151 = bitcast %"struct.spvtools::opt::Operand"** %150 to i64*
  %152 = bitcast %"class.std::__1::vector.252"* %149 to i64*
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %155 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %157

157:                                              ; preds = %356, %146
  %158 = phi i32 [ 1, %146 ], [ %357, %356 ]
  %159 = load i64, i64* %151, align 8
  %160 = load i64, i64* %152, align 8
  %161 = sub i64 %159, %160
  %162 = sdiv exact i64 %161, 48
  %163 = load i8, i8* %153, align 4, !range !3
  %164 = icmp eq i8 %163, 0
  %165 = load i8, i8* %154, align 1, !range !3
  %166 = icmp eq i8 %165, 0
  %167 = select i1 %166, i32 1, i32 2
  %168 = xor i1 %166, true
  %169 = zext i1 %168 to i32
  %170 = select i1 %164, i32 %169, i32 %167
  %171 = trunc i64 %162 to i32
  %172 = sub i32 %171, %170
  %173 = icmp ult i32 %158, %172
  br i1 %173, label %226, label %174

174:                                              ; preds = %157
  %175 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %170) #11
  %176 = zext i32 %175 to i64
  %177 = load i64, i64* %155, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %435, label %179

179:                                              ; preds = %174
  %180 = tail call i64 @llvm.ctpop.i64(i64 %177) #11, !range !2
  %181 = icmp ugt i64 %180, 1
  br i1 %181, label %185, label %182

182:                                              ; preds = %179
  %183 = add i64 %177, 4294967295
  %184 = and i64 %183, %176
  br label %189

185:                                              ; preds = %179
  %186 = icmp ugt i64 %177, %176
  br i1 %186, label %189, label %187

187:                                              ; preds = %185
  %188 = urem i64 %176, %177
  br label %189

189:                                              ; preds = %187, %185, %182
  %190 = phi i64 [ %184, %182 ], [ %188, %187 ], [ %176, %185 ]
  %191 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %156, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %191, i64 %190
  %193 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base"* %193, null
  br i1 %194, label %435, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %193, i64 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base"* %197, null
  br i1 %198, label %435, label %199

199:                                              ; preds = %195
  %200 = add i64 %177, -1
  br label %201

201:                                              ; preds = %222, %199
  %202 = phi %"struct.std::__1::__hash_node_base"* [ %197, %199 ], [ %224, %222 ]
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %202, i64 1
  %204 = bitcast %"struct.std::__1::__hash_node_base"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, %176
  br i1 %206, label %217, label %207

207:                                              ; preds = %201
  br i1 %181, label %210, label %208

208:                                              ; preds = %207
  %209 = and i64 %205, %200
  br label %214

210:                                              ; preds = %207
  %211 = icmp ult i64 %205, %177
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = urem i64 %205, %177
  br label %214

214:                                              ; preds = %212, %210, %208
  %215 = phi i64 [ %209, %208 ], [ %213, %212 ], [ %205, %210 ]
  %216 = icmp eq i64 %215, %190
  br i1 %216, label %222, label %435

217:                                              ; preds = %201
  %218 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %202, i64 2
  %219 = bitcast %"struct.std::__1::__hash_node_base"* %218 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, %175
  br i1 %221, label %358, label %222

222:                                              ; preds = %217, %214
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %202, i64 0, i32 0
  %224 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %223, align 8
  %225 = icmp eq %"struct.std::__1::__hash_node_base"* %224, null
  br i1 %225, label %435, label %201

226:                                              ; preds = %157
  %227 = add i32 %170, %158
  %228 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %227) #11
  %229 = zext i32 %228 to i64
  %230 = load i64, i64* %155, align 8
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %356, label %232

232:                                              ; preds = %226
  %233 = tail call i64 @llvm.ctpop.i64(i64 %230) #11, !range !2
  %234 = icmp ugt i64 %233, 1
  br i1 %234, label %238, label %235

235:                                              ; preds = %232
  %236 = add i64 %230, 4294967295
  %237 = and i64 %236, %229
  br label %242

238:                                              ; preds = %232
  %239 = icmp ugt i64 %230, %229
  br i1 %239, label %242, label %240

240:                                              ; preds = %238
  %241 = urem i64 %229, %230
  br label %242

242:                                              ; preds = %240, %238, %235
  %243 = phi i64 [ %237, %235 ], [ %241, %240 ], [ %229, %238 ]
  %244 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %156, align 8
  %245 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %244, i64 %243
  %246 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %245, align 8
  %247 = icmp eq %"struct.std::__1::__hash_node_base"* %246, null
  br i1 %247, label %356, label %248

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %246, i64 0, i32 0
  %250 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %249, align 8
  %251 = icmp eq %"struct.std::__1::__hash_node_base"* %250, null
  br i1 %251, label %356, label %252

252:                                              ; preds = %248
  %253 = add i64 %230, -1
  br label %254

254:                                              ; preds = %275, %252
  %255 = phi %"struct.std::__1::__hash_node_base"* [ %250, %252 ], [ %277, %275 ]
  %256 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %255, i64 1
  %257 = bitcast %"struct.std::__1::__hash_node_base"* %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = icmp eq i64 %258, %229
  br i1 %259, label %270, label %260

260:                                              ; preds = %254
  br i1 %234, label %263, label %261

261:                                              ; preds = %260
  %262 = and i64 %258, %253
  br label %267

263:                                              ; preds = %260
  %264 = icmp ult i64 %258, %230
  br i1 %264, label %267, label %265

265:                                              ; preds = %263
  %266 = urem i64 %258, %230
  br label %267

267:                                              ; preds = %265, %263, %261
  %268 = phi i64 [ %262, %261 ], [ %266, %265 ], [ %258, %263 ]
  %269 = icmp eq i64 %268, %243
  br i1 %269, label %275, label %356

270:                                              ; preds = %254
  %271 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %255, i64 2
  %272 = bitcast %"struct.std::__1::__hash_node_base"* %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, %228
  br i1 %274, label %279, label %275

275:                                              ; preds = %270, %267
  %276 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %255, i64 0, i32 0
  %277 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %276, align 8
  %278 = icmp eq %"struct.std::__1::__hash_node_base"* %277, null
  br i1 %278, label %356, label %254

279:                                              ; preds = %270
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %255, i64 6
  %281 = bitcast %"struct.std::__1::__hash_node_base"* %280 to %"class.spvtools::opt::Instruction"***
  %282 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %281, align 8
  %283 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %255, i64 7
  %284 = bitcast %"struct.std::__1::__hash_node_base"* %283 to %"class.spvtools::opt::Instruction"***
  %285 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %284, align 8
  %286 = icmp eq %"class.spvtools::opt::Instruction"** %282, %285
  br i1 %286, label %294, label %287

287:                                              ; preds = %279, %291
  %288 = phi %"class.spvtools::opt::Instruction"** [ %292, %291 ], [ %282, %279 ]
  %289 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %288, align 8
  %290 = icmp eq %"class.spvtools::opt::Instruction"* %289, %1
  br i1 %290, label %294, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %288, i64 1
  %293 = icmp eq %"class.spvtools::opt::Instruction"** %292, %285
  br i1 %293, label %356, label %287

294:                                              ; preds = %287, %279
  %295 = phi %"class.spvtools::opt::Instruction"** [ %282, %279 ], [ %288, %287 ]
  %296 = ptrtoint %"class.spvtools::opt::Instruction"** %295 to i64
  %297 = icmp eq %"class.spvtools::opt::Instruction"** %295, %285
  br i1 %297, label %356, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %295, i64 1
  %300 = icmp eq %"class.spvtools::opt::Instruction"** %299, %285
  br i1 %300, label %351, label %301

301:                                              ; preds = %298
  %302 = getelementptr %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %285, i64 -2
  %303 = ptrtoint %"class.spvtools::opt::Instruction"** %302 to i64
  %304 = sub i64 %303, %296
  %305 = lshr i64 %304, 3
  %306 = add nuw nsw i64 %305, 1
  %307 = and i64 %306, 3
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %326, label %309

309:                                              ; preds = %301, %321
  %310 = phi %"class.spvtools::opt::Instruction"** [ %323, %321 ], [ %299, %301 ]
  %311 = phi i64 [ %322, %321 ], [ %296, %301 ]
  %312 = phi i64 [ %324, %321 ], [ %307, %301 ]
  %313 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %310, align 8
  %314 = icmp eq %"class.spvtools::opt::Instruction"* %313, %1
  br i1 %314, label %321, label %315

315:                                              ; preds = %309
  %316 = ptrtoint %"class.spvtools::opt::Instruction"* %313 to i64
  %317 = inttoptr i64 %311 to %"class.spvtools::opt::Instruction"**
  %318 = inttoptr i64 %311 to i64*
  store i64 %316, i64* %318, align 8
  %319 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %317, i64 1
  %320 = ptrtoint %"class.spvtools::opt::Instruction"** %319 to i64
  br label %321

321:                                              ; preds = %315, %309
  %322 = phi i64 [ %311, %309 ], [ %320, %315 ]
  %323 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %310, i64 1
  %324 = add i64 %312, -1
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %309, !llvm.loop !12

326:                                              ; preds = %321, %301
  %327 = phi i64 [ undef, %301 ], [ %322, %321 ]
  %328 = phi %"class.spvtools::opt::Instruction"** [ %299, %301 ], [ %323, %321 ]
  %329 = phi i64 [ %296, %301 ], [ %322, %321 ]
  %330 = icmp ult i64 %304, 24
  br i1 %330, label %347, label %331

331:                                              ; preds = %326, %528
  %332 = phi %"class.spvtools::opt::Instruction"** [ %530, %528 ], [ %328, %326 ]
  %333 = phi i64 [ %529, %528 ], [ %329, %326 ]
  %334 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %332, align 8
  %335 = icmp eq %"class.spvtools::opt::Instruction"* %334, %1
  br i1 %335, label %342, label %336

336:                                              ; preds = %331
  %337 = ptrtoint %"class.spvtools::opt::Instruction"* %334 to i64
  %338 = inttoptr i64 %333 to %"class.spvtools::opt::Instruction"**
  %339 = inttoptr i64 %333 to i64*
  store i64 %337, i64* %339, align 8
  %340 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %338, i64 1
  %341 = ptrtoint %"class.spvtools::opt::Instruction"** %340 to i64
  br label %342

342:                                              ; preds = %336, %331
  %343 = phi i64 [ %333, %331 ], [ %341, %336 ]
  %344 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %332, i64 1
  %345 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %344, align 8
  %346 = icmp eq %"class.spvtools::opt::Instruction"* %345, %1
  br i1 %346, label %506, label %500

347:                                              ; preds = %528, %326
  %348 = phi i64 [ %327, %326 ], [ %529, %528 ]
  %349 = inttoptr i64 %348 to %"class.spvtools::opt::Instruction"**
  %350 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %284, align 8
  br label %351

351:                                              ; preds = %347, %298
  %352 = phi %"class.spvtools::opt::Instruction"** [ %285, %298 ], [ %350, %347 ]
  %353 = phi %"class.spvtools::opt::Instruction"** [ %295, %298 ], [ %349, %347 ]
  %354 = icmp eq %"class.spvtools::opt::Instruction"** %353, %352
  br i1 %354, label %356, label %355

355:                                              ; preds = %351
  store %"class.spvtools::opt::Instruction"** %353, %"class.spvtools::opt::Instruction"*** %284, align 8
  br label %356

356:                                              ; preds = %275, %267, %291, %248, %226, %242, %355, %351, %294
  %357 = add i32 %158, %148
  br label %157

358:                                              ; preds = %217
  %359 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %202, i64 9
  %360 = bitcast %"struct.std::__1::__hash_node_base"* %359 to %"class.spvtools::opt::Instruction"***
  %361 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %360, align 8
  %362 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %202, i64 10
  %363 = bitcast %"struct.std::__1::__hash_node_base"* %362 to %"class.spvtools::opt::Instruction"***
  %364 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %363, align 8
  %365 = icmp eq %"class.spvtools::opt::Instruction"** %361, %364
  br i1 %365, label %373, label %366

366:                                              ; preds = %358, %370
  %367 = phi %"class.spvtools::opt::Instruction"** [ %371, %370 ], [ %361, %358 ]
  %368 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %367, align 8
  %369 = icmp eq %"class.spvtools::opt::Instruction"* %368, %1
  br i1 %369, label %373, label %370

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %367, i64 1
  %372 = icmp eq %"class.spvtools::opt::Instruction"** %371, %364
  br i1 %372, label %435, label %366

373:                                              ; preds = %366, %358
  %374 = phi %"class.spvtools::opt::Instruction"** [ %361, %358 ], [ %367, %366 ]
  %375 = ptrtoint %"class.spvtools::opt::Instruction"** %374 to i64
  %376 = icmp eq %"class.spvtools::opt::Instruction"** %374, %364
  br i1 %376, label %435, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %374, i64 1
  %379 = icmp eq %"class.spvtools::opt::Instruction"** %378, %364
  br i1 %379, label %430, label %380

380:                                              ; preds = %377
  %381 = getelementptr %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %364, i64 -2
  %382 = ptrtoint %"class.spvtools::opt::Instruction"** %381 to i64
  %383 = sub i64 %382, %375
  %384 = lshr i64 %383, 3
  %385 = add nuw nsw i64 %384, 1
  %386 = and i64 %385, 3
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %405, label %388

388:                                              ; preds = %380, %400
  %389 = phi %"class.spvtools::opt::Instruction"** [ %402, %400 ], [ %378, %380 ]
  %390 = phi i64 [ %401, %400 ], [ %375, %380 ]
  %391 = phi i64 [ %403, %400 ], [ %386, %380 ]
  %392 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %389, align 8
  %393 = icmp eq %"class.spvtools::opt::Instruction"* %392, %1
  br i1 %393, label %400, label %394

394:                                              ; preds = %388
  %395 = ptrtoint %"class.spvtools::opt::Instruction"* %392 to i64
  %396 = inttoptr i64 %390 to %"class.spvtools::opt::Instruction"**
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %396, i64 1
  %399 = ptrtoint %"class.spvtools::opt::Instruction"** %398 to i64
  br label %400

400:                                              ; preds = %394, %388
  %401 = phi i64 [ %390, %388 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %389, i64 1
  %403 = add i64 %391, -1
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %388, !llvm.loop !13

405:                                              ; preds = %400, %380
  %406 = phi i64 [ undef, %380 ], [ %401, %400 ]
  %407 = phi %"class.spvtools::opt::Instruction"** [ %378, %380 ], [ %402, %400 ]
  %408 = phi i64 [ %375, %380 ], [ %401, %400 ]
  %409 = icmp ult i64 %383, 24
  br i1 %409, label %426, label %410

410:                                              ; preds = %405, %496
  %411 = phi %"class.spvtools::opt::Instruction"** [ %498, %496 ], [ %407, %405 ]
  %412 = phi i64 [ %497, %496 ], [ %408, %405 ]
  %413 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %411, align 8
  %414 = icmp eq %"class.spvtools::opt::Instruction"* %413, %1
  br i1 %414, label %421, label %415

415:                                              ; preds = %410
  %416 = ptrtoint %"class.spvtools::opt::Instruction"* %413 to i64
  %417 = inttoptr i64 %412 to %"class.spvtools::opt::Instruction"**
  %418 = inttoptr i64 %412 to i64*
  store i64 %416, i64* %418, align 8
  %419 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %417, i64 1
  %420 = ptrtoint %"class.spvtools::opt::Instruction"** %419 to i64
  br label %421

421:                                              ; preds = %415, %410
  %422 = phi i64 [ %412, %410 ], [ %420, %415 ]
  %423 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %411, i64 1
  %424 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %423, align 8
  %425 = icmp eq %"class.spvtools::opt::Instruction"* %424, %1
  br i1 %425, label %474, label %468

426:                                              ; preds = %496, %405
  %427 = phi i64 [ %406, %405 ], [ %497, %496 ]
  %428 = inttoptr i64 %427 to %"class.spvtools::opt::Instruction"**
  %429 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %363, align 8
  br label %430

430:                                              ; preds = %426, %377
  %431 = phi %"class.spvtools::opt::Instruction"** [ %364, %377 ], [ %429, %426 ]
  %432 = phi %"class.spvtools::opt::Instruction"** [ %374, %377 ], [ %428, %426 ]
  %433 = icmp eq %"class.spvtools::opt::Instruction"** %432, %431
  br i1 %433, label %435, label %434

434:                                              ; preds = %430
  store %"class.spvtools::opt::Instruction"** %432, %"class.spvtools::opt::Instruction"*** %363, align 8
  br label %435

435:                                              ; preds = %222, %214, %370, %65, %57, %81, %195, %174, %189, %434, %430, %373, %38, %5, %31, %145, %141, %84, %2
  ret void

436:                                              ; preds = %132
  %437 = ptrtoint %"class.spvtools::opt::Instruction"* %135 to i64
  %438 = inttoptr i64 %133 to %"class.spvtools::opt::Instruction"**
  %439 = inttoptr i64 %133 to i64*
  store i64 %437, i64* %439, align 8
  %440 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %438, i64 1
  %441 = ptrtoint %"class.spvtools::opt::Instruction"** %440 to i64
  br label %442

442:                                              ; preds = %436, %132
  %443 = phi i64 [ %133, %132 ], [ %441, %436 ]
  %444 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, i64 2
  %445 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %444, align 8
  %446 = icmp eq %"class.spvtools::opt::Instruction"* %445, %1
  br i1 %446, label %453, label %447

447:                                              ; preds = %442
  %448 = ptrtoint %"class.spvtools::opt::Instruction"* %445 to i64
  %449 = inttoptr i64 %443 to %"class.spvtools::opt::Instruction"**
  %450 = inttoptr i64 %443 to i64*
  store i64 %448, i64* %450, align 8
  %451 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %449, i64 1
  %452 = ptrtoint %"class.spvtools::opt::Instruction"** %451 to i64
  br label %453

453:                                              ; preds = %447, %442
  %454 = phi i64 [ %443, %442 ], [ %452, %447 ]
  %455 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, i64 3
  %456 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %455, align 8
  %457 = icmp eq %"class.spvtools::opt::Instruction"* %456, %1
  br i1 %457, label %464, label %458

458:                                              ; preds = %453
  %459 = ptrtoint %"class.spvtools::opt::Instruction"* %456 to i64
  %460 = inttoptr i64 %454 to %"class.spvtools::opt::Instruction"**
  %461 = inttoptr i64 %454 to i64*
  store i64 %459, i64* %461, align 8
  %462 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %460, i64 1
  %463 = ptrtoint %"class.spvtools::opt::Instruction"** %462 to i64
  br label %464

464:                                              ; preds = %458, %453
  %465 = phi i64 [ %454, %453 ], [ %463, %458 ]
  %466 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, i64 4
  %467 = icmp eq %"class.spvtools::opt::Instruction"** %466, %75
  br i1 %467, label %137, label %121

468:                                              ; preds = %421
  %469 = ptrtoint %"class.spvtools::opt::Instruction"* %424 to i64
  %470 = inttoptr i64 %422 to %"class.spvtools::opt::Instruction"**
  %471 = inttoptr i64 %422 to i64*
  store i64 %469, i64* %471, align 8
  %472 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %470, i64 1
  %473 = ptrtoint %"class.spvtools::opt::Instruction"** %472 to i64
  br label %474

474:                                              ; preds = %468, %421
  %475 = phi i64 [ %422, %421 ], [ %473, %468 ]
  %476 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %411, i64 2
  %477 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %476, align 8
  %478 = icmp eq %"class.spvtools::opt::Instruction"* %477, %1
  br i1 %478, label %485, label %479

479:                                              ; preds = %474
  %480 = ptrtoint %"class.spvtools::opt::Instruction"* %477 to i64
  %481 = inttoptr i64 %475 to %"class.spvtools::opt::Instruction"**
  %482 = inttoptr i64 %475 to i64*
  store i64 %480, i64* %482, align 8
  %483 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %481, i64 1
  %484 = ptrtoint %"class.spvtools::opt::Instruction"** %483 to i64
  br label %485

485:                                              ; preds = %479, %474
  %486 = phi i64 [ %475, %474 ], [ %484, %479 ]
  %487 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %411, i64 3
  %488 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %487, align 8
  %489 = icmp eq %"class.spvtools::opt::Instruction"* %488, %1
  br i1 %489, label %496, label %490

490:                                              ; preds = %485
  %491 = ptrtoint %"class.spvtools::opt::Instruction"* %488 to i64
  %492 = inttoptr i64 %486 to %"class.spvtools::opt::Instruction"**
  %493 = inttoptr i64 %486 to i64*
  store i64 %491, i64* %493, align 8
  %494 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %492, i64 1
  %495 = ptrtoint %"class.spvtools::opt::Instruction"** %494 to i64
  br label %496

496:                                              ; preds = %490, %485
  %497 = phi i64 [ %486, %485 ], [ %495, %490 ]
  %498 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %411, i64 4
  %499 = icmp eq %"class.spvtools::opt::Instruction"** %498, %364
  br i1 %499, label %426, label %410

500:                                              ; preds = %342
  %501 = ptrtoint %"class.spvtools::opt::Instruction"* %345 to i64
  %502 = inttoptr i64 %343 to %"class.spvtools::opt::Instruction"**
  %503 = inttoptr i64 %343 to i64*
  store i64 %501, i64* %503, align 8
  %504 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %502, i64 1
  %505 = ptrtoint %"class.spvtools::opt::Instruction"** %504 to i64
  br label %506

506:                                              ; preds = %500, %342
  %507 = phi i64 [ %343, %342 ], [ %505, %500 ]
  %508 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %332, i64 2
  %509 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %508, align 8
  %510 = icmp eq %"class.spvtools::opt::Instruction"* %509, %1
  br i1 %510, label %517, label %511

511:                                              ; preds = %506
  %512 = ptrtoint %"class.spvtools::opt::Instruction"* %509 to i64
  %513 = inttoptr i64 %507 to %"class.spvtools::opt::Instruction"**
  %514 = inttoptr i64 %507 to i64*
  store i64 %512, i64* %514, align 8
  %515 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %513, i64 1
  %516 = ptrtoint %"class.spvtools::opt::Instruction"** %515 to i64
  br label %517

517:                                              ; preds = %511, %506
  %518 = phi i64 [ %507, %506 ], [ %516, %511 ]
  %519 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %332, i64 3
  %520 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %519, align 8
  %521 = icmp eq %"class.spvtools::opt::Instruction"* %520, %1
  br i1 %521, label %528, label %522

522:                                              ; preds = %517
  %523 = ptrtoint %"class.spvtools::opt::Instruction"* %520 to i64
  %524 = inttoptr i64 %518 to %"class.spvtools::opt::Instruction"**
  %525 = inttoptr i64 %518 to i64*
  store i64 %523, i64* %525, align 8
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %524, i64 1
  %527 = ptrtoint %"class.spvtools::opt::Instruction"** %526 to i64
  br label %528

528:                                              ; preds = %522, %517
  %529 = phi i64 [ %518, %517 ], [ %527, %522 ]
  %530 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %332, i64 4
  %531 = icmp eq %"class.spvtools::opt::Instruction"** %530, %285
  br i1 %531, label %347, label %331
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt8analysiseqERKNS1_17DecorationManagerES4_(%"class.spvtools::opt::analysis::DecorationManager"* dereferenceable(48), %"class.spvtools::opt::analysis::DecorationManager"* dereferenceable(48)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNSt3__1eqIjN8spvtools3opt8analysis17DecorationManager10TargetDataENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESN_(%"class.std::__1::unordered_map"* dereferenceable(40) %3, %"class.std::__1::unordered_map"* dereferenceable(40) %4)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__1eqIjN8spvtools3opt8analysis17DecorationManager10TargetDataENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEEbRKNS_13unordered_mapIT_T0_T1_T2_T3_EESN_(%"class.std::__1::unordered_map"* dereferenceable(40), %"class.std::__1::unordered_map"* dereferenceable(40)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %80

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__hash_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %80, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %13, %76
  %17 = phi i64 [ %11, %13 ], [ %78, %76 ]
  %18 = inttoptr i64 %17 to %"struct.std::__1::__hash_node"*
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %14, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %80, label %24

24:                                               ; preds = %16
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %21
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %21, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %21, %30 ]
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %15, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %35
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %80, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %80, label %44

44:                                               ; preds = %40
  %45 = add i64 %22, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %21
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %26, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %22
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %22
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %35
  br i1 %61, label %67, label %80

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %20
  br i1 %66, label %71, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %70, label %80, label %46

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %18, i64 0, i32 2, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to %"struct.spvtools::opt::analysis::DecorationManager::TargetData"*
  %75 = tail call zeroext i1 @_ZN8spvtools3opt8analysiseqERKNS1_17DecorationManager10TargetDataES5_(%"struct.spvtools::opt::analysis::DecorationManager::TargetData"* dereferenceable(72) %72, %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* dereferenceable(72) %74) #11
  br i1 %75, label %76, label %80

76:                                               ; preds = %71
  %77 = inttoptr i64 %17 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %16

80:                                               ; preds = %71, %34, %16, %40, %76, %67, %59, %8, %2
  %81 = phi i1 [ false, %2 ], [ true, %8 ], [ false, %59 ], [ false, %67 ], [ false, %71 ], [ false, %34 ], [ false, %16 ], [ false, %40 ], [ true, %76 ]
  ret i1 %81
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.257"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.254"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.257"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.257"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.257"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.257"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #12
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #13
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.254"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.257"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.257"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.257"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.257"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.257"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.257"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.257"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.257"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.257"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.254"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %8, align 8
  store %"class.std::__1::vector.257"* %4, %"class.std::__1::vector.257"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.257"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.257"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.254"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %23, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.257"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.257"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 4611686018427387887, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #12
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i32* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i32* %23 to i8*
  %25 = icmp ult i64 %1, 2305843009213693927
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 5
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 4
  %34 = and i64 %33, -4
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #12
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 4611686018427387887, %22 ], [ 5, %26 ]
  %39 = shl i64 %38, 2
  %40 = tail call i8* @_Znwm(i64 %39) #13
  %41 = bitcast i8* %40 to i32*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 8
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 2
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i32, i32* %23, i64 %4
  %49 = bitcast i32* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -8
  %55 = sub i64 %4, %54
  %56 = getelementptr i32, i32* %23, i64 %54
  %57 = getelementptr i32, i32* %41, i64 %54
  %58 = add i64 %54, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %23, i64 %66
  %69 = getelementptr i32, i32* %41, i64 %66
  %70 = bitcast i32* %68 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !14
  %72 = getelementptr i32, i32* %68, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !14
  %75 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !17, !noalias !14
  %76 = getelementptr i32, i32* %69, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !17, !noalias !14
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %23, i64 %78
  %80 = getelementptr i32, i32* %41, i64 %78
  %81 = bitcast i32* %79 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !14
  %83 = getelementptr i32, i32* %79, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !14
  %86 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !17, !noalias !14
  %87 = getelementptr i32, i32* %80, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !17, !noalias !14
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %23, i64 %89
  %91 = getelementptr i32, i32* %41, i64 %89
  %92 = bitcast i32* %90 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !14
  %94 = getelementptr i32, i32* %90, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !14
  %97 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !17, !noalias !14
  %98 = getelementptr i32, i32* %91, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !17, !noalias !14
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %23, i64 %100
  %102 = getelementptr i32, i32* %41, i64 %100
  %103 = bitcast i32* %101 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !14
  %105 = getelementptr i32, i32* %101, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !14
  %108 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !17, !noalias !14
  %109 = getelementptr i32, i32* %102, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !17, !noalias !14
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !19

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %23, i64 %118
  %121 = getelementptr i32, i32* %41, i64 %118
  %122 = bitcast i32* %120 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !14
  %124 = getelementptr i32, i32* %120, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !14
  %127 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !17, !noalias !14
  %128 = getelementptr i32, i32* %121, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !17, !noalias !14
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !21

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i32* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i32* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i32* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i32* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i32, i32* %144, align 4
  store i32 %147, i32* %145, align 4
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i32, i32* %145, i64 1
  %150 = getelementptr inbounds i32, i32* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !22

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i32* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i32* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i32* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i32* [ %185, %158 ], [ %156, %153 ]
  %162 = load i32, i32* %160, align 4
  store i32 %162, i32* %161, align 4
  %163 = getelementptr inbounds i32, i32* %161, i64 1
  %164 = getelementptr inbounds i32, i32* %160, i64 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds i32, i32* %161, i64 2
  %167 = getelementptr inbounds i32, i32* %160, i64 2
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds i32, i32* %161, i64 3
  %170 = getelementptr inbounds i32, i32* %160, i64 3
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds i32, i32* %161, i64 4
  %173 = getelementptr inbounds i32, i32* %160, i64 4
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds i32, i32* %161, i64 5
  %176 = getelementptr inbounds i32, i32* %160, i64 5
  %177 = load i32, i32* %176, align 4
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds i32, i32* %161, i64 6
  %179 = getelementptr inbounds i32, i32* %160, i64 6
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  %181 = getelementptr inbounds i32, i32* %161, i64 7
  %182 = getelementptr inbounds i32, i32* %160, i64 7
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %181, align 4
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i32, i32* %161, i64 8
  %186 = getelementptr inbounds i32, i32* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !23

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i32, i32* %41, i64 %4
  %194 = getelementptr inbounds i32, i32* %193, i64 %6
  %195 = getelementptr inbounds i32, i32* %23, i64 %4
  %196 = getelementptr inbounds i32, i32* %195, i64 %5
  %197 = icmp ult i64 %190, 8
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i32* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 2
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 2
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i32, i32* %23, i64 %3
  %208 = bitcast i32* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -8
  %214 = sub i64 %190, %213
  %215 = getelementptr i32, i32* %196, i64 %213
  %216 = getelementptr i32, i32* %194, i64 %213
  %217 = add i64 %213, -8
  %218 = lshr exact i64 %217, 3
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 24
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i32, i32* %196, i64 %225
  %228 = getelementptr i32, i32* %194, i64 %225
  %229 = bitcast i32* %227 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !24
  %231 = getelementptr i32, i32* %227, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 4, !alias.scope !24
  %234 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %234, align 4, !alias.scope !27, !noalias !24
  %235 = getelementptr i32, i32* %228, i64 4
  %236 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %233, <4 x i32>* %236, align 4, !alias.scope !27, !noalias !24
  %237 = or i64 %225, 8
  %238 = getelementptr i32, i32* %196, i64 %237
  %239 = getelementptr i32, i32* %194, i64 %237
  %240 = bitcast i32* %238 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !24
  %242 = getelementptr i32, i32* %238, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  %244 = load <4 x i32>, <4 x i32>* %243, align 4, !alias.scope !24
  %245 = bitcast i32* %239 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %245, align 4, !alias.scope !27, !noalias !24
  %246 = getelementptr i32, i32* %239, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %244, <4 x i32>* %247, align 4, !alias.scope !27, !noalias !24
  %248 = or i64 %225, 16
  %249 = getelementptr i32, i32* %196, i64 %248
  %250 = getelementptr i32, i32* %194, i64 %248
  %251 = bitcast i32* %249 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !24
  %253 = getelementptr i32, i32* %249, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !24
  %256 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !27, !noalias !24
  %257 = getelementptr i32, i32* %250, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !27, !noalias !24
  %259 = or i64 %225, 24
  %260 = getelementptr i32, i32* %196, i64 %259
  %261 = getelementptr i32, i32* %194, i64 %259
  %262 = bitcast i32* %260 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !24
  %264 = getelementptr i32, i32* %260, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !24
  %267 = bitcast i32* %261 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !27, !noalias !24
  %268 = getelementptr i32, i32* %261, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !27, !noalias !24
  %270 = add i64 %225, 32
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !29

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i32, i32* %196, i64 %277
  %280 = getelementptr i32, i32* %194, i64 %277
  %281 = bitcast i32* %279 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !24
  %283 = getelementptr i32, i32* %279, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !24
  %286 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !27, !noalias !24
  %287 = getelementptr i32, i32* %280, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !27, !noalias !24
  %289 = add i64 %277, 8
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !30

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i32* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i32* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i32* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i32* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %304, align 4
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i32, i32* %304, i64 1
  %309 = getelementptr inbounds i32, i32* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !31

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i32* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i32* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i32* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i32* [ %344, %317 ], [ %315, %312 ]
  %321 = load i32, i32* %319, align 4
  store i32 %321, i32* %320, align 4
  %322 = getelementptr inbounds i32, i32* %320, i64 1
  %323 = getelementptr inbounds i32, i32* %319, i64 1
  %324 = load i32, i32* %323, align 4
  store i32 %324, i32* %322, align 4
  %325 = getelementptr inbounds i32, i32* %320, i64 2
  %326 = getelementptr inbounds i32, i32* %319, i64 2
  %327 = load i32, i32* %326, align 4
  store i32 %327, i32* %325, align 4
  %328 = getelementptr inbounds i32, i32* %320, i64 3
  %329 = getelementptr inbounds i32, i32* %319, i64 3
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %320, i64 4
  %332 = getelementptr inbounds i32, i32* %319, i64 4
  %333 = load i32, i32* %332, align 4
  store i32 %333, i32* %331, align 4
  %334 = getelementptr inbounds i32, i32* %320, i64 5
  %335 = getelementptr inbounds i32, i32* %319, i64 5
  %336 = load i32, i32* %335, align 4
  store i32 %336, i32* %334, align 4
  %337 = getelementptr inbounds i32, i32* %320, i64 6
  %338 = getelementptr inbounds i32, i32* %319, i64 6
  %339 = load i32, i32* %338, align 4
  store i32 %339, i32* %337, align 4
  %340 = getelementptr inbounds i32, i32* %320, i64 7
  %341 = getelementptr inbounds i32, i32* %319, i64 7
  %342 = load i32, i32* %341, align 4
  store i32 %342, i32* %340, align 4
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i32, i32* %320, i64 8
  %345 = getelementptr inbounds i32, i32* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !32

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 4
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #13
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.956"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.956", %"class.std::__1::__tree.956"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %97, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.956", %"class.std::__1::__tree.956"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i32*
  %21 = select i1 %13, i32* %19, i32* %20
  br label %22

22:                                               ; preds = %93, %8
  %23 = phi %"class.std::__1::__tree_node"* [ %96, %93 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %95, %93 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i32*
  %41 = select i1 %29, i32* %39, i32* %40
  br label %42

42:                                               ; preds = %51, %37
  %43 = phi i64 [ %52, %51 ], [ %35, %37 ]
  %44 = phi i32* [ %54, %51 ], [ %41, %37 ]
  %45 = phi i32* [ %53, %51 ], [ %21, %37 ]
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %44, align 4
  %48 = icmp ult i32 %46, %47
  br i1 %48, label %58, label %49

49:                                               ; preds = %42
  %50 = icmp ult i32 %47, %46
  br i1 %50, label %64, label %51

51:                                               ; preds = %49
  %52 = add i64 %43, -1
  %53 = getelementptr inbounds i32, i32* %45, i64 1
  %54 = getelementptr inbounds i32, i32* %44, i64 1
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %56, label %42

56:                                               ; preds = %51, %22
  %57 = icmp ult i64 %17, %33
  br i1 %57, label %58, label %64

58:                                               ; preds = %42, %56
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %93

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %99

64:                                               ; preds = %49, %56
  br i1 %36, label %84, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %25 to i32*
  %69 = select i1 %29, i32* %67, i32* %68
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i64 [ %80, %79 ], [ %35, %65 ]
  %72 = phi i32* [ %82, %79 ], [ %21, %65 ]
  %73 = phi i32* [ %81, %79 ], [ %69, %65 ]
  %74 = load i32, i32* %73, align 4
  %75 = load i32, i32* %72, align 4
  %76 = icmp ult i32 %74, %75
  br i1 %76, label %85, label %77

77:                                               ; preds = %70
  %78 = icmp ult i32 %75, %74
  br i1 %78, label %91, label %79

79:                                               ; preds = %77
  %80 = add i64 %71, -1
  %81 = getelementptr inbounds i32, i32* %73, i64 1
  %82 = getelementptr inbounds i32, i32* %72, i64 1
  %83 = icmp eq i64 %80, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %79, %64
  br i1 %34, label %85, label %91

85:                                               ; preds = %70, %84
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %99

91:                                               ; preds = %84, %77
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %99

93:                                               ; preds = %85, %58
  %94 = phi %"class.std::__1::__tree_node_base"* [ %60, %58 ], [ %87, %85 ]
  %95 = phi %"class.std::__1::__tree_node_base"** [ %59, %58 ], [ %86, %85 ]
  %96 = bitcast %"class.std::__1::__tree_node_base"* %94 to %"class.std::__1::__tree_node"*
  br label %22

97:                                               ; preds = %3
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %99

99:                                               ; preds = %62, %89, %91, %97
  %100 = phi %"class.std::__1::__tree_end_node"* [ %4, %97 ], [ %63, %62 ], [ %90, %89 ], [ %92, %91 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %98, %97 ], [ %59, %62 ], [ %86, %89 ], [ %24, %91 ]
  %102 = bitcast %"class.std::__1::__tree_node_base"** %101 to %"class.std::__1::__tree_node"**
  %103 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node"* %103, null
  br i1 %104, label %105, label %130

105:                                              ; preds = %99
  %106 = tail call i8* @_Znwm(i64 56) #13, !noalias !33
  %107 = getelementptr inbounds i8, i8* %106, i64 32
  %108 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #11, !noalias !33
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 24, i1 false) #11, !noalias !33
  %109 = bitcast i8* %106 to %"class.std::__1::__tree_node"*
  %110 = bitcast i8* %106 to %"class.std::__1::__tree_node_base"*
  %111 = getelementptr inbounds i8, i8* %106, i64 16
  %112 = bitcast i8* %111 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %100, %"class.std::__1::__tree_end_node"** %112, align 8
  %113 = bitcast %"class.std::__1::__tree_node_base"** %101 to i8**
  store i8* %106, i8** %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree.956", %"class.std::__1::__tree.956"* %0, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %115, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %105
  %120 = ptrtoint %"class.std::__1::__tree_node_base"* %117 to i64
  %121 = bitcast %"class.std::__1::__tree.956"* %0 to i64*
  store i64 %120, i64* %121, align 8
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  br label %123

123:                                              ; preds = %119, %105
  %124 = phi %"class.std::__1::__tree_node_base"* [ %110, %105 ], [ %122, %119 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree.956", %"class.std::__1::__tree.956"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %126, %"class.std::__1::__tree_node_base"* %124) #11
  %127 = getelementptr inbounds %"class.std::__1::__tree.956", %"class.std::__1::__tree.956"* %0, i64 0, i32 2, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  br label %130

130:                                              ; preds = %123, %99
  %131 = phi i8 [ 1, %123 ], [ 0, %99 ]
  %132 = phi %"class.std::__1::__tree_node"* [ %109, %123 ], [ %103, %99 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %132, i64 0, i32 0, i32 0
  %134 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %133, 0
  %135 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %134, i8 %131, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %3, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.257"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.257"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.252"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.252"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.252"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.254"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.252", %"class.std::__1::vector.252"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.254"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.257"*, %"class.std::__1::vector.257"** %91, align 8
  store %"class.std::__1::vector.257"* null, %"class.std::__1::vector.257"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.257"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.257"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.928"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS5_PvEE(%"class.std::__1::__hash_table.924"*, %"struct.std::__1::__hash_node.1014"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__hash_node.1014", %"struct.std::__1::__hash_node.1014"* %1, i64 0, i32 2
  %4 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node.1014", %"struct.std::__1::__hash_node.1014"* %1, i64 0, i32 1
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node.1014", %"struct.std::__1::__hash_node.1014"* %1, i64 0, i32 0
  %21 = tail call %"struct.std::__1::__hash_node_base.928"* @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE28__node_insert_unique_prepareEmRS5_(%"class.std::__1::__hash_table.924"* %0, i64 %18, %"class.spvtools::opt::Instruction"** dereferenceable(8) %3)
  %22 = icmp eq %"struct.std::__1::__hash_node_base.928"* %21, null
  br i1 %22, label %23, label %82

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %20, i64 1
  %25 = bitcast %"struct.std::__1::__hash_node_base.928"* %24 to i64*
  %26 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %25, align 8
  %29 = tail call i64 @llvm.ctpop.i64(i64 %27) #11, !range !2
  %30 = icmp ugt i64 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %23
  %32 = add i64 %27, -1
  %33 = and i64 %32, %28
  br label %38

34:                                               ; preds = %23
  %35 = icmp ult i64 %28, %27
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = urem i64 %28, %27
  br label %38

38:                                               ; preds = %36, %34, %31
  %39 = phi i64 [ %33, %31 ], [ %37, %36 ], [ %28, %34 ]
  %40 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %41, i64 %39
  %43 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.928"* %43, null
  br i1 %44, label %45, label %71

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 1, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %46, i64 0, i32 0
  %48 = bitcast %"struct.std::__1::__hash_node_base.928"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node.1014", %"struct.std::__1::__hash_node.1014"* %1, i64 0, i32 0, i32 0
  %51 = bitcast %"struct.std::__1::__hash_node.1014"* %1 to i64*
  store i64 %49, i64* %51, align 8
  store %"struct.std::__1::__hash_node_base.928"* %20, %"struct.std::__1::__hash_node_base.928"** %47, align 8
  %52 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %40, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %52, i64 %39
  store %"struct.std::__1::__hash_node_base.928"* %46, %"struct.std::__1::__hash_node_base.928"** %53, align 8
  %54 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %50, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.928"* %54, null
  br i1 %55, label %78, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %54, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.928"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  br i1 %30, label %63, label %60

60:                                               ; preds = %56
  %61 = add i64 %27, -1
  %62 = and i64 %59, %61
  br label %67

63:                                               ; preds = %56
  %64 = icmp ult i64 %59, %27
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %59, %27
  br label %67

67:                                               ; preds = %65, %63, %60
  %68 = phi i64 [ %62, %60 ], [ %66, %65 ], [ %59, %63 ]
  %69 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %40, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %69, i64 %68
  br label %76

71:                                               ; preds = %38
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %43, i64 0, i32 0
  %73 = bitcast %"struct.std::__1::__hash_node_base.928"* %43 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.std::__1::__hash_node.1014"* %1 to i64*
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %71, %67
  %77 = phi %"struct.std::__1::__hash_node_base.928"** [ %70, %67 ], [ %72, %71 ]
  store %"struct.std::__1::__hash_node_base.928"* %20, %"struct.std::__1::__hash_node_base.928"** %77, align 8
  br label %78

78:                                               ; preds = %76, %45
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %79, align 8
  br label %82

82:                                               ; preds = %78, %2
  %83 = phi i8 [ 1, %78 ], [ 0, %2 ]
  %84 = phi %"struct.std::__1::__hash_node_base.928"* [ %20, %78 ], [ %21, %2 ]
  %85 = insertvalue { %"struct.std::__1::__hash_node_base.928"*, i8 } undef, %"struct.std::__1::__hash_node_base.928"* %84, 0
  %86 = insertvalue { %"struct.std::__1::__hash_node_base.928"*, i8 } %85, i8 %83, 1
  ret { %"struct.std::__1::__hash_node_base.928"*, i8 } %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.928"* @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE28__node_insert_unique_prepareEmRS5_(%"class.std::__1::__hash_table.924"*, i64, %"class.spvtools::opt::Instruction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %50, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !2
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %1
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %1, %5
  br label %17

17:                                               ; preds = %10, %13, %15
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %1, %13 ]
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.928"* %22, null
  br i1 %23, label %50, label %24

24:                                               ; preds = %17
  %25 = add i64 %5, -1
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  br label %27

27:                                               ; preds = %24, %45
  %28 = phi %"struct.std::__1::__hash_node_base.928"* [ %30, %45 ], [ %22, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.928"* %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.928"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  br i1 %9, label %38, label %36

36:                                               ; preds = %32
  %37 = and i64 %35, %25
  br label %42

38:                                               ; preds = %32
  %39 = icmp ult i64 %35, %5
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %35, %5
  br label %42

42:                                               ; preds = %36, %38, %40
  %43 = phi i64 [ %37, %36 ], [ %41, %40 ], [ %35, %38 ]
  %44 = icmp eq i64 %43, %18
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %30, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.928"* %46 to %"class.spvtools::opt::Instruction"**
  %48 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %47, align 8
  %49 = icmp eq %"class.spvtools::opt::Instruction"* %48, %26
  br i1 %49, label %74, label %27

50:                                               ; preds = %42, %27, %17, %3
  %51 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 2, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  %54 = uitofp i64 %53 to float
  %55 = uitofp i64 %5 to float
  %56 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 3, i32 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, %55
  %59 = fcmp olt float %58, %54
  %60 = or i1 %6, %59
  br i1 %60, label %61, label %74

61:                                               ; preds = %50
  %62 = shl i64 %5, 1
  %63 = icmp ult i64 %5, 3
  %64 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !2
  %65 = icmp ugt i64 %64, 1
  %66 = or i1 %63, %65
  %67 = zext i1 %66 to i64
  %68 = or i64 %62, %67
  %69 = fdiv float %54, %57
  %70 = tail call float @llvm.ceil.f32(float %69) #11
  %71 = fptoui float %70 to i64
  %72 = icmp ult i64 %68, %71
  %73 = select i1 %72, i64 %71, i64 %68
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.924"* %0, i64 %73)
  br label %74

74:                                               ; preds = %45, %61, %50
  %75 = phi %"struct.std::__1::__hash_node_base.928"* [ null, %50 ], [ null, %61 ], [ %30, %45 ]
  ret %"struct.std::__1::__hash_node_base.928"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.924"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.924"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.924"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.924"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.924"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.928"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.928"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.930", %"class.std::__1::__bucket_list_deallocator.930"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.928"* null, %"struct.std::__1::__hash_node_base.928"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !36

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.928"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.928"* null, %"struct.std::__1::__hash_node_base.928"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.928"* null, %"struct.std::__1::__hash_node_base.928"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.928"* null, %"struct.std::__1::__hash_node_base.928"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.928"* null, %"struct.std::__1::__hash_node_base.928"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.928"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.928"* %36, %"struct.std::__1::__hash_node_base.928"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.928"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.928"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.928"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.928"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.928"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.928"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.928"* %82, %"struct.std::__1::__hash_node_base.928"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.928"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.928"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.928"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.928"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.928"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.928"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.928"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.928"* %80, %"struct.std::__1::__hash_node_base.928"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.928"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.928", %"struct.std::__1::__hash_node_base.928"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.928"*, %"struct.std::__1::__hash_node_base.928"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.928"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.924", %"class.std::__1::__hash_table.924"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.928"**, %"struct.std::__1::__hash_node_base.928"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.928"** null, %"struct.std::__1::__hash_node_base.928"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.928"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.928"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.930", %"class.std::__1::__bucket_list_deallocator.930"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1026", align 8
  %4 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1, i64 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %4, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.1026"* nonnull sret %3, %"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* %1) #11
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.1026", %"class.std::__1::unique_ptr.1026"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %6, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node"* %7, null
  br i1 %8, label %42, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.1026", %"class.std::__1::unique_ptr.1026"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %40, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %7, i64 0, i32 2, i32 0, i32 1, i32 2, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::Instruction"** %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"class.spvtools::opt::Instruction"** %15 to i64
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %7, i64 0, i32 2, i32 0, i32 1, i32 2, i32 0, i32 1
  %20 = bitcast %"class.spvtools::opt::Instruction"*** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %7, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %7, i64 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 1
  %29 = bitcast %"class.spvtools::opt::Instruction"*** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %26, %22
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %7, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %32, align 8
  %34 = icmp eq %"class.spvtools::opt::Instruction"** %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"class.spvtools::opt::Instruction"** %33 to i64
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %7, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.spvtools::opt::Instruction"*** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.spvtools::opt::Instruction"** %33 to i8*
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %35, %31, %9
  %41 = bitcast %"struct.std::__1::__hash_node"* %7 to i8*
  call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %2, %40
  ret %"struct.std::__1::__hash_node_base"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.1026"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1026"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1026", %"class.std::__1::unique_ptr.1026"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1026", %"class.std::__1::unique_ptr.1026"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPNS0_11InstructionEEENSt3__16vectorIT_NS6_9allocatorIS8_EEEEjbENKUlRKNS7_IS5_NS9_IS5_EEEEE_clESF_(%class.anon.1032*, %"class.std::__1::vector.916"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"** %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.anon.1032, %class.anon.1032* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.anon.1032, %class.anon.1032* %0, i64 0, i32 1
  br label %12

11:                                               ; preds = %106, %2
  ret void

12:                                               ; preds = %8, %106
  %13 = phi %"class.spvtools::opt::Instruction"** [ %4, %8 ], [ %107, %106 ]
  %14 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  %15 = ptrtoint %"class.spvtools::opt::Instruction"* %14 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 71
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 1, i32 2
  %27 = xor i1 %25, true
  %28 = zext i1 %27 to i32
  %29 = select i1 %22, i32 %28, i32 %26
  %30 = add nuw nsw i32 %29, 1
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %14, i32 %30) #11
  %32 = icmp ne i32 %31, 41
  %33 = load i8, i8* %9, align 8, !range !3
  %34 = icmp ne i8 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %106

36:                                               ; preds = %12, %19
  %37 = load %"class.std::__1::vector.916"*, %"class.std::__1::vector.916"** %10, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %37, i64 0, i32 0, i32 1
  %39 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %37, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::Instruction"** %39, %41
  %43 = ptrtoint %"class.spvtools::opt::Instruction"** %41 to i64
  br i1 %42, label %49, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  store i64 %15, i64* %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, i64 1
  %47 = ptrtoint %"class.spvtools::opt::Instruction"** %46 to i64
  %48 = bitcast %"class.spvtools::opt::Instruction"*** %38 to i64*
  store i64 %47, i64* %48, align 8
  br label %106

49:                                               ; preds = %36
  %50 = ptrtoint %"class.spvtools::opt::Instruction"** %39 to i64
  %51 = bitcast %"class.spvtools::opt::Instruction"*** %38 to i64*
  %52 = bitcast %"class.std::__1::vector.916"* %37 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %50, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::vector.916"* %37 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #12
  unreachable

60:                                               ; preds = %49
  %61 = bitcast %"class.spvtools::opt::Instruction"*** %40 to i64*
  %62 = sub i64 %43, %53
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %56
  %68 = select i1 %67, i64 %56, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @abort() #12
  unreachable

73:                                               ; preds = %70, %60
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %60 ]
  %75 = shl i64 %74, 3
  %76 = tail call i8* @_Znwm(i64 %75) #13
  %77 = bitcast i8* %76 to %"class.spvtools::opt::Instruction"**
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi %"class.spvtools::opt::Instruction"** [ %77, %73 ], [ null, %65 ]
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, i64 %55
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, i64 %79
  %83 = ptrtoint %"class.spvtools::opt::Instruction"** %82 to i64
  %84 = bitcast %"class.spvtools::opt::Instruction"** %81 to i64*
  store i64 %15, i64* %84, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, i64 1
  %86 = ptrtoint %"class.spvtools::opt::Instruction"** %85 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %37, i64 0, i32 0, i32 0
  %88 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %87, align 8
  %89 = load i64, i64* %51, align 8
  %90 = ptrtoint %"class.spvtools::opt::Instruction"** %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, i64 %93
  %95 = ptrtoint %"class.spvtools::opt::Instruction"** %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %78
  %98 = bitcast %"class.spvtools::opt::Instruction"** %94 to i8*
  %99 = bitcast %"class.spvtools::opt::Instruction"** %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #11
  %100 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %87, align 8
  br label %101

101:                                              ; preds = %97, %78
  %102 = phi %"class.spvtools::opt::Instruction"** [ %88, %78 ], [ %100, %97 ]
  store i64 %95, i64* %52, align 8
  store i64 %86, i64* %51, align 8
  store i64 %83, i64* %61, align 8
  %103 = icmp eq %"class.spvtools::opt::Instruction"** %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.spvtools::opt::Instruction"** %102 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %104, %101, %44, %19
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, i64 1
  %108 = icmp eq %"class.spvtools::opt::Instruction"** %107, %6
  br i1 %108, label %11, label %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN8spvtools3opt8analysis17DecorationManager25InternalGetDecorationsForIPKNS0_11InstructionEEENSt3__16vectorIT_NS7_9allocatorIS9_EEEEjbENKUlRKNS8_IPS4_NSA_ISD_EEEEE_clESH_(%class.anon.1033*, %"class.std::__1::vector.916"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.916", %"class.std::__1::vector.916"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"** %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.anon.1033, %class.anon.1033* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.anon.1033, %class.anon.1033* %0, i64 0, i32 1
  br label %12

11:                                               ; preds = %106, %2
  ret void

12:                                               ; preds = %8, %106
  %13 = phi %"class.spvtools::opt::Instruction"** [ %4, %8 ], [ %107, %106 ]
  %14 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 71
  br i1 %17, label %18, label %35

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !3
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !3
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 1, i32 2
  %26 = xor i1 %24, true
  %27 = zext i1 %26 to i32
  %28 = select i1 %21, i32 %27, i32 %25
  %29 = add nuw nsw i32 %28, 1
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %14, i32 %29) #11
  %31 = icmp ne i32 %30, 41
  %32 = load i8, i8* %9, align 8, !range !3
  %33 = icmp ne i8 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %106

35:                                               ; preds = %12, %18
  %36 = load %"class.std::__1::vector.947"*, %"class.std::__1::vector.947"** %10, align 8
  %37 = ptrtoint %"class.spvtools::opt::Instruction"* %14 to i64
  %38 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %36, i64 0, i32 0, i32 1
  %39 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %36, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %40, align 8
  %42 = icmp ult %"class.spvtools::opt::Instruction"** %39, %41
  %43 = ptrtoint %"class.spvtools::opt::Instruction"** %41 to i64
  br i1 %42, label %44, label %49

44:                                               ; preds = %35
  %45 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  store i64 %37, i64* %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, i64 1
  %47 = ptrtoint %"class.spvtools::opt::Instruction"** %46 to i64
  %48 = bitcast %"class.spvtools::opt::Instruction"*** %38 to i64*
  store i64 %47, i64* %48, align 8
  br label %106

49:                                               ; preds = %35
  %50 = ptrtoint %"class.spvtools::opt::Instruction"** %39 to i64
  %51 = bitcast %"class.spvtools::opt::Instruction"*** %38 to i64*
  %52 = bitcast %"class.std::__1::vector.947"* %36 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %50, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::vector.947"* %36 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #12
  unreachable

60:                                               ; preds = %49
  %61 = bitcast %"class.spvtools::opt::Instruction"*** %40 to i64*
  %62 = sub i64 %43, %53
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %56
  %68 = select i1 %67, i64 %56, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @abort() #12
  unreachable

73:                                               ; preds = %70, %60
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %60 ]
  %75 = shl i64 %74, 3
  %76 = tail call i8* @_Znwm(i64 %75) #13
  %77 = bitcast i8* %76 to %"class.spvtools::opt::Instruction"**
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi %"class.spvtools::opt::Instruction"** [ %77, %73 ], [ null, %65 ]
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, i64 %55
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, i64 %79
  %83 = ptrtoint %"class.spvtools::opt::Instruction"** %82 to i64
  %84 = bitcast %"class.spvtools::opt::Instruction"** %81 to i64*
  store i64 %37, i64* %84, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, i64 1
  %86 = ptrtoint %"class.spvtools::opt::Instruction"** %85 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %36, i64 0, i32 0, i32 0
  %88 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %87, align 8
  %89 = load i64, i64* %51, align 8
  %90 = ptrtoint %"class.spvtools::opt::Instruction"** %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, i64 %93
  %95 = ptrtoint %"class.spvtools::opt::Instruction"** %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %78
  %98 = bitcast %"class.spvtools::opt::Instruction"** %94 to i8*
  %99 = bitcast %"class.spvtools::opt::Instruction"** %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #11
  %100 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %87, align 8
  br label %101

101:                                              ; preds = %97, %78
  %102 = phi %"class.spvtools::opt::Instruction"** [ %88, %78 ], [ %100, %97 ]
  store i64 %95, i64* %52, align 8
  store i64 %86, i64* %51, align 8
  store i64 %83, i64* %61, align 8
  %103 = icmp eq %"class.spvtools::opt::Instruction"** %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.spvtools::opt::Instruction"** %102 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %104, %101, %44, %18
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, i64 1
  %108 = icmp eq %"class.spvtools::opt::Instruction"** %107, %6
  br i1 %108, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.956"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1039"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 96) #13, !noalias !37
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !37
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !37
  store i32 %62, i32* %61, align 8, !noalias !37
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 72, i1 false) #11, !noalias !37
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !37
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8, !noalias !37
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #11
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #11, !range !2
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base"* %109, %"struct.std::__1::__hash_node_base"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #11, !range !2
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !40

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_8analysis17DecorationManager17ForEachDecorationEjjNS_8functionIFvS6_EEEE3$_3S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.968"**
  %4 = load %"class.std::__1::function.968"*, %"class.std::__1::function.968"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.968", %"class.std::__1::function.968"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.968", %"class.std::__1::function.968"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* dereferenceable(112) %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_8analysis17DecorationManager14FindDecorationEjjNS_8functionIS7_EEE3$_4S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.910"**
  %4 = load %"class.std::__1::function.910"*, %"class.std::__1::function.910"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %4, i64 0, i32 0, i32 0
  %8 = tail call zeroext i1 %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* dereferenceable(112) %1) #11
  %9 = xor i1 %8, true
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools3opt8analysiseqERKNS1_17DecorationManager10TargetDataES5_(%"struct.spvtools::opt::analysis::DecorationManager::TargetData"* dereferenceable(72), %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %3, align 8
  %5 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %5, align 8
  %7 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %9 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  %10 = icmp eq %"class.spvtools::opt::Instruction"** %4, %6
  br i1 %10, label %27, label %11

11:                                               ; preds = %2
  %12 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %12, %13
  br i1 %14, label %19, label %27

15:                                               ; preds = %19
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %22, align 8
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %16, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %11, %15
  %20 = phi %"class.spvtools::opt::Instruction"** [ %22, %15 ], [ %4, %11 ]
  %21 = phi %"class.spvtools::opt::Instruction"** [ %23, %15 ], [ %8, %11 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %20, i64 1
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, i64 1
  %24 = icmp eq %"class.spvtools::opt::Instruction"** %22, %6
  br i1 %24, label %172, label %15

25:                                               ; preds = %15
  %26 = ptrtoint %"class.spvtools::opt::Instruction"** %22 to i64
  br label %27

27:                                               ; preds = %25, %11, %2
  %28 = phi %"class.spvtools::opt::Instruction"** [ %4, %2 ], [ %4, %11 ], [ %22, %25 ]
  %29 = phi %"class.spvtools::opt::Instruction"** [ %8, %2 ], [ %8, %11 ], [ %23, %25 ]
  %30 = phi i64 [ %9, %2 ], [ %9, %11 ], [ %26, %25 ]
  %31 = ptrtoint %"class.spvtools::opt::Instruction"** %28 to i64
  %32 = icmp eq %"class.spvtools::opt::Instruction"** %28, %6
  br i1 %32, label %172, label %33

33:                                               ; preds = %27
  %34 = ptrtoint %"class.spvtools::opt::Instruction"** %6 to i64
  %35 = sub i64 %34, %30
  %36 = icmp eq i64 %35, 8
  br i1 %36, label %512, label %37

37:                                               ; preds = %33
  %38 = icmp eq i64 %35, 0
  %39 = add i64 %35, -8
  %40 = lshr i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 3
  %43 = icmp ult i64 %39, 24
  %44 = sub nsw i64 %41, %42
  %45 = icmp eq i64 %42, 0
  br label %46

46:                                               ; preds = %168, %37
  %47 = phi i64 [ %171, %168 ], [ 0, %37 ]
  %48 = phi %"class.spvtools::opt::Instruction"** [ %169, %168 ], [ %28, %37 ]
  %49 = sub i64 -2, %47
  %50 = getelementptr %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, i64 %49
  %51 = ptrtoint %"class.spvtools::opt::Instruction"** %50 to i64
  %52 = sub i64 %51, %31
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = icmp eq %"class.spvtools::opt::Instruction"** %28, %48
  br i1 %55, label %65, label %56

56:                                               ; preds = %46
  %57 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %48, align 8
  br label %58

58:                                               ; preds = %62, %56
  %59 = phi %"class.spvtools::opt::Instruction"** [ %28, %56 ], [ %63, %62 ]
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %61 = icmp eq %"class.spvtools::opt::Instruction"* %60, %57
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, i64 1
  %64 = icmp eq %"class.spvtools::opt::Instruction"** %63, %48
  br i1 %64, label %68, label %58

65:                                               ; preds = %58, %46
  %66 = phi %"class.spvtools::opt::Instruction"** [ %28, %46 ], [ %59, %58 ]
  %67 = icmp eq %"class.spvtools::opt::Instruction"** %66, %48
  br i1 %67, label %68, label %168

68:                                               ; preds = %62, %65
  br i1 %38, label %512, label %69

69:                                               ; preds = %68
  %70 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %48, align 8
  br i1 %43, label %71, label %97

71:                                               ; preds = %97, %69
  %72 = phi i64 [ undef, %69 ], [ %119, %97 ]
  %73 = phi i64 [ 0, %69 ], [ %119, %97 ]
  %74 = phi %"class.spvtools::opt::Instruction"** [ %29, %69 ], [ %120, %97 ]
  br i1 %45, label %86, label %75

75:                                               ; preds = %71, %75
  %76 = phi i64 [ %82, %75 ], [ %73, %71 ]
  %77 = phi %"class.spvtools::opt::Instruction"** [ %83, %75 ], [ %74, %71 ]
  %78 = phi i64 [ %84, %75 ], [ %42, %71 ]
  %79 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, align 8
  %80 = icmp eq %"class.spvtools::opt::Instruction"* %70, %79
  %81 = zext i1 %80 to i64
  %82 = add nuw nsw i64 %76, %81
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, i64 1
  %84 = add i64 %78, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %75, !llvm.loop !41

86:                                               ; preds = %75, %71
  %87 = phi i64 [ %72, %71 ], [ %82, %75 ]
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %512, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %48, i64 1
  %91 = icmp eq %"class.spvtools::opt::Instruction"** %90, %6
  br i1 %91, label %139, label %92

92:                                               ; preds = %89
  %93 = and i64 %54, 3
  %94 = icmp ult i64 %52, 24
  br i1 %94, label %123, label %95

95:                                               ; preds = %92
  %96 = sub nsw i64 %54, %93
  br label %142

97:                                               ; preds = %69, %97
  %98 = phi i64 [ %119, %97 ], [ 0, %69 ]
  %99 = phi %"class.spvtools::opt::Instruction"** [ %120, %97 ], [ %29, %69 ]
  %100 = phi i64 [ %121, %97 ], [ %44, %69 ]
  %101 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %99, align 8
  %102 = icmp eq %"class.spvtools::opt::Instruction"* %70, %101
  %103 = zext i1 %102 to i64
  %104 = add nuw nsw i64 %98, %103
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %99, i64 1
  %106 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %105, align 8
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %70, %106
  %108 = zext i1 %107 to i64
  %109 = add nuw nsw i64 %104, %108
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %99, i64 2
  %111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %110, align 8
  %112 = icmp eq %"class.spvtools::opt::Instruction"* %70, %111
  %113 = zext i1 %112 to i64
  %114 = add nuw nsw i64 %109, %113
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %99, i64 3
  %116 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %115, align 8
  %117 = icmp eq %"class.spvtools::opt::Instruction"* %70, %116
  %118 = zext i1 %117 to i64
  %119 = add nuw nsw i64 %114, %118
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %99, i64 4
  %121 = add i64 %100, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %71, label %97

123:                                              ; preds = %142, %92
  %124 = phi i64 [ undef, %92 ], [ %164, %142 ]
  %125 = phi %"class.spvtools::opt::Instruction"** [ %90, %92 ], [ %165, %142 ]
  %126 = phi i64 [ 1, %92 ], [ %164, %142 ]
  %127 = icmp eq i64 %93, 0
  br i1 %127, label %139, label %128

128:                                              ; preds = %123, %128
  %129 = phi %"class.spvtools::opt::Instruction"** [ %136, %128 ], [ %125, %123 ]
  %130 = phi i64 [ %135, %128 ], [ %126, %123 ]
  %131 = phi i64 [ %137, %128 ], [ %93, %123 ]
  %132 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %133 = icmp eq %"class.spvtools::opt::Instruction"* %70, %132
  %134 = zext i1 %133 to i64
  %135 = add nuw nsw i64 %130, %134
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, i64 1
  %137 = add i64 %131, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %128, !llvm.loop !42

139:                                              ; preds = %123, %128, %89
  %140 = phi i64 [ 1, %89 ], [ %124, %123 ], [ %135, %128 ]
  %141 = icmp eq i64 %140, %87
  br i1 %141, label %168, label %512

142:                                              ; preds = %142, %95
  %143 = phi %"class.spvtools::opt::Instruction"** [ %90, %95 ], [ %165, %142 ]
  %144 = phi i64 [ 1, %95 ], [ %164, %142 ]
  %145 = phi i64 [ %96, %95 ], [ %166, %142 ]
  %146 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, align 8
  %147 = icmp eq %"class.spvtools::opt::Instruction"* %70, %146
  %148 = zext i1 %147 to i64
  %149 = add nuw nsw i64 %144, %148
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, i64 1
  %151 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %150, align 8
  %152 = icmp eq %"class.spvtools::opt::Instruction"* %70, %151
  %153 = zext i1 %152 to i64
  %154 = add nuw nsw i64 %149, %153
  %155 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, i64 2
  %156 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %155, align 8
  %157 = icmp eq %"class.spvtools::opt::Instruction"* %70, %156
  %158 = zext i1 %157 to i64
  %159 = add nuw nsw i64 %154, %158
  %160 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, i64 3
  %161 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %160, align 8
  %162 = icmp eq %"class.spvtools::opt::Instruction"* %70, %161
  %163 = zext i1 %162 to i64
  %164 = add nuw nsw i64 %159, %163
  %165 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, i64 4
  %166 = add i64 %145, -4
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %123, label %142

168:                                              ; preds = %139, %65
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %48, i64 1
  %170 = icmp eq %"class.spvtools::opt::Instruction"** %169, %6
  %171 = add i64 %47, 1
  br i1 %170, label %172, label %46

172:                                              ; preds = %19, %168, %27
  %173 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %0, i64 0, i32 1, i32 0, i32 0
  %174 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %173, align 8
  %175 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %0, i64 0, i32 1, i32 0, i32 1
  %176 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %175, align 8
  %177 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %1, i64 0, i32 1, i32 0, i32 0
  %178 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %177, align 8
  %179 = ptrtoint %"class.spvtools::opt::Instruction"** %174 to i64
  %180 = icmp eq %"class.spvtools::opt::Instruction"** %174, %176
  br i1 %180, label %197, label %181

181:                                              ; preds = %172
  %182 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %174, align 8
  %183 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %178, align 8
  %184 = icmp eq %"class.spvtools::opt::Instruction"* %182, %183
  br i1 %184, label %189, label %197

185:                                              ; preds = %189
  %186 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %192, align 8
  %187 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %193, align 8
  %188 = icmp eq %"class.spvtools::opt::Instruction"* %186, %187
  br i1 %188, label %189, label %195

189:                                              ; preds = %181, %185
  %190 = phi %"class.spvtools::opt::Instruction"** [ %192, %185 ], [ %174, %181 ]
  %191 = phi %"class.spvtools::opt::Instruction"** [ %193, %185 ], [ %178, %181 ]
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %190, i64 1
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %191, i64 1
  %194 = icmp eq %"class.spvtools::opt::Instruction"** %192, %176
  br i1 %194, label %342, label %185

195:                                              ; preds = %185
  %196 = ptrtoint %"class.spvtools::opt::Instruction"** %192 to i64
  br label %197

197:                                              ; preds = %195, %181, %172
  %198 = phi %"class.spvtools::opt::Instruction"** [ %174, %172 ], [ %174, %181 ], [ %192, %195 ]
  %199 = phi %"class.spvtools::opt::Instruction"** [ %178, %172 ], [ %178, %181 ], [ %193, %195 ]
  %200 = phi i64 [ %179, %172 ], [ %179, %181 ], [ %196, %195 ]
  %201 = ptrtoint %"class.spvtools::opt::Instruction"** %198 to i64
  %202 = icmp eq %"class.spvtools::opt::Instruction"** %198, %176
  br i1 %202, label %342, label %203

203:                                              ; preds = %197
  %204 = ptrtoint %"class.spvtools::opt::Instruction"** %176 to i64
  %205 = sub i64 %204, %200
  %206 = icmp eq i64 %205, 8
  br i1 %206, label %512, label %207

207:                                              ; preds = %203
  %208 = icmp eq i64 %205, 0
  %209 = add i64 %205, -8
  %210 = lshr i64 %209, 3
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 3
  %213 = icmp ult i64 %209, 24
  %214 = sub nsw i64 %211, %212
  %215 = icmp eq i64 %212, 0
  br label %216

216:                                              ; preds = %338, %207
  %217 = phi i64 [ %341, %338 ], [ 0, %207 ]
  %218 = phi %"class.spvtools::opt::Instruction"** [ %339, %338 ], [ %198, %207 ]
  %219 = sub i64 -2, %217
  %220 = getelementptr %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %176, i64 %219
  %221 = ptrtoint %"class.spvtools::opt::Instruction"** %220 to i64
  %222 = sub i64 %221, %201
  %223 = lshr i64 %222, 3
  %224 = add nuw nsw i64 %223, 1
  %225 = icmp eq %"class.spvtools::opt::Instruction"** %198, %218
  br i1 %225, label %235, label %226

226:                                              ; preds = %216
  %227 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %218, align 8
  br label %228

228:                                              ; preds = %232, %226
  %229 = phi %"class.spvtools::opt::Instruction"** [ %198, %226 ], [ %233, %232 ]
  %230 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %229, align 8
  %231 = icmp eq %"class.spvtools::opt::Instruction"* %230, %227
  br i1 %231, label %235, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %229, i64 1
  %234 = icmp eq %"class.spvtools::opt::Instruction"** %233, %218
  br i1 %234, label %238, label %228

235:                                              ; preds = %228, %216
  %236 = phi %"class.spvtools::opt::Instruction"** [ %198, %216 ], [ %229, %228 ]
  %237 = icmp eq %"class.spvtools::opt::Instruction"** %236, %218
  br i1 %237, label %238, label %338

238:                                              ; preds = %232, %235
  br i1 %208, label %512, label %239

239:                                              ; preds = %238
  %240 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %218, align 8
  br i1 %213, label %241, label %267

241:                                              ; preds = %267, %239
  %242 = phi i64 [ undef, %239 ], [ %289, %267 ]
  %243 = phi i64 [ 0, %239 ], [ %289, %267 ]
  %244 = phi %"class.spvtools::opt::Instruction"** [ %199, %239 ], [ %290, %267 ]
  br i1 %215, label %256, label %245

245:                                              ; preds = %241, %245
  %246 = phi i64 [ %252, %245 ], [ %243, %241 ]
  %247 = phi %"class.spvtools::opt::Instruction"** [ %253, %245 ], [ %244, %241 ]
  %248 = phi i64 [ %254, %245 ], [ %212, %241 ]
  %249 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %247, align 8
  %250 = icmp eq %"class.spvtools::opt::Instruction"* %240, %249
  %251 = zext i1 %250 to i64
  %252 = add nuw nsw i64 %246, %251
  %253 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %247, i64 1
  %254 = add i64 %248, -1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %245, !llvm.loop !43

256:                                              ; preds = %245, %241
  %257 = phi i64 [ %242, %241 ], [ %252, %245 ]
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %512, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %218, i64 1
  %261 = icmp eq %"class.spvtools::opt::Instruction"** %260, %176
  br i1 %261, label %309, label %262

262:                                              ; preds = %259
  %263 = and i64 %224, 3
  %264 = icmp ult i64 %222, 24
  br i1 %264, label %293, label %265

265:                                              ; preds = %262
  %266 = sub nsw i64 %224, %263
  br label %312

267:                                              ; preds = %239, %267
  %268 = phi i64 [ %289, %267 ], [ 0, %239 ]
  %269 = phi %"class.spvtools::opt::Instruction"** [ %290, %267 ], [ %199, %239 ]
  %270 = phi i64 [ %291, %267 ], [ %214, %239 ]
  %271 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %269, align 8
  %272 = icmp eq %"class.spvtools::opt::Instruction"* %240, %271
  %273 = zext i1 %272 to i64
  %274 = add nuw nsw i64 %268, %273
  %275 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %269, i64 1
  %276 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %275, align 8
  %277 = icmp eq %"class.spvtools::opt::Instruction"* %240, %276
  %278 = zext i1 %277 to i64
  %279 = add nuw nsw i64 %274, %278
  %280 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %269, i64 2
  %281 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %280, align 8
  %282 = icmp eq %"class.spvtools::opt::Instruction"* %240, %281
  %283 = zext i1 %282 to i64
  %284 = add nuw nsw i64 %279, %283
  %285 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %269, i64 3
  %286 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %285, align 8
  %287 = icmp eq %"class.spvtools::opt::Instruction"* %240, %286
  %288 = zext i1 %287 to i64
  %289 = add nuw nsw i64 %284, %288
  %290 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %269, i64 4
  %291 = add i64 %270, -4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %241, label %267

293:                                              ; preds = %312, %262
  %294 = phi i64 [ undef, %262 ], [ %334, %312 ]
  %295 = phi %"class.spvtools::opt::Instruction"** [ %260, %262 ], [ %335, %312 ]
  %296 = phi i64 [ 1, %262 ], [ %334, %312 ]
  %297 = icmp eq i64 %263, 0
  br i1 %297, label %309, label %298

298:                                              ; preds = %293, %298
  %299 = phi %"class.spvtools::opt::Instruction"** [ %306, %298 ], [ %295, %293 ]
  %300 = phi i64 [ %305, %298 ], [ %296, %293 ]
  %301 = phi i64 [ %307, %298 ], [ %263, %293 ]
  %302 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %299, align 8
  %303 = icmp eq %"class.spvtools::opt::Instruction"* %240, %302
  %304 = zext i1 %303 to i64
  %305 = add nuw nsw i64 %300, %304
  %306 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %299, i64 1
  %307 = add i64 %301, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %309, label %298, !llvm.loop !44

309:                                              ; preds = %293, %298, %259
  %310 = phi i64 [ 1, %259 ], [ %294, %293 ], [ %305, %298 ]
  %311 = icmp eq i64 %310, %257
  br i1 %311, label %338, label %512

312:                                              ; preds = %312, %265
  %313 = phi %"class.spvtools::opt::Instruction"** [ %260, %265 ], [ %335, %312 ]
  %314 = phi i64 [ 1, %265 ], [ %334, %312 ]
  %315 = phi i64 [ %266, %265 ], [ %336, %312 ]
  %316 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %313, align 8
  %317 = icmp eq %"class.spvtools::opt::Instruction"* %240, %316
  %318 = zext i1 %317 to i64
  %319 = add nuw nsw i64 %314, %318
  %320 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %313, i64 1
  %321 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %320, align 8
  %322 = icmp eq %"class.spvtools::opt::Instruction"* %240, %321
  %323 = zext i1 %322 to i64
  %324 = add nuw nsw i64 %319, %323
  %325 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %313, i64 2
  %326 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %325, align 8
  %327 = icmp eq %"class.spvtools::opt::Instruction"* %240, %326
  %328 = zext i1 %327 to i64
  %329 = add nuw nsw i64 %324, %328
  %330 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %313, i64 3
  %331 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %330, align 8
  %332 = icmp eq %"class.spvtools::opt::Instruction"* %240, %331
  %333 = zext i1 %332 to i64
  %334 = add nuw nsw i64 %329, %333
  %335 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %313, i64 4
  %336 = add i64 %315, -4
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %293, label %312

338:                                              ; preds = %309, %235
  %339 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %218, i64 1
  %340 = icmp eq %"class.spvtools::opt::Instruction"** %339, %176
  %341 = add i64 %217, 1
  br i1 %340, label %342, label %216

342:                                              ; preds = %189, %338, %197
  %343 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %0, i64 0, i32 2, i32 0, i32 0
  %344 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %343, align 8
  %345 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %0, i64 0, i32 2, i32 0, i32 1
  %346 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %345, align 8
  %347 = getelementptr inbounds %"struct.spvtools::opt::analysis::DecorationManager::TargetData", %"struct.spvtools::opt::analysis::DecorationManager::TargetData"* %1, i64 0, i32 2, i32 0, i32 0
  %348 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %347, align 8
  %349 = ptrtoint %"class.spvtools::opt::Instruction"** %344 to i64
  %350 = icmp eq %"class.spvtools::opt::Instruction"** %344, %346
  br i1 %350, label %367, label %351

351:                                              ; preds = %342
  %352 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %344, align 8
  %353 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %348, align 8
  %354 = icmp eq %"class.spvtools::opt::Instruction"* %352, %353
  br i1 %354, label %359, label %367

355:                                              ; preds = %359
  %356 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %362, align 8
  %357 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %363, align 8
  %358 = icmp eq %"class.spvtools::opt::Instruction"* %356, %357
  br i1 %358, label %359, label %365

359:                                              ; preds = %351, %355
  %360 = phi %"class.spvtools::opt::Instruction"** [ %362, %355 ], [ %344, %351 ]
  %361 = phi %"class.spvtools::opt::Instruction"** [ %363, %355 ], [ %348, %351 ]
  %362 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %360, i64 1
  %363 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %361, i64 1
  %364 = icmp eq %"class.spvtools::opt::Instruction"** %362, %346
  br i1 %364, label %512, label %355

365:                                              ; preds = %355
  %366 = ptrtoint %"class.spvtools::opt::Instruction"** %362 to i64
  br label %367

367:                                              ; preds = %365, %351, %342
  %368 = phi %"class.spvtools::opt::Instruction"** [ %344, %342 ], [ %344, %351 ], [ %362, %365 ]
  %369 = phi %"class.spvtools::opt::Instruction"** [ %348, %342 ], [ %348, %351 ], [ %363, %365 ]
  %370 = phi i64 [ %349, %342 ], [ %349, %351 ], [ %366, %365 ]
  %371 = ptrtoint %"class.spvtools::opt::Instruction"** %368 to i64
  %372 = icmp eq %"class.spvtools::opt::Instruction"** %368, %346
  br i1 %372, label %512, label %373

373:                                              ; preds = %367
  %374 = ptrtoint %"class.spvtools::opt::Instruction"** %346 to i64
  %375 = sub i64 %374, %370
  %376 = icmp eq i64 %375, 8
  br i1 %376, label %512, label %377

377:                                              ; preds = %373
  %378 = icmp eq i64 %375, 0
  %379 = add i64 %375, -8
  %380 = lshr i64 %379, 3
  %381 = add nuw nsw i64 %380, 1
  %382 = and i64 %381, 3
  %383 = icmp ult i64 %379, 24
  %384 = sub nsw i64 %381, %382
  %385 = icmp eq i64 %382, 0
  br label %386

386:                                              ; preds = %508, %377
  %387 = phi i64 [ %511, %508 ], [ 0, %377 ]
  %388 = phi %"class.spvtools::opt::Instruction"** [ %509, %508 ], [ %368, %377 ]
  %389 = sub i64 -2, %387
  %390 = getelementptr %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %346, i64 %389
  %391 = ptrtoint %"class.spvtools::opt::Instruction"** %390 to i64
  %392 = sub i64 %391, %371
  %393 = lshr i64 %392, 3
  %394 = add nuw nsw i64 %393, 1
  %395 = icmp eq %"class.spvtools::opt::Instruction"** %368, %388
  br i1 %395, label %405, label %396

396:                                              ; preds = %386
  %397 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %388, align 8
  br label %398

398:                                              ; preds = %402, %396
  %399 = phi %"class.spvtools::opt::Instruction"** [ %368, %396 ], [ %403, %402 ]
  %400 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %399, align 8
  %401 = icmp eq %"class.spvtools::opt::Instruction"* %400, %397
  br i1 %401, label %405, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %399, i64 1
  %404 = icmp eq %"class.spvtools::opt::Instruction"** %403, %388
  br i1 %404, label %408, label %398

405:                                              ; preds = %398, %386
  %406 = phi %"class.spvtools::opt::Instruction"** [ %368, %386 ], [ %399, %398 ]
  %407 = icmp eq %"class.spvtools::opt::Instruction"** %406, %388
  br i1 %407, label %408, label %508

408:                                              ; preds = %402, %405
  br i1 %378, label %512, label %409

409:                                              ; preds = %408
  %410 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %388, align 8
  br i1 %383, label %411, label %437

411:                                              ; preds = %437, %409
  %412 = phi i64 [ undef, %409 ], [ %459, %437 ]
  %413 = phi i64 [ 0, %409 ], [ %459, %437 ]
  %414 = phi %"class.spvtools::opt::Instruction"** [ %369, %409 ], [ %460, %437 ]
  br i1 %385, label %426, label %415

415:                                              ; preds = %411, %415
  %416 = phi i64 [ %422, %415 ], [ %413, %411 ]
  %417 = phi %"class.spvtools::opt::Instruction"** [ %423, %415 ], [ %414, %411 ]
  %418 = phi i64 [ %424, %415 ], [ %382, %411 ]
  %419 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %417, align 8
  %420 = icmp eq %"class.spvtools::opt::Instruction"* %410, %419
  %421 = zext i1 %420 to i64
  %422 = add nuw nsw i64 %416, %421
  %423 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %417, i64 1
  %424 = add i64 %418, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %415, !llvm.loop !45

426:                                              ; preds = %415, %411
  %427 = phi i64 [ %412, %411 ], [ %422, %415 ]
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %512, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %388, i64 1
  %431 = icmp eq %"class.spvtools::opt::Instruction"** %430, %346
  br i1 %431, label %479, label %432

432:                                              ; preds = %429
  %433 = and i64 %394, 3
  %434 = icmp ult i64 %392, 24
  br i1 %434, label %463, label %435

435:                                              ; preds = %432
  %436 = sub nsw i64 %394, %433
  br label %482

437:                                              ; preds = %409, %437
  %438 = phi i64 [ %459, %437 ], [ 0, %409 ]
  %439 = phi %"class.spvtools::opt::Instruction"** [ %460, %437 ], [ %369, %409 ]
  %440 = phi i64 [ %461, %437 ], [ %384, %409 ]
  %441 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %439, align 8
  %442 = icmp eq %"class.spvtools::opt::Instruction"* %410, %441
  %443 = zext i1 %442 to i64
  %444 = add nuw nsw i64 %438, %443
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %439, i64 1
  %446 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %445, align 8
  %447 = icmp eq %"class.spvtools::opt::Instruction"* %410, %446
  %448 = zext i1 %447 to i64
  %449 = add nuw nsw i64 %444, %448
  %450 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %439, i64 2
  %451 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %450, align 8
  %452 = icmp eq %"class.spvtools::opt::Instruction"* %410, %451
  %453 = zext i1 %452 to i64
  %454 = add nuw nsw i64 %449, %453
  %455 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %439, i64 3
  %456 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %455, align 8
  %457 = icmp eq %"class.spvtools::opt::Instruction"* %410, %456
  %458 = zext i1 %457 to i64
  %459 = add nuw nsw i64 %454, %458
  %460 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %439, i64 4
  %461 = add i64 %440, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %411, label %437

463:                                              ; preds = %482, %432
  %464 = phi i64 [ undef, %432 ], [ %504, %482 ]
  %465 = phi %"class.spvtools::opt::Instruction"** [ %430, %432 ], [ %505, %482 ]
  %466 = phi i64 [ 1, %432 ], [ %504, %482 ]
  %467 = icmp eq i64 %433, 0
  br i1 %467, label %479, label %468

468:                                              ; preds = %463, %468
  %469 = phi %"class.spvtools::opt::Instruction"** [ %476, %468 ], [ %465, %463 ]
  %470 = phi i64 [ %475, %468 ], [ %466, %463 ]
  %471 = phi i64 [ %477, %468 ], [ %433, %463 ]
  %472 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %469, align 8
  %473 = icmp eq %"class.spvtools::opt::Instruction"* %410, %472
  %474 = zext i1 %473 to i64
  %475 = add nuw nsw i64 %470, %474
  %476 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %469, i64 1
  %477 = add i64 %471, -1
  %478 = icmp eq i64 %477, 0
  br i1 %478, label %479, label %468, !llvm.loop !46

479:                                              ; preds = %463, %468, %429
  %480 = phi i64 [ 1, %429 ], [ %464, %463 ], [ %475, %468 ]
  %481 = icmp eq i64 %480, %427
  br i1 %481, label %508, label %512

482:                                              ; preds = %482, %435
  %483 = phi %"class.spvtools::opt::Instruction"** [ %430, %435 ], [ %505, %482 ]
  %484 = phi i64 [ 1, %435 ], [ %504, %482 ]
  %485 = phi i64 [ %436, %435 ], [ %506, %482 ]
  %486 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %483, align 8
  %487 = icmp eq %"class.spvtools::opt::Instruction"* %410, %486
  %488 = zext i1 %487 to i64
  %489 = add nuw nsw i64 %484, %488
  %490 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %483, i64 1
  %491 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %490, align 8
  %492 = icmp eq %"class.spvtools::opt::Instruction"* %410, %491
  %493 = zext i1 %492 to i64
  %494 = add nuw nsw i64 %489, %493
  %495 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %483, i64 2
  %496 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %495, align 8
  %497 = icmp eq %"class.spvtools::opt::Instruction"* %410, %496
  %498 = zext i1 %497 to i64
  %499 = add nuw nsw i64 %494, %498
  %500 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %483, i64 3
  %501 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %500, align 8
  %502 = icmp eq %"class.spvtools::opt::Instruction"* %410, %501
  %503 = zext i1 %502 to i64
  %504 = add nuw nsw i64 %499, %503
  %505 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %483, i64 4
  %506 = add i64 %485, -4
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %463, label %482

508:                                              ; preds = %479, %405
  %509 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %388, i64 1
  %510 = icmp eq %"class.spvtools::opt::Instruction"** %509, %346
  %511 = add i64 %387, 1
  br i1 %510, label %512, label %386

512:                                              ; preds = %68, %139, %86, %238, %309, %256, %359, %408, %479, %426, %508, %373, %203, %33, %367
  %513 = phi i1 [ true, %367 ], [ false, %33 ], [ false, %203 ], [ false, %373 ], [ false, %408 ], [ false, %479 ], [ false, %426 ], [ true, %508 ], [ true, %359 ], [ false, %256 ], [ false, %309 ], [ false, %238 ], [ false, %86 ], [ false, %139 ], [ false, %68 ]
  ret i1 %513
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE16__construct_nodeIJRPS3_EEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE16__construct_nodeIJRPS3_EEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE16__construct_nodeIJRPS3_EEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE16__construct_nodeIJRPS3_EEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEDpOT_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !11}
!23 = distinct !{!23, !20}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !20}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !11}
!32 = distinct !{!32, !20}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeINS_12basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!36 = distinct !{!36, !11}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjN8spvtools3opt8analysis17DecorationManager10TargetDataEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_"}
!40 = distinct !{!40, !11}
!41 = distinct !{!41, !11}
!42 = distinct !{!42, !11}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !11}
!45 = distinct !{!45, !11}
!46 = distinct !{!46, !11}
