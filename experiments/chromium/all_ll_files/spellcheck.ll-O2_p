; ModuleID = '../../components/spellcheck/renderer/spellcheck.cc'
source_filename = "../../components/spellcheck/renderer/spellcheck.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SpellCheck = type { %"class.spellcheck::mojom::SpellChecker", %"class.base::SupportsWeakPtr", %"class.std::__1::unique_ptr", %"class.mojo::ReceiverSetBase", %"class.std::__1::vector", %class.CustomDictionaryEngine, %"class.service_manager::LocalInterfaceProvider"*, i8, [7 x i8], %"class.base::ObserverList", %"class.base::WeakPtrFactory.49" }
%"class.spellcheck::mojom::SpellChecker" = type { i32 (...)** }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SpellCheck::SpellcheckRequest"* }
%"class.SpellCheck::SpellcheckRequest" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.9", %"class.base::TimeTicks" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::WebTextCheckingCompletion"* }
%"class.blink::WebTextCheckingCompletion" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.18", i64, %"class.std::__1::map", i8*, i64, %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.17", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.18" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.SpellcheckLanguage* }
%class.SpellcheckLanguage = type { %class.SpellcheckCharAttribute, %class.SpellcheckWordIterator, %class.SpellcheckWordIterator, %"class.std::__1::unique_ptr.115" }
%class.SpellcheckCharAttribute = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%class.SpellcheckWordIterator = type { i16*, %class.SpellcheckCharAttribute*, %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.base::i18n::BreakIterator"* }
%"class.base::i18n::BreakIterator" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.SpellingEngine* }
%class.SpellingEngine = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr.27"* }
%class.CustomDictionaryEngine = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.42", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.44" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.49" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.service_manager::LocalInterfaceProvider" = type opaque
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.51", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.52, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.54", [4 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.52 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.53" }>
%"class.base::RefCountedThreadSafe.53" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i32 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.spellcheck::mojom::SpellCheckerStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.189, %"class.std::__1::unique_ptr.304", %"class.base::WeakPtrFactory.351" }
%class.scoped_refptr.189 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.52, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.267", %"class.absl::optional.272", %"class.absl::optional.220", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.295", i8, [7 x i8], %class.scoped_refptr.52, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.190" }>
%"class.base::RefCountedThreadSafe.190" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string.61" }
%"class.std::__1::basic_string.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.64 }
%union.anon.64 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.203" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.203" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.52, %"class.std::__1::unique_ptr.204", %"class.absl::optional", %"struct.std::__1::atomic.216", i8, i8, i8, i8, i32, i32, %"class.absl::optional.220", %"class.std::__1::unique_ptr.225", i8, i64, %class.scoped_refptr.257, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.265", %"class.base::WeakPtrFactory.266" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.52, i8, %"class.mojo::ScopedHandleBase.207", %class.scoped_refptr.208, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.209", i8*, %"class.base::WeakPtrFactory.210" }
%"class.mojo::ScopedHandleBase.207" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.208 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.209" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.210" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.214 }
%union.anon.214 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.215", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.215" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i8 }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.228", i8, i64, %class.scoped_refptr.229, %class.scoped_refptr.253 }
%"class.base::RepeatingCallback.228" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.229 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.231", %"class.std::__1::map.242", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.230 }
%class.scoped_refptr.230 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.231" = type { %"class.std::__1::__tree.232" }
%"class.std::__1::__tree.232" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.242" = type { %"class.std::__1::__tree.243" }
%"class.std::__1::__tree.243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.scoped_refptr.253 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.257 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.258", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.260", %"struct.std::__1::atomic.260", %"struct.std::__1::atomic.260", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.258" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"struct.std::__1::atomic.260" = type { %"struct.std::__1::__atomic_base.261" }
%"struct.std::__1::__atomic_base.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__cxx_atomic_impl.263" }
%"struct.std::__1::__cxx_atomic_impl.263" = type { %"struct.std::__1::__cxx_atomic_base_impl.264" }
%"struct.std::__1::__cxx_atomic_base_impl.264" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.265" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.148 }
%class.scoped_refptr.148 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.266" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.267" = type { %"class.absl::optional_internal::optional_data.268" }
%"class.absl::optional_internal::optional_data.268" = type { %"class.absl::optional_internal::optional_data_base.269" }
%"class.absl::optional_internal::optional_data_base.269" = type { %"class.absl::optional_internal::optional_data_dtor_base.270" }
%"class.absl::optional_internal::optional_data_dtor_base.270" = type { i8, %union.anon.271 }
%union.anon.271 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.272" = type { %"class.absl::optional_internal::optional_data.273" }
%"class.absl::optional_internal::optional_data.273" = type { %"class.absl::optional_internal::optional_data_base.274" }
%"class.absl::optional_internal::optional_data_base.274" = type { %"class.absl::optional_internal::optional_data_dtor_base.275" }
%"class.absl::optional_internal::optional_data_dtor_base.275" = type { i8, [7 x i8], %union.anon.276 }
%union.anon.276 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.220" = type { %"class.absl::optional_internal::optional_data.221" }
%"class.absl::optional_internal::optional_data.221" = type { %"class.absl::optional_internal::optional_data_base.222" }
%"class.absl::optional_internal::optional_data_base.222" = type { %"class.absl::optional_internal::optional_data_dtor_base.223" }
%"class.absl::optional_internal::optional_data_dtor_base.223" = type { i8, %union.anon.224 }
%union.anon.224 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string.61", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.281 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.281 = type { %"class.std::__1::map.283" }
%"class.std::__1::map.283" = type { %"class.std::__1::__tree.284" }
%"class.std::__1::__tree.284" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.294"*, i64 }
%"class.std::__1::unique_ptr.294" = type opaque
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.307", %"class.absl::optional.308", %"class.absl::optional.313", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.320", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.328", %"class.std::__1::map.337", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.346", i8, %class.scoped_refptr.52, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.347" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.307" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.52, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.318" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.318" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.319 }
%class.scoped_refptr.319 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.323", %class.scoped_refptr.324 }
%"class.base::RepeatingCallback.323" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.324 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.190", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.328" = type { %"class.std::__1::__tree.329" }
%"class.std::__1::__tree.329" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.330", %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.337" = type { %"class.std::__1::__tree.338" }
%"class.std::__1::__tree.338" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::OnceCallback.346" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.347" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.351" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.spellcheck::mojom::SpellCheckerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.spellcheck::mojom::SpellChecker"* }
%"class.mojo::ReceiverSetState::ReceiverState" = type { i32 (...)** }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.83" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.spellcheck::mojom::SpellCheckBDictLanguage"* }
%"class.spellcheck::mojom::SpellCheckBDictLanguage" = type { %"class.base::File", %"class.std::__1::basic_string.61" }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.61" }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.mojo::StructPtr"* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.std::__1::basic_string.61"*, %"class.std::__1::basic_string.61"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::basic_string.61"* }
%"class.std::__1::set.88" = type { %"class.std::__1::__tree.89" }
%"class.std::__1::__tree.89" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.(anonymous namespace)::UpdateSpellcheckEnabled" = type <{ %"class.content::RenderFrameVisitor", i8, [7 x i8] }>
%"class.content::RenderFrameVisitor" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string.61" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.147 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.53", [4 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr.101 }
%class.scoped_refptr.101 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.blink::WebVector" = type { %"class.std::__1::vector.99" }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::WebString"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.65 }
%struct.anon.65 = type { i8 }
%"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%class.DictionaryUpdateObserver = type { i32 (...)** }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::vector.126"* }
%"class.std::__1::allocator.136" = type { i8 }
%"class.blink::WebVector.139" = type { %"class.std::__1::vector.140" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"*, %"class.std::__1::__compressed_pair.142" }
%"struct.blink::WebTextCheckingResult" = type { i32, i32, i32, %"class.blink::WebVector" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.blink::WebTextCheckingResult"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %struct.SpellCheckResult*, %struct.SpellCheckResult*, %"class.std::__1::__compressed_pair.151" }
%struct.SpellCheckResult = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.126", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %struct.SpellCheckResult* }
%"class.std::__1::allocator" = type { i8 }
%class.anon.160 = type { %"class.std::__1::basic_string" }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.161", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry" = type <{ %"class.mojo::ReceiverSetState::ReceiverState", %"class.mojo::Receiver", i8, [7 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.355", %"class.mojo::internal::Buffer", %"class.std::__1::vector.356", %"class.std::__1::vector.364", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.355" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { %"class.mojo::ScopedHandleBase.358"*, %"class.mojo::ScopedHandleBase.358"*, %"class.std::__1::__compressed_pair.359" }
%"class.mojo::ScopedHandleBase.358" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.mojo::ScopedHandleBase.358"* }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.61", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN7content18RenderFrameVisitorD2Ev = comdat any

$_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN4mojo8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS3_EEEC2EPS3_NS_15PendingReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD2Ev = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD0Ev = comdat any

$_ZNK4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry10GetContextEv = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry20InstallDispatchHooksENSt3__110unique_ptrINS_13MessageFilterENSA_14default_deleteISC_EEEEN4base17RepeatingCallbackIFvjRKNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry15FlushForTestingEv = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEED0Ev = comdat any

$_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEE6AcceptEPNS2_7MessageE = comdat any

$_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE = comdat any

$_ZN4mojo8internal12BindingStateIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI18SpellcheckLanguageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorINS0_INS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEENS4_IS8_EEE21__push_back_slow_pathIRKS8_EEvOT_ = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEENS1_IS7_EEEEEEE9constructIS9_JRKS9_EvEEvRSA_PT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM10SpellCheckFvPNS2_17SpellcheckRequestEEJNS_7WeakPtrIS2_EENS0_12OwnedWrapperIS3_NSt3__114default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE = comdat any

$_ZTVN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEEE = comdat any

@_ZTV10SpellCheck = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SpellCheck*)* @_ZN10SpellCheckD2Ev to i8*), i8* bitcast (void (%class.SpellCheck*)* @_ZN10SpellCheckD0Ev to i8*), i8* bitcast (void (%class.SpellCheck*, %"class.std::__1::vector.75"*, %"class.std::__1::vector.59"*, i1)* @_ZN10SpellCheck10InitializeENSt3__16vectorIN4mojo9StructPtrIN10spellcheck5mojom23SpellCheckBDictLanguageEEENS0_9allocatorIS7_EEEERKNS1_INS0_12basic_stringIcNS0_11char_traitsIcEENS8_IcEEEENS8_ISF_EEEEb to i8*), i8* bitcast (void (%class.SpellCheck*, %"class.std::__1::vector.59"*, %"class.std::__1::vector.59"*)* @_ZN10SpellCheck23CustomDictionaryChangedERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEESB_ to i8*), i8* bitcast (i64 (%class.SpellCheck*)* @_ZN10SpellCheck13LanguageCountEv to i8*), i8* bitcast (i64 (%class.SpellCheck*)* @_ZN10SpellCheck20EnabledLanguageCountEv to i8*)] }, align 8
@.str = private unnamed_addr constant [26 x i8] c"PostDelayedSpellCheckTask\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"../../components/spellcheck/renderer/spellcheck.cc\00", align 1
@_ZTVN12_GLOBAL__N_123UpdateSpellcheckEnabledE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.(anonymous namespace)::UpdateSpellcheckEnabled"*, %"class.content::RenderFrame"*)* @_ZN12_GLOBAL__N_123UpdateSpellcheckEnabled5VisitEPN7content11RenderFrameE to i8*), i8* bitcast (void (%"class.content::RenderFrameVisitor"*)* @_ZN7content18RenderFrameVisitorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::UpdateSpellcheckEnabled"*)* @_ZN12_GLOBAL__N_123UpdateSpellcheckEnabledD0Ev to i8*)] }, align 8
@_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD2Ev to i8*), i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD0Ev to i8*), i8* bitcast (i8* (%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*)* @_ZNK4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry10GetContextEv to i8*), i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*, %"class.mojo::MessageFilter"*, %"class.base::RepeatingCallback.18"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry20InstallDispatchHooksENSt3__110unique_ptrINS_13MessageFilterENSA_14default_deleteISC_EEEEN4base17RepeatingCallbackIFvjRKNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE to i8*), i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry15FlushForTestingEv to i8*)] }, comdat, align 8
@_ZTVN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.spellcheck::mojom::SpellCheckerStub"*)* @_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.spellcheck::mojom::SpellCheckerStub"*, %"class.mojo::Message"*)* @_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEE6AcceptEPNS2_7MessageE to i8*), i8* bitcast (i1 (%"class.spellcheck::mojom::SpellCheckerStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE to i8*)] }, comdat, align 8
@_ZN10spellcheck5mojom12SpellChecker5Name_E = external constant [0 x i8], align 1
@_ZTVN10spellcheck5mojom28SpellCheckerRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN10SpellCheckC1EPN15service_manager22LocalInterfaceProviderE = hidden unnamed_addr alias void (%class.SpellCheck*, %"class.service_manager::LocalInterfaceProvider"*), void (%class.SpellCheck*, %"class.service_manager::LocalInterfaceProvider"*)* @_ZN10SpellCheckC2EPN15service_manager22LocalInterfaceProviderE
@_ZN10SpellCheckD1Ev = hidden unnamed_addr alias void (%class.SpellCheck*), void (%class.SpellCheck*)* @_ZN10SpellCheckD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheckC2EPN15service_manager22LocalInterfaceProviderE(%class.SpellCheck*, %"class.service_manager::LocalInterfaceProvider"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"* %3) #12
  %4 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV10SpellCheck, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo16ReceiverSetStateC1Ev(%"class.mojo::ReceiverSetState"* %7) #12
  %8 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 5
  tail call void @_ZN22CustomDictionaryEngineC1Ev(%class.CustomDictionaryEngine* %10) #12
  %11 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 6
  store %"class.service_manager::LocalInterfaceProvider"* %1, %"class.service_manager::LocalInterfaceProvider"** %11, align 8
  %12 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 7
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9
  %14 = bitcast %"class.base::ObserverList"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #12
  %15 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15) #12
  %16 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 2
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 3
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 10, i32 0
  %19 = ptrtoint %class.SpellCheck* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %18, i64 %19) #12
  ret void
}

declare void @_ZN22CustomDictionaryEngineC1Ev(%class.CustomDictionaryEngine*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheckD2Ev(%class.SpellCheck*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV10SpellCheck, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 1, i32 0, i32 0, i32 1
  %5 = bitcast %"class.base::internal::LinkNodeBase"** %4 to %"class.base::LinkNode"**
  %6 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 1, i32 0
  %7 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  %8 = icmp eq %"class.base::LinkNode"* %7, %6
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"class.base::LinkNode"* [ %19, %18 ], [ %7, %1 ]
  %11 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %10, i64 1
  %12 = bitcast %"class.base::LinkNode"* %11 to %"class.base::ObserverList"**
  %13 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %12, align 8
  %14 = icmp eq %"class.base::ObserverList"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %12, align 8
  %16 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %16) #12
  %17 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %5, align 8
  br label %18

18:                                               ; preds = %15, %9
  %19 = phi %"class.base::LinkNode"* [ %10, %9 ], [ %17, %15 ]
  %20 = icmp eq %"class.base::LinkNode"* %19, %6
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %23 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %22, align 8
  %24 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %23 to i64
  %27 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %28 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 5
  tail call void @_ZN22CustomDictionaryEngineD1Ev(%class.CustomDictionaryEngine* %31) #12
  %32 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.27"* %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::unique_ptr.27"* %34 to i8*
  %38 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %39 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %38, align 8
  %40 = icmp eq %"class.std::__1::unique_ptr.27"* %39, %34
  br i1 %40, label %54, label %41

41:                                               ; preds = %36, %49
  %42 = phi %"class.std::__1::unique_ptr.27"* [ %43, %49 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %42, i64 -1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %44, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %44, align 8
  %46 = icmp eq %class.SpellcheckLanguage* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  tail call void @_ZN18SpellcheckLanguageD1Ev(%class.SpellcheckLanguage* nonnull %45) #12
  %48 = bitcast %class.SpellcheckLanguage* %45 to i8*
  tail call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %47, %41
  %50 = icmp eq %"class.std::__1::unique_ptr.27"* %43, %34
  br i1 %50, label %51, label %41

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::vector"* %32 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %36
  %55 = phi i8* [ %53, %51 ], [ %37, %36 ]
  store %"class.std::__1::unique_ptr.27"* %34, %"class.std::__1::unique_ptr.27"** %38, align 8
  tail call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %30, %54
  %57 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4mojo16ReceiverSetStateD1Ev(%"class.mojo::ReceiverSetState"* %57) #12
  %58 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load %"class.SpellCheck::SpellcheckRequest"*, %"class.SpellCheck::SpellcheckRequest"** %58, align 8
  store %"class.SpellCheck::SpellcheckRequest"* null, %"class.SpellCheck::SpellcheckRequest"** %58, align 8
  %60 = icmp eq %"class.SpellCheck::SpellcheckRequest"* %59, null
  br i1 %60, label %80, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %59, i64 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %62, align 8
  store %"class.blink::WebTextCheckingCompletion"* null, %"class.blink::WebTextCheckingCompletion"** %62, align 8
  %64 = icmp eq %"class.blink::WebTextCheckingCompletion"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.blink::WebTextCheckingCompletion"* %63 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %67 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %67, i64 3
  %69 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %68, align 8
  tail call void %69(%"class.blink::WebTextCheckingCompletion"* nonnull %63) #12
  br label %70

70:                                               ; preds = %65, %61
  %71 = bitcast %"class.SpellCheck::SpellcheckRequest"* %59 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %71, i64 0, i32 1, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = bitcast %"class.SpellCheck::SpellcheckRequest"* %59 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %75, %70
  %79 = bitcast %"class.SpellCheck::SpellcheckRequest"* %59 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %56, %78
  %81 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"* %81) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22CustomDictionaryEngineD1Ev(%class.CustomDictionaryEngine*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheckD0Ev(%class.SpellCheck*) unnamed_addr #0 align 2 {
  tail call void @_ZN10SpellCheckD2Ev(%class.SpellCheck* %0) #12
  %2 = bitcast %class.SpellCheck* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck12BindReceiverEN4mojo15PendingReceiverIN10spellcheck5mojom12SpellCheckerEEE(%class.SpellCheck*, %"class.mojo::PendingReceiver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver", align 8
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = alloca %"class.mojo::PendingReceiver", align 8
  %7 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %8, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %9) #12
  %10 = bitcast %"class.mojo::PendingReceiver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %8) #12
  %12 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 3, i32 0
  %13 = bitcast %"class.mojo::PendingReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = call i8* @_Znwm(i64 64) #13
  %15 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %15, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %11) #12
  %16 = bitcast %"class.mojo::PendingReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 8
  %19 = bitcast i8* %18 to %"class.mojo::Receiver"*
  %20 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %20, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %15) #12
  call void @_ZN4mojo8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS3_EEEC2EPS3_NS_15PendingReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Receiver"* %19, %"class.spellcheck::mojom::SpellChecker"* %7, %"class.mojo::PendingReceiver"* nonnull %3, %"class.base::SequencedTaskRunner"* null) #12
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %20) #12
  %21 = getelementptr inbounds i8, i8* %14, i64 56
  store i8 0, i8* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  %22 = bitcast i8* %14 to %"class.mojo::ReceiverSetState::ReceiverState"*
  %23 = call i64 @_ZN4mojo16ReceiverSetState3AddENSt3__110unique_ptrINS0_13ReceiverStateENS1_14default_deleteIS3_EEEE(%"class.mojo::ReceiverSetState"* %12, %"class.mojo::ReceiverSetState::ReceiverState"* nonnull %22) #12
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck10InitializeENSt3__16vectorIN4mojo9StructPtrIN10spellcheck5mojom23SpellCheckBDictLanguageEEENS0_9allocatorIS7_EEEERKNS1_INS0_12basic_stringIcNS0_11char_traitsIcEENS8_IcEEEENS8_ISF_EEEEb(%class.SpellCheck*, %"class.std::__1::vector.75"* nocapture readonly, %"class.std::__1::vector.59"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::File", align 8
  %6 = alloca %"class.std::__1::set.88", align 8
  %7 = alloca %"class.(anonymous namespace)::UpdateSpellcheckEnabled", align 8
  %8 = zext i1 %3 to i8
  %9 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %9, align 8
  %11 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.27"* %12, %10
  br i1 %13, label %24, label %14

14:                                               ; preds = %4, %22
  %15 = phi %"class.std::__1::unique_ptr.27"* [ %16, %22 ], [ %12, %4 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %15, i64 -1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %17, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %17, align 8
  %19 = icmp eq %class.SpellcheckLanguage* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  tail call void @_ZN18SpellcheckLanguageD1Ev(%class.SpellcheckLanguage* nonnull %18) #12
  %21 = bitcast %class.SpellcheckLanguage* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %20, %14
  %23 = icmp eq %"class.std::__1::unique_ptr.27"* %16, %10
  br i1 %23, label %24, label %14

24:                                               ; preds = %22, %4
  store %"class.std::__1::unique_ptr.27"* %10, %"class.std::__1::unique_ptr.27"** %11, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %1, i64 0, i32 0, i32 0
  %26 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %1, i64 0, i32 0, i32 1
  %28 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %27, align 8
  %29 = icmp eq %"class.mojo::StructPtr"* %26, %28
  br i1 %29, label %30, label %52

30:                                               ; preds = %52, %24
  %31 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 5
  %32 = bitcast %"class.std::__1::set.88"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %2, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::basic_string.61"*, %"class.std::__1::basic_string.61"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %2, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::basic_string.61"*, %"class.std::__1::basic_string.61"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %6, i64 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %6, i64 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_node_base"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::basic_string.61"* %34, %36
  br i1 %42, label %48, label %43

43:                                               ; preds = %30, %43
  %44 = phi %"class.std::__1::basic_string.61"* [ %46, %43 ], [ %34, %30 ]
  %45 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_(%"class.std::__1::__tree.89"* nonnull %37, %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::basic_string.61"* dereferenceable(24) %44, %"class.std::__1::basic_string.61"* dereferenceable(24) %44) #12
  %46 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %44, i64 1
  %47 = icmp eq %"class.std::__1::basic_string.61"* %46, %36
  br i1 %47, label %48, label %43

48:                                               ; preds = %43, %30
  call void @_ZN22CustomDictionaryEngine4InitERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEE(%class.CustomDictionaryEngine* %31, %"class.std::__1::set.88"* nonnull dereferenceable(24) %6) #12
  %49 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.89"* nonnull %37, %"class.std::__1::__tree_node"* %50) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  %51 = call zeroext i1 @_ZN10spellcheck22UseBrowserSpellCheckerEv() #12
  br i1 %51, label %64, label %61

52:                                               ; preds = %24, %52
  %53 = phi %"class.mojo::StructPtr"* [ %59, %52 ], [ %26, %24 ]
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"class.spellcheck::mojom::SpellCheckBDictLanguage"*, %"class.spellcheck::mojom::SpellCheckBDictLanguage"** %54, align 8
  %56 = getelementptr inbounds %"class.spellcheck::mojom::SpellCheckBDictLanguage", %"class.spellcheck::mojom::SpellCheckBDictLanguage"* %55, i64 0, i32 0
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %5, %"class.base::File"* dereferenceable(56) %56) #12
  %57 = load %"class.spellcheck::mojom::SpellCheckBDictLanguage"*, %"class.spellcheck::mojom::SpellCheckBDictLanguage"** %54, align 8
  %58 = getelementptr inbounds %"class.spellcheck::mojom::SpellCheckBDictLanguage", %"class.spellcheck::mojom::SpellCheckBDictLanguage"* %57, i64 0, i32 1
  call void @_ZN10SpellCheck21AddSpellcheckLanguageEN4base4FileERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%class.SpellCheck* %0, %"class.base::File"* nonnull %5, %"class.std::__1::basic_string.61"* dereferenceable(24) %58)
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %5) #12
  %59 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %53, i64 1
  %60 = icmp eq %"class.mojo::StructPtr"* %59, %28
  br i1 %60, label %30, label %52

61:                                               ; preds = %48
  %62 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %63 = load %"class.SpellCheck::SpellcheckRequest"*, %"class.SpellCheck::SpellcheckRequest"** %62, align 8
  store %"class.SpellCheck::SpellcheckRequest"* null, %"class.SpellCheck::SpellcheckRequest"** %62, align 8
  call void @_ZN10SpellCheck25PostDelayedSpellCheckTaskEPNS_17SpellcheckRequestE(%class.SpellCheck* %0, %"class.SpellCheck::SpellcheckRequest"* %63)
  br label %64

64:                                               ; preds = %61, %48
  %65 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 7
  store i8 %8, i8* %65, align 8
  %66 = bitcast %"class.(anonymous namespace)::UpdateSpellcheckEnabled"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #12
  %67 = getelementptr inbounds %"class.(anonymous namespace)::UpdateSpellcheckEnabled", %"class.(anonymous namespace)::UpdateSpellcheckEnabled"* %7, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.(anonymous namespace)::UpdateSpellcheckEnabled", %"class.(anonymous namespace)::UpdateSpellcheckEnabled"* %7, i64 0, i32 1
  %69 = bitcast %"class.(anonymous namespace)::UpdateSpellcheckEnabled"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_123UpdateSpellcheckEnabledE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  store i8 %8, i8* %68, align 8
  %70 = getelementptr inbounds %"class.(anonymous namespace)::UpdateSpellcheckEnabled", %"class.(anonymous namespace)::UpdateSpellcheckEnabled"* %7, i64 0, i32 0
  call void @_ZN7content11RenderFrame7ForEachEPNS_18RenderFrameVisitorE(%"class.content::RenderFrameVisitor"* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck21AddSpellcheckLanguageEN4base4FileERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%class.SpellCheck*, %"class.base::File"*, %"class.std::__1::basic_string.61"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.27", align 8
  %5 = alloca %"class.base::File", align 8
  %6 = bitcast %"class.std::__1::unique_ptr.27"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 6
  %8 = tail call i8* @_Znwm(i64 112) #13
  %9 = bitcast i8* %8 to %class.SpellcheckLanguage*
  %10 = load %"class.service_manager::LocalInterfaceProvider"*, %"class.service_manager::LocalInterfaceProvider"** %7, align 8
  tail call void @_ZN18SpellcheckLanguageC1EPN15service_manager22LocalInterfaceProviderE(%class.SpellcheckLanguage* nonnull %9, %"class.service_manager::LocalInterfaceProvider"* %10) #12
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::unique_ptr.27"* %4 to i8**
  store i8* %8, i8** %12, align 8
  %13 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %13, align 8
  %15 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %15, align 8
  %17 = icmp ult %"class.std::__1::unique_ptr.27"* %14, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = ptrtoint i8* %8 to i64
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %11, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.27"* %14 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %14, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.27"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.27"** %13 to i64*
  store i64 %22, i64* %23, align 8
  br label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorINS_10unique_ptrI18SpellcheckLanguageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %25, %"class.std::__1::unique_ptr.27"* nonnull dereferenceable(8) %4) #12
  br label %26

26:                                               ; preds = %18, %24
  %27 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %11, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %11, align 8
  %28 = icmp eq %class.SpellcheckLanguage* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  call void @_ZN18SpellcheckLanguageD1Ev(%class.SpellcheckLanguage* nonnull %27) #12
  %30 = bitcast %class.SpellcheckLanguage* %27 to i8*
  call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %32 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %13, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %32, i64 -1, i32 0, i32 0, i32 0
  %34 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %33, align 8
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %5, %"class.base::File"* dereferenceable(56) %1) #12
  call void @_ZN18SpellcheckLanguage4InitEN4base4FileERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%class.SpellcheckLanguage* %34, %"class.base::File"* nonnull %5, %"class.std::__1::basic_string.61"* dereferenceable(24) %2) #12
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %5) #12
  ret void
}

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN22CustomDictionaryEngine4InitERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEE(%class.CustomDictionaryEngine*, %"class.std::__1::set.88"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN10spellcheck22UseBrowserSpellCheckerEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck25PostDelayedSpellCheckTaskEPNS_17SpellcheckRequestE(%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = icmp eq %"class.SpellCheck::SpellcheckRequest"* %1, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %2
  %9 = tail call dereferenceable(8) %class.scoped_refptr.147* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #12
  %10 = bitcast %class.scoped_refptr.147* %9 to %"class.base::TaskRunner"**
  %11 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %10, align 8
  %12 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 453) #12
  %13 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 1
  %15 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12, !noalias !2
  %16 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %14, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %16) #12, !noalias !2
  %17 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %14, i64 -1
  %18 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  %19 = ptrtoint %"class.base::SupportsWeakPtr"* %17 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %18, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %19) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12, !noalias !2
  %20 = ptrtoint %"class.SpellCheck::SpellcheckRequest"* %1 to i64
  %21 = call i8* @_Znwm(i64 72) #13, !noalias !5
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM10SpellCheckFvPNS2_17SpellcheckRequestEEJNS_7WeakPtrIS2_EENS0_12OwnedWrapperIS3_NSt3__114default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #12, !noalias !5
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"*)* @_ZN10SpellCheck17PerformSpellCheckEPNS_17SpellcheckRequestE to i64), i64 0>, <2 x i64>* %24, align 8, !noalias !5
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to %"class.base::internal::WeakReference"*
  %27 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %26, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %27) #12, !noalias !5
  %28 = getelementptr inbounds i8, i8* %21, i64 56
  %29 = bitcast i8* %28 to i64*
  %30 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !5
  store i64 %31, i64* %29, align 8, !noalias !5
  %32 = getelementptr inbounds i8, i8* %21, i64 64
  %33 = bitcast i8* %32 to i64*
  store i64 %20, i64* %33, align 8, !noalias !5
  %34 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %21, i8** %34, align 8, !alias.scope !5
  %35 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %11, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #12
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #12
  br label %37

37:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN7content11RenderFrame7ForEachEPNS_18RenderFrameVisitorE(%"class.content::RenderFrameVisitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck23CustomDictionaryChangedERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEESB_(%class.SpellCheck*, %"class.std::__1::vector.59"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.59"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.std::__1::set.88", align 8
  %6 = alloca %"class.blink::WebVector", align 8
  %7 = alloca %"class.std::__1::set.88", align 8
  %8 = bitcast %"class.std::__1::set.88"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string.61"*, %"class.std::__1::basic_string.61"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %1, i64 0, i32 0, i32 1
  %15 = load %"class.std::__1::basic_string.61"*, %"class.std::__1::basic_string.61"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %9, align 8
  %19 = icmp eq %"class.std::__1::basic_string.61"* %13, %15
  br i1 %19, label %27, label %20

20:                                               ; preds = %3, %20
  %21 = phi %"class.std::__1::basic_string.61"* [ %23, %20 ], [ %13, %3 ]
  %22 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_(%"class.std::__1::__tree.89"* nonnull %16, %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::basic_string.61"* dereferenceable(24) %21, %"class.std::__1::basic_string.61"* dereferenceable(24) %21) #12
  %23 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %21, i64 1
  %24 = icmp eq %"class.std::__1::basic_string.61"* %23, %15
  br i1 %24, label %25, label %20

25:                                               ; preds = %20
  %26 = load i64, i64* %11, align 8, !noalias !10
  br label %27

27:                                               ; preds = %25, %3
  %28 = phi i64 [ %26, %25 ], [ 0, %3 ]
  %29 = bitcast %"class.blink::WebVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #12, !alias.scope !10
  %33 = icmp eq i64 %28, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %27
  %35 = icmp ugt i64 %28, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.blink::WebVector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #14
  unreachable

38:                                               ; preds = %34
  %39 = shl i64 %28, 3
  %40 = call i8* @_Znwm(i64 %39) #13
  %41 = bitcast i8* %40 to %"class.blink::WebString"*
  %42 = bitcast %"class.blink::WebString"** %31 to i8**
  store i8* %40, i8** %42, align 8, !alias.scope !10
  %43 = bitcast %"class.blink::WebVector"* %6 to i8**
  store i8* %40, i8** %43, align 8, !alias.scope !10
  %44 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %41, i64 %28
  store %"class.blink::WebString"* %44, %"class.blink::WebString"** %32, align 8, !alias.scope !10
  br label %45

45:                                               ; preds = %45, %38
  %46 = phi %"class.blink::WebString"* [ %47, %45 ], [ %41, %38 ]
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %46) #12
  %47 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %46, i64 1
  %48 = icmp eq %"class.blink::WebString"* %47, %44
  br i1 %48, label %49, label %45

49:                                               ; preds = %45
  %50 = bitcast %"class.blink::WebString"** %31 to i64*
  %51 = ptrtoint %"class.blink::WebString"* %44 to i64
  store i64 %51, i64* %50, align 8, !alias.scope !10
  br label %52

52:                                               ; preds = %49, %27
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8, !noalias !10
  %54 = icmp eq %"class.std::__1::__tree_end_node"* %53, %17
  br i1 %54, label %107, label %55

55:                                               ; preds = %52
  %56 = load %"class.blink::WebString"*, %"class.blink::WebString"** %30, align 8, !alias.scope !10
  %57 = bitcast %"class.blink::WebString"* %4 to i8*
  br label %58

58:                                               ; preds = %103, %55
  %59 = phi %"class.blink::WebString"* [ %56, %55 ], [ %105, %103 ]
  %60 = phi %"class.std::__1::__tree_end_node"* [ %53, %55 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12, !noalias !10
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 4
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1, !noalias !13
  %65 = icmp slt i8 %64, 0
  %66 = bitcast %"class.std::__1::__tree_end_node"* %61 to i8**
  %67 = load i8*, i8** %66, align 8, !noalias !13
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 5
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !13
  %71 = bitcast %"class.std::__1::__tree_end_node"* %61 to i8*
  %72 = zext i8 %64 to i64
  %73 = select i1 %65, i8* %67, i8* %71
  %74 = select i1 %65, i64 %70, i64 %72
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %4, i8* %73, i64 %74) #12
  %75 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* %59, %"class.blink::WebString"* nonnull dereferenceable(8) %4) #12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12, !noalias !10
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 1, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %87

79:                                               ; preds = %58
  %80 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_end_node"**
  %83 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, %80
  br i1 %86, label %103, label %94

87:                                               ; preds = %58, %87
  %88 = phi %"class.std::__1::__tree_node_base"* [ %90, %87 ], [ %77, %58 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %87

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %88, i64 0, i32 0
  br label %103

94:                                               ; preds = %79, %94
  %95 = phi %"class.std::__1::__tree_end_node"** [ %98, %94 ], [ %82, %79 ]
  %96 = bitcast %"class.std::__1::__tree_end_node"** %95 to %"class.std::__1::__tree_node_base"**
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 2
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, %97
  br i1 %102, label %103, label %94

103:                                              ; preds = %94, %92, %79
  %104 = phi %"class.std::__1::__tree_end_node"* [ %93, %92 ], [ %83, %79 ], [ %99, %94 ]
  %105 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %59, i64 1
  %106 = icmp eq %"class.std::__1::__tree_end_node"* %104, %17
  br i1 %106, label %107, label %58

107:                                              ; preds = %103, %52
  call void @_ZN10SpellCheck25NotifyDictionaryObserversERKN5blink9WebVectorINS0_9WebStringEEE(%class.SpellCheck* %0, %"class.blink::WebVector"* nonnull dereferenceable(24) %6)
  %108 = load %"class.blink::WebString"*, %"class.blink::WebString"** %30, align 8
  %109 = icmp eq %"class.blink::WebString"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.blink::WebString"* %108 to i8*
  %112 = load %"class.blink::WebString"*, %"class.blink::WebString"** %31, align 8
  %113 = icmp eq %"class.blink::WebString"* %112, %108
  br i1 %113, label %121, label %114

114:                                              ; preds = %110, %114
  %115 = phi %"class.blink::WebString"* [ %116, %114 ], [ %112, %110 ]
  %116 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %115, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %116) #12
  %117 = icmp eq %"class.blink::WebString"* %116, %108
  br i1 %117, label %118, label %114

118:                                              ; preds = %114
  %119 = bitcast %"class.blink::WebVector"* %6 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %110
  %122 = phi i8* [ %120, %118 ], [ %111, %110 ]
  store %"class.blink::WebString"* %108, %"class.blink::WebString"** %31, align 8
  call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %107, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  %124 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 5
  %125 = bitcast %"class.std::__1::set.88"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #12
  %126 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %2, i64 0, i32 0, i32 0
  %127 = load %"class.std::__1::basic_string.61"*, %"class.std::__1::basic_string.61"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %2, i64 0, i32 0, i32 1
  %129 = load %"class.std::__1::basic_string.61"*, %"class.std::__1::basic_string.61"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %7, i64 0, i32 0
  %131 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %133 = getelementptr inbounds %"class.std::__1::set.88", %"class.std::__1::set.88"* %7, i64 0, i32 0, i32 0
  %134 = bitcast %"class.std::__1::__tree_node_base"** %131 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %132, %"class.std::__1::__tree_end_node"** %133, align 8
  %135 = icmp eq %"class.std::__1::basic_string.61"* %127, %129
  br i1 %135, label %141, label %136

136:                                              ; preds = %123, %136
  %137 = phi %"class.std::__1::basic_string.61"* [ %139, %136 ], [ %127, %123 ]
  %138 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_(%"class.std::__1::__tree.89"* nonnull %130, %"class.std::__1::__tree_end_node"* %132, %"class.std::__1::basic_string.61"* dereferenceable(24) %137, %"class.std::__1::basic_string.61"* dereferenceable(24) %137) #12
  %139 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %137, i64 1
  %140 = icmp eq %"class.std::__1::basic_string.61"* %139, %129
  br i1 %140, label %141, label %136

141:                                              ; preds = %136, %123
  call void @_ZN22CustomDictionaryEngine25OnCustomDictionaryChangedERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEESD_(%class.CustomDictionaryEngine* %124, %"class.std::__1::set.88"* nonnull dereferenceable(24) %5, %"class.std::__1::set.88"* nonnull dereferenceable(24) %7) #12
  %142 = bitcast %"class.std::__1::__tree_end_node"* %132 to %"class.std::__1::__tree_node"**
  %143 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %142, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.89"* nonnull %130, %"class.std::__1::__tree_node"* %143) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #12
  %144 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %145 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %144, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.89"* nonnull %16, %"class.std::__1::__tree_node"* %145) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck25NotifyDictionaryObserversERKN5blink9WebVectorINS0_9WebStringEEE(%class.SpellCheck*, %"class.blink::WebVector"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9
  %6 = bitcast %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !18
  %13 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !18
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #12
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12, !alias.scope !18
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8
  %20 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #12
  store i64 0, i64* %8, align 8
  %21 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %54, %50, %44, %31, %17
  %60 = bitcast %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<DictionaryUpdateObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #12
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #12, !alias.scope !21
  %67 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %68

68:                                               ; preds = %308, %59
  %69 = phi %"class.base::ObserverList"* [ %67, %59 ], [ %306, %308 ]
  %70 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::ObserverList"* %69 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = ashr exact i64 %78, 3
  %80 = load i64, i64* %9, align 8
  %81 = icmp ult i64 %79, %80
  %82 = select i1 %81, i64 %79, i64 %80
  %83 = icmp eq i64 %72, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %71
  %85 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %102

86:                                               ; preds = %71, %68
  %87 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %88 = icmp eq %"class.base::ObserverList"* %87, null
  br i1 %88, label %202, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %62, align 8
  %91 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %87, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::ObserverList"* %87 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = ashr exact i64 %96, 3
  %98 = load i64, i64* %63, align 8
  %99 = icmp ult i64 %97, %98
  %100 = select i1 %99, i64 %97, i64 %98
  %101 = icmp eq i64 %90, %100
  br i1 %101, label %111, label %102

102:                                              ; preds = %89, %84
  %103 = phi %"class.base::ObserverList"* [ %85, %84 ], [ %87, %89 ]
  %104 = icmp eq %"class.base::ObserverList"* %69, %103
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %62, align 8
  %107 = icmp eq i64 %105, %106
  %108 = and i1 %104, %107
  br i1 %108, label %109, label %296

109:                                              ; preds = %102
  %110 = icmp eq %"class.base::ObserverList"* %69, null
  br i1 %110, label %202, label %111

111:                                              ; preds = %89, %109
  %112 = phi %"class.base::ObserverList"* [ %69, %109 ], [ %87, %89 ]
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %198

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %112, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  %125 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, %124
  br i1 %125, label %134, label %126

126:                                              ; preds = %120, %131
  %127 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %132, %131 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %127, i64 1
  %133 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %132, %124
  br i1 %133, label %198, label %126

134:                                              ; preds = %126, %120
  %135 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %122, %120 ], [ %127, %126 ]
  %136 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %135 to i64
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %135, %124
  br i1 %137, label %198, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %135, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %124
  br i1 %140, label %193, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %124, i64 -2, i32 0
  %143 = ptrtoint i8** %142 to i64
  %144 = sub i64 %143, %136
  %145 = lshr i64 %144, 3
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %167, label %149

149:                                              ; preds = %141, %162
  %150 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %164, %162 ], [ %139, %141 ]
  %151 = phi i64 [ %163, %162 ], [ %136, %141 ]
  %152 = phi i64 [ %165, %162 ], [ %147, %141 ]
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %149
  %157 = ptrtoint i8* %154 to i64
  %158 = inttoptr i64 %151 to %"class.base::internal::UncheckedObserverAdapter"*
  %159 = inttoptr i64 %151 to i64*
  store i64 %157, i64* %159, align 8
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %158, i64 1
  %161 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %160 to i64
  br label %162

162:                                              ; preds = %156, %149
  %163 = phi i64 [ %151, %149 ], [ %161, %156 ]
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %165 = add i64 %152, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %149, !llvm.loop !24

167:                                              ; preds = %162, %141
  %168 = phi i64 [ undef, %141 ], [ %163, %162 ]
  %169 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %141 ], [ %164, %162 ]
  %170 = phi i64 [ %136, %141 ], [ %163, %162 ]
  %171 = icmp ult i64 %144, 24
  br i1 %171, label %189, label %172

172:                                              ; preds = %167, %398
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %400, %398 ], [ %169, %167 ]
  %174 = phi i64 [ %399, %398 ], [ %170, %167 ]
  %175 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = ptrtoint i8* %176 to i64
  %180 = inttoptr i64 %174 to %"class.base::internal::UncheckedObserverAdapter"*
  %181 = inttoptr i64 %174 to i64*
  store i64 %179, i64* %181, align 8
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1
  %183 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %182 to i64
  br label %184

184:                                              ; preds = %178, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %376, label %370

189:                                              ; preds = %398, %167
  %190 = phi i64 [ %168, %167 ], [ %399, %398 ]
  %191 = inttoptr i64 %190 to %"class.base::internal::UncheckedObserverAdapter"*
  %192 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %193

193:                                              ; preds = %189, %138
  %194 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %124, %138 ], [ %192, %189 ]
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %135, %138 ], [ %191, %189 ]
  %196 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %195, %194
  br i1 %196, label %198, label %197

197:                                              ; preds = %193
  store %"class.base::internal::UncheckedObserverAdapter"* %195, %"class.base::internal::UncheckedObserverAdapter"** %123, align 8
  br label %198

198:                                              ; preds = %131, %197, %193, %134, %111
  %199 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %200 = icmp eq %"class.base::ObserverList"* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #12
  br label %202

202:                                              ; preds = %86, %109, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #12
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %295, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 1, i32 0, i32 0, i32 1
  %208 = bitcast %"class.base::internal::LinkNodeBase"** %207 to %"class.base::LinkNode"**
  %209 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %208, align 8
  %210 = bitcast %"class.base::LinkedList"* %206 to %"class.base::LinkNode"**
  %211 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %210, align 8
  %212 = icmp eq %"class.base::LinkNode"* %209, %211
  br i1 %212, label %213, label %291

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 0
  %215 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %214, align 8
  %216 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %203, i64 0, i32 0, i32 0, i32 1
  %217 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  %218 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %217
  br i1 %218, label %227, label %219

219:                                              ; preds = %213, %224
  %220 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %225, %224 ], [ %215, %213 ]
  %221 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %220, i64 1
  %226 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %225, %217
  br i1 %226, label %291, label %219

227:                                              ; preds = %219, %213
  %228 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %213 ], [ %220, %219 ]
  %229 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %228 to i64
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %228, %217
  br i1 %230, label %291, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %217
  br i1 %233, label %286, label %234

234:                                              ; preds = %231
  %235 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %217, i64 -2, i32 0
  %236 = ptrtoint i8** %235 to i64
  %237 = sub i64 %236, %229
  %238 = lshr i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %260, label %242

242:                                              ; preds = %234, %255
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %257, %255 ], [ %232, %234 ]
  %244 = phi i64 [ %256, %255 ], [ %229, %234 ]
  %245 = phi i64 [ %258, %255 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = icmp eq i8* %247, null
  br i1 %248, label %255, label %249

249:                                              ; preds = %242
  %250 = ptrtoint i8* %247 to i64
  %251 = inttoptr i64 %244 to %"class.base::internal::UncheckedObserverAdapter"*
  %252 = inttoptr i64 %244 to i64*
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %251, i64 1
  %254 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %253 to i64
  br label %255

255:                                              ; preds = %249, %242
  %256 = phi i64 [ %244, %242 ], [ %254, %249 ]
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %243, i64 1
  %258 = add i64 %245, -1
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %242, !llvm.loop !26

260:                                              ; preds = %255, %234
  %261 = phi i64 [ undef, %234 ], [ %256, %255 ]
  %262 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %234 ], [ %257, %255 ]
  %263 = phi i64 [ %229, %234 ], [ %256, %255 ]
  %264 = icmp ult i64 %237, 24
  br i1 %264, label %282, label %265

265:                                              ; preds = %260, %366
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %368, %366 ], [ %262, %260 ]
  %267 = phi i64 [ %367, %366 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = ptrtoint i8* %269 to i64
  %273 = inttoptr i64 %267 to %"class.base::internal::UncheckedObserverAdapter"*
  %274 = inttoptr i64 %267 to i64*
  store i64 %272, i64* %274, align 8
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1
  %276 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %275 to i64
  br label %277

277:                                              ; preds = %271, %265
  %278 = phi i64 [ %267, %265 ], [ %276, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 1, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %344, label %338

282:                                              ; preds = %366, %260
  %283 = phi i64 [ %261, %260 ], [ %367, %366 ]
  %284 = inttoptr i64 %283 to %"class.base::internal::UncheckedObserverAdapter"*
  %285 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %286

286:                                              ; preds = %282, %231
  %287 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %217, %231 ], [ %285, %282 ]
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %228, %231 ], [ %284, %282 ]
  %289 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %288, %287
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  store %"class.base::internal::UncheckedObserverAdapter"* %288, %"class.base::internal::UncheckedObserverAdapter"** %216, align 8
  br label %291

291:                                              ; preds = %224, %290, %286, %227, %205
  %292 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %293 = icmp eq %"class.base::ObserverList"* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %291
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #12
  br label %295

295:                                              ; preds = %202, %291, %294
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #12
  ret void

296:                                              ; preds = %102
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %69, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %298, i64 %105
  %300 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %299 to %class.DictionaryUpdateObserver**
  %301 = load %class.DictionaryUpdateObserver*, %class.DictionaryUpdateObserver** %300, align 8
  %302 = bitcast %class.DictionaryUpdateObserver* %301 to void (%class.DictionaryUpdateObserver*, %"class.blink::WebVector"*)***
  %303 = load void (%class.DictionaryUpdateObserver*, %"class.blink::WebVector"*)**, void (%class.DictionaryUpdateObserver*, %"class.blink::WebVector"*)*** %302, align 8
  %304 = getelementptr inbounds void (%class.DictionaryUpdateObserver*, %"class.blink::WebVector"*)*, void (%class.DictionaryUpdateObserver*, %"class.blink::WebVector"*)** %303, i64 2
  %305 = load void (%class.DictionaryUpdateObserver*, %"class.blink::WebVector"*)*, void (%class.DictionaryUpdateObserver*, %"class.blink::WebVector"*)** %304, align 8
  call void %305(%class.DictionaryUpdateObserver* %301, %"class.blink::WebVector"* dereferenceable(24) %1) #12
  %306 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %307 = icmp eq %"class.base::ObserverList"* %306, null
  br i1 %307, label %308, label %309

308:                                              ; preds = %333, %329, %296, %309, %323
  br label %68

309:                                              ; preds = %296
  %310 = load i64, i64* %8, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %8, align 8
  %312 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 1
  %313 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.base::ObserverList"* %306 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %314, %316
  %318 = ashr exact i64 %317, 3
  %319 = load i64, i64* %9, align 8
  %320 = icmp ult i64 %318, %319
  %321 = select i1 %320, i64 %318, i64 %319
  %322 = icmp ult i64 %311, %321
  br i1 %322, label %323, label %308

323:                                              ; preds = %309
  %324 = inttoptr i64 %316 to %"class.base::internal::UncheckedObserverAdapter"*
  %325 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %306, i64 0, i32 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 %311, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %329, label %308

329:                                              ; preds = %323, %333
  %330 = phi i64 [ %331, %333 ], [ %311, %323 ]
  %331 = add nuw i64 %330, 1
  store i64 %331, i64* %8, align 8
  %332 = icmp ult i64 %331, %321
  br i1 %332, label %333, label %308

333:                                              ; preds = %329
  %334 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %325, align 8
  %335 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %331, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %329, label %308

338:                                              ; preds = %277
  %339 = ptrtoint i8* %280 to i64
  %340 = inttoptr i64 %278 to %"class.base::internal::UncheckedObserverAdapter"*
  %341 = inttoptr i64 %278 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %340, i64 1
  %343 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %342 to i64
  br label %344

344:                                              ; preds = %338, %277
  %345 = phi i64 [ %278, %277 ], [ %343, %338 ]
  %346 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 2, i32 0
  %347 = load i8*, i8** %346, align 8
  %348 = icmp eq i8* %347, null
  br i1 %348, label %355, label %349

349:                                              ; preds = %344
  %350 = ptrtoint i8* %347 to i64
  %351 = inttoptr i64 %345 to %"class.base::internal::UncheckedObserverAdapter"*
  %352 = inttoptr i64 %345 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %351, i64 1
  %354 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %353 to i64
  br label %355

355:                                              ; preds = %349, %344
  %356 = phi i64 [ %345, %344 ], [ %354, %349 ]
  %357 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 3, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = icmp eq i8* %358, null
  br i1 %359, label %366, label %360

360:                                              ; preds = %355
  %361 = ptrtoint i8* %358 to i64
  %362 = inttoptr i64 %356 to %"class.base::internal::UncheckedObserverAdapter"*
  %363 = inttoptr i64 %356 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %362, i64 1
  %365 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %364 to i64
  br label %366

366:                                              ; preds = %360, %355
  %367 = phi i64 [ %356, %355 ], [ %365, %360 ]
  %368 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %266, i64 4
  %369 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %368, %217
  br i1 %369, label %282, label %265

370:                                              ; preds = %184
  %371 = ptrtoint i8* %187 to i64
  %372 = inttoptr i64 %185 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %185 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %184
  %377 = phi i64 [ %185, %184 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 2, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 3, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %173, i64 4
  %401 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %400, %124
  br i1 %401, label %189, label %172
}

declare void @_ZN22CustomDictionaryEngine25OnCustomDictionaryChangedERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEESD_(%class.CustomDictionaryEngine*, %"class.std::__1::set.88"* dereferenceable(24), %"class.std::__1::set.88"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN18SpellcheckLanguage4InitEN4base4FileERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%class.SpellcheckLanguage*, %"class.base::File"*, %"class.std::__1::basic_string.61"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_Dn(%class.SpellCheck*, i16*, i64, i64, i32, i64* nocapture, i64* nocapture, i8* nocapture readnone) local_unnamed_addr #0 align 2 {
  %9 = tail call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck* %0, i16* %1, i64 %2, i64 %3, i32 %4, i64* %5, i64* %6, %"class.std::__1::vector.124"* null)
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck*, i16*, i64, i64, i32, i64* nocapture, i64* nocapture, %"class.std::__1::vector.124"*) local_unnamed_addr #0 align 2 {
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.std::__1::vector.124", align 16
  %12 = alloca %"class.std::__1::vector.126", align 8
  %13 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %13, align 8
  %15 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.27"* %14, %16
  br i1 %17, label %311, label %18

18:                                               ; preds = %8, %18
  %19 = phi i1 [ %24, %18 ], [ false, %8 ]
  %20 = phi %"class.std::__1::unique_ptr.27"* [ %25, %18 ], [ %14, %8 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %21, align 8
  %23 = tail call zeroext i1 @_ZN18SpellcheckLanguage18InitializeIfNeededEv(%class.SpellcheckLanguage* %22) #12
  %24 = or i1 %19, %23
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %20, i64 1
  %26 = icmp eq %"class.std::__1::unique_ptr.27"* %25, %16
  br i1 %26, label %27, label %18

27:                                               ; preds = %18
  br i1 %24, label %311, label %28

28:                                               ; preds = %27
  %29 = bitcast %class.SpellCheck* %0 to i64 (%class.SpellCheck*)***
  %30 = load i64 (%class.SpellCheck*)**, i64 (%class.SpellCheck*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%class.SpellCheck*)*, i64 (%class.SpellCheck*)** %30, i64 5
  %32 = load i64 (%class.SpellCheck*)*, i64 (%class.SpellCheck*)** %31, align 8
  %33 = tail call i64 %32(%class.SpellCheck* %0) #12
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %311, label %35

35:                                               ; preds = %28
  %36 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  store i64 -6148914691236517206, i64* %9, align 8
  %37 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  store i64 -6148914691236517206, i64* %10, align 8
  %38 = bitcast %"class.std::__1::vector.124"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %11, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %11, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 0, i64 24, i1 false) #12
  %42 = bitcast %"class.std::__1::vector.126"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  %43 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %12, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %12, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #12
  %45 = icmp ugt i64 %2, %3
  br i1 %45, label %243, label %46

46:                                               ; preds = %35
  %47 = icmp eq %"class.std::__1::vector.124"* %7, null
  %48 = select i1 %47, %"class.std::__1::vector.126"* null, %"class.std::__1::vector.126"* %12
  %49 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %11, i64 0, i32 0, i32 2
  %50 = bitcast %"class.std::__1::__compressed_pair.133"* %49 to %"class.std::__1::allocator.136"*
  %51 = bitcast %"class.std::__1::vector.126"** %40 to i64*
  br label %57

52:                                               ; preds = %224
  %53 = icmp ugt i64 %229, %3
  br i1 %53, label %243, label %54

54:                                               ; preds = %52
  %55 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %39, align 16
  %56 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %40, align 8
  br label %57

57:                                               ; preds = %54, %46
  %58 = phi %"class.std::__1::vector.126"* [ null, %46 ], [ %56, %54 ]
  %59 = phi %"class.std::__1::vector.126"* [ null, %46 ], [ %55, %54 ]
  %60 = phi i64 [ %2, %46 ], [ %229, %54 ]
  store i64 0, i64* %5, align 8
  store i64 0, i64* %6, align 8
  %61 = icmp eq %"class.std::__1::vector.126"* %58, %59
  br i1 %61, label %92, label %62

62:                                               ; preds = %57, %90
  %63 = phi %"class.std::__1::vector.126"* [ %64, %90 ], [ %58, %57 ]
  %64 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %63, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %65, align 8
  %67 = icmp eq %"class.std::__1::basic_string"* %66, null
  br i1 %67, label %90, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %70 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %63, i64 -1, i32 0, i32 1
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %70, align 8
  %72 = icmp eq %"class.std::__1::basic_string"* %71, %66
  br i1 %72, label %88, label %73

73:                                               ; preds = %68, %83
  %74 = phi %"class.std::__1::basic_string"* [ %75, %83 ], [ %71, %68 ]
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %73
  %81 = bitcast %"class.std::__1::basic_string"* %75 to i8**
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %80, %73
  %84 = icmp eq %"class.std::__1::basic_string"* %75, %66
  br i1 %84, label %85, label %73

85:                                               ; preds = %83
  %86 = bitcast %"class.std::__1::vector.126"* %64 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %68
  %89 = phi i8* [ %87, %85 ], [ %69, %68 ]
  store %"class.std::__1::basic_string"* %66, %"class.std::__1::basic_string"** %70, align 8
  call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %88, %62
  %91 = icmp eq %"class.std::__1::vector.126"* %64, %59
  br i1 %91, label %92, label %62

92:                                               ; preds = %90, %57
  store %"class.std::__1::vector.126"* %59, %"class.std::__1::vector.126"** %40, align 8
  %93 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %13, align 8
  %94 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %15, align 8
  %95 = icmp eq %"class.std::__1::unique_ptr.27"* %93, %94
  br i1 %95, label %224, label %96

96:                                               ; preds = %92, %217
  %97 = phi i64 [ %220, %217 ], [ %60, %92 ]
  %98 = phi i64 [ %219, %217 ], [ %3, %92 ]
  %99 = phi %"class.std::__1::unique_ptr.27"* [ %218, %217 ], [ %93, %92 ]
  %100 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %101 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %102 = icmp eq %"class.std::__1::basic_string"* %101, %100
  br i1 %102, label %115, label %103

103:                                              ; preds = %96, %113
  %104 = phi %"class.std::__1::basic_string"* [ %105, %113 ], [ %101, %96 ]
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 -1
  %106 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = bitcast %"class.std::__1::basic_string"* %105 to i8**
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #13
  br label %113

113:                                              ; preds = %110, %103
  %114 = icmp eq %"class.std::__1::basic_string"* %105, %100
  br i1 %114, label %115, label %103

115:                                              ; preds = %113, %96
  store %"class.std::__1::basic_string"* %100, %"class.std::__1::basic_string"** %44, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %99, i64 0, i32 0, i32 0, i32 0
  %117 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %116, align 8
  %118 = call i32 @_ZN18SpellcheckLanguage14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEE(%class.SpellcheckLanguage* %117, i16* %1, i64 %97, i64 %3, i32 %4, i64* nonnull %9, i64* nonnull %10, %"class.std::__1::vector.126"* %48) #12
  switch i32 %118, label %217 [
    i32 0, label %223
    i32 1, label %119
    i32 2, label %163
  ]

119:                                              ; preds = %115
  %120 = load i64, i64* %10, align 8
  %121 = icmp ult i64 %120, %98
  %122 = select i1 %121, i64 %120, i64 %98
  %123 = load i64, i64* %9, align 8
  %124 = icmp eq i64 %97, %123
  br i1 %124, label %161, label %125

125:                                              ; preds = %119
  store i64 0, i64* %6, align 8
  %126 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %39, align 16
  %127 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %40, align 8
  %128 = icmp eq %"class.std::__1::vector.126"* %127, %126
  br i1 %128, label %159, label %129

129:                                              ; preds = %125, %157
  %130 = phi %"class.std::__1::vector.126"* [ %131, %157 ], [ %127, %125 ]
  %131 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %130, i64 -1
  %132 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %134 = icmp eq %"class.std::__1::basic_string"* %133, null
  br i1 %134, label %157, label %135

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  %137 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %130, i64 -1, i32 0, i32 1
  %138 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %137, align 8
  %139 = icmp eq %"class.std::__1::basic_string"* %138, %133
  br i1 %139, label %155, label %140

140:                                              ; preds = %135, %150
  %141 = phi %"class.std::__1::basic_string"* [ %142, %150 ], [ %138, %135 ]
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 -1
  %143 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %143, i64 0, i32 1, i32 1
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %140
  %148 = bitcast %"class.std::__1::basic_string"* %142 to i8**
  %149 = load i8*, i8** %148, align 8
  call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %147, %140
  %151 = icmp eq %"class.std::__1::basic_string"* %142, %133
  br i1 %151, label %152, label %140

152:                                              ; preds = %150
  %153 = bitcast %"class.std::__1::vector.126"* %131 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  store %"class.std::__1::basic_string"* %133, %"class.std::__1::basic_string"** %137, align 8
  call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %155, %129
  %158 = icmp eq %"class.std::__1::vector.126"* %131, %126
  br i1 %158, label %159, label %129

159:                                              ; preds = %157, %125
  store %"class.std::__1::vector.126"* %126, %"class.std::__1::vector.126"** %40, align 8
  %160 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %13, align 8
  br label %217

161:                                              ; preds = %119
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %99, i64 1
  br label %217

163:                                              ; preds = %115
  %164 = load i64, i64* %9, align 8
  store i64 %164, i64* %5, align 8
  %165 = load i64, i64* %10, align 8
  store i64 %165, i64* %6, align 8
  %166 = load i64, i64* %5, align 8
  %167 = icmp eq i64 %97, %166
  br i1 %167, label %207, label %168

168:                                              ; preds = %163
  %169 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %39, align 16
  %170 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %40, align 8
  %171 = icmp eq %"class.std::__1::vector.126"* %170, %169
  br i1 %171, label %204, label %172

172:                                              ; preds = %168, %200
  %173 = phi %"class.std::__1::vector.126"* [ %174, %200 ], [ %170, %168 ]
  %174 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %173, i64 -1
  %175 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %175, align 8
  %177 = icmp eq %"class.std::__1::basic_string"* %176, null
  br i1 %177, label %200, label %178

178:                                              ; preds = %172
  %179 = bitcast %"class.std::__1::basic_string"* %176 to i8*
  %180 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %173, i64 -1, i32 0, i32 1
  %181 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %180, align 8
  %182 = icmp eq %"class.std::__1::basic_string"* %181, %176
  br i1 %182, label %198, label %183

183:                                              ; preds = %178, %193
  %184 = phi %"class.std::__1::basic_string"* [ %185, %193 ], [ %181, %178 ]
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %184, i64 -1
  %186 = bitcast %"class.std::__1::basic_string"* %185 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %186, i64 0, i32 1, i32 1
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %183
  %191 = bitcast %"class.std::__1::basic_string"* %185 to i8**
  %192 = load i8*, i8** %191, align 8
  call void @_ZdlPv(i8* %192) #13
  br label %193

193:                                              ; preds = %190, %183
  %194 = icmp eq %"class.std::__1::basic_string"* %185, %176
  br i1 %194, label %195, label %183

195:                                              ; preds = %193
  %196 = bitcast %"class.std::__1::vector.126"* %174 to i8**
  %197 = load i8*, i8** %196, align 8
  br label %198

198:                                              ; preds = %195, %178
  %199 = phi i8* [ %197, %195 ], [ %179, %178 ]
  store %"class.std::__1::basic_string"* %176, %"class.std::__1::basic_string"** %180, align 8
  call void @_ZdlPv(i8* %199) #13
  br label %200

200:                                              ; preds = %198, %172
  %201 = icmp eq %"class.std::__1::vector.126"* %174, %169
  br i1 %201, label %202, label %172

202:                                              ; preds = %200
  %203 = load i64, i64* %5, align 8
  br label %204

204:                                              ; preds = %202, %168
  %205 = phi i64 [ %203, %202 ], [ %166, %168 ]
  store %"class.std::__1::vector.126"* %169, %"class.std::__1::vector.126"** %40, align 8
  %206 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %13, align 8
  br label %217

207:                                              ; preds = %163
  %208 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %40, align 8
  %209 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %41, align 16
  %210 = icmp eq %"class.std::__1::vector.126"* %208, %209
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEENS1_IS7_EEEEEEE9constructIS9_JRKS9_EvEEvRSA_PT_DpOT0_(%"class.std::__1::allocator.136"* dereferenceable(1) %50, %"class.std::__1::vector.126"* %208, %"class.std::__1::vector.126"* nonnull dereferenceable(24) %12) #12
  %212 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %208, i64 1
  %213 = ptrtoint %"class.std::__1::vector.126"* %212 to i64
  store i64 %213, i64* %51, align 8
  br label %215

214:                                              ; preds = %207
  call void @_ZNSt3__16vectorINS0_INS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEENS4_IS8_EEE21__push_back_slow_pathIRKS8_EEvOT_(%"class.std::__1::vector.124"* nonnull %11, %"class.std::__1::vector.126"* nonnull dereferenceable(24) %12) #12
  br label %215

215:                                              ; preds = %211, %214
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %99, i64 1
  br label %217

217:                                              ; preds = %115, %161, %159, %215, %204
  %218 = phi %"class.std::__1::unique_ptr.27"* [ %99, %115 ], [ %216, %215 ], [ %206, %204 ], [ %162, %161 ], [ %160, %159 ]
  %219 = phi i64 [ %98, %115 ], [ %98, %215 ], [ %98, %204 ], [ %122, %161 ], [ %122, %159 ]
  %220 = phi i64 [ %97, %115 ], [ %97, %215 ], [ %205, %204 ], [ %97, %161 ], [ %123, %159 ]
  %221 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %15, align 8
  %222 = icmp eq %"class.std::__1::unique_ptr.27"* %218, %221
  br i1 %222, label %224, label %96

223:                                              ; preds = %115
  store i64 0, i64* %5, align 8
  store i64 0, i64* %6, align 8
  br label %243

224:                                              ; preds = %217, %92
  %225 = phi i64 [ %3, %92 ], [ %219, %217 ]
  %226 = phi i64 [ %60, %92 ], [ %220, %217 ]
  %227 = load i64, i64* %6, align 8
  %228 = icmp eq i64 %227, 0
  %229 = add i64 %226, %225
  br i1 %228, label %52, label %230

230:                                              ; preds = %224
  br i1 %47, label %243, label %231

231:                                              ; preds = %230
  %232 = bitcast %"class.std::__1::vector.124"* %11 to <2 x i64>*
  %233 = load <2 x i64>, <2 x i64>* %232, align 16
  %234 = bitcast %"class.std::__1::vector.124"* %7 to <2 x i64>*
  %235 = load <2 x i64>, <2 x i64>* %234, align 8
  %236 = bitcast %"class.std::__1::vector.124"* %7 to <2 x i64>*
  store <2 x i64> %233, <2 x i64>* %236, align 8
  %237 = bitcast %"class.std::__1::vector.124"* %11 to <2 x i64>*
  store <2 x i64> %235, <2 x i64>* %237, align 16
  %238 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %239 = bitcast %"class.std::__1::vector.126"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.std::__1::vector.126"** %41 to i64*
  %242 = load i64, i64* %241, align 16
  store i64 %242, i64* %239, align 8
  store i64 %240, i64* %241, align 16
  br label %243

243:                                              ; preds = %52, %35, %223, %231, %230
  %244 = phi i1 [ true, %223 ], [ false, %230 ], [ false, %231 ], [ true, %35 ], [ true, %52 ]
  %245 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %246 = icmp eq %"class.std::__1::basic_string"* %245, null
  br i1 %246, label %268, label %247

247:                                              ; preds = %243
  %248 = bitcast %"class.std::__1::basic_string"* %245 to i8*
  %249 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %250 = icmp eq %"class.std::__1::basic_string"* %249, %245
  br i1 %250, label %266, label %251

251:                                              ; preds = %247, %261
  %252 = phi %"class.std::__1::basic_string"* [ %253, %261 ], [ %249, %247 ]
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %252, i64 -1
  %254 = bitcast %"class.std::__1::basic_string"* %253 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %254, i64 0, i32 1, i32 1
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %251
  %259 = bitcast %"class.std::__1::basic_string"* %253 to i8**
  %260 = load i8*, i8** %259, align 8
  call void @_ZdlPv(i8* %260) #13
  br label %261

261:                                              ; preds = %258, %251
  %262 = icmp eq %"class.std::__1::basic_string"* %253, %245
  br i1 %262, label %263, label %251

263:                                              ; preds = %261
  %264 = bitcast %"class.std::__1::vector.126"* %12 to i8**
  %265 = load i8*, i8** %264, align 8
  br label %266

266:                                              ; preds = %263, %247
  %267 = phi i8* [ %265, %263 ], [ %248, %247 ]
  store %"class.std::__1::basic_string"* %245, %"class.std::__1::basic_string"** %44, align 8
  call void @_ZdlPv(i8* %267) #13
  br label %268

268:                                              ; preds = %243, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  %269 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %39, align 16
  %270 = icmp eq %"class.std::__1::vector.126"* %269, null
  br i1 %270, label %310, label %271

271:                                              ; preds = %268
  %272 = bitcast %"class.std::__1::vector.126"* %269 to i8*
  %273 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %40, align 8
  %274 = icmp eq %"class.std::__1::vector.126"* %273, %269
  br i1 %274, label %308, label %275

275:                                              ; preds = %271, %303
  %276 = phi %"class.std::__1::vector.126"* [ %277, %303 ], [ %273, %271 ]
  %277 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %276, i64 -1
  %278 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %278, align 8
  %280 = icmp eq %"class.std::__1::basic_string"* %279, null
  br i1 %280, label %303, label %281

281:                                              ; preds = %275
  %282 = bitcast %"class.std::__1::basic_string"* %279 to i8*
  %283 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %276, i64 -1, i32 0, i32 1
  %284 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %283, align 8
  %285 = icmp eq %"class.std::__1::basic_string"* %284, %279
  br i1 %285, label %301, label %286

286:                                              ; preds = %281, %296
  %287 = phi %"class.std::__1::basic_string"* [ %288, %296 ], [ %284, %281 ]
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %287, i64 -1
  %289 = bitcast %"class.std::__1::basic_string"* %288 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %289, i64 0, i32 1, i32 1
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %286
  %294 = bitcast %"class.std::__1::basic_string"* %288 to i8**
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #13
  br label %296

296:                                              ; preds = %293, %286
  %297 = icmp eq %"class.std::__1::basic_string"* %288, %279
  br i1 %297, label %298, label %286

298:                                              ; preds = %296
  %299 = bitcast %"class.std::__1::vector.126"* %277 to i8**
  %300 = load i8*, i8** %299, align 8
  br label %301

301:                                              ; preds = %298, %281
  %302 = phi i8* [ %300, %298 ], [ %282, %281 ]
  store %"class.std::__1::basic_string"* %279, %"class.std::__1::basic_string"** %283, align 8
  call void @_ZdlPv(i8* %302) #13
  br label %303

303:                                              ; preds = %301, %275
  %304 = icmp eq %"class.std::__1::vector.126"* %277, %269
  br i1 %304, label %305, label %275

305:                                              ; preds = %303
  %306 = bitcast %"class.std::__1::vector.124"* %11 to i8**
  %307 = load i8*, i8** %306, align 16
  br label %308

308:                                              ; preds = %305, %271
  %309 = phi i8* [ %307, %305 ], [ %272, %271 ]
  store %"class.std::__1::vector.126"* %269, %"class.std::__1::vector.126"** %40, align 8
  call void @_ZdlPv(i8* %309) #13
  br label %310

310:                                              ; preds = %268, %308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %311

311:                                              ; preds = %8, %28, %27, %310
  %312 = phi i1 [ %244, %310 ], [ true, %27 ], [ true, %28 ], [ true, %8 ]
  ret i1 %312
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEE(%class.SpellCheck*, i16*, i64, i64, i32, i64* nocapture, i64* nocapture, %"class.std::__1::vector.126"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::vector.124", align 8
  %10 = icmp eq %"class.std::__1::vector.126"* %7, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck* %0, i16* %1, i64 %2, i64 %3, i32 %4, i64* %5, i64* %6, %"class.std::__1::vector.124"* null) #12
  br label %60

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::vector.124"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %9, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  %17 = call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck* %0, i16* %1, i64 %2, i64 %3, i32 %4, i64* %5, i64* %6, %"class.std::__1::vector.124"* nonnull %9)
  call void @_ZN10spellcheck15FillSuggestionsERKNSt3__16vectorINS1_INS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEENS5_IS9_EEEEPS9_(%"class.std::__1::vector.124"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.126"* nonnull %7) #12
  %18 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %15, align 8
  %19 = icmp eq %"class.std::__1::vector.126"* %18, null
  br i1 %19, label %59, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::vector.126"* %18 to i8*
  %22 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %16, align 8
  %23 = icmp eq %"class.std::__1::vector.126"* %22, %18
  br i1 %23, label %57, label %24

24:                                               ; preds = %20, %52
  %25 = phi %"class.std::__1::vector.126"* [ %26, %52 ], [ %22, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %25, i64 -1
  %27 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %28, null
  br i1 %29, label %52, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %25, i64 -1, i32 0, i32 1
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %33, %28
  br i1 %34, label %50, label %35

35:                                               ; preds = %30, %45
  %36 = phi %"class.std::__1::basic_string"* [ %37, %45 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 -1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = bitcast %"class.std::__1::basic_string"* %37 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %42, %35
  %46 = icmp eq %"class.std::__1::basic_string"* %37, %28
  br i1 %46, label %47, label %35

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::vector.126"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %30
  %51 = phi i8* [ %49, %47 ], [ %31, %30 ]
  store %"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"** %32, align 8
  call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %24
  %53 = icmp eq %"class.std::__1::vector.126"* %26, %18
  br i1 %53, label %54, label %24

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.124"* %9 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %20
  %58 = phi i8* [ %56, %54 ], [ %21, %20 ]
  store %"class.std::__1::vector.126"* %18, %"class.std::__1::vector.126"** %16, align 8
  call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %13, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br label %60

60:                                               ; preds = %59, %11
  %61 = phi i1 [ %17, %59 ], [ %12, %11 ]
  ret i1 %61
}

declare void @_ZN10spellcheck15FillSuggestionsERKNSt3__16vectorINS1_INS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEENS5_IS9_EEEEPS9_(%"class.std::__1::vector.124"* dereferenceable(24), %"class.std::__1::vector.126"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SpellCheck18InitializeIfNeededEv(%class.SpellCheck* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %2, align 8
  %4 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.27"* %3, %5
  br i1 %6, label %16, label %7

7:                                                ; preds = %1, %7
  %8 = phi i1 [ %13, %7 ], [ false, %1 ]
  %9 = phi %"class.std::__1::unique_ptr.27"* [ %14, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %10, align 8
  %12 = tail call zeroext i1 @_ZN18SpellcheckLanguage18InitializeIfNeededEv(%class.SpellcheckLanguage* %11) #12
  %13 = or i1 %8, %12
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %9, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.27"* %14, %5
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %1
  %17 = phi i1 [ true, %1 ], [ %13, %7 ]
  ret i1 %17
}

declare i32 @_ZN18SpellcheckLanguage14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEE(%class.SpellcheckLanguage*, i16*, i64, i64, i32, i64*, i64*, %"class.std::__1::vector.126"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SpellCheck19SpellCheckParagraphERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPN5blink9WebVectorINS9_21WebTextCheckingResultEEE(%class.SpellCheck*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.blink::WebVector.139"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.140", align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.blink::WebTextCheckingResult", align 8
  %8 = bitcast %"class.std::__1::vector.140"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %4, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store i64 0, i64* %5, align 8
  %21 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  store i64 0, i64* %6, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %24 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 5
  %25 = bitcast %"struct.blink::WebTextCheckingResult"* %7 to i8*
  %26 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %7, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %7, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %7, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %7, i64 0, i32 3
  %30 = bitcast %"class.blink::WebVector"* %29 to i8*
  %31 = bitcast %"class.blink::WebVector"* %29 to i64*
  %32 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %7, i64 0, i32 3, i32 0, i32 0, i32 1
  %33 = bitcast %"class.blink::WebString"** %32 to i64*
  %34 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %7, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.blink::WebString"** %34 to i64*
  %36 = bitcast %"struct.blink::WebTextCheckingResult"** %10 to i64*
  %37 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %29, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::WebVector"* %29 to i8**
  %39 = icmp slt i8 %14, 0
  %40 = load i16*, i16** %22, align 8
  %41 = select i1 %39, i16* %40, i16* %23
  %42 = call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck* %0, i16* %41, i64 0, i64 %19, i32 0, i64* nonnull %5, i64* nonnull %6, %"class.std::__1::vector.124"* null) #12
  br i1 %42, label %100, label %43

43:                                               ; preds = %3
  %44 = bitcast %"class.blink::WebVector"* %29 to <2 x i64>*
  br label %45

45:                                               ; preds = %43, %94
  %46 = load i64, i64* %5, align 8
  %47 = load i64, i64* %6, align 8
  %48 = call zeroext i1 @_ZN22CustomDictionaryEngine14SpellCheckWordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmm(%class.CustomDictionaryEngine* %24, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %46, i64 %47) #12
  br i1 %48, label %91, label %49

49:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #12
  %50 = icmp ult i64 %46, 2147483648
  br i1 %50, label %52, label %51, !prof !27

51:                                               ; preds = %49
  call void @llvm.trap() #12
  unreachable

52:                                               ; preds = %49
  %53 = icmp ult i64 %47, 2147483648
  br i1 %53, label %55, label %54, !prof !27

54:                                               ; preds = %52
  call void @llvm.trap() #12
  unreachable

55:                                               ; preds = %52
  %56 = trunc i64 %46 to i32
  %57 = trunc i64 %47 to i32
  store i32 0, i32* %26, align 8
  store i32 %56, i32* %27, align 4
  store i32 %57, i32* %28, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #12
  %58 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %10, align 8
  %59 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %11, align 8
  %60 = icmp ult %"struct.blink::WebTextCheckingResult"* %58, %59
  br i1 %60, label %61, label %75

61:                                               ; preds = %55
  %62 = bitcast %"struct.blink::WebTextCheckingResult"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %25, i64 12, i1 false) #12
  %63 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %58, i64 0, i32 3
  %64 = bitcast %"class.blink::WebVector"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #12
  %65 = bitcast %"class.blink::WebVector"* %63 to i64*
  %66 = load i64, i64* %31, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %58, i64 0, i32 3, i32 0, i32 0, i32 1
  %68 = bitcast %"class.blink::WebString"** %67 to i64*
  %69 = load i64, i64* %33, align 8
  store i64 %69, i64* %68, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %44, align 8
  %70 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %58, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast %"class.blink::WebString"** %70 to i64*
  %72 = load i64, i64* %35, align 8
  store i64 %72, i64* %71, align 8
  store i64 0, i64* %35, align 8
  %73 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %58, i64 1
  %74 = ptrtoint %"struct.blink::WebTextCheckingResult"* %73 to i64
  store i64 %74, i64* %36, align 8
  br label %90

75:                                               ; preds = %55
  call void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.140"* nonnull %4, %"struct.blink::WebTextCheckingResult"* nonnull dereferenceable(40) %7) #12
  %76 = load %"class.blink::WebString"*, %"class.blink::WebString"** %37, align 8
  %77 = icmp eq %"class.blink::WebString"* %76, null
  br i1 %77, label %90, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.blink::WebString"* %76 to i8*
  %80 = load %"class.blink::WebString"*, %"class.blink::WebString"** %32, align 8
  %81 = icmp eq %"class.blink::WebString"* %80, %76
  br i1 %81, label %88, label %82

82:                                               ; preds = %78, %82
  %83 = phi %"class.blink::WebString"* [ %84, %82 ], [ %80, %78 ]
  %84 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %83, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %84) #12
  %85 = icmp eq %"class.blink::WebString"* %84, %76
  br i1 %85, label %86, label %82

86:                                               ; preds = %82
  %87 = load i8*, i8** %38, align 8
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi i8* [ %87, %86 ], [ %79, %78 ]
  store %"class.blink::WebString"* %76, %"class.blink::WebString"** %32, align 8
  call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %61, %88, %75
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #12
  br label %91

91:                                               ; preds = %90, %45
  %92 = add i64 %47, %46
  %93 = icmp ugt i64 %92, %19
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = load i8, i8* %13, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i16*, i16** %22, align 8
  %98 = select i1 %96, i16* %97, i16* %23
  %99 = call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck* %0, i16* %98, i64 %92, i64 %19, i32 0, i64* nonnull %5, i64* nonnull %6, %"class.std::__1::vector.124"* null) #12
  br i1 %99, label %100, label %45

100:                                              ; preds = %91, %94, %3
  %101 = phi i1 [ true, %3 ], [ false, %91 ], [ true, %94 ]
  %102 = getelementptr inbounds %"class.blink::WebVector.139", %"class.blink::WebVector.139"* %2, i64 0, i32 0
  %103 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %9, align 8
  %104 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %10, align 8
  call void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.140"* %102, %"struct.blink::WebTextCheckingResult"* %103, %"struct.blink::WebTextCheckingResult"* %104) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %105 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %9, align 8
  %106 = icmp eq %"struct.blink::WebTextCheckingResult"* %105, null
  br i1 %106, label %139, label %107

107:                                              ; preds = %100
  %108 = bitcast %"struct.blink::WebTextCheckingResult"* %105 to i8*
  %109 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %10, align 8
  %110 = icmp eq %"struct.blink::WebTextCheckingResult"* %109, %105
  br i1 %110, label %137, label %111

111:                                              ; preds = %107, %132
  %112 = phi %"struct.blink::WebTextCheckingResult"* [ %113, %132 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %112, i64 -1
  %114 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %112, i64 -1, i32 3
  %115 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::WebString"*, %"class.blink::WebString"** %115, align 8
  %117 = icmp eq %"class.blink::WebString"* %116, null
  br i1 %117, label %132, label %118

118:                                              ; preds = %111
  %119 = bitcast %"class.blink::WebString"* %116 to i8*
  %120 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %112, i64 -1, i32 3, i32 0, i32 0, i32 1
  %121 = load %"class.blink::WebString"*, %"class.blink::WebString"** %120, align 8
  %122 = icmp eq %"class.blink::WebString"* %121, %116
  br i1 %122, label %130, label %123

123:                                              ; preds = %118, %123
  %124 = phi %"class.blink::WebString"* [ %125, %123 ], [ %121, %118 ]
  %125 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %124, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %125) #12
  %126 = icmp eq %"class.blink::WebString"* %125, %116
  br i1 %126, label %127, label %123

127:                                              ; preds = %123
  %128 = bitcast %"class.blink::WebVector"* %114 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %127, %118
  %131 = phi i8* [ %129, %127 ], [ %119, %118 ]
  store %"class.blink::WebString"* %116, %"class.blink::WebString"** %120, align 8
  call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %130, %111
  %133 = icmp eq %"struct.blink::WebTextCheckingResult"* %113, %105
  br i1 %133, label %134, label %111

134:                                              ; preds = %132
  %135 = bitcast %"class.std::__1::vector.140"* %4 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %137

137:                                              ; preds = %134, %107
  %138 = phi i8* [ %136, %134 ], [ %108, %107 ]
  store %"struct.blink::WebTextCheckingResult"* %105, %"struct.blink::WebTextCheckingResult"** %10, align 8
  call void @_ZdlPv(i8* %138) #13
  br label %139

139:                                              ; preds = %100, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret i1 %101
}

declare zeroext i1 @_ZN22CustomDictionaryEngine14SpellCheckWordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmm(%class.CustomDictionaryEngine*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck19RequestTextCheckingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS0_10unique_ptrIN5blink25WebTextCheckingCompletionENS0_14default_deleteISB_EEEE(%class.SpellCheck*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.blink::WebTextCheckingCompletion"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::WebTextCheckingCompletion"* %2 to i64
  %5 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.SpellCheck::SpellcheckRequest"*, %"class.SpellCheck::SpellcheckRequest"** %6, align 8
  %8 = icmp eq %"class.SpellCheck::SpellcheckRequest"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %10, align 8
  %12 = bitcast %"class.blink::WebTextCheckingCompletion"* %11 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %13 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %13, i64 1
  %15 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %14, align 8
  tail call void %15(%"class.blink::WebTextCheckingCompletion"* %11) #12
  br label %16

16:                                               ; preds = %3, %9
  %17 = tail call i8* @_Znwm(i64 40) #13
  %18 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %23, i64 24, i1 false) #12
  br label %203

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = bitcast i16* %26 to i8*
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 11
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = trunc i64 %29 to i8
  %33 = getelementptr inbounds i8, i8* %17, i64 23
  store i8 %32, i8* %33, align 1
  br label %52

34:                                               ; preds = %24
  %35 = icmp ugt i64 %29, 9223372036854775791
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast i8* %17 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %37) #14
  unreachable

38:                                               ; preds = %34
  %39 = add nuw nsw i64 %29, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #13
  %46 = bitcast i8* %17 to i8**
  store i8* %45, i8** %46, align 8
  %47 = or i64 %40, -9223372036854775808
  %48 = getelementptr inbounds i8, i8* %17, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %17, i64 8
  %51 = bitcast i8* %50 to i64*
  store i64 %29, i64* %51, align 8
  br label %52

52:                                               ; preds = %43, %31
  %53 = phi i8* [ %17, %31 ], [ %45, %43 ]
  %54 = bitcast i8* %53 to i16*
  %55 = add nuw nsw i64 %29, 1
  %56 = add i64 %29, 1
  %57 = icmp ult i64 %56, 16
  br i1 %57, label %150, label %58

58:                                               ; preds = %52
  %59 = shl i64 %29, 1
  %60 = add i64 %59, 2
  %61 = getelementptr i8, i8* %53, i64 %60
  %62 = add i64 %29, 1
  %63 = getelementptr i16, i16* %26, i64 %62
  %64 = bitcast i16* %63 to i8*
  %65 = icmp ult i8* %53, %64
  %66 = icmp ugt i8* %61, %27
  %67 = and i1 %65, %66
  br i1 %67, label %150, label %68

68:                                               ; preds = %58
  %69 = and i64 %56, -16
  %70 = sub i64 %55, %69
  %71 = getelementptr i16, i16* %26, i64 %69
  %72 = getelementptr i16, i16* %54, i64 %69
  %73 = add i64 %69, -16
  %74 = lshr exact i64 %73, 4
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 3
  %77 = icmp ult i64 %73, 48
  br i1 %77, label %129, label %78

78:                                               ; preds = %68
  %79 = sub nsw i64 %75, %76
  br label %80

80:                                               ; preds = %80, %78
  %81 = phi i64 [ 0, %78 ], [ %126, %80 ]
  %82 = phi i64 [ %79, %78 ], [ %127, %80 ]
  %83 = getelementptr i16, i16* %26, i64 %81
  %84 = getelementptr i16, i16* %54, i64 %81
  %85 = bitcast i16* %83 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !28
  %87 = getelementptr i16, i16* %83, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !28
  %90 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %90, align 2, !alias.scope !31, !noalias !28
  %91 = getelementptr i16, i16* %84, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %92, align 2, !alias.scope !31, !noalias !28
  %93 = or i64 %81, 16
  %94 = getelementptr i16, i16* %26, i64 %93
  %95 = getelementptr i16, i16* %54, i64 %93
  %96 = bitcast i16* %94 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !28
  %98 = getelementptr i16, i16* %94, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !28
  %101 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %101, align 2, !alias.scope !31, !noalias !28
  %102 = getelementptr i16, i16* %95, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %103, align 2, !alias.scope !31, !noalias !28
  %104 = or i64 %81, 32
  %105 = getelementptr i16, i16* %26, i64 %104
  %106 = getelementptr i16, i16* %54, i64 %104
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !28
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !28
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !31, !noalias !28
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !31, !noalias !28
  %115 = or i64 %81, 48
  %116 = getelementptr i16, i16* %26, i64 %115
  %117 = getelementptr i16, i16* %54, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !28
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !28
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !31, !noalias !28
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !31, !noalias !28
  %126 = add i64 %81, 64
  %127 = add i64 %82, -4
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %80, !llvm.loop !33

129:                                              ; preds = %80, %68
  %130 = phi i64 [ 0, %68 ], [ %126, %80 ]
  %131 = icmp eq i64 %76, 0
  br i1 %131, label %148, label %132

132:                                              ; preds = %129, %132
  %133 = phi i64 [ %145, %132 ], [ %130, %129 ]
  %134 = phi i64 [ %146, %132 ], [ %76, %129 ]
  %135 = getelementptr i16, i16* %26, i64 %133
  %136 = getelementptr i16, i16* %54, i64 %133
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !28
  %139 = getelementptr i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !28
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !31, !noalias !28
  %143 = getelementptr i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !31, !noalias !28
  %145 = add i64 %133, 16
  %146 = add i64 %134, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %132, !llvm.loop !35

148:                                              ; preds = %132, %129
  %149 = icmp eq i64 %56, %69
  br i1 %149, label %203, label %150

150:                                              ; preds = %148, %58, %52
  %151 = phi i64 [ %55, %58 ], [ %55, %52 ], [ %70, %148 ]
  %152 = phi i16* [ %26, %58 ], [ %26, %52 ], [ %71, %148 ]
  %153 = phi i16* [ %54, %58 ], [ %54, %52 ], [ %72, %148 ]
  %154 = add i64 %151, -1
  %155 = and i64 %151, 7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %168, label %157

157:                                              ; preds = %150, %157
  %158 = phi i64 [ %163, %157 ], [ %151, %150 ]
  %159 = phi i16* [ %165, %157 ], [ %152, %150 ]
  %160 = phi i16* [ %164, %157 ], [ %153, %150 ]
  %161 = phi i64 [ %166, %157 ], [ %155, %150 ]
  %162 = load i16, i16* %159, align 2
  store i16 %162, i16* %160, align 2
  %163 = add i64 %158, -1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %159, i64 1
  %166 = add i64 %161, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %157, !llvm.loop !36

168:                                              ; preds = %157, %150
  %169 = phi i64 [ %151, %150 ], [ %163, %157 ]
  %170 = phi i16* [ %152, %150 ], [ %165, %157 ]
  %171 = phi i16* [ %153, %150 ], [ %164, %157 ]
  %172 = icmp ult i64 %154, 7
  br i1 %172, label %203, label %173

173:                                              ; preds = %168, %173
  %174 = phi i64 [ %199, %173 ], [ %169, %168 ]
  %175 = phi i16* [ %201, %173 ], [ %170, %168 ]
  %176 = phi i16* [ %200, %173 ], [ %171, %168 ]
  %177 = load i16, i16* %175, align 2
  store i16 %177, i16* %176, align 2
  %178 = getelementptr inbounds i16, i16* %176, i64 1
  %179 = getelementptr inbounds i16, i16* %175, i64 1
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %176, i64 2
  %182 = getelementptr inbounds i16, i16* %175, i64 2
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %176, i64 3
  %185 = getelementptr inbounds i16, i16* %175, i64 3
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %176, i64 4
  %188 = getelementptr inbounds i16, i16* %175, i64 4
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %176, i64 5
  %191 = getelementptr inbounds i16, i16* %175, i64 5
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %176, i64 6
  %194 = getelementptr inbounds i16, i16* %175, i64 6
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %176, i64 7
  %197 = getelementptr inbounds i16, i16* %175, i64 7
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = add i64 %174, -8
  %200 = getelementptr inbounds i16, i16* %176, i64 8
  %201 = getelementptr inbounds i16, i16* %175, i64 8
  %202 = icmp eq i64 %199, 0
  br i1 %202, label %203, label %173, !llvm.loop !37

203:                                              ; preds = %168, %173, %148, %22
  %204 = getelementptr inbounds i8, i8* %17, i64 24
  %205 = bitcast i8* %204 to i64*
  store i64 %4, i64* %205, align 8
  %206 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %207 = getelementptr inbounds i8, i8* %17, i64 32
  %208 = bitcast i8* %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = ptrtoint i8* %17 to i64
  %210 = load %"class.SpellCheck::SpellcheckRequest"*, %"class.SpellCheck::SpellcheckRequest"** %6, align 8
  %211 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %209, i64* %211, align 8
  %212 = icmp eq %"class.SpellCheck::SpellcheckRequest"* %210, null
  br i1 %212, label %232, label %213

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %210, i64 0, i32 1, i32 0, i32 0, i32 0
  %215 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %214, align 8
  store %"class.blink::WebTextCheckingCompletion"* null, %"class.blink::WebTextCheckingCompletion"** %214, align 8
  %216 = icmp eq %"class.blink::WebTextCheckingCompletion"* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.blink::WebTextCheckingCompletion"* %215 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %219 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %219, i64 3
  %221 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %220, align 8
  tail call void %221(%"class.blink::WebTextCheckingCompletion"* nonnull %215) #12
  br label %222

222:                                              ; preds = %217, %213
  %223 = bitcast %"class.SpellCheck::SpellcheckRequest"* %210 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %222
  %228 = bitcast %"class.SpellCheck::SpellcheckRequest"* %210 to i8**
  %229 = load i8*, i8** %228, align 8
  tail call void @_ZdlPv(i8* %229) #13
  br label %230

230:                                              ; preds = %227, %222
  %231 = bitcast %"class.SpellCheck::SpellcheckRequest"* %210 to i8*
  tail call void @_ZdlPv(i8* %231) #13
  br label %232

232:                                              ; preds = %230, %203
  %233 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 0
  %234 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %233, align 8
  %235 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %236 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %235, align 8
  %237 = icmp eq %"class.std::__1::unique_ptr.27"* %234, %236
  br i1 %237, label %250, label %238

238:                                              ; preds = %232, %238
  %239 = phi i1 [ %244, %238 ], [ false, %232 ]
  %240 = phi %"class.std::__1::unique_ptr.27"* [ %245, %238 ], [ %234, %232 ]
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %240, i64 0, i32 0, i32 0, i32 0
  %242 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %241, align 8
  %243 = tail call zeroext i1 @_ZN18SpellcheckLanguage18InitializeIfNeededEv(%class.SpellcheckLanguage* %242) #12
  %244 = or i1 %239, %243
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %240, i64 1
  %246 = icmp eq %"class.std::__1::unique_ptr.27"* %245, %236
  br i1 %246, label %247, label %238

247:                                              ; preds = %238
  br i1 %244, label %250, label %248

248:                                              ; preds = %247
  %249 = load %"class.SpellCheck::SpellcheckRequest"*, %"class.SpellCheck::SpellcheckRequest"** %6, align 8
  store %"class.SpellCheck::SpellcheckRequest"* null, %"class.SpellCheck::SpellcheckRequest"** %6, align 8
  tail call void @_ZN10SpellCheck25PostDelayedSpellCheckTaskEPNS_17SpellcheckRequestE(%class.SpellCheck* %0, %"class.SpellCheck::SpellcheckRequest"* %249)
  br label %250

250:                                              ; preds = %232, %248, %247
  ret void
}

declare zeroext i1 @_ZN18SpellcheckLanguage18InitializeIfNeededEv(%class.SpellcheckLanguage*) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.147* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck17PerformSpellCheckEPNS_17SpellcheckRequestE(%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.blink::WebVector.139", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %5, align 8
  %7 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.27"* %6, %8
  br i1 %9, label %22, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.std::__1::unique_ptr.27"* [ %16, %15 ], [ %6, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %12, align 8
  %14 = tail call zeroext i1 @_ZN18SpellcheckLanguage9IsEnabledEv(%class.SpellcheckLanguage* %13) #12
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %11, i64 1
  %17 = icmp eq %"class.std::__1::unique_ptr.27"* %16, %8
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %15
  %19 = phi %"class.std::__1::unique_ptr.27"* [ %11, %10 ], [ %8, %15 ]
  %20 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %7, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.27"* %19, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %18, %2
  %23 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %23, align 8
  %25 = bitcast %"class.blink::WebTextCheckingCompletion"* %24 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %26 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %26, i64 1
  %28 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %27, align 8
  tail call void %28(%"class.blink::WebTextCheckingCompletion"* %24) #12
  br label %265

29:                                               ; preds = %18
  %30 = bitcast %"class.blink::WebVector.139"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.blink::WebVector.139", %"class.blink::WebVector.139"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::WebVector.139", %"class.blink::WebVector.139"* %3, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #12
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  %34 = bitcast %"class.SpellCheck::SpellcheckRequest"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1, !noalias !38
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  %39 = bitcast %"class.SpellCheck::SpellcheckRequest"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %39, i64 24, i1 false) #12
  br label %215

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8, !noalias !38
  %43 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8, !noalias !38
  %45 = icmp ult i64 %44, 11
  br i1 %45, label %46, label %51

46:                                               ; preds = %40
  %47 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %48 = trunc i64 %44 to i8
  %49 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  store i8 %48, i8* %50, align 1, !alias.scope !38
  br label %68

51:                                               ; preds = %40
  %52 = icmp ugt i64 %44, 9223372036854775791
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %54) #14
  unreachable

55:                                               ; preds = %51
  %56 = add nuw nsw i64 %44, 8
  %57 = and i64 %56, -8
  %58 = icmp slt i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  tail call void @abort() #14
  unreachable

60:                                               ; preds = %55
  %61 = shl i64 %57, 1
  %62 = tail call i8* @_Znwm(i64 %61) #13
  %63 = bitcast i8* %62 to i16*
  %64 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  store i8* %62, i8** %64, align 8, !alias.scope !38
  %65 = or i64 %57, -9223372036854775808
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %65, i64* %66, align 8, !alias.scope !38
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %44, i64* %67, align 8, !alias.scope !38
  br label %68

68:                                               ; preds = %60, %46
  %69 = phi i16* [ %47, %46 ], [ %63, %60 ]
  %70 = add nuw nsw i64 %44, 1
  %71 = add i64 %44, 1
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %162, label %73

73:                                               ; preds = %68
  %74 = add i64 %44, 1
  %75 = getelementptr i16, i16* %69, i64 %74
  %76 = getelementptr i16, i16* %42, i64 %74
  %77 = icmp ult i16* %69, %76
  %78 = icmp ult i16* %42, %75
  %79 = and i1 %77, %78
  br i1 %79, label %162, label %80

80:                                               ; preds = %73
  %81 = and i64 %71, -16
  %82 = sub i64 %70, %81
  %83 = getelementptr i16, i16* %42, i64 %81
  %84 = getelementptr i16, i16* %69, i64 %81
  %85 = add i64 %81, -16
  %86 = lshr exact i64 %85, 4
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp ult i64 %85, 48
  br i1 %89, label %141, label %90

90:                                               ; preds = %80
  %91 = sub nsw i64 %87, %88
  br label %92

92:                                               ; preds = %92, %90
  %93 = phi i64 [ 0, %90 ], [ %138, %92 ]
  %94 = phi i64 [ %91, %90 ], [ %139, %92 ]
  %95 = getelementptr i16, i16* %42, i64 %93
  %96 = getelementptr i16, i16* %69, i64 %93
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !41
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !41
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !44, !noalias !41
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !44, !noalias !41
  %105 = or i64 %93, 16
  %106 = getelementptr i16, i16* %42, i64 %105
  %107 = getelementptr i16, i16* %69, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !41
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !41
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !44, !noalias !41
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !44, !noalias !41
  %116 = or i64 %93, 32
  %117 = getelementptr i16, i16* %42, i64 %116
  %118 = getelementptr i16, i16* %69, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !41
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !41
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !44, !noalias !41
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !44, !noalias !41
  %127 = or i64 %93, 48
  %128 = getelementptr i16, i16* %42, i64 %127
  %129 = getelementptr i16, i16* %69, i64 %127
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !41
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !41
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !44, !noalias !41
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !44, !noalias !41
  %138 = add i64 %93, 64
  %139 = add i64 %94, -4
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %92, !llvm.loop !46

141:                                              ; preds = %92, %80
  %142 = phi i64 [ 0, %80 ], [ %138, %92 ]
  %143 = icmp eq i64 %88, 0
  br i1 %143, label %160, label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %157, %144 ], [ %142, %141 ]
  %146 = phi i64 [ %158, %144 ], [ %88, %141 ]
  %147 = getelementptr i16, i16* %42, i64 %145
  %148 = getelementptr i16, i16* %69, i64 %145
  %149 = bitcast i16* %147 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !41
  %151 = getelementptr i16, i16* %147, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !41
  %154 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %154, align 2, !alias.scope !44, !noalias !41
  %155 = getelementptr i16, i16* %148, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %156, align 2, !alias.scope !44, !noalias !41
  %157 = add i64 %145, 16
  %158 = add i64 %146, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %144, !llvm.loop !47

160:                                              ; preds = %144, %141
  %161 = icmp eq i64 %71, %81
  br i1 %161, label %215, label %162

162:                                              ; preds = %160, %73, %68
  %163 = phi i64 [ %70, %73 ], [ %70, %68 ], [ %82, %160 ]
  %164 = phi i16* [ %42, %73 ], [ %42, %68 ], [ %83, %160 ]
  %165 = phi i16* [ %69, %73 ], [ %69, %68 ], [ %84, %160 ]
  %166 = add i64 %163, -1
  %167 = and i64 %163, 7
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %180, label %169

169:                                              ; preds = %162, %169
  %170 = phi i64 [ %175, %169 ], [ %163, %162 ]
  %171 = phi i16* [ %177, %169 ], [ %164, %162 ]
  %172 = phi i16* [ %176, %169 ], [ %165, %162 ]
  %173 = phi i64 [ %178, %169 ], [ %167, %162 ]
  %174 = load i16, i16* %171, align 2
  store i16 %174, i16* %172, align 2
  %175 = add i64 %170, -1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = getelementptr inbounds i16, i16* %171, i64 1
  %178 = add i64 %173, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %169, !llvm.loop !48

180:                                              ; preds = %169, %162
  %181 = phi i64 [ %163, %162 ], [ %175, %169 ]
  %182 = phi i16* [ %164, %162 ], [ %177, %169 ]
  %183 = phi i16* [ %165, %162 ], [ %176, %169 ]
  %184 = icmp ult i64 %166, 7
  br i1 %184, label %215, label %185

185:                                              ; preds = %180, %185
  %186 = phi i64 [ %211, %185 ], [ %181, %180 ]
  %187 = phi i16* [ %213, %185 ], [ %182, %180 ]
  %188 = phi i16* [ %212, %185 ], [ %183, %180 ]
  %189 = load i16, i16* %187, align 2
  store i16 %189, i16* %188, align 2
  %190 = getelementptr inbounds i16, i16* %188, i64 1
  %191 = getelementptr inbounds i16, i16* %187, i64 1
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %188, i64 2
  %194 = getelementptr inbounds i16, i16* %187, i64 2
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %188, i64 3
  %197 = getelementptr inbounds i16, i16* %187, i64 3
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %188, i64 4
  %200 = getelementptr inbounds i16, i16* %187, i64 4
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %188, i64 5
  %203 = getelementptr inbounds i16, i16* %187, i64 5
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %188, i64 6
  %206 = getelementptr inbounds i16, i16* %187, i64 6
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %188, i64 7
  %209 = getelementptr inbounds i16, i16* %187, i64 7
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = add i64 %186, -8
  %212 = getelementptr inbounds i16, i16* %188, i64 8
  %213 = getelementptr inbounds i16, i16* %187, i64 8
  %214 = icmp eq i64 %211, 0
  br i1 %214, label %215, label %185, !llvm.loop !49

215:                                              ; preds = %180, %185, %160, %38
  %216 = call zeroext i1 @_ZN10SpellCheck19SpellCheckParagraphERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPN5blink9WebVectorINS9_21WebTextCheckingResultEEE(%class.SpellCheck* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.blink::WebVector.139"* nonnull %3)
  %217 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %217, i64 0, i32 1, i32 1
  %219 = load i8, i8* %218, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %215
  %222 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %223 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %223) #13
  br label %224

224:                                              ; preds = %215, %221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  %225 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %226 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %225, align 8
  %227 = bitcast %"class.blink::WebTextCheckingCompletion"* %226 to void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector.139"*)***
  %228 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector.139"*)**, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector.139"*)*** %227, align 8
  %229 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector.139"*)*, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector.139"*)** %228, align 8
  call void %229(%"class.blink::WebTextCheckingCompletion"* %226, %"class.blink::WebVector.139"* nonnull dereferenceable(24) %3) #12
  %230 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %31, align 8
  %231 = icmp eq %"struct.blink::WebTextCheckingResult"* %230, null
  br i1 %231, label %264, label %232

232:                                              ; preds = %224
  %233 = bitcast %"struct.blink::WebTextCheckingResult"* %230 to i8*
  %234 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %32, align 8
  %235 = icmp eq %"struct.blink::WebTextCheckingResult"* %234, %230
  br i1 %235, label %262, label %236

236:                                              ; preds = %232, %257
  %237 = phi %"struct.blink::WebTextCheckingResult"* [ %238, %257 ], [ %234, %232 ]
  %238 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %237, i64 -1
  %239 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %237, i64 -1, i32 3
  %240 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %239, i64 0, i32 0, i32 0, i32 0
  %241 = load %"class.blink::WebString"*, %"class.blink::WebString"** %240, align 8
  %242 = icmp eq %"class.blink::WebString"* %241, null
  br i1 %242, label %257, label %243

243:                                              ; preds = %236
  %244 = bitcast %"class.blink::WebString"* %241 to i8*
  %245 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %237, i64 -1, i32 3, i32 0, i32 0, i32 1
  %246 = load %"class.blink::WebString"*, %"class.blink::WebString"** %245, align 8
  %247 = icmp eq %"class.blink::WebString"* %246, %241
  br i1 %247, label %255, label %248

248:                                              ; preds = %243, %248
  %249 = phi %"class.blink::WebString"* [ %250, %248 ], [ %246, %243 ]
  %250 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %249, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %250) #12
  %251 = icmp eq %"class.blink::WebString"* %250, %241
  br i1 %251, label %252, label %248

252:                                              ; preds = %248
  %253 = bitcast %"class.blink::WebVector"* %239 to i8**
  %254 = load i8*, i8** %253, align 8
  br label %255

255:                                              ; preds = %252, %243
  %256 = phi i8* [ %254, %252 ], [ %244, %243 ]
  store %"class.blink::WebString"* %241, %"class.blink::WebString"** %245, align 8
  call void @_ZdlPv(i8* %256) #13
  br label %257

257:                                              ; preds = %255, %236
  %258 = icmp eq %"struct.blink::WebTextCheckingResult"* %238, %230
  br i1 %258, label %259, label %236

259:                                              ; preds = %257
  %260 = bitcast %"class.blink::WebVector.139"* %3 to i8**
  %261 = load i8*, i8** %260, align 8
  br label %262

262:                                              ; preds = %259, %232
  %263 = phi i8* [ %261, %259 ], [ %233, %232 ]
  store %"struct.blink::WebTextCheckingResult"* %230, %"struct.blink::WebTextCheckingResult"** %32, align 8
  call void @_ZdlPv(i8* %263) #13
  br label %264

264:                                              ; preds = %224, %262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  br label %265

265:                                              ; preds = %264, %22
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck25CreateTextCheckingResultsENS_12ResultFilterEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorI16SpellCheckResultNS5_ISB_EEEEPN5blink9WebVectorINSG_21WebTextCheckingResultEEE(%class.SpellCheck*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.149"* nocapture readonly dereferenceable(24), %"class.blink::WebVector.139"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::WebString", align 8
  %9 = alloca %"class.std::__1::vector.140", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::vector.99", align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.blink::WebTextCheckingResult", align 8
  %15 = alloca %"class.blink::WebVector", align 8
  %16 = bitcast %"class.std::__1::vector.140"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %9, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %9, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %4, i64 0, i32 0, i32 0
  %21 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %4, i64 0, i32 0, i32 1
  %23 = load %struct.SpellCheckResult*, %struct.SpellCheckResult** %22, align 8
  %24 = icmp eq %struct.SpellCheckResult* %21, %23
  br i1 %24, label %81, label %25

25:                                               ; preds = %6
  %26 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::allocator"*
  %28 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 5
  %29 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::vector.99"* %11 to i8*
  %33 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %11, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %11, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %41 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %46 = bitcast %"class.blink::WebString"* %8 to i8*
  %47 = bitcast %"class.blink::WebString"** %34 to i64*
  %48 = icmp eq i32 %1, 2
  %49 = bitcast i64* %12 to i8*
  %50 = bitcast i64* %13 to i8*
  %51 = bitcast %"struct.blink::WebTextCheckingResult"* %14 to i8*
  %52 = bitcast %"class.blink::WebVector"* %15 to i8*
  %53 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %15, i64 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.blink::WebString"** %53 to i8**
  %55 = bitcast %"class.blink::WebVector"* %15 to i8**
  %56 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %15, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"class.blink::WebString"** %53 to i64*
  %58 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %14, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %14, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %14, i64 0, i32 2
  %61 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %14, i64 0, i32 3
  %62 = bitcast %"class.blink::WebVector"* %61 to i8*
  %63 = bitcast %"class.blink::WebVector"* %15 to i64*
  %64 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %14, i64 0, i32 3, i32 0, i32 0, i32 1
  %65 = bitcast %"class.blink::WebString"** %64 to i8**
  %66 = bitcast %"class.blink::WebVector"* %61 to i8**
  %67 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %14, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %15, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.blink::WebString"** %64 to i64*
  %70 = bitcast %"class.blink::WebVector"* %61 to i64*
  %71 = bitcast %"class.blink::WebString"** %67 to i64*
  %72 = bitcast %"struct.blink::WebTextCheckingResult"** %18 to i64*
  %73 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %61, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::vector.99"* %11 to i8**
  %75 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %76 = bitcast %"class.blink::WebString"** %34 to i8**
  %77 = bitcast %"class.blink::WebVector"* %61 to <2 x i64>*
  br label %120

78:                                               ; preds = %586
  %79 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %17, align 8
  %80 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %18, align 8
  br label %81

81:                                               ; preds = %78, %6
  %82 = phi %"struct.blink::WebTextCheckingResult"* [ %80, %78 ], [ null, %6 ]
  %83 = phi %"struct.blink::WebTextCheckingResult"* [ %79, %78 ], [ null, %6 ]
  %84 = getelementptr inbounds %"class.blink::WebVector.139", %"class.blink::WebVector.139"* %5, i64 0, i32 0
  call void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.140"* %84, %"struct.blink::WebTextCheckingResult"* %83, %"struct.blink::WebTextCheckingResult"* %82) #12
  %85 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %17, align 8
  %86 = icmp eq %"struct.blink::WebTextCheckingResult"* %85, null
  br i1 %86, label %119, label %87

87:                                               ; preds = %81
  %88 = bitcast %"struct.blink::WebTextCheckingResult"* %85 to i8*
  %89 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %18, align 8
  %90 = icmp eq %"struct.blink::WebTextCheckingResult"* %89, %85
  br i1 %90, label %117, label %91

91:                                               ; preds = %87, %112
  %92 = phi %"struct.blink::WebTextCheckingResult"* [ %93, %112 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %92, i64 -1, i32 3
  %95 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::WebString"*, %"class.blink::WebString"** %95, align 8
  %97 = icmp eq %"class.blink::WebString"* %96, null
  br i1 %97, label %112, label %98

98:                                               ; preds = %91
  %99 = bitcast %"class.blink::WebString"* %96 to i8*
  %100 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %92, i64 -1, i32 3, i32 0, i32 0, i32 1
  %101 = load %"class.blink::WebString"*, %"class.blink::WebString"** %100, align 8
  %102 = icmp eq %"class.blink::WebString"* %101, %96
  br i1 %102, label %110, label %103

103:                                              ; preds = %98, %103
  %104 = phi %"class.blink::WebString"* [ %105, %103 ], [ %101, %98 ]
  %105 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %104, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %105) #12
  %106 = icmp eq %"class.blink::WebString"* %105, %96
  br i1 %106, label %107, label %103

107:                                              ; preds = %103
  %108 = bitcast %"class.blink::WebVector"* %94 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %98
  %111 = phi i8* [ %109, %107 ], [ %99, %98 ]
  store %"class.blink::WebString"* %96, %"class.blink::WebString"** %100, align 8
  call void @_ZdlPv(i8* %111) #13
  br label %112

112:                                              ; preds = %110, %91
  %113 = icmp eq %"struct.blink::WebTextCheckingResult"* %93, %85
  br i1 %113, label %114, label %91

114:                                              ; preds = %112
  %115 = bitcast %"class.std::__1::vector.140"* %9 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %114, %87
  %118 = phi i8* [ %116, %114 ], [ %88, %87 ]
  store %"struct.blink::WebTextCheckingResult"* %85, %"struct.blink::WebTextCheckingResult"** %18, align 8
  call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %81, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  ret void

120:                                              ; preds = %25, %586
  %121 = phi %struct.SpellCheckResult* [ %21, %25 ], [ %587, %586 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %122 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %121, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %121, i64 0, i32 2
  %126 = load i32, i32* %125, align 8
  %127 = sext i32 %126 to i64
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %3, i64 %124, i64 %127, %"class.std::__1::allocator"* dereferenceable(1) %27) #12
  %128 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = load i8, i8* %30, align 1
  %131 = icmp slt i8 %130, 0
  %132 = load i64, i64* %31, align 8
  %133 = zext i8 %130 to i64
  %134 = select i1 %131, i64 %132, i64 %133
  %135 = call zeroext i1 @_ZN22CustomDictionaryEngine14SpellCheckWordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmm(%class.CustomDictionaryEngine* %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i64 0, i64 %134) #12
  br i1 %135, label %581, label %136

136:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #12, !alias.scope !50
  %137 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %121, i64 0, i32 4, i32 0, i32 0
  %138 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %137, align 8, !noalias !50
  %139 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %121, i64 0, i32 4, i32 0, i32 1
  %140 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %139, align 8, !noalias !50
  %141 = icmp eq %"class.std::__1::basic_string"* %138, %140
  br i1 %141, label %422, label %142

142:                                              ; preds = %136, %414
  %143 = phi %"class.std::__1::basic_string"* [ %415, %414 ], [ %138, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12, !noalias !50
  %144 = bitcast %"class.std::__1::basic_string"* %143 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %144, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false) #12, !noalias !50
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %142
  %149 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %149, i64 24, i1 false) #12
  br label %320

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i16*, i16** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = icmp ult i64 %154, 11
  br i1 %155, label %156, label %158

156:                                              ; preds = %150
  %157 = trunc i64 %154 to i8
  store i8 %157, i8* %43, align 1, !noalias !50
  br label %172

158:                                              ; preds = %150
  %159 = icmp ugt i64 %154, 9223372036854775791
  br i1 %159, label %160, label %162

160:                                              ; preds = %158
  %161 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %161) #14
  unreachable

162:                                              ; preds = %158
  %163 = add nuw nsw i64 %154, 8
  %164 = and i64 %163, -8
  %165 = icmp slt i64 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %162
  call void @abort() #14
  unreachable

167:                                              ; preds = %162
  %168 = shl i64 %164, 1
  %169 = call i8* @_Znwm(i64 %168) #13
  %170 = bitcast i8* %169 to i16*
  store i8* %169, i8** %40, align 8, !noalias !50
  %171 = or i64 %164, -9223372036854775808
  store i64 %171, i64* %39, align 8, !noalias !50
  store i64 %154, i64* %38, align 8, !noalias !50
  br label %172

172:                                              ; preds = %167, %156
  %173 = phi i16* [ %41, %156 ], [ %170, %167 ]
  %174 = add nuw nsw i64 %154, 1
  %175 = add i64 %154, 1
  %176 = icmp ult i64 %175, 16
  br i1 %176, label %267, label %177

177:                                              ; preds = %172
  %178 = getelementptr i16, i16* %173, i64 1
  %179 = getelementptr i16, i16* %178, i64 %154
  %180 = getelementptr i16, i16* %152, i64 1
  %181 = getelementptr i16, i16* %180, i64 %154
  %182 = icmp ult i16* %173, %181
  %183 = icmp ult i16* %152, %179
  %184 = and i1 %182, %183
  br i1 %184, label %267, label %185

185:                                              ; preds = %177
  %186 = and i64 %175, -16
  %187 = sub i64 %174, %186
  %188 = getelementptr i16, i16* %152, i64 %186
  %189 = getelementptr i16, i16* %173, i64 %186
  %190 = add i64 %186, -16
  %191 = lshr exact i64 %190, 4
  %192 = add nuw nsw i64 %191, 1
  %193 = and i64 %192, 3
  %194 = icmp ult i64 %190, 48
  br i1 %194, label %246, label %195

195:                                              ; preds = %185
  %196 = sub nsw i64 %192, %193
  br label %197

197:                                              ; preds = %197, %195
  %198 = phi i64 [ 0, %195 ], [ %243, %197 ]
  %199 = phi i64 [ %196, %195 ], [ %244, %197 ]
  %200 = getelementptr i16, i16* %152, i64 %198
  %201 = getelementptr i16, i16* %173, i64 %198
  %202 = bitcast i16* %200 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !53
  %204 = getelementptr i16, i16* %200, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  %206 = load <8 x i16>, <8 x i16>* %205, align 2, !alias.scope !53
  %207 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %207, align 2, !alias.scope !56, !noalias !58
  %208 = getelementptr i16, i16* %201, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %209, align 2, !alias.scope !56, !noalias !58
  %210 = or i64 %198, 16
  %211 = getelementptr i16, i16* %152, i64 %210
  %212 = getelementptr i16, i16* %173, i64 %210
  %213 = bitcast i16* %211 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !53
  %215 = getelementptr i16, i16* %211, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  %217 = load <8 x i16>, <8 x i16>* %216, align 2, !alias.scope !53
  %218 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %218, align 2, !alias.scope !56, !noalias !58
  %219 = getelementptr i16, i16* %212, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  store <8 x i16> %217, <8 x i16>* %220, align 2, !alias.scope !56, !noalias !58
  %221 = or i64 %198, 32
  %222 = getelementptr i16, i16* %152, i64 %221
  %223 = getelementptr i16, i16* %173, i64 %221
  %224 = bitcast i16* %222 to <8 x i16>*
  %225 = load <8 x i16>, <8 x i16>* %224, align 2, !alias.scope !53
  %226 = getelementptr i16, i16* %222, i64 8
  %227 = bitcast i16* %226 to <8 x i16>*
  %228 = load <8 x i16>, <8 x i16>* %227, align 2, !alias.scope !53
  %229 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %225, <8 x i16>* %229, align 2, !alias.scope !56, !noalias !58
  %230 = getelementptr i16, i16* %223, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %228, <8 x i16>* %231, align 2, !alias.scope !56, !noalias !58
  %232 = or i64 %198, 48
  %233 = getelementptr i16, i16* %152, i64 %232
  %234 = getelementptr i16, i16* %173, i64 %232
  %235 = bitcast i16* %233 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !53
  %237 = getelementptr i16, i16* %233, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  %239 = load <8 x i16>, <8 x i16>* %238, align 2, !alias.scope !53
  %240 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %240, align 2, !alias.scope !56, !noalias !58
  %241 = getelementptr i16, i16* %234, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  store <8 x i16> %239, <8 x i16>* %242, align 2, !alias.scope !56, !noalias !58
  %243 = add i64 %198, 64
  %244 = add i64 %199, -4
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %197, !llvm.loop !59

246:                                              ; preds = %197, %185
  %247 = phi i64 [ 0, %185 ], [ %243, %197 ]
  %248 = icmp eq i64 %193, 0
  br i1 %248, label %265, label %249

249:                                              ; preds = %246, %249
  %250 = phi i64 [ %262, %249 ], [ %247, %246 ]
  %251 = phi i64 [ %263, %249 ], [ %193, %246 ]
  %252 = getelementptr i16, i16* %152, i64 %250
  %253 = getelementptr i16, i16* %173, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !53
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !53
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !56, !noalias !58
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !56, !noalias !58
  %262 = add i64 %250, 16
  %263 = add i64 %251, -1
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %265, label %249, !llvm.loop !60

265:                                              ; preds = %249, %246
  %266 = icmp eq i64 %175, %186
  br i1 %266, label %320, label %267

267:                                              ; preds = %265, %177, %172
  %268 = phi i64 [ %174, %177 ], [ %174, %172 ], [ %187, %265 ]
  %269 = phi i16* [ %152, %177 ], [ %152, %172 ], [ %188, %265 ]
  %270 = phi i16* [ %173, %177 ], [ %173, %172 ], [ %189, %265 ]
  %271 = add i64 %268, -1
  %272 = and i64 %268, 7
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %285, label %274

274:                                              ; preds = %267, %274
  %275 = phi i64 [ %280, %274 ], [ %268, %267 ]
  %276 = phi i16* [ %282, %274 ], [ %269, %267 ]
  %277 = phi i16* [ %281, %274 ], [ %270, %267 ]
  %278 = phi i64 [ %283, %274 ], [ %272, %267 ]
  %279 = load i16, i16* %276, align 2
  store i16 %279, i16* %277, align 2, !noalias !50
  %280 = add i64 %275, -1
  %281 = getelementptr inbounds i16, i16* %277, i64 1
  %282 = getelementptr inbounds i16, i16* %276, i64 1
  %283 = add i64 %278, -1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %274, !llvm.loop !61

285:                                              ; preds = %274, %267
  %286 = phi i64 [ %268, %267 ], [ %280, %274 ]
  %287 = phi i16* [ %269, %267 ], [ %282, %274 ]
  %288 = phi i16* [ %270, %267 ], [ %281, %274 ]
  %289 = icmp ult i64 %271, 7
  br i1 %289, label %320, label %290

290:                                              ; preds = %285, %290
  %291 = phi i64 [ %316, %290 ], [ %286, %285 ]
  %292 = phi i16* [ %318, %290 ], [ %287, %285 ]
  %293 = phi i16* [ %317, %290 ], [ %288, %285 ]
  %294 = load i16, i16* %292, align 2
  store i16 %294, i16* %293, align 2, !noalias !50
  %295 = getelementptr inbounds i16, i16* %293, i64 1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = load i16, i16* %296, align 2
  store i16 %297, i16* %295, align 2, !noalias !50
  %298 = getelementptr inbounds i16, i16* %293, i64 2
  %299 = getelementptr inbounds i16, i16* %292, i64 2
  %300 = load i16, i16* %299, align 2
  store i16 %300, i16* %298, align 2, !noalias !50
  %301 = getelementptr inbounds i16, i16* %293, i64 3
  %302 = getelementptr inbounds i16, i16* %292, i64 3
  %303 = load i16, i16* %302, align 2
  store i16 %303, i16* %301, align 2, !noalias !50
  %304 = getelementptr inbounds i16, i16* %293, i64 4
  %305 = getelementptr inbounds i16, i16* %292, i64 4
  %306 = load i16, i16* %305, align 2
  store i16 %306, i16* %304, align 2, !noalias !50
  %307 = getelementptr inbounds i16, i16* %293, i64 5
  %308 = getelementptr inbounds i16, i16* %292, i64 5
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %307, align 2, !noalias !50
  %310 = getelementptr inbounds i16, i16* %293, i64 6
  %311 = getelementptr inbounds i16, i16* %292, i64 6
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2, !noalias !50
  %313 = getelementptr inbounds i16, i16* %293, i64 7
  %314 = getelementptr inbounds i16, i16* %292, i64 7
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2, !noalias !50
  %316 = add i64 %291, -8
  %317 = getelementptr inbounds i16, i16* %293, i64 8
  %318 = getelementptr inbounds i16, i16* %292, i64 8
  %319 = icmp eq i64 %316, 0
  br i1 %319, label %320, label %290, !llvm.loop !62

320:                                              ; preds = %285, %290, %265, %148
  %321 = load i8, i8* %30, align 1, !noalias !50
  %322 = icmp slt i8 %321, 0
  %323 = load i16*, i16** %44, align 8, !noalias !50
  %324 = load i64, i64* %31, align 8, !noalias !50
  %325 = zext i8 %321 to i64
  %326 = select i1 %322, i16* %323, i16* %45
  %327 = select i1 %322, i64 %324, i64 %325
  %328 = getelementptr inbounds i16, i16* %326, i64 %327
  %329 = icmp eq i64 %327, 0
  br i1 %329, label %368, label %330

330:                                              ; preds = %320
  %331 = load i8, i8* %43, align 1, !noalias !50
  %332 = icmp slt i8 %331, 0
  %333 = load i16*, i16** %37, align 8, !noalias !50
  %334 = select i1 %332, i16* %333, i16* %41
  br label %335

335:                                              ; preds = %360, %330
  %336 = phi i16* [ %334, %330 ], [ %361, %360 ]
  %337 = phi i16* [ %326, %330 ], [ %362, %360 ]
  %338 = load i16, i16* %337, align 2
  switch i16 %338, label %360 [
    i16 8217, label %339
    i16 39, label %339
  ]

339:                                              ; preds = %335, %335
  %340 = load i8, i8* %43, align 1, !noalias !50
  %341 = icmp slt i8 %340, 0
  %342 = load i16*, i16** %37, align 8, !noalias !50
  %343 = load i64, i64* %38, align 8, !noalias !50
  %344 = zext i8 %340 to i64
  %345 = select i1 %341, i16* %342, i16* %41
  %346 = select i1 %341, i64 %343, i64 %344
  %347 = getelementptr inbounds i16, i16* %345, i64 %346
  %348 = icmp eq i16* %336, %347
  br i1 %348, label %355, label %349

349:                                              ; preds = %339, %352
  %350 = phi i16* [ %353, %352 ], [ %336, %339 ]
  %351 = load i16, i16* %350, align 2
  switch i16 %351, label %352 [
    i16 8217, label %355
    i16 39, label %355
  ]

352:                                              ; preds = %349
  %353 = getelementptr inbounds i16, i16* %350, i64 1
  %354 = icmp eq i16* %353, %347
  br i1 %354, label %364, label %349

355:                                              ; preds = %349, %349, %339
  %356 = phi i16* [ %336, %339 ], [ %350, %349 ], [ %350, %349 ]
  %357 = icmp eq i16* %356, %347
  br i1 %357, label %364, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds i16, i16* %356, i64 1
  store i16 %338, i16* %356, align 2
  br label %360

360:                                              ; preds = %358, %335
  %361 = phi i16* [ %336, %335 ], [ %359, %358 ]
  %362 = getelementptr inbounds i16, i16* %337, i64 1
  %363 = icmp eq i16* %362, %328
  br i1 %363, label %364, label %335

364:                                              ; preds = %360, %355, %352
  %365 = load i8, i8* %30, align 1, !noalias !50
  %366 = load i64, i64* %31, align 8, !noalias !50
  %367 = zext i8 %365 to i64
  br label %368

368:                                              ; preds = %364, %320
  %369 = phi i64 [ %367, %364 ], [ %325, %320 ]
  %370 = phi i64 [ %366, %364 ], [ %324, %320 ]
  %371 = phi i8 [ %365, %364 ], [ %321, %320 ]
  %372 = load i8, i8* %43, align 1, !noalias !50
  %373 = icmp slt i8 %372, 0
  %374 = load i64, i64* %38, align 8, !noalias !50
  %375 = zext i8 %372 to i64
  %376 = select i1 %373, i64 %374, i64 %375
  %377 = icmp slt i8 %371, 0
  %378 = select i1 %377, i64 %370, i64 %369
  %379 = icmp eq i64 %376, %378
  br i1 %379, label %380, label %399

380:                                              ; preds = %368
  %381 = icmp eq i64 %376, 0
  br i1 %381, label %409, label %382

382:                                              ; preds = %380
  %383 = load i16*, i16** %44, align 8, !noalias !50
  %384 = select i1 %377, i16* %383, i16* %45
  %385 = load i16*, i16** %37, align 8, !noalias !50
  %386 = select i1 %373, i16* %385, i16* %41
  br label %387

387:                                              ; preds = %394, %382
  %388 = phi i64 [ %395, %394 ], [ %376, %382 ]
  %389 = phi i16* [ %397, %394 ], [ %384, %382 ]
  %390 = phi i16* [ %396, %394 ], [ %386, %382 ]
  %391 = load i16, i16* %390, align 2
  %392 = load i16, i16* %389, align 2
  %393 = icmp eq i16 %392, %391
  br i1 %393, label %394, label %399

394:                                              ; preds = %387
  %395 = add i64 %388, -1
  %396 = getelementptr inbounds i16, i16* %390, i64 1
  %397 = getelementptr inbounds i16, i16* %389, i64 1
  %398 = icmp eq i64 %395, 0
  br i1 %398, label %409, label %387

399:                                              ; preds = %387, %368
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12, !noalias !50
  call void @_ZN5blink9WebString9FromUTF16ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.blink::WebString"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  %400 = load %"class.blink::WebString"*, %"class.blink::WebString"** %34, align 8, !alias.scope !50
  %401 = load %"class.blink::WebString"*, %"class.blink::WebString"** %35, align 8, !alias.scope !50
  %402 = icmp ult %"class.blink::WebString"* %400, %401
  br i1 %402, label %403, label %406

403:                                              ; preds = %399
  call void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"* %400, %"class.blink::WebString"* nonnull dereferenceable(8) %8) #12
  %404 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %400, i64 1
  %405 = ptrtoint %"class.blink::WebString"* %404 to i64
  store i64 %405, i64* %47, align 8, !alias.scope !50
  br label %407

406:                                              ; preds = %399
  call void @_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.99"* nonnull %11, %"class.blink::WebString"* nonnull dereferenceable(8) %8) #12
  br label %407

407:                                              ; preds = %406, %403
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12, !noalias !50
  %408 = load i8, i8* %43, align 1, !noalias !50
  br label %409

409:                                              ; preds = %394, %407, %380
  %410 = phi i8 [ %372, %380 ], [ %408, %407 ], [ %372, %394 ]
  %411 = icmp slt i8 %410, 0
  br i1 %411, label %412, label %414

412:                                              ; preds = %409
  %413 = load i8*, i8** %40, align 8, !noalias !50
  call void @_ZdlPv(i8* %413) #13
  br label %414

414:                                              ; preds = %412, %409
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12, !noalias !50
  %415 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 1
  %416 = icmp eq %"class.std::__1::basic_string"* %415, %140
  br i1 %416, label %417, label %142

417:                                              ; preds = %414
  %418 = load %"class.blink::WebString"*, %"class.blink::WebString"** %33, align 8
  %419 = load %"class.blink::WebString"*, %"class.blink::WebString"** %34, align 8
  %420 = bitcast %"class.blink::WebString"* %419 to i8*
  %421 = icmp eq %"class.blink::WebString"* %418, %419
  br i1 %421, label %422, label %429

422:                                              ; preds = %136, %417
  %423 = phi %"class.blink::WebString"* [ %418, %417 ], [ null, %136 ]
  %424 = phi %"class.blink::WebString"* [ %419, %417 ], [ null, %136 ]
  %425 = phi i8* [ %420, %417 ], [ null, %136 ]
  %426 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %137, align 8
  %427 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %139, align 8
  %428 = icmp eq %"class.std::__1::basic_string"* %426, %427
  br i1 %428, label %429, label %565

429:                                              ; preds = %422, %417
  %430 = phi %"class.blink::WebString"* [ %423, %422 ], [ %418, %417 ]
  %431 = phi %"class.blink::WebString"* [ %424, %422 ], [ %419, %417 ]
  br i1 %48, label %432, label %450

432:                                              ; preds = %429
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12
  store i64 0, i64* %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  store i64 0, i64* %13, align 8
  %433 = icmp eq i32 %129, 0
  br i1 %433, label %434, label %446

434:                                              ; preds = %432
  %435 = load i8, i8* %30, align 1
  %436 = icmp slt i8 %435, 0
  %437 = load i16*, i16** %44, align 8
  %438 = load i64, i64* %31, align 8
  %439 = zext i8 %435 to i64
  %440 = select i1 %436, i16* %437, i16* %45
  %441 = select i1 %436, i64 %438, i64 %439
  %442 = call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck* %0, i16* %440, i64 0, i64 %441, i32 0, i64* nonnull %12, i64* nonnull %13, %"class.std::__1::vector.124"* null) #12
  %443 = zext i1 %442 to i32
  %444 = load %"class.blink::WebString"*, %"class.blink::WebString"** %33, align 8
  %445 = load %"class.blink::WebString"*, %"class.blink::WebString"** %34, align 8
  br label %446

446:                                              ; preds = %434, %432
  %447 = phi %"class.blink::WebString"* [ %431, %432 ], [ %445, %434 ]
  %448 = phi %"class.blink::WebString"* [ %430, %432 ], [ %444, %434 ]
  %449 = phi i32 [ %129, %432 ], [ %443, %434 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12
  br label %450

450:                                              ; preds = %446, %429
  %451 = phi %"class.blink::WebString"* [ %447, %446 ], [ %431, %429 ]
  %452 = phi %"class.blink::WebString"* [ %448, %446 ], [ %430, %429 ]
  %453 = phi i32 [ %449, %446 ], [ %129, %429 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #12
  %454 = load i32, i32* %122, align 4
  %455 = add nsw i32 %454, %2
  %456 = load i32, i32* %125, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #12
  %457 = ptrtoint %"class.blink::WebString"* %452 to i64
  %458 = ptrtoint %"class.blink::WebString"* %451 to i64
  %459 = sub i64 %458, %457
  %460 = ashr exact i64 %459, 3
  %461 = icmp eq i64 %459, 0
  br i1 %461, label %486, label %462

462:                                              ; preds = %450
  %463 = icmp ugt i64 %460, 2305843009213693951
  br i1 %463, label %464, label %466

464:                                              ; preds = %462
  %465 = bitcast %"class.blink::WebVector"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %465) #14
  unreachable

466:                                              ; preds = %462
  %467 = call i8* @_Znwm(i64 %459) #13
  %468 = bitcast i8* %467 to %"class.blink::WebString"*
  store i8* %467, i8** %54, align 8
  store i8* %467, i8** %55, align 8
  %469 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %468, i64 %460
  store %"class.blink::WebString"* %469, %"class.blink::WebString"** %56, align 8
  %470 = ptrtoint i8* %467 to i64
  %471 = icmp eq %"class.blink::WebString"* %452, %451
  br i1 %471, label %481, label %472

472:                                              ; preds = %466, %472
  %473 = phi %"class.blink::WebString"* [ %476, %472 ], [ %468, %466 ]
  %474 = phi %"class.blink::WebString"* [ %475, %472 ], [ %452, %466 ]
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %473, %"class.blink::WebString"* dereferenceable(8) %474) #12
  %475 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %474, i64 1
  %476 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %473, i64 1
  %477 = icmp eq %"class.blink::WebString"* %475, %451
  br i1 %477, label %478, label %472

478:                                              ; preds = %472
  %479 = ptrtoint %"class.blink::WebString"* %476 to i64
  %480 = load i64, i64* %63, align 8
  br label %481

481:                                              ; preds = %478, %466
  %482 = phi i64 [ %470, %466 ], [ %480, %478 ]
  %483 = phi i64 [ %470, %466 ], [ %479, %478 ]
  store i64 %483, i64* %57, align 8
  %484 = inttoptr i64 %482 to %"class.blink::WebString"*
  %485 = inttoptr i64 %483 to %"class.blink::WebString"*
  br label %486

486:                                              ; preds = %450, %481
  %487 = phi %"class.blink::WebString"* [ null, %450 ], [ %485, %481 ]
  %488 = phi %"class.blink::WebString"* [ null, %450 ], [ %484, %481 ]
  %489 = phi i64 [ 0, %450 ], [ %482, %481 ]
  %490 = phi i64 [ 0, %450 ], [ %483, %481 ]
  store i32 %453, i32* %58, align 8
  store i32 %455, i32* %59, align 4
  store i32 %456, i32* %60, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #12
  %491 = sub i64 %490, %489
  %492 = ashr exact i64 %491, 3
  %493 = icmp eq i64 %491, 0
  br i1 %493, label %514, label %494

494:                                              ; preds = %486
  %495 = icmp ugt i64 %492, 2305843009213693951
  br i1 %495, label %496, label %498

496:                                              ; preds = %494
  %497 = bitcast %"class.blink::WebVector"* %61 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %497) #14
  unreachable

498:                                              ; preds = %494
  %499 = call i8* @_Znwm(i64 %491) #13
  %500 = bitcast i8* %499 to %"class.blink::WebString"*
  store i8* %499, i8** %65, align 8
  store i8* %499, i8** %66, align 8
  %501 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %500, i64 %492
  store %"class.blink::WebString"* %501, %"class.blink::WebString"** %67, align 8
  %502 = ptrtoint i8* %499 to i64
  %503 = icmp eq %"class.blink::WebString"* %488, %487
  br i1 %503, label %512, label %504

504:                                              ; preds = %498, %504
  %505 = phi %"class.blink::WebString"* [ %508, %504 ], [ %500, %498 ]
  %506 = phi %"class.blink::WebString"* [ %507, %504 ], [ %488, %498 ]
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %505, %"class.blink::WebString"* dereferenceable(8) %506) #12
  %507 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %506, i64 1
  %508 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %505, i64 1
  %509 = icmp eq %"class.blink::WebString"* %507, %487
  br i1 %509, label %510, label %504

510:                                              ; preds = %504
  %511 = ptrtoint %"class.blink::WebString"* %508 to i64
  br label %512

512:                                              ; preds = %510, %498
  %513 = phi i64 [ %502, %498 ], [ %511, %510 ]
  store i64 %513, i64* %69, align 8
  br label %514

514:                                              ; preds = %486, %512
  %515 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %18, align 8
  %516 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %19, align 8
  %517 = icmp ult %"struct.blink::WebTextCheckingResult"* %515, %516
  br i1 %517, label %518, label %532

518:                                              ; preds = %514
  %519 = bitcast %"struct.blink::WebTextCheckingResult"* %515 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %519, i8* nonnull align 8 %51, i64 12, i1 false) #12
  %520 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %515, i64 0, i32 3
  %521 = bitcast %"class.blink::WebVector"* %520 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %521, i8 0, i64 24, i1 false) #12
  %522 = bitcast %"class.blink::WebVector"* %520 to i64*
  %523 = load i64, i64* %70, align 8
  store i64 %523, i64* %522, align 8
  %524 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %515, i64 0, i32 3, i32 0, i32 0, i32 1
  %525 = bitcast %"class.blink::WebString"** %524 to i64*
  %526 = load i64, i64* %69, align 8
  store i64 %526, i64* %525, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* %77, align 8
  %527 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %515, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %528 = bitcast %"class.blink::WebString"** %527 to i64*
  %529 = load i64, i64* %71, align 8
  store i64 %529, i64* %528, align 8
  store i64 0, i64* %71, align 8
  %530 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %515, i64 1
  %531 = ptrtoint %"struct.blink::WebTextCheckingResult"* %530 to i64
  store i64 %531, i64* %72, align 8
  br label %547

532:                                              ; preds = %514
  call void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.140"* nonnull %9, %"struct.blink::WebTextCheckingResult"* nonnull dereferenceable(40) %14) #12
  %533 = load %"class.blink::WebString"*, %"class.blink::WebString"** %73, align 8
  %534 = icmp eq %"class.blink::WebString"* %533, null
  br i1 %534, label %547, label %535

535:                                              ; preds = %532
  %536 = bitcast %"class.blink::WebString"* %533 to i8*
  %537 = load %"class.blink::WebString"*, %"class.blink::WebString"** %64, align 8
  %538 = icmp eq %"class.blink::WebString"* %537, %533
  br i1 %538, label %545, label %539

539:                                              ; preds = %535, %539
  %540 = phi %"class.blink::WebString"* [ %541, %539 ], [ %537, %535 ]
  %541 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %540, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %541) #12
  %542 = icmp eq %"class.blink::WebString"* %541, %533
  br i1 %542, label %543, label %539

543:                                              ; preds = %539
  %544 = load i8*, i8** %66, align 8
  br label %545

545:                                              ; preds = %543, %535
  %546 = phi i8* [ %544, %543 ], [ %536, %535 ]
  store %"class.blink::WebString"* %533, %"class.blink::WebString"** %64, align 8
  call void @_ZdlPv(i8* %546) #13
  br label %547

547:                                              ; preds = %518, %532, %545
  %548 = load %"class.blink::WebString"*, %"class.blink::WebString"** %68, align 8
  %549 = icmp eq %"class.blink::WebString"* %548, null
  br i1 %549, label %562, label %550

550:                                              ; preds = %547
  %551 = bitcast %"class.blink::WebString"* %548 to i8*
  %552 = load %"class.blink::WebString"*, %"class.blink::WebString"** %53, align 8
  %553 = icmp eq %"class.blink::WebString"* %552, %548
  br i1 %553, label %560, label %554

554:                                              ; preds = %550, %554
  %555 = phi %"class.blink::WebString"* [ %556, %554 ], [ %552, %550 ]
  %556 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %555, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %556) #12
  %557 = icmp eq %"class.blink::WebString"* %556, %548
  br i1 %557, label %558, label %554

558:                                              ; preds = %554
  %559 = load i8*, i8** %55, align 8
  br label %560

560:                                              ; preds = %558, %550
  %561 = phi i8* [ %559, %558 ], [ %551, %550 ]
  store %"class.blink::WebString"* %548, %"class.blink::WebString"** %53, align 8
  call void @_ZdlPv(i8* %561) #13
  br label %562

562:                                              ; preds = %547, %560
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #12
  %563 = load %"class.blink::WebString"*, %"class.blink::WebString"** %33, align 8
  %564 = bitcast %"class.blink::WebString"* %563 to i8*
  br label %565

565:                                              ; preds = %422, %562
  %566 = phi i8* [ %425, %422 ], [ %564, %562 ]
  %567 = phi %"class.blink::WebString"* [ %424, %422 ], [ %563, %562 ]
  %568 = icmp eq %"class.blink::WebString"* %567, null
  br i1 %568, label %580, label %569

569:                                              ; preds = %565
  %570 = load %"class.blink::WebString"*, %"class.blink::WebString"** %34, align 8
  %571 = icmp eq %"class.blink::WebString"* %570, %567
  br i1 %571, label %578, label %572

572:                                              ; preds = %569, %572
  %573 = phi %"class.blink::WebString"* [ %574, %572 ], [ %570, %569 ]
  %574 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %573, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %574) #12
  %575 = icmp eq %"class.blink::WebString"* %574, %567
  br i1 %575, label %576, label %572

576:                                              ; preds = %572
  %577 = load i8*, i8** %74, align 8
  br label %578

578:                                              ; preds = %576, %569
  %579 = phi i8* [ %577, %576 ], [ %566, %569 ]
  store i8* %566, i8** %76, align 8
  call void @_ZdlPv(i8* %579) #13
  br label %580

580:                                              ; preds = %565, %578
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  br label %581

581:                                              ; preds = %120, %580
  %582 = load i8, i8* %30, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %586

584:                                              ; preds = %581
  %585 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %585) #13
  br label %586

586:                                              ; preds = %581, %584
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %587 = getelementptr inbounds %struct.SpellCheckResult, %struct.SpellCheckResult* %121, i64 1
  %588 = icmp eq %struct.SpellCheckResult* %587, %23
  br i1 %588, label %78, label %120
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10SpellCheck19IsSpellcheckEnabledEv(%class.SpellCheck* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !63
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck27AddDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck*, %class.DictionaryUpdateObserver*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9
  %4 = icmp eq %class.DictionaryUpdateObserver* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %class.DictionaryUpdateObserver* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %class.DictionaryUpdateObserver* %1 to i64
  %32 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #14
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #14
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #13
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #12
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SpellCheck30RemoveDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck*, %class.DictionaryUpdateObserver* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %class.DictionaryUpdateObserver* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 9, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #12
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN10SpellCheck13LanguageCountEv(%class.SpellCheck* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4
  %3 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.27"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10SpellCheck20EnabledLanguageCountEv(%class.SpellCheck* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %2, align 8
  %4 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.27"* %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %14, %7 ], [ 0, %1 ]
  %9 = phi %"class.std::__1::unique_ptr.27"* [ %15, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %10, align 8
  %12 = tail call zeroext i1 @_ZN18SpellcheckLanguage9IsEnabledEv(%class.SpellcheckLanguage* %11) #12
  %13 = zext i1 %12 to i64
  %14 = add nuw nsw i64 %8, %13
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %9, i64 1
  %16 = icmp eq %"class.std::__1::unique_ptr.27"* %15, %5
  br i1 %16, label %17, label %7

17:                                               ; preds = %7, %1
  %18 = phi i64 [ 0, %1 ], [ %14, %7 ]
  ret i64 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10SpellCheck23IsWordInSupportedScriptERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellCheck* nocapture readonly, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.anon.160, align 8
  %4 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %4, align 8
  %6 = getelementptr inbounds %class.SpellCheck, %class.SpellCheck* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %6, align 8
  %8 = getelementptr inbounds %class.anon.160, %class.anon.160* %3, i64 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %class.anon.160* %3 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 24, i1 false) #12
  br label %191

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %class.anon.160* %3 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %class.anon.160* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %class.anon.160* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %30) #14
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #13
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %class.anon.160* %3 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %class.anon.160, %class.anon.160* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %class.anon.160, %class.anon.160* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = sub i64 %46, %57
  %59 = getelementptr i16, i16* %18, i64 %57
  %60 = getelementptr i16, i16* %45, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %18, i64 %69
  %72 = getelementptr i16, i16* %45, i64 %69
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !64
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !64
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !67, !noalias !64
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !67, !noalias !64
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %18, i64 %81
  %83 = getelementptr i16, i16* %45, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !64
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !64
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !67, !noalias !64
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !67, !noalias !64
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %18, i64 %92
  %94 = getelementptr i16, i16* %45, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !64
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !64
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !67, !noalias !64
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !67, !noalias !64
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %18, i64 %103
  %105 = getelementptr i16, i16* %45, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !64
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !64
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !67, !noalias !64
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !67, !noalias !64
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !69

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %18, i64 %121
  %124 = getelementptr i16, i16* %45, i64 %121
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !64
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !64
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !67, !noalias !64
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !67, !noalias !64
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !70

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %58, %136 ]
  %140 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %60, %136 ]
  %142 = add i64 %139, -1
  %143 = and i64 %139, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i64 [ %151, %145 ], [ %139, %138 ]
  %147 = phi i16* [ %153, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %152, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %147, align 2
  store i16 %150, i16* %148, align 2
  %151 = add i64 %146, -1
  %152 = getelementptr inbounds i16, i16* %148, i64 1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !71

156:                                              ; preds = %145, %138
  %157 = phi i64 [ %139, %138 ], [ %151, %145 ]
  %158 = phi i16* [ %140, %138 ], [ %153, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %152, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i64 [ %187, %161 ], [ %157, %156 ]
  %163 = phi i16* [ %189, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %188, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %164, i64 1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %164, i64 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %164, i64 3
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %164, i64 4
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %164, i64 5
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %164, i64 6
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %164, i64 7
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %162, -8
  %188 = getelementptr inbounds i16, i16* %164, i64 8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !72

191:                                              ; preds = %156, %161, %136, %13
  %192 = icmp eq %"class.std::__1::unique_ptr.27"* %5, %7
  br i1 %192, label %201, label %193

193:                                              ; preds = %191, %198
  %194 = phi %"class.std::__1::unique_ptr.27"* [ %199, %198 ], [ %5, %191 ]
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %195, align 8
  %197 = call zeroext i1 @_ZNK18SpellcheckLanguage18IsTextInSameScriptERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckLanguage* %196, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  br i1 %197, label %201, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %194, i64 1
  %200 = icmp eq %"class.std::__1::unique_ptr.27"* %199, %7
  br i1 %200, label %201, label %193

201:                                              ; preds = %193, %198, %191
  %202 = phi %"class.std::__1::unique_ptr.27"* [ %5, %191 ], [ %194, %193 ], [ %7, %198 ]
  %203 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %6, align 8
  %204 = icmp ne %"class.std::__1::unique_ptr.27"* %202, %203
  %205 = bitcast %class.anon.160* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %205, i64 0, i32 1, i32 1
  %207 = load i8, i8* %206, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %201
  %210 = bitcast %class.anon.160* %3 to i8**
  %211 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %211) #13
  br label %212

212:                                              ; preds = %201, %209
  ret i1 %204
}

declare void @_ZN4base8internal18WeakReferenceOwnerC1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN4mojo16ReceiverSetStateC1Ev(%"class.mojo::ReceiverSetState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo16ReceiverSetStateD1Ev(%"class.mojo::ReceiverSetState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakReferenceOwnerD1Ev(%"class.base::internal::WeakReferenceOwner"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_123UpdateSpellcheckEnabled5VisitEPN7content11RenderFrameE(%"class.(anonymous namespace)::UpdateSpellcheckEnabled"* nocapture readonly, %"class.content::RenderFrame"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::UpdateSpellcheckEnabled", %"class.(anonymous namespace)::UpdateSpellcheckEnabled"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !63
  %5 = icmp eq i8 %4, 0
  %6 = icmp ne %"class.content::RenderFrame"* %1, null
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = bitcast %"class.content::RenderFrame"* %1 to %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)***
  %10 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %10, i64 15
  %12 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %11, align 8
  %13 = tail call %"class.blink::WebLocalFrame"* %12(%"class.content::RenderFrame"* nonnull %1) #12
  %14 = icmp eq %"class.blink::WebLocalFrame"* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %8
  %16 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %9, align 8
  %17 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %16, i64 15
  %18 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %17, align 8
  %19 = tail call %"class.blink::WebLocalFrame"* %18(%"class.content::RenderFrame"* nonnull %1) #12
  %20 = bitcast %"class.blink::WebLocalFrame"* %19 to void (%"class.blink::WebLocalFrame"*)***
  %21 = load void (%"class.blink::WebLocalFrame"*)**, void (%"class.blink::WebLocalFrame"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::WebLocalFrame"*)*, void (%"class.blink::WebLocalFrame"*)** %21, i64 91
  %23 = load void (%"class.blink::WebLocalFrame"*)*, void (%"class.blink::WebLocalFrame"*)** %22, align 8
  tail call void %23(%"class.blink::WebLocalFrame"* %19) #12
  br label %24

24:                                               ; preds = %8, %2, %15
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123UpdateSpellcheckEnabledD0Ev(%"class.(anonymous namespace)::UpdateSpellcheckEnabled"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::UpdateSpellcheckEnabled"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content18RenderFrameVisitorD2Ev(%"class.content::RenderFrameVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #2

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink9WebString9FromUTF16ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.blink::WebString"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.99"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.blink::WebString"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.99"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.99"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.blink::WebString"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.blink::WebString"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.blink::WebString"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %36, i64 %9
  %38 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %36, i64 %35
  %39 = ptrtoint %"class.blink::WebString"* %38 to i64
  tail call void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"* %37, %"class.blink::WebString"* dereferenceable(8) %1) #12
  %40 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %37, i64 1
  %41 = ptrtoint %"class.blink::WebString"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.blink::WebString"*, %"class.blink::WebString"** %42, align 8
  %44 = load %"class.blink::WebString"*, %"class.blink::WebString"** %3, align 8
  %45 = icmp eq %"class.blink::WebString"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.blink::WebString"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.blink::WebString"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.blink::WebString"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %49, i64 -1
  %52 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %50, i64 -1
  tail call void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"* %51, %"class.blink::WebString"* dereferenceable(8) %52) #12
  %53 = icmp eq %"class.blink::WebString"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.blink::WebString"*, %"class.blink::WebString"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.blink::WebString"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.blink::WebString"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.blink::WebString"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.blink::WebString"*
  %63 = icmp eq %"class.blink::WebString"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.blink::WebString"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %65, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %66) #12
  %67 = icmp eq %"class.blink::WebString"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN5blink9WebStringC1EOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare i64 @_ZN4mojo16ReceiverSetState3AddENSt3__110unique_ptrINS0_13ReceiverStateENS1_14default_deleteIS3_EEEE(%"class.mojo::ReceiverSetState"*, %"class.mojo::ReceiverSetState::ReceiverState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS3_EEEC2EPS3_NS_15PendingReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Receiver"*, %"class.spellcheck::mojom::SpellChecker"*, %"class.mojo::PendingReceiver"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"* %6) #12
  %7 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = ptrtoint %"class.spellcheck::mojom::SpellChecker"* %1 to i64
  %9 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = bitcast %"class.spellcheck::mojom::SpellChecker"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %12) #12
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0
  call void @_ZN4mojo8internal12BindingStateIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"* %17, %"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"class.base::SequencedTaskRunner"* %3) #12
  br label %28

18:                                               ; preds = %4
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %6) #12
  %19 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.53", %"class.base::RefCountedThreadSafe.53"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.53", %"class.base::RefCountedThreadSafe.53"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.53"* %26 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #12
  br label %28

28:                                               ; preds = %25, %20, %18, %16
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD2Ev(%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #12
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD0Ev(%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #12
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #12
  %4 = bitcast %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry10GetContextEv(%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 2
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry20InstallDispatchHooksENSt3__110unique_ptrINS_13MessageFilterENSA_14default_deleteISC_EEEEN4base17RepeatingCallbackIFvjRKNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE(%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*, %"class.mojo::MessageFilter"*, %"class.base::RepeatingCallback.18"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::OnceCallback.346", align 8
  %5 = alloca %"class.base::OnceCallback.346", align 8
  %6 = alloca %"class.base::OnceCallback.346", align 8
  %7 = alloca %"class.base::RepeatingCallback.18", align 8
  %8 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase9SetFilterENSt3__110unique_ptrINS_13MessageFilterENS2_14default_deleteIS4_EEEE(%"class.mojo::internal::BindingStateBase"* %8, %"class.mojo::MessageFilter"* %1) #12
  %9 = getelementptr inbounds %"class.base::RepeatingCallback.18", %"class.base::RepeatingCallback.18"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::RepeatingCallback.18"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::RepeatingCallback.18"* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.346", %"class.base::OnceCallback.346"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::RepeatingCallback.18", %"class.base::RepeatingCallback.18"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %13, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %14) #12
  %15 = bitcast %"class.base::OnceCallback.346"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.base::OnceCallback.346", %"class.base::OnceCallback.346"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback.346"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %19 = bitcast %"class.base::OnceCallback.346"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %20, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.346", %"class.base::OnceCallback.346"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.346"* %4 to i64*
  store i64 %18, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %24 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %21, i64 0, i32 18, i32 0
  %25 = getelementptr inbounds %"class.base::OnceCallback.346", %"class.base::OnceCallback.346"* %4, i64 0, i32 0
  %26 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %24, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %25) #12
  %27 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %21, i64 0, i32 17, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %27) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %28 = getelementptr inbounds %"class.base::OnceCallback.346", %"class.base::OnceCallback.346"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #12
  %29 = getelementptr inbounds %"class.base::RepeatingCallback.18", %"class.base::RepeatingCallback.18"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry15FlushForTestingEv(%"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<spellcheck::mojom::SpellChecker, mojo::RawPtrImplRefTraits<spellcheck::mojom::SpellChecker> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase15FlushForTestingEv(%"class.mojo::internal::BindingStateBase"* %2) #12
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEED0Ev(%"class.spellcheck::mojom::SpellCheckerStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spellcheck::mojom::SpellCheckerStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEE6AcceptEPNS2_7MessageE(%"class.spellcheck::mojom::SpellCheckerStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spellcheck::mojom::SpellCheckerStub", %"class.spellcheck::mojom::SpellCheckerStub"* %0, i64 0, i32 1
  %4 = load %"class.spellcheck::mojom::SpellChecker"*, %"class.spellcheck::mojom::SpellChecker"** %3, align 8
  %5 = icmp eq %"class.spellcheck::mojom::SpellChecker"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN10spellcheck5mojom24SpellCheckerStubDispatch6AcceptEPNS0_12SpellCheckerEPN4mojo7MessageE(%"class.spellcheck::mojom::SpellChecker"* nonnull %4, %"class.mojo::Message"* %1) #12
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN10spellcheck5mojom16SpellCheckerStubIN4mojo19RawPtrImplRefTraitsINS0_12SpellCheckerEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE(%"class.spellcheck::mojom::SpellCheckerStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.spellcheck::mojom::SpellCheckerStub", %"class.spellcheck::mojom::SpellCheckerStub"* %0, i64 0, i32 1
  %5 = load %"class.spellcheck::mojom::SpellChecker"*, %"class.spellcheck::mojom::SpellChecker"** %4, align 8
  %6 = icmp eq %"class.spellcheck::mojom::SpellChecker"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN10spellcheck5mojom24SpellCheckerStubDispatch19AcceptWithResponderEPNS0_12SpellCheckerEPN4mojo7MessageENSt3__110unique_ptrINS4_25MessageReceiverWithStatusENS7_14default_deleteIS9_EEEE(%"class.spellcheck::mojom::SpellChecker"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #12
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #12
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

declare zeroext i1 @_ZN10spellcheck5mojom24SpellCheckerStubDispatch6AcceptEPNS0_12SpellCheckerEPN4mojo7MessageE(%"class.spellcheck::mojom::SpellChecker"*, %"class.mojo::Message"*) local_unnamed_addr #1

declare zeroext i1 @_ZN10spellcheck5mojom24SpellCheckerStubDispatch19AcceptWithResponderEPNS0_12SpellCheckerEPN4mojo7MessageENSt3__110unique_ptrINS4_25MessageReceiverWithStatusENS7_14default_deleteIS9_EEEE(%"class.spellcheck::mojom::SpellChecker"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal12BindingStateIN10spellcheck5mojom12SpellCheckerENS_19RawPtrImplRefTraitsIS4_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 0
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = tail call i8* @_Znwm(i64 8) #13
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10spellcheck5mojom28SpellCheckerRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %12 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5mojom12SpellChecker5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %11, i32 0) #12
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.53", %"class.base::RefCountedThreadSafe.53"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.53", %"class.base::RefCountedThreadSafe.53"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe.53"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #12
  br label %25

20:                                               ; preds = %3
  %21 = tail call i8* @_Znwm(i64 8) #13
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10spellcheck5mojom28SpellCheckerRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %24 = bitcast i8* %21 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5mojom12SpellChecker5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %24, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %23, i32 0) #12
  br label %25

25:                                               ; preds = %20, %6, %17
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*, i8*, %"class.mojo::MessageReceiver"*, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiverWithResponderStatus"*, i32) local_unnamed_addr #1

declare void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN4mojo8internal16BindingStateBase9SetFilterENSt3__110unique_ptrINS_13MessageFilterENS2_14default_deleteIS4_EEEE(%"class.mojo::internal::BindingStateBase"*, %"class.mojo::MessageFilter"*) local_unnamed_addr #1

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4mojo8internal16BindingStateBase15FlushForTestingEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_(%"class.std::__1::__tree.89"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::basic_string.61"* dereferenceable(24), %"class.std::__1::basic_string.61"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_(%"class.std::__1::__tree.89"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string.61"* dereferenceable(24) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %13, label %52

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 56) #13, !noalias !73
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"class.std::__1::basic_string.61"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !73
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::basic_string.61"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #12, !noalias !73
  br label %28

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string.61"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !73
  %26 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !73
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.61"* %23, i8* %25, i64 %27) #12, !noalias !73
  br label %28

28:                                               ; preds = %20, %22
  %29 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8* %14 to %"class.std::__1::__tree_node"*
  %32 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #12
  %34 = bitcast i8* %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree.89", %"class.std::__1::__tree.89"* %0, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %28
  %42 = ptrtoint %"class.std::__1::__tree_node_base"* %39 to i64
  %43 = bitcast %"class.std::__1::__tree.89"* %0 to i64*
  store i64 %42, i64* %43, align 8
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %45

45:                                               ; preds = %41, %28
  %46 = phi %"class.std::__1::__tree_node_base"* [ %32, %28 ], [ %44, %41 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree.89", %"class.std::__1::__tree.89"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %48, %"class.std::__1::__tree_node_base"* %46) #12
  %49 = getelementptr inbounds %"class.std::__1::__tree.89", %"class.std::__1::__tree.89"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %49, align 8
  br label %52

52:                                               ; preds = %45, %4
  %53 = phi i8 [ 1, %45 ], [ 0, %4 ]
  %54 = phi %"class.std::__1::__tree_node"* [ %31, %45 ], [ %11, %4 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %56 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %55, 0
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %56, i8 %53, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_(%"class.std::__1::__tree.89"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::basic_string.61"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.89", %"class.std::__1::__tree.89"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %46, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string.61"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string.61"* %4 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %39 = select i1 %14, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %9
  %43 = icmp ult i64 %27, %19
  br i1 %43, label %46, label %120

44:                                               ; preds = %31
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %5, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree.89", %"class.std::__1::__tree.89"* %0, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %1
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br i1 %49, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %51, %52 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %52, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %1, %52 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1
  %74 = bitcast %"class.std::__1::basic_string.61"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1, i32 1
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = icmp ult i64 %81, %90
  %92 = select i1 %91, i64 %81, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %70
  %95 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8*
  %98 = select i1 %85, i8* %96, i8* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string.61"* %4 to i8*
  %102 = select i1 %77, i8* %100, i8* %101
  %103 = tail call i32 @memcmp(i8* %98, i8* %102, i64 %92) #12
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94, %70
  %106 = icmp ult i64 %90, %81
  br i1 %106, label %109, label %118

107:                                              ; preds = %94
  %108 = icmp slt i32 %103, 0
  br i1 %108, label %109, label %118

109:                                              ; preds = %46, %105, %107
  %110 = phi i64 [ %72, %107 ], [ %72, %105 ], [ %6, %46 ]
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %208

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %110, i64* %115, align 8
  %116 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 1
  br label %208

118:                                              ; preds = %105, %107
  %119 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.89"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string.61"* dereferenceable(24) %4)
  br label %208

120:                                              ; preds = %42
  br i1 %30, label %135, label %121

121:                                              ; preds = %120
  %122 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %127 = select i1 %14, i8* %123, i8* %126
  %128 = bitcast %"class.std::__1::basic_string.61"* %4 to i8*
  %129 = select i1 %23, i8* %125, i8* %128
  br label %130

130:                                              ; preds = %121, %44
  %131 = phi i8* [ %129, %121 ], [ %35, %44 ]
  %132 = phi i8* [ %127, %121 ], [ %39, %44 ]
  %133 = tail call i32 @memcmp(i8* %132, i8* %131, i64 %29) #12
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130, %120
  br i1 %28, label %138, label %205

136:                                              ; preds = %130
  %137 = icmp slt i32 %133, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %135, %136
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %166, label %157

150:                                              ; preds = %138, %150
  %151 = phi %"class.std::__1::__tree_node_base"* [ %153, %150 ], [ %140, %138 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0
  br label %166

157:                                              ; preds = %142, %157
  %158 = phi %"class.std::__1::__tree_end_node"** [ %161, %157 ], [ %145, %142 ]
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to %"class.std::__1::__tree_node_base"**
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 2
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %160
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %155, %142
  %167 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %146, %142 ], [ %162, %157 ]
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, %7
  br i1 %168, label %198, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 5
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = icmp ult i64 %179, %27
  %181 = select i1 %180, i64 %179, i64 %27
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string.61"* %4 to i8*
  %187 = select i1 %23, i8* %185, i8* %186
  %188 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8*
  %191 = select i1 %174, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %187, i8* %191, i64 %181) #12
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %183, %169
  %195 = icmp ult i64 %27, %179
  br i1 %195, label %198, label %203

196:                                              ; preds = %183
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %194, %166, %196
  br i1 %141, label %199, label %201

199:                                              ; preds = %198
  %200 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %200, align 8
  br label %208

201:                                              ; preds = %198
  store %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  br label %208

203:                                              ; preds = %194, %196
  %204 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.89"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string.61"* dereferenceable(24) %4)
  br label %208

205:                                              ; preds = %135, %136
  %206 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %206, align 8
  %207 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %207, align 8
  br label %208

208:                                              ; preds = %199, %201, %203, %112, %114, %118, %205
  %209 = phi %"class.std::__1::__tree_node_base"** [ %3, %205 ], [ %113, %112 ], [ %117, %114 ], [ %119, %118 ], [ %139, %199 ], [ %202, %201 ], [ %204, %203 ]
  ret %"class.std::__1::__tree_node_base"** %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.89"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string.61"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.89", %"class.std::__1::__tree.89"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.89", %"class.std::__1::__tree.89"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string.61"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.61"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string.61"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string.61"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string.61"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.61"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !63
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !63
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !63
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.89"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.89"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.89"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string.61"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string.61", %"class.std::__1::basic_string.61"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare void @_ZN18SpellcheckLanguageC1EPN15service_manager22LocalInterfaceProviderE(%class.SpellcheckLanguage*, %"class.service_manager::LocalInterfaceProvider"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN18SpellcheckLanguageD1Ev(%class.SpellcheckLanguage*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI18SpellcheckLanguageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.27"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.27"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.27"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.27"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.27"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.27"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.27"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.27"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.27"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.27"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.27"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.SpellcheckLanguage** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.27"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.27"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.27"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.27"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !76

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.27"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.27"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.27"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.27"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.27"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.27"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.27"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.27"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.27"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.27"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.27"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.27"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.27"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.27"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.27"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.27"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.27"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.27"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.27"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.27"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.27"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.27"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.27"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.27"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.27"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.27"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.27"*
  %138 = icmp eq %"class.std::__1::unique_ptr.27"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.27"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.27"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.SpellcheckLanguage*, %class.SpellcheckLanguage** %142, align 8
  store %class.SpellcheckLanguage* null, %class.SpellcheckLanguage** %142, align 8
  %144 = icmp eq %class.SpellcheckLanguage* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN18SpellcheckLanguageD1Ev(%class.SpellcheckLanguage* nonnull %143) #12
  %146 = bitcast %class.SpellcheckLanguage* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.27"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #13
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_INS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEENS4_IS8_EEE21__push_back_slow_pathIRKS8_EEvOT_(%"class.std::__1::vector.124"*, %"class.std::__1::vector.126"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.133"* %3 to %"class.std::__1::allocator.136"*
  %5 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::vector.126"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.124"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::vector.124"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #14
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.std::__1::vector.126"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = sdiv exact i64 %20, 24
  %22 = icmp ult i64 %21, 384307168202282325
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = shl nsw i64 %21, 1
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %16, %23
  %29 = phi i64 [ %26, %23 ], [ 768614336404564650, %16 ]
  %30 = mul i64 %29, 24
  %31 = tail call i8* @_Znwm(i64 %30) #13
  %32 = bitcast i8* %31 to %"class.std::__1::vector.126"*
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi i64 [ %29, %28 ], [ 0, %23 ]
  %35 = phi %"class.std::__1::vector.126"* [ %32, %28 ], [ null, %23 ]
  %36 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %35, i64 %11
  %37 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %35, i64 %34
  %38 = ptrtoint %"class.std::__1::vector.126"* %37 to i64
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEENS1_IS7_EEEEEEE9constructIS9_JRKS9_EvEEvRSA_PT_DpOT0_(%"class.std::__1::allocator.136"* dereferenceable(1) %4, %"class.std::__1::vector.126"* %36, %"class.std::__1::vector.126"* dereferenceable(24) %1)
  %39 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %36, i64 1
  %40 = ptrtoint %"class.std::__1::vector.126"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.124", %"class.std::__1::vector.124"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %41, align 8
  %43 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %5, align 8
  %44 = icmp eq %"class.std::__1::vector.126"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = ptrtoint %"class.std::__1::vector.126"* %42 to i64
  br label %71

47:                                               ; preds = %33, %47
  %48 = phi %"class.std::__1::vector.126"* [ %50, %47 ], [ %36, %33 ]
  %49 = phi %"class.std::__1::vector.126"* [ %51, %47 ], [ %43, %33 ]
  %50 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %49, i64 -1
  %52 = bitcast %"class.std::__1::vector.126"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #12
  %53 = bitcast %"class.std::__1::vector.126"* %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.126"* %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %49, i64 -1, i32 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %48, i64 -1, i32 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %49, i64 -1, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.std::__1::basic_string"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %48, i64 -1, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.std::__1::vector.126"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #12
  %67 = icmp eq %"class.std::__1::vector.126"* %51, %42
  br i1 %67, label %68, label %47

68:                                               ; preds = %47
  %69 = load i64, i64* %8, align 8
  %70 = load %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"** %5, align 8
  br label %71

71:                                               ; preds = %45, %68
  %72 = phi %"class.std::__1::vector.126"* [ %42, %45 ], [ %70, %68 ]
  %73 = phi %"class.std::__1::vector.126"* [ %36, %45 ], [ %50, %68 ]
  %74 = phi i64 [ %46, %45 ], [ %69, %68 ]
  %75 = ptrtoint %"class.std::__1::vector.126"* %73 to i64
  store i64 %75, i64* %8, align 8
  store i64 %40, i64* %6, align 8
  store i64 %38, i64* %18, align 8
  %76 = inttoptr i64 %74 to %"class.std::__1::vector.126"*
  %77 = icmp eq %"class.std::__1::vector.126"* %72, %76
  br i1 %77, label %108, label %78

78:                                               ; preds = %71, %106
  %79 = phi %"class.std::__1::vector.126"* [ %80, %106 ], [ %72, %71 ]
  %80 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %79, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %81, align 8
  %83 = icmp eq %"class.std::__1::basic_string"* %82, null
  br i1 %83, label %106, label %84

84:                                               ; preds = %78
  %85 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %86 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %79, i64 -1, i32 0, i32 1
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %86, align 8
  %88 = icmp eq %"class.std::__1::basic_string"* %87, %82
  br i1 %88, label %104, label %89

89:                                               ; preds = %84, %99
  %90 = phi %"class.std::__1::basic_string"* [ %91, %99 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 -1
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::basic_string"* %91 to i8**
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %96, %89
  %100 = icmp eq %"class.std::__1::basic_string"* %91, %82
  br i1 %100, label %101, label %89

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector.126"* %80 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %84
  %105 = phi i8* [ %103, %101 ], [ %85, %84 ]
  store %"class.std::__1::basic_string"* %82, %"class.std::__1::basic_string"** %86, align 8
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %104, %78
  %107 = icmp eq %"class.std::__1::vector.126"* %80, %76
  br i1 %107, label %108, label %78

108:                                              ; preds = %106, %71
  %109 = icmp eq i64 %74, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %74 to i8*
  tail call void @_ZdlPv(i8* %111) #13
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS1_IDsEEEENS1_IS7_EEEEEEE9constructIS9_JRKS9_EvEEvRSA_PT_DpOT0_(%"class.std::__1::allocator.136"* dereferenceable(1), %"class.std::__1::vector.126"*, %"class.std::__1::vector.126"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.126"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.126"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %227, label %13

13:                                               ; preds = %3
  %14 = icmp ugt i64 %11, 768614336404564650
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"class.std::__1::vector.126"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #14
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #13
  %19 = bitcast i8* %18 to %"class.std::__1::basic_string"*
  %20 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %1, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"class.std::__1::vector.126"* %1 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 %11
  %24 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.126", %"class.std::__1::vector.126"* %2, i64 0, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %28 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %29 = ptrtoint i8* %18 to i64
  %30 = icmp eq %"class.std::__1::basic_string"* %26, %27
  br i1 %30, label %225, label %31

31:                                               ; preds = %17
  %32 = bitcast i8* %18 to %"class.std::__1::basic_string"*
  br label %33

33:                                               ; preds = %219, %31
  %34 = phi %"class.std::__1::basic_string"* [ %221, %219 ], [ %32, %31 ]
  %35 = phi %"class.std::__1::basic_string"* [ %220, %219 ], [ %26, %31 ]
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #12
  br label %219

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp ult i64 %47, 11
  br i1 %48, label %49, label %54

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  %51 = trunc i64 %47 to i8
  %52 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  store i8 %51, i8* %53, align 1
  br label %71

54:                                               ; preds = %43
  %55 = icmp ugt i64 %47, 9223372036854775791
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %57) #14
  unreachable

58:                                               ; preds = %54
  %59 = add nuw nsw i64 %47, 8
  %60 = and i64 %59, -8
  %61 = icmp slt i64 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  tail call void @abort() #14
  unreachable

63:                                               ; preds = %58
  %64 = shl i64 %60, 1
  %65 = tail call i8* @_Znwm(i64 %64) #13
  %66 = bitcast i8* %65 to i16*
  %67 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  store i8* %65, i8** %67, align 8
  %68 = or i64 %60, -9223372036854775808
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %47, i64* %70, align 8
  br label %71

71:                                               ; preds = %63, %49
  %72 = phi i16* [ %50, %49 ], [ %66, %63 ]
  %73 = add nuw nsw i64 %47, 1
  %74 = add i64 %47, 1
  %75 = icmp ult i64 %74, 16
  br i1 %75, label %166, label %76

76:                                               ; preds = %71
  %77 = getelementptr i16, i16* %72, i64 1
  %78 = getelementptr i16, i16* %77, i64 %47
  %79 = getelementptr i16, i16* %45, i64 1
  %80 = getelementptr i16, i16* %79, i64 %47
  %81 = icmp ult i16* %72, %80
  %82 = icmp ult i16* %45, %78
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %76
  %85 = and i64 %74, -16
  %86 = sub i64 %73, %85
  %87 = getelementptr i16, i16* %45, i64 %85
  %88 = getelementptr i16, i16* %72, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %45, i64 %97
  %100 = getelementptr i16, i16* %72, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !77
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !77
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !80, !noalias !77
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !80, !noalias !77
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %45, i64 %109
  %111 = getelementptr i16, i16* %72, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !77
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !77
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !80, !noalias !77
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !80, !noalias !77
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %45, i64 %120
  %122 = getelementptr i16, i16* %72, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !77
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !77
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !80, !noalias !77
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !80, !noalias !77
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %45, i64 %131
  %133 = getelementptr i16, i16* %72, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !77
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !77
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !80, !noalias !77
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !80, !noalias !77
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !82

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %45, i64 %149
  %152 = getelementptr i16, i16* %72, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !77
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !77
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !80, !noalias !77
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !80, !noalias !77
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !83

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %74, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %76, %71
  %167 = phi i64 [ %73, %76 ], [ %73, %71 ], [ %86, %164 ]
  %168 = phi i16* [ %45, %76 ], [ %45, %71 ], [ %87, %164 ]
  %169 = phi i16* [ %72, %76 ], [ %72, %71 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !84

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !85

219:                                              ; preds = %184, %189, %164, %40
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 1
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %222 = icmp eq %"class.std::__1::basic_string"* %220, %27
  br i1 %222, label %223, label %33

223:                                              ; preds = %219
  %224 = ptrtoint %"class.std::__1::basic_string"* %221 to i64
  br label %225

225:                                              ; preds = %17, %223
  %226 = phi i64 [ %29, %17 ], [ %224, %223 ]
  store i64 %226, i64* %28, align 8
  br label %227

227:                                              ; preds = %3, %225
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.140"*, %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.blink::WebTextCheckingResult"* %1 to i64
  %5 = ptrtoint %"struct.blink::WebTextCheckingResult"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 40
  %8 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.blink::WebTextCheckingResult"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.140"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 40
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.blink::WebTextCheckingResult"*
  br i1 %15, label %129, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.blink::WebTextCheckingResult"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 40
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %1, i64 %22
  %25 = select i1 %23, %"struct.blink::WebTextCheckingResult"* %24, %"struct.blink::WebTextCheckingResult"* %2
  %26 = icmp eq %"struct.blink::WebTextCheckingResult"* %25, %1
  br i1 %26, label %43, label %27

27:                                               ; preds = %17, %39
  %28 = phi %"struct.blink::WebTextCheckingResult"* [ %41, %39 ], [ %16, %17 ]
  %29 = phi %"struct.blink::WebTextCheckingResult"* [ %40, %39 ], [ %1, %17 ]
  %30 = bitcast %"struct.blink::WebTextCheckingResult"* %28 to i8*
  %31 = bitcast %"struct.blink::WebTextCheckingResult"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 12, i1 false) #12
  %32 = icmp eq %"struct.blink::WebTextCheckingResult"* %28, %29
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %28, i64 0, i32 3, i32 0
  %35 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.blink::WebString"*, %"class.blink::WebString"** %35, align 8
  %37 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %29, i64 0, i32 3, i32 0, i32 0, i32 1
  %38 = load %"class.blink::WebString"*, %"class.blink::WebString"** %37, align 8
  tail call void @_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.99"* %34, %"class.blink::WebString"* %36, %"class.blink::WebString"* %38) #12
  br label %39

39:                                               ; preds = %33, %27
  %40 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %29, i64 1
  %41 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %28, i64 1
  %42 = icmp eq %"struct.blink::WebTextCheckingResult"* %40, %25
  br i1 %42, label %43, label %27

43:                                               ; preds = %39, %17
  %44 = phi %"struct.blink::WebTextCheckingResult"* [ %16, %17 ], [ %41, %39 ]
  br i1 %23, label %45, label %102

45:                                               ; preds = %43
  %46 = load i64, i64* %19, align 8
  %47 = icmp eq %"struct.blink::WebTextCheckingResult"* %25, %2
  br i1 %47, label %100, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %"struct.blink::WebTextCheckingResult"*
  br label %50

50:                                               ; preds = %94, %48
  %51 = phi %"struct.blink::WebTextCheckingResult"* [ %96, %94 ], [ %49, %48 ]
  %52 = phi %"struct.blink::WebTextCheckingResult"* [ %95, %94 ], [ %24, %48 ]
  %53 = bitcast %"struct.blink::WebTextCheckingResult"* %51 to i8*
  %54 = bitcast %"struct.blink::WebTextCheckingResult"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #12
  %55 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 0, i32 3
  %56 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %52, i64 0, i32 3
  %57 = bitcast %"class.blink::WebVector"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  %58 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %52, i64 0, i32 3, i32 0, i32 0, i32 1
  %59 = bitcast %"class.blink::WebString"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::WebVector"* %56 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %94, label %66

66:                                               ; preds = %50
  %67 = icmp ugt i64 %64, 2305843009213693951
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"class.blink::WebVector"* %55 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #14
  unreachable

70:                                               ; preds = %66
  %71 = tail call i8* @_Znwm(i64 %63) #13
  %72 = bitcast i8* %71 to %"class.blink::WebString"*
  %73 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 0, i32 3, i32 0, i32 0, i32 1
  %74 = bitcast %"class.blink::WebString"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.blink::WebVector"* %55 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %72, i64 %64
  %77 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %76, %"class.blink::WebString"** %77, align 8
  %78 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %56, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::WebString"*, %"class.blink::WebString"** %78, align 8
  %80 = load %"class.blink::WebString"*, %"class.blink::WebString"** %58, align 8
  %81 = bitcast %"class.blink::WebString"** %73 to i64*
  %82 = ptrtoint i8* %71 to i64
  %83 = icmp eq %"class.blink::WebString"* %79, %80
  br i1 %83, label %92, label %84

84:                                               ; preds = %70, %84
  %85 = phi %"class.blink::WebString"* [ %88, %84 ], [ %72, %70 ]
  %86 = phi %"class.blink::WebString"* [ %87, %84 ], [ %79, %70 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %85, %"class.blink::WebString"* dereferenceable(8) %86) #12
  %87 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %86, i64 1
  %88 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %85, i64 1
  %89 = icmp eq %"class.blink::WebString"* %87, %80
  br i1 %89, label %90, label %84

90:                                               ; preds = %84
  %91 = ptrtoint %"class.blink::WebString"* %88 to i64
  br label %92

92:                                               ; preds = %90, %70
  %93 = phi i64 [ %82, %70 ], [ %91, %90 ]
  store i64 %93, i64* %81, align 8
  br label %94

94:                                               ; preds = %92, %50
  %95 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %52, i64 1
  %96 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 1
  %97 = icmp eq %"struct.blink::WebTextCheckingResult"* %95, %2
  br i1 %97, label %98, label %50

98:                                               ; preds = %94
  %99 = ptrtoint %"struct.blink::WebTextCheckingResult"* %96 to i64
  br label %100

100:                                              ; preds = %45, %98
  %101 = phi i64 [ %46, %45 ], [ %99, %98 ]
  store i64 %101, i64* %19, align 8
  br label %241

102:                                              ; preds = %43
  %103 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %18, align 8
  %104 = icmp eq %"struct.blink::WebTextCheckingResult"* %103, %44
  br i1 %104, label %128, label %105

105:                                              ; preds = %102, %126
  %106 = phi %"struct.blink::WebTextCheckingResult"* [ %107, %126 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1
  %108 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1, i32 3
  %109 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::WebString"*, %"class.blink::WebString"** %109, align 8
  %111 = icmp eq %"class.blink::WebString"* %110, null
  br i1 %111, label %126, label %112

112:                                              ; preds = %105
  %113 = bitcast %"class.blink::WebString"* %110 to i8*
  %114 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1, i32 3, i32 0, i32 0, i32 1
  %115 = load %"class.blink::WebString"*, %"class.blink::WebString"** %114, align 8
  %116 = icmp eq %"class.blink::WebString"* %115, %110
  br i1 %116, label %124, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.blink::WebString"* [ %119, %117 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %118, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %119) #12
  %120 = icmp eq %"class.blink::WebString"* %119, %110
  br i1 %120, label %121, label %117

121:                                              ; preds = %117
  %122 = bitcast %"class.blink::WebVector"* %108 to i8**
  %123 = load i8*, i8** %122, align 8
  br label %124

124:                                              ; preds = %121, %112
  %125 = phi i8* [ %123, %121 ], [ %113, %112 ]
  store %"class.blink::WebString"* %110, %"class.blink::WebString"** %114, align 8
  tail call void @_ZdlPv(i8* %125) #13
  br label %126

126:                                              ; preds = %124, %105
  %127 = icmp eq %"struct.blink::WebTextCheckingResult"* %107, %44
  br i1 %127, label %128, label %105

128:                                              ; preds = %126, %102
  store %"struct.blink::WebTextCheckingResult"* %44, %"struct.blink::WebTextCheckingResult"** %18, align 8
  br label %241

129:                                              ; preds = %3
  %130 = icmp eq i64 %12, 0
  br i1 %130, label %165, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %12 to i8*
  %133 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 1
  %134 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %133, align 8
  %135 = icmp eq %"struct.blink::WebTextCheckingResult"* %134, %16
  br i1 %135, label %162, label %136

136:                                              ; preds = %131, %157
  %137 = phi %"struct.blink::WebTextCheckingResult"* [ %138, %157 ], [ %134, %131 ]
  %138 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %137, i64 -1
  %139 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %137, i64 -1, i32 3
  %140 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::WebString"*, %"class.blink::WebString"** %140, align 8
  %142 = icmp eq %"class.blink::WebString"* %141, null
  br i1 %142, label %157, label %143

143:                                              ; preds = %136
  %144 = bitcast %"class.blink::WebString"* %141 to i8*
  %145 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %137, i64 -1, i32 3, i32 0, i32 0, i32 1
  %146 = load %"class.blink::WebString"*, %"class.blink::WebString"** %145, align 8
  %147 = icmp eq %"class.blink::WebString"* %146, %141
  br i1 %147, label %155, label %148

148:                                              ; preds = %143, %148
  %149 = phi %"class.blink::WebString"* [ %150, %148 ], [ %146, %143 ]
  %150 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %149, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %150) #12
  %151 = icmp eq %"class.blink::WebString"* %150, %141
  br i1 %151, label %152, label %148

152:                                              ; preds = %148
  %153 = bitcast %"class.blink::WebVector"* %139 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %143
  %156 = phi i8* [ %154, %152 ], [ %144, %143 ]
  store %"class.blink::WebString"* %141, %"class.blink::WebString"** %145, align 8
  tail call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %155, %136
  %158 = icmp eq %"struct.blink::WebTextCheckingResult"* %138, %16
  br i1 %158, label %159, label %136

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::vector.140"* %0 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %159, %131
  %163 = phi i8* [ %161, %159 ], [ %132, %131 ]
  store %"struct.blink::WebTextCheckingResult"* %16, %"struct.blink::WebTextCheckingResult"** %133, align 8
  tail call void @_ZdlPv(i8* %163) #13
  %164 = bitcast %"class.std::__1::vector.140"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 24, i1 false) #12
  br label %165

165:                                              ; preds = %129, %162
  %166 = phi i64 [ %10, %129 ], [ 0, %162 ]
  %167 = icmp ugt i64 %7, 461168601842738790
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = bitcast %"class.std::__1::vector.140"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %169) #14
  unreachable

170:                                              ; preds = %165
  %171 = sdiv exact i64 %166, 40
  %172 = icmp ult i64 %171, 230584300921369395
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = shl nsw i64 %171, 1
  %175 = icmp ult i64 %174, %7
  %176 = select i1 %175, i64 %7, i64 %174
  br label %177

177:                                              ; preds = %173, %170
  %178 = phi i64 [ %176, %173 ], [ 461168601842738790, %170 ]
  %179 = mul i64 %178, 40
  %180 = tail call i8* @_Znwm(i64 %179) #13
  %181 = bitcast i8* %180 to %"struct.blink::WebTextCheckingResult"*
  %182 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 1
  %183 = bitcast %"struct.blink::WebTextCheckingResult"** %182 to i8**
  store i8* %180, i8** %183, align 8
  %184 = bitcast %"class.std::__1::vector.140"* %0 to i8**
  store i8* %180, i8** %184, align 8
  %185 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %181, i64 %178
  store %"struct.blink::WebTextCheckingResult"* %185, %"struct.blink::WebTextCheckingResult"** %8, align 8
  %186 = bitcast %"struct.blink::WebTextCheckingResult"** %182 to i64*
  %187 = ptrtoint i8* %180 to i64
  %188 = icmp eq %"struct.blink::WebTextCheckingResult"* %1, %2
  br i1 %188, label %239, label %189

189:                                              ; preds = %177, %233
  %190 = phi %"struct.blink::WebTextCheckingResult"* [ %235, %233 ], [ %181, %177 ]
  %191 = phi %"struct.blink::WebTextCheckingResult"* [ %234, %233 ], [ %1, %177 ]
  %192 = bitcast %"struct.blink::WebTextCheckingResult"* %190 to i8*
  %193 = bitcast %"struct.blink::WebTextCheckingResult"* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %192, i8* align 8 %193, i64 12, i1 false) #12
  %194 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 0, i32 3
  %195 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %191, i64 0, i32 3
  %196 = bitcast %"class.blink::WebVector"* %194 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 24, i1 false) #12
  %197 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %191, i64 0, i32 3, i32 0, i32 0, i32 1
  %198 = bitcast %"class.blink::WebString"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.blink::WebVector"* %195 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 %199, %201
  %203 = ashr exact i64 %202, 3
  %204 = icmp eq i64 %202, 0
  br i1 %204, label %233, label %205

205:                                              ; preds = %189
  %206 = icmp ugt i64 %203, 2305843009213693951
  br i1 %206, label %207, label %209

207:                                              ; preds = %205
  %208 = bitcast %"class.blink::WebVector"* %194 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %208) #14
  unreachable

209:                                              ; preds = %205
  %210 = tail call i8* @_Znwm(i64 %202) #13
  %211 = bitcast i8* %210 to %"class.blink::WebString"*
  %212 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 0, i32 3, i32 0, i32 0, i32 1
  %213 = bitcast %"class.blink::WebString"** %212 to i8**
  store i8* %210, i8** %213, align 8
  %214 = bitcast %"class.blink::WebVector"* %194 to i8**
  store i8* %210, i8** %214, align 8
  %215 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %211, i64 %203
  %216 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %215, %"class.blink::WebString"** %216, align 8
  %217 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %195, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.blink::WebString"*, %"class.blink::WebString"** %217, align 8
  %219 = load %"class.blink::WebString"*, %"class.blink::WebString"** %197, align 8
  %220 = bitcast %"class.blink::WebString"** %212 to i64*
  %221 = ptrtoint i8* %210 to i64
  %222 = icmp eq %"class.blink::WebString"* %218, %219
  br i1 %222, label %231, label %223

223:                                              ; preds = %209, %223
  %224 = phi %"class.blink::WebString"* [ %227, %223 ], [ %211, %209 ]
  %225 = phi %"class.blink::WebString"* [ %226, %223 ], [ %218, %209 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %224, %"class.blink::WebString"* dereferenceable(8) %225) #12
  %226 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %225, i64 1
  %227 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %224, i64 1
  %228 = icmp eq %"class.blink::WebString"* %226, %219
  br i1 %228, label %229, label %223

229:                                              ; preds = %223
  %230 = ptrtoint %"class.blink::WebString"* %227 to i64
  br label %231

231:                                              ; preds = %229, %209
  %232 = phi i64 [ %221, %209 ], [ %230, %229 ]
  store i64 %232, i64* %220, align 8
  br label %233

233:                                              ; preds = %231, %189
  %234 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %191, i64 1
  %235 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 1
  %236 = icmp eq %"struct.blink::WebTextCheckingResult"* %234, %2
  br i1 %236, label %237, label %189

237:                                              ; preds = %233
  %238 = ptrtoint %"struct.blink::WebTextCheckingResult"* %235 to i64
  br label %239

239:                                              ; preds = %177, %237
  %240 = phi i64 [ %187, %177 ], [ %238, %237 ]
  store i64 %240, i64* %186, align 8
  br label %241

241:                                              ; preds = %100, %128, %239
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.99"*, %"class.blink::WebString"*, %"class.blink::WebString"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.blink::WebString"* %1 to i64
  %5 = ptrtoint %"class.blink::WebString"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.blink::WebString"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.99"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.blink::WebString"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.blink::WebString"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %1, i64 %22
  %25 = select i1 %23, %"class.blink::WebString"* %24, %"class.blink::WebString"* %2
  %26 = icmp eq %"class.blink::WebString"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.blink::WebString"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.blink::WebString"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %29) #12
  %31 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %29, i64 1
  %32 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %28, i64 1
  %33 = icmp eq %"class.blink::WebString"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.blink::WebString"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.blink::WebString"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.blink::WebString"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"class.blink::WebString"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"class.blink::WebString"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %42, %"class.blink::WebString"* dereferenceable(8) %43) #12
  %44 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %43, i64 1
  %45 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %42, i64 1
  %46 = icmp eq %"class.blink::WebString"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"class.blink::WebString"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %113

51:                                               ; preds = %34
  %52 = load %"class.blink::WebString"*, %"class.blink::WebString"** %18, align 8
  %53 = icmp eq %"class.blink::WebString"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"class.blink::WebString"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %55, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %56) #12
  %57 = icmp eq %"class.blink::WebString"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"class.blink::WebString"* %35, %"class.blink::WebString"** %18, align 8
  br label %113

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 1
  %64 = load %"class.blink::WebString"*, %"class.blink::WebString"** %63, align 8
  %65 = icmp eq %"class.blink::WebString"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"class.blink::WebString"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %67, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %68) #12
  %69 = icmp eq %"class.blink::WebString"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector.99"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"class.blink::WebString"* %16, %"class.blink::WebString"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #13
  %75 = bitcast %"class.std::__1::vector.99"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #12
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector.99"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #14
  unreachable

81:                                               ; preds = %76
  %82 = ashr exact i64 %77, 3
  %83 = icmp ult i64 %82, 1152921504606846975
  br i1 %83, label %84, label %91

84:                                               ; preds = %81
  %85 = ashr exact i64 %77, 2
  %86 = icmp ult i64 %85, %7
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = icmp ugt i64 %85, 2305843009213693951
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = bitcast %"class.std::__1::vector.99"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #14
  unreachable

91:                                               ; preds = %84, %81, %87
  %92 = phi i64 [ %85, %87 ], [ 2305843009213693951, %81 ], [ %7, %84 ]
  %93 = shl i64 %92, 3
  %94 = tail call i8* @_Znwm(i64 %93) #13
  %95 = bitcast i8* %94 to %"class.blink::WebString"*
  %96 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 1
  %97 = bitcast %"class.blink::WebString"** %96 to i8**
  store i8* %94, i8** %97, align 8
  %98 = bitcast %"class.std::__1::vector.99"* %0 to i8**
  store i8* %94, i8** %98, align 8
  %99 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %95, i64 %92
  store %"class.blink::WebString"* %99, %"class.blink::WebString"** %8, align 8
  %100 = bitcast %"class.blink::WebString"** %96 to i64*
  %101 = ptrtoint i8* %94 to i64
  %102 = icmp eq %"class.blink::WebString"* %1, %2
  br i1 %102, label %111, label %103

103:                                              ; preds = %91, %103
  %104 = phi %"class.blink::WebString"* [ %107, %103 ], [ %95, %91 ]
  %105 = phi %"class.blink::WebString"* [ %106, %103 ], [ %1, %91 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %104, %"class.blink::WebString"* dereferenceable(8) %105) #12
  %106 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %105, i64 1
  %107 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %104, i64 1
  %108 = icmp eq %"class.blink::WebString"* %106, %2
  br i1 %108, label %109, label %103

109:                                              ; preds = %103
  %110 = ptrtoint %"class.blink::WebString"* %107 to i64
  br label %111

111:                                              ; preds = %91, %109
  %112 = phi i64 [ %101, %91 ], [ %110, %109 ]
  store i64 %112, i64* %100, align 8
  br label %113

113:                                              ; preds = %49, %58, %111
  ret void
}

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.140"*, %"struct.blink::WebTextCheckingResult"* dereferenceable(40)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.blink::WebTextCheckingResult"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.140"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.140"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.blink::WebTextCheckingResult"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.blink::WebTextCheckingResult"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.blink::WebTextCheckingResult"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %33, i64 %32
  %36 = ptrtoint %"struct.blink::WebTextCheckingResult"* %35 to i64
  %37 = bitcast %"struct.blink::WebTextCheckingResult"* %34 to i8*
  %38 = bitcast %"struct.blink::WebTextCheckingResult"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false) #12
  %39 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %33, i64 %9, i32 3
  %40 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %1, i64 0, i32 3
  %41 = bitcast %"class.blink::WebVector"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #12
  %42 = bitcast %"class.blink::WebVector"* %39 to i64*
  %43 = bitcast %"class.blink::WebVector"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %42, align 8
  store i64 0, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %33, i64 %9, i32 3, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %47 = bitcast %"class.blink::WebString"** %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::WebString"** %46 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %47, align 8
  store i64 %48, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %33, i64 %9, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %1, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.blink::WebString"** %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::WebString"** %52 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %53, align 8
  store i64 %54, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %34, i64 1
  %58 = ptrtoint %"struct.blink::WebTextCheckingResult"* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.140", %"class.std::__1::vector.140"* %0, i64 0, i32 0, i32 0
  %60 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %59, align 8
  %61 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %3, align 8
  %62 = icmp eq %"struct.blink::WebTextCheckingResult"* %61, %60
  br i1 %62, label %63, label %65

63:                                               ; preds = %31
  %64 = ptrtoint %"struct.blink::WebTextCheckingResult"* %60 to i64
  br label %94

65:                                               ; preds = %31, %65
  %66 = phi %"struct.blink::WebTextCheckingResult"* [ %68, %65 ], [ %34, %31 ]
  %67 = phi %"struct.blink::WebTextCheckingResult"* [ %69, %65 ], [ %61, %31 ]
  %68 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %66, i64 -1
  %69 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %67, i64 -1
  %70 = bitcast %"struct.blink::WebTextCheckingResult"* %68 to i8*
  %71 = bitcast %"struct.blink::WebTextCheckingResult"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 12, i1 false) #12
  %72 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %66, i64 -1, i32 3
  %73 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %67, i64 -1, i32 3
  %74 = bitcast %"class.blink::WebVector"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #12
  %75 = bitcast %"class.blink::WebVector"* %72 to i64*
  %76 = bitcast %"class.blink::WebVector"* %73 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %75, align 8
  store i64 0, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %66, i64 -1, i32 3, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %67, i64 -1, i32 3, i32 0, i32 0, i32 1
  %80 = bitcast %"class.blink::WebString"** %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.blink::WebString"** %79 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %80, align 8
  store i64 %81, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %66, i64 -1, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %67, i64 -1, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %86 = bitcast %"class.blink::WebString"** %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::WebString"** %85 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = icmp eq %"struct.blink::WebTextCheckingResult"* %69, %60
  br i1 %90, label %91, label %65

91:                                               ; preds = %65
  %92 = load i64, i64* %6, align 8
  %93 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %3, align 8
  br label %94

94:                                               ; preds = %63, %91
  %95 = phi %"struct.blink::WebTextCheckingResult"* [ %60, %63 ], [ %93, %91 ]
  %96 = phi %"struct.blink::WebTextCheckingResult"* [ %34, %63 ], [ %68, %91 ]
  %97 = phi i64 [ %64, %63 ], [ %92, %91 ]
  %98 = ptrtoint %"struct.blink::WebTextCheckingResult"* %96 to i64
  store i64 %98, i64* %6, align 8
  store i64 %58, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %99 = inttoptr i64 %97 to %"struct.blink::WebTextCheckingResult"*
  %100 = icmp eq %"struct.blink::WebTextCheckingResult"* %95, %99
  br i1 %100, label %124, label %101

101:                                              ; preds = %94, %122
  %102 = phi %"struct.blink::WebTextCheckingResult"* [ %103, %122 ], [ %95, %94 ]
  %103 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %102, i64 -1
  %104 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %102, i64 -1, i32 3
  %105 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::WebString"*, %"class.blink::WebString"** %105, align 8
  %107 = icmp eq %"class.blink::WebString"* %106, null
  br i1 %107, label %122, label %108

108:                                              ; preds = %101
  %109 = bitcast %"class.blink::WebString"* %106 to i8*
  %110 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %102, i64 -1, i32 3, i32 0, i32 0, i32 1
  %111 = load %"class.blink::WebString"*, %"class.blink::WebString"** %110, align 8
  %112 = icmp eq %"class.blink::WebString"* %111, %106
  br i1 %112, label %120, label %113

113:                                              ; preds = %108, %113
  %114 = phi %"class.blink::WebString"* [ %115, %113 ], [ %111, %108 ]
  %115 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %114, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %115) #12
  %116 = icmp eq %"class.blink::WebString"* %115, %106
  br i1 %116, label %117, label %113

117:                                              ; preds = %113
  %118 = bitcast %"class.blink::WebVector"* %104 to i8**
  %119 = load i8*, i8** %118, align 8
  br label %120

120:                                              ; preds = %117, %108
  %121 = phi i8* [ %119, %117 ], [ %109, %108 ]
  store %"class.blink::WebString"* %106, %"class.blink::WebString"** %110, align 8
  tail call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %120, %101
  %123 = icmp eq %"struct.blink::WebTextCheckingResult"* %103, %99
  br i1 %123, label %124, label %101

124:                                              ; preds = %122, %94
  %125 = icmp eq i64 %97, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = inttoptr i64 %97 to i8*
  tail call void @_ZdlPv(i8* %127) #13
  br label %128

128:                                              ; preds = %124, %126
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.SpellCheck::SpellcheckRequest"**
  %7 = load %"class.SpellCheck::SpellcheckRequest"*, %"class.SpellCheck::SpellcheckRequest"** %6, align 8
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #12
  br i1 %9, label %10, label %45

10:                                               ; preds = %1
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %class.SpellCheck**
  %13 = load %class.SpellCheck*, %class.SpellCheck** %12, align 8
  %14 = icmp eq %class.SpellCheck* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %19 = bitcast void ()** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #12
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %22, %15
  %26 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #12
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = select i1 %26, i8* %28, i8* null
  %30 = getelementptr inbounds i8, i8* %29, i64 %20
  %31 = bitcast i8* %30 to %class.SpellCheck*
  %32 = and i64 %17, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %25
  %35 = bitcast i8* %30 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = add i64 %17, -1
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to void (%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"*)**
  %40 = load void (%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"*)*, void (%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"*)** %39, align 8
  br label %43

41:                                               ; preds = %25
  %42 = inttoptr i64 %17 to void (%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"*)*
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi void (%class.SpellCheck*, %"class.SpellCheck::SpellcheckRequest"*)* [ %40, %34 ], [ %42, %41 ]
  call void %44(%class.SpellCheck* %31, %"class.SpellCheck::SpellcheckRequest"* %7) #12
  br label %45

45:                                               ; preds = %1, %10, %43
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM10SpellCheckFvPNS2_17SpellcheckRequestEEJNS_7WeakPtrIS2_EENS0_12OwnedWrapperIS3_NSt3__114default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.SpellCheck::SpellcheckRequest"**
  %6 = load %"class.SpellCheck::SpellcheckRequest"*, %"class.SpellCheck::SpellcheckRequest"** %5, align 8
  store %"class.SpellCheck::SpellcheckRequest"* null, %"class.SpellCheck::SpellcheckRequest"** %5, align 8
  %7 = icmp eq %"class.SpellCheck::SpellcheckRequest"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.SpellCheck::SpellcheckRequest", %"class.SpellCheck::SpellcheckRequest"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %9, align 8
  store %"class.blink::WebTextCheckingCompletion"* null, %"class.blink::WebTextCheckingCompletion"** %9, align 8
  %11 = icmp eq %"class.blink::WebTextCheckingCompletion"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::WebTextCheckingCompletion"* %10 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %14 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %14, i64 3
  %16 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %15, align 8
  tail call void %16(%"class.blink::WebTextCheckingCompletion"* nonnull %10) #12
  br label %17

17:                                               ; preds = %12, %8
  %18 = bitcast %"class.SpellCheck::SpellcheckRequest"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = bitcast %"class.SpellCheck::SpellcheckRequest"* %6 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %22, %17
  %26 = bitcast %"class.SpellCheck::SpellcheckRequest"* %6 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %3, %25
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %28 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %29) #12
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.SpellCheck**
  %9 = load %class.SpellCheck*, %class.SpellCheck** %8, align 8
  %10 = icmp ne %class.SpellCheck* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN18SpellcheckLanguage9IsEnabledEv(%class.SpellcheckLanguage*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #14
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #13
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !86
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !86
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !89, !noalias !86
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !89, !noalias !86
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !86
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !86
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !89, !noalias !86
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !89, !noalias !86
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !86
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !86
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !89, !noalias !86
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !89, !noalias !86
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !86
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !86
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !89, !noalias !86
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !89, !noalias !86
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !91

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !86
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !86
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !89, !noalias !86
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !89, !noalias !86
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !92

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !93

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !94

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK18SpellcheckLanguage18IsTextInSameScriptERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%class.SpellcheckLanguage*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base15SupportsWeakPtrI10SpellCheckE9AsWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZN4base15SupportsWeakPtrI10SpellCheckE9AsWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM10SpellCheckFvPNS3_17SpellcheckRequestEEJNS_7WeakPtrIS3_EENS0_12OwnedWrapperIS4_NSt3__114default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIM10SpellCheckFvPNS1_17SpellcheckRequestEEJNS_7WeakPtrIS1_EENS_8internal12OwnedWrapperIS2_NSt3__114default_deleteIS2_EEEEEEENS_12OnceCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIM10SpellCheckFvPNS1_17SpellcheckRequestEEJNS_7WeakPtrIS1_EENS_8internal12OwnedWrapperIS2_NSt3__114default_deleteIS2_EEEEEEENS_12OnceCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN12_GLOBAL__N_126ConvertToWebStringFromUtf8ERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEE: argument 0"}
!12 = distinct !{!12, !"_ZN12_GLOBAL__N_126ConvertToWebStringFromUtf8ERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEE"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!16 = distinct !{!16, !17, !"_ZZN12_GLOBAL__N_126ConvertToWebStringFromUtf8ERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEEENK3$_3clERKS7_: argument 0"}
!17 = distinct !{!17, !"_ZZN12_GLOBAL__N_126ConvertToWebStringFromUtf8ERKNSt3__13setINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_4lessIS7_EENS5_IS7_EEEEENK3$_3clERKS7_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4base12ObserverListI24DictionaryUpdateObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4base12ObserverListI24DictionaryUpdateObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base12ObserverListI24DictionaryUpdateObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base12ObserverListI24DictionaryUpdateObserverLb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !25}
!27 = !{!"branch_weights", i32 2000, i32 1}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !34}
!34 = !{!"llvm.loop.isvectorized", i32 1}
!35 = distinct !{!35, !25}
!36 = distinct !{!36, !25}
!37 = distinct !{!37, !34}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN10SpellCheck17SpellcheckRequest4textEv: argument 0"}
!40 = distinct !{!40, !"_ZN10SpellCheck17SpellcheckRequest4textEv"}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !34}
!47 = distinct !{!47, !25}
!48 = distinct !{!48, !25}
!49 = distinct !{!49, !34}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN12_GLOBAL__N_128FilterReplacementSuggestionsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEE: argument 0"}
!52 = distinct !{!52, !"_ZN12_GLOBAL__N_128FilterReplacementSuggestionsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS0_6vectorIS6_NS4_IS6_EEEE"}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = !{!51, !54}
!59 = distinct !{!59, !34}
!60 = distinct !{!60, !25}
!61 = distinct !{!61, !25}
!62 = distinct !{!62, !34}
!63 = !{i8 0, i8 2}
!64 = !{!65}
!65 = distinct !{!65, !66}
!66 = distinct !{!66, !"LVerDomain"}
!67 = !{!68}
!68 = distinct !{!68, !66}
!69 = distinct !{!69, !34}
!70 = distinct !{!70, !25}
!71 = distinct !{!71, !25}
!72 = distinct !{!72, !34}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!75 = distinct !{!75, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
!76 = distinct !{!76, !25}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !34}
!83 = distinct !{!83, !25}
!84 = distinct !{!84, !25}
!85 = distinct !{!85, !34}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !34}
!92 = distinct !{!92, !25}
!93 = distinct !{!93, !25}
!94 = distinct !{!94, !34}
