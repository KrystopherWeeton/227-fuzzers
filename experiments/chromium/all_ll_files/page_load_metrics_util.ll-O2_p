; ModuleID = '../../components/page_load_metrics/browser/page_load_metrics_util.cc'
source_filename = "../../components/page_load_metrics/browser/page_load_metrics_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.page_load_metrics::PageLoadMetricsObserverDelegate" = type { i32 (...)** }
%"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore" = type <{ %"class.absl::optional", i8, [7 x i8] }>
%"struct.page_load_metrics::UserInitiatedInfo" = type { i8, i8, i8 }
%"class.page_load_metrics::mojom::FrameMetadata" = type { i32, %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.page_load_metrics::mojom::FrameIntersectionUpdate"* }
%"class.page_load_metrics::mojom::FrameIntersectionUpdate" = type { %"class.absl::optional.0" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.GURL* }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }

@.str = private unnamed_addr constant [4 x i8] c"www\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"q=\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"/search\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"/webhp\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"/custom\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"/url\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"source=web\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"/searchurl/r.html\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"?#\00", align 1
@switch.table._ZN17page_load_metrics16GetPageAbortInfoERKNS_31PageLoadMetricsObserverDelegateE = private unnamed_addr constant [9 x i64] [i64 1, i64 2, i64 1, i64 3, i64 4, i64 5, i64 1, i64 1, i64 7], align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics47WasStartedInForegroundOptionalEventInForegroundERKN4absl8optionalIN4base9TimeDeltaEEERKNS_31PageLoadMetricsObserverDelegateE(%"class.absl::optional"* nocapture readonly dereferenceable(16), %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1 to i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %4 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %4, i64 5
  %6 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1 to %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %14 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %14, i64 2
  %16 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %15, align 8
  %17 = tail call dereferenceable(16) %"class.absl::optional"* %16(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %12
  %22 = load i8, i8* %9, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

25:                                               ; preds = %21
  %26 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %13, align 8
  %27 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %26, i64 2
  %28 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %27, align 8
  %29 = tail call dereferenceable(16) %"class.absl::optional"* %28(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %25
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp sle i64 %38, %36
  br label %40

40:                                               ; preds = %12, %8, %34, %2
  %41 = phi i1 [ false, %8 ], [ false, %2 ], [ true, %12 ], [ %39, %34 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics75WasStartedInForegroundOptionalEventInForegroundAfterBackForwardCacheRestoreERKN4absl8optionalIN4base9TimeDeltaEEERKNS_31PageLoadMetricsObserverDelegateEm(%"class.absl::optional"* nocapture readonly dereferenceable(16), %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* dereferenceable(8), i64) local_unnamed_addr #0 {
  %4 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1 to %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*, i64)***
  %5 = load %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*, i64)**, %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*, i64)*** %4, align 8
  %6 = getelementptr inbounds %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*, i64)*, %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*, i64)** %5, i64 4
  %7 = load %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*, i64)*, %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*, i64)** %6, align 8
  %8 = tail call dereferenceable(24) %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* %7(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1, i64 %2) #8
  %9 = getelementptr inbounds %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore", %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = getelementptr inbounds %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore", %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore", %"struct.page_load_metrics::PageLoadMetricsObserverDelegate::BackForwardCacheRestore"* %8, i64 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = icmp eq i8 %10, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp sle i64 %24, %12
  br label %26

26:                                               ; preds = %20, %16, %3, %22
  %27 = phi i1 [ false, %16 ], [ false, %3 ], [ true, %20 ], [ %25, %22 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics47WasStartedInBackgroundOptionalEventInForegroundERKN4absl8optionalIN4base9TimeDeltaEEERKNS_31PageLoadMetricsObserverDelegateE(%"class.absl::optional"* nocapture readonly dereferenceable(16), %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1 to i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %4 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %4, i64 5
  %6 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  br i1 %7, label %66, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %66, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1 to %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %14 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %14, i64 3
  %16 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %15, align 8
  %17 = tail call dereferenceable(16) %"class.absl::optional"* %16(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %66, label %21

21:                                               ; preds = %12
  %22 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %13, align 8
  %23 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %22, i64 3
  %24 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %23, align 8
  %25 = tail call dereferenceable(16) %"class.absl::optional"* %24(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %21
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

30:                                               ; preds = %21
  %31 = load i8, i8* %9, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp sgt i64 %38, %36
  br i1 %39, label %66, label %40

40:                                               ; preds = %34
  %41 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %13, align 8
  %42 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %41, i64 2
  %43 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %42, align 8
  %44 = tail call dereferenceable(16) %"class.absl::optional"* %43(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %66, label %48

48:                                               ; preds = %40
  %49 = load i8, i8* %9, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

52:                                               ; preds = %48
  %53 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %13, align 8
  %54 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %53, i64 2
  %55 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %54, align 8
  %56 = tail call dereferenceable(16) %"class.absl::optional"* %55(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %1) #8
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %52
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %35, align 8
  %65 = icmp sle i64 %64, %63
  br label %66

66:                                               ; preds = %40, %34, %12, %8, %61, %2
  %67 = phi i1 [ false, %34 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ true, %40 ], [ %65, %61 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics15WasInForegroundERKNS_31PageLoadMetricsObserverDelegateE(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %3 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %3, i64 5
  %5 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %9 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %9, i64 3
  %11 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %10, align 8
  %12 = tail call dereferenceable(16) %"class.absl::optional"* %11(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  br label %16

16:                                               ; preds = %7, %1
  %17 = phi i1 [ true, %1 ], [ %15, %7 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN17page_load_metrics16GetPageAbortInfoERKNS_31PageLoadMetricsObserverDelegateE(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %3 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %3, i64 5
  %5 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  br i1 %6, label %7, label %56

7:                                                ; preds = %1
  %8 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %9 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %9, i64 2
  %11 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %10, align 8
  %12 = tail call dereferenceable(16) %"class.absl::optional"* %11(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %56, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %18 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %17, align 8
  %19 = getelementptr inbounds { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %18, i64 12
  %20 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %19, align 8
  %21 = tail call { i8, i64 } %20(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %22 = extractvalue { i8, i64 } %21, 0
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %44, label %24

24:                                               ; preds = %16
  %25 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %8, align 8
  %26 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %25, i64 2
  %27 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %26, align 8
  %28 = tail call dereferenceable(16) %"class.absl::optional"* %27(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %29 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %17, align 8
  %30 = getelementptr inbounds { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %29, i64 12
  %31 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %30, align 8
  %32 = tail call { i8, i64 } %31(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %33 = extractvalue { i8, i64 } %32, 1
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %24
  %38 = extractvalue { i8, i64 } %32, 0
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %56, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp sgt i64 %42, %33
  br i1 %43, label %56, label %44

44:                                               ; preds = %40, %24, %16
  %45 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %8, align 8
  %46 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %45, i64 2
  %47 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %46, align 8
  %48 = tail call dereferenceable(16) %"class.absl::optional"* %47(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %44
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  br label %89

56:                                               ; preds = %40, %37, %1, %7
  %57 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to i32 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %58 = load i32 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, i32 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i32 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %58, i64 10
  %60 = load i32 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i32 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %59, align 8
  %61 = tail call i32 %60(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %62 = add i32 %61, -1
  %63 = icmp ult i32 %62, 9
  br i1 %63, label %64, label %89

64:                                               ; preds = %56
  %65 = trunc i32 %62 to i16
  %66 = lshr i16 315, %65
  %67 = and i16 %66, 1
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %89, label %69

69:                                               ; preds = %64
  %70 = sext i32 %62 to i64
  %71 = getelementptr inbounds [9 x i64], [9 x i64]* @switch.table._ZN17page_load_metrics16GetPageAbortInfoERKNS_31PageLoadMetricsObserverDelegateE, i64 0, i64 %70
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to %"struct.page_load_metrics::UserInitiatedInfo"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %74 = load %"struct.page_load_metrics::UserInitiatedInfo"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"struct.page_load_metrics::UserInitiatedInfo"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %73, align 8
  %75 = getelementptr inbounds %"struct.page_load_metrics::UserInitiatedInfo"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"struct.page_load_metrics::UserInitiatedInfo"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %74, i64 11
  %76 = load %"struct.page_load_metrics::UserInitiatedInfo"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"struct.page_load_metrics::UserInitiatedInfo"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %75, align 8
  %77 = tail call dereferenceable(3) %"struct.page_load_metrics::UserInitiatedInfo"* %76(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %78 = bitcast %"struct.page_load_metrics::UserInitiatedInfo"* %77 to i24*
  %79 = load i24, i24* %78, align 1
  %80 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %81 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %80, align 8
  %82 = getelementptr inbounds { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %81, i64 12
  %83 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %82, align 8
  %84 = tail call { i8, i64 } %83(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %85 = extractvalue { i8, i64 } %84, 0
  %86 = extractvalue { i8, i64 } %84, 1
  %87 = icmp eq i8 %85, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %69
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

89:                                               ; preds = %64, %56, %69, %53
  %90 = phi i64 [ 6, %53 ], [ 0, %56 ], [ %72, %69 ], [ 0, %64 ]
  %91 = phi i24 [ 0, %53 ], [ 0, %56 ], [ %79, %69 ], [ 0, %64 ]
  %92 = phi i64 [ %55, %53 ], [ 0, %56 ], [ %86, %69 ], [ 0, %64 ]
  %93 = zext i24 %91 to i64
  %94 = shl nuw nsw i64 %93, 32
  %95 = and i64 %90, 4294967295
  %96 = or i64 %94, %95
  %97 = insertvalue { i64, i64 } undef, i64 %96, 0
  %98 = insertvalue { i64, i64 } %97, i64 %92, 1
  ret { i64, i64 } %98
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN17page_load_metrics28GetInitialForegroundDurationERKNS_31PageLoadMetricsObserverDelegateEN4base9TimeTicksE(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* dereferenceable(8), i64) local_unnamed_addr #0 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %5 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %5, i64 5
  %7 = load i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i1 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  br i1 %8, label %9, label %37

9:                                                ; preds = %2
  %10 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %11 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %11, i64 2
  %13 = load %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.absl::optional"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %12, align 8
  %14 = tail call dereferenceable(16) %"class.absl::optional"* %13(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %17 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %16, align 8
  %18 = getelementptr inbounds { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %17, i64 12
  %19 = load { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, { i8, i64 } (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %18, align 8
  %20 = tail call { i8, i64 } %19(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %21 = extractvalue { i8, i64 } %20, 0
  store i8 %21, i8* %15, align 8
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = extractvalue { i8, i64 } %20, 1
  store i64 %23, i64* %22, align 8
  %24 = call { i8, i64 } @_ZN17page_load_metrics11OptionalMinERKN4absl8optionalIN4base9TimeDeltaEEES6_(%"class.absl::optional"* dereferenceable(16) %14, %"class.absl::optional"* nonnull dereferenceable(16) %3) #8
  %25 = extractvalue { i8, i64 } %24, 0
  %26 = extractvalue { i8, i64 } %24, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  %27 = icmp eq i8 %25, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %9
  %29 = icmp eq i64 %1, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to i64 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %32 = load i64 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, i64 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %31, align 8
  %33 = getelementptr inbounds i64 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i64 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %32, i64 1
  %34 = load i64 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, i64 (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %33, align 8
  %35 = call i64 %34(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %36 = sub nsw i64 %1, %35
  br label %37

37:                                               ; preds = %28, %30, %9, %2
  %38 = phi i8 [ 0, %2 ], [ %25, %9 ], [ 0, %28 ], [ 1, %30 ]
  %39 = phi i64 [ undef, %2 ], [ %26, %9 ], [ %26, %28 ], [ %36, %30 ]
  %40 = insertvalue { i8, i64 } undef, i8 %38, 0
  %41 = insertvalue { i8, i64 } %40, i64 %39, 1
  ret { i8, i64 } %41
}

declare { i8, i64 } @_ZN17page_load_metrics11OptionalMinERKN4absl8optionalIN4base9TimeDeltaEEES6_(%"class.absl::optional"* dereferenceable(16), %"class.absl::optional"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics35DidObserveLoadingBehaviorInAnyFrameERKNS_31PageLoadMetricsObserverDelegateEN5blink19LoadingBehaviorFlagE(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* dereferenceable(8), i32) local_unnamed_addr #0 {
  %3 = bitcast %"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0 to %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)***
  %4 = load %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %4, i64 13
  %6 = load %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %5, align 8
  %7 = tail call dereferenceable(16) %"class.page_load_metrics::mojom::FrameMetadata"* %6(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %8 = getelementptr inbounds %"class.page_load_metrics::mojom::FrameMetadata", %"class.page_load_metrics::mojom::FrameMetadata"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = load %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)**, %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %10, i64 14
  %12 = load %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)*, %"class.page_load_metrics::mojom::FrameMetadata"* (%"class.page_load_metrics::PageLoadMetricsObserverDelegate"*)** %11, align 8
  %13 = tail call dereferenceable(16) %"class.page_load_metrics::mojom::FrameMetadata"* %12(%"class.page_load_metrics::PageLoadMetricsObserverDelegate"* %0) #8
  %14 = getelementptr inbounds %"class.page_load_metrics::mojom::FrameMetadata", %"class.page_load_metrics::mojom::FrameMetadata"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = or i32 %15, %9
  %17 = and i32 %16, %1
  %18 = icmp ne i32 %17, 0
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics22IsGoogleSearchHostnameERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %"class.absl::optional.16", align 8
  %3 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 32, i1 false)
  call void @_ZN17page_load_metrics23GetGoogleHostnamePrefixERK4GURL(%"class.absl::optional.16"* nonnull sret %2, %class.GURL* dereferenceable(120) %0) #8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 3
  br i1 %16, label %17, label %22

17:                                               ; preds = %6
  %18 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %7, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #8
  %19 = icmp eq i32 %18, 0
  %20 = load i8, i8* %3, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %6, %17
  %23 = phi i1 [ %19, %17 ], [ false, %6 ]
  %24 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %29, %22
  store i8 0, i8* %3, align 8
  br label %33

33:                                               ; preds = %1, %17, %32
  %34 = phi i1 [ %19, %17 ], [ %23, %32 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8
  ret i1 %34
}

declare void @_ZN17page_load_metrics23GetGoogleHostnamePrefixERK4GURL(%"class.absl::optional.16"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics23IsGoogleSearchResultUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %"class.base::BasicStringPiece", align 8
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.absl::optional.16", align 8
  %5 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false) #8
  call void @_ZN17page_load_metrics23GetGoogleHostnamePrefixERK4GURL(%"class.absl::optional.16"* nonnull sret %4, %class.GURL* dereferenceable(120) %0) #8
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  br label %151

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %18, 3
  br i1 %19, label %20, label %27

20:                                               ; preds = %9
  %21 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %10, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #8
  %22 = icmp eq i32 %21, 0
  %23 = load i8, i8* %5, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = load i8, i8* %12, align 1
  br label %27

27:                                               ; preds = %25, %9
  %28 = phi i8 [ %26, %25 ], [ %13, %9 ]
  %29 = phi i1 [ %22, %25 ], [ false, %9 ]
  %30 = icmp slt i8 %28, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  br i1 %29, label %36, label %151

35:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  br i1 %22, label %36, label %151

36:                                               ; preds = %34, %35
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 6, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 2
  br i1 %39, label %78, label %40

40:                                               ; preds = %36
  %41 = sext i32 %38 to i64
  %42 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %class.GURL* %0 to i8*
  %49 = select i1 %45, i8* %47, i8* %48
  %50 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 6, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #8
  %55 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %57 = call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %53, i64 %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2, i32 1) #8
  %58 = extractvalue { i8*, i64 } %57, 0
  store i8* %58, i8** %55, align 8
  %59 = extractvalue { i8*, i64 } %57, 1
  store i64 %59, i64* %56, align 8
  %60 = add i64 %59, -2
  br label %61

61:                                               ; preds = %74, %40
  %62 = phi i64 [ %59, %40 ], [ %76, %74 ]
  %63 = phi i8* [ %58, %40 ], [ %75, %74 ]
  %64 = phi i64 [ 0, %40 ], [ %72, %74 ]
  %65 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %63, i64 %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2, i64 %64) #8
  switch i64 %65, label %66 [
    i64 -1, label %77
    i64 0, label %120
  ]

66:                                               ; preds = %61
  %67 = add i64 %65, -1
  %68 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 %67) #8
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 38
  br i1 %70, label %120, label %71

71:                                               ; preds = %66
  %72 = add i64 %65, 2
  %73 = icmp ugt i64 %72, %60
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = load i8*, i8** %55, align 8
  %76 = load i64, i64* %56, align 8
  br label %61

77:                                               ; preds = %61, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #8
  br label %78

78:                                               ; preds = %36, %77
  %79 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 7, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %80, 2
  br i1 %81, label %151, label %82

82:                                               ; preds = %78
  %83 = sext i32 %80 to i64
  %84 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = bitcast %class.GURL* %0 to i8*
  %91 = select i1 %87, i8* %89, i8* %90
  %92 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 7, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %91, i64 %94
  %96 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #8
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %99 = call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %95, i64 %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2, i32 1) #8
  %100 = extractvalue { i8*, i64 } %99, 0
  store i8* %100, i8** %97, align 8
  %101 = extractvalue { i8*, i64 } %99, 1
  store i64 %101, i64* %98, align 8
  %102 = add i64 %101, -2
  br label %103

103:                                              ; preds = %116, %82
  %104 = phi i64 [ %101, %82 ], [ %118, %116 ]
  %105 = phi i8* [ %100, %82 ], [ %117, %116 ]
  %106 = phi i64 [ 0, %82 ], [ %114, %116 ]
  %107 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %105, i64 %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2, i64 %106) #8
  switch i64 %107, label %108 [
    i64 -1, label %119
    i64 0, label %120
  ]

108:                                              ; preds = %103
  %109 = add i64 %107, -1
  %110 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %2, i64 %109) #8
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 38
  br i1 %112, label %120, label %113

113:                                              ; preds = %108
  %114 = add i64 %107, 2
  %115 = icmp ugt i64 %114, %102
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = load i8*, i8** %97, align 8
  %118 = load i64, i64* %98, align 8
  br label %103

119:                                              ; preds = %103, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #8
  br label %151

120:                                              ; preds = %61, %66, %103, %108
  %121 = phi i8* [ %96, %108 ], [ %96, %103 ], [ %54, %66 ], [ %54, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #8
  %122 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %123, 1
  br i1 %124, label %151, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  %133 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = bitcast %class.GURL* %0 to i8*
  %136 = select i1 %132, i8* %134, i8* %135
  %137 = getelementptr inbounds i8, i8* %136, i64 %128
  %138 = sext i32 %123 to i64
  switch i64 %138, label %151 [
    i64 7, label %139
    i64 6, label %142
    i64 1, label %148
  ]

139:                                              ; preds = %125
  %140 = call i32 @bcmp(i8* %137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %151, label %145

142:                                              ; preds = %125
  %143 = call i32 @bcmp(i8* %137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 %138) #8
  %144 = icmp eq i32 %143, 0
  br label %151

145:                                              ; preds = %139
  %146 = call i32 @bcmp(i8* %137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 %138) #8
  %147 = icmp eq i32 %146, 0
  ret i1 %147

148:                                              ; preds = %125
  %149 = call i32 @bcmp(i8* %137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 %138) #8
  %150 = icmp eq i32 %149, 0
  br label %151

151:                                              ; preds = %142, %120, %78, %125, %148, %119, %34, %8, %139, %35
  %152 = phi i1 [ false, %35 ], [ false, %119 ], [ true, %139 ], [ false, %8 ], [ false, %34 ], [ %150, %148 ], [ false, %125 ], [ false, %78 ], [ false, %120 ], [ %144, %142 ]
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics28QueryContainsComponentPrefixEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = add i64 %3, -1
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %35

8:                                                ; preds = %4
  %9 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %12 = tail call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %0, i64 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2, i32 1) #8
  %13 = extractvalue { i8*, i64 } %12, 0
  store i8* %13, i8** %10, align 8
  %14 = extractvalue { i8*, i64 } %12, 1
  store i64 %14, i64* %11, align 8
  %15 = sub i64 %14, %3
  br label %16

16:                                               ; preds = %29, %8
  %17 = phi i64 [ %14, %8 ], [ %31, %29 ]
  %18 = phi i8* [ %13, %8 ], [ %30, %29 ]
  %19 = phi i64 [ 0, %8 ], [ %27, %29 ]
  %20 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %18, i64 %17, i8* %2, i64 %3, i64 %19) #8
  switch i64 %20, label %21 [
    i64 -1, label %32
    i64 0, label %33
  ]

21:                                               ; preds = %16
  %22 = add i64 %20, -1
  %23 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %22) #8
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 38
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = add i64 %20, %3
  %28 = icmp ugt i64 %27, %15
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = load i8*, i8** %10, align 8
  %31 = load i64, i64* %11, align 8
  br label %16

32:                                               ; preds = %16, %26
  br label %33

33:                                               ; preds = %16, %21, %32
  %34 = phi i1 [ false, %32 ], [ true, %21 ], [ true, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br label %35

35:                                               ; preds = %4, %33
  %36 = phi i1 [ %34, %33 ], [ false, %4 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics27IsGoogleSearchRedirectorUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %"class.absl::optional.16", align 8
  %3 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 32, i1 false) #8
  call void @_ZN17page_load_metrics23GetGoogleHostnamePrefixERK4GURL(%"class.absl::optional.16"* nonnull sret %2, %class.GURL* dereferenceable(120) %0) #8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8
  br label %104

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = icmp eq i64 %16, 3
  br i1 %17, label %18, label %25

18:                                               ; preds = %7
  %19 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %8, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #8
  %20 = icmp eq i32 %19, 0
  %21 = load i8, i8* %3, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %18
  %24 = load i8, i8* %10, align 1
  br label %25

25:                                               ; preds = %23, %7
  %26 = phi i8 [ %24, %23 ], [ %11, %7 ]
  %27 = phi i1 [ %20, %23 ], [ false, %7 ]
  %28 = icmp slt i8 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %29, %25
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8
  br i1 %27, label %34, label %104

33:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8
  br i1 %20, label %34, label %104

34:                                               ; preds = %32, %33
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 1
  br i1 %37, label %104, label %38

38:                                               ; preds = %34
  %39 = icmp eq i32 %36, 4
  br i1 %39, label %40, label %82

40:                                               ; preds = %38
  %41 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %class.GURL* %0 to i8*
  %48 = select i1 %44, i8* %46, i8* %47
  %49 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = call i32 @bcmp(i8* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %82

55:                                               ; preds = %40
  %56 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 6, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %82

59:                                               ; preds = %55
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 6, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %class.GURL* %0 to i8*
  %72 = select i1 %68, i8* %70, i8* %71
  %73 = getelementptr inbounds i8, i8* %72, i64 %64
  %74 = sext i32 %57 to i64
  br label %75

75:                                               ; preds = %59, %61
  %76 = phi i8* [ %73, %61 ], [ null, %59 ]
  %77 = phi i64 [ %74, %61 ], [ 0, %59 ]
  %78 = call zeroext i1 @_ZN17page_load_metrics22QueryContainsComponentEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %76, i64 %77, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i64 10)
  br i1 %78, label %104, label %79

79:                                               ; preds = %75
  %80 = load i32, i32* %35, align 4
  %81 = icmp slt i32 %80, 1
  br i1 %81, label %104, label %82

82:                                               ; preds = %55, %40, %38, %79
  %83 = phi i32 [ %80, %79 ], [ %36, %38 ], [ 4, %40 ], [ 4, %55 ]
  %84 = icmp eq i32 %83, 17
  br i1 %84, label %85, label %104

85:                                               ; preds = %82
  %86 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = bitcast %class.GURL* %0 to i8*
  %93 = select i1 %89, i8* %91, i8* %92
  %94 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %93, i64 %96
  %98 = call i32 @bcmp(i8* %97, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i64 17) #8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %85
  %101 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 7, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, -1
  br label %104

104:                                              ; preds = %34, %79, %82, %32, %6, %85, %100, %75, %33
  %105 = phi i1 [ false, %33 ], [ true, %75 ], [ false, %85 ], [ %103, %100 ], [ false, %6 ], [ false, %32 ], [ false, %82 ], [ false, %79 ], [ false, %34 ]
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17page_load_metrics22QueryContainsComponentEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = add i64 %3, -1
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %44

8:                                                ; preds = %4
  %9 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %12 = tail call { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8* %0, i64 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i64 2, i32 1) #8
  %13 = extractvalue { i8*, i64 } %12, 0
  store i8* %13, i8** %10, align 8
  %14 = extractvalue { i8*, i64 } %12, 1
  store i64 %14, i64* %11, align 8
  %15 = sub i64 %14, %3
  br label %16

16:                                               ; preds = %39, %8
  %17 = phi i64 [ %14, %8 ], [ %41, %39 ]
  %18 = phi i8* [ %13, %8 ], [ %40, %39 ]
  %19 = phi i64 [ 0, %8 ], [ %37, %39 ]
  %20 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %18, i64 %17, i8* %2, i64 %3, i64 %19) #8
  switch i64 %20, label %21 [
    i64 -1, label %42
    i64 0, label %28
  ]

21:                                               ; preds = %16
  %22 = add i64 %20, -1
  %23 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %22) #8
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 38
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = add i64 %20, %3
  br label %36

28:                                               ; preds = %21, %16
  %29 = add i64 %20, %3
  %30 = load i64, i64* %11, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %32, label %42

32:                                               ; preds = %28
  %33 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %29) #8
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 38
  br i1 %35, label %42, label %36

36:                                               ; preds = %32, %26
  %37 = phi i64 [ %27, %26 ], [ %29, %32 ]
  %38 = icmp ugt i64 %37, %15
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = load i8*, i8** %10, align 8
  %41 = load i64, i64* %11, align 8
  br label %16

42:                                               ; preds = %36, %32, %28, %16
  %43 = phi i1 [ false, %36 ], [ true, %32 ], [ true, %28 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br label %44

44:                                               ; preds = %4, %42
  %45 = phi i1 [ %43, %42 ], [ false, %4 ]
  ret i1 %45
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN17page_load_metrics19LayoutShiftUkmValueEf(float) local_unnamed_addr #3 {
  %2 = fcmp ogt float %0, 1.000000e+01
  %3 = select i1 %2, float 1.000000e+01, float %0
  %4 = fmul float %3, 1.000000e+02
  %5 = tail call float @llvm.round.f32(float %4)
  %6 = fptosi float %5 to i32
  %7 = sext i32 %6 to i64
  ret i64 %7
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #4

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN17page_load_metrics19LayoutShiftUmaValueEf(float) local_unnamed_addr #3 {
  %2 = fcmp ogt float %0, 1.000000e+01
  %3 = select i1 %2, float 1.000000e+01, float %0
  %4 = fmul float %3, 1.000000e+01
  %5 = tail call float @llvm.round.f32(float %4)
  %6 = fptosi float %5 to i32
  ret i32 %6
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare { i8*, i64 } @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_13TrimPositionsE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
