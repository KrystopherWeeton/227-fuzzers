; ModuleID = '../../net/disk_cache/simple/simple_net_log_parameters.cc'
source_filename = "../../net/disk_cache/simple/simple_net_log_parameters.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.disk_cache::SimpleEntryImpl" = type <{ %"class.disk_cache::Entry", %"class.base::RefCounted", [4 x i8], %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %"class.disk_cache::SimpleFileTracker"*, i32, [4 x i8], %"class.base::FilePath", i64, i8, [7 x i8], %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", [3 x i32], i32, i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i8], i8, [3 x i32], %"class.disk_cache::SimpleSynchronousEntry"*, %class.scoped_refptr.55, %"class.std::__1::queue", %"class.net::NetLogWithSource", %class.scoped_refptr.61, %class.scoped_refptr.61, %class.scoped_refptr.62, i32, [4 x i8] }>
%"class.disk_cache::Entry" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.disk_cache::BackendCleanupTracker"* }
%"class.disk_cache::BackendCleanupTracker" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.disk_cache::SimpleEntryImpl::ActiveEntryProxy"* }
%"class.disk_cache::SimpleEntryImpl::ActiveEntryProxy" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"class.disk_cache::SimpleFileTracker" = type { %"class.base::Lock", %"class.std::__1::unordered_map", %"class.std::__1::list", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { float }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.37" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.46" }
%"class.base::time_internal::TimeBase.46" = type { i64 }
%"class.disk_cache::SimpleSynchronousEntry" = type { i32, %"class.base::FilePath", %"struct.disk_cache::SimpleFileTracker::EntryFileKey", %"class.std::__1::basic_string", i8, i8, [2 x i8], %"class.disk_cache::SimpleFileTracker"*, i32, i32, [2 x i8], %"class.std::__1::map", i8, i64 }
%"struct.disk_cache::SimpleFileTracker::EntryFileKey" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%class.scoped_refptr.55 = type { %"class.net::PrioritizedTaskRunner"* }
%"class.net::PrioritizedTaskRunner" = type opaque
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.disk_cache::SimpleEntryOperation"*, i64 }
%"class.disk_cache::SimpleEntryOperation" = type <{ %class.scoped_refptr.56, %class.scoped_refptr.57, %"class.base::OnceCallback", %"class.base::OnceCallback.60", i32, i32, i64, i32, [4 x i8], i64*, i32, i32, i32, i8, i8, [2 x i8] }>
%class.scoped_refptr.56 = type { %"class.disk_cache::SimpleEntryImpl"* }
%class.scoped_refptr.57 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.58 }
%class.scoped_refptr.58 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.59", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.60" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.61 = type { %"class.net::GrowableIOBuffer"* }
%"class.net::GrowableIOBuffer" = type opaque
%class.scoped_refptr.62 = type { %"class.disk_cache::SimplePostDoomWaiterTable"* }
%"class.disk_cache::SimplePostDoomWaiterTable" = type { %"class.base::RefCounted.63", i32, %"class.std::__1::unordered_map.64" }
%"class.base::RefCounted.63" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map.64" = type { %"class.std::__1::__hash_table.65" }
%"class.std::__1::__hash_table.65" = type <{ %"class.std::__1::unique_ptr.66", %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.84", [4 x i8] }>
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68", %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::__hash_node_base.69"** }
%"struct.std::__1::__hash_node_base.69" = type { %"struct.std::__1::__hash_node_base.69"* }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__bucket_list_deallocator.71" }
%"class.std::__1::__bucket_list_deallocator.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base.69" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.89" }
%"union.absl::variant_internal::DestructibleUnionImpl.89" = type { %"union.absl::variant_internal::DestructibleUnionImpl.90" }
%"union.absl::variant_internal::DestructibleUnionImpl.90" = type { %"union.absl::variant_internal::DestructibleUnionImpl.91" }
%"union.absl::variant_internal::DestructibleUnionImpl.91" = type { %"union.absl::variant_internal::DestructibleUnionImpl.92" }
%"union.absl::variant_internal::DestructibleUnionImpl.92" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [11 x i8] c"entry_hash\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"%#016lx\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"net_error\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"key\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache29NetLogSimpleEntryConstructionERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEPKNS_15SimpleEntryImplE(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, %"class.disk_cache::SimpleEntryImpl"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %8 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  %9 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %8, i64 0, i32 3
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %27, label %13, !prof !2

13:                                               ; preds = %4
  %14 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false) #5, !alias.scope !3
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %6, i8 zeroext 6) #5
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #5, !noalias !3
  %16 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %3, i64 0, i32 10
  %17 = load i64, i64* %16, align 8, !noalias !8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 %17) #5
  %18 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #5
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1, !noalias !3
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !3
  call void @_ZdlPv(i8* %25) #6
  br label %26

26:                                               ; preds = %23, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #5, !noalias !3
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %8, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %9, i32 %2, %"class.base::Value"* nonnull dereferenceable(32) %6) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #5
  br label %27

27:                                               ; preds = %4, %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache25NetLogSimpleEntryCreationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEPKNS_15SimpleEntryImplEi(%"class.net::NetLogWithSource"* dereferenceable(24), i32, i32, %"class.disk_cache::SimpleEntryImpl"*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.base::Value", align 8
  %7 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %8 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  %9 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %8, i64 0, i32 3
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %33, label %13, !prof !2

13:                                               ; preds = %5
  %14 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false) #5, !alias.scope !9
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %6, i8 zeroext 6) #5
  %15 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9, i32 %4) #5
  %16 = icmp eq i32 %4, 0
  br i1 %16, label %17, label %32

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %3, i64 0, i32 13
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1, !noalias !14
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !14
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %26 = select i1 %22, i8* %24, i8* %25
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !14
  %29 = zext i8 %21 to i64
  %30 = select i1 %22, i64 %28, i64 %29
  %31 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i8* %26, i64 %30) #5
  br label %32

32:                                               ; preds = %17, %13
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %8, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %9, i32 %2, %"class.base::Value"* nonnull dereferenceable(32) %6) #5
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #5
  br label %33

33:                                               ; preds = %5, %32
  ret void
}

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN12_GLOBAL__N_135NetLogSimpleEntryConstructionParamsEPKN10disk_cache15SimpleEntryImplE: argument 0"}
!5 = distinct !{!5, !"_ZN12_GLOBAL__N_135NetLogSimpleEntryConstructionParamsEPKN10disk_cache15SimpleEntryImplE"}
!6 = distinct !{!6, !7, !"_ZZN10disk_cache29NetLogSimpleEntryConstructionERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEPKNS_15SimpleEntryImplEENK3$_0clEv: argument 0"}
!7 = distinct !{!7, !"_ZZN10disk_cache29NetLogSimpleEntryConstructionERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEPKNS_15SimpleEntryImplEENK3$_0clEv"}
!8 = !{!4}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN12_GLOBAL__N_131NetLogSimpleEntryCreationParamsEPKN10disk_cache15SimpleEntryImplEi: argument 0"}
!11 = distinct !{!11, !"_ZN12_GLOBAL__N_131NetLogSimpleEntryCreationParamsEPKN10disk_cache15SimpleEntryImplEi"}
!12 = distinct !{!12, !13, !"_ZZN10disk_cache25NetLogSimpleEntryCreationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEPKNS_15SimpleEntryImplEiENK3$_1clEv: argument 0"}
!13 = distinct !{!13, !"_ZZN10disk_cache25NetLogSimpleEntryCreationERKN3net16NetLogWithSourceENS0_15NetLogEventTypeENS0_16NetLogEventPhaseEPKNS_15SimpleEntryImplEiENK3$_1clEv"}
!14 = !{!10}
