; ModuleID = '../../third_party/webrtc/modules/desktop_capture/desktop_capturer.cc'
source_filename = "../../third_party/webrtc/modules/desktop_capture/desktop_capturer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::DesktopCapturer" = type { i32 (...)** }
%"class.webrtc::SharedMemoryFactory" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"*, %"class.std::__1::__compressed_pair.4" }
%"struct.webrtc::DesktopCapturer::Source" = type { i64, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.webrtc::DesktopCapturer::Source"* }
%"class.webrtc::DesktopVector" = type { i32, i32 }
%"class.webrtc::DesktopCaptureOptions" = type <{ %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr.24", i8, i8, i8, i8, [4 x i8] }>
%"class.rtc::scoped_refptr" = type { %"class.webrtc::SharedXDisplay"* }
%"class.webrtc::SharedXDisplay" = type { %"class.rtc::RefCountedNonVirtual", %struct._XDisplay*, %"class.std::__1::map" }
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct._XDisplay = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.rtc::scoped_refptr.24" = type { %"class.webrtc::FullScreenWindowDetector"* }
%"class.webrtc::FullScreenWindowDetector" = type { %"class.rtc::RefCountedNonVirtual.25", %"class.std::__1::unique_ptr.26", %"class.std::__1::function", i64, i64, i64, %"class.std::__1::vector" }
%"class.rtc::RefCountedNonVirtual.25" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.webrtc::FullScreenApplicationHandler"* }
%"class.webrtc::FullScreenApplicationHandler" = type { i32 (...)**, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.webrtc::FullScreenApplicationHandler"* (%"union.std::__1::__function::__policy_storage"*, i64)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.webrtc::DesktopCapturerDifferWrapper" = type { %"class.webrtc::DesktopCapturer", %"class.webrtc::DesktopCapturer::Callback", %"class.std::__1::unique_ptr.9", %"class.webrtc::DesktopCapturer::Callback"*, %"class.std::__1::unique_ptr.32" }
%"class.webrtc::DesktopCapturer::Callback" = type { i32 (...)** }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.webrtc::DesktopCapturer"* }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.webrtc::SharedDesktopFrame"* }
%"class.webrtc::SharedDesktopFrame" = type { %"class.webrtc::DesktopFrame", %"class.rtc::scoped_refptr.51" }
%"class.webrtc::DesktopFrame" = type { i32 (...)**, i8*, %"class.webrtc::SharedMemory"*, %"class.webrtc::DesktopSize", i32, %"class.webrtc::DesktopRegion", %"class.webrtc::DesktopVector", %"class.webrtc::DesktopVector", i8, i64, i32, %"class.std::__1::vector.44" }
%"class.webrtc::SharedMemory" = type { i32 (...)**, i8*, i64, i32, i32 }
%"class.webrtc::DesktopSize" = type { i32, i32 }
%"class.webrtc::DesktopRegion" = type { %"class.std::__1::map.35" }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i8*, i8*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.rtc::scoped_refptr.51" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type opaque

@.str = private unnamed_addr constant [17 x i8] c"XDG_SESSION_TYPE\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"wayland\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"WAYLAND_DISPLAY\00", align 1
@_ZTVN6webrtc15DesktopCapturerE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::DesktopCapturer"*)* @_ZN6webrtc15DesktopCapturerD2Ev to i8*), i8* bitcast (void (%"class.webrtc::DesktopCapturer"*)* @_ZN6webrtc15DesktopCapturerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::DesktopCapturer"*, %"class.webrtc::SharedMemoryFactory"*)* @_ZN6webrtc15DesktopCapturer22SetSharedMemoryFactoryENSt3__110unique_ptrINS_19SharedMemoryFactoryENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::DesktopCapturer"*, i64)* @_ZN6webrtc15DesktopCapturer17SetExcludedWindowEl to i8*), i8* bitcast (i1 (%"class.webrtc::DesktopCapturer"*, %"class.std::__1::vector"*)* @_ZN6webrtc15DesktopCapturer13GetSourceListEPNSt3__16vectorINS0_6SourceENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (i1 (%"class.webrtc::DesktopCapturer"*, i64)* @_ZN6webrtc15DesktopCapturer12SelectSourceEl to i8*), i8* bitcast (i1 (%"class.webrtc::DesktopCapturer"*)* @_ZN6webrtc15DesktopCapturer21FocusOnSelectedSourceEv to i8*), i8* bitcast (i1 (%"class.webrtc::DesktopCapturer"*, %"class.webrtc::DesktopVector"*)* @_ZN6webrtc15DesktopCapturer10IsOccludedERKNS_13DesktopVectorE to i8*)] }, align 8

@_ZN6webrtc15DesktopCapturerD1Ev = hidden unnamed_addr alias void (%"class.webrtc::DesktopCapturer"*), void (%"class.webrtc::DesktopCapturer"*)* @_ZN6webrtc15DesktopCapturerD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc15DesktopCapturerD2Ev(%"class.webrtc::DesktopCapturer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6webrtc15DesktopCapturerD0Ev(%"class.webrtc::DesktopCapturer"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15DesktopCapturer22SetSharedMemoryFactoryENSt3__110unique_ptrINS_19SharedMemoryFactoryENS1_14default_deleteIS3_EEEE(%"class.webrtc::DesktopCapturer"* nocapture readnone, %"class.webrtc::SharedMemoryFactory"*) unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.webrtc::SharedMemoryFactory"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.webrtc::SharedMemoryFactory"* %1 to void (%"class.webrtc::SharedMemoryFactory"*)***
  %6 = load void (%"class.webrtc::SharedMemoryFactory"*)**, void (%"class.webrtc::SharedMemoryFactory"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.webrtc::SharedMemoryFactory"*)*, void (%"class.webrtc::SharedMemoryFactory"*)** %6, i64 1
  %8 = load void (%"class.webrtc::SharedMemoryFactory"*)*, void (%"class.webrtc::SharedMemoryFactory"*)** %7, align 8
  tail call void %8(%"class.webrtc::SharedMemoryFactory"* nonnull %1) #9
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc15DesktopCapturer17SetExcludedWindowEl(%"class.webrtc::DesktopCapturer"* nocapture, i64) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15DesktopCapturer13GetSourceListEPNSt3__16vectorINS0_6SourceENS1_9allocatorIS3_EEEE(%"class.webrtc::DesktopCapturer"* nocapture readnone, %"class.std::__1::vector"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15DesktopCapturer12SelectSourceEl(%"class.webrtc::DesktopCapturer"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15DesktopCapturer21FocusOnSelectedSourceEv(%"class.webrtc::DesktopCapturer"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15DesktopCapturer10IsOccludedERKNS_13DesktopVectorE(%"class.webrtc::DesktopCapturer"* nocapture readnone, %"class.webrtc::DesktopVector"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::DesktopCapturer"* @_ZN6webrtc15DesktopCapturer20CreateWindowCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %2 = tail call %"class.webrtc::DesktopCapturer"* @_ZN6webrtc15DesktopCapturer23CreateRawWindowCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24) %0) #9
  %3 = ptrtoint %"class.webrtc::DesktopCapturer"* %2 to i64
  %4 = icmp eq %"class.webrtc::DesktopCapturer"* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_Znwm(i64 40) #10
  %11 = bitcast i8* %10 to %"class.webrtc::DesktopCapturerDifferWrapper"*
  tail call void @_ZN6webrtc28DesktopCapturerDifferWrapperC1ENSt3__110unique_ptrINS_15DesktopCapturerENS1_14default_deleteIS3_EEEE(%"class.webrtc::DesktopCapturerDifferWrapper"* nonnull %11, %"class.webrtc::DesktopCapturer"* nonnull %2) #9
  %12 = ptrtoint i8* %10 to i64
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i64 [ %12, %9 ], [ %3, %5 ], [ %3, %1 ]
  %15 = inttoptr i64 %14 to %"class.webrtc::DesktopCapturer"*
  ret %"class.webrtc::DesktopCapturer"* %15
}

declare %"class.webrtc::DesktopCapturer"* @_ZN6webrtc15DesktopCapturer23CreateRawWindowCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN6webrtc28DesktopCapturerDifferWrapperC1ENSt3__110unique_ptrINS_15DesktopCapturerENS1_14default_deleteIS3_EEEE(%"class.webrtc::DesktopCapturerDifferWrapper"*, %"class.webrtc::DesktopCapturer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::DesktopCapturer"* @_ZN6webrtc15DesktopCapturer20CreateScreenCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %2 = tail call %"class.webrtc::DesktopCapturer"* @_ZN6webrtc15DesktopCapturer23CreateRawScreenCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24) %0) #9
  %3 = ptrtoint %"class.webrtc::DesktopCapturer"* %2 to i64
  %4 = icmp eq %"class.webrtc::DesktopCapturer"* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::DesktopCaptureOptions", %"class.webrtc::DesktopCaptureOptions"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_Znwm(i64 40) #10
  %11 = bitcast i8* %10 to %"class.webrtc::DesktopCapturerDifferWrapper"*
  tail call void @_ZN6webrtc28DesktopCapturerDifferWrapperC1ENSt3__110unique_ptrINS_15DesktopCapturerENS1_14default_deleteIS3_EEEE(%"class.webrtc::DesktopCapturerDifferWrapper"* nonnull %11, %"class.webrtc::DesktopCapturer"* nonnull %2) #9
  %12 = ptrtoint i8* %10 to i64
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i64 [ %12, %9 ], [ %3, %5 ], [ %3, %1 ]
  %15 = inttoptr i64 %14 to %"class.webrtc::DesktopCapturer"*
  ret %"class.webrtc::DesktopCapturer"* %15
}

declare %"class.webrtc::DesktopCapturer"* @_ZN6webrtc15DesktopCapturer23CreateRawScreenCapturerERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15DesktopCapturer21IsRunningUnderWaylandEv() local_unnamed_addr #6 align 2 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = tail call i32 @strncmp(i8* nonnull %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  %8 = icmp ne i8* %7, null
  br label %9

9:                                                ; preds = %6, %0, %3
  %10 = phi i1 [ false, %3 ], [ false, %0 ], [ %8, %6 ]
  ret i1 %10
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
