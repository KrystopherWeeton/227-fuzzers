; ModuleID = '../../components/image_fetcher/core/image_fetcher.cc'
source_filename = "../../components/image_fetcher/core/image_fetcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.image_fetcher::ImageFetcherParams" = type <{ %"struct.net::NetworkTrafficAnnotationTag", [4 x i8], %"class.absl::optional", %"class.absl::optional.0", %"class.gfx::Size", %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN13image_fetcher18ImageFetcherParamsC1EN3net27NetworkTrafficAnnotationTagENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.image_fetcher::ImageFetcherParams"*, i32, %"class.std::__1::basic_string"*), void (%"class.image_fetcher::ImageFetcherParams"*, i32, %"class.std::__1::basic_string"*)* @_ZN13image_fetcher18ImageFetcherParamsC2EN3net27NetworkTrafficAnnotationTagENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
@_ZN13image_fetcher18ImageFetcherParamsC1ERKS0_ = hidden unnamed_addr alias void (%"class.image_fetcher::ImageFetcherParams"*, %"class.image_fetcher::ImageFetcherParams"*), void (%"class.image_fetcher::ImageFetcherParams"*, %"class.image_fetcher::ImageFetcherParams"*)* @_ZN13image_fetcher18ImageFetcherParamsC2ERKS0_
@_ZN13image_fetcher18ImageFetcherParamsC1EOS0_ = hidden unnamed_addr alias void (%"class.image_fetcher::ImageFetcherParams"*, %"class.image_fetcher::ImageFetcherParams"*), void (%"class.image_fetcher::ImageFetcherParams"*, %"class.image_fetcher::ImageFetcherParams"*)* @_ZN13image_fetcher18ImageFetcherParamsC2EOS0_
@_ZN13image_fetcher18ImageFetcherParamsD1Ev = hidden unnamed_addr alias void (%"class.image_fetcher::ImageFetcherParams"*), void (%"class.image_fetcher::ImageFetcherParams"*)* @_ZN13image_fetcher18ImageFetcherParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13image_fetcher18ImageFetcherParamsC2EN3net27NetworkTrafficAnnotationTagENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.image_fetcher::ImageFetcherParams"*, i32, %"class.std::__1::basic_string"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 4, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 5
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #4
  br label %22

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %9, i8* %19, i64 %21) #4
  br label %22

22:                                               ; preds = %14, %17
  %23 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 6
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 7
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 8
  store i8 0, i8* %25, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13image_fetcher18ImageFetcherParamsC2ERKS0_(%"class.image_fetcher::ImageFetcherParams"*, %"class.image_fetcher::ImageFetcherParams"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.image_fetcher::ImageFetcherParams"* %0 to i8*
  %4 = bitcast %"class.image_fetcher::ImageFetcherParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %1, i64 0, i32 5
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #4
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %16, i64 %18) #4
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %1, i64 0, i32 6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 3, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13image_fetcher18ImageFetcherParamsC2EOS0_(%"class.image_fetcher::ImageFetcherParams"* nocapture, %"class.image_fetcher::ImageFetcherParams"* nocapture dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.image_fetcher::ImageFetcherParams"* %0 to i8*
  %4 = bitcast %"class.image_fetcher::ImageFetcherParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %1, i64 0, i32 5
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #4
  %9 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %1, i64 0, i32 6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 3, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13image_fetcher18ImageFetcherParamsD2Ev(%"class.image_fetcher::ImageFetcherParams"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.image_fetcher::ImageFetcherParams", %"class.image_fetcher::ImageFetcherParams"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #5
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
