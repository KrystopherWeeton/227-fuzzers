; ModuleID = '../../cc/layers/layer_impl.cc'
source_filename = "../../cc/layers/layer_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1214", i8, [7 x i8] }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.1184" }
%"class.base::flat_map.1184" = type { %"class.base::internal::flat_tree.1185" }
%"class.base::internal::flat_tree.1185" = type { %"class.std::__1::vector.1186" }
%"class.std::__1::vector.1186" = type { %"class.std::__1::__vector_base.1187" }
%"class.std::__1::__vector_base.1187" = type { %"struct.std::__1::pair.1188"*, %"struct.std::__1::pair.1188"*, %"class.std::__1::__compressed_pair.1189" }
%"struct.std::__1::pair.1188" = type opaque
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"struct.std::__1::pair.1188"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1197", %"class.std::__1::vector.1197", %"class.std::__1::vector.1204" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.1197" = type { %"class.std::__1::__vector_base.1198" }
%"class.std::__1::__vector_base.1198" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1199" }
%"class.std::__1::__compressed_pair.1199" = type { %"struct.std::__1::__compressed_pair_elem.1200" }
%"struct.std::__1::__compressed_pair_elem.1200" = type { i8** }
%"class.std::__1::vector.1204" = type { %"class.std::__1::__vector_base.1205" }
%"class.std::__1::__vector_base.1205" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1206" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.cc::Region"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.999", %class.scoped_refptr.1000, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.1006, %"class.std::__1::vector.1010", %"class.std::__1::unordered_map.1023", %"class.base::internal::flat_tree.1047", %"class.std::__1::unordered_map.1055", %"class.std::__1::unordered_map.1079", %"class.std::__1::unordered_map.1103", %"class.std::__1::unordered_map.1103", %"class.base::flat_map.1127", %"class.std::__1::vector.1137", %"class.base::internal::flat_tree.1144", %"class.base::internal::flat_tree.598", %"class.std::__1::vector.1145", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.114", %"class.std::__1::vector.114", %"class.std::__1::vector.1152", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1159, %class.scoped_refptr.1159, %"class.std::__1::unique_ptr.1164", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.633", %"class.std::__1::vector.756", %"class.std::__1::unique_ptr.1170", %"class.std::__1::vector.1176" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.102", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.gfx::Vector2dF", %"class.std::__1::vector.114", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.406", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.463", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::set.481", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.491", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.532", %"class.base::RepeatingCallback.328", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.538", i8, i8, i8, i32, %"class.std::__1::unique_ptr.548", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.554", %"class.std::__1::vector.560", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.592", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.598", %"class.absl::optional.611", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.82", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.686", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.764", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.807", %"class.base::WeakPtrFactory.814" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.42, %class.scoped_refptr.43, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.44", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.42 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.43 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.51", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.82", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.90" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.72"*, i64 }
%"class.std::__1::unique_ptr.72" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.97" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.97" = type { %"class.base::internal::VectorBuffer.98", i64, i64 }
%"class.base::internal::VectorBuffer.98" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.122", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.128", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.355", %"class.std::__1::vector.210", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.393", %"class.base::WeakPtrFactory.393" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.128" = type { %"class.std::__1::__hash_table.129" }
%"class.std::__1::__hash_table.129" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.133"** }
%"struct.std::__1::__hash_node_base.133" = type { %"struct.std::__1::__hash_node_base.133"* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::__bucket_list_deallocator.135" }
%"class.std::__1::__bucket_list_deallocator.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.133" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.155, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.157", %"class.base::flat_map.187", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.197", %"class.std::__1::map.197", i8, %"class.std::__1::vector.206", %"class.base::WeakPtrFactory.222" }
%class.scoped_refptr.155 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.182" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.177", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.160, %"class.gfx::Rect", i32, %class.sk_sp.165, %class.sk_sp.173, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.174 }
%class.sk_sp.160 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.161", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { i8* }
%class.sk_sp.165 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.166" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.159, i32, i32 }
%class.sk_sp.159 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.52" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.168" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.173 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.174 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.175", [4 x i8] }>
%"class.base::RefCountedThreadSafe.175" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.176 }
%union.anon.176 = type { i64 }
%"class.absl::optional.177" = type { %"class.absl::optional_internal::optional_data.178" }
%"class.absl::optional_internal::optional_data.178" = type { %"class.absl::optional_internal::optional_data_base.179" }
%"class.absl::optional_internal::optional_data_base.179" = type { %"class.absl::optional_internal::optional_data_dtor_base.180" }
%"class.absl::optional_internal::optional_data_dtor_base.180" = type { i8, %union.anon.181 }
%union.anon.181 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.187" = type { %"class.base::internal::flat_tree.188" }
%"class.base::internal::flat_tree.188" = type { %"class.std::__1::vector.189" }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.217" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.208, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.86", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.208 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.210", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.209", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.209" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.223", i8, %class.scoped_refptr.155, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.233" }
%"class.base::flat_map.223" = type { %"class.base::internal::flat_tree.224" }
%"class.base::internal::flat_tree.224" = type { %"class.std::__1::vector.225" }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.std::__1::pair.227"*, %"struct.std::__1::pair.227"*, %"class.std::__1::__compressed_pair.228" }
%"struct.std::__1::pair.227" = type { i32, %"class.std::__1::unique_ptr.1377" }
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::pair.227"* }
%"class.base::WeakPtrFactory.233" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.234", %"class.base::internal::flat_tree.234", %"class.std::__1::vector.242", i32, %"class.absl::optional.249", %"class.std::__1::unordered_map.254", %"class.std::__1::unordered_map.278", %"class.base::flat_map.302", %"class.base::WeakPtrFactory.312" }
%"class.base::internal::flat_tree.234" = type { %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { i32*, i32*, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { i32* }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.244" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.254" = type { %"class.std::__1::__hash_table.255" }
%"class.std::__1::__hash_table.255" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.259"** }
%"struct.std::__1::__hash_node_base.259" = type { %"struct.std::__1::__hash_node_base.259"* }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__bucket_list_deallocator.261" }
%"class.std::__1::__bucket_list_deallocator.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.259" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::flat_map.302" = type { %"class.base::internal::flat_tree.303" }
%"class.base::internal::flat_tree.303" = type { %"class.std::__1::vector.304" }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"*, %"class.std::__1::__compressed_pair.307" }
%"struct.std::__1::pair.306" = type { i32, i32 }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::pair.306"* }
%"class.base::WeakPtrFactory.312" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.313", %"class.std::__1::vector.321" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.316" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.315, i16, i16, i32 }
%class.scoped_refptr.315 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.323" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.328", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.329" }
%"class.base::WeakPtrFactory.329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.330" }
%"class.std::__1::__hash_table.330" = type <{ %"class.std::__1::unique_ptr.331", %"class.std::__1::__compressed_pair.341", %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.350", [4 x i8] }>
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333", %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base.334"** }
%"struct.std::__1::__hash_node_base.334" = type { %"struct.std::__1::__hash_node_base.334"* }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.std::__1::__bucket_list_deallocator.336" }
%"class.std::__1::__bucket_list_deallocator.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::__hash_node_base.334" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.355" = type { %"class.std::__1::__hash_table.356" }
%"class.std::__1::__hash_table.356" = type <{ %"class.std::__1::unique_ptr.357", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.375", [4 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359", %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.360"** }
%"struct.std::__1::__hash_node_base.360" = type { %"struct.std::__1::__hash_node_base.360"* }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::__bucket_list_deallocator.362" }
%"class.std::__1::__bucket_list_deallocator.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.360" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %class.scoped_refptr.208*, %class.scoped_refptr.208*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.scoped_refptr.208* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.379" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.385", %"class.base::WeakPtrFactory.386" }
%"class.base::OnceCallback.385" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.386" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.387, i8, [7 x i8] }>
%class.scoped_refptr.387 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.388", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.388" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.389" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::WeakPtrFactory.393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.397", %"class.absl::optional.397", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.397" = type { %"class.absl::optional_internal::optional_data.398" }
%"class.absl::optional_internal::optional_data.398" = type { %"class.absl::optional_internal::optional_data_base.399" }
%"class.absl::optional_internal::optional_data_base.399" = type { %"class.absl::optional_internal::optional_data_dtor_base.400" }
%"class.absl::optional_internal::optional_data_dtor_base.400" = type { i8, %union.anon.401 }
%union.anon.401 = type { %"struct.std::__1::pair.402" }
%"struct.std::__1::pair.402" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.422", %"class.absl::optional.422", %"class.absl::optional.422", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.441, %"class.absl::optional.442", %"class.std::__1::map.447" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.418" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.412"**, %"struct.std::__1::pair.412"**, %"struct.std::__1::pair.412"**, %"class.std::__1::__compressed_pair.413" }
%"struct.std::__1::pair.412" = type opaque
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::pair.412"** }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.427", %"class.base::circular_deque.428", %"class.std::__1::map.430", %"class.absl::optional" }
%"class.base::RepeatingCallback.427" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.428" = type { %"class.base::internal::VectorBuffer.429", i64, i64 }
%"class.base::internal::VectorBuffer.429" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.430" = type { %"class.std::__1::__tree.431" }
%"class.std::__1::__tree.431" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%struct.anon.441 = type { double, double }
%"class.absl::optional.442" = type { %"class.absl::optional_internal::optional_data.443" }
%"class.absl::optional_internal::optional_data.443" = type { %"class.absl::optional_internal::optional_data_base.444" }
%"class.absl::optional_internal::optional_data_base.444" = type { %"class.absl::optional_internal::optional_data_dtor_base.445" }
%"class.absl::optional_internal::optional_data_dtor_base.445" = type { i8, %union.anon.446 }
%union.anon.446 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.447" = type { %"class.std::__1::__tree.448" }
%"class.std::__1::__tree.448" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.459" }
%"class.base::RingBuffer.459" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.491" = type { %"class.std::__1::__hash_table.492" }
%"class.std::__1::__hash_table.492" = type <{ %"class.std::__1::unique_ptr.493", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.511", [4 x i8] }>
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495", %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.std::__1::__hash_node_base.496"** }
%"struct.std::__1::__hash_node_base.496" = type { %"struct.std::__1::__hash_node_base.496"* }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::__bucket_list_deallocator.498" }
%"class.std::__1::__bucket_list_deallocator.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.std::__1::__hash_node_base.496" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.517" }
%"class.std::__1::vector.517" = type { %"class.std::__1::__vector_base.518" }
%"class.std::__1::__vector_base.518" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.524" }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.std::__1::unique_ptr.526"*, %"class.std::__1::unique_ptr.526"*, %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::unique_ptr.526" = type opaque
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.std::__1::unique_ptr.526"* }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.328" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.538" = type { %"class.std::__1::__tree.539" }
%"class.std::__1::__tree.539" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.560" = type { %"class.std::__1::__vector_base.561" }
%"class.std::__1::__vector_base.561" = type { %"struct.std::__1::pair.562"*, %"struct.std::__1::pair.562"*, %"class.std::__1::__compressed_pair.563" }
%"struct.std::__1::pair.562" = type opaque
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.std::__1::pair.562"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.568", %"class.base::internal::flat_tree.234", %"class.base::internal::flat_tree.234", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.568" = type { %"class.base::internal::flat_tree.569" }
%"class.base::internal::flat_tree.569" = type { %"class.std::__1::vector.570" }
%"class.std::__1::vector.570" = type { %"class.std::__1::__vector_base.571" }
%"class.std::__1::__vector_base.571" = type { %"struct.std::__1::pair.572"*, %"struct.std::__1::pair.572"*, %"class.std::__1::__compressed_pair.573" }
%"struct.std::__1::pair.572" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.166", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1383", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1383" = type { %"class.std::__1::vector.1384" }
%"class.std::__1::vector.1384" = type { %"class.std::__1::__vector_base.1385" }
%"class.std::__1::__vector_base.1385" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1386" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::pair.572"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.578", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.579" }
%"class.base::RepeatingCallback.578" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.579" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.583" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.611" = type { %"class.absl::optional_internal::optional_data.612" }
%"class.absl::optional_internal::optional_data.612" = type { %"class.absl::optional_internal::optional_data_base.613" }
%"class.absl::optional_internal::optional_data_base.613" = type { %"class.absl::optional_internal::optional_data_dtor_base.614" }
%"class.absl::optional_internal::optional_data_dtor_base.614" = type { i8, [7 x i8], %union.anon.615 }
%union.anon.615 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.616", %"struct.viz::Selection", i8, %"class.absl::optional.621", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.626", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.616" = type { %"class.absl::optional_internal::optional_data.617" }
%"class.absl::optional_internal::optional_data.617" = type { %"class.absl::optional_internal::optional_data_base.618" }
%"class.absl::optional_internal::optional_data_base.618" = type { %"class.absl::optional_internal::optional_data_dtor_base.619" }
%"class.absl::optional_internal::optional_data_dtor_base.619" = type { i8, %union.anon.620 }
%union.anon.620 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.621" = type { %"class.absl::optional_internal::optional_data.622" }
%"class.absl::optional_internal::optional_data.622" = type { %"class.absl::optional_internal::optional_data_base.623" }
%"class.absl::optional_internal::optional_data_base.623" = type { %"class.absl::optional_internal::optional_data_dtor_base.624" }
%"class.absl::optional_internal::optional_data_dtor_base.624" = type { i8, %union.anon.625 }
%union.anon.625 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.626" = type { %"class.absl::optional_internal::optional_data.627" }
%"class.absl::optional_internal::optional_data.627" = type { %"class.absl::optional_internal::optional_data_base.628" }
%"class.absl::optional_internal::optional_data_base.628" = type { %"class.absl::optional_internal::optional_data_dtor_base.629" }
%"class.absl::optional_internal::optional_data_dtor_base.629" = type { i8, %union.anon.630 }
%union.anon.630 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.631" }
%"class.base::circular_deque.631" = type { %"class.base::internal::VectorBuffer.632", i64, i64 }
%"class.base::internal::VectorBuffer.632" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.633", %"class.std::__1::vector.633" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.641", %"class.base::flat_map.647", %"class.base::flat_map.657", %"class.base::RepeatingCallback.667", %"class.std::__1::vector.668", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.676", i64, i64 }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.647" = type { %"class.base::internal::flat_tree.648" }
%"class.base::internal::flat_tree.648" = type { %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"struct.std::__1::pair.651"*, %"struct.std::__1::pair.651"*, %"class.std::__1::__compressed_pair.652" }
%"struct.std::__1::pair.651" = type opaque
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"struct.std::__1::pair.651"* }
%"class.base::flat_map.657" = type { %"class.base::internal::flat_tree.658" }
%"class.base::internal::flat_tree.658" = type { %"class.std::__1::vector.659" }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"struct.std::__1::pair.661"*, %"struct.std::__1::pair.661"*, %"class.std::__1::__compressed_pair.662" }
%"struct.std::__1::pair.661" = type opaque
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"struct.std::__1::pair.661"* }
%"class.base::RepeatingCallback.667" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.668" = type { %"class.std::__1::__vector_base.669" }
%"class.std::__1::__vector_base.669" = type { %"class.std::__1::unique_ptr.670"*, %"class.std::__1::unique_ptr.670"*, %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::unique_ptr.670" = type opaque
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.std::__1::unique_ptr.670"* }
%"class.base::flat_map.676" = type { %"class.base::internal::flat_tree.677" }
%"class.base::internal::flat_tree.677" = type { %"class.std::__1::vector.678" }
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"struct.std::__1::pair.680"*, %"struct.std::__1::pair.680"*, %"class.std::__1::__compressed_pair.681" }
%"struct.std::__1::pair.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"struct.std::__1::pair.680"* }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.692", %"class.base::internal::flat_tree.702" }
%"class.base::flat_map.692" = type { %"class.base::internal::flat_tree.693" }
%"class.base::internal::flat_tree.693" = type { %"class.std::__1::vector.694" }
%"class.std::__1::vector.694" = type { %"class.std::__1::__vector_base.695" }
%"class.std::__1::__vector_base.695" = type { %"struct.std::__1::pair.696"*, %"struct.std::__1::pair.696"*, %"class.std::__1::__compressed_pair.697" }
%"struct.std::__1::pair.696" = type opaque
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.std::__1::pair.696"* }
%"class.base::internal::flat_tree.702" = type { %"class.std::__1::vector.703" }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.715" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.705", %"class.absl::optional.710", %"struct.cc::ElementId" }
%"class.absl::optional.705" = type { %"class.absl::optional_internal::optional_data.706" }
%"class.absl::optional_internal::optional_data.706" = type { %"class.absl::optional_internal::optional_data_base.707" }
%"class.absl::optional_internal::optional_data_base.707" = type { %"class.absl::optional_internal::optional_data_dtor_base.708" }
%"class.absl::optional_internal::optional_data_dtor_base.708" = type { i8, %union.anon.709 }
%union.anon.709 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.710" = type { %"class.absl::optional_internal::optional_data.711" }
%"class.absl::optional_internal::optional_data.711" = type { %"class.absl::optional_internal::optional_data_base.712" }
%"class.absl::optional_internal::optional_data_base.712" = type { %"class.absl::optional_internal::optional_data_dtor_base.713" }
%"class.absl::optional_internal::optional_data_dtor_base.713" = type { i8, %union.anon.714 }
%union.anon.714 = type { i32 }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.732" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.720", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.720" = type { %"class.std::__1::__deque_base.721" }
%"class.std::__1::__deque_base.721" = type { %"struct.std::__1::__split_buffer.722", i64, %"class.std::__1::__compressed_pair.728" }
%"struct.std::__1::__split_buffer.722" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.723" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::circular_deque.732" = type { %"class.base::internal::VectorBuffer.733", i64, i64 }
%"class.base::internal::VectorBuffer.733" = type { %"struct.std::__1::pair.734"*, i64 }
%"struct.std::__1::pair.734" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.735", %"class.std::__1::map.740", %"class.std::__1::map.740" }
%"class.absl::optional.735" = type { %"class.absl::optional_internal::optional_data.736" }
%"class.absl::optional_internal::optional_data.736" = type { %"class.absl::optional_internal::optional_data_base.737" }
%"class.absl::optional_internal::optional_data_base.737" = type { %"class.absl::optional_internal::optional_data_dtor_base.738" }
%"class.absl::optional_internal::optional_data_dtor_base.738" = type { i8, [3 x i8], %union.anon.739 }
%union.anon.739 = type { %"class.gfx::Transform" }
%"class.std::__1::map.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.749", %"class.std::__1::vector.756" }
%"class.std::__1::vector.749" = type { %"class.std::__1::__vector_base.750" }
%"class.std::__1::__vector_base.750" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.751" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.328", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.770" }
%"class.base::WeakPtrFactory.770" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.771", %"class.std::__1::map.778", i64 }
%"class.std::__1::list.771" = type { %"class.std::__1::__list_imp.772" }
%"class.std::__1::__list_imp.772" = type { %"struct.std::__1::__list_node_base.773", %"class.std::__1::__compressed_pair.774" }
%"struct.std::__1::__list_node_base.773" = type { %"struct.std::__1::__list_node_base.773"*, %"struct.std::__1::__list_node_base.773"* }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map.778" = type { %"class.std::__1::__tree.779" }
%"class.std::__1::__tree.779" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.780", %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.789", %"class.base::internal::flat_tree.799", %"class.base::internal::flat_tree.799" }
%"class.base::flat_map.789" = type { %"class.base::internal::flat_tree.790" }
%"class.base::internal::flat_tree.790" = type { %"class.std::__1::vector.791" }
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { %"struct.std::__1::pair.793"*, %"struct.std::__1::pair.793"*, %"class.std::__1::__compressed_pair.794" }
%"struct.std::__1::pair.793" = type opaque
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.std::__1::pair.793"* }
%"class.base::internal::flat_tree.799" = type { %"class.std::__1::vector.800" }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.802" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { i32*, i32*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { i32* }
%"class.base::WeakPtrFactory.814" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.815", %"class.base::flat_map.815", %"class.base::flat_map.815", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.815" = type { %"class.base::internal::flat_tree.816" }
%"class.base::internal::flat_tree.816" = type { %"class.std::__1::vector.817" }
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { %"struct.std::__1::pair.819"*, %"struct.std::__1::pair.819"*, %"class.std::__1::__compressed_pair.820" }
%"struct.std::__1::pair.819" = type opaque
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::pair.819"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.235", %"class.std::__1::vector.832", %"class.std::__1::vector.839" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.825", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.827" }
%"struct.cc::TransformNode" = type { i32, i32, i32, %"struct.cc::ElementId", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.gfx::Vector2dF", %"class.gfx::Transform", i32, i32, i24, %"class.gfx::ScrollOffset", %"class.gfx::Vector2dF", float, %"struct.cc::ElementId" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.834" }
%"struct.cc::TransformCachedNodeData" = type { %"class.gfx::Transform", %"class.gfx::Transform", i8, [3 x i8] }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.841" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.846", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.904" }
%"class.cc::PropertyTree.846" = type { i32 (...)**, %"class.std::__1::vector.847", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.876" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.870", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.849" }
%"class.std::__1::vector.849" = type { %"class.std::__1::__vector_base.850" }
%"class.std::__1::__vector_base.850" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.865" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.851, [20 x float], i32, [4 x i8], %"class.std::__1::vector.858", i32, [4 x i8] }>
%class.sk_sp.851 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.852, i32, %"class.absl::optional.853", i8, i32 }
%class.sk_sp.852 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.853" = type { %"class.absl::optional_internal::optional_data.854" }
%"class.absl::optional_internal::optional_data.854" = type { %"class.absl::optional_internal::optional_data_base.855" }
%"class.absl::optional_internal::optional_data_base.855" = type { %"class.absl::optional_internal::optional_data_dtor_base.856" }
%"class.absl::optional_internal::optional_data_dtor_base.856" = type { i8, %union.anon.857 }
%union.anon.857 = type { %struct.SkRect }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.870" = type { %"class.absl::optional_internal::optional_data.871" }
%"class.absl::optional_internal::optional_data.871" = type { %"class.absl::optional_internal::optional_data_base.872" }
%"class.absl::optional_internal::optional_data_base.872" = type { %"class.absl::optional_internal::optional_data_dtor_base.873" }
%"class.absl::optional_internal::optional_data_dtor_base.873" = type { i8, %union.anon.874 }
%union.anon.874 = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.875" }
%"class.base::internal::flat_tree.875" = type { %"class.std::__1::vector.807" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.881" }
%"class.std::__1::__hash_table.881" = type <{ %"class.std::__1::unique_ptr.882", %"class.std::__1::__compressed_pair.892", %"class.std::__1::__compressed_pair.897", %"class.std::__1::__compressed_pair.900", [4 x i8] }>
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884", %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"struct.std::__1::__hash_node_base.885"** }
%"struct.std::__1::__hash_node_base.885" = type { %"struct.std::__1::__hash_node_base.885"* }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.std::__1::__bucket_list_deallocator.887" }
%"class.std::__1::__bucket_list_deallocator.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"struct.std::__1::__hash_node_base.885" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.904" = type { %"class.std::__1::__vector_base.905" }
%"class.std::__1::__vector_base.905" = type { %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"*, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.909" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.std::__1::unique_ptr.906"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.923" }
%"class.cc::PropertyTree.923" = type { i32 (...)**, %"class.std::__1::vector.924", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.924" = type { %"class.std::__1::__vector_base.925" }
%"class.std::__1::__vector_base.925" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.938" }
%"struct.cc::ClipNode" = type <{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], %"class.base::StackVector", %"class.gfx::RectF", %"class.absl::optional.933", i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.928" }
%"struct.base::StackAllocator<cc::ClipRectData, 3>::Source" = type { [72 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* }
%"class.std::__1::vector.928" = type { %"class.std::__1::__vector_base.929" }
%"class.std::__1::__vector_base.929" = type { %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"*, %"class.std::__1::__compressed_pair.930" }
%"struct.cc::ClipRectData" = type { i32, %"struct.cc::ConditionalClip" }
%"struct.cc::ConditionalClip" = type { i8, %"class.gfx::RectF" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.cc::ClipRectData"* }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.base::StackAllocator" }
%"class.absl::optional.933" = type { %"class.absl::optional_internal::optional_data.934" }
%"class.absl::optional_internal::optional_data.934" = type { %"class.absl::optional_internal::optional_data_base.935" }
%"class.absl::optional_internal::optional_data_base.935" = type { %"class.absl::optional_internal::optional_data_dtor_base.936" }
%"class.absl::optional_internal::optional_data_dtor_base.936" = type { i8, %union.anon.937 }
%union.anon.937 = type { %"class.cc::ClipExpander" }
%"class.cc::ClipExpander" = type { i32 }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.943", i32, %"class.base::flat_map.963", %"class.base::flat_map.973", %"class.base::WeakPtr.983" }
%"class.cc::PropertyTree.943" = type { i32 (...)**, %"class.std::__1::vector.944", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.944" = type { %"class.std::__1::__vector_base.945" }
%"class.std::__1::__vector_base.945" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.958" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.946", i8, [7 x i8] }>
%"class.absl::optional.946" = type { %"class.absl::optional_internal::optional_data.947" }
%"class.absl::optional_internal::optional_data.947" = type { %"class.absl::optional_internal::optional_data_base.948" }
%"class.absl::optional_internal::optional_data_base.948" = type { %"class.absl::optional_internal::optional_data_dtor_base.949" }
%"class.absl::optional_internal::optional_data_dtor_base.949" = type { i8, %union.anon.950 }
%union.anon.950 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.951", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.std::__1::vector.951" = type { %"class.std::__1::__vector_base.952" }
%"class.std::__1::__vector_base.952" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.953" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.963" = type { %"class.base::internal::flat_tree.964" }
%"class.base::internal::flat_tree.964" = type { %"class.std::__1::vector.965" }
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"* }
%"class.base::flat_map.973" = type { %"class.base::internal::flat_tree.974" }
%"class.base::internal::flat_tree.974" = type { %"class.std::__1::vector.975" }
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %"struct.std::__1::pair.977"*, %"struct.std::__1::pair.977"*, %"class.std::__1::__compressed_pair.978" }
%"struct.std::__1::pair.977" = type opaque
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.std::__1::pair.977"* }
%"class.base::WeakPtr.983" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.984", %"class.std::__1::vector.991" }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.986" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.991" = type { %"class.std::__1::__vector_base.992" }
%"class.std::__1::__vector_base.992" = type { %"class.std::__1::vector.993"*, %"class.std::__1::vector.993"*, %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::vector.993" = type opaque
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::vector.993"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.999" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.1000 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.1001" }
%"class.absl::optional.1001" = type { %"class.absl::optional_internal::optional_data.1002" }
%"class.absl::optional_internal::optional_data.1002" = type { %"class.absl::optional_internal::optional_data_base.1003" }
%"class.absl::optional_internal::optional_data_base.1003" = type { %"class.absl::optional_internal::optional_data_dtor_base.1004" }
%"class.absl::optional_internal::optional_data_dtor_base.1004" = type { i8, %union.anon.1005 }
%union.anon.1005 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.1006 = type { %"class.cc::SyncedProperty.1007"* }
%"class.cc::SyncedProperty.1007" = type <{ %"class.base::RefCounted.1008", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.1008" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::unique_ptr.1012"*, %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::unique_ptr.1012" = type { %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.cc::LayerImpl"* }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::unique_ptr.1012"* }
%"class.std::__1::unordered_map.1023" = type { %"class.std::__1::__hash_table.1024" }
%"class.std::__1::__hash_table.1024" = type <{ %"class.std::__1::unique_ptr.1025", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1040", %"class.std::__1::__compressed_pair.1043", [4 x i8] }>
%"class.std::__1::unique_ptr.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027", %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1028"** }
%"struct.std::__1::__hash_node_base.1028" = type { %"struct.std::__1::__hash_node_base.1028"* }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.std::__1::__bucket_list_deallocator.1030" }
%"class.std::__1::__bucket_list_deallocator.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"struct.std::__1::__hash_node_base.1028" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::internal::flat_tree.1047" = type { %"class.std::__1::vector.1048" }
%"class.std::__1::vector.1048" = type { %"class.std::__1::__vector_base.1049" }
%"class.std::__1::__vector_base.1049" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1055" = type { %"class.std::__1::__hash_table.1056" }
%"class.std::__1::__hash_table.1056" = type <{ %"class.std::__1::unique_ptr.1057", %"class.std::__1::__compressed_pair.1067", %"class.std::__1::__compressed_pair.1072", %"class.std::__1::__compressed_pair.1075", [4 x i8] }>
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059", %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.std::__1::__hash_node_base.1060"** }
%"struct.std::__1::__hash_node_base.1060" = type { %"struct.std::__1::__hash_node_base.1060"* }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.std::__1::__bucket_list_deallocator.1062" }
%"class.std::__1::__bucket_list_deallocator.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.std::__1::__hash_node_base.1060" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.1079" = type { %"class.std::__1::__hash_table.1080" }
%"class.std::__1::__hash_table.1080" = type <{ %"class.std::__1::unique_ptr.1081", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1096", %"class.std::__1::__compressed_pair.1099", [4 x i8] }>
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083", %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::__hash_node_base.1084"** }
%"struct.std::__1::__hash_node_base.1084" = type { %"struct.std::__1::__hash_node_base.1084"* }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.std::__1::__bucket_list_deallocator.1086" }
%"class.std::__1::__bucket_list_deallocator.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"struct.std::__1::__hash_node_base.1084" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.1103" = type { %"class.std::__1::__hash_table.1104" }
%"class.std::__1::__hash_table.1104" = type <{ %"class.std::__1::unique_ptr.1105", %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1120", %"class.std::__1::__compressed_pair.1123", [4 x i8] }>
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107", %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1108"** }
%"struct.std::__1::__hash_node_base.1108" = type { %"struct.std::__1::__hash_node_base.1108"* }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.std::__1::__bucket_list_deallocator.1110" }
%"class.std::__1::__bucket_list_deallocator.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::__hash_node_base.1108" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::flat_map.1127" = type { %"class.base::internal::flat_tree.1128" }
%"class.base::internal::flat_tree.1128" = type { %"class.std::__1::vector.1129" }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %"struct.std::__1::pair.1131"*, %"struct.std::__1::pair.1131"*, %"class.std::__1::__compressed_pair.1132" }
%"struct.std::__1::pair.1131" = type opaque
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::pair.1131"* }
%"class.std::__1::vector.1137" = type { %"class.std::__1::__vector_base.1138" }
%"class.std::__1::__vector_base.1138" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1139" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1220", %class.scoped_refptr.1228, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1280", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1285", %"class.base::flat_map.1292", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1214", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1223", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1265", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1228, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1223" = type { %"class.std::__1::__vector_base.1224" }
%"class.std::__1::__vector_base.1224" = type { %"class.std::__1::unique_ptr.1225"*, %"class.std::__1::unique_ptr.1225"*, %"class.std::__1::__compressed_pair.1260" }
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1228, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1231", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1231" = type { %"class.std::__1::__hash_table.1232" }
%"class.std::__1::__hash_table.1232" = type <{ %"class.std::__1::unique_ptr.1233", %"class.std::__1::__compressed_pair.1243", %"class.std::__1::__compressed_pair.1248", %"class.std::__1::__compressed_pair.1251", [4 x i8] }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235", %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::__hash_node_base.1236"** }
%"struct.std::__1::__hash_node_base.1236" = type { %"struct.std::__1::__hash_node_base.1236"* }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.std::__1::__bucket_list_deallocator.1238" }
%"class.std::__1::__bucket_list_deallocator.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"struct.std::__1::__hash_node_base.1236" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"class.std::__1::unique_ptr.1225"* }
%"class.std::__1::deque.1265" = type { %"class.std::__1::__deque_base.1266" }
%"class.std::__1::__deque_base.1266" = type { %"struct.std::__1::__split_buffer.1267", i64, %"class.std::__1::__compressed_pair.1273" }
%"struct.std::__1::__split_buffer.1267" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1268" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1228 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1229", [4 x i8], i64, %class.scoped_refptr.1230, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1229" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1230 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1280" = type { %"class.absl::optional_internal::optional_data.1281" }
%"class.absl::optional_internal::optional_data.1281" = type { %"class.absl::optional_internal::optional_data_base.1282" }
%"class.absl::optional_internal::optional_data_base.1282" = type { %"class.absl::optional_internal::optional_data_dtor_base.1283" }
%"class.absl::optional_internal::optional_data_dtor_base.1283" = type { i8, %union.anon.1284 }
%union.anon.1284 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1285" = type { %"class.std::__1::__vector_base.1286" }
%"class.std::__1::__vector_base.1286" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1292" = type { %"class.base::internal::flat_tree.1293" }
%"class.base::internal::flat_tree.1293" = type { %"class.std::__1::vector.1294" }
%"class.std::__1::vector.1294" = type { %"class.std::__1::__vector_base.1295" }
%"class.std::__1::__vector_base.1295" = type { %"struct.std::__1::pair.1296"*, %"struct.std::__1::pair.1296"*, %"class.std::__1::__compressed_pair.1297" }
%"struct.std::__1::pair.1296" = type opaque
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"struct.std::__1::pair.1296"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1144" = type { %"class.std::__1::vector.1137" }
%"class.base::internal::flat_tree.598" = type { %"class.std::__1::vector.599" }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.606" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.601", %"class.viz::SurfaceId" }
%"class.absl::optional.601" = type { %"class.absl::optional_internal::optional_data.602" }
%"class.absl::optional_internal::optional_data.602" = type { %"class.absl::optional_internal::optional_data_base.603" }
%"class.absl::optional_internal::optional_data_base.603" = type { %"class.absl::optional_internal::optional_data_dtor_base.604" }
%"class.absl::optional_internal::optional_data_dtor_base.604" = type { i8, %union.anon.605 }
%union.anon.605 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1145" = type { %"class.std::__1::__vector_base.1146" }
%"class.std::__1::__vector_base.1146" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::unique_ptr.116"*, %"class.std::__1::unique_ptr.116"*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::unique_ptr.116"* }
%"class.std::__1::vector.1152" = type { %"class.std::__1::__vector_base.1153" }
%"class.std::__1::__vector_base.1153" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1154" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1159 = type { %"class.cc::SyncedProperty.1160"* }
%"class.cc::SyncedProperty.1160" = type <{ %"class.base::RefCounted.1161", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", %"class.cc::AdditionGroup.1162", i8, [3 x i8] }>
%"class.base::RefCounted.1161" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1162" = type { float }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.base::OnceCallback.635"*, %"class.base::OnceCallback.635"*, %"class.std::__1::__compressed_pair.636" }
%"class.base::OnceCallback.635" = type opaque
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.base::OnceCallback.635"* }
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %"class.std::__1::unique_ptr.758"*, %"class.std::__1::unique_ptr.758"*, %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1364", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1364" = type { %"class.absl::optional_internal::optional_data.1365" }
%"class.absl::optional_internal::optional_data.1365" = type { %"class.absl::optional_internal::optional_data_base.1366" }
%"class.absl::optional_internal::optional_data_base.1366" = type { %"class.absl::optional_internal::optional_data_dtor_base.1367" }
%"class.absl::optional_internal::optional_data_dtor_base.1367" = type { i8, %union.anon.1368 }
%union.anon.1368 = type { i32 }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.std::__1::unique_ptr.758"* }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { %"class.std::__1::unique_ptr.1178"*, %"class.std::__1::unique_ptr.1178"*, %"class.std::__1::__compressed_pair.1179" }
%"class.std::__1::unique_ptr.1178" = type opaque
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.1180" }
%"struct.std::__1::__compressed_pair_elem.1180" = type { %"class.std::__1::unique_ptr.1178"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.1303", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional", float, i8, [3 x i8] }>
%"class.absl::optional.1303" = type { %"class.absl::optional_internal::optional_data.1304" }
%"class.absl::optional_internal::optional_data.1304" = type { %"class.absl::optional_internal::optional_data_base.1305" }
%"class.absl::optional_internal::optional_data_base.1305" = type { %"class.absl::optional_internal::optional_data_dtor_base.1306" }
%"class.absl::optional_internal::optional_data_dtor_base.1306" = type { i8, %union.anon.1307 }
%union.anon.1307 = type { %"class.gfx::Rect" }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.870", i8, i8, i8, i8, %"class.std::__1::vector.1308", %"class.viz::QuadList", %"class.cc::ListContainer.1322" }
%"class.std::__1::vector.1308" = type { %"class.std::__1::__vector_base.1309" }
%"class.std::__1::__vector_base.1309" = type { %"class.std::__1::unique_ptr.1310"*, %"class.std::__1::unique_ptr.1310"*, %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::unique_ptr.1310" = type opaque
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"class.std::__1::unique_ptr.1310"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.1316" }
%"class.std::__1::unique_ptr.1316" = type { %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.1322" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.cc::AppendQuadsData" = type opaque
%"class.viz::DebugBorderDrawQuad" = type { %"class.viz::DrawQuad.base", i32, i32, [4 x i8] }
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.1323"] }
%"class.util::IdType.1323" = type { %"class.base::StrongAlias.1324" }
%"class.base::StrongAlias.1324" = type { i32 }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1391", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1391" = type { %"class.std::__1::__vector_base.1392" }
%"class.std::__1::__vector_base.1392" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1393", i64, i64 }
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.1404" }
%"class.std::__1::list.1404" = type { %"class.std::__1::__list_imp.1405" }
%"class.std::__1::__list_imp.1405" = type { %"struct.std::__1::__list_node_base.1406", %"class.std::__1::__compressed_pair.1407" }
%"struct.std::__1::__list_node_base.1406" = type { %"struct.std::__1::__list_node_base.1406"*, %"struct.std::__1::__list_node_base.1406"* }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::vector.1325" = type { %"class.std::__1::__vector_base.1326" }
%"class.std::__1::__vector_base.1326" = type { %"class.cc::PrioritizedTile"*, %"class.cc::PrioritizedTile"*, %"class.std::__1::__compressed_pair.1349" }
%"class.cc::PrioritizedTile" = type <{ %"class.cc::Tile"*, %"class.cc::PictureLayerTiling"*, %"struct.cc::TilePriority", i8, i8, i8, i8 }>
%"class.cc::Tile" = type { %"class.cc::TileManager"*, %"class.cc::PictureLayerTiling"*, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::AxisTransform2d", %"class.cc::TileDrawInfo", i32, i32, i32, i32, i32, i64, i32, i8, i64, %"class.std::__1::vector.1341", %"class.gfx::Rect", %class.scoped_refptr.208 }
%"class.cc::TileDrawInfo" = type <{ i32, i32, %"class.cc::ResourcePool::InUsePoolResource", i8, i8, i8, [5 x i8] }>
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType.1323", %"class.std::__1::unique_ptr.1327", %"class.std::__1::unique_ptr.1335" }
%"class.std::__1::unique_ptr.1327" = type { %"class.std::__1::__compressed_pair.1328" }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.1329" }
%"struct.std::__1::__compressed_pair_elem.1329" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.1330", i64 }
%"class.util::IdType.1330" = type { %"class.base::StrongAlias.1331" }
%"class.base::StrongAlias.1331" = type { i64 }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"class.std::__1::vector.1341" = type { %"class.std::__1::__vector_base.1342" }
%"class.std::__1::__vector_base.1342" = type { %"struct.std::__1::pair.1343"*, %"struct.std::__1::pair.1343"*, %"class.std::__1::__compressed_pair.1344" }
%"struct.std::__1::pair.1343" = type opaque
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"struct.std::__1::pair.1343"* }
%"struct.cc::TilePriority" = type { i32, i32, float }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { %"class.cc::PrioritizedTile"* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.1354" }
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gfx::QuadF" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.base::trace_event::TracedValueJSON" = type { %"class.base::trace_event::TracedValue" }
%"class.cc::MicroBenchmarkImpl" = type { i32 (...)**, %"class.base::OnceCallback.1361", i8, %class.scoped_refptr }
%"class.base::OnceCallback.1361" = type { %"class.base::internal::CallbackBase" }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }

$_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN2cc9LayerImpl11AppendQuadsEPN3viz20CompositorRenderPassEPNS_15AppendQuadsDataE = comdat any

$_ZN2cc9LayerImpl22NotifyTileStateChangedEPKNS_4TileE = comdat any

$_ZN2cc9LayerImpl15DidBecomeActiveEv = comdat any

$_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZN4base11trace_event15TracedValueJSOND0Ev = comdat any

$_ZTVN4base11trace_event15TracedValueJSONE = comdat any

@_ZTVN2cc9LayerImplE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImplD2Ev to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImplD0Ev to i8*), i8* bitcast (i1 (%"class.cc::LayerImpl"*, i32, %"class.viz::ClientResourceProvider"*)* @_ZN2cc9LayerImpl8WillDrawENS_8DrawModeEPN3viz22ClientResourceProviderE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.viz::CompositorRenderPass"*, %"class.cc::AppendQuadsData"*)* @_ZN2cc9LayerImpl11AppendQuadsEPN3viz20CompositorRenderPassEPNS_15AppendQuadsDataE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.viz::ClientResourceProvider"*)* @_ZN2cc9LayerImpl7DidDrawEPN3viz22ClientResourceProviderE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.util::IdType.1323"*, %"class.gfx::Size"*, %"class.gfx::SizeF"*)* @_ZNK2cc9LayerImpl21GetContentsResourceIdEPN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEPN3gfx4SizeEPNS7_5SizeFE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.cc::Tile"*)* @_ZN2cc9LayerImpl22NotifyTileStateChangedEPKNS_4TileE to i8*), i8* bitcast (i1 (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl16IsScrollbarLayerEv to i8*), i8* bitcast ({ i64, i64 } (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl13GetDamageRectEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl19ResetChangeTrackingEv to i8*), i8* bitcast (void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl19VisibleOpaqueRegionEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl15DidBecomeActiveEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl15DidBeginTracingEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl16ReleaseResourcesEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl13OnPurgeMemoryEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl20ReleaseTileResourcesEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl21RecreateTileResourcesEv to i8*), i8* bitcast (%"class.cc::LayerImpl"* (%"class.cc::LayerImpl"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc9LayerImpl15CreateLayerImplEPNS_13LayerTreeImplE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl16PushPropertiesToEPS0_ to i8*), i8* bitcast (i1 (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl28IsSnappedToPixelGridInTargetEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.std::__1::vector.1325"*)* @_ZNK2cc9LayerImpl32GetAllPrioritizedTilesForTracingEPNSt3__16vectorINS_15PrioritizedTileENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)* @_ZNK2cc9LayerImpl11AsValueIntoEPN4base11trace_event11TracedValueE to i8*), i8* bitcast (i64 (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl21GPUMemoryUsageInBytesEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*)* @_ZN2cc9LayerImpl17RunMicroBenchmarkEPNS_18MicroBenchmarkImplE to i8*), i8* bitcast (void (%"class.cc::Region"*, %"class.cc::LayerImpl"*)* @_ZN2cc9LayerImpl33GetInvalidationRegionForDebuggingEv to i8*), i8* bitcast ({ i64, i64 } (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl36GetEnclosingVisibleRectInTargetSpaceEv to i8*), i8* bitcast (i1 (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl16is_surface_layerEv to i8*), i8* bitcast (i8 (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl20GetContentColorUsageEv to i8*), i8* bitcast (void (%"class.cc::LayerImpl"*, i32*, float*)* @_ZNK2cc9LayerImpl24GetDebugBorderPropertiesEPjPf to i8*), i8* bitcast (i8* (%"class.cc::LayerImpl"*)* @_ZNK2cc9LayerImpl17LayerTypeAsStringEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [14 x i8] c"cc::LayerImpl\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"LayerImpl::SetElementId\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"element\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"disabled-by-default-cc.debug\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"layer_id\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"bounds\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"transform_tree_index\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"clip_tree_index\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"effect_tree_index\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"scroll_tree_index\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"sorting_context_id\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"draws_content\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"gpu_memory_usage\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"screen_space_transform\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"layer_quad\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"all_touch_action_regions\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"wheel_event_handler_region\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"non_fast_scrollable_region\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"hit_testable\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"contents_opaque\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"layer_name\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"owner_node\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"compositing_reasons\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"compositing_reason_ids\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"annotated_invalidation_rects\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"geometry_rect\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str.33 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZTVN4base11trace_event15TracedValueJSONE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TracedValue"*)* @_ZN4base11trace_event11TracedValueD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValueJSON"*)* @_ZN4base11trace_event15TracedValueJSOND0Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*)* @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, comdat, align 8
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN2cc9LayerImplC1EPNS_13LayerTreeImplEib = hidden unnamed_addr alias void (%"class.cc::LayerImpl"*, %"class.cc::LayerTreeImpl"*, i32, i1), void (%"class.cc::LayerImpl"*, %"class.cc::LayerTreeImpl"*, i32, i1)* @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib
@_ZN2cc9LayerImplD1Ev = hidden unnamed_addr alias void (%"class.cc::LayerImpl"*), void (%"class.cc::LayerImpl"*)* @_ZN2cc9LayerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib(%"class.cc::LayerImpl"*, %"class.cc::LayerTreeImpl"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc9LayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  store %"class.cc::LayerTreeImpl"* %1, %"class.cc::LayerTreeImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, -2
  %12 = or i8 %11, %5
  store i8 %12, i8* %9, align 8
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 0
  %14 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %15 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 32, i1 false)
  %16 = load i16, i16* %14, align 4
  %17 = and i16 %16, -2048
  store i16 %17, i16* %14, align 4
  %18 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 12
  tail call void @_ZN2cc6RegionC1Ev(%"class.cc::Region"* %18) #20
  %19 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 13
  tail call void @_ZN2cc17TouchActionRegionC1Ev(%"class.cc::TouchActionRegion"* %19) #20
  %20 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 14
  tail call void @_ZN2cc6RegionC1Ev(%"class.cc::Region"* %20) #20
  %21 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 15
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 16
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %24 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 21
  %25 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -1, i64 16, i1 false)
  store i32 0, i32* %24, align 8
  %26 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23, i32 0
  %27 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 24
  %29 = bitcast %"class.gfx::Rect"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 16, i1 false) #20
  %30 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25
  tail call void @_ZN2cc14DrawPropertiesC1Ev(%"struct.cc::DrawProperties"* %30) #20
  %31 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 26, i32 0
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 26, i32 1
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 26, i32 2
  %34 = bitcast %"class.gfx::Transform"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #20
  %35 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 26, i32 2, i32 0, i32 1
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 28
  %37 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 30
  %38 = bitcast %"class.std::__1::unique_ptr.1194"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false)
  %39 = load i8, i8* %37, align 8
  %40 = and i8 %39, -16
  store i8 %40, i8* %37, align 8
  %41 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  tail call void @_ZN2cc13LayerTreeImpl13RegisterLayerEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %41, %"class.cc::LayerImpl"* %0) #20
  %42 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  %43 = load i64, i64* %26, align 8
  tail call void @_ZN2cc13LayerTreeImpl21AddToElementLayerListENS_9ElementIdEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %42, i64 %43, %"class.cc::LayerImpl"* %0) #20
  %44 = load i8, i8* %9, align 8
  %45 = and i8 %44, 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %4
  %48 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  %49 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %48) #20
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %37, align 8
  %52 = and i8 %51, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = or i8 %51, 1
  store i8 %55, i8* %37, align 8
  %56 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  tail call void @_ZN2cc13LayerTreeImpl28AddLayerShouldPushPropertiesEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %56, %"class.cc::LayerImpl"* %0) #20
  br label %57

57:                                               ; preds = %4, %47, %50, %54
  ret void
}

declare void @_ZN2cc6RegionC1Ev(%"class.cc::Region"*) unnamed_addr #1

declare void @_ZN2cc17TouchActionRegionC1Ev(%"class.cc::TouchActionRegion"*) unnamed_addr #1

declare void @_ZN2cc14DrawPropertiesC1Ev(%"struct.cc::DrawProperties"*) unnamed_addr #1

declare void @_ZN2cc13LayerTreeImpl13RegisterLayerEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"*, %"class.cc::LayerImpl"*) local_unnamed_addr #1

declare void @_ZN2cc13LayerTreeImpl21AddToElementLayerListENS_9ElementIdEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"*, i64, %"class.cc::LayerImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl22SetNeedsPushPropertiesEv(%"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %8 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %8) #20
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 30
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = or i8 %12, 1
  store i8 %16, i8* %11, align 8
  %17 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  tail call void @_ZN2cc13LayerTreeImpl28AddLayerShouldPushPropertiesEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %17, %"class.cc::LayerImpl"* %0) #20
  br label %18

18:                                               ; preds = %10, %1, %6, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImplD2Ev(%"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN2cc9LayerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %5 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %4, align 8
  tail call void @_ZN2cc13LayerTreeImpl15UnregisterLayerEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %5, %"class.cc::LayerImpl"* %0) #20
  %6 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %4, align 8
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23, i32 0
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN2cc13LayerTreeImpl26RemoveFromElementLayerListENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %6, i64 %8) #20
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12, !prof !2

12:                                               ; preds = %1
  %13 = ptrtoint %"class.cc::LayerImpl"* %0 to i64
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #20
  %15 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #20
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #20
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 68, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* null, i64 %13, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 2048) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #20
  br label %19

19:                                               ; preds = %1, %12
  %20 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 29, i32 0, i32 0, i32 0
  %21 = load %"class.cc::Region"*, %"class.cc::Region"** %20, align 8
  store %"class.cc::Region"* null, %"class.cc::Region"** %20, align 8
  %22 = icmp eq %"class.cc::Region"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %21) #20
  %24 = bitcast %"class.cc::Region"* %21 to i8*
  call void @_ZdlPv(i8* %24) #21
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %27 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %26, align 8
  store %"struct.cc::LayerDebugInfo"* null, %"struct.cc::LayerDebugInfo"** %26, align 8
  %28 = icmp eq %"struct.cc::LayerDebugInfo"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  call void @_ZN2cc14LayerDebugInfoD1Ev(%"struct.cc::LayerDebugInfo"* nonnull %27) #20
  %30 = bitcast %"struct.cc::LayerDebugInfo"* %27 to i8*
  call void @_ZdlPv(i8* %30) #21
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25
  call void @_ZN2cc14DrawPropertiesD1Ev(%"struct.cc::DrawProperties"* %32) #20
  %33 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 14
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* %33) #20
  %34 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 13
  call void @_ZN2cc17TouchActionRegionD1Ev(%"class.cc::TouchActionRegion"* %34) #20
  %35 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 12
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* %35) #20
  ret void
}

declare void @_ZN2cc13LayerTreeImpl15UnregisterLayerEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"*, %"class.cc::LayerImpl"*) local_unnamed_addr #1

declare void @_ZN2cc13LayerTreeImpl26RemoveFromElementLayerListENS_9ElementIdE(%"class.cc::LayerTreeImpl"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN2cc14DrawPropertiesD1Ev(%"struct.cc::DrawProperties"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc6RegionD1Ev(%"class.cc::Region"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc17TouchActionRegionD1Ev(%"class.cc::TouchActionRegion"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImplD0Ev(%"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc9LayerImplD2Ev(%"class.cc::LayerImpl"* %0) #20
  %2 = bitcast %"class.cc::LayerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc9LayerImpl26GetElementTypeForAnimationEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %3) #20
  %5 = xor i1 %4, true
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl8IsActiveEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %3) #20
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl15UpdateDebugInfoEPNS_14LayerDebugInfoE(%"class.cc::LayerImpl"* nocapture, %"struct.cc::LayerDebugInfo"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.cc::LayerDebugInfo"* %1, null
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %6 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %5, align 8
  store %"struct.cc::LayerDebugInfo"* null, %"struct.cc::LayerDebugInfo"** %5, align 8
  %7 = icmp eq %"struct.cc::LayerDebugInfo"* %6, null
  br i1 %7, label %173, label %8

8:                                                ; preds = %4
  tail call void @_ZN2cc14LayerDebugInfoD1Ev(%"struct.cc::LayerDebugInfo"* nonnull %6) #20
  %9 = bitcast %"struct.cc::LayerDebugInfo"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #21
  br label %173

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 5
  %12 = bitcast %"class.std::__1::vector.1204"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %15 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast %"class.std::__1::vector.1204"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #20
  %18 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 28
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.1194", %"class.std::__1::unique_ptr.1194"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %19, align 8
  %21 = icmp eq %"struct.cc::LayerDebugInfo"* %20, null
  br i1 %21, label %22, label %67

22:                                               ; preds = %10
  %23 = tail call i8* @_Znwm(i64 104) #21
  %24 = bitcast i8* %23 to %"struct.cc::LayerDebugInfo"*
  tail call void @_ZN2cc14LayerDebugInfoC1ERKS0_(%"struct.cc::LayerDebugInfo"* nonnull %24, %"struct.cc::LayerDebugInfo"* nonnull dereferenceable(104) %1) #20
  %25 = ptrtoint i8* %23 to i64
  %26 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %19, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.1194"* %18 to i64*
  store i64 %25, i64* %27, align 8
  %28 = icmp eq %"struct.cc::LayerDebugInfo"* %26, null
  %29 = bitcast i8* %23 to %"struct.cc::LayerDebugInfo"*
  br i1 %28, label %33, label %30

30:                                               ; preds = %22
  tail call void @_ZN2cc14LayerDebugInfoD1Ev(%"struct.cc::LayerDebugInfo"* nonnull %26) #20
  %31 = bitcast %"struct.cc::LayerDebugInfo"* %26 to i8*
  tail call void @_ZdlPv(i8* %31) #21
  %32 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %19, align 8
  br label %33

33:                                               ; preds = %30, %22
  %34 = phi %"struct.cc::LayerDebugInfo"* [ %32, %30 ], [ %29, %22 ]
  %35 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %34, i64 0, i32 5
  %36 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %35, i64 0, i32 0, i32 0
  %37 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %36, align 8
  %38 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %33
  %40 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %37 to i8*
  %41 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %34, i64 0, i32 5, i32 0, i32 1
  %42 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %41, align 8
  %43 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %42, %37
  br i1 %43, label %60, label %44

44:                                               ; preds = %39, %55
  %45 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %46, %55 ], [ %42, %39 ]
  %46 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %45, i64 -1
  %47 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %45, i64 -1, i32 2
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #21
  br label %55

55:                                               ; preds = %52, %44
  %56 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %46, %37
  br i1 %56, label %57, label %44

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.1204"* %35 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %39
  %61 = phi i8* [ %59, %57 ], [ %40, %39 ]
  store %"struct.cc::LayerDebugInfo::Invalidation"* %37, %"struct.cc::LayerDebugInfo::Invalidation"** %41, align 8
  tail call void @_ZdlPv(i8* %61) #21
  %62 = bitcast %"class.std::__1::vector.1204"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #20
  br label %63

63:                                               ; preds = %60, %33
  %64 = bitcast %"class.std::__1::vector.1204"* %35 to i64*
  store i64 %13, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %34, i64 0, i32 5, i32 0, i32 1
  %66 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %65 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %66, align 8
  br label %173

67:                                               ; preds = %10
  %68 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %20, i64 0, i32 5
  %69 = bitcast %"class.std::__1::vector.1204"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %20, i64 0, i32 5, i32 0, i32 1
  %72 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %71, align 8
  %73 = bitcast %"class.std::__1::vector.1204"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #20
  %74 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %19, align 8
  %75 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %74, i64 0, i32 0
  %76 = icmp eq %"struct.cc::LayerDebugInfo"* %74, %1
  br i1 %76, label %126, label %77

77:                                               ; preds = %67
  %78 = bitcast %"struct.cc::LayerDebugInfo"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = bitcast %"struct.cc::LayerDebugInfo"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %81, label %96, label %86

86:                                               ; preds = %77
  br i1 %85, label %90, label %87

87:                                               ; preds = %86
  %88 = bitcast %"struct.cc::LayerDebugInfo"* %74 to i8*
  %89 = bitcast %"struct.cc::LayerDebugInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %89, i64 24, i1 false) #20
  br label %106

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %75, i8* %92, i64 %94) #20
  br label %106

96:                                               ; preds = %77
  %97 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"struct.cc::LayerDebugInfo"* %1 to i8*
  %102 = zext i8 %84 to i64
  %103 = select i1 %85, i8* %98, i8* %101
  %104 = select i1 %85, i64 %100, i64 %102
  %105 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %75, i8* %103, i64 %104) #20
  br label %106

106:                                              ; preds = %96, %90, %87
  %107 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %74, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 1
  %109 = bitcast i32* %108 to i64*
  %110 = bitcast i32* %107 to i64*
  %111 = load i64, i64* %109, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %74, i64 0, i32 3
  %113 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 3, i32 0, i32 0
  %114 = load i8**, i8*** %113, align 8
  %115 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 3, i32 0, i32 1
  %116 = load i8**, i8*** %115, align 8
  tail call void @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.1197"* %112, i8** %114, i8** %116) #20
  %117 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %74, i64 0, i32 4
  %118 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 4, i32 0, i32 0
  %119 = load i8**, i8*** %118, align 8
  %120 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %121 = load i8**, i8*** %120, align 8
  tail call void @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.1197"* %117, i8** %119, i8** %121) #20
  %122 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %74, i64 0, i32 5
  %123 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %1, i64 0, i32 5, i32 0, i32 0
  %124 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %123, align 8
  %125 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %14, align 8
  tail call void @_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.1204"* %122, %"struct.cc::LayerDebugInfo::Invalidation"* %124, %"struct.cc::LayerDebugInfo::Invalidation"* %125) #20
  br label %126

126:                                              ; preds = %67, %106
  %127 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %19, align 8
  %128 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %127, i64 0, i32 5
  %129 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %128, i64 0, i32 0, i32 0
  %130 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %129, align 8
  %131 = inttoptr i64 %70 to %"struct.cc::LayerDebugInfo::Invalidation"*
  %132 = tail call %"struct.cc::LayerDebugInfo::Invalidation"* @_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector.1204"* %128, %"struct.cc::LayerDebugInfo::Invalidation"* %130, %"struct.cc::LayerDebugInfo::Invalidation"* %131, %"struct.cc::LayerDebugInfo::Invalidation"* %72)
  %133 = icmp eq i64 %70, 0
  br i1 %133, label %151, label %134

134:                                              ; preds = %126
  %135 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %72, %131
  br i1 %135, label %149, label %136

136:                                              ; preds = %134, %147
  %137 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %138, %147 ], [ %72, %134 ]
  %138 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %137, i64 -1
  %139 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %137, i64 -1, i32 2
  %140 = bitcast %"class.std::__1::basic_string"* %139 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  tail call void @_ZdlPv(i8* %146) #21
  br label %147

147:                                              ; preds = %144, %136
  %148 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %138, %131
  br i1 %148, label %149, label %136

149:                                              ; preds = %147, %134
  %150 = inttoptr i64 %70 to i8*
  tail call void @_ZdlPv(i8* %150) #21
  br label %151

151:                                              ; preds = %149, %126
  %152 = inttoptr i64 %13 to %"struct.cc::LayerDebugInfo::Invalidation"*
  %153 = icmp eq i64 %13, 0
  br i1 %153, label %173, label %154

154:                                              ; preds = %151
  %155 = extractelement <2 x i64> %16, i32 0
  %156 = inttoptr i64 %155 to %"struct.cc::LayerDebugInfo::Invalidation"*
  %157 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %156, %152
  br i1 %157, label %171, label %158

158:                                              ; preds = %154, %169
  %159 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %160, %169 ], [ %156, %154 ]
  %160 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %159, i64 -1
  %161 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %159, i64 -1, i32 2
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  tail call void @_ZdlPv(i8* %168) #21
  br label %169

169:                                              ; preds = %166, %158
  %170 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %160, %152
  br i1 %170, label %171, label %158

171:                                              ; preds = %169, %154
  %172 = inttoptr i64 %13 to i8*
  tail call void @_ZdlPv(i8* %172) #21
  br label %173

173:                                              ; preds = %171, %151, %63, %8, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.cc::LayerDebugInfo::Invalidation"* @_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector.1204"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %2 to i64
  %8 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %277

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %16, align 8
  %18 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %16 to i64*
  br i1 %21, label %152, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %60

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %2, i64 %25
  %29 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %28, %3
  br i1 %29, label %55, label %30

30:                                               ; preds = %27, %49
  %31 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %51, %49 ], [ %17, %27 ]
  %32 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %50, %49 ], [ %28, %27 ]
  %33 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %31 to i8*
  %34 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #20
  %35 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %31, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %32, i64 0, i32 2
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %30
  %42 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #20
  br label %49

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %35, i8* %46, i64 %48) #20
  br label %49

49:                                               ; preds = %44, %41
  %50 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %32, i64 1
  %51 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %31, i64 1
  %52 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %50, %3
  br i1 %52, label %53, label %30

53:                                               ; preds = %49
  %54 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %51 to i64
  br label %55

55:                                               ; preds = %53, %27
  %56 = phi i64 [ %18, %27 ], [ %54, %53 ]
  store i64 %56, i64* %22, align 8
  %57 = icmp sgt i64 %24, 0
  br i1 %57, label %58, label %277

58:                                               ; preds = %55
  %59 = inttoptr i64 %56 to %"struct.cc::LayerDebugInfo::Invalidation"*
  br label %60

60:                                               ; preds = %58, %23
  %61 = phi i64 [ %56, %58 ], [ %18, %23 ]
  %62 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %59, %58 ], [ %17, %23 ]
  %63 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %28, %58 ], [ %3, %23 ]
  %64 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %1, i64 %10
  %65 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %64 to i64
  %66 = sub i64 %61, %65
  %67 = sdiv exact i64 %66, 48
  %68 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %1, i64 %67
  %69 = icmp ult %"struct.cc::LayerDebugInfo::Invalidation"* %68, %17
  br i1 %69, label %97, label %72

70:                                               ; preds = %97
  %71 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %107 to i64
  br label %72

72:                                               ; preds = %70, %60
  %73 = phi i64 [ %71, %70 ], [ %61, %60 ]
  store i64 %73, i64* %22, align 8
  %74 = icmp eq i64 %66, 0
  br i1 %74, label %109, label %75

75:                                               ; preds = %72, %91
  %76 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %79, %91 ], [ %62, %72 ]
  %77 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %78, %91 ], [ %68, %72 ]
  %78 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %77, i64 -1
  %79 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %76, i64 -1
  %80 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %79 to i8*
  %81 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #20
  %82 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %76, i64 -1, i32 2
  %83 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %77, i64 -1, i32 2
  %84 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %75
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #21
  br label %91

91:                                               ; preds = %88, %75
  %92 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #20
  %94 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  store i8 0, i8* %95, align 1
  store i8 0, i8* %93, align 1
  %96 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %78, %1
  br i1 %96, label %109, label %75

97:                                               ; preds = %60, %97
  %98 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %107, %97 ], [ %62, %60 ]
  %99 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %106, %97 ], [ %68, %60 ]
  %100 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %98 to i8*
  %101 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %99 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 24, i1 false) #20
  %102 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %98, i64 0, i32 2
  %103 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %99, i64 0, i32 2
  %104 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  %105 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #20
  %106 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %99, i64 1
  %107 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %98, i64 1
  %108 = icmp ult %"struct.cc::LayerDebugInfo::Invalidation"* %106, %17
  br i1 %108, label %97, label %70

109:                                              ; preds = %91, %72
  %110 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %63, %2
  br i1 %110, label %277, label %111

111:                                              ; preds = %109, %148
  %112 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %150, %148 ], [ %1, %109 ]
  %113 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %149, %148 ], [ %2, %109 ]
  %114 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %112 to i8*
  %115 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #20
  %116 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %112, i64 0, i32 2
  %117 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %113, i64 0, i32 2
  %118 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %112, %113
  br i1 %118, label %148, label %119

119:                                              ; preds = %111
  %120 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = bitcast %"class.std::__1::basic_string"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %123, label %138, label %128

128:                                              ; preds = %119
  br i1 %127, label %132, label %129

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  %131 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #20
  br label %148

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %116, i8* %134, i64 %136) #20
  br label %148

138:                                              ; preds = %119
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.std::__1::basic_string"* %117 to i8*
  %144 = zext i8 %126 to i64
  %145 = select i1 %127, i8* %140, i8* %143
  %146 = select i1 %127, i64 %142, i64 %144
  %147 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %116, i8* %145, i64 %146) #20
  br label %148

148:                                              ; preds = %138, %132, %129, %111
  %149 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %113, i64 1
  %150 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %112, i64 1
  %151 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %149, %63
  br i1 %151, label %277, label %111

152:                                              ; preds = %12
  %153 = bitcast %"class.std::__1::vector.1204"* %0 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %18, %154
  %156 = sdiv exact i64 %155, 48
  %157 = add nsw i64 %156, %10
  %158 = icmp ugt i64 %157, 384307168202282325
  br i1 %158, label %159, label %161

159:                                              ; preds = %152
  %160 = bitcast %"class.std::__1::vector.1204"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #22
  unreachable

161:                                              ; preds = %152
  %162 = sub i64 %15, %154
  %163 = sdiv exact i64 %162, 48
  %164 = icmp ult i64 %163, 192153584101141162
  br i1 %164, label %168, label %165

165:                                              ; preds = %161
  %166 = sub i64 %5, %154
  %167 = sdiv exact i64 %166, 48
  br label %175

168:                                              ; preds = %161
  %169 = shl nsw i64 %163, 1
  %170 = icmp ult i64 %169, %157
  %171 = select i1 %170, i64 %157, i64 %169
  %172 = sub i64 %5, %154
  %173 = sdiv exact i64 %172, 48
  %174 = icmp eq i64 %171, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %168, %165
  %176 = phi i64 [ %167, %165 ], [ %173, %168 ]
  %177 = phi i64 [ 384307168202282325, %165 ], [ %171, %168 ]
  %178 = mul i64 %177, 48
  %179 = tail call i8* @_Znwm(i64 %178) #21
  %180 = bitcast i8* %179 to %"struct.cc::LayerDebugInfo::Invalidation"*
  br label %181

181:                                              ; preds = %175, %168
  %182 = phi i64 [ %176, %175 ], [ %173, %168 ]
  %183 = phi i64 [ %177, %175 ], [ 0, %168 ]
  %184 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %180, %175 ], [ null, %168 ]
  %185 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %184, i64 %182
  %186 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %185 to i64
  %187 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %184, i64 %183
  %188 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %187 to i64
  %189 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %185, i64 %10
  br label %190

190:                                              ; preds = %181, %210
  %191 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %211, %210 ], [ %185, %181 ]
  %192 = phi i64 [ %212, %210 ], [ %186, %181 ]
  %193 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %213, %210 ], [ %2, %181 ]
  %194 = inttoptr i64 %192 to i8*
  %195 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 24, i1 false) #20
  %196 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %191, i64 0, i32 2
  %197 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %193, i64 0, i32 2
  %198 = bitcast %"class.std::__1::basic_string"* %197 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %205, label %202

202:                                              ; preds = %190
  %203 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  %204 = bitcast %"class.std::__1::basic_string"* %197 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 24, i1 false) #20
  br label %210

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %197, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %209 = load i64, i64* %208, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %196, i8* %207, i64 %209) #20
  br label %210

210:                                              ; preds = %205, %202
  %211 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %191, i64 1
  %212 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %211 to i64
  %213 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %193, i64 1
  %214 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %189, %211
  br i1 %214, label %215, label %190

215:                                              ; preds = %210
  %216 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %6, align 8
  %217 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %216, %1
  br i1 %217, label %232, label %218

218:                                              ; preds = %215, %218
  %219 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %221, %218 ], [ %185, %215 ]
  %220 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %222, %218 ], [ %1, %215 ]
  %221 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %219, i64 -1
  %222 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %220, i64 -1
  %223 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %221 to i8*
  %224 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 24, i1 false) #20
  %225 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %219, i64 -1, i32 2
  %226 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %220, i64 -1, i32 2
  %227 = bitcast %"class.std::__1::basic_string"* %225 to i8*
  %228 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 24, i1 false) #20
  %229 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %222, %216
  br i1 %229, label %230, label %218

230:                                              ; preds = %218
  %231 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %221 to i64
  br label %232

232:                                              ; preds = %230, %215
  %233 = phi i64 [ %186, %215 ], [ %231, %230 ]
  %234 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %185, %215 ], [ %221, %230 ]
  %235 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %16, align 8
  %236 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %235, %1
  br i1 %236, label %237, label %239

237:                                              ; preds = %232
  %238 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %234 to i64
  br label %253

239:                                              ; preds = %232, %239
  %240 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %249, %239 ], [ %189, %232 ]
  %241 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %248, %239 ], [ %1, %232 ]
  %242 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %240 to i8*
  %243 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %241 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 24, i1 false) #20
  %244 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %240, i64 0, i32 2
  %245 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %241, i64 0, i32 2
  %246 = bitcast %"class.std::__1::basic_string"* %244 to i8*
  %247 = bitcast %"class.std::__1::basic_string"* %245 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %247, i64 24, i1 false) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 24, i1 false) #20
  %248 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %241, i64 1
  %249 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %240, i64 1
  %250 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %248, %235
  br i1 %250, label %251, label %239

251:                                              ; preds = %239
  %252 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %16, align 8
  br label %253

253:                                              ; preds = %251, %237
  %254 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %1, %237 ], [ %252, %251 ]
  %255 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %189, %237 ], [ %249, %251 ]
  %256 = phi i64 [ %238, %237 ], [ %233, %251 ]
  %257 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %255 to i64
  %258 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %6, align 8
  store i64 %256, i64* %153, align 8
  store i64 %257, i64* %22, align 8
  store i64 %188, i64* %14, align 8
  %259 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %254, %258
  br i1 %259, label %273, label %260

260:                                              ; preds = %253, %271
  %261 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %262, %271 ], [ %254, %253 ]
  %262 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %261, i64 -1
  %263 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %261, i64 -1, i32 2
  %264 = bitcast %"class.std::__1::basic_string"* %263 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %264, i64 0, i32 1, i32 0
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %260
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %263, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  tail call void @_ZdlPv(i8* %270) #21
  br label %271

271:                                              ; preds = %268, %260
  %272 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %262, %258
  br i1 %272, label %273, label %260

273:                                              ; preds = %271, %253
  %274 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %258, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %273
  %276 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %258 to i8*
  tail call void @_ZdlPv(i8* %276) #21
  br label %277

277:                                              ; preds = %148, %275, %273, %55, %109, %4
  %278 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %1, %4 ], [ %1, %109 ], [ %1, %55 ], [ %185, %273 ], [ %185, %275 ], [ %1, %148 ]
  ret %"struct.cc::LayerDebugInfo::Invalidation"* %278
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc9LayerImpl21SetTransformTreeIndexEi(%"class.cc::LayerImpl"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc9LayerImpl16SetClipTreeIndexEi(%"class.cc::LayerImpl"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 19
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc9LayerImpl18SetEffectTreeIndexEi(%"class.cc::LayerImpl"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  %7 = sext i32 %5 to i64
  br i1 %6, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 %7
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %"struct.cc::EffectNode"* [ %11, %8 ], [ null, %1 ]
  %14 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %15, i64 %7, i32 0, i32 0, i32 0
  %17 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %16, align 8
  %18 = icmp eq %"class.cc::RenderSurfaceImpl"* %17, null
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 0, i32 20
  %21 = select i1 %18, i32* %20, i32* %19
  %22 = load i32, i32* %21, align 8
  ret i32 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(112) %"class.cc::EffectTree"* @_ZNK2cc9LayerImpl13GetEffectTreeEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 4
  ret %"class.cc::EffectTree"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc9LayerImpl18SetScrollTreeIndexEi(%"class.cc::LayerImpl"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 20
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl23PopulateSharedQuadStateEPN3viz15SharedQuadStateEb(%"class.cc::LayerImpl"*, %"class.viz::SharedQuadState"*, i1 zeroext) local_unnamed_addr #7 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca %"class.absl::optional.1303", align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %8 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %17

12:                                               ; preds = %3
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %15 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %14, align 8
  %16 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 %13
  br label %17

17:                                               ; preds = %3, %12
  %18 = phi %"struct.cc::EffectNode"* [ %16, %12 ], [ null, %3 ]
  %19 = getelementptr inbounds %"class.absl::optional.1303", %"class.absl::optional.1303"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %19) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -86, i64 20, i1 false)
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 5
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 9
  %25 = getelementptr inbounds %"class.absl::optional.1303", %"class.absl::optional.1303"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %union.anon.1307* %25 to i8*
  %27 = bitcast %"class.gfx::Rect"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 16, i1 false) #20
  store i8 1, i8* %19, align 4
  br label %28

28:                                               ; preds = %17, %23
  %29 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 0
  %30 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #20
  %31 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %32 = load i16, i16* %31, align 4
  %33 = and i16 %32, 1024
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %37 = bitcast %"class.gfx::Size"* %36 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = trunc i64 %38 to i32
  %40 = lshr i64 %38, 32
  %41 = trunc i64 %40 to i32
  br label %63

42:                                               ; preds = %28
  %43 = bitcast <2 x float>* %4 to %"class.gfx::Vector2dF"*
  %44 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #20
  %45 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 14
  %46 = bitcast %"class.gfx::Vector2dF"* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = bitcast <2 x float>* %4 to i64*
  store i64 %47, i64* %48, align 8
  %49 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %43) #20
  %50 = trunc i64 %49 to i32
  %51 = lshr i64 %49, 32
  %52 = trunc i64 %51 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #20
  %53 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, %50
  %56 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, %52
  %59 = icmp sgt i32 %55, 0
  %60 = select i1 %59, i32 %55, i32 0
  %61 = icmp sgt i32 %58, 0
  %62 = select i1 %61, i32 %58, i32 0
  br label %63

63:                                               ; preds = %35, %42
  %64 = phi i32 [ %39, %35 ], [ %60, %42 ]
  %65 = phi i32 [ %41, %35 ], [ %62, %42 ]
  %66 = zext i32 %65 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %64 to i64
  %69 = or i64 %67, %68
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1
  %73 = bitcast %"class.gfx::Size"* %72 to i64*
  store i64 %69, i64* %73, align 4
  %74 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7
  %75 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 10
  %76 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 3
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %18, i64 0, i32 17
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %63
  %82 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %18, i64 0, i32 12
  %83 = load i32, i32* %82, align 4
  br label %84

84:                                               ; preds = %63, %81
  %85 = phi i32 [ %83, %81 ], [ 3, %63 ]
  %86 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %87 = load i32, i32* %86, align 8
  %88 = icmp sgt i32 %87, -1
  br i1 %88, label %89, label %95

89:                                               ; preds = %84
  %90 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  %91 = sext i32 %87 to i64
  %92 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %90, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %93 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %92, align 8
  %94 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %93, i64 %91
  br label %95

95:                                               ; preds = %84, %89
  %96 = phi %"struct.cc::TransformNode"* [ %94, %89 ], [ null, %84 ]
  %97 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %96, i64 0, i32 9
  %98 = load i32, i32* %97, align 8
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %1, %"class.gfx::Transform"* dereferenceable(68) %29, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.gfx::Rect"* dereferenceable(16) %74, %"class.gfx::MaskFilterInfo"* dereferenceable(52) %75, %"class.absl::optional.1303"* nonnull dereferenceable(20) %5, i1 zeroext %2, float %77, i32 %85, i32 %98) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #20
  %99 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 6
  %100 = load i8, i8* %99, align 2, !range !3
  %101 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 10
  store i8 %100, i8* %101, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %19) #20
  ret void
}

declare void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"*, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::MaskFilterInfo"* dereferenceable(52), %"class.absl::optional.1303"* dereferenceable(20), i1 zeroext, float, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2cc9LayerImpl6boundsEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 4
  %5 = and i16 %4, 1024
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %9 = bitcast %"class.gfx::Size"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  br label %37

14:                                               ; preds = %1
  %15 = bitcast <2 x float>* %2 to %"class.gfx::Vector2dF"*
  %16 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #20
  %17 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %18 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %18, i64 0, i32 5, i32 14
  %20 = bitcast %"class.gfx::Vector2dF"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  %22 = bitcast <2 x float>* %2 to i64*
  store i64 %21, i64* %22, align 8
  %23 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %15) #20
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 32
  %26 = trunc i64 %25 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #20
  %27 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, %24
  %30 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, %26
  %33 = icmp sgt i32 %29, 0
  %34 = select i1 %33, i32 %29, i32 0
  %35 = icmp sgt i32 %32, 0
  %36 = select i1 %35, i32 %32, i32 0
  br label %37

37:                                               ; preds = %14, %7
  %38 = phi i32 [ %11, %7 ], [ %34, %14 ]
  %39 = phi i32 [ %13, %7 ], [ %36, %14 ]
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %38 to i64
  %43 = or i64 %41, %42
  ret i64 %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc9LayerImpl19GetSortingContextIdEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %7 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %6, align 8
  %8 = sext i32 %3 to i64
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %7, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 %8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %"struct.cc::TransformNode"* [ %11, %5 ], [ null, %1 ]
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %13, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl29PopulateScaledSharedQuadStateEPN3viz15SharedQuadStateEfb(%"class.cc::LayerImpl"*, %"class.viz::SharedQuadState"*, float, i1 zeroext) local_unnamed_addr #7 align 2 {
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.absl::optional.1303", align 4
  %7 = alloca <2 x float>, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Size"*
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %12 = alloca %"class.gfx::Rect", align 4
  %13 = alloca %"class.gfx::Rect", align 4
  %14 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #20
  %15 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %16 = load i16, i16* %15, align 4
  %17 = and i16 %16, 1024
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %21 = bitcast %"class.gfx::Size"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  br label %49

26:                                               ; preds = %4
  %27 = bitcast <2 x float>* %7 to %"class.gfx::Vector2dF"*
  %28 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #20
  %29 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %30 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %30, i64 0, i32 5, i32 14
  %32 = bitcast %"class.gfx::Vector2dF"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = bitcast <2 x float>* %7 to i64*
  store i64 %33, i64* %34, align 8
  %35 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %27) #20
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #20
  %39 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, %36
  %42 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %38
  %45 = icmp sgt i32 %41, 0
  %46 = select i1 %45, i32 %41, i32 0
  %47 = icmp sgt i32 %44, 0
  %48 = select i1 %47, i32 %44, i32 0
  br label %49

49:                                               ; preds = %19, %26
  %50 = phi i32 [ %23, %19 ], [ %46, %26 ]
  %51 = phi i32 [ %25, %19 ], [ %48, %26 ]
  %52 = zext i32 %51 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %50 to i64
  %55 = or i64 %53, %54
  store i64 %55, i64* %8, align 8
  %56 = call i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %9, float %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #20
  %57 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #20
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %59 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7
  %60 = bitcast %"class.gfx::Rect"* %59 to i64*
  %61 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 16, i1 false)
  %62 = load i64, i64* %60, align 4
  %63 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7, i32 1
  %64 = bitcast %"class.gfx::Size"* %63 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = trunc i64 %62 to i32
  %67 = lshr i64 %62, 32
  %68 = trunc i64 %67 to i32
  %69 = fcmp oeq float %2, 1.000000e+00
  br i1 %69, label %124, label %70

70:                                               ; preds = %49
  %71 = sitofp i32 %66 to float
  %72 = fmul float %71, %2
  %73 = call float @llvm.floor.f32(float %72) #20
  %74 = fptosi float %73 to i32
  %75 = sitofp i32 %68 to float
  %76 = fmul float %75, %2
  %77 = call float @llvm.floor.f32(float %76) #20
  %78 = fptosi float %77 to i32
  %79 = trunc i64 %65 to i32
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %70
  %82 = add nsw i32 %79, %66
  %83 = sitofp i32 %82 to float
  %84 = fmul float %83, %2
  %85 = call float @llvm.ceil.f32(float %84) #20
  %86 = fptosi float %85 to i32
  br label %87

87:                                               ; preds = %81, %70
  %88 = phi i32 [ %86, %81 ], [ %74, %70 ]
  %89 = lshr i64 %65, 32
  %90 = trunc i64 %89 to i32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %98, label %92

92:                                               ; preds = %87
  %93 = add nsw i32 %90, %68
  %94 = sitofp i32 %93 to float
  %95 = fmul float %94, %2
  %96 = call float @llvm.ceil.f32(float %95) #20
  %97 = fptosi float %96 to i32
  br label %98

98:                                               ; preds = %92, %87
  %99 = phi i32 [ %97, %92 ], [ %78, %87 ]
  %100 = sub nsw i32 %88, %74
  %101 = sub nsw i32 %99, %78
  %102 = icmp sgt i32 %74, 0
  %103 = icmp sgt i32 %100, 0
  %104 = and i1 %102, %103
  %105 = sub nuw nsw i32 2147483647, %74
  %106 = icmp ult i32 %105, %100
  %107 = and i1 %106, %104
  %108 = select i1 %107, i32 %105, i32 %100
  %109 = icmp sgt i32 %78, 0
  %110 = icmp sgt i32 %101, 0
  %111 = and i1 %109, %110
  %112 = sub nuw nsw i32 2147483647, %78
  %113 = icmp ult i32 %112, %101
  %114 = and i1 %113, %111
  %115 = select i1 %114, i32 %112, i32 %101
  %116 = icmp sgt i32 %108, 0
  %117 = select i1 %116, i32 %108, i32 0
  %118 = zext i32 %117 to i64
  %119 = icmp sgt i32 %115, 0
  %120 = select i1 %119, i32 %115, i32 0
  %121 = zext i32 %120 to i64
  %122 = shl nuw nsw i64 %121, 32
  %123 = or i64 %122, %118
  br label %124

124:                                              ; preds = %49, %98
  %125 = phi i32 [ %78, %98 ], [ %68, %49 ]
  %126 = phi i32 [ %74, %98 ], [ %66, %49 ]
  %127 = phi i64 [ %123, %98 ], [ %65, %49 ]
  %128 = zext i32 %125 to i64
  %129 = shl nuw i64 %128, 32
  %130 = zext i32 %126 to i64
  %131 = or i64 %129, %130
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %131, i64* %132, align 8
  store i64 %127, i64* %58, align 8
  %133 = bitcast %"class.gfx::Rect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #20
  %134 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 0
  store i32 0, i32* %134, align 4
  %135 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 1
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1
  %137 = bitcast %"class.gfx::Size"* %136 to i64*
  store i64 %56, i64* %137, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %12) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #20
  %138 = bitcast %"class.gfx::Rect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #20
  %139 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 0, i32 0, i32 0
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 0, i32 0, i32 1
  store i32 0, i32* %140, align 4
  %141 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 0, i32 1
  %142 = bitcast %"class.gfx::Size"* %141 to i64*
  store i64 %56, i64* %142, align 4
  %143 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %143) #20
  %144 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 0
  %145 = bitcast %"class.gfx::Transform"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %143, i8* align 4 %145, i64 68, i1 false) #20
  %146 = fdiv float 1.000000e+00, %2
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %5, float %146, float %146) #20
  %147 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %148 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %147, align 8
  %149 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %150 = load i32, i32* %149, align 4
  %151 = icmp sgt i32 %150, -1
  br i1 %151, label %152, label %157

152:                                              ; preds = %124
  %153 = sext i32 %150 to i64
  %154 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %148, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %155 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %154, align 8
  %156 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %155, i64 %153
  br label %157

157:                                              ; preds = %152, %124
  %158 = phi %"struct.cc::EffectNode"* [ %156, %152 ], [ null, %124 ]
  %159 = getelementptr inbounds %"class.absl::optional.1303", %"class.absl::optional.1303"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %159) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %159, i8 -86, i64 20, i1 false) #20
  store i8 0, i8* %159, align 4
  %160 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 5
  %161 = load i8, i8* %160, align 1, !range !3
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %168, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 9
  %165 = getelementptr inbounds %"class.absl::optional.1303", %"class.absl::optional.1303"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %166 = bitcast %union.anon.1307* %165 to i8*
  %167 = bitcast %"class.gfx::Rect"* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %166, i8* align 4 %167, i64 16, i1 false) #20
  store i8 1, i8* %159, align 4
  br label %168

168:                                              ; preds = %163, %157
  %169 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 10
  %170 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 3
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %158, i64 0, i32 17
  %173 = load i8, i8* %172, align 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %158, i64 0, i32 12
  %177 = load i32, i32* %176, align 4
  br label %178

178:                                              ; preds = %175, %168
  %179 = phi i32 [ %177, %175 ], [ 3, %168 ]
  %180 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %181 = load i32, i32* %180, align 8
  %182 = icmp sgt i32 %181, -1
  br i1 %182, label %183, label %188

183:                                              ; preds = %178
  %184 = sext i32 %181 to i64
  %185 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %148, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %186 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %185, align 8
  %187 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %186, i64 %184
  br label %188

188:                                              ; preds = %178, %183
  %189 = phi %"struct.cc::TransformNode"* [ %187, %183 ], [ null, %178 ]
  %190 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %189, i64 0, i32 9
  %191 = load i32, i32* %190, align 8
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %1, %"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %13, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, %"class.gfx::MaskFilterInfo"* dereferenceable(52) %169, %"class.absl::optional.1303"* nonnull dereferenceable(20) %6, i1 zeroext %3, float %171, i32 %179, i32 %191) #20
  %192 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 6
  %193 = load i8, i8* %192, align 2, !range !3
  %194 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 10
  store i8 %193, i8* %194, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %159) #20
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %143) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #20
  ret void
}

declare i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #1

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl45PopulateScaledSharedQuadStateWithContentRectsEPN3viz15SharedQuadStateEfRKN3gfx4RectES7_b(%"class.cc::LayerImpl"*, %"class.viz::SharedQuadState"*, float, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.absl::optional.1303", align 4
  %9 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %9) #20
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 0
  %11 = bitcast %"class.gfx::Transform"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %11, i64 68, i1 false) #20
  %12 = fdiv float 1.000000e+00, %2
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %7, float %12, float %12) #20
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %14 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %23

18:                                               ; preds = %6
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %14, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %21 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %20, align 8
  %22 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %21, i64 %19
  br label %23

23:                                               ; preds = %6, %18
  %24 = phi %"struct.cc::EffectNode"* [ %22, %18 ], [ null, %6 ]
  %25 = getelementptr inbounds %"class.absl::optional.1303", %"class.absl::optional.1303"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %25) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 -86, i64 20, i1 false)
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 5
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 9
  %31 = getelementptr inbounds %"class.absl::optional.1303", %"class.absl::optional.1303"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %union.anon.1307* %31 to i8*
  %33 = bitcast %"class.gfx::Rect"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 16, i1 false) #20
  store i8 1, i8* %25, align 4
  br label %34

34:                                               ; preds = %23, %29
  %35 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 10
  %36 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 3
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %24, i64 0, i32 17
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %24, i64 0, i32 12
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %34, %41
  %45 = phi i32 [ %43, %41 ], [ 3, %34 ]
  %46 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = sext i32 %47 to i64
  %51 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %14, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %52 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %51, align 8
  %53 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %52, i64 %50
  br label %54

54:                                               ; preds = %44, %49
  %55 = phi %"struct.cc::TransformNode"* [ %53, %49 ], [ null, %44 ]
  %56 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %55, i64 0, i32 9
  %57 = load i32, i32* %56, align 8
  call void @_ZN3viz15SharedQuadState6SetAllERKN3gfx9TransformERKNS1_4RectES7_RKNS1_14MaskFilterInfoERKN4absl8optionalIS5_EEbf11SkBlendModei(%"class.viz::SharedQuadState"* %1, %"class.gfx::Transform"* nonnull dereferenceable(68) %7, %"class.gfx::Rect"* dereferenceable(16) %3, %"class.gfx::Rect"* dereferenceable(16) %4, %"class.gfx::MaskFilterInfo"* dereferenceable(52) %35, %"class.absl::optional.1303"* nonnull dereferenceable(20) %8, i1 zeroext %5, float %37, i32 %45, i32 %57) #20
  %58 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 6
  %59 = load i8, i8* %58, align 2, !range !3
  %60 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %1, i64 0, i32 10
  store i8 %59, i8* %60, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %25) #20
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %9) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl22GetScaledDrawTransformEf(%"class.gfx::Transform"* noalias sret, %"class.cc::LayerImpl"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.gfx::Transform"* %0 to i8*
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 0
  %6 = bitcast %"class.gfx::Transform"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %6, i64 68, i1 false) #20
  %7 = fdiv float 1.000000e+00, %2
  tail call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* %0, float %7, float %7) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc9LayerImpl8WillDrawENS_8DrawModeEPN3viz22ClientResourceProviderE(%"class.cc::LayerImpl"*, i32, %"class.viz::ClientResourceProvider"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7
  %6 = bitcast %"class.gfx::Rect"* %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 4
  %8 = extractelement <2 x i64> %7, i32 1
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #20
  br label %20

13:                                               ; preds = %3
  %14 = icmp ult i64 %8, 4294967296
  %15 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #20
  br i1 %14, label %20, label %16

16:                                               ; preds = %13
  %17 = bitcast <2 x i64>* %4 to %"class.gfx::Rect"*
  %18 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 2
  store <2 x i64> %7, <2 x i64>* %4, align 16
  %19 = call zeroext i1 @_ZNK2cc9Occlusion10IsOccludedERKN3gfx4RectE(%"class.cc::Occlusion"* %18, %"class.gfx::Rect"* nonnull dereferenceable(16) %17) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #20
  br i1 %19, label %42, label %22

20:                                               ; preds = %11, %13
  %21 = phi i8* [ %12, %11 ], [ %15, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #20
  br label %42

22:                                               ; preds = %16
  %23 = icmp eq i32 %1, 3
  br i1 %23, label %24, label %40

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %28, label %40

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %30 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %30, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %33 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %32, align 8
  %34 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 %31
  %35 = icmp eq %"struct.cc::EffectNode"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %33, i64 %31, i32 12
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 6
  br i1 %39, label %42, label %40

40:                                               ; preds = %24, %28, %36, %22
  %41 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 21
  store i32 %1, i32* %41, align 8
  br label %42

42:                                               ; preds = %36, %16, %20, %40
  %43 = phi i1 [ true, %40 ], [ false, %20 ], [ false, %16 ], [ false, %36 ]
  ret i1 %43
}

declare zeroext i1 @_ZNK2cc9Occlusion10IsOccludedERKN3gfx4RectE(%"class.cc::Occlusion"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc9LayerImpl7DidDrawEPN3viz22ClientResourceProviderE(%"class.cc::LayerImpl"* nocapture, %"class.viz::ClientResourceProvider"* nocapture readnone) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 21
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl16ShowDebugBordersENS_15DebugBorderTypeE(%"class.cc::LayerImpl"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %4 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %3, align 8
  %5 = tail call dereferenceable(40) %"class.cc::LayerTreeDebugState"* @_ZNK2cc13LayerTreeImpl11debug_stateEv(%"class.cc::LayerTreeImpl"* %4) #20
  %6 = icmp ugt i32 %1, 2
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @abort() #22
  unreachable

8:                                                ; preds = %2
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %5, i64 0, i32 2, i32 0, i32 0
  %11 = shl i64 1, %9
  %12 = load i64, i64* %10, align 8
  %13 = and i64 %12, %11
  %14 = icmp ne i64 %13, 0
  ret i1 %14
}

declare dereferenceable(40) %"class.cc::LayerTreeDebugState"* @_ZNK2cc13LayerTreeImpl11debug_stateEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl24GetDebugBorderPropertiesEPjPf(%"class.cc::LayerImpl"* nocapture readonly, i32* nocapture, float* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %5 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %4, align 8
  %6 = icmp eq %"class.cc::LayerTreeImpl"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %5, i64 0, i32 14
  %9 = load float, float* %8, align 4
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi float [ %9, %7 ], [ 1.000000e+00, %3 ]
  %12 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %13 = load i16, i16* %12, align 4
  %14 = trunc i16 %13 to i8
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = tail call i32 @_ZN2cc11DebugColors23ContentLayerBorderColorEv() #20
  store i32 %17, i32* %1, align 4
  %18 = tail call i32 @_ZN2cc11DebugColors23ContentLayerBorderWidthEf(float %11) #20
  br label %22

19:                                               ; preds = %10
  %20 = tail call i32 @_ZN2cc11DebugColors25ContainerLayerBorderColorEv() #20
  store i32 %20, i32* %1, align 4
  %21 = tail call i32 @_ZN2cc11DebugColors25ContainerLayerBorderWidthEf(float %11) #20
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i32 [ %21, %19 ], [ %18, %16 ]
  %24 = sitofp i32 %23 to float
  store float %24, float* %2, align 4
  ret void
}

declare i32 @_ZN2cc11DebugColors23ContentLayerBorderColorEv() local_unnamed_addr #1

declare i32 @_ZN2cc11DebugColors23ContentLayerBorderWidthEf(float) local_unnamed_addr #1

declare i32 @_ZN2cc11DebugColors25ContainerLayerBorderColorEv() local_unnamed_addr #1

declare i32 @_ZN2cc11DebugColors25ContainerLayerBorderWidthEf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl21AppendDebugBorderQuadEPN3viz20CompositorRenderPassERKN3gfx4RectEPKNS1_15SharedQuadStateEPNS_15AppendQuadsDataE(%"class.cc::LayerImpl"*, %"class.viz::CompositorRenderPass"*, %"class.gfx::Rect"* dereferenceable(16), %"class.viz::SharedQuadState"*, %"class.cc::AppendQuadsData"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #20
  store i32 -1431655766, i32* %6, align 4
  %9 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #20
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %10 = bitcast %"class.cc::LayerImpl"* %0 to void (%"class.cc::LayerImpl"*, i32*, float*)***
  %11 = load void (%"class.cc::LayerImpl"*, i32*, float*)**, void (%"class.cc::LayerImpl"*, i32*, float*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.cc::LayerImpl"*, i32*, float*)*, void (%"class.cc::LayerImpl"*, i32*, float*)** %11, i64 28
  %13 = load void (%"class.cc::LayerImpl"*, i32*, float*)*, void (%"class.cc::LayerImpl"*, i32*, float*)** %12, align 8
  call void %13(%"class.cc::LayerImpl"* %0, i32* nonnull %6, float* nonnull %7) #20
  %14 = load i32, i32* %6, align 4
  %15 = load float, float* %7, align 4
  call void @_ZNK2cc9LayerImpl21AppendDebugBorderQuadEPN3viz20CompositorRenderPassERKN3gfx4RectEPKNS1_15SharedQuadStateEPNS_15AppendQuadsDataEjf(%"class.cc::LayerImpl"* %0, %"class.viz::CompositorRenderPass"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.viz::SharedQuadState"* %3, %"class.cc::AppendQuadsData"* undef, i32 %14, float %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl21AppendDebugBorderQuadEPN3viz20CompositorRenderPassERKN3gfx4RectEPKNS1_15SharedQuadStateEPNS_15AppendQuadsDataEjf(%"class.cc::LayerImpl"* nocapture readonly, %"class.viz::CompositorRenderPass"*, %"class.gfx::Rect"* dereferenceable(16), %"class.viz::SharedQuadState"*, %"class.cc::AppendQuadsData"* nocapture readnone, i32, float) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %12 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %13 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %12, align 8
  %14 = tail call dereferenceable(40) %"class.cc::LayerTreeDebugState"* @_ZNK2cc13LayerTreeImpl11debug_stateEv(%"class.cc::LayerTreeImpl"* %13) #20
  %15 = getelementptr inbounds %"class.cc::LayerTreeDebugState", %"class.cc::LayerTreeDebugState"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %21 = tail call i64 @_ZNK3gfx4Size14GetCheckedAreaEv(%"class.gfx::Size"* %20) #20
  %22 = trunc i64 %21 to i8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #20
  %26 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 %26, i64 16, i1 false)
  %27 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0, i32 11, i32 0, i32 0
  %28 = tail call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %27, i64 8, i64 88) #20
  %29 = bitcast i8* %28 to %"class.viz::DebugBorderDrawQuad"*
  tail call void @_ZN3viz19DebugBorderDrawQuadC1Ev(%"class.viz::DebugBorderDrawQuad"* %29) #20
  %30 = fptosi float %6 to i32
  call void @_ZN3viz19DebugBorderDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_ji(%"class.viz::DebugBorderDrawQuad"* %29, %"class.viz::SharedQuadState"* %3, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, i32 %5, i32 %30) #20
  %31 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %32 = load i16, i16* %31, align 4
  %33 = and i16 %32, 16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %24
  %36 = fmul float %6, 3.000000e+00
  %37 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #20
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %26, i64 16, i1 false)
  %40 = fmul float %36, 5.000000e-01
  %41 = fptosi float %40 to i32
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %9, i32 %41, i32 %41, i32 %41, i32 %41) #20
  %42 = load i32, i32* %38, align 4
  %43 = icmp eq i32 %42, 0
  %44 = load i32, i32* %39, align 4
  %45 = icmp eq i32 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %65, label %47

47:                                               ; preds = %35
  %48 = lshr i32 %5, 24
  %49 = uitofp i32 %48 to float
  %50 = fmul float %49, 0x3FD3333340000000
  %51 = fptoui float %50 to i8
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = and i32 %5, 16777215
  %55 = or i32 %53, %54
  %56 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #20
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %58 = call { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #20
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %60 = extractvalue { i64, i64 } %58, 0
  store i64 %60, i64* %59, align 8
  %61 = extractvalue { i64, i64 } %58, 1
  store i64 %61, i64* %57, align 8
  %62 = call i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"* %27, i64 8, i64 88) #20
  %63 = bitcast i8* %62 to %"class.viz::DebugBorderDrawQuad"*
  call void @_ZN3viz19DebugBorderDrawQuadC1Ev(%"class.viz::DebugBorderDrawQuad"* %63) #20
  %64 = fptosi float %36 to i32
  call void @_ZN3viz19DebugBorderDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_ji(%"class.viz::DebugBorderDrawQuad"* %63, %"class.viz::SharedQuadState"* %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %11, i32 %55, i32 %64) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #20
  br label %65

65:                                               ; preds = %35, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #20
  br label %66

66:                                               ; preds = %65, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #20
  br label %67

67:                                               ; preds = %19, %7, %66
  ret void
}

declare i64 @_ZNK3gfx4Size14GetCheckedAreaEv(%"class.gfx::Size"*) local_unnamed_addr #1

declare void @_ZN3viz19DebugBorderDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_ji(%"class.viz::DebugBorderDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK2cc9LayerImpl21GetContentsResourceIdEPN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEPN3gfx4SizeEPNS7_5SizeFE(%"class.cc::LayerImpl"* nocapture readnone, %"class.util::IdType.1323"* nocapture, %"class.gfx::Size"* nocapture readnone, %"class.gfx::SizeF"* nocapture readnone) unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.util::IdType.1323", %"class.util::IdType.1323"* %1, i64 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc9LayerImpl8ScrollByERKN3gfx9Vector2dFE(%"class.cc::LayerImpl"* nocapture readonly, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %4 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %4, i64 0, i32 5, i32 6
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 20
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %4, i64 0, i32 5, i32 6, i32 0, i32 1, i32 0, i32 0
  %12 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %12, i64 %10
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi %"struct.cc::ScrollNode"* [ %13, %9 ], [ null, %2 ]
  %16 = tail call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %5, %"struct.cc::ScrollNode"* dereferenceable(168) %15, %"class.gfx::Vector2dF"* dereferenceable(8) %1, %"class.cc::LayerTreeImpl"* %4) #20
  ret <2 x float> %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(120) %"class.cc::ScrollTree"* @_ZNK2cc9LayerImpl13GetScrollTreeEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 6
  ret %"class.cc::ScrollTree"* %4
}

declare <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8), %"class.cc::LayerTreeImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl16UpdateScrollableEv(%"class.cc::LayerImpl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %7 = load i16, i16* %6, align 4
  %8 = and i16 %7, -2
  store i16 %8, i16* %6, align 4
  br label %101

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %11 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %11, i64 0, i32 5, i32 6
  %13 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %12, i64 %3) #20
  %14 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %15 = load i16, i16* %14, align 4
  %16 = and i16 %15, 1
  %17 = icmp eq %"struct.cc::ScrollNode"* %13, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 5
  %20 = load i8, i8* %19, align 4
  %21 = and i8 %20, 1
  %22 = zext i8 %21 to i16
  br label %23

23:                                               ; preds = %9, %18
  %24 = phi i16 [ 0, %9 ], [ %22, %18 ]
  %25 = and i16 %15, -2
  %26 = or i16 %24, %25
  store i16 %26, i16* %14, align 4
  %27 = and i16 %24, 1
  %28 = icmp eq i16 %16, %27
  br i1 %28, label %29, label %55

29:                                               ; preds = %23
  %30 = icmp eq i16 %16, 0
  br i1 %30, label %101, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 8, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 3, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %55

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 8, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 3, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %55

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 9, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 4, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 9, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 4, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %101, label %55

55:                                               ; preds = %43, %31, %37, %49, %23
  %56 = icmp eq i16 %27, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 3
  %59 = bitcast %"class.gfx::Size"* %58 to i64*
  %60 = load i64, i64* %59, align 4
  %61 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 8
  %62 = bitcast %"class.gfx::Size"* %61 to i64*
  store i64 %60, i64* %62, align 4
  %63 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %13, i64 0, i32 4
  %64 = bitcast %"class.gfx::Size"* %63 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = and i64 %65, -4294967296
  %67 = and i64 %65, 4294967295
  br label %71

68:                                               ; preds = %55
  %69 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 8
  %70 = bitcast %"class.gfx::Size"* %69 to i64*
  store i64 0, i64* %70, align 4
  br label %71

71:                                               ; preds = %68, %57
  %72 = phi i64 [ 0, %68 ], [ %66, %57 ]
  %73 = phi i64 [ 0, %68 ], [ %67, %57 ]
  %74 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 9
  %75 = bitcast %"class.gfx::Size"* %74 to i64*
  %76 = or i64 %73, %72
  store i64 %76, i64* %75, align 4
  %77 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %78 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %77) #20
  br i1 %78, label %79, label %82

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %77, i64 0, i32 36
  store i8 1, i8* %80, align 1
  %81 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %77, i64 0, i32 35
  store i8 1, i8* %81, align 8
  br label %82

82:                                               ; preds = %71, %79
  %83 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %84 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %83) #20
  %85 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %84, i64 0, i32 17
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 2
  %88 = load i16, i16* %14, align 4
  br i1 %87, label %89, label %97

89:                                               ; preds = %82
  %90 = trunc i16 %88 to i8
  %91 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 30
  %92 = load i8, i8* %91, align 8
  %93 = shl i8 %90, 1
  %94 = and i8 %93, 2
  %95 = and i8 %92, -3
  %96 = or i8 %94, %95
  store i8 %96, i8* %91, align 8
  br label %97

97:                                               ; preds = %82, %89
  %98 = or i16 %88, 2
  store i16 %98, i16* %14, align 4
  %99 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %100 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %99, i64 0, i32 35
  store i8 1, i8* %100, align 8
  br label %101

101:                                              ; preds = %97, %29, %49, %5
  ret void
}

declare %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"*, i64) local_unnamed_addr #1

declare dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl24NoteLayerPropertyChangedEv(%"class.cc::LayerImpl"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  %4 = or i16 %3, 2
  store i16 %4, i16* %2, align 4
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %6 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %6, i64 0, i32 35
  store i8 1, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl20SetTouchActionRegionENS_17TouchActionRegionE(%"class.cc::LayerImpl"*, %"class.cc::TouchActionRegion"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 13
  %4 = tail call zeroext i1 @_ZNK2cc17TouchActionRegioneqERKS0_(%"class.cc::TouchActionRegion"* %3, %"class.cc::TouchActionRegion"* dereferenceable(24) %1) #20
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = tail call dereferenceable(24) %"class.cc::TouchActionRegion"* @_ZN2cc17TouchActionRegionaSEOS0_(%"class.cc::TouchActionRegion"* %3, %"class.cc::TouchActionRegion"* dereferenceable(24) %1) #20
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 29, i32 0, i32 0, i32 0
  %8 = load %"class.cc::Region"*, %"class.cc::Region"** %7, align 8
  store %"class.cc::Region"* null, %"class.cc::Region"** %7, align 8
  %9 = icmp eq %"class.cc::Region"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  tail call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %8) #20
  %11 = bitcast %"class.cc::Region"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #21
  br label %12

12:                                               ; preds = %10, %5, %2
  ret void
}

declare zeroext i1 @_ZNK2cc17TouchActionRegioneqERKS0_(%"class.cc::TouchActionRegion"*, %"class.cc::TouchActionRegion"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.cc::TouchActionRegion"* @_ZN2cc17TouchActionRegionaSEOS0_(%"class.cc::TouchActionRegion"*, %"class.cc::TouchActionRegion"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.cc::Region"* @_ZNK2cc9LayerImpl24GetAllTouchActionRegionsEv(%"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.cc::Region", align 8
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 29
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1214"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.cc::Region"*, %"class.cc::Region"** %4, align 8
  %6 = icmp eq %"class.cc::Region"* %5, null
  br i1 %6, label %7, label %20

7:                                                ; preds = %1
  %8 = bitcast %"class.cc::Region"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #20
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 13
  call void @_ZNK2cc17TouchActionRegion13GetAllRegionsEv(%"class.cc::Region"* nonnull sret %2, %"class.cc::TouchActionRegion"* %9) #20
  %10 = call i8* @_Znwm(i64 24) #21
  %11 = bitcast i8* %10 to %"class.cc::Region"*
  call void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"* nonnull %11, %"class.cc::Region"* nonnull dereferenceable(24) %2) #20
  %12 = ptrtoint i8* %10 to i64
  %13 = load %"class.cc::Region"*, %"class.cc::Region"** %4, align 8
  %14 = bitcast %"class.std::__1::unique_ptr.1214"* %3 to i64*
  store i64 %12, i64* %14, align 8
  %15 = icmp eq %"class.cc::Region"* %13, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %13) #20
  %17 = bitcast %"class.cc::Region"* %13 to i8*
  call void @_ZdlPv(i8* %17) #21
  br label %18

18:                                               ; preds = %16, %7
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %2) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #20
  %19 = load %"class.cc::Region"*, %"class.cc::Region"** %4, align 8
  br label %20

20:                                               ; preds = %1, %18
  %21 = phi %"class.cc::Region"* [ %5, %1 ], [ %19, %18 ]
  ret %"class.cc::Region"* %21
}

declare void @_ZNK2cc17TouchActionRegion13GetAllRegionsEv(%"class.cc::Region"* sret, %"class.cc::TouchActionRegion"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::LayerImpl"* @_ZN2cc9LayerImpl15CreateLayerImplEPNS_13LayerTreeImplE(%"class.cc::LayerImpl"* nocapture readonly, %"class.cc::LayerTreeImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = tail call i8* @_Znwm(i64 640) #21
  %6 = bitcast i8* %5 to %"class.cc::LayerImpl"*
  tail call void @_ZN2cc9LayerImplC2EPNS_13LayerTreeImplEib(%"class.cc::LayerImpl"* nonnull %6, %"class.cc::LayerTreeImpl"* %1, i32 %4, i1 zeroext false) #20
  ret %"class.cc::LayerImpl"* %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2cc9LayerImpl28IsSnappedToPixelGridInTargetEv(%"class.cc::LayerImpl"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl16PushPropertiesToEPS0_(%"class.cc::LayerImpl"*, %"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23, i32 0
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN2cc9LayerImpl12SetElementIdENS_9ElementIdE(%"class.cc::LayerImpl"* %1, i64 %4)
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 30
  %6 = load i8, i8* %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 30
  %8 = and i8 %6, 8
  %9 = load i8, i8* %7, align 8
  %10 = and i8 %9, -9
  %11 = or i8 %10, %8
  store i8 %11, i8* %7, align 8
  %12 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 7
  %14 = bitcast %"class.gfx::Vector2dF"* %12 to i64*
  %15 = bitcast %"class.gfx::Vector2dF"* %13 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 4
  %17 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %18 = load i16, i16* %17, align 4
  %19 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 10
  %20 = and i16 %18, 16
  %21 = load i16, i16* %19, align 4
  %22 = and i16 %21, -17
  %23 = or i16 %22, %20
  store i16 %23, i16* %19, align 4
  %24 = load i16, i16* %17, align 4
  %25 = and i16 %24, 32
  %26 = and i16 %23, -33
  %27 = or i16 %26, %25
  store i16 %27, i16* %19, align 4
  %28 = load i16, i16* %17, align 4
  %29 = and i16 %28, 8
  %30 = and i16 %27, -9
  %31 = or i16 %30, %29
  store i16 %31, i16* %19, align 4
  %32 = load i16, i16* %17, align 4
  %33 = and i16 %32, 64
  %34 = and i16 %31, -65
  %35 = or i16 %34, %33
  store i16 %35, i16* %19, align 4
  %36 = load i16, i16* %17, align 4
  %37 = and i16 %36, 128
  %38 = and i16 %35, -129
  %39 = or i16 %38, %37
  store i16 %39, i16* %19, align 4
  %40 = load i16, i16* %17, align 4
  %41 = and i16 %40, 512
  %42 = and i16 %39, -513
  %43 = or i16 %42, %41
  store i16 %43, i16* %19, align 4
  %44 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 12
  %45 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 12
  %46 = tail call dereferenceable(24) %"class.cc::Region"* @_ZN2cc6RegionaSERKS0_(%"class.cc::Region"* %45, %"class.cc::Region"* dereferenceable(24) %44) #20
  %47 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 13
  %48 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 13
  %49 = tail call dereferenceable(24) %"class.cc::TouchActionRegion"* @_ZN2cc17TouchActionRegionaSERKS0_(%"class.cc::TouchActionRegion"* %48, %"class.cc::TouchActionRegion"* dereferenceable(24) %47) #20
  %50 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 29, i32 0, i32 0, i32 0
  %51 = load %"class.cc::Region"*, %"class.cc::Region"** %50, align 8
  %52 = icmp eq %"class.cc::Region"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %2
  %54 = tail call i8* @_Znwm(i64 24) #21
  %55 = bitcast i8* %54 to %"class.cc::Region"*
  tail call void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"* nonnull %55, %"class.cc::Region"* nonnull dereferenceable(24) %51) #20
  %56 = ptrtoint i8* %54 to i64
  br label %57

57:                                               ; preds = %2, %53
  %58 = phi i64 [ %56, %53 ], [ 0, %2 ]
  %59 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 29
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.1214", %"class.std::__1::unique_ptr.1214"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.cc::Region"*, %"class.cc::Region"** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.1214"* %59 to i64*
  store i64 %58, i64* %62, align 8
  %63 = icmp eq %"class.cc::Region"* %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %57
  tail call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %61) #20
  %65 = bitcast %"class.cc::Region"* %61 to i8*
  tail call void @_ZdlPv(i8* %65) #21
  br label %66

66:                                               ; preds = %64, %57
  %67 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 14
  %68 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 14
  %69 = tail call dereferenceable(24) %"class.cc::Region"* @_ZN2cc6RegionaSERKS0_(%"class.cc::Region"* %68, %"class.cc::Region"* dereferenceable(24) %67) #20
  %70 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 15
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 15
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 16
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 16
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 17
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 18
  store i32 %80, i32* %81, align 4
  %82 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 19
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 19
  store i32 %83, i32* %84, align 8
  %85 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 20
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 20
  store i32 %86, i32* %87, align 4
  %88 = load i8, i8* %5, align 8
  %89 = and i8 %88, 2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %66
  %92 = load i8, i8* %7, align 8
  %93 = or i8 %92, 2
  store i8 %93, i8* %7, align 8
  br label %94

94:                                               ; preds = %66, %91
  %95 = load i16, i16* %17, align 4
  %96 = and i16 %95, 6
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %100 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %100, i64 0, i32 35
  store i8 1, i8* %101, align 8
  %102 = load i16, i16* %17, align 4
  br label %103

103:                                              ; preds = %94, %98
  %104 = phi i16 [ %95, %94 ], [ %102, %98 ]
  %105 = and i16 %104, 2
  %106 = icmp eq i16 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i16, i16* %19, align 4
  %109 = or i16 %108, 2
  store i16 %109, i16* %19, align 4
  %110 = load i16, i16* %17, align 4
  br label %111

111:                                              ; preds = %103, %107
  %112 = phi i16 [ %104, %103 ], [ %110, %107 ]
  %113 = and i16 %112, 4
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = load i16, i16* %19, align 4
  %117 = or i16 %116, 4
  store i16 %117, i16* %19, align 4
  br label %118

118:                                              ; preds = %111, %115
  %119 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %120 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 6
  %121 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %120, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %119, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %122, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 6, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %128, %130
  br i1 %131, label %152, label %132

132:                                              ; preds = %126, %118
  %133 = bitcast %"class.gfx::Size"* %119 to i64*
  %134 = bitcast %"class.gfx::Size"* %120 to i64*
  %135 = load i64, i64* %133, align 4
  store i64 %135, i64* %134, align 4
  %136 = load i16, i16* %19, align 4
  %137 = and i16 %136, 1
  %138 = icmp eq i16 %137, 0
  br i1 %138, label %146, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %141 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %140, align 8
  %142 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %141) #20
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %141, i64 0, i32 36
  store i8 1, i8* %144, align 1
  %145 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %141, i64 0, i32 35
  store i8 1, i8* %145, align 8
  br label %146

146:                                              ; preds = %143, %139, %132
  %147 = load i16, i16* %19, align 4
  %148 = or i16 %147, 2
  store i16 %148, i16* %19, align 4
  %149 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %150 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %150, i64 0, i32 35
  store i8 1, i8* %151, align 8
  br label %152

152:                                              ; preds = %126, %146
  tail call void @_ZN2cc9LayerImpl16UpdateScrollableEv(%"class.cc::LayerImpl"* %1)
  %153 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 24
  %154 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 24
  tail call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %154, %"class.gfx::Rect"* dereferenceable(16) %153) #20
  %155 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %156 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %155, align 8
  tail call void @_ZN2cc9LayerImpl15UpdateDebugInfoEPNS_14LayerDebugInfoE(%"class.cc::LayerImpl"* %1, %"struct.cc::LayerDebugInfo"* %156)
  %157 = load i8, i8* %5, align 8
  %158 = and i8 %157, -3
  store i8 %158, i8* %5, align 8
  %159 = bitcast %"class.cc::LayerImpl"* %0 to void (%"class.cc::LayerImpl"*)***
  %160 = load void (%"class.cc::LayerImpl"*)**, void (%"class.cc::LayerImpl"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.cc::LayerImpl"*)*, void (%"class.cc::LayerImpl"*)** %160, i64 9
  %162 = load void (%"class.cc::LayerImpl"*)*, void (%"class.cc::LayerImpl"*)** %161, align 8
  tail call void %162(%"class.cc::LayerImpl"* %0) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl12SetElementIdENS_9ElementIdE(%"class.cc::LayerImpl"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.cc::ElementId", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %3, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, %1
  br i1 %8, label %39, label %9

9:                                                ; preds = %2
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %25, label %13, !prof !2

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #20
  call void @_ZNK2cc9ElementId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.cc::ElementId"* nonnull %3) #20
  %15 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #21
  br label %23

23:                                               ; preds = %13, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #20
  %24 = load i64, i64* %6, align 8
  br label %25

25:                                               ; preds = %9, %23
  %26 = phi i64 [ %7, %9 ], [ %24, %23 ]
  %27 = phi i64 [ -6148914691236517206, %9 ], [ %15, %23 ]
  %28 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %9 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), %23 ]
  %29 = phi i8* [ null, %9 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %23 ]
  %30 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %31 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %30, align 8
  call void @_ZN2cc13LayerTreeImpl26RemoveFromElementLayerListENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %31, i64 %26) #20
  %32 = load i64, i64* %5, align 8
  store i64 %32, i64* %6, align 8
  %33 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %30, align 8
  call void @_ZN2cc13LayerTreeImpl21AddToElementLayerListENS_9ElementIdEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %33, i64 %32, %"class.cc::LayerImpl"* %0) #20
  %34 = icmp eq i8* %29, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %25
  %36 = load i8, i8* %29, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %29, i8* %28, i64 %27) #20
  br label %39

39:                                               ; preds = %38, %35, %25, %2
  ret void
}

declare dereferenceable(24) %"class.cc::Region"* @_ZN2cc6RegionaSERKS0_(%"class.cc::Region"*, %"class.cc::Region"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.cc::TouchActionRegion"* @_ZN2cc17TouchActionRegionaSERKS0_(%"class.cc::TouchActionRegion"*, %"class.cc::TouchActionRegion"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl9SetBoundsERKN3gfx4SizeE(%"class.cc::LayerImpl"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %36, label %15

15:                                               ; preds = %2, %9
  %16 = bitcast %"class.gfx::Size"* %1 to i64*
  %17 = bitcast %"class.gfx::Size"* %3 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  %19 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %20 = load i16, i16* %19, align 4
  %21 = and i16 %20, 1
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %25 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %24, align 8
  %26 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %25) #20
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %25, i64 0, i32 36
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %25, i64 0, i32 35
  store i8 1, i8* %29, align 8
  br label %30

30:                                               ; preds = %27, %23, %15
  %31 = load i16, i16* %19, align 4
  %32 = or i16 %31, 2
  store i16 %32, i16* %19, align 4
  %33 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %34 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %34, i64 0, i32 35
  store i8 1, i8* %35, align 8
  br label %36

36:                                               ; preds = %9, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl15UnionUpdateRectERKN3gfx4RectE(%"class.cc::LayerImpl"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 24
  tail call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %3, %"class.gfx::Rect"* dereferenceable(16) %1) #20
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl21IsAffectedByPageScaleEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %7 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %6, align 8
  %8 = sext i32 %3 to i64
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %7, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %10, i64 %8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %"struct.cc::TransformNode"* [ %11, %5 ], [ null, %1 ]
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %13, i64 0, i32 10
  %15 = bitcast i24* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 4096
  %18 = icmp ne i32 %17, 0
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(136) %"class.cc::TransformTree"* @_ZNK2cc9LayerImpl16GetTransformTreeEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 3
  ret %"class.cc::TransformTree"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl20LayerPropertyChangedEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 6
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %49

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %8 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 9
  %10 = load i8, i8* %9, align 2, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %49

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %49, label %16

16:                                               ; preds = %12
  %17 = icmp sgt i32 %14, -1
  br i1 %17, label %18, label %30

18:                                               ; preds = %16
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %21 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %20, align 8
  %22 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 %19
  %23 = icmp eq %"struct.cc::TransformNode"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 %19, i32 10
  %26 = bitcast i24* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 8192
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %49

30:                                               ; preds = %24, %18, %16
  %31 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp sgt i32 %32, -1
  br i1 %35, label %36, label %48

36:                                               ; preds = %34
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %39 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %38, align 8
  %40 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %39, i64 %37
  %41 = icmp eq %"struct.cc::EffectNode"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %39, i64 %37, i32 16
  %44 = bitcast [3 x i8]* %43 to i24*
  %45 = load i24, i24* %44, align 4
  %46 = trunc i24 %45 to i16
  %47 = icmp slt i16 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %42, %36, %34
  br label %49

49:                                               ; preds = %48, %42, %30, %24, %12, %6, %1
  %50 = phi i1 [ true, %1 ], [ true, %6 ], [ false, %12 ], [ true, %24 ], [ false, %30 ], [ false, %48 ], [ true, %42 ]
  ret i1 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl37LayerPropertyChangedFromPropertyTreesEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 4
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %49

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %8 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 9
  %10 = load i8, i8* %9, align 2, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %49

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %49, label %16

16:                                               ; preds = %12
  %17 = icmp sgt i32 %14, -1
  br i1 %17, label %18, label %30

18:                                               ; preds = %16
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %21 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %20, align 8
  %22 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 %19
  %23 = icmp eq %"struct.cc::TransformNode"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %21, i64 %19, i32 10
  %26 = bitcast i24* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 8192
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %49

30:                                               ; preds = %16, %24, %18
  %31 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp sgt i32 %32, -1
  br i1 %35, label %36, label %48

36:                                               ; preds = %34
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %39 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %38, align 8
  %40 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %39, i64 %37
  %41 = icmp eq %"struct.cc::EffectNode"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %39, i64 %37, i32 16
  %44 = bitcast [3 x i8]* %43 to i24*
  %45 = load i24, i24* %44, align 4
  %46 = trunc i24 %45 to i16
  %47 = icmp slt i16 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %34, %36, %42
  br label %49

49:                                               ; preds = %24, %30, %42, %48, %12, %1, %6
  %50 = phi i1 [ true, %6 ], [ true, %1 ], [ false, %12 ], [ true, %24 ], [ false, %30 ], [ false, %48 ], [ true, %42 ]
  ret i1 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cc::PropertyTrees"* @_ZNK2cc9LayerImpl16GetPropertyTreesEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5
  ret %"class.cc::PropertyTrees"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl40LayerPropertyChangedNotFromPropertyTreesEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 2
  %5 = icmp ne i16 %4, 0
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl41NoteLayerPropertyChangedFromPropertyTreesEv(%"class.cc::LayerImpl"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  %4 = or i16 %3, 4
  store i16 %4, i16* %2, align 4
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %6 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %6, i64 0, i32 35
  store i8 1, i8* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK2cc9LayerImpl29ValidateQuadResourcesInternalEPN3viz8DrawQuadE(%"class.cc::LayerImpl"* nocapture, %"class.viz::DrawQuad"* nocapture) local_unnamed_addr #9 align 2 {
  ret void
}

declare void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK2cc9LayerImpl17LayerTypeAsStringEv(%"class.cc::LayerImpl"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl19ResetChangeTrackingEv(%"class.cc::LayerImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, -7
  store i16 %4, i16* %2, align 4
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 30
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, -2
  store i8 %7, i8* %5, align 8
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 24, i32 0, i32 0
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %10 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false)
  %11 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %9, align 8
  %12 = icmp eq %"struct.cc::LayerDebugInfo"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %11, i64 0, i32 5, i32 0, i32 0
  %15 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %14, align 8
  %16 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %11, i64 0, i32 5, i32 0, i32 1
  %17 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %16, align 8
  %18 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %17, %15
  br i1 %18, label %32, label %19

19:                                               ; preds = %13, %30
  %20 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %21, %30 ], [ %17, %13 ]
  %21 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %20, i64 -1
  %22 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %20, i64 -1, i32 2
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #21
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %21, %15
  br i1 %31, label %32, label %19

32:                                               ; preds = %30, %13
  store %"struct.cc::LayerDebugInfo::Invalidation"* %15, %"struct.cc::LayerDebugInfo::Invalidation"** %16, align 8
  br label %33

33:                                               ; preds = %1, %32
  ret void
}

declare zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #1

declare i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl16IsScrollbarLayerEv(%"class.cc::LayerImpl"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl21IsScrollerOrScrollbarEv(%"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::LayerImpl"* %0 to i1 (%"class.cc::LayerImpl"*)***
  %3 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %3, i64 7
  %5 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.cc::LayerImpl"* %0) #20
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %9 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %9, i64 0, i32 5, i32 6
  %11 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %10, i64 %12) #20
  %14 = icmp ne %"struct.cc::ScrollNode"* %13, null
  br label %15

15:                                               ; preds = %7, %1
  %16 = phi i1 [ true, %1 ], [ %14, %7 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl15SetDrawsContentEb(%"class.cc::LayerImpl"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 4
  %5 = lshr i16 %4, 7
  %6 = and i16 %5, 1
  %7 = zext i16 %6 to i32
  %8 = zext i1 %1 to i32
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = zext i1 %1 to i16
  %12 = shl nuw nsw i16 %11, 7
  %13 = and i16 %4, -131
  %14 = or i16 %12, %13
  %15 = or i16 %14, 2
  store i16 %15, i16* %3, align 4
  %16 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %17 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %17, i64 0, i32 35
  store i8 1, i8* %18, align 8
  br label %19

19:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl14SetHitTestableEb(%"class.cc::LayerImpl"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %4 = load i16, i16* %3, align 4
  %5 = lshr i16 %4, 9
  %6 = and i16 %5, 1
  %7 = zext i16 %6 to i32
  %8 = zext i1 %1 to i32
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = zext i1 %1 to i16
  %12 = shl nuw nsw i16 %11, 9
  %13 = and i16 %4, -515
  %14 = or i16 %12, %13
  %15 = or i16 %14, 2
  store i16 %15, i16* %3, align 4
  %16 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %17 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %17, i64 0, i32 35
  store i8 1, i8* %18, align 8
  br label %19

19:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl11HitTestableEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %3 = load i16, i16* %2, align 4
  %4 = and i16 %3, 512
  %5 = icmp ne i16 %4, 0
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %28

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %11 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %12 = sext i32 %7 to i64
  %13 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %11, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %14 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %13, align 8
  %15 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %14, i64 %12
  %16 = icmp eq %"struct.cc::EffectNode"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %14, i64 %12, i32 16
  %19 = bitcast [3 x i8]* %18 to i24*
  %20 = load i24, i24* %19, align 4
  %21 = zext i24 %20 to i32
  %22 = lshr i32 %21, 7
  %23 = xor i32 %22, 1
  %24 = lshr exact i16 %4, 9
  %25 = zext i16 %24 to i32
  %26 = and i32 %23, %25
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %1, %9, %17
  %29 = phi i1 [ %27, %17 ], [ %5, %9 ], [ %5, %1 ]
  ret i1 %29
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl18SetBackgroundColorEj(%"class.cc::LayerImpl"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 15
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %8 = load i16, i16* %7, align 4
  %9 = or i16 %8, 2
  store i16 %9, i16* %7, align 4
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %11 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %11, i64 0, i32 35
  store i8 1, i8* %12, align 8
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc9LayerImpl28SetSafeOpaqueBackgroundColorEj(%"class.cc::LayerImpl"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 16
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl17SetContentsOpaqueEb(%"class.cc::LayerImpl"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %4 = zext i1 %1 to i16
  %5 = load i16, i16* %3, align 4
  %6 = shl nuw nsw i16 %4, 4
  %7 = and i16 %5, -49
  %8 = shl nuw nsw i16 %4, 5
  %9 = or i16 %8, %6
  %10 = or i16 %9, %7
  store i16 %10, i16* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl24SetContentsOpaqueForTextEb(%"class.cc::LayerImpl"* nocapture, i1 zeroext) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %4 = zext i1 %1 to i16
  %5 = load i16, i16* %3, align 4
  %6 = shl nuw nsw i16 %4, 5
  %7 = and i16 %5, -33
  %8 = or i16 %7, %6
  store i16 %8, i16* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK2cc9LayerImpl7OpacityEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %7 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %6, align 8
  %8 = sext i32 %3 to i64
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %7, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 %8
  %12 = icmp eq %"struct.cc::EffectNode"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 %8, i32 3
  %15 = load float, float* %14, align 8
  br label %16

16:                                               ; preds = %1, %5, %13
  %17 = phi float [ %15, %13 ], [ 1.000000e+00, %5 ], [ 1.000000e+00, %1 ]
  ret float %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #20
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #20
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #20
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #20
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #20
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #20
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #20
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #20
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #20
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #21
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #20
  ret i64 %29
}

declare void @_ZNK2cc9ElementId8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.cc::ElementId"*) local_unnamed_addr #1

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZNK2cc9LayerImpl13GetDamageRectEv(%"class.cc::LayerImpl"* nocapture readnone) unnamed_addr #11 align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl22SetCurrentScrollOffsetERKN3gfx12ScrollOffsetE(%"class.cc::LayerImpl"* nocapture readonly, %"class.gfx::ScrollOffset"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %4 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %4, i64 0, i32 5, i32 6
  %6 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = tail call zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"* %5, i64 %7, %"class.gfx::ScrollOffset"* dereferenceable(8) %1) #20
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %3, align 8
  %11 = load i64, i64* %6, align 8
  tail call void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %10, i64 %11) #20
  br label %12

12:                                               ; preds = %9, %2
  ret void
}

declare zeroext i1 @_ZN2cc10ScrollTree15SetScrollOffsetENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ScrollTree"*, i64, %"class.gfx::ScrollOffset"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2cc13LayerTreeImpl21DidUpdateScrollOffsetENS_9ElementIdE(%"class.cc::LayerTreeImpl"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl19VisibleOpaqueRegionEv(%"class.cc::SimpleEnclosedRegion"* noalias nocapture sret, %"class.cc::LayerImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 10
  %4 = load i16, i16* %3, align 4
  %5 = and i16 %4, 16
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 7
  %9 = bitcast %"class.gfx::Rect"* %8 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 4
  %11 = bitcast %"class.cc::SimpleEnclosedRegion"* %0 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %11, align 4
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.cc::SimpleEnclosedRegion"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false) #20
  br label %14

14:                                               ; preds = %12, %7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc9LayerImpl15DidBeginTracingEv(%"class.cc::LayerImpl"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc9LayerImpl16ReleaseResourcesEv(%"class.cc::LayerImpl"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl13OnPurgeMemoryEv(%"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::LayerImpl"* %0 to void (%"class.cc::LayerImpl"*)***
  %3 = load void (%"class.cc::LayerImpl"*)**, void (%"class.cc::LayerImpl"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.cc::LayerImpl"*)*, void (%"class.cc::LayerImpl"*)** %3, i64 13
  %5 = load void (%"class.cc::LayerImpl"*)*, void (%"class.cc::LayerImpl"*)** %4, align 8
  tail call void %5(%"class.cc::LayerImpl"* %0) #20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc9LayerImpl20ReleaseTileResourcesEv(%"class.cc::LayerImpl"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc9LayerImpl21RecreateTileResourcesEv(%"class.cc::LayerImpl"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

declare void @_ZN2cc13LayerTreeImpl28AddLayerShouldPushPropertiesEPNS_9LayerImplE(%"class.cc::LayerTreeImpl"*, %"class.cc::LayerImpl"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK2cc9LayerImpl32GetAllPrioritizedTilesForTracingEPNSt3__16vectorINS_15PrioritizedTileENS1_9allocatorIS3_EEEE(%"class.cc::LayerImpl"* nocapture, %"class.std::__1::vector.1325"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #7 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.gfx::PointF", align 4
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca i8, align 1
  %11 = alloca %"class.gfx::QuadF", align 4
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = alloca %"class.gfx::QuadF", align 4
  %14 = bitcast %"class.cc::LayerImpl"* %0 to i8* (%"class.cc::LayerImpl"*)***
  %15 = load i8* (%"class.cc::LayerImpl"*)**, i8* (%"class.cc::LayerImpl"*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%"class.cc::LayerImpl"*)*, i8* (%"class.cc::LayerImpl"*)** %15, i64 29
  %17 = load i8* (%"class.cc::LayerImpl"*)*, i8* (%"class.cc::LayerImpl"*)** %16, align 8
  %18 = tail call i8* %17(%"class.cc::LayerImpl"* %0) #20
  %19 = bitcast %"class.cc::LayerImpl"* %0 to i8*
  tail call void @_ZN3viz11TracedValue40MakeDictIntoImplicitSnapshotWithCategoryEPKcPN4base11trace_event11TracedValueES2_S2_PKv(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), %"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %18, i8* %19) #20
  %20 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 %21) #20
  %22 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4SizeEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), %"class.gfx::Size"* dereferenceable(8) %22, %"class.base::trace_event::TracedValue"* %1) #20
  %23 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %26, label %37

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %28 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %27, align 8
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %28, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %31 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %30, align 8
  %32 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %31, i64 %29
  %33 = icmp eq %"struct.cc::EffectNode"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %31, i64 %29, i32 3
  %36 = load float, float* %35, align 8
  br label %37

37:                                               ; preds = %2, %26, %34
  %38 = phi float [ %36, %34 ], [ 1.000000e+00, %26 ], [ 1.000000e+00, %2 ]
  %39 = fpext float %38 to double
  tail call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), double %39) #20
  %40 = bitcast %"class.gfx::PointF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #20
  %41 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %7, i64 0, i32 0
  store float 0.000000e+00, float* %41, align 4
  %42 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %7, i64 0, i32 1
  store float 0.000000e+00, float* %42, align 4
  call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx6PointFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), %"class.gfx::PointF"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TracedValue"* %1) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #20
  %43 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %44 = load i32, i32* %43, align 8
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 %44) #20
  %45 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 19
  %46 = load i32, i32* %45, align 8
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 %46) #20
  %47 = load i32, i32* %23, align 4
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i32 %47) #20
  %48 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 20
  %49 = load i32, i32* %48, align 4
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i32 %49) #20
  %50 = load i32, i32* %43, align 8
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %52, label %59

52:                                               ; preds = %37
  %53 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %54 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %54, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %57 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %56, align 8
  %58 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %57, i64 %55
  br label %59

59:                                               ; preds = %37, %52
  %60 = phi %"struct.cc::TransformNode"* [ %58, %52 ], [ null, %37 ]
  %61 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %60, i64 0, i32 9
  %62 = load i32, i32* %61, align 8
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 %62) #20
  %63 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %64 = load i16, i16* %63, align 4
  %65 = lshr i16 %64, 7
  %66 = and i16 %65, 1
  %67 = zext i16 %66 to i32
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i32 %67) #20
  %68 = bitcast %"class.cc::LayerImpl"* %0 to i64 (%"class.cc::LayerImpl"*)***
  %69 = load i64 (%"class.cc::LayerImpl"*)**, i64 (%"class.cc::LayerImpl"*)*** %68, align 8
  %70 = getelementptr inbounds i64 (%"class.cc::LayerImpl"*)*, i64 (%"class.cc::LayerImpl"*)** %69, i64 22
  %71 = load i64 (%"class.cc::LayerImpl"*)*, i64 (%"class.cc::LayerImpl"*)** %70, align 8
  %72 = call i64 %71(%"class.cc::LayerImpl"* %0) #20
  %73 = call i1 @llvm.is.constant.i64(i64 %72) #20
  %74 = icmp ult i64 %72, 2147483648
  %75 = trunc i64 %72 to i32
  %76 = select i1 %74, i32 %75, i32 2147483647
  %77 = icmp ult i64 %72, 2147483647
  %78 = select i1 %77, i64 %72, i64 2147483647
  %79 = trunc i64 %78 to i32
  %80 = select i1 %73, i32 %79, i32 %76
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i32 %80) #20
  %81 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 23
  %82 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %81, i64 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %59
  call void @_ZNK2cc9ElementId16AddToTracedValueEPN4base11trace_event11TracedValueE(%"struct.cc::ElementId"* %81, %"class.base::trace_event::TracedValue"* %1) #20
  br label %86

86:                                               ; preds = %59, %85
  %87 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %87) #20
  %88 = load i16, i16* %63, align 4, !noalias !4
  %89 = and i16 %88, 256
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %93 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %92, align 8, !noalias !4
  %94 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %93, i64 0, i32 5, i32 3
  call void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_9LayerImplERKNS_13TransformTreeE(%"class.gfx::Transform"* nonnull sret %8, %"class.cc::LayerImpl"* %0, %"class.cc::TransformTree"* dereferenceable(136) %94) #20
  br label %98

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 1
  %97 = bitcast %"class.gfx::Transform"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 4 %97, i64 68, i1 false) #20
  br label %98

98:                                               ; preds = %91, %95
  %99 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %8, i64 0, i32 0, i32 1
  %100 = load i8, i8* %99, align 4
  %101 = icmp eq i8 %100, 0
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %87) #20
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %103) #20
  %104 = load i16, i16* %63, align 4, !noalias !7
  %105 = and i16 %104, 256
  %106 = icmp eq i16 %105, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %109 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %108, align 8, !noalias !7
  %110 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %109, i64 0, i32 5, i32 3
  call void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_9LayerImplERKNS_13TransformTreeE(%"class.gfx::Transform"* nonnull sret %9, %"class.cc::LayerImpl"* %0, %"class.cc::TransformTree"* dereferenceable(136) %110) #20
  br label %114

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 1
  %113 = bitcast %"class.gfx::Transform"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %103, i8* align 4 %113, i64 68, i1 false) #20
  br label %114

114:                                              ; preds = %107, %111
  call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9TransformEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), %"class.gfx::Transform"* nonnull dereferenceable(68) %9, %"class.base::trace_event::TracedValue"* %1) #20
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %103) #20
  br label %115

115:                                              ; preds = %98, %114
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #20
  store i8 -86, i8* %10, align 1
  %116 = bitcast %"class.gfx::QuadF"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %116) #20
  %117 = bitcast %"class.gfx::Transform"* %12 to i8*
  %118 = bitcast %"class.gfx::QuadF"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %118, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %117) #20
  %119 = load i16, i16* %63, align 4, !noalias !10
  %120 = and i16 %119, 256
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %122, label %127

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %124 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %123, align 8, !noalias !10
  %125 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %124, i64 0, i32 5, i32 3
  call void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_9LayerImplERKNS_13TransformTreeE(%"class.gfx::Transform"* nonnull sret %12, %"class.cc::LayerImpl"* %0, %"class.cc::TransformTree"* dereferenceable(136) %125) #20
  %126 = load i16, i16* %63, align 4
  br label %130

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 1
  %129 = bitcast %"class.gfx::Transform"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %117, i8* align 4 %129, i64 68, i1 false) #20
  br label %130

130:                                              ; preds = %122, %127
  %131 = phi i16 [ %126, %122 ], [ %119, %127 ]
  %132 = bitcast %"class.gfx::QuadF"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #20
  %133 = and i16 %131, 1024
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %135, label %141

135:                                              ; preds = %130
  %136 = bitcast %"class.gfx::Size"* %22 to i64*
  %137 = load i64, i64* %136, align 4
  %138 = trunc i64 %137 to i32
  %139 = lshr i64 %137, 32
  %140 = trunc i64 %139 to i32
  br label %164

141:                                              ; preds = %130
  %142 = bitcast <2 x float>* %3 to %"class.gfx::Vector2dF"*
  %143 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #20
  %144 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %145 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %145, i64 0, i32 5, i32 14
  %147 = bitcast %"class.gfx::Vector2dF"* %146 to i64*
  %148 = load i64, i64* %147, align 4
  %149 = bitcast <2 x float>* %3 to i64*
  store i64 %148, i64* %149, align 8
  %150 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %142) #20
  %151 = trunc i64 %150 to i32
  %152 = lshr i64 %150, 32
  %153 = trunc i64 %152 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #20
  %154 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = add nsw i32 %155, %151
  %157 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = add nsw i32 %158, %153
  %160 = icmp sgt i32 %156, 0
  %161 = select i1 %160, i32 %156, i32 0
  %162 = icmp sgt i32 %159, 0
  %163 = select i1 %162, i32 %159, i32 0
  br label %164

164:                                              ; preds = %135, %141
  %165 = phi i32 [ %138, %135 ], [ %161, %141 ]
  %166 = phi i32 [ %140, %135 ], [ %163, %141 ]
  %167 = icmp sgt i32 %165, 0
  %168 = select i1 %167, i32 %165, i32 0
  %169 = sitofp i32 %168 to float
  %170 = icmp sgt i32 %166, 0
  %171 = select i1 %170, i32 %166, i32 0
  %172 = sitofp i32 %171 to float
  %173 = bitcast %"class.gfx::QuadF"* %13 to i32*
  store i32 0, i32* %173, align 4
  %174 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %13, i64 0, i32 0, i32 1
  %175 = bitcast float* %174 to i32*
  store i32 0, i32* %175, align 4
  %176 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %13, i64 0, i32 1, i32 0
  store float %169, float* %176, align 4
  %177 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %13, i64 0, i32 1, i32 1
  %178 = bitcast float* %177 to i32*
  store i32 0, i32* %178, align 4
  %179 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %13, i64 0, i32 2, i32 0
  store float %169, float* %179, align 4
  %180 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %13, i64 0, i32 2, i32 1
  store float %172, float* %180, align 4
  %181 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %13, i64 0, i32 3
  %182 = bitcast %"class.gfx::PointF"* %181 to i32*
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds %"class.gfx::QuadF", %"class.gfx::QuadF"* %13, i64 0, i32 3, i32 1
  store float %172, float* %183, align 4
  call void @_ZN2cc8MathUtil7MapQuadERKN3gfx9TransformERKNS1_5QuadFEPb(%"class.gfx::QuadF"* nonnull sret %11, %"class.gfx::Transform"* nonnull dereferenceable(68) %12, %"class.gfx::QuadF"* nonnull dereferenceable(32) %13, i8* nonnull %10) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #20
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %117) #20
  call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5QuadFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), %"class.gfx::QuadF"* nonnull dereferenceable(32) %11, %"class.base::trace_event::TracedValue"* %1) #20
  %184 = call dereferenceable(24) %"class.cc::Region"* @_ZNK2cc9LayerImpl24GetAllTouchActionRegionsEv(%"class.cc::LayerImpl"* %0)
  %185 = call zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"* %184) #20
  br i1 %185, label %188, label %186

186:                                              ; preds = %164
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0)) #20
  %187 = call dereferenceable(24) %"class.cc::Region"* @_ZNK2cc9LayerImpl24GetAllTouchActionRegionsEv(%"class.cc::LayerImpl"* %0)
  call void @_ZNK2cc6Region11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::Region"* %187, %"class.base::trace_event::TracedValue"* %1) #20
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #20
  br label %188

188:                                              ; preds = %186, %164
  %189 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 14
  %190 = call zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"* %189) #20
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0)) #20
  call void @_ZNK2cc6Region11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::Region"* %189, %"class.base::trace_event::TracedValue"* %1) #20
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #20
  br label %192

192:                                              ; preds = %191, %188
  %193 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 12
  %194 = call zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"* %193) #20
  br i1 %194, label %196, label %195

195:                                              ; preds = %192
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #20
  call void @_ZNK2cc6Region11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::Region"* %193, %"class.base::trace_event::TracedValue"* %1) #20
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #20
  br label %196

196:                                              ; preds = %195, %192
  %197 = load i16, i16* %63, align 4
  %198 = and i16 %197, 512
  %199 = icmp ne i16 %198, 0
  %200 = load i32, i32* %23, align 4
  %201 = icmp sgt i32 %200, -1
  br i1 %201, label %202, label %221

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %204 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %203, align 8
  %205 = sext i32 %200 to i64
  %206 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %204, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %207 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %206, align 8
  %208 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %207, i64 %205
  %209 = icmp eq %"struct.cc::EffectNode"* %208, null
  br i1 %209, label %221, label %210

210:                                              ; preds = %202
  %211 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %207, i64 %205, i32 16
  %212 = bitcast [3 x i8]* %211 to i24*
  %213 = load i24, i24* %212, align 4
  %214 = zext i24 %213 to i32
  %215 = lshr i32 %214, 7
  %216 = xor i32 %215, 1
  %217 = lshr exact i16 %198, 9
  %218 = zext i16 %217 to i32
  %219 = and i32 %216, %218
  %220 = icmp ne i32 %219, 0
  br label %221

221:                                              ; preds = %196, %202, %210
  %222 = phi i1 [ %220, %210 ], [ %199, %202 ], [ %199, %196 ]
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i1 zeroext %222) #20
  %223 = load i16, i16* %63, align 4
  %224 = and i16 %223, 16
  %225 = icmp ne i16 %224, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i1 zeroext %225) #20
  %226 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %227 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  %228 = icmp eq %"struct.cc::LayerDebugInfo"* %227, null
  br i1 %228, label %358, label %229

229:                                              ; preds = %221
  %230 = bitcast %"struct.cc::LayerDebugInfo"* %227 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  %234 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = bitcast %"struct.cc::LayerDebugInfo"* %227 to i8*
  %237 = select i1 %233, i8* %235, i8* %236
  %238 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %239 = load i64, i64* %238, align 8
  %240 = zext i8 %232 to i64
  %241 = select i1 %233, i64 %239, i64 %240
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8* %237, i64 %241) #20
  %242 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  %243 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %242, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %229
  call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i32 %244) #20
  %247 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  br label %248

248:                                              ; preds = %229, %246
  %249 = phi %"struct.cc::LayerDebugInfo"* [ %242, %229 ], [ %247, %246 ]
  %250 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %249, i64 0, i32 3
  %251 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %249, i64 0, i32 3, i32 0, i32 1
  %252 = bitcast i8*** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.std::__1::vector.1197"* %250 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = icmp eq i64 %253, %255
  br i1 %256, label %280, label %257

257:                                              ; preds = %248
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #20
  %258 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  %259 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %258, i64 0, i32 3, i32 0, i32 0
  %260 = load i8**, i8*** %259, align 8
  %261 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %258, i64 0, i32 3, i32 0, i32 1
  %262 = load i8**, i8*** %261, align 8
  %263 = icmp eq i8** %260, %262
  br i1 %263, label %266, label %264

264:                                              ; preds = %257
  %265 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %268

266:                                              ; preds = %276, %257
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #20
  %267 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  br label %280

268:                                              ; preds = %264, %276
  %269 = phi i8** [ %260, %264 ], [ %278, %276 ]
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %274, label %272

272:                                              ; preds = %268
  %273 = call i64 @strlen(i8* nonnull %270) #20
  br label %276

274:                                              ; preds = %268
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #20
  %275 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #20
  br label %276

276:                                              ; preds = %272, %274
  %277 = phi i64 [ 0, %274 ], [ %273, %272 ]
  call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* %270, i64 %277) #20
  %278 = getelementptr inbounds i8*, i8** %269, i64 1
  %279 = icmp eq i8** %278, %262
  br i1 %279, label %266, label %268

280:                                              ; preds = %248, %266
  %281 = phi %"struct.cc::LayerDebugInfo"* [ %249, %248 ], [ %267, %266 ]
  %282 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %281, i64 0, i32 4
  %283 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %281, i64 0, i32 4, i32 0, i32 1
  %284 = bitcast i8*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::vector.1197"* %282 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i64 %285, %287
  br i1 %288, label %312, label %289

289:                                              ; preds = %280
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0)) #20
  %290 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  %291 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %290, i64 0, i32 4, i32 0, i32 0
  %292 = load i8**, i8*** %291, align 8
  %293 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %290, i64 0, i32 4, i32 0, i32 1
  %294 = load i8**, i8*** %293, align 8
  %295 = icmp eq i8** %292, %294
  br i1 %295, label %298, label %296

296:                                              ; preds = %289
  %297 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %300

298:                                              ; preds = %308, %289
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #20
  %299 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  br label %312

300:                                              ; preds = %296, %308
  %301 = phi i8** [ %292, %296 ], [ %310, %308 ]
  %302 = load i8*, i8** %301, align 8
  %303 = icmp eq i8* %302, null
  br i1 %303, label %306, label %304

304:                                              ; preds = %300
  %305 = call i64 @strlen(i8* nonnull %302) #20
  br label %308

306:                                              ; preds = %300
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #20
  %307 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #20
  br label %308

308:                                              ; preds = %304, %306
  %309 = phi i64 [ 0, %306 ], [ %305, %304 ]
  call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* %302, i64 %309) #20
  %310 = getelementptr inbounds i8*, i8** %301, i64 1
  %311 = icmp eq i8** %310, %294
  br i1 %311, label %298, label %300

312:                                              ; preds = %280, %298
  %313 = phi %"struct.cc::LayerDebugInfo"* [ %281, %280 ], [ %299, %298 ]
  %314 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %313, i64 0, i32 5
  %315 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %313, i64 0, i32 5, i32 0, i32 1
  %316 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.std::__1::vector.1204"* %314 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = icmp eq i64 %317, %319
  br i1 %320, label %358, label %321

321:                                              ; preds = %312
  call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i64 0, i64 0)) #20
  %322 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %226, align 8
  %323 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %322, i64 0, i32 5, i32 0, i32 0
  %324 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %323, align 8
  %325 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %322, i64 0, i32 5, i32 0, i32 1
  %326 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %325, align 8
  %327 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %324, %326
  br i1 %327, label %330, label %328

328:                                              ; preds = %321
  %329 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %331

330:                                              ; preds = %341, %321
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #20
  br label %358

331:                                              ; preds = %328, %341
  %332 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %324, %328 ], [ %356, %341 ]
  call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #20
  %333 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %332, i64 0, i32 0
  call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0), %"class.gfx::Rect"* dereferenceable(16) %333, %"class.base::trace_event::TracedValue"* %1) #20
  %334 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %332, i64 0, i32 1
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %339, label %337

337:                                              ; preds = %331
  %338 = call i64 @strlen(i8* nonnull %335) #20
  br label %341

339:                                              ; preds = %331
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %329) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #20
  %340 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %329) #20
  br label %341

341:                                              ; preds = %337, %339
  %342 = phi i64 [ 0, %339 ], [ %338, %337 ]
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i8* %335, i64 %342) #20
  %343 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %332, i64 0, i32 2
  %344 = bitcast %"class.std::__1::basic_string"* %343 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %345 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %344, i64 0, i32 1, i32 0
  %346 = load i8, i8* %345, align 1
  %347 = icmp slt i8 %346, 0
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %343, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = bitcast %"class.std::__1::basic_string"* %343 to i8*
  %351 = select i1 %347, i8* %349, i8* %350
  %352 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %353 = load i64, i64* %352, align 8
  %354 = zext i8 %346 to i64
  %355 = select i1 %347, i64 %353, i64 %354
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8* %351, i64 %355) #20
  call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #20
  %356 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %332, i64 1
  %357 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %356, %326
  br i1 %357, label %330, label %331

358:                                              ; preds = %221, %312, %330
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %116) #20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #20
  ret void
}

declare void @_ZN3viz11TracedValue40MakeDictIntoImplicitSnapshotWithCategoryEPKcPN4base11trace_event11TracedValueES2_S2_PKv(i8*, %"class.base::trace_event::TracedValue"*, i8*, i8*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4SizeEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Size"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"*, i8*, double) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx6PointFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::PointF"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZNK2cc9ElementId16AddToTracedValueEPN4base11trace_event11TracedValueE(%"struct.cc::ElementId"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* noalias sret, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 10
  %4 = load i16, i16* %3, align 4
  %5 = and i16 %4, 256
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %9 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %9, i64 0, i32 5, i32 3
  tail call void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_9LayerImplERKNS_13TransformTreeE(%"class.gfx::Transform"* sret %0, %"class.cc::LayerImpl"* %1, %"class.cc::TransformTree"* dereferenceable(136) %10) #20
  br label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 1
  %13 = bitcast %"class.gfx::Transform"* %0 to i8*
  %14 = bitcast %"class.gfx::Transform"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 68, i1 false) #20
  br label %15

15:                                               ; preds = %11, %7
  ret void
}

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9TransformEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Transform"* dereferenceable(68), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil7MapQuadERKN3gfx9TransformERKNS1_5QuadFEPb(%"class.gfx::QuadF"* sret, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::QuadF"* dereferenceable(32), i8*) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5QuadFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::QuadF"* dereferenceable(32), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZNK2cc6Region11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.cc::Region"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::TracedValueJSON", align 8
  %4 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0
  %7 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"* nonnull %6, i64 0, i1 zeroext true) #20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event15TracedValueJSONE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = bitcast %"class.cc::LayerImpl"* %1 to void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)***
  %9 = load void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)**, void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)*, void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)** %9, i64 21
  %11 = load void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)*, void (%"class.cc::LayerImpl"*, %"class.base::trace_event::TracedValue"*)** %10, align 8
  call void %11(%"class.cc::LayerImpl"* %1, %"class.base::trace_event::TracedValue"* nonnull %6) #20
  call void @_ZNK4base11trace_event15TracedValueJSON15ToFormattedJSONEv(%"class.std::__1::basic_string"* sret %0, %"class.base::trace_event::TracedValueJSON"* nonnull %3) #20
  call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* nonnull %6) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #20
  ret void
}

declare void @_ZNK4base11trace_event15TracedValueJSON15ToFormattedJSONEv(%"class.std::__1::basic_string"* sret, %"class.base::trace_event::TracedValueJSON"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2cc9LayerImpl21GPUMemoryUsageInBytesEv(%"class.cc::LayerImpl"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl17RunMicroBenchmarkEPNS_18MicroBenchmarkImplE(%"class.cc::LayerImpl"*, %"class.cc::MicroBenchmarkImpl"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::MicroBenchmarkImpl"* %1 to void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)***
  %4 = load void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)**, void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)*, void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)** %4, i64 3
  %6 = load void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)*, void (%"class.cc::MicroBenchmarkImpl"*, %"class.cc::LayerImpl"*)** %5, align 8
  tail call void %6(%"class.cc::MicroBenchmarkImpl"* %1, %"class.cc::LayerImpl"* %0) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl13DrawTransformEv(%"class.gfx::Transform"* noalias sret, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 10
  %4 = load i16, i16* %3, align 4
  %5 = and i16 %4, 256
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %9 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %9, i64 0, i32 5, i32 3
  %11 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %9, i64 0, i32 5, i32 4
  tail call void @_ZN2cc19draw_property_utils13DrawTransformEPKNS_9LayerImplERKNS_13TransformTreeERKNS_10EffectTreeE(%"class.gfx::Transform"* sret %0, %"class.cc::LayerImpl"* %1, %"class.cc::TransformTree"* dereferenceable(136) %10, %"class.cc::EffectTree"* dereferenceable(112) %11) #20
  br label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 0
  %14 = bitcast %"class.gfx::Transform"* %0 to i8*
  %15 = bitcast %"class.gfx::Transform"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 68, i1 false) #20
  br label %16

16:                                               ; preds = %12, %7
  ret void
}

declare void @_ZN2cc19draw_property_utils13DrawTransformEPKNS_9LayerImplERKNS_13TransformTreeERKNS_10EffectTreeE(%"class.gfx::Transform"* sret, %"class.cc::LayerImpl"*, %"class.cc::TransformTree"* dereferenceable(136), %"class.cc::EffectTree"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_9LayerImplERKNS_13TransformTreeE(%"class.gfx::Transform"* sret, %"class.cc::LayerImpl"*, %"class.cc::TransformTree"* dereferenceable(136)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc9LayerImpl33GetInvalidationRegionForDebuggingEv(%"class.cc::Region"* noalias sret, %"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 24
  tail call void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"* %0, %"class.gfx::Rect"* dereferenceable(16) %3) #20
  ret void
}

declare void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc9LayerImpl36GetEnclosingVisibleRectInTargetSpaceEv(%"class.cc::LayerImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call { i64, i64 } @_ZNK2cc9LayerImpl42GetScaledEnclosingVisibleRectInTargetSpaceEf(%"class.cc::LayerImpl"* %0, float 1.000000e+00)
  ret { i64, i64 } %2
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc9LayerImpl42GetScaledEnclosingVisibleRectInTargetSpaceEf(%"class.cc::LayerImpl"* nocapture readonly, float) local_unnamed_addr #7 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %8 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %15 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %14, align 8
  %16 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %15, i64 %13
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi %"struct.cc::EffectNode"* [ %16, %12 ], [ null, %2 ]
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %18, i64 0, i32 16
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 4
  %22 = and i24 %21, 64
  %23 = icmp eq i24 %22, 0
  %24 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7
  %25 = bitcast %"class.gfx::Rect"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7, i32 1
  %28 = bitcast %"class.gfx::Size"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %26 to i32
  %31 = lshr i64 %26, 32
  %32 = trunc i64 %31 to i32
  br i1 %23, label %33, label %73

33:                                               ; preds = %17
  %34 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %35 = load i16, i16* %34, align 4
  %36 = and i16 %35, 1024
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %40 = bitcast %"class.gfx::Size"* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = trunc i64 %41 to i32
  %43 = lshr i64 %41, 32
  %44 = trunc i64 %43 to i32
  br label %66

45:                                               ; preds = %33
  %46 = bitcast <2 x float>* %3 to %"class.gfx::Vector2dF"*
  %47 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #20
  %48 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 5, i32 14
  %49 = bitcast %"class.gfx::Vector2dF"* %48 to i64*
  %50 = load i64, i64* %49, align 4
  %51 = bitcast <2 x float>* %3 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %46) #20
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %52, 32
  %55 = trunc i64 %54 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #20
  %56 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, %53
  %59 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, %55
  %62 = icmp sgt i32 %58, 0
  %63 = select i1 %62, i32 %58, i32 0
  %64 = icmp sgt i32 %61, 0
  %65 = select i1 %64, i32 %61, i32 0
  br label %66

66:                                               ; preds = %38, %45
  %67 = phi i32 [ %42, %38 ], [ %63, %45 ]
  %68 = phi i32 [ %44, %38 ], [ %65, %45 ]
  %69 = zext i32 %68 to i64
  %70 = shl nuw i64 %69, 32
  %71 = zext i32 %67 to i64
  %72 = or i64 %70, %71
  br label %73

73:                                               ; preds = %17, %66
  %74 = phi i64 [ %72, %66 ], [ %29, %17 ]
  %75 = phi i32 [ 0, %66 ], [ %30, %17 ]
  %76 = phi i32 [ 0, %66 ], [ %32, %17 ]
  %77 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %77) #20
  %78 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 0
  %79 = bitcast %"class.gfx::Transform"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* align 4 %79, i64 68, i1 false) #20
  %80 = fdiv float 1.000000e+00, %1
  call void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"* nonnull %4, float %80, float %80) #20
  %81 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #20
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %83 = fcmp oeq float %1, 1.000000e+00
  %84 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 16, i1 false)
  br i1 %83, label %139, label %85

85:                                               ; preds = %73
  %86 = sitofp i32 %75 to float
  %87 = fmul float %86, %1
  %88 = call float @llvm.floor.f32(float %87) #20
  %89 = fptosi float %88 to i32
  %90 = sitofp i32 %76 to float
  %91 = fmul float %90, %1
  %92 = call float @llvm.floor.f32(float %91) #20
  %93 = fptosi float %92 to i32
  %94 = trunc i64 %74 to i32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %85
  %97 = add nsw i32 %75, %94
  %98 = sitofp i32 %97 to float
  %99 = fmul float %98, %1
  %100 = call float @llvm.ceil.f32(float %99) #20
  %101 = fptosi float %100 to i32
  br label %102

102:                                              ; preds = %96, %85
  %103 = phi i32 [ %101, %96 ], [ %89, %85 ]
  %104 = lshr i64 %74, 32
  %105 = trunc i64 %104 to i32
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %102
  %108 = add nsw i32 %76, %105
  %109 = sitofp i32 %108 to float
  %110 = fmul float %109, %1
  %111 = call float @llvm.ceil.f32(float %110) #20
  %112 = fptosi float %111 to i32
  br label %113

113:                                              ; preds = %107, %102
  %114 = phi i32 [ %112, %107 ], [ %93, %102 ]
  %115 = sub nsw i32 %103, %89
  %116 = sub nsw i32 %114, %93
  %117 = icmp sgt i32 %89, 0
  %118 = icmp sgt i32 %115, 0
  %119 = and i1 %117, %118
  %120 = sub nuw nsw i32 2147483647, %89
  %121 = icmp ult i32 %120, %115
  %122 = and i1 %121, %119
  %123 = select i1 %122, i32 %120, i32 %115
  %124 = icmp sgt i32 %93, 0
  %125 = icmp sgt i32 %116, 0
  %126 = and i1 %124, %125
  %127 = sub nuw nsw i32 2147483647, %93
  %128 = icmp ult i32 %127, %116
  %129 = and i1 %128, %126
  %130 = select i1 %129, i32 %127, i32 %116
  %131 = icmp sgt i32 %123, 0
  %132 = select i1 %131, i32 %123, i32 0
  %133 = zext i32 %132 to i64
  %134 = icmp sgt i32 %130, 0
  %135 = select i1 %134, i32 %130, i32 0
  %136 = zext i32 %135 to i64
  %137 = shl nuw nsw i64 %136, 32
  %138 = or i64 %137, %133
  br label %139

139:                                              ; preds = %73, %113
  %140 = phi i32 [ %93, %113 ], [ %76, %73 ]
  %141 = phi i32 [ %89, %113 ], [ %75, %73 ]
  %142 = phi i64 [ %138, %113 ], [ %74, %73 ]
  %143 = zext i32 %140 to i64
  %144 = shl nuw i64 %143, 32
  %145 = zext i32 %141 to i64
  %146 = or i64 %144, %145
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %146, i64* %147, align 8
  store i64 %142, i64* %82, align 8
  %148 = call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #20
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %77) #20
  ret { i64, i64 } %148
}

declare { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cc::RenderSurfaceImpl"* @_ZN2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  %7 = sext i32 %5 to i64
  br i1 %6, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 %7
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %"struct.cc::EffectNode"* [ %11, %8 ], [ null, %1 ]
  %14 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %15, i64 %7, i32 0, i32 0, i32 0
  %17 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %16, align 8
  %18 = icmp eq %"class.cc::RenderSurfaceImpl"* %17, null
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 0, i32 20
  %21 = select i1 %18, i32* %20, i32* %19
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %15, i64 %23, i32 0, i32 0, i32 0
  %25 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %24, align 8
  ret %"class.cc::RenderSurfaceImpl"* %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cc::RenderSurfaceImpl"* @_ZNK2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 18
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  %7 = sext i32 %5 to i64
  br i1 %6, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %10 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %9, align 8
  %11 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %10, i64 %7
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %"struct.cc::EffectNode"* [ %11, %8 ], [ null, %1 ]
  %14 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 4, i32 2, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %15, i64 %7, i32 0, i32 0, i32 0
  %17 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %16, align 8
  %18 = icmp eq %"class.cc::RenderSurfaceImpl"* %17, null
  %19 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %13, i64 0, i32 20
  %21 = select i1 %18, i32* %20, i32* %19
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.906", %"class.std::__1::unique_ptr.906"* %15, i64 %23, i32 0, i32 0, i32 0
  %25 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %24, align 8
  ret %"class.cc::RenderSurfaceImpl"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc9LayerImpl21GetIdealContentsScaleEv(%"class.cc::LayerImpl"*) local_unnamed_addr #7 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 17
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %10 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %10, i64 0, i32 5, i32 3, i32 0, i32 1, i32 0, i32 0
  %13 = load %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"** %12, align 8
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %13, i64 %11
  br label %15

15:                                               ; preds = %1, %8
  %16 = phi %"struct.cc::TransformNode"* [ %14, %8 ], [ null, %1 ]
  %17 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %16, i64 0, i32 10
  %18 = bitcast i24* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 4096
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %49, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %24 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %23, align 8
  %25 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %24) #20
  %26 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %24) #20
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 3, i32 0
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 2, i32 0
  br label %44

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 6
  %33 = load i8, i8* %32, align 4, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 5, i32 0
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 3, i32 0
  %39 = load float, float* %38, align 4
  %40 = fdiv float %39, %37
  br label %41

41:                                               ; preds = %35, %31
  %42 = phi float [ %40, %35 ], [ 1.000000e+00, %31 ]
  %43 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %25, i64 0, i32 1, i32 0
  br label %44

44:                                               ; preds = %27, %41
  %45 = phi float* [ %43, %41 ], [ %30, %27 ]
  %46 = phi float [ %42, %41 ], [ %29, %27 ]
  %47 = load float, float* %45, align 4
  %48 = fmul float %46, %47
  br label %49

49:                                               ; preds = %44, %15
  %50 = phi float [ 1.000000e+00, %15 ], [ %48, %44 ]
  %51 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %52 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %52, i64 0, i32 14
  %54 = load float, float* %53, align 4
  %55 = fmul float %50, %54
  %56 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %56) #20
  %57 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 10
  %58 = load i16, i16* %57, align 4, !noalias !13
  %59 = and i16 %58, 256
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %52, i64 0, i32 5, i32 3
  call void @_ZN2cc19draw_property_utils20ScreenSpaceTransformEPKNS_9LayerImplERKNS_13TransformTreeE(%"class.gfx::Transform"* nonnull sret %4, %"class.cc::LayerImpl"* %0, %"class.cc::TransformTree"* dereferenceable(136) %62) #20
  br label %66

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 1
  %65 = bitcast %"class.gfx::Transform"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 4 %65, i64 68, i1 false) #20
  br label %66

66:                                               ; preds = %61, %63
  %67 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  %68 = load i8, i8* %67, align 4
  %69 = and i8 %68, 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %152, label %71

71:                                               ; preds = %66
  %72 = call float @_ZN3gfx26ComputeApproximateMaxScaleERKNS_9TransformE(%"class.gfx::Transform"* nonnull dereferenceable(68) %4) #20
  %73 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %51, align 8
  %74 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %73) #20
  %75 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %74, i64 0, i32 31, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 %76, 5
  %78 = add i32 %77, -10
  %79 = sitofp i32 %78 to float
  %80 = load i16, i16* %57, align 4
  %81 = and i16 %80, 1024
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %85 = bitcast %"class.gfx::Size"* %84 to i64*
  %86 = load i64, i64* %85, align 4
  %87 = trunc i64 %86 to i32
  br label %103

88:                                               ; preds = %71
  %89 = bitcast <2 x float>* %2 to %"class.gfx::Vector2dF"*
  %90 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #20
  %91 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %51, align 8
  %92 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %91, i64 0, i32 5, i32 14
  %93 = bitcast %"class.gfx::Vector2dF"* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = bitcast <2 x float>* %2 to i64*
  store i64 %94, i64* %95, align 8
  %96 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %89) #20
  %97 = trunc i64 %96 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #20
  %98 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, %97
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 0
  br label %103

103:                                              ; preds = %83, %88
  %104 = phi i32 [ %87, %83 ], [ %102, %88 ]
  %105 = sitofp i32 %104 to float
  %106 = fdiv float %79, %105
  %107 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %51, align 8
  %108 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %107) #20
  %109 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %108, i64 0, i32 31, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = mul i32 %110, 5
  %112 = add i32 %111, -10
  %113 = sitofp i32 %112 to float
  %114 = load i16, i16* %57, align 4
  %115 = and i16 %114, 1024
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %117, label %123

117:                                              ; preds = %103
  %118 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6
  %119 = bitcast %"class.gfx::Size"* %118 to i64*
  %120 = load i64, i64* %119, align 4
  %121 = lshr i64 %120, 32
  %122 = trunc i64 %121 to i32
  br label %139

123:                                              ; preds = %103
  %124 = bitcast <2 x float>* %3 to %"class.gfx::Vector2dF"*
  %125 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #20
  %126 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %51, align 8
  %127 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %126, i64 0, i32 5, i32 14
  %128 = bitcast %"class.gfx::Vector2dF"* %127 to i64*
  %129 = load i64, i64* %128, align 4
  %130 = bitcast <2 x float>* %3 to i64*
  store i64 %129, i64* %130, align 8
  %131 = call i64 @_ZN3gfx16ToCeiledVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %124) #20
  %132 = lshr i64 %131, 32
  %133 = trunc i64 %132 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #20
  %134 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 6, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = add nsw i32 %135, %133
  %137 = icmp sgt i32 %136, 0
  %138 = select i1 %137, i32 %136, i32 0
  br label %139

139:                                              ; preds = %117, %123
  %140 = phi i32 [ %122, %117 ], [ %138, %123 ]
  %141 = sitofp i32 %140 to float
  %142 = fdiv float %113, %141
  %143 = fcmp olt float %142, %106
  %144 = select i1 %143, float %142, float %106
  %145 = fcmp olt float %144, %72
  %146 = select i1 %145, float %144, float %72
  %147 = call float @llvm.round.f32(float %146) #20
  %148 = fcmp olt float %147, %55
  %149 = select i1 %148, float %55, float %147
  %150 = insertelement <2 x float> undef, float %149, i32 0
  %151 = shufflevector <2 x float> %150, <2 x float> undef, <2 x i32> zeroinitializer
  br label %169

152:                                              ; preds = %66
  %153 = call <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* nonnull dereferenceable(68) %4, float %55) #20
  %154 = extractelement <2 x float> %153, i32 0
  %155 = extractelement <2 x float> %153, i32 1
  %156 = fcmp olt float %155, %154
  %157 = select i1 %156, float %155, float %154
  %158 = fcmp olt float %154, %155
  %159 = select i1 %158, float %155, float %154
  %160 = fmul float %157, 5.000000e+00
  %161 = fcmp olt float %159, %160
  %162 = select i1 %161, float %159, float %160
  %163 = fcmp ole float %154, %162
  %164 = select i1 %163, float %154, float %162
  %165 = insertelement <2 x float> undef, float %164, i32 0
  %166 = fcmp ole float %155, %162
  %167 = select i1 %166, float %155, float %162
  %168 = insertelement <2 x float> %165, float %167, i32 1
  br label %169

169:                                              ; preds = %152, %139
  %170 = phi <2 x float> [ %151, %139 ], [ %168, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %56) #20
  ret <2 x float> %170
}

declare float @_ZN3gfx26ComputeApproximateMaxScaleERKNS_9TransformE(%"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

declare <2 x float> @_ZN3gfx33ComputeTransform2dScaleComponentsERKNS_9TransformEf(%"class.gfx::Transform"* dereferenceable(68), float) local_unnamed_addr #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden float @_ZN2cc9LayerImpl23GetPreferredRasterScaleEN3gfx9Vector2dFE(<2 x float>) local_unnamed_addr #12 align 2 {
  %2 = extractelement <2 x float> %0, i32 0
  %3 = extractelement <2 x float> %0, i32 1
  %4 = fcmp olt float %3, %2
  %5 = select i1 %4, float %3, float %2
  %6 = fcmp olt float %2, %3
  %7 = select i1 %6, float %3, float %2
  %8 = fmul float %5, 5.000000e+00
  %9 = fcmp olt float %7, %8
  %10 = select i1 %9, float %7, float %8
  ret float %10
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK2cc9LayerImpl24GetIdealContentsScaleKeyEv(%"class.cc::LayerImpl"*) local_unnamed_addr #7 align 2 {
  %2 = tail call <2 x float> @_ZNK2cc9LayerImpl21GetIdealContentsScaleEv(%"class.cc::LayerImpl"* %0)
  %3 = extractelement <2 x float> %2, i32 0
  %4 = extractelement <2 x float> %2, i32 1
  %5 = fcmp olt float %4, %3
  %6 = select i1 %5, float %4, float %3
  %7 = fcmp olt float %3, %4
  %8 = select i1 %7, float %4, float %3
  %9 = fmul float %6, 5.000000e+00
  %10 = fcmp olt float %8, %9
  %11 = select i1 %10, float %8, float %9
  ret float %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(48) %"class.cc::ClipTree"* @_ZNK2cc9LayerImpl11GetClipTreeEv(%"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %3 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %3, i64 0, i32 5, i32 5
  ret %"class.cc::ClipTree"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK2cc9LayerImpl30EnsureValidPropertyTreeIndicesEv(%"class.cc::LayerImpl"* nocapture) local_unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc9LayerImpl16is_surface_layerEv(%"class.cc::LayerImpl"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc9LayerImpl15CalculateJitterEv(%"class.cc::LayerImpl"*) local_unnamed_addr #7 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to { i64, i64 }*
  %8 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 26
  %9 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 26, i32 1
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 1
  %11 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 26, i32 2
  %12 = bitcast %"class.gfx::Transform"* %11 to i8*
  %13 = bitcast %"class.gfx::Transform"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 68, i1 false)
  %14 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7
  %15 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 25, i32 7, i32 1
  %16 = bitcast %"class.gfx::Size"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %18, 0
  %20 = icmp ult i64 %17, 4294967296
  %21 = or i1 %20, %19
  br i1 %21, label %82, label %22

22:                                               ; preds = %1
  %23 = tail call zeroext i1 @_ZNK3gfx9Transform18ApproximatelyEqualERKS0_(%"class.gfx::Transform"* %10, %"class.gfx::Transform"* dereferenceable(68) %11) #20
  br i1 %23, label %24, label %82

24:                                               ; preds = %22
  %25 = bitcast <2 x float>* %5 to %"class.gfx::Vector2dF"*
  %26 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 3
  %27 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %26, align 8
  %28 = icmp eq %"class.cc::LayerTreeImpl"* %27, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = tail call %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl23FindActiveTreeLayerByIdEi(%"class.cc::LayerTreeImpl"* nonnull %27, i32 %31) #20
  %33 = icmp eq %"class.cc::LayerImpl"* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %35) #20
  %36 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %32, i64 0, i32 25, i32 1
  %37 = bitcast %"class.gfx::Transform"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %37, i64 68, i1 false) #20
  %38 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %34
  %42 = call zeroext i1 @_ZNK3gfx9Transform18ApproximatelyEqualERKS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* dereferenceable(68) %10) #20
  br i1 %42, label %45, label %47

43:                                               ; preds = %24, %29
  %44 = getelementptr inbounds %"struct.cc::PerformanceProperties", %"struct.cc::PerformanceProperties"* %8, i64 0, i32 0
  br label %80

45:                                               ; preds = %34, %41
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %35) #20
  %46 = getelementptr inbounds %"struct.cc::PerformanceProperties", %"struct.cc::PerformanceProperties"* %8, i64 0, i32 0
  br label %80

47:                                               ; preds = %41
  %48 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #20
  %49 = call <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"* %36) #20
  %50 = call <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"* %10) #20
  %51 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #20
  %52 = bitcast i64* %2 to %"class.gfx::Vector2dF"*
  %53 = bitcast <2 x float>* %3 to %"class.gfx::Vector2dF"*
  %54 = bitcast i64* %2 to <2 x float>*
  store <2 x float> %49, <2 x float>* %54, align 8
  %55 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #20
  %56 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %50
  store <2 x float> %56, <2 x float>* %3, align 8
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* nonnull %52, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %53) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #20
  %57 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #20
  %58 = bitcast <2 x float>* %5 to i64*
  store i64 %57, i64* %58, align 8
  %59 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %25) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #20
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %35) #20
  %60 = fcmp ogt float %59, 0.000000e+00
  %61 = getelementptr inbounds %"struct.cc::PerformanceProperties", %"struct.cc::PerformanceProperties"* %8, i64 0, i32 0
  br i1 %60, label %62, label %80

62:                                               ; preds = %47
  %63 = load i32, i32* %61, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %61, align 4
  store float %59, float* %9, align 4
  %65 = icmp sgt i32 %63, 2
  br i1 %65, label %66, label %82

66:                                               ; preds = %62
  %67 = fpext float %59 to double
  %68 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #20
  %69 = bitcast %"class.gfx::Rect"* %14 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 4
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store <2 x i64> %70, <2 x i64>* %6, align 16
  %72 = bitcast i64* %71 to %"class.gfx::Size"*
  %73 = call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %72) #20
  %74 = sitofp i32 %73 to double
  %75 = call double @sqrt(double %74) #20
  %76 = fmul double %75, %67
  %77 = fadd double %76, 0.000000e+00
  %78 = fptrunc double %77 to float
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #20
  %79 = fptosi float %78 to i32
  br label %82

80:                                               ; preds = %45, %43, %47
  %81 = phi i32* [ %44, %43 ], [ %61, %47 ], [ %46, %45 ]
  store i32 0, i32* %81, align 4
  br label %82

82:                                               ; preds = %1, %80, %66, %62, %22
  %83 = phi i32 [ 0, %22 ], [ %79, %66 ], [ 0, %62 ], [ 0, %80 ], [ 0, %1 ]
  ret i32 %83
}

declare zeroext i1 @_ZNK3gfx9Transform18ApproximatelyEqualERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

declare i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc9LayerImpl9DebugNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.cc::LayerImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 28, i32 0, i32 0, i32 0
  %4 = load %"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"** %3, align 8
  %5 = icmp eq %"struct.cc::LayerDebugInfo"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.cc::LayerDebugInfo"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %13 = bitcast %"struct.cc::LayerDebugInfo"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %13, i64 24, i1 false) #20
  br label %23

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.cc::LayerDebugInfo", %"struct.cc::LayerDebugInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %16, i64 %18) #20
  br label %23

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 0, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %22, align 8
  br label %23

23:                                               ; preds = %14, %11, %19
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZNK2cc9LayerImpl20GetContentColorUsageEv(%"class.cc::LayerImpl"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc9LayerImpl11AppendQuadsEPN3viz20CompositorRenderPassEPNS_15AppendQuadsDataE(%"class.cc::LayerImpl"*, %"class.viz::CompositorRenderPass"*, %"class.cc::AppendQuadsData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc9LayerImpl22NotifyTileStateChangedEPKNS_4TileE(%"class.cc::LayerImpl"*, %"class.cc::Tile"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc9LayerImpl15DidBecomeActiveEv(%"class.cc::LayerImpl"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.1197"*, i8**, i8**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8** %2 to i64
  %5 = ptrtoint i8** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i8*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1197"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i8**
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i8*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i8*, i8** %1, i64 %22
  %25 = select i1 %23, i8** %24, i8** %2
  %26 = ptrtoint i8** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i8** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #20
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i8** %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #20
  %42 = inttoptr i64 %35 to i8**
  %43 = getelementptr inbounds i8*, i8** %42, i64 %39
  %44 = ptrtoint i8** %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i8*, i8** %16, i64 %28
  store i8** %48, i8*** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i8*** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #21
  %55 = bitcast %"class.std::__1::vector.1197"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #20
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.1197"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #22
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.1197"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #22
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #21
  %75 = bitcast i8* %74 to i8**
  %76 = getelementptr inbounds %"class.std::__1::vector.1197", %"class.std::__1::vector.1197"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i8*** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.1197"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i8*, i8** %75, i64 %72
  store i8** %79, i8*** %8, align 8
  %80 = bitcast i8*** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i8** %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #20
  %86 = getelementptr inbounds i8*, i8** %75, i64 %84
  %87 = ptrtoint i8** %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc14LayerDebugInfo12InvalidationENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.1204"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %2 to i64
  %5 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1204"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::LayerDebugInfo::Invalidation"*
  br i1 %15, label %119, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::LayerDebugInfo::Invalidation"* %24, %"struct.cc::LayerDebugInfo::Invalidation"* %2
  %26 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %25, %1
  br i1 %26, label %68, label %27

27:                                               ; preds = %17, %64
  %28 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %66, %64 ], [ %16, %17 ]
  %29 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %65, %64 ], [ %1, %17 ]
  %30 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %28 to i8*
  %31 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #20
  %32 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %28, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %29, i64 0, i32 2
  %34 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %28, %29
  br i1 %34, label %64, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %39, label %54, label %44

44:                                               ; preds = %35
  br i1 %43, label %48, label %45

45:                                               ; preds = %44
  %46 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #20
  br label %64

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %32, i8* %50, i64 %52) #20
  br label %64

54:                                               ; preds = %35
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %60 = zext i8 %42 to i64
  %61 = select i1 %43, i8* %56, i8* %59
  %62 = select i1 %43, i64 %58, i64 %60
  %63 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %32, i8* %61, i64 %62) #20
  br label %64

64:                                               ; preds = %54, %48, %45, %27
  %65 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %29, i64 1
  %66 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %28, i64 1
  %67 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %65, %25
  br i1 %67, label %68, label %27

68:                                               ; preds = %64, %17
  %69 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %16, %17 ], [ %66, %64 ]
  br i1 %23, label %70, label %102

70:                                               ; preds = %68
  %71 = load i64, i64* %19, align 8
  %72 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %25, %2
  br i1 %72, label %100, label %73

73:                                               ; preds = %70
  %74 = inttoptr i64 %71 to %"struct.cc::LayerDebugInfo::Invalidation"*
  br label %75

75:                                               ; preds = %94, %73
  %76 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %96, %94 ], [ %74, %73 ]
  %77 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %95, %94 ], [ %24, %73 ]
  %78 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %76 to i8*
  %79 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #20
  %80 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %76, i64 0, i32 2
  %81 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %77, i64 0, i32 2
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %75
  %87 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #20
  br label %94

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %80, i8* %91, i64 %93) #20
  br label %94

94:                                               ; preds = %89, %86
  %95 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %77, i64 1
  %96 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %76, i64 1
  %97 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %95, %2
  br i1 %97, label %98, label %75

98:                                               ; preds = %94
  %99 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %96 to i64
  br label %100

100:                                              ; preds = %70, %98
  %101 = phi i64 [ %71, %70 ], [ %99, %98 ]
  store i64 %101, i64* %19, align 8
  br label %196

102:                                              ; preds = %68
  %103 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %18, align 8
  %104 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %103, %69
  br i1 %104, label %118, label %105

105:                                              ; preds = %102, %116
  %106 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %107, %116 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %106, i64 -1
  %108 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %106, i64 -1, i32 2
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  tail call void @_ZdlPv(i8* %115) #21
  br label %116

116:                                              ; preds = %113, %105
  %117 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %107, %69
  br i1 %117, label %118, label %105

118:                                              ; preds = %116, %102
  store %"struct.cc::LayerDebugInfo::Invalidation"* %69, %"struct.cc::LayerDebugInfo::Invalidation"** %18, align 8
  br label %196

119:                                              ; preds = %3
  %120 = icmp eq i64 %12, 0
  br i1 %120, label %145, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %12 to i8*
  %123 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 1
  %124 = load %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"** %123, align 8
  %125 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %124, %16
  br i1 %125, label %142, label %126

126:                                              ; preds = %121, %137
  %127 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %128, %137 ], [ %124, %121 ]
  %128 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %127, i64 -1
  %129 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %127, i64 -1, i32 2
  %130 = bitcast %"class.std::__1::basic_string"* %129 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  tail call void @_ZdlPv(i8* %136) #21
  br label %137

137:                                              ; preds = %134, %126
  %138 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %128, %16
  br i1 %138, label %139, label %126

139:                                              ; preds = %137
  %140 = bitcast %"class.std::__1::vector.1204"* %0 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %121
  %143 = phi i8* [ %141, %139 ], [ %122, %121 ]
  store %"struct.cc::LayerDebugInfo::Invalidation"* %16, %"struct.cc::LayerDebugInfo::Invalidation"** %123, align 8
  tail call void @_ZdlPv(i8* %143) #21
  %144 = bitcast %"class.std::__1::vector.1204"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 24, i1 false) #20
  br label %145

145:                                              ; preds = %119, %142
  %146 = phi i64 [ %10, %119 ], [ 0, %142 ]
  %147 = icmp ugt i64 %7, 384307168202282325
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = bitcast %"class.std::__1::vector.1204"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #22
  unreachable

150:                                              ; preds = %145
  %151 = sdiv exact i64 %146, 48
  %152 = icmp ult i64 %151, 192153584101141162
  br i1 %152, label %153, label %157

153:                                              ; preds = %150
  %154 = shl nsw i64 %151, 1
  %155 = icmp ult i64 %154, %7
  %156 = select i1 %155, i64 %7, i64 %154
  br label %157

157:                                              ; preds = %153, %150
  %158 = phi i64 [ %156, %153 ], [ 384307168202282325, %150 ]
  %159 = mul i64 %158, 48
  %160 = tail call i8* @_Znwm(i64 %159) #21
  %161 = bitcast i8* %160 to %"struct.cc::LayerDebugInfo::Invalidation"*
  %162 = getelementptr inbounds %"class.std::__1::vector.1204", %"class.std::__1::vector.1204"* %0, i64 0, i32 0, i32 1
  %163 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %162 to i8**
  store i8* %160, i8** %163, align 8
  %164 = bitcast %"class.std::__1::vector.1204"* %0 to i8**
  store i8* %160, i8** %164, align 8
  %165 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %161, i64 %158
  store %"struct.cc::LayerDebugInfo::Invalidation"* %165, %"struct.cc::LayerDebugInfo::Invalidation"** %8, align 8
  %166 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"** %162 to i64*
  %167 = ptrtoint i8* %160 to i64
  %168 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %1, %2
  br i1 %168, label %194, label %169

169:                                              ; preds = %157, %188
  %170 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %190, %188 ], [ %161, %157 ]
  %171 = phi %"struct.cc::LayerDebugInfo::Invalidation"* [ %189, %188 ], [ %1, %157 ]
  %172 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %170 to i8*
  %173 = bitcast %"struct.cc::LayerDebugInfo::Invalidation"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 24, i1 false) #20
  %174 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %170, i64 0, i32 2
  %175 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %171, i64 0, i32 2
  %176 = bitcast %"class.std::__1::basic_string"* %175 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %169
  %181 = bitcast %"class.std::__1::basic_string"* %174 to i8*
  %182 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 24, i1 false) #20
  br label %188

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %187 = load i64, i64* %186, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %174, i8* %185, i64 %187) #20
  br label %188

188:                                              ; preds = %183, %180
  %189 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %171, i64 1
  %190 = getelementptr inbounds %"struct.cc::LayerDebugInfo::Invalidation", %"struct.cc::LayerDebugInfo::Invalidation"* %170, i64 1
  %191 = icmp eq %"struct.cc::LayerDebugInfo::Invalidation"* %189, %2
  br i1 %191, label %192, label %169

192:                                              ; preds = %188
  %193 = ptrtoint %"struct.cc::LayerDebugInfo::Invalidation"* %190 to i64
  br label %194

194:                                              ; preds = %157, %192
  %195 = phi i64 [ %167, %157 ], [ %193, %192 ]
  store i64 %195, i64* %166, align 8
  br label %196

196:                                              ; preds = %100, %118, %194
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #16

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #16

declare void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #17

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #18

declare void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"*, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event15TracedValueJSOND0Ev(%"class.base::trace_event::TracedValueJSON"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* %2) #20
  %3 = bitcast %"class.base::trace_event::TracedValueJSON"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #21
  ret void
}

declare void @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*) unnamed_addr #1

declare zeroext i1 @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #1

declare %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #16

declare %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl23FindActiveTreeLayerByIdEi(%"class.cc::LayerTreeImpl"*, i32) local_unnamed_addr #1

declare <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"*) local_unnamed_addr #1

declare float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #1

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc14LayerDebugInfoD1Ev(%"struct.cc::LayerDebugInfo"*) unnamed_addr #3

declare void @_ZN2cc14LayerDebugInfoC1ERKS0_(%"struct.cc::LayerDebugInfo"*, %"struct.cc::LayerDebugInfo"* dereferenceable(104)) unnamed_addr #1

declare i8* @_ZN2cc19ListContainerHelper8AllocateEmm(%"class.cc::ListContainerHelper"*, i64, i64) local_unnamed_addr #1

declare void @_ZN3viz19DebugBorderDrawQuadC1Ev(%"class.viz::DebugBorderDrawQuad"*) unnamed_addr #1

declare void @_ZN2cc6RegionC1ERKS0_(%"class.cc::Region"*, %"class.cc::Region"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #19

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nounwind readnone }
attributes #18 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind }
attributes #21 = { builtin nounwind }
attributes #22 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv: argument 0"}
!6 = distinct !{!6, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv: argument 0"}
!9 = distinct !{!9, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv: argument 0"}
!12 = distinct !{!12, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv: argument 0"}
!15 = distinct !{!15, !"_ZNK2cc9LayerImpl20ScreenSpaceTransformEv"}
