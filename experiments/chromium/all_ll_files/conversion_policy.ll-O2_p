; ModuleID = '../../content/browser/conversions/conversion_policy.cc'
source_filename = "../../content/browser/conversions/conversion_policy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.content::ConversionPolicy" = type { i32 (...)**, i8, %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.content::ConversionPolicy::NoiseProvider"* }
%"class.content::ConversionPolicy::NoiseProvider" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN7content16ConversionPolicy13NoiseProviderD2Ev = comdat any

$_ZN7content16ConversionPolicy13NoiseProviderD0Ev = comdat any

@_ZTVN7content16ConversionPolicyE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::ConversionPolicy"*)* @_ZN7content16ConversionPolicyD2Ev to i8*), i8* bitcast (void (%"class.content::ConversionPolicy"*)* @_ZN7content16ConversionPolicyD0Ev to i8*), i8* bitcast (i64 (%"class.content::ConversionPolicy"*, i64)* @_ZNK7content16ConversionPolicy26GetSanitizedConversionDataEm to i8*), i8* bitcast (i64 (%"class.content::ConversionPolicy"*, i64)* @_ZNK7content16ConversionPolicy26GetSanitizedImpressionDataEm to i8*), i8* bitcast (i64 (%"class.content::ConversionPolicy"*, %"class.absl::optional"*, i64)* @_ZNK7content16ConversionPolicy26GetExpiryTimeForImpressionERKN4absl8optionalIN4base9TimeDeltaEEENS3_4TimeE to i8*), i8* bitcast (i64 (%"class.content::ConversionPolicy"*, i64)* @_ZNK7content16ConversionPolicy38GetReportTimeForExpiredReportAtStartupEN4base4TimeE to i8*)] }, align 8
@_ZZNK7content16ConversionPolicy26GetExpiryTimeForImpressionERKN4absl8optionalIN4base9TimeDeltaEEENS3_4TimeEE24kDefaultImpressionExpiry = internal unnamed_addr constant %"class.base::TimeDelta" { i64 2592000000000 }, align 8
@_ZTVN7content16ConversionPolicy13NoiseProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::ConversionPolicy::NoiseProvider"*)* @_ZN7content16ConversionPolicy13NoiseProviderD2Ev to i8*), i8* bitcast (void (%"class.content::ConversionPolicy::NoiseProvider"*)* @_ZN7content16ConversionPolicy13NoiseProviderD0Ev to i8*), i8* bitcast (i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)* @_ZNK7content16ConversionPolicy13NoiseProvider23GetNoisedConversionDataEm to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN7content16ConversionPolicyC1Eb = hidden unnamed_addr alias void (%"class.content::ConversionPolicy"*, i1), void (%"class.content::ConversionPolicy"*, i1)* @_ZN7content16ConversionPolicyC2Eb
@_ZN7content16ConversionPolicyC1ENSt3__110unique_ptrINS0_13NoiseProviderENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.content::ConversionPolicy"*, %"class.content::ConversionPolicy::NoiseProvider"*), void (%"class.content::ConversionPolicy"*, %"class.content::ConversionPolicy::NoiseProvider"*)* @_ZN7content16ConversionPolicyC2ENSt3__110unique_ptrINS0_13NoiseProviderENS1_14default_deleteIS3_EEEE
@_ZN7content16ConversionPolicyD1Ev = hidden unnamed_addr alias void (%"class.content::ConversionPolicy"*), void (%"class.content::ConversionPolicy"*)* @_ZN7content16ConversionPolicyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7content16ConversionPolicy13NoiseProvider23GetNoisedConversionDataEm(%"class.content::ConversionPolicy::NoiseProvider"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %3 = tail call double @_ZN4base10RandDoubleEv() #9
  %4 = fcmp ogt double %3, 5.000000e-02
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @_ZN4base7RandIntEii(i32 0, i32 8) #9
  %7 = sext i32 %6 to i64
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i64 [ %7, %5 ], [ %1, %2 ]
  ret i64 %9
}

declare double @_ZN4base10RandDoubleEv() local_unnamed_addr #1

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.content::ConversionPolicy"* @_ZN7content16ConversionPolicy16CreateForTestingENSt3__110unique_ptrINS0_13NoiseProviderENS1_14default_deleteIS3_EEEE(%"class.content::ConversionPolicy::NoiseProvider"*) local_unnamed_addr #0 align 2 {
  %2 = ptrtoint %"class.content::ConversionPolicy::NoiseProvider"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 24) #10
  %4 = bitcast i8* %3 to %"class.content::ConversionPolicy"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content16ConversionPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to i64*
  store i64 %2, i64* %8, align 8
  ret %"class.content::ConversionPolicy"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN7content16ConversionPolicyC2Eb(%"class.content::ConversionPolicy"* nocapture, i1 zeroext) unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content16ConversionPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 1
  store i8 %3, i8* %5, align 8
  %6 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 2
  br i1 %1, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 0, i64* %8, align 8
  br label %13

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 8) #10
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content16ConversionPolicy13NoiseProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i8**
  store i8* %10, i8** %12, align 8
  br label %13

13:                                               ; preds = %9, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16ConversionPolicyC2ENSt3__110unique_ptrINS0_13NoiseProviderENS1_14default_deleteIS3_EEEE(%"class.content::ConversionPolicy"* nocapture, %"class.content::ConversionPolicy::NoiseProvider"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.content::ConversionPolicy::NoiseProvider"* %1 to i64
  %4 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content16ConversionPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %3, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16ConversionPolicyD2Ev(%"class.content::ConversionPolicy"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content16ConversionPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::ConversionPolicy::NoiseProvider"*, %"class.content::ConversionPolicy::NoiseProvider"** %3, align 8
  store %"class.content::ConversionPolicy::NoiseProvider"* null, %"class.content::ConversionPolicy::NoiseProvider"** %3, align 8
  %5 = icmp eq %"class.content::ConversionPolicy::NoiseProvider"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::ConversionPolicy::NoiseProvider"* %4 to void (%"class.content::ConversionPolicy::NoiseProvider"*)***
  %8 = load void (%"class.content::ConversionPolicy::NoiseProvider"*)**, void (%"class.content::ConversionPolicy::NoiseProvider"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::ConversionPolicy::NoiseProvider"*)*, void (%"class.content::ConversionPolicy::NoiseProvider"*)** %8, i64 1
  %10 = load void (%"class.content::ConversionPolicy::NoiseProvider"*)*, void (%"class.content::ConversionPolicy::NoiseProvider"*)** %9, align 8
  tail call void %10(%"class.content::ConversionPolicy::NoiseProvider"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16ConversionPolicyD0Ev(%"class.content::ConversionPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7content16ConversionPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::ConversionPolicy::NoiseProvider"*, %"class.content::ConversionPolicy::NoiseProvider"** %3, align 8
  store %"class.content::ConversionPolicy::NoiseProvider"* null, %"class.content::ConversionPolicy::NoiseProvider"** %3, align 8
  %5 = icmp eq %"class.content::ConversionPolicy::NoiseProvider"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::ConversionPolicy::NoiseProvider"* %4 to void (%"class.content::ConversionPolicy::NoiseProvider"*)***
  %8 = load void (%"class.content::ConversionPolicy::NoiseProvider"*)**, void (%"class.content::ConversionPolicy::NoiseProvider"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::ConversionPolicy::NoiseProvider"*)*, void (%"class.content::ConversionPolicy::NoiseProvider"*)** %8, i64 1
  %10 = load void (%"class.content::ConversionPolicy::NoiseProvider"*)*, void (%"class.content::ConversionPolicy::NoiseProvider"*)** %9, align 8
  tail call void %10(%"class.content::ConversionPolicy::NoiseProvider"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.content::ConversionPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7content16ConversionPolicy26GetSanitizedConversionDataEm(%"class.content::ConversionPolicy"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::ConversionPolicy::NoiseProvider"*, %"class.content::ConversionPolicy::NoiseProvider"** %3, align 8
  %5 = icmp eq %"class.content::ConversionPolicy::NoiseProvider"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.content::ConversionPolicy::NoiseProvider"* %4 to i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)***
  %8 = load i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)**, i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)*, i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)** %8, i64 2
  %10 = load i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)*, i64 (%"class.content::ConversionPolicy::NoiseProvider"*, i64)** %9, align 8
  %11 = tail call i64 %10(%"class.content::ConversionPolicy::NoiseProvider"* nonnull %4, i64 %1) #9
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i64 [ %11, %6 ], [ %1, %2 ]
  %14 = and i64 %13, 7
  ret i64 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK7content16ConversionPolicy26GetSanitizedImpressionDataEm(%"class.content::ConversionPolicy"* nocapture readnone, i64 returned) unnamed_addr #5 align 2 {
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7content16ConversionPolicy26GetExpiryTimeForImpressionERKN4absl8optionalIN4base9TimeDeltaEEENS3_4TimeE(%"class.content::ConversionPolicy"* nocapture readnone, %"class.absl::optional"* nocapture readonly dereferenceable(16), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = select i1 %9, %"class.base::TimeDelta"* @_ZZNK7content16ConversionPolicy26GetExpiryTimeForImpressionERKN4absl8optionalIN4base9TimeDeltaEEENS3_4TimeEE24kDefaultImpressionExpiry, %"class.base::TimeDelta"* %10
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %5, align 8
  %14 = icmp sgt i64 %13, 2592000000000
  %15 = bitcast i64* %5 to %"class.base::TimeDelta"*
  %16 = select i1 %14, %"class.base::TimeDelta"* @_ZZNK7content16ConversionPolicy26GetExpiryTimeForImpressionERKN4absl8optionalIN4base9TimeDeltaEEENS3_4TimeEE24kDefaultImpressionExpiry, %"class.base::TimeDelta"* %15
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %16, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, -9223372036854775807
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %28, label %21

21:                                               ; preds = %3
  %22 = icmp slt i64 %18, 0
  %23 = select i1 %22, i64 -9223372036854775808, i64 9223372036854775807
  %24 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %2, i64 %18) #9
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 %23, i64 %26, !prof !3
  br label %36

28:                                               ; preds = %3
  %29 = add i64 %2, -9223372036854775807
  %30 = icmp ugt i64 %29, 1
  %31 = icmp eq i64 %18, %2
  %32 = or i1 %30, %31
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %21, %28, %33
  %37 = phi i64 [ %27, %21 ], [ %18, %28 ], [ %18, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret i64 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7content16ConversionPolicy38GetReportTimeForExpiredReportAtStartupEN4base4TimeE(%"class.content::ConversionPolicy"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.content::ConversionPolicy", %"class.content::ConversionPolicy"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base7RandIntEii(i32 0, i32 300000) #9
  %9 = sext i32 %8 to i64
  %10 = mul nsw i64 %9, 1000
  %11 = icmp eq i64 %10, -9223372036854775808
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = icmp slt i32 %8, 0
  %14 = select i1 %13, i64 -9223372036854775808, i64 9223372036854775807
  %15 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %10) #9
  %16 = extractvalue { i64, i1 } %15, 1
  %17 = extractvalue { i64, i1 } %15, 0
  %18 = select i1 %16, i64 %14, i64 %17, !prof !3
  br label %27

19:                                               ; preds = %7
  %20 = add i64 %1, -9223372036854775807
  %21 = icmp ugt i64 %20, 1
  %22 = icmp eq i64 %1, -9223372036854775808
  %23 = or i1 %21, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #9
  br label %27

27:                                               ; preds = %24, %19, %12, %2
  %28 = phi i64 [ %1, %2 ], [ %18, %12 ], [ -9223372036854775808, %19 ], [ -9223372036854775808, %24 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content16ConversionPolicy13NoiseProviderD2Ev(%"class.content::ConversionPolicy::NoiseProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content16ConversionPolicy13NoiseProviderD0Ev(%"class.content::ConversionPolicy::NoiseProvider"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.content::ConversionPolicy::NoiseProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
