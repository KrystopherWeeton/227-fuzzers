; ModuleID = '../../third_party/icu/source/common/ucnv2022.cpp'
source_filename = "../../third_party/icu/source/common/ucnv2022.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UConverterImpl = type { i32, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)*, void (%struct.UConverterSharedData*)*, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)*, void (%struct.UConverter*)*, void (%struct.UConverter*, i32)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, i32*)*, i32 (%struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverter*, i8*, i32*)*, i8* (%struct.UConverter*)*, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)*, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)*, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)*, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* }
%struct.UConverterSharedData = type { i32, i32, i8*, %struct.UConverterStaticData*, i8, i8, %struct.UConverterImpl*, i32, %struct.UConverterMBCSTable }
%struct.UConverterStaticData = type { i32, [60 x i8], i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }
%struct.UConverterMBCSTable = type { i8, i8, i8, i32, [256 x i32]*, [256 x i32]*, i16*, %struct._MBCSToUFallback*, i16*, i16*, [64 x i16], i8*, i8*, i32, i8, i8, i8, i16, i32, i8*, i8*, %struct.UConverterSharedData*, i32* }
%struct._MBCSToUFallback = type { i32, i32 }
%struct.UConverterLoadArgs = type { i32, i32, i8, i8, i16, i32, i8*, i8*, i8* }
%struct.UConverter = type { void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterToUnicodeArgs*, i8*, i32, i32, i32*)*, i8*, i8*, i8*, i8*, %struct.UConverterSharedData*, i32, i8, i8, i8, i8, i8, [7 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], [32 x i8], [2 x i16], [2 x i16], [32 x i16], i32, [19 x i16], [31 x i8], i8, i8, i8, i32 }
%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%struct.UConverterToUnicodeArgs = type { i16, i8, %struct.UConverter*, i8*, i8*, i16*, i16*, i32* }
%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.UConverterNamePieces = type { [60 x i8], [157 x i8], i32 }
%struct.UConverterDataISO2022 = type { [10 x %struct.UConverterSharedData*], %struct.UConverter*, i32, %struct.ISO2022State, %struct.ISO2022State, i32, i32, i8, [30 x i8], [3 x i8] }
%struct.ISO2022State = type { [4 x i8], i8, i8 }

@_ZL12_ISO2022Impl = internal constant %struct.UConverterImpl { i32 10, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)* null, void (%struct.UConverterSharedData*)* null, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)* @_ZL12_ISO2022OpenP10UConverterP18UConverterLoadArgsP10UErrorCode, void (%struct.UConverter*)* @_ZL13_ISO2022CloseP10UConverter, void (%struct.UConverter*, i32)* @_ZL13_ISO2022ResetP10UConverter21UConverterResetChoice, void (%struct.UConverterToUnicodeArgs*, i32*)* null, void (%struct.UConverterToUnicodeArgs*, i32*)* null, void (%struct.UConverterFromUnicodeArgs*, i32*)* null, void (%struct.UConverterFromUnicodeArgs*, i32*)* null, i32 (%struct.UConverterToUnicodeArgs*, i32*)* null, void (%struct.UConverter*, i8*, i32*)* null, i8* (%struct.UConverter*)* @_ZL15_ISO2022getNamePK10UConverter, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)* @_ZL18_ISO_2022_WriteSubP25UConverterFromUnicodeArgsiP10UErrorCode, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)* @_ZL19_ISO_2022_SafeClonePK10UConverterPvPiP10UErrorCode, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)* @_ZL23_ISO_2022_GetUnicodeSetPK10UConverterPK9USetAdder20UConverterUnicodeSetP10UErrorCode, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* null, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* null }, align 8
@_ISO2022Data_69 = hidden local_unnamed_addr constant %struct.UConverterSharedData { i32 296, i32 -1, i8* null, %struct.UConverterStaticData* bitcast ({ i32, <{ [8 x i8], [52 x i8] }>, i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }* @_ZL18_ISO2022StaticData to %struct.UConverterStaticData*), i8 0, i8 0, %struct.UConverterImpl* @_ZL12_ISO2022Impl, i32 0, %struct.UConverterMBCSTable zeroinitializer }, align 8
@_ZL18_ISO2022StaticData = internal constant { i32, <{ [8 x i8], [52 x i8] }>, i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] } { i32 100, <{ [8 x i8], [52 x i8] }> <{ [8 x i8] c"ISO_2022", [52 x i8] zeroinitializer }>, i32 2022, i8 0, i8 10, i8 1, i8 3, [4 x i8] c"\1A\00\00\00", i8 1, i8 0, i8 0, i8 0, i8 0, [19 x i8] zeroinitializer }, align 4
@__const._ZL12_ISO2022OpenP10UConverterP18UConverterLoadArgsP10UErrorCode.myLocale = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"EUC-JP\00", align 1
@_ZN12_GLOBAL__N_114_ISO2022JPDataE = internal constant %struct.UConverterSharedData { i32 296, i32 -1, i8* null, %struct.UConverterStaticData* bitcast ({ i32, <{ [11 x i8], [49 x i8] }>, i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] }* @_ZL20_ISO2022JPStaticData to %struct.UConverterStaticData*), i8 0, i8 0, %struct.UConverterImpl* @_ZL14_ISO2022JPImpl, i32 0, %struct.UConverterMBCSTable zeroinitializer }, align 8
@.str.6 = private unnamed_addr constant [3 x i8] c"ja\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"ISO_2022,locale=ja,version=\00", align 1
@_ZL14_ISO2022JPImpl = internal constant %struct.UConverterImpl { i32 10, void (%struct.UConverterSharedData*, %struct.UConverterLoadArgs*, i8*, i32*)* null, void (%struct.UConverterSharedData*)* null, void (%struct.UConverter*, %struct.UConverterLoadArgs*, i32*)* @_ZL12_ISO2022OpenP10UConverterP18UConverterLoadArgsP10UErrorCode, void (%struct.UConverter*)* @_ZL13_ISO2022CloseP10UConverter, void (%struct.UConverter*, i32)* @_ZL13_ISO2022ResetP10UConverter21UConverterResetChoice, void (%struct.UConverterToUnicodeArgs*, i32*)* @_ZL46UConverter_toUnicode_ISO_2022_JP_OFFSETS_LOGICP23UConverterToUnicodeArgsP10UErrorCode, void (%struct.UConverterToUnicodeArgs*, i32*)* @_ZL46UConverter_toUnicode_ISO_2022_JP_OFFSETS_LOGICP23UConverterToUnicodeArgsP10UErrorCode, void (%struct.UConverterFromUnicodeArgs*, i32*)* @_ZL48UConverter_fromUnicode_ISO_2022_JP_OFFSETS_LOGICP25UConverterFromUnicodeArgsP10UErrorCode, void (%struct.UConverterFromUnicodeArgs*, i32*)* @_ZL48UConverter_fromUnicode_ISO_2022_JP_OFFSETS_LOGICP25UConverterFromUnicodeArgsP10UErrorCode, i32 (%struct.UConverterToUnicodeArgs*, i32*)* null, void (%struct.UConverter*, i8*, i32*)* null, i8* (%struct.UConverter*)* @_ZL15_ISO2022getNamePK10UConverter, void (%struct.UConverterFromUnicodeArgs*, i32, i32*)* @_ZL18_ISO_2022_WriteSubP25UConverterFromUnicodeArgsiP10UErrorCode, %struct.UConverter* (%struct.UConverter*, i8*, i32*, i32*)* @_ZL19_ISO_2022_SafeClonePK10UConverterPvPiP10UErrorCode, void (%struct.UConverter*, %struct.USetAdder*, i32, i32*)* @_ZL23_ISO_2022_GetUnicodeSetPK10UConverterPK9USetAdder20UConverterUnicodeSetP10UErrorCode, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* null, void (%struct.UConverterFromUnicodeArgs*, %struct.UConverterToUnicodeArgs*, i32*)* null }, align 8
@_ZL20_ISO2022JPStaticData = internal constant { i32, <{ [11 x i8], [49 x i8] }>, i32, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, [19 x i8] } { i32 100, <{ [11 x i8], [49 x i8] }> <{ [11 x i8] c"ISO_2022_JP", [49 x i8] zeroinitializer }>, i32 0, i8 0, i8 10, i8 1, i8 6, [4 x i8] c"\1A\00\00\00", i8 1, i8 0, i8 0, i8 0, i8 0, [19 x i8] zeroinitializer }, align 4
@_ZL20nextStateToUnicodeJP = internal unnamed_addr constant [74 x i8] c"\FF\FF\FF\FF\FF\10\FF\FF\FF\FF\00\FF\FF\FF\FF\FF\03\08\03\FF\FF\FF\04\06\04\FF\FF\FF\FF\FF\01\02\04\FF\FF\FF\FF\07\05\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", align 16
@_ZL25escSeqStateTable_Key_2022 = internal unnamed_addr constant [74 x i32] [i32 1, i32 34, i32 36, i32 39, i32 55, i32 57, i32 60, i32 61, i32 1093, i32 1096, i32 1097, i32 1098, i32 1099, i32 1100, i32 1101, i32 1102, i32 1103, i32 1104, i32 1105, i32 1106, i32 1109, i32 1154, i32 1157, i32 1160, i32 1161, i32 1176, i32 1178, i32 1179, i32 1254, i32 1257, i32 1768, i32 1773, i32 1957, i32 35105, i32 36933, i32 36936, i32 36937, i32 36938, i32 36939, i32 36940, i32 36942, i32 36943, i32 36944, i32 36945, i32 36946, i32 36947, i32 36948, i32 37640, i32 37642, i32 37644, i32 37646, i32 37711, i32 37744, i32 37745, i32 37746, i32 37747, i32 37748, i32 40133, i32 40136, i32 40138, i32 40139, i32 40140, i32 40141, i32 1123363, i32 35947624, i32 35947625, i32 35947626, i32 35947627, i32 35947629, i32 35947630, i32 35947631, i32 35947635, i32 35947636, i32 35947638], align 16
@_ZL27escSeqStateTable_Value_2022 = internal unnamed_addr constant [74 x i8] c"\00\00\00\00\00\01\01\00\01\01\02\01\01\01\01\01\01\01\01\01\01\00\01\01\01\00\00\00\00\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\01\01\01\01\01\01\01\01\01\01", align 16
@_ZL24normalize_esq_chars_2022 = internal unnamed_addr constant <{ [91 x i8], [165 x i8] }> <{ [91 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\04\07\1D\00\02\18\1A\1B\00\03\17\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\19\1C\00\00\15\00\00\00\00\00\00\00\16", [165 x i8] zeroinitializer }>, align 16
@_ZL9hwkana_fb = internal unnamed_addr constant [63 x i16] [i16 8483, i16 8534, i16 8535, i16 8482, i16 8486, i16 9586, i16 9505, i16 9507, i16 9509, i16 9511, i16 9513, i16 9571, i16 9573, i16 9575, i16 9539, i16 8508, i16 9506, i16 9508, i16 9510, i16 9512, i16 9514, i16 9515, i16 9517, i16 9519, i16 9521, i16 9523, i16 9525, i16 9527, i16 9529, i16 9531, i16 9533, i16 9535, i16 9537, i16 9540, i16 9542, i16 9544, i16 9546, i16 9547, i16 9548, i16 9549, i16 9550, i16 9551, i16 9554, i16 9557, i16 9560, i16 9563, i16 9566, i16 9567, i16 9568, i16 9569, i16 9570, i16 9572, i16 9574, i16 9576, i16 9577, i16 9578, i16 9579, i16 9580, i16 9581, i16 9583, i16 9587, i16 8491, i16 8492], align 16
@_ZL14escSeqCharsLen = internal unnamed_addr constant [9 x i8] c"\03\03\03\03\03\04\03\04\03", align 1
@_ZL11escSeqChars = internal unnamed_addr constant [9 x [6 x i8]] [[6 x i8] c"\1B(B\00\00\00", [6 x i8] c"\1B.A\00\00\00", [6 x i8] c"\1B.F\00\00\00", [6 x i8] c"\1B(J\00\00\00", [6 x i8] c"\1B$B\00\00\00", [6 x i8] c"\1B$(D\00\00", [6 x i8] c"\1B$A\00\00\00", [6 x i8] c"\1B$(C\00\00", [6 x i8] c"\1B(I\00\00\00"], align 16

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL12_ISO2022OpenP10UConverterP18UConverterLoadArgsP10UErrorCode(%struct.UConverter* nocapture, %struct.UConverterLoadArgs* nocapture readonly, i32*) #0 {
  %4 = alloca [7 x i8], align 1
  %5 = alloca %struct.UConverterNamePieces, align 4
  %6 = alloca %struct.UConverterLoadArgs, align 8
  %7 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %7) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @__const._ZL12_ISO2022OpenP10UConverterP18UConverterLoadArgsP10UErrorCode.myLocale, i64 0, i64 0), i64 7, i1 false)
  %8 = tail call noalias i8* @uprv_malloc_69(i64 152) #8
  %9 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 2
  store i8* %8, i8** %9, align 8
  %10 = icmp eq i8* %8, null
  br i1 %10, label %69, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.UConverterNamePieces, %struct.UConverterNamePieces* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 224, i1 false)
  %13 = bitcast %struct.UConverterLoadArgs* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 40, i1 false)
  %14 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %6, i64 0, i32 0
  store i32 40, i32* %14, align 8
  %15 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %6, i64 0, i32 2
  store i8 %16, i8* %17, align 8
  %18 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 152, i1 false)
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %1, i64 0, i32 8
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %1, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 15
  %26 = getelementptr inbounds i8, i8* %8, i64 108
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 4
  br label %63

28:                                               ; preds = %11
  %29 = call i8* @strncpy(i8* nonnull %7, i8* nonnull %20, i64 6) #7
  %30 = load i8, i8* %7, align 1
  %31 = icmp eq i8 %30, 106
  %32 = getelementptr inbounds %struct.UConverterLoadArgs, %struct.UConverterLoadArgs* %1, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 15
  %35 = getelementptr inbounds i8, i8* %8, i64 108
  %36 = bitcast i8* %35 to i32*
  store i32 %34, i32* %36, align 4
  br i1 %31, label %37, label %63

37:                                               ; preds = %28
  %38 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 1
  %39 = load i8, i8* %38, align 1
  switch i8 %39, label %63 [
    i8 97, label %40
    i8 112, label %40
  ]

40:                                               ; preds = %37, %37
  %41 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 2
  %42 = load i8, i8* %41, align 1
  switch i8 %42, label %63 [
    i8 95, label %43
    i8 0, label %43
  ]

43:                                               ; preds = %40, %40
  %44 = icmp eq i32 %34, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %43
  store i32 2, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %12) #7
  br label %70

46:                                               ; preds = %43
  %47 = call %struct.UConverterSharedData* @ucnv_loadSharedData_69(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %struct.UConverterNamePieces* nonnull %5, %struct.UConverterLoadArgs* nonnull %6, i32* %2) #7
  %48 = getelementptr inbounds i8, i8* %8, i64 32
  %49 = bitcast i8* %48 to %struct.UConverterSharedData**
  store %struct.UConverterSharedData* %47, %struct.UConverterSharedData** %49, align 8
  %50 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 6
  store %struct.UConverterSharedData* @_ZN12_GLOBAL__N_114_ISO2022JPDataE, %struct.UConverterSharedData** %50, align 8
  %51 = getelementptr inbounds i8, i8* %8, i64 143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 3, i1 false)
  %52 = getelementptr inbounds i8, i8* %8, i64 113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i64 28, i1 false)
  %53 = call i64 @strlen(i8* %52) #9
  %54 = load i32, i32* %36, align 4
  %55 = trunc i32 %54 to i8
  %56 = add i8 %55, 48
  %57 = getelementptr inbounds i8, i8* %52, i64 %53
  store i8 %56, i8* %57, align 1
  %58 = add i64 %53, 1
  %59 = getelementptr inbounds i8, i8* %52, i64 %58
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 18
  store i8 6, i8* %60, align 8
  %61 = load i32, i32* %2, align 4
  %62 = icmp slt i32 %61, 1
  br i1 %62, label %64, label %67

63:                                               ; preds = %22, %40, %37, %28
  store i32 2, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %12) #7
  br label %70

64:                                               ; preds = %46
  %65 = load i8, i8* %15, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %64, %46
  call void @_ZL13_ISO2022CloseP10UConverter(%struct.UConverter* %0)
  br label %68

68:                                               ; preds = %67, %64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %12) #7
  br label %70

69:                                               ; preds = %3
  store i32 7, i32* %2, align 4
  br label %70

70:                                               ; preds = %69, %68, %63, %45
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL13_ISO2022CloseP10UConverter(%struct.UConverter* nocapture) #0 {
  %2 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %3 to %struct.UConverterSharedData**
  %7 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %6, align 8
  %8 = icmp eq %struct.UConverterSharedData* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %7) #7
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds i8, i8* %3, i64 8
  %12 = bitcast i8* %11 to %struct.UConverterSharedData**
  %13 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %12, align 8
  %14 = icmp eq %struct.UConverterSharedData* %13, null
  br i1 %14, label %19, label %18

15:                                               ; preds = %67
  %16 = load i8*, i8** %2, align 8
  tail call void @uprv_free_69(i8* %16) #7
  store i8* null, i8** %2, align 8
  br label %17

17:                                               ; preds = %67, %1, %15
  ret void

18:                                               ; preds = %10
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %13) #7
  br label %19

19:                                               ; preds = %18, %10
  %20 = getelementptr inbounds i8, i8* %3, i64 16
  %21 = bitcast i8* %20 to %struct.UConverterSharedData**
  %22 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %21, align 8
  %23 = icmp eq %struct.UConverterSharedData* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %22) #7
  br label %25

25:                                               ; preds = %24, %19
  %26 = getelementptr inbounds i8, i8* %3, i64 24
  %27 = bitcast i8* %26 to %struct.UConverterSharedData**
  %28 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %27, align 8
  %29 = icmp eq %struct.UConverterSharedData* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %28) #7
  br label %31

31:                                               ; preds = %30, %25
  %32 = getelementptr inbounds i8, i8* %3, i64 32
  %33 = bitcast i8* %32 to %struct.UConverterSharedData**
  %34 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %33, align 8
  %35 = icmp eq %struct.UConverterSharedData* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %34) #7
  br label %37

37:                                               ; preds = %36, %31
  %38 = getelementptr inbounds i8, i8* %3, i64 40
  %39 = bitcast i8* %38 to %struct.UConverterSharedData**
  %40 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %39, align 8
  %41 = icmp eq %struct.UConverterSharedData* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %40) #7
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds i8, i8* %3, i64 48
  %45 = bitcast i8* %44 to %struct.UConverterSharedData**
  %46 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %45, align 8
  %47 = icmp eq %struct.UConverterSharedData* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %43
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %46) #7
  br label %49

49:                                               ; preds = %48, %43
  %50 = getelementptr inbounds i8, i8* %3, i64 56
  %51 = bitcast i8* %50 to %struct.UConverterSharedData**
  %52 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %51, align 8
  %53 = icmp eq %struct.UConverterSharedData* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %52) #7
  br label %55

55:                                               ; preds = %54, %49
  %56 = getelementptr inbounds i8, i8* %3, i64 64
  %57 = bitcast i8* %56 to %struct.UConverterSharedData**
  %58 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %57, align 8
  %59 = icmp eq %struct.UConverterSharedData* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %58) #7
  br label %61

61:                                               ; preds = %60, %55
  %62 = getelementptr inbounds i8, i8* %3, i64 72
  %63 = bitcast i8* %62 to %struct.UConverterSharedData**
  %64 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %63, align 8
  %65 = icmp eq %struct.UConverterSharedData* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %61
  tail call void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData* nonnull %64) #7
  br label %67

67:                                               ; preds = %66, %61
  %68 = getelementptr inbounds i8, i8* %3, i64 80
  %69 = bitcast i8* %68 to %struct.UConverter**
  %70 = load %struct.UConverter*, %struct.UConverter** %69, align 8
  tail call void @ucnv_close_69(%struct.UConverter* %70) #7
  %71 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 10
  %72 = load i8, i8* %71, align 2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %15, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL13_ISO2022ResetP10UConverter21UConverterResetChoice(%struct.UConverter* nocapture, i32) #0 {
  %3 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 2
  %4 = bitcast i8** %3 to %struct.UConverterDataISO2022**
  %5 = load %struct.UConverterDataISO2022*, %struct.UConverterDataISO2022** %4, align 8
  %6 = icmp slt i32 %1, 2
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 3, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 6, i1 false)
  %9 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 5
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 7
  store i8 0, i8* %10, align 8
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %14, label %12

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 4, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %13, i8 0, i64 6, i1 false)
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i1 [ true, %12 ], [ false, %7 ]
  %16 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 9, i64 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 107
  br i1 %18, label %19, label %49

19:                                               ; preds = %14
  br i1 %6, label %20, label %30

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 1
  %26 = load %struct.UConverter*, %struct.UConverter** %25, align 8
  %27 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %26, i64 0, i32 14
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %26, i64 0, i32 15
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %26, i64 0, i32 12
  store i8 0, i8* %29, align 8
  br label %30

30:                                               ; preds = %24, %20, %19
  br i1 %15, label %31, label %49

31:                                               ; preds = %30
  %32 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 21
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %31
  store i8 4, i8* %32, align 1
  %36 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 0
  store i8 27, i8* %36, align 8
  %37 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 1
  store i8 36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 2
  store i8 41, i8* %38, align 2
  %39 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 27, i64 3
  store i8 67, i8* %39, align 1
  br label %40

40:                                               ; preds = %35, %31
  %41 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 6
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %49

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %5, i64 0, i32 1
  %46 = load %struct.UConverter*, %struct.UConverter** %45, align 8
  %47 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %46, i64 0, i32 17
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %46, i64 0, i32 16
  store i32 1, i32* %48, align 8
  br label %49

49:                                               ; preds = %44, %40, %30, %14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @_ZL15_ISO2022getNamePK10UConverter(%struct.UConverter* nocapture readonly) #1 {
  %2 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  %5 = getelementptr inbounds i8, i8* %3, i64 113
  %6 = select i1 %4, i8* null, i8* %5
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL18_ISO_2022_WriteSubP25UConverterFromUnicodeArgsiP10UErrorCode(%struct.UConverterFromUnicodeArgs*, i32, i32*) #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to [8 x i8]*
  %6 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 2
  %7 = load %struct.UConverter*, %struct.UConverter** %6, align 8
  %8 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %7, i64 0, i32 2
  %9 = bitcast i8** %8 to %struct.UConverterDataISO2022**
  %10 = load %struct.UConverterDataISO2022*, %struct.UConverterDataISO2022** %9, align 8
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds [8 x i8], [8 x i8]* %5, i64 0, i64 1
  %13 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %7, i64 0, i32 5
  store i64 -6148914691236517206, i64* %4, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %7, i64 0, i32 19
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 9, i64 0
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  switch i32 %19, label %115 [
    i32 106, label %20
    i32 99, label %36
    i32 107, label %44
  ]

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 4, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 1
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  store i8 0, i8* %21, align 1
  store i8 15, i8* %11, align 8
  br label %25

25:                                               ; preds = %24, %20
  %26 = phi i8* [ %12, %24 ], [ %11, %20 ]
  %27 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 4, i32 0, i64 0
  %28 = load i8, i8* %27, align 1
  switch i8 %28, label %29 [
    i8 0, label %33
    i8 3, label %33
  ]

29:                                               ; preds = %25
  store i8 0, i8* %27, align 1
  %30 = getelementptr inbounds i8, i8* %26, i64 1
  store i8 27, i8* %26, align 1
  %31 = getelementptr inbounds i8, i8* %26, i64 2
  store i8 40, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %26, i64 3
  store i8 66, i8* %31, align 1
  br label %33

33:                                               ; preds = %25, %25, %29
  %34 = phi i8* [ %32, %29 ], [ %26, %25 ], [ %26, %25 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  br label %110

36:                                               ; preds = %3
  %37 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 4, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  store i8 0, i8* %37, align 1
  store i8 15, i8* %11, align 8
  br label %41

41:                                               ; preds = %36, %40
  %42 = phi i8* [ %12, %40 ], [ %11, %36 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  br label %110

44:                                               ; preds = %3
  %45 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 6
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %66

48:                                               ; preds = %44
  %49 = icmp eq i8 %16, 1
  %50 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %7, i64 0, i32 16
  %51 = load i32, i32* %50, align 8
  %52 = icmp ne i32 %51, 0
  br i1 %49, label %53, label %58

53:                                               ; preds = %48
  br i1 %52, label %54, label %55

54:                                               ; preds = %53
  store i32 0, i32* %50, align 8
  store i8 15, i8* %11, align 8
  br label %55

55:                                               ; preds = %54, %53
  %56 = phi i8* [ %12, %54 ], [ %11, %53 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  br label %110

58:                                               ; preds = %48
  br i1 %52, label %60, label %59

59:                                               ; preds = %58
  store i32 1, i32* %50, align 8
  store i8 14, i8* %11, align 8
  br label %60

60:                                               ; preds = %59, %58
  %61 = phi i8* [ %11, %58 ], [ %12, %59 ]
  %62 = load i8, i8* %14, align 1
  %63 = getelementptr inbounds i8, i8* %61, i64 1
  store i8 %62, i8* %61, align 1
  %64 = getelementptr inbounds i8, i8* %14, i64 1
  %65 = getelementptr inbounds i8, i8* %61, i64 2
  br label %110

66:                                               ; preds = %44
  %67 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 1
  %68 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %69 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %68, i64 0, i32 5
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %68, i64 0, i32 19
  %73 = load i8, i8* %72, align 1
  store i8* %14, i8** %69, align 8
  %74 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %75 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %74, i64 0, i32 19
  store i8 %16, i8* %75, align 1
  %76 = bitcast %struct.UConverter** %67 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %struct.UConverter** %6 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %7, i64 0, i32 17
  %80 = load i32, i32* %79, align 4
  %81 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %82 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %81, i64 0, i32 17
  store i32 %80, i32* %82, align 4
  tail call void @ucnv_cbFromUWriteSub_69(%struct.UConverterFromUnicodeArgs* %0, i32 0, i32* %2) #7
  %83 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %84 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %83, i64 0, i32 17
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %79, align 4
  store %struct.UConverter* %7, %struct.UConverter** %6, align 8
  %86 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %87 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 5
  %88 = bitcast i8** %87 to i64*
  store i64 %71, i64* %88, align 8
  %89 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %90 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %89, i64 0, i32 19
  store i8 %73, i8* %90, align 1
  %91 = load i32, i32* %2, align 4
  %92 = icmp eq i32 %91, 15
  br i1 %92, label %93, label %121

93:                                               ; preds = %66
  %94 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %95 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %94, i64 0, i32 21
  %96 = load i8, i8* %95, align 1
  %97 = icmp sgt i8 %96, 0
  br i1 %97, label %98, label %105

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %7, i64 0, i32 27, i64 0
  %100 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %94, i64 0, i32 27, i64 0
  %101 = sext i8 %96 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 %101, i1 false)
  %102 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %103 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %102, i64 0, i32 21
  %104 = load i8, i8* %103, align 1
  br label %105

105:                                              ; preds = %98, %93
  %106 = phi i8 [ %104, %98 ], [ %96, %93 ]
  %107 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %7, i64 0, i32 21
  store i8 %106, i8* %107, align 1
  %108 = load %struct.UConverter*, %struct.UConverter** %67, align 8
  %109 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %108, i64 0, i32 21
  store i8 0, i8* %109, align 1
  br label %121

110:                                              ; preds = %33, %41, %60, %55
  %111 = phi i8* [ %56, %55 ], [ %63, %60 ], [ %42, %41 ], [ %34, %33 ]
  %112 = phi i8* [ %14, %55 ], [ %64, %60 ], [ %14, %41 ], [ %14, %33 ]
  %113 = phi i8* [ %57, %55 ], [ %65, %60 ], [ %43, %41 ], [ %35, %33 ]
  %114 = load i8, i8* %112, align 1
  store i8 %114, i8* %111, align 1
  br label %115

115:                                              ; preds = %110, %3
  %116 = phi i8* [ %11, %3 ], [ %113, %110 ]
  %117 = ptrtoint i8* %116 to i64
  %118 = ptrtoint i64* %4 to i64
  %119 = sub i64 %117, %118
  %120 = trunc i64 %119 to i32
  call void @ucnv_cbFromUWriteBytes_69(%struct.UConverterFromUnicodeArgs* %0, i8* nonnull %11, i32 %120, i32 %1, i32* %2) #7
  br label %121

121:                                              ; preds = %66, %105, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.UConverter* @_ZL19_ISO_2022_SafeClonePK10UConverterPvPiP10UErrorCode(%struct.UConverter* nocapture readonly, i8*, i32* nocapture, i32*) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  store i32 -1431655766, i32* %5, align 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %42

9:                                                ; preds = %4
  %10 = load i32, i32* %2, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  store i32 728, i32* %2, align 4
  br label %42

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %1, i64 576
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %15, i64 152, i1 false)
  %17 = bitcast i8* %1 to %struct.UConverter*
  %18 = getelementptr inbounds i8, i8* %1, i64 16
  %19 = bitcast i8* %18 to i8**
  store i8* %16, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %1, i64 62
  store i8 1, i8* %20, align 2
  %21 = getelementptr inbounds i8, i8* %15, i64 80
  %22 = bitcast i8* %21 to %struct.UConverter**
  %23 = load %struct.UConverter*, %struct.UConverter** %22, align 8
  %24 = icmp eq %struct.UConverter* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %13
  store i32 288, i32* %5, align 4
  %26 = getelementptr inbounds i8, i8* %1, i64 288
  %27 = call %struct.UConverter* @ucnv_safeClone_69(%struct.UConverter* nonnull %23, i8* %26, i32* nonnull %5, i32* %3) #7
  %28 = getelementptr inbounds i8, i8* %1, i64 656
  %29 = bitcast i8* %28 to %struct.UConverter**
  store %struct.UConverter* %27, %struct.UConverter** %29, align 8
  %30 = load i32, i32* %3, align 4
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %32, label %42

32:                                               ; preds = %25, %13
  %33 = bitcast i8* %15 to %struct.UConverterSharedData**
  %34 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %33, align 8
  %35 = icmp eq %struct.UConverterSharedData* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %34) #7
  br label %37

37:                                               ; preds = %32, %36
  %38 = getelementptr inbounds i8, i8* %15, i64 8
  %39 = bitcast i8* %38 to %struct.UConverterSharedData**
  %40 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %39, align 8
  %41 = icmp eq %struct.UConverterSharedData* %40, null
  br i1 %41, label %45, label %44

42:                                               ; preds = %87, %92, %25, %4, %12
  %43 = phi %struct.UConverter* [ null, %12 ], [ null, %4 ], [ null, %25 ], [ %17, %92 ], [ %17, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret %struct.UConverter* %43

44:                                               ; preds = %37
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %40) #7
  br label %45

45:                                               ; preds = %44, %37
  %46 = getelementptr inbounds i8, i8* %15, i64 16
  %47 = bitcast i8* %46 to %struct.UConverterSharedData**
  %48 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %47, align 8
  %49 = icmp eq %struct.UConverterSharedData* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %48) #7
  br label %51

51:                                               ; preds = %50, %45
  %52 = getelementptr inbounds i8, i8* %15, i64 24
  %53 = bitcast i8* %52 to %struct.UConverterSharedData**
  %54 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %53, align 8
  %55 = icmp eq %struct.UConverterSharedData* %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %54) #7
  br label %57

57:                                               ; preds = %56, %51
  %58 = getelementptr inbounds i8, i8* %15, i64 32
  %59 = bitcast i8* %58 to %struct.UConverterSharedData**
  %60 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %59, align 8
  %61 = icmp eq %struct.UConverterSharedData* %60, null
  br i1 %61, label %63, label %62

62:                                               ; preds = %57
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %60) #7
  br label %63

63:                                               ; preds = %62, %57
  %64 = getelementptr inbounds i8, i8* %15, i64 40
  %65 = bitcast i8* %64 to %struct.UConverterSharedData**
  %66 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %65, align 8
  %67 = icmp eq %struct.UConverterSharedData* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %63
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %66) #7
  br label %69

69:                                               ; preds = %68, %63
  %70 = getelementptr inbounds i8, i8* %15, i64 48
  %71 = bitcast i8* %70 to %struct.UConverterSharedData**
  %72 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %71, align 8
  %73 = icmp eq %struct.UConverterSharedData* %72, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %69
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %72) #7
  br label %75

75:                                               ; preds = %74, %69
  %76 = getelementptr inbounds i8, i8* %15, i64 56
  %77 = bitcast i8* %76 to %struct.UConverterSharedData**
  %78 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %77, align 8
  %79 = icmp eq %struct.UConverterSharedData* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %75
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %78) #7
  br label %81

81:                                               ; preds = %80, %75
  %82 = getelementptr inbounds i8, i8* %15, i64 64
  %83 = bitcast i8* %82 to %struct.UConverterSharedData**
  %84 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %83, align 8
  %85 = icmp eq %struct.UConverterSharedData* %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %81
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %84) #7
  br label %87

87:                                               ; preds = %86, %81
  %88 = getelementptr inbounds i8, i8* %15, i64 72
  %89 = bitcast i8* %88 to %struct.UConverterSharedData**
  %90 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %89, align 8
  %91 = icmp eq %struct.UConverterSharedData* %90, null
  br i1 %91, label %42, label %92

92:                                               ; preds = %87
  call void @ucnv_incrementRefCount_69(%struct.UConverterSharedData* nonnull %90) #7
  br label %42
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL23_ISO_2022_GetUnicodeSetPK10UConverterPK9USetAdder20UConverterUnicodeSetP10UErrorCode(%struct.UConverter* nocapture readonly, %struct.USetAdder*, i32, i32*) #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %61

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %0, i64 0, i32 2
  %9 = bitcast i8** %8 to %struct.UConverterDataISO2022**
  %10 = load %struct.UConverterDataISO2022*, %struct.UConverterDataISO2022** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 9, i64 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 106
  br i1 %13, label %14, label %34

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 1
  %16 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %15, align 8
  %17 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 0
  %18 = load %struct.USet*, %struct.USet** %17, align 8
  tail call void %16(%struct.USet* %18, i32 165) #7
  %19 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %15, align 8
  %20 = load %struct.USet*, %struct.USet** %17, align 8
  tail call void %19(%struct.USet* %20, i32 8254) #7
  %21 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 6
  %22 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 2
  %23 = load %struct.USet*, %struct.USet** %17, align 8
  %24 = load void (%struct.USet*, i32, i32)*, void (%struct.USet*, i32, i32)** %22, align 8
  tail call void %24(%struct.USet* %23, i32 0, i32 127) #7
  %25 = load i32, i32* %21, align 4
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %31, label %27

27:                                               ; preds = %14
  %28 = icmp eq i32 %25, 4
  %29 = icmp eq i32 %2, 1
  %30 = or i1 %29, %28
  br i1 %30, label %31, label %34

31:                                               ; preds = %27, %14
  %32 = load void (%struct.USet*, i32, i32)*, void (%struct.USet*, i32, i32)** %22, align 8
  %33 = load %struct.USet*, %struct.USet** %17, align 8
  tail call void %32(%struct.USet* %33, i32 65377, i32 65439) #7
  br label %34

34:                                               ; preds = %7, %31, %27
  br label %35

35:                                               ; preds = %34, %46
  %36 = phi i64 [ %47, %46 ], [ 0, %34 ]
  %37 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %10, i64 0, i32 0, i64 %36
  %38 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %37, align 8
  %39 = icmp eq %struct.UConverterSharedData* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = load i8, i8* %11, align 1
  %42 = icmp eq i8 %41, 106
  %43 = icmp eq i64 %36, 4
  %44 = and i1 %43, %42
  %45 = select i1 %44, i32 3, i32 0
  tail call void @ucnv_MBCSGetFilteredUnicodeSetForUnicode_69(%struct.UConverterSharedData* nonnull %38, %struct.USetAdder* %1, i32 %2, i32 %45, i32* %3) #7
  br label %46

46:                                               ; preds = %35, %40
  %47 = add nuw nsw i64 %36, 1
  %48 = icmp eq i64 %47, 10
  br i1 %48, label %49, label %35

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 4
  %51 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %50, align 8
  %52 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 0
  %53 = load %struct.USet*, %struct.USet** %52, align 8
  tail call void %51(%struct.USet* %53, i32 14) #7
  %54 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %50, align 8
  %55 = load %struct.USet*, %struct.USet** %52, align 8
  tail call void %54(%struct.USet* %55, i32 15) #7
  %56 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %50, align 8
  %57 = load %struct.USet*, %struct.USet** %52, align 8
  tail call void %56(%struct.USet* %57, i32 27) #7
  %58 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 5
  %59 = load void (%struct.USet*, i32, i32)*, void (%struct.USet*, i32, i32)** %58, align 8
  %60 = load %struct.USet*, %struct.USet** %52, align 8
  tail call void %59(%struct.USet* %60, i32 128, i32 159) #7
  br label %61

61:                                               ; preds = %4, %49
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #4

declare %struct.UConverterSharedData* @ucnv_loadSharedData_69(i8*, %struct.UConverterNamePieces*, %struct.UConverterLoadArgs*, i32*) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL46UConverter_toUnicode_ISO_2022_JP_OFFSETS_LOGICP23UConverterToUnicodeArgsP10UErrorCode(%struct.UConverterToUnicodeArgs* nocapture, i32* nocapture) #0 {
  %3 = alloca [2 x i8], align 1
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #7
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 5
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 2
  %14 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %15 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %14, i64 0, i32 2
  %16 = bitcast i8** %15 to %struct.UConverterDataISO2022**
  %17 = load %struct.UConverterDataISO2022*, %struct.UConverterDataISO2022** %16, align 8
  %18 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %83

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %14, i64 0, i32 12
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 1
  %25 = icmp ult i8* %7, %12
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %41

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 6
  %29 = load i16*, i16** %28, align 8
  %30 = icmp ult i16* %10, %29
  br i1 %30, label %31, label %41

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %14, i64 0, i32 13, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  store i8 0, i8* %22, align 8
  %35 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i64
  %38 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  br label %322

41:                                               ; preds = %448, %446, %394, %246, %249, %27, %21
  %42 = phi i64 [ %8, %21 ], [ %8, %27 ], [ %218, %249 ], [ %218, %246 ], [ %371, %394 ], [ %371, %446 ], [ %371, %448 ]
  %43 = phi i16* [ %10, %21 ], [ %10, %27 ], [ %88, %249 ], [ %88, %246 ], [ %396, %394 ], [ %447, %446 ], [ %422, %448 ]
  %44 = inttoptr i64 %42 to i8*
  %45 = icmp ugt i8* %12, %44
  br i1 %45, label %46, label %473

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 6
  %48 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 6
  %49 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 0, i64 1
  %50 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 1
  br label %51

51:                                               ; preds = %63, %46
  %52 = phi i8* [ %44, %46 ], [ %57, %63 ]
  %53 = phi i64 [ %42, %46 ], [ %58, %63 ]
  %54 = load i16*, i16** %47, align 8
  %55 = icmp ult i16* %43, %54
  br i1 %55, label %56, label %470

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8, i8* %52, i64 1
  %58 = ptrtoint i8* %57 to i64
  %59 = load i8, i8* %52, align 1
  switch i8 %59, label %257 [
    i8 15, label %60
    i8 14, label %69
    i8 27, label %76
    i8 13, label %251
    i8 10, label %251
  ]

60:                                               ; preds = %56
  %61 = load i32, i32* %48, align 4
  %62 = icmp eq i32 %61, 3
  br i1 %62, label %63, label %66

63:                                               ; preds = %60, %72
  %64 = phi i8 [ 1, %72 ], [ 0, %60 ]
  store i8 %64, i8* %50, align 1
  %65 = icmp eq i8* %57, %12
  br i1 %65, label %471, label %51

66:                                               ; preds = %60
  %67 = ptrtoint i8* %57 to i64
  %68 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 7
  store i8 0, i8* %68, align 8
  br label %370

69:                                               ; preds = %56
  %70 = load i32, i32* %48, align 4
  %71 = icmp eq i32 %70, 3
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  store i8 8, i8* %49, align 1
  br label %63

73:                                               ; preds = %69
  %74 = ptrtoint i8* %57 to i64
  %75 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 7
  store i8 0, i8* %75, align 8
  br label %370

76:                                               ; preds = %56
  %77 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %78 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %77, i64 0, i32 2
  %79 = bitcast i8** %78 to %struct.UConverterDataISO2022**
  %80 = load %struct.UConverterDataISO2022*, %struct.UConverterDataISO2022** %79, align 8
  %81 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %80, i64 0, i32 5
  %82 = load i32, i32* %81, align 8
  br label %83

83:                                               ; preds = %76, %2
  %84 = phi i32 [ %19, %2 ], [ %82, %76 ]
  %85 = phi %struct.UConverterDataISO2022* [ %17, %2 ], [ %80, %76 ]
  %86 = phi %struct.UConverter* [ %14, %2 ], [ %77, %76 ]
  %87 = phi i64 [ %8, %2 ], [ %53, %76 ]
  %88 = phi i16* [ %10, %2 ], [ %43, %76 ]
  %89 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 12
  %90 = load i8, i8* %89, align 8
  %91 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %85, i64 0, i32 5
  %92 = inttoptr i64 %87 to i8*
  %93 = icmp ugt i8* %12, %92
  br i1 %93, label %94, label %217

94:                                               ; preds = %83
  %95 = getelementptr inbounds i8, i8* %92, i64 1
  %96 = load i8, i8* %92, align 1
  %97 = add i8 %90, 1
  store i8 %97, i8* %89, align 8
  %98 = sext i8 %90 to i64
  %99 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 13, i64 %98
  store i8 %96, i8* %99, align 1
  %100 = zext i8 %96 to i64
  %101 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [91 x i8], [165 x i8] }>* @_ZL24normalize_esq_chars_2022 to [256 x i8]*), i64 0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %148, label %117

104:                                              ; preds = %142
  %105 = icmp eq i8* %119, %12
  br i1 %105, label %152, label %106

106:                                              ; preds = %104
  %107 = load i8, i8* %89, align 8
  %108 = getelementptr inbounds i8, i8* %119, i64 1
  %109 = load i8, i8* %119, align 1
  %110 = add i8 %107, 1
  store i8 %110, i8* %89, align 8
  %111 = sext i8 %107 to i64
  %112 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 13, i64 %111
  store i8 %109, i8* %112, align 1
  %113 = zext i8 %109 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [91 x i8], [165 x i8] }>* @_ZL24normalize_esq_chars_2022 to [256 x i8]*), i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %148, label %117

117:                                              ; preds = %94, %106
  %118 = phi i8 [ %115, %106 ], [ %102, %94 ]
  %119 = phi i8* [ %108, %106 ], [ %95, %94 ]
  %120 = phi i32 [ %123, %106 ], [ %84, %94 ]
  %121 = sext i8 %118 to i32
  %122 = shl i32 %120, 5
  %123 = add nsw i32 %122, %121
  br label %124

124:                                              ; preds = %138, %117
  %125 = phi i32 [ 0, %117 ], [ %129, %138 ]
  %126 = phi i32 [ 74, %117 ], [ %140, %138 ]
  %127 = phi i32 [ 0, %117 ], [ %139, %138 ]
  %128 = add nsw i32 %127, %126
  %129 = ashr i32 %128, 1
  %130 = icmp eq i32 %129, %125
  br i1 %130, label %148, label %131

131:                                              ; preds = %124
  %132 = sext i32 %129 to i64
  %133 = getelementptr inbounds [74 x i32], [74 x i32]* @_ZL25escSeqStateTable_Key_2022, i64 0, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, %123
  br i1 %135, label %138, label %136

136:                                              ; preds = %131
  %137 = icmp slt i32 %134, %123
  br i1 %137, label %138, label %142

138:                                              ; preds = %136, %131
  %139 = phi i32 [ %127, %131 ], [ %129, %136 ]
  %140 = phi i32 [ %129, %131 ], [ %126, %136 ]
  %141 = icmp eq i32 %140, %139
  br i1 %141, label %148, label %124

142:                                              ; preds = %136
  %143 = getelementptr inbounds [74 x i8], [74 x i8]* @_ZL27escSeqStateTable_Value_2022, i64 0, i64 %132
  %144 = load i8, i8* %143, align 1
  %145 = sext i8 %144 to i32
  switch i32 %145, label %104 [
    i32 2, label %146
    i32 1, label %146
    i32 -1, label %148
  ]

146:                                              ; preds = %142, %142
  %147 = ptrtoint i8* %119 to i64
  store i32 0, i32* %91, align 8
  br label %155

148:                                              ; preds = %106, %142, %138, %124, %94
  %149 = phi i8* [ %95, %94 ], [ %119, %124 ], [ %119, %138 ], [ %119, %142 ], [ %108, %106 ]
  %150 = phi i32 [ 0, %94 ], [ 0, %124 ], [ 0, %138 ], [ %123, %142 ], [ 0, %106 ]
  %151 = ptrtoint i8* %149 to i64
  store i32 %150, i32* %91, align 8
  br label %189

152:                                              ; preds = %104
  %153 = sext i8 %144 to i32
  %154 = ptrtoint i8* %12 to i64
  store i32 %123, i32* %91, align 8
  switch i32 %153, label %155 [
    i32 0, label %217
    i32 -1, label %189
  ]

155:                                              ; preds = %152, %146
  %156 = phi i8* [ %12, %152 ], [ %119, %146 ]
  %157 = phi i64 [ %154, %152 ], [ %147, %146 ]
  %158 = getelementptr inbounds [74 x i8], [74 x i8]* @_ZL20nextStateToUnicodeJP, i64 0, i64 %132
  %159 = load i8, i8* %158, align 1
  %160 = sext i8 %159 to i32
  switch i32 %160, label %178 [
    i32 -1, label %214
    i32 16, label %161
    i32 1, label %172
    i32 2, label %172
  ]

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %85, i64 0, i32 3, i32 0, i64 2
  %163 = load i8, i8* %162, align 2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %189, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %85, i64 0, i32 3, i32 1
  %167 = load i8, i8* %166, align 4
  %168 = icmp slt i8 %167, 2
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %85, i64 0, i32 3, i32 2
  store i8 %167, i8* %170, align 1
  br label %171

171:                                              ; preds = %169, %165
  store i8 2, i8* %166, align 4
  br label %184

172:                                              ; preds = %155, %155
  %173 = shl i32 1, %160
  %174 = and i32 %173, 281
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %214, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %85, i64 0, i32 3, i32 0, i64 2
  store i8 %159, i8* %177, align 2
  br label %184

178:                                              ; preds = %155
  %179 = shl i32 1, %160
  %180 = and i32 %179, 281
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %214, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %85, i64 0, i32 3, i32 0, i64 0
  store i8 %159, i8* %183, align 4
  br label %184

184:                                              ; preds = %182, %176, %171
  %185 = load i32, i32* %1, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  store i8 0, i8* %89, align 8
  br label %217

188:                                              ; preds = %184
  switch i32 %185, label %217 [
    i32 18, label %192
    i32 19, label %215
  ]

189:                                              ; preds = %161, %148, %152
  %190 = phi i8* [ %12, %152 ], [ %149, %148 ], [ %156, %161 ]
  %191 = phi i64 [ %154, %152 ], [ %151, %148 ], [ %157, %161 ]
  store i32 18, i32* %1, align 4
  br label %192

192:                                              ; preds = %189, %188
  %193 = phi i8* [ %156, %188 ], [ %190, %189 ]
  %194 = phi i64 [ %157, %188 ], [ %191, %189 ]
  %195 = load i8, i8* %89, align 8
  %196 = icmp sgt i8 %195, 1
  br i1 %196, label %197, label %217

197:                                              ; preds = %192
  %198 = add nsw i8 %195, -1
  %199 = sub i8 %195, %90
  %200 = icmp slt i8 %199, %198
  br i1 %200, label %201, label %208

201:                                              ; preds = %197
  %202 = sub i8 %199, %198
  %203 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 35
  store i8 %202, i8* %203, align 2
  %204 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 33, i64 0
  %205 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 13, i64 1
  %206 = sext i8 %202 to i64
  %207 = sub nsw i64 0, %206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %204, i8* align 1 %205, i64 %207, i1 false) #7
  br label %208

208:                                              ; preds = %197, %201
  %209 = phi i8 [ %199, %201 ], [ %198, %197 ]
  %210 = sext i8 %209 to i64
  %211 = sub nsw i64 0, %210
  %212 = getelementptr inbounds i8, i8* %193, i64 %211
  %213 = ptrtoint i8* %212 to i64
  store i8 1, i8* %89, align 8
  br label %217

214:                                              ; preds = %178, %172, %155
  store i32 19, i32* %1, align 4
  br label %215

215:                                              ; preds = %214, %188
  %216 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %86, i64 0, i32 37
  store i32 0, i32* %216, align 4
  br label %217

217:                                              ; preds = %83, %152, %187, %188, %192, %208, %215
  %218 = phi i64 [ %213, %208 ], [ %194, %192 ], [ %157, %215 ], [ %157, %188 ], [ %157, %187 ], [ %154, %152 ], [ %87, %83 ]
  %219 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 6
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %240

222:                                              ; preds = %217
  %223 = load i32, i32* %18, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %240

225:                                              ; preds = %222
  %226 = load i32, i32* %1, align 4
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %243, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 7
  %230 = load i8, i8* %229, align 8
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %240, label %232

232:                                              ; preds = %228
  store i32 18, i32* %1, align 4
  %233 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %234 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %233, i64 0, i32 37
  store i32 2, i32* %234, align 4
  %235 = sub i64 %218, %87
  %236 = trunc i64 %235 to i8
  %237 = add i8 %90, %236
  %238 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %239 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %238, i64 0, i32 12
  store i8 %237, i8* %239, align 8
  br label %240

240:                                              ; preds = %228, %232, %222, %217
  %241 = load i32, i32* %1, align 4
  %242 = icmp slt i32 %241, 1
  br i1 %242, label %246, label %243

243:                                              ; preds = %225, %240
  store i16* %88, i16** %9, align 8
  %244 = bitcast i8** %6 to i64*
  store i64 %218, i64* %244, align 8
  %245 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 7
  store i8 0, i8* %245, align 8
  br label %477

246:                                              ; preds = %240
  %247 = load i32, i32* %18, align 8
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %41

249:                                              ; preds = %246
  %250 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 7
  store i8 1, i8* %250, align 8
  br label %41

251:                                              ; preds = %56, %56
  %252 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 0, i64 0
  %253 = load i8, i8* %252, align 1
  switch i8 %253, label %254 [
    i8 0, label %255
    i8 3, label %255
  ]

254:                                              ; preds = %251
  store i8 0, i8* %252, align 1
  br label %255

255:                                              ; preds = %251, %251, %254
  %256 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 0, i64 2
  store i8 0, i8* %256, align 1
  store i8 0, i8* %50, align 1
  br label %259

257:                                              ; preds = %56
  %258 = load i8, i8* %50, align 1
  br label %259

259:                                              ; preds = %257, %255
  %260 = phi i8 [ %258, %257 ], [ 0, %255 ]
  %261 = ptrtoint i8* %57 to i64
  %262 = zext i8 %59 to i32
  %263 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 7
  store i8 0, i8* %263, align 8
  %264 = sext i8 %260 to i64
  %265 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = sext i8 %266 to i32
  %268 = add i8 %59, 95
  %269 = icmp ult i8 %268, 63
  br i1 %269, label %270, label %281

270:                                              ; preds = %259
  %271 = load i32, i32* %48, align 4
  %272 = icmp ne i32 %271, 4
  %273 = icmp eq i8 %266, 4
  %274 = or i1 %273, %272
  br i1 %274, label %281, label %275

275:                                              ; preds = %270
  %276 = add nuw nsw i32 %262, 65216
  %277 = icmp sgt i8 %260, 1
  br i1 %277, label %278, label %370

278:                                              ; preds = %275
  %279 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 2
  %280 = load i8, i8* %279, align 1
  store i8 %280, i8* %50, align 1
  br label %370

281:                                              ; preds = %270, %259
  switch i32 %267, label %320 [
    i32 0, label %282
    i32 1, label %285
    i32 2, label %291
    i32 3, label %308
    i32 8, label %315
  ]

282:                                              ; preds = %281
  %283 = icmp sgt i8 %59, -1
  %284 = select i1 %283, i32 %262, i32 65535
  br label %370

285:                                              ; preds = %281
  %286 = icmp sgt i8 %59, -1
  %287 = add nuw nsw i32 %262, 128
  %288 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 2
  %289 = load i8, i8* %288, align 1
  store i8 %289, i8* %50, align 1
  %290 = select i1 %286, i32 %287, i32 65535
  br label %370

291:                                              ; preds = %281
  %292 = icmp sgt i8 %59, -1
  br i1 %292, label %293, label %304

293:                                              ; preds = %291
  %294 = sext i8 %266 to i64
  %295 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 0, i64 %294
  %296 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %295, align 8
  %297 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %296, i64 0, i32 8, i32 4
  %298 = load [256 x i32]*, [256 x i32]** %297, align 8
  %299 = xor i8 %59, -128
  %300 = zext i8 %299 to i64
  %301 = getelementptr inbounds [256 x i32], [256 x i32]* %298, i64 0, i64 %300
  %302 = load i32, i32* %301, align 4
  %303 = and i32 %302, 65535
  br label %304

304:                                              ; preds = %293, %291
  %305 = phi i32 [ %303, %293 ], [ 65535, %291 ]
  %306 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 3, i32 2
  %307 = load i8, i8* %306, align 1
  store i8 %307, i8* %50, align 1
  br label %370

308:                                              ; preds = %281
  %309 = icmp sgt i8 %59, -1
  br i1 %309, label %310, label %370

310:                                              ; preds = %308
  %311 = icmp ult i8 %59, 92
  br i1 %311, label %370, label %312

312:                                              ; preds = %310
  switch i8 %59, label %314 [
    i8 92, label %370
    i8 126, label %313
  ]

313:                                              ; preds = %312
  br label %370

314:                                              ; preds = %312
  br label %370

315:                                              ; preds = %281
  %316 = add i8 %59, -33
  %317 = icmp ult i8 %316, 63
  %318 = add nuw nsw i32 %262, 65344
  %319 = select i1 %317, i32 %318, i32 65535
  br label %370

320:                                              ; preds = %281
  %321 = icmp ult i8* %57, %12
  br i1 %321, label %322, label %365

322:                                              ; preds = %320, %31
  %323 = phi i64 [ %8, %31 ], [ %261, %320 ]
  %324 = phi i16* [ %10, %31 ], [ %43, %320 ]
  %325 = phi i32 [ %34, %31 ], [ %262, %320 ]
  %326 = phi i32 [ %40, %31 ], [ %267, %320 ]
  %327 = inttoptr i64 %323 to i8*
  %328 = load i8, i8* %327, align 1
  %329 = add nuw nsw i32 %325, 223
  %330 = and i32 %329, 254
  %331 = icmp ult i32 %330, 94
  %332 = zext i8 %328 to i32
  %333 = add i8 %328, -33
  %334 = icmp ult i8 %333, 94
  %335 = and i1 %331, %334
  br i1 %335, label %336, label %352

336:                                              ; preds = %322
  %337 = getelementptr inbounds i8, i8* %327, i64 1
  %338 = ptrtoint i8* %337 to i64
  %339 = shl nuw nsw i32 %325, 8
  %340 = or i32 %339, %332
  switch i32 %326, label %343 [
    i32 7, label %341
    i32 4, label %341
  ]

341:                                              ; preds = %336, %336
  %342 = add nuw nsw i32 %340, 32896
  br label %343

343:                                              ; preds = %336, %341
  %344 = phi i32 [ %342, %341 ], [ %340, %336 ]
  %345 = lshr i32 %344, 8
  %346 = trunc i32 %345 to i8
  store i8 %346, i8* %4, align 1
  %347 = trunc i32 %344 to i8
  store i8 %347, i8* %5, align 1
  %348 = sext i32 %326 to i64
  %349 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %17, i64 0, i32 0, i64 %348
  %350 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %349, align 8
  %351 = call i32 @ucnv_MBCSSimpleGetNextUChar_69(%struct.UConverterSharedData* %350, i8* nonnull %4, i32 2, i8 signext 0) #7
  br label %370

352:                                              ; preds = %322
  br i1 %334, label %370, label %353

353:                                              ; preds = %352
  %354 = icmp ult i8 %328, 32
  br i1 %354, label %355, label %359

355:                                              ; preds = %353
  %356 = shl i32 1, %332
  %357 = and i32 %356, 134266880
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %370

359:                                              ; preds = %355, %353
  %360 = getelementptr inbounds i8, i8* %327, i64 1
  %361 = ptrtoint i8* %360 to i64
  %362 = shl nuw nsw i32 %325, 8
  %363 = or i32 %362, %332
  %364 = or i32 %363, 65536
  br label %370

365:                                              ; preds = %320
  %366 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %367 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %366, i64 0, i32 13, i64 0
  store i8 %59, i8* %367, align 1
  %368 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %369 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %368, i64 0, i32 12
  store i8 1, i8* %369, align 8
  br label %473

370:                                              ; preds = %314, %313, %312, %310, %315, %285, %282, %355, %278, %275, %352, %359, %343, %308, %304, %73, %66
  %371 = phi i64 [ %338, %343 ], [ %261, %308 ], [ %261, %304 ], [ %261, %278 ], [ %261, %275 ], [ %74, %73 ], [ %67, %66 ], [ %323, %352 ], [ %361, %359 ], [ %323, %355 ], [ %261, %285 ], [ %261, %282 ], [ %261, %315 ], [ %261, %310 ], [ %261, %312 ], [ %261, %313 ], [ %261, %314 ]
  %372 = phi i16* [ %324, %343 ], [ %43, %308 ], [ %43, %304 ], [ %43, %278 ], [ %43, %275 ], [ %43, %73 ], [ %43, %66 ], [ %324, %352 ], [ %324, %359 ], [ %324, %355 ], [ %43, %285 ], [ %43, %282 ], [ %43, %315 ], [ %43, %310 ], [ %43, %312 ], [ %43, %313 ], [ %43, %314 ]
  %373 = phi i32 [ %351, %343 ], [ 65535, %308 ], [ %305, %304 ], [ %276, %278 ], [ %276, %275 ], [ 65535, %73 ], [ 65535, %66 ], [ 65535, %352 ], [ 65535, %359 ], [ 65535, %355 ], [ %290, %285 ], [ %284, %282 ], [ %319, %315 ], [ %262, %310 ], [ 165, %312 ], [ 8254, %313 ], [ %262, %314 ]
  %374 = phi i32 [ %340, %343 ], [ %262, %308 ], [ %262, %304 ], [ %262, %278 ], [ %262, %275 ], [ 14, %73 ], [ 15, %66 ], [ %325, %352 ], [ %364, %359 ], [ %325, %355 ], [ %262, %285 ], [ %262, %282 ], [ %262, %315 ], [ %262, %310 ], [ %262, %312 ], [ %262, %313 ], [ %262, %314 ]
  %375 = icmp ult i32 %373, 65534
  br i1 %375, label %376, label %397

376:                                              ; preds = %370
  %377 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 7
  %378 = load i32*, i32** %377, align 8
  %379 = icmp eq i32* %378, null
  br i1 %379, label %394, label %380

380:                                              ; preds = %376
  %381 = bitcast i8** %6 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = icmp ult i32 %374, 256
  %384 = select i1 %383, i64 4294967295, i64 4294967294
  %385 = add i64 %384, %371
  %386 = sub i64 %385, %382
  %387 = trunc i64 %386 to i32
  %388 = bitcast i16** %9 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = ptrtoint i16* %372 to i64
  %391 = sub i64 %390, %389
  %392 = ashr exact i64 %391, 1
  %393 = getelementptr inbounds i32, i32* %378, i64 %392
  store i32 %387, i32* %393, align 4
  br label %394

394:                                              ; preds = %376, %380
  %395 = trunc i32 %373 to i16
  %396 = getelementptr inbounds i16, i16* %372, i64 1
  store i16 %395, i16* %372, align 2
  br label %41

397:                                              ; preds = %370
  %398 = icmp ugt i32 %373, 65535
  br i1 %398, label %399, label %455

399:                                              ; preds = %397
  %400 = add i32 %373, -65536
  %401 = lshr i32 %400, 10
  %402 = trunc i32 %401 to i16
  %403 = add i16 %402, -10240
  store i16 %403, i16* %372, align 2
  %404 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 7
  %405 = load i32*, i32** %404, align 8
  %406 = icmp eq i32* %405, null
  br i1 %406, label %421, label %407

407:                                              ; preds = %399
  %408 = bitcast i8** %6 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = icmp ult i32 %374, 256
  %411 = select i1 %410, i64 4294967295, i64 4294967294
  %412 = add i64 %411, %371
  %413 = sub i64 %412, %409
  %414 = trunc i64 %413 to i32
  %415 = bitcast i16** %9 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = ptrtoint i16* %372 to i64
  %418 = sub i64 %417, %416
  %419 = ashr exact i64 %418, 1
  %420 = getelementptr inbounds i32, i32* %405, i64 %419
  store i32 %414, i32* %420, align 4
  br label %421

421:                                              ; preds = %399, %407
  %422 = getelementptr inbounds i16, i16* %372, i64 1
  %423 = getelementptr inbounds %struct.UConverterToUnicodeArgs, %struct.UConverterToUnicodeArgs* %0, i64 0, i32 6
  %424 = load i16*, i16** %423, align 8
  %425 = icmp ult i16* %422, %424
  %426 = trunc i32 %400 to i16
  %427 = and i16 %426, 1023
  %428 = or i16 %427, -9216
  br i1 %425, label %429, label %448

429:                                              ; preds = %421
  store i16 %428, i16* %422, align 2
  %430 = load i32*, i32** %404, align 8
  %431 = icmp eq i32* %430, null
  br i1 %431, label %446, label %432

432:                                              ; preds = %429
  %433 = bitcast i8** %6 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = icmp ult i32 %374, 256
  %436 = select i1 %435, i64 4294967295, i64 4294967294
  %437 = add i64 %436, %371
  %438 = sub i64 %437, %434
  %439 = trunc i64 %438 to i32
  %440 = bitcast i16** %9 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = ptrtoint i16* %422 to i64
  %443 = sub i64 %442, %441
  %444 = ashr exact i64 %443, 1
  %445 = getelementptr inbounds i32, i32* %430, i64 %444
  store i32 %439, i32* %445, align 4
  br label %446

446:                                              ; preds = %429, %432
  %447 = getelementptr inbounds i16, i16* %372, i64 2
  br label %41

448:                                              ; preds = %421
  %449 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %450 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %449, i64 0, i32 23
  %451 = load i8, i8* %450, align 1
  %452 = add i8 %451, 1
  store i8 %452, i8* %450, align 1
  %453 = sext i8 %451 to i64
  %454 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %449, i64 0, i32 30, i64 %453
  store i16 %428, i16* %454, align 2
  br label %41

455:                                              ; preds = %397
  %456 = load %struct.UConverter*, %struct.UConverter** %13, align 8
  %457 = icmp ugt i32 %374, 255
  br i1 %457, label %458, label %462

458:                                              ; preds = %455
  %459 = lshr i32 %374, 8
  %460 = trunc i32 %374 to i8
  %461 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %456, i64 0, i32 13, i64 1
  store i8 %460, i8* %461, align 1
  br label %462

462:                                              ; preds = %455, %458
  %463 = phi i32 [ %459, %458 ], [ %374, %455 ]
  %464 = phi i8 [ 2, %458 ], [ 1, %455 ]
  %465 = trunc i32 %463 to i8
  %466 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %456, i64 0, i32 13, i64 0
  store i8 %465, i8* %466, align 1
  %467 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %456, i64 0, i32 12
  store i8 %464, i8* %467, align 8
  %468 = icmp eq i32 %373, 65534
  %469 = select i1 %468, i32 10, i32 12
  store i32 %469, i32* %1, align 4
  br label %473

470:                                              ; preds = %51
  store i32 15, i32* %1, align 4
  br label %473

471:                                              ; preds = %63
  %472 = ptrtoint i8* %12 to i64
  br label %473

473:                                              ; preds = %41, %471, %462, %470, %365
  %474 = phi i64 [ %261, %365 ], [ %53, %470 ], [ %371, %462 ], [ %472, %471 ], [ %42, %41 ]
  %475 = phi i16* [ %43, %365 ], [ %43, %470 ], [ %372, %462 ], [ %43, %471 ], [ %43, %41 ]
  store i16* %475, i16** %9, align 8
  %476 = bitcast i8** %6 to i64*
  store i64 %474, i64* %476, align 8
  br label %477

477:                                              ; preds = %473, %243
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL48UConverter_fromUnicode_ISO_2022_JP_OFFSETS_LOGICP25UConverterFromUnicodeArgsP10UErrorCode(%struct.UConverterFromUnicodeArgs* nocapture, i32*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to [8 x i8]*
  %8 = alloca [10 x i8], align 1
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 2
  %11 = load %struct.UConverter*, %struct.UConverter** %10, align 8
  %12 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 5
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 6
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 3
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 4
  %20 = load i16*, i16** %19, align 8
  %21 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %22 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 7
  %23 = bitcast i32** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i32** %5 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 1
  %28 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 0
  store i64 -6148914691236517206, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %28) #7
  %29 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %11, i64 0, i32 2
  %30 = bitcast i8** %29 to %struct.UConverterDataISO2022**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %28, i8 -86, i64 10, i1 false)
  %31 = load %struct.UConverterDataISO2022*, %struct.UConverterDataISO2022** %30, align 8
  %32 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 4
  %33 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %11, i64 0, i32 17
  %34 = load i32, i32* %33, align 4
  %35 = icmp ne i32 %34, 0
  %36 = inttoptr i64 %14 to i8*
  %37 = icmp ugt i8* %16, %36
  %38 = and i1 %37, %35
  br i1 %38, label %57, label %39

39:                                               ; preds = %2, %509, %529, %549, %536, %516
  %40 = phi i64 [ %561, %549 ], [ %533, %529 ], [ %533, %536 ], [ %513, %509 ], [ %513, %516 ], [ %14, %2 ]
  %41 = phi i16* [ %76, %549 ], [ %76, %529 ], [ %76, %536 ], [ %76, %509 ], [ %76, %516 ], [ %18, %2 ]
  %42 = phi i32 [ %508, %549 ], [ %508, %529 ], [ %508, %536 ], [ %508, %509 ], [ %508, %516 ], [ 0, %2 ]
  %43 = phi i32 [ %446, %549 ], [ %446, %529 ], [ %446, %536 ], [ %446, %509 ], [ %446, %516 ], [ 0, %2 ]
  %44 = icmp ult i16* %41, %20
  br i1 %44, label %45, label %574

45:                                               ; preds = %39
  %46 = inttoptr i64 %40 to i8*
  %47 = icmp ugt i8* %16, %46
  br i1 %47, label %48, label %564

48:                                               ; preds = %45
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = load i16, i16* %41, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, 63488
  %53 = icmp eq i32 %52, 55296
  br i1 %53, label %54, label %74

54:                                               ; preds = %48
  %55 = and i32 %51, 1024
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %565

57:                                               ; preds = %2, %54
  %58 = phi i64 [ %14, %2 ], [ %40, %54 ]
  %59 = phi i16* [ %18, %2 ], [ %49, %54 ]
  %60 = phi i32 [ %34, %2 ], [ %51, %54 ]
  %61 = phi i32 [ 0, %2 ], [ %42, %54 ]
  %62 = phi i32 [ 0, %2 ], [ %43, %54 ]
  %63 = icmp ult i16* %59, %20
  br i1 %63, label %64, label %570

64:                                               ; preds = %57
  %65 = load i16, i16* %59, align 2
  %66 = zext i16 %65 to i32
  %67 = and i32 %66, 64512
  %68 = icmp eq i32 %67, 56320
  br i1 %68, label %69, label %565

69:                                               ; preds = %64
  %70 = getelementptr inbounds i16, i16* %59, i64 1
  %71 = shl i32 %60, 10
  %72 = add i32 %71, -56613888
  %73 = add i32 %72, %66
  store i32 0, i32* %33, align 4
  br label %74

74:                                               ; preds = %69, %48
  %75 = phi i64 [ %58, %69 ], [ %40, %48 ]
  %76 = phi i16* [ %70, %69 ], [ %49, %48 ]
  %77 = phi i32 [ %73, %69 ], [ %51, %48 ]
  %78 = phi i32 [ %61, %69 ], [ %42, %48 ]
  %79 = phi i32 [ %62, %69 ], [ %43, %48 ]
  %80 = icmp slt i32 %77, 32
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = shl i32 1, %77
  %83 = and i32 %82, 134266880
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %565

85:                                               ; preds = %81, %74
  %86 = icmp eq i32 %78, 0
  br i1 %86, label %87, label %135

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 6
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, -3
  %91 = icmp ult i32 %90, 2
  br i1 %91, label %92, label %93

92:                                               ; preds = %87
  store i8 8, i8* %28, align 1
  br label %93

93:                                               ; preds = %87, %92
  %94 = phi i32 [ 1, %92 ], [ 0, %87 ]
  %95 = getelementptr inbounds %struct.ISO2022State, %struct.ISO2022State* %32, i64 0, i32 0, i64 0
  %96 = load i8, i8* %95, align 1
  %97 = add nuw nsw i32 %94, 1
  %98 = zext i32 %94 to i64
  %99 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %98
  store i8 %96, i8* %99, align 1
  %100 = sext i8 %96 to i32
  %101 = shl i32 1, %100
  %102 = trunc i32 %101 to i16
  %103 = and i16 %102, 25
  %104 = xor i16 %103, 25
  %105 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 4, i32 0, i64 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %117, label %108

108:                                              ; preds = %93
  %109 = sext i8 %106 to i32
  %110 = or i32 %94, 2
  %111 = zext i32 %97 to i64
  %112 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %111
  store i8 %106, i8* %112, align 1
  %113 = shl i32 1, %109
  %114 = trunc i32 %113 to i16
  %115 = xor i16 %114, -1
  %116 = and i16 %104, %115
  br label %117

117:                                              ; preds = %93, %108
  %118 = phi i32 [ %110, %108 ], [ %97, %93 ]
  %119 = phi i16 [ %116, %108 ], [ %104, %93 ]
  %120 = zext i16 %119 to i32
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %117
  %124 = add nsw i32 %118, 1
  %125 = sext i32 %118 to i64
  %126 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %125
  store i8 0, i8* %126, align 1
  %127 = and i16 %119, -2
  %128 = zext i16 %127 to i32
  br label %129

129:                                              ; preds = %117, %123
  %130 = phi i32 [ %120, %117 ], [ %128, %123 ]
  %131 = phi i32 [ %118, %117 ], [ %124, %123 ]
  %132 = phi i16 [ %119, %117 ], [ %127, %123 ]
  %133 = and i32 %130, 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %649, label %643

135:                                              ; preds = %721, %726, %85
  %136 = phi i32 [ %78, %85 ], [ %727, %726 ], [ %723, %721 ]
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %565

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.UConverter, %struct.UConverter* %11, i64 0, i32 11
  %140 = load i8, i8* %139, align 1
  %141 = bitcast i32* %9 to i8*
  %142 = icmp sgt i32 %77, 65535
  %143 = ashr i32 %77, 10
  %144 = sext i32 %143 to i64
  %145 = lshr i32 %77, 4
  %146 = and i32 %145, 63
  %147 = and i32 %77, 15
  %148 = icmp slt i32 %77, 65536
  %149 = or i32 %147, 16
  %150 = shl i32 1, %149
  %151 = add nsw i32 %77, -57344
  %152 = icmp ult i32 %151, 6400
  %153 = add nsw i32 %77, -983040
  %154 = icmp ult i32 %153, 131072
  %155 = add nsw i32 %77, -65377
  %156 = icmp ult i32 %155, 63
  %157 = sext i32 %155 to i64
  %158 = getelementptr inbounds [63 x i16], [63 x i16]* @_ZL9hwkana_fb, i64 0, i64 %157
  %159 = icmp ult i32 %77, 128
  %160 = icmp eq i32 %77, 8254
  %161 = select i1 %160, i32 126, i32 65534
  %162 = icmp eq i32 %77, 165
  %163 = select i1 %162, i32 92, i32 %161
  %164 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 6
  %165 = add nsw i32 %77, -65216
  %166 = getelementptr inbounds %struct.ISO2022State, %struct.ISO2022State* %32, i64 0, i32 0, i64 0
  %167 = add nsw i32 %77, -65344
  %168 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 4, i32 0, i64 1
  %169 = add i32 %77, -160
  %170 = icmp ult i32 %169, 96
  %171 = add i32 %77, -128
  %172 = icmp slt i32 %77, 128
  %173 = sext i32 %136 to i64
  br label %174

174:                                              ; preds = %138, %429
  %175 = phi i64 [ 0, %138 ], [ %435, %429 ]
  %176 = phi i8 [ 0, %138 ], [ %434, %429 ]
  %177 = phi i8 [ 0, %138 ], [ %433, %429 ]
  %178 = phi i8 [ %140, %138 ], [ %432, %429 ]
  %179 = phi i32 [ %79, %138 ], [ %431, %429 ]
  %180 = phi i32 [ 0, %138 ], [ %430, %429 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #7
  store i32 -1431655766, i32* %9, align 4
  %181 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %175
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  switch i32 %183, label %349 [
    i32 0, label %184
    i32 1, label %189
    i32 8, label %194
    i32 3, label %202
    i32 4, label %213
    i32 2, label %299
  ]

184:                                              ; preds = %174
  %185 = select i1 %172, i32 1, i32 %180
  %186 = select i1 %172, i32 %77, i32 %179
  %187 = select i1 %172, i8 %182, i8 %177
  %188 = select i1 %172, i8 0, i8 %176
  br label %429

189:                                              ; preds = %174
  %190 = select i1 %170, i32 1, i32 %180
  %191 = select i1 %170, i32 %171, i32 %179
  %192 = select i1 %170, i8 %182, i8 %177
  %193 = select i1 %170, i8 2, i8 %176
  br label %429

194:                                              ; preds = %174
  br i1 %156, label %195, label %429

195:                                              ; preds = %194
  %196 = load i32, i32* %164, align 4
  switch i32 %196, label %429 [
    i32 3, label %197
    i32 4, label %198
  ]

197:                                              ; preds = %195
  store i8 %182, i8* %168, align 1
  br label %425

198:                                              ; preds = %195
  %199 = load i8, i8* %166, align 1
  %200 = icmp eq i8 %199, 4
  %201 = select i1 %200, i8 3, i8 %199
  br label %425

202:                                              ; preds = %174
  br i1 %159, label %203, label %205

203:                                              ; preds = %202
  switch i32 %77, label %205 [
    i32 126, label %204
    i32 92, label %204
  ]

204:                                              ; preds = %203, %203
  br label %205

205:                                              ; preds = %202, %203, %204
  %206 = phi i32 [ 65534, %204 ], [ %77, %203 ], [ %163, %202 ]
  store i32 %206, i32* %9, align 4
  %207 = icmp ult i32 %206, 128
  %208 = select i1 %207, i32 1, i32 %180
  %209 = select i1 %207, i32 %206, i32 %179
  %210 = select i1 %207, i8 0, i8 %178
  %211 = select i1 %207, i8 %182, i8 %177
  %212 = select i1 %207, i8 0, i8 %176
  br label %429

213:                                              ; preds = %174
  %214 = sext i8 %182 to i64
  %215 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 0, i64 %214
  %216 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %215, align 8
  br i1 %148, label %222, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %216, i64 0, i32 8, i32 15
  %219 = load i8, i8* %218, align 1
  %220 = and i8 %219, 1
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %257, label %222

222:                                              ; preds = %217, %213
  %223 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %216, i64 0, i32 8, i32 8
  %224 = load i16*, i16** %223, align 8
  %225 = bitcast i16* %224 to i32*
  %226 = getelementptr inbounds i16, i16* %224, i64 %144
  %227 = load i16, i16* %226, align 2
  %228 = zext i16 %227 to i32
  %229 = add nuw nsw i32 %146, %228
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i32, i32* %225, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %216, i64 0, i32 8, i32 11
  %234 = bitcast i8** %233 to i16**
  %235 = load i16*, i16** %234, align 8
  %236 = shl i32 %232, 4
  %237 = and i32 %236, 1048560
  %238 = or i32 %237, %147
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds i16, i16* %235, i64 %239
  %241 = load i16, i16* %240, align 2
  %242 = zext i16 %241 to i32
  %243 = icmp ult i16 %241, 256
  %244 = select i1 %243, i32 1, i32 2
  %245 = and i32 %232, %150
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %248, label %247

247:                                              ; preds = %222
  store i32 %242, i32* %9, align 4
  br label %265

248:                                              ; preds = %222
  %249 = icmp ne i8 %178, 0
  %250 = or i1 %152, %249
  %251 = or i1 %154, %250
  %252 = xor i1 %251, true
  %253 = icmp eq i16 %241, 0
  %254 = or i1 %253, %252
  br i1 %254, label %257, label %255

255:                                              ; preds = %248
  store i32 %242, i32* %9, align 4
  %256 = sub nsw i32 0, %244
  br label %274

257:                                              ; preds = %248, %217
  %258 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %216, i64 0, i32 8, i32 22
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %261, label %263

261:                                              ; preds = %257
  %262 = icmp eq i32 %180, 0
  br label %291

263:                                              ; preds = %257
  %264 = call i32 @ucnv_extSimpleMatchFromU_69(i32* nonnull %259, i32 %77, i32* nonnull %9, i8 signext %178) #7
  br label %265

265:                                              ; preds = %247, %263
  %266 = phi i32 [ %244, %247 ], [ %264, %263 ]
  %267 = icmp eq i32 %266, 2
  br i1 %267, label %268, label %274

268:                                              ; preds = %265
  %269 = load i32, i32* %9, align 4
  %270 = and i32 %269, 65280
  %271 = icmp eq i32 %270, 36352
  br i1 %271, label %272, label %281

272:                                              ; preds = %268
  %273 = icmp eq i32 %180, 0
  br label %291

274:                                              ; preds = %255, %265
  %275 = phi i32 [ %266, %265 ], [ %256, %255 ]
  %276 = icmp eq i32 %275, -2
  %277 = icmp eq i32 %180, 0
  %278 = and i1 %277, %276
  br i1 %278, label %279, label %291

279:                                              ; preds = %274
  %280 = load i32, i32* %9, align 4
  br label %281

281:                                              ; preds = %279, %268
  %282 = phi i32 [ %269, %268 ], [ %280, %279 ]
  %283 = phi i32 [ 2, %268 ], [ -2, %279 ]
  %284 = and i32 %282, 32639
  store i32 %284, i32* %9, align 4
  %285 = icmp eq i32 %284, 0
  %286 = select i1 %285, i32 %180, i32 %283
  %287 = select i1 %285, i32 %179, i32 %284
  %288 = select i1 %285, i8 %178, i8 0
  %289 = select i1 %285, i8 %177, i8 %182
  %290 = select i1 %285, i8 %176, i8 0
  br label %429

291:                                              ; preds = %261, %272, %274
  %292 = phi i1 [ %273, %272 ], [ %277, %274 ], [ %262, %261 ]
  %293 = icmp ne i8 %178, 0
  %294 = and i1 %293, %292
  br i1 %294, label %295, label %429

295:                                              ; preds = %291
  br i1 %156, label %296, label %429

296:                                              ; preds = %295
  %297 = load i16, i16* %158, align 2
  %298 = zext i16 %297 to i32
  br label %429

299:                                              ; preds = %174
  %300 = sext i8 %182 to i64
  %301 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 0, i64 %300
  %302 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %301, align 8
  br i1 %142, label %303, label %308

303:                                              ; preds = %299
  %304 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %302, i64 0, i32 8, i32 15
  %305 = load i8, i8* %304, align 1
  %306 = and i8 %305, 1
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %429, label %308

308:                                              ; preds = %303, %299
  %309 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %302, i64 0, i32 8, i32 8
  %310 = load i16*, i16** %309, align 8
  %311 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %302, i64 0, i32 8, i32 11
  %312 = bitcast i8** %311 to i16**
  %313 = load i16*, i16** %312, align 8
  %314 = getelementptr inbounds i16, i16* %310, i64 %144
  %315 = load i16, i16* %314, align 2
  %316 = zext i16 %315 to i32
  %317 = add nuw nsw i32 %146, %316
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds i16, i16* %310, i64 %318
  %320 = load i16, i16* %319, align 2
  %321 = zext i16 %320 to i32
  %322 = add nuw nsw i32 %147, %321
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds i16, i16* %313, i64 %323
  %325 = load i16, i16* %324, align 2
  %326 = and i16 %325, 255
  %327 = zext i16 %326 to i32
  store i32 %327, i32* %9, align 4
  %328 = icmp ugt i16 %325, 3839
  br i1 %328, label %335, label %329

329:                                              ; preds = %308
  %330 = icmp eq i8 %178, 0
  br i1 %330, label %333, label %331

331:                                              ; preds = %329
  %332 = icmp ugt i16 %325, 2047
  br i1 %332, label %335, label %429

333:                                              ; preds = %329
  %334 = icmp ugt i16 %325, 3071
  br i1 %334, label %335, label %429

335:                                              ; preds = %308, %333, %331
  %336 = phi i32 [ -1, %331 ], [ -1, %333 ], [ 1, %308 ]
  %337 = icmp sgt i32 %336, -1
  %338 = icmp eq i32 %180, 0
  %339 = or i1 %338, %337
  %340 = add nsw i32 %327, -160
  %341 = icmp ult i32 %340, 96
  %342 = and i1 %339, %341
  %343 = add nsw i32 %327, -128
  %344 = select i1 %342, i32 %336, i32 %180
  %345 = select i1 %342, i32 %343, i32 %179
  %346 = select i1 %342, i8 0, i8 %178
  %347 = select i1 %342, i8 %182, i8 %177
  %348 = select i1 %342, i8 2, i8 %176
  br label %429

349:                                              ; preds = %174
  %350 = sext i8 %182 to i64
  %351 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 0, i64 %350
  %352 = load %struct.UConverterSharedData*, %struct.UConverterSharedData** %351, align 8
  br i1 %148, label %358, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %352, i64 0, i32 8, i32 15
  %355 = load i8, i8* %354, align 1
  %356 = and i8 %355, 1
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %393, label %358

358:                                              ; preds = %353, %349
  %359 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %352, i64 0, i32 8, i32 8
  %360 = load i16*, i16** %359, align 8
  %361 = bitcast i16* %360 to i32*
  %362 = getelementptr inbounds i16, i16* %360, i64 %144
  %363 = load i16, i16* %362, align 2
  %364 = zext i16 %363 to i32
  %365 = add nuw nsw i32 %146, %364
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds i32, i32* %361, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %352, i64 0, i32 8, i32 11
  %370 = bitcast i8** %369 to i16**
  %371 = load i16*, i16** %370, align 8
  %372 = shl i32 %368, 4
  %373 = and i32 %372, 1048560
  %374 = or i32 %373, %147
  %375 = zext i32 %374 to i64
  %376 = getelementptr inbounds i16, i16* %371, i64 %375
  %377 = load i16, i16* %376, align 2
  %378 = zext i16 %377 to i32
  %379 = icmp ult i16 %377, 256
  %380 = select i1 %379, i32 1, i32 2
  %381 = and i32 %368, %150
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %384, label %383

383:                                              ; preds = %358
  store i32 %378, i32* %9, align 4
  br label %399

384:                                              ; preds = %358
  %385 = icmp ne i8 %178, 0
  %386 = or i1 %152, %385
  %387 = or i1 %154, %386
  %388 = xor i1 %387, true
  %389 = icmp eq i16 %377, 0
  %390 = or i1 %389, %388
  br i1 %390, label %393, label %391

391:                                              ; preds = %384
  store i32 %378, i32* %9, align 4
  %392 = sub nsw i32 0, %380
  br label %402

393:                                              ; preds = %384, %353
  %394 = getelementptr inbounds %struct.UConverterSharedData, %struct.UConverterSharedData* %352, i64 0, i32 8, i32 22
  %395 = load i32*, i32** %394, align 8
  %396 = icmp eq i32* %395, null
  br i1 %396, label %429, label %397

397:                                              ; preds = %393
  %398 = call i32 @ucnv_extSimpleMatchFromU_69(i32* nonnull %395, i32 %77, i32* nonnull %9, i8 signext %178) #7
  br label %399

399:                                              ; preds = %383, %397
  %400 = phi i32 [ %380, %383 ], [ %398, %397 ]
  %401 = icmp eq i32 %400, 2
  br i1 %401, label %407, label %402

402:                                              ; preds = %391, %399
  %403 = phi i32 [ %400, %399 ], [ %392, %391 ]
  %404 = icmp eq i32 %403, -2
  %405 = icmp eq i32 %180, 0
  %406 = and i1 %405, %404
  br i1 %406, label %407, label %429

407:                                              ; preds = %402, %399
  %408 = phi i32 [ -2, %402 ], [ 2, %399 ]
  %409 = icmp eq i8 %182, 7
  %410 = load i32, i32* %9, align 4
  br i1 %409, label %411, label %423

411:                                              ; preds = %407
  %412 = add i32 %410, 24159
  %413 = and i32 %412, 65534
  %414 = icmp ult i32 %413, 23902
  br i1 %414, label %415, label %420

415:                                              ; preds = %411
  %416 = add i32 %410, 95
  %417 = and i32 %416, 254
  %418 = icmp ult i32 %417, 94
  %419 = add i32 %410, -32896
  br i1 %418, label %421, label %420

420:                                              ; preds = %415, %411
  store i32 0, i32* %9, align 4
  br label %429

421:                                              ; preds = %415
  store i32 %419, i32* %9, align 4
  %422 = icmp eq i32 %419, 0
  br i1 %422, label %429, label %423

423:                                              ; preds = %407, %421
  %424 = phi i32 [ %419, %421 ], [ %410, %407 ]
  br label %429

425:                                              ; preds = %197, %198
  %426 = phi i32 [ %165, %198 ], [ %167, %197 ]
  %427 = phi i8 [ %201, %198 ], [ %182, %197 ]
  %428 = phi i8 [ 0, %198 ], [ 1, %197 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #7
  br label %445

429:                                              ; preds = %393, %331, %333, %420, %303, %335, %281, %205, %189, %184, %195, %402, %423, %421, %296, %295, %291, %194
  %430 = phi i32 [ %180, %421 ], [ %408, %423 ], [ %180, %402 ], [ -2, %296 ], [ 0, %295 ], [ %180, %291 ], [ %180, %194 ], [ %185, %184 ], [ %190, %189 ], [ %180, %195 ], [ %208, %205 ], [ %286, %281 ], [ %344, %335 ], [ %180, %303 ], [ %180, %420 ], [ %180, %333 ], [ %180, %331 ], [ %180, %393 ]
  %431 = phi i32 [ %179, %421 ], [ %424, %423 ], [ %179, %402 ], [ %298, %296 ], [ %179, %295 ], [ %179, %291 ], [ %179, %194 ], [ %186, %184 ], [ %191, %189 ], [ %179, %195 ], [ %209, %205 ], [ %287, %281 ], [ %345, %335 ], [ %179, %303 ], [ %179, %420 ], [ %179, %333 ], [ %179, %331 ], [ %179, %393 ]
  %432 = phi i8 [ %178, %421 ], [ 0, %423 ], [ %178, %402 ], [ 0, %296 ], [ %178, %295 ], [ %178, %291 ], [ %178, %194 ], [ %178, %184 ], [ %178, %189 ], [ %178, %195 ], [ %210, %205 ], [ %288, %281 ], [ %346, %335 ], [ %178, %303 ], [ %178, %420 ], [ 0, %333 ], [ %178, %331 ], [ %178, %393 ]
  %433 = phi i8 [ %177, %421 ], [ %182, %423 ], [ %177, %402 ], [ %182, %296 ], [ %177, %295 ], [ %177, %291 ], [ %177, %194 ], [ %187, %184 ], [ %192, %189 ], [ %177, %195 ], [ %211, %205 ], [ %289, %281 ], [ %347, %335 ], [ %177, %303 ], [ %177, %420 ], [ %177, %333 ], [ %177, %331 ], [ %177, %393 ]
  %434 = phi i8 [ %176, %421 ], [ 0, %423 ], [ %176, %402 ], [ 0, %296 ], [ %176, %295 ], [ %176, %291 ], [ %176, %194 ], [ %188, %184 ], [ %193, %189 ], [ %176, %195 ], [ %212, %205 ], [ %290, %281 ], [ %348, %335 ], [ %176, %303 ], [ %176, %420 ], [ %176, %333 ], [ %176, %331 ], [ %176, %393 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #7
  %435 = add nuw nsw i64 %175, 1
  %436 = icmp slt i64 %435, %173
  %437 = icmp slt i32 %430, 1
  %438 = and i1 %437, %436
  br i1 %438, label %174, label %439

439:                                              ; preds = %429
  %440 = icmp eq i32 %430, 0
  br i1 %440, label %565, label %441

441:                                              ; preds = %439
  %442 = icmp slt i32 %430, 0
  %443 = sub nsw i32 0, %430
  %444 = select i1 %442, i32 %443, i32 %430
  br label %445

445:                                              ; preds = %441, %425
  %446 = phi i32 [ %426, %425 ], [ %431, %441 ]
  %447 = phi i8 [ %427, %425 ], [ %433, %441 ]
  %448 = phi i8 [ %428, %425 ], [ %434, %441 ]
  %449 = phi i32 [ 1, %425 ], [ %444, %441 ]
  %450 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 4, i32 1
  %451 = load i8, i8* %450, align 1
  %452 = icmp eq i8 %451, 1
  %453 = icmp eq i8 %448, 0
  %454 = and i1 %453, %452
  br i1 %454, label %455, label %456

455:                                              ; preds = %445
  store i8 15, i8* %26, align 8
  store i8 0, i8* %450, align 1
  br label %456

456:                                              ; preds = %455, %445
  %457 = phi i8 [ 0, %455 ], [ %451, %445 ]
  %458 = phi i32 [ 1, %455 ], [ 0, %445 ]
  %459 = sext i8 %448 to i64
  %460 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 4, i32 0, i64 %459
  %461 = load i8, i8* %460, align 1
  %462 = icmp eq i8 %447, %461
  br i1 %462, label %474, label %463

463:                                              ; preds = %456
  %464 = sext i8 %447 to i64
  %465 = getelementptr inbounds [9 x i8], [9 x i8]* @_ZL14escSeqCharsLen, i64 0, i64 %464
  %466 = load i8, i8* %465, align 1
  %467 = sext i8 %466 to i32
  %468 = zext i32 %458 to i64
  %469 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 %468
  %470 = getelementptr inbounds [9 x [6 x i8]], [9 x [6 x i8]]* @_ZL11escSeqChars, i64 0, i64 %464, i64 0
  %471 = sext i8 %466 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %469, i8* align 2 %470, i64 %471, i1 false)
  %472 = add nsw i32 %458, %467
  store i8 %447, i8* %460, align 1
  %473 = load i8, i8* %450, align 1
  br label %474

474:                                              ; preds = %456, %463
  %475 = phi i8 [ %473, %463 ], [ %457, %456 ]
  %476 = phi i32 [ %472, %463 ], [ %458, %456 ]
  %477 = phi i32 [ 0, %463 ], [ %136, %456 ]
  %478 = icmp eq i8 %448, %475
  br i1 %478, label %489, label %479

479:                                              ; preds = %474
  %480 = icmp eq i8 %448, 1
  %481 = add nsw i32 %476, 1
  %482 = sext i32 %476 to i64
  %483 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 %482
  br i1 %480, label %484, label %485

484:                                              ; preds = %479
  store i8 14, i8* %483, align 1
  store i8 1, i8* %450, align 1
  br label %489

485:                                              ; preds = %479
  store i8 27, i8* %483, align 1
  %486 = add nsw i32 %476, 2
  %487 = sext i32 %481 to i64
  %488 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 %487
  store i8 78, i8* %488, align 1
  br label %489

489:                                              ; preds = %474, %484, %485
  %490 = phi i32 [ %481, %484 ], [ %486, %485 ], [ %476, %474 ]
  %491 = icmp eq i32 %449, 1
  br i1 %491, label %498, label %492

492:                                              ; preds = %489
  %493 = lshr i32 %446, 8
  %494 = trunc i32 %493 to i8
  %495 = add nsw i32 %490, 1
  %496 = sext i32 %490 to i64
  %497 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 %496
  store i8 %494, i8* %497, align 1
  br label %498

498:                                              ; preds = %489, %492
  %499 = phi i32 [ 2, %492 ], [ 1, %489 ]
  %500 = phi i32 [ %495, %492 ], [ %490, %489 ]
  %501 = trunc i32 %446 to i8
  %502 = add nsw i32 %490, %499
  %503 = sext i32 %500 to i64
  %504 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 %503
  store i8 %501, i8* %504, align 1
  switch i32 %77, label %507 [
    i32 13, label %505
    i32 10, label %505
  ]

505:                                              ; preds = %498, %498
  %506 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 4, i32 0, i64 2
  store i8 0, i8* %506, align 1
  br label %507

507:                                              ; preds = %498, %505
  %508 = phi i32 [ 0, %505 ], [ %477, %498 ]
  switch i32 %502, label %549 [
    i32 1, label %509
    i32 2, label %525
  ]

509:                                              ; preds = %507
  %510 = load i8, i8* %26, align 8
  %511 = inttoptr i64 %75 to i8*
  %512 = getelementptr inbounds i8, i8* %511, i64 1
  %513 = ptrtoint i8* %512 to i64
  store i8 %510, i8* %511, align 1
  %514 = load i32*, i32** %5, align 8
  %515 = icmp eq i32* %514, null
  br i1 %515, label %39, label %516

516:                                              ; preds = %509
  %517 = bitcast i16** %17 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = ptrtoint i16* %76 to i64
  %520 = sub i64 %519, %518
  %521 = lshr exact i64 %520, 1
  %522 = trunc i64 %521 to i32
  %523 = add i32 %522, -1
  %524 = getelementptr inbounds i32, i32* %514, i64 1
  store i32* %524, i32** %5, align 8
  store i32 %523, i32* %514, align 4
  br label %39

525:                                              ; preds = %507
  %526 = inttoptr i64 %75 to i8*
  %527 = getelementptr inbounds i8, i8* %526, i64 2
  %528 = icmp ugt i8* %527, %16
  br i1 %528, label %549, label %529

529:                                              ; preds = %525
  %530 = load i8, i8* %26, align 8
  %531 = getelementptr inbounds i8, i8* %526, i64 1
  store i8 %530, i8* %526, align 1
  %532 = load i8, i8* %27, align 1
  %533 = ptrtoint i8* %527 to i64
  store i8 %532, i8* %531, align 1
  %534 = load i32*, i32** %5, align 8
  %535 = icmp eq i32* %534, null
  br i1 %535, label %39, label %536

536:                                              ; preds = %529
  %537 = bitcast i16** %17 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = ptrtoint i16* %76 to i64
  %540 = sub i64 %539, %538
  %541 = lshr exact i64 %540, 1
  %542 = icmp ult i32 %77, 65536
  %543 = select i1 %542, i64 1, i64 2
  %544 = sub nsw i64 %541, %543
  %545 = trunc i64 %544 to i32
  %546 = getelementptr inbounds i32, i32* %534, i64 1
  store i32* %546, i32** %5, align 8
  store i32 %545, i32* %534, align 4
  %547 = load i32*, i32** %5, align 8
  %548 = getelementptr inbounds i32, i32* %547, i64 1
  store i32* %548, i32** %5, align 8
  store i32 %545, i32* %547, align 4
  br label %39

549:                                              ; preds = %507, %525
  %550 = bitcast i16** %17 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = ptrtoint i16* %76 to i64
  %553 = sub i64 %552, %551
  %554 = lshr exact i64 %553, 1
  %555 = icmp ult i32 %77, 65536
  %556 = select i1 %555, i64 1, i64 2
  %557 = sub nsw i64 %554, %556
  %558 = trunc i64 %557 to i32
  %559 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %559) #7
  %560 = bitcast i8** %3 to i64*
  store i64 %75, i64* %560, align 8
  call void @ucnv_fromUWriteBytes_69(%struct.UConverter* %11, i8* nonnull %26, i32 %502, i8** nonnull %3, i8* %16, i32** nonnull %5, i32 %558, i32* %1) #7
  %561 = load i64, i64* %560, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %559) #7
  %562 = load i32, i32* %1, align 4
  %563 = icmp slt i32 %562, 1
  br i1 %563, label %39, label %640

564:                                              ; preds = %45
  store i32 15, i32* %1, align 4
  br label %640

565:                                              ; preds = %439, %135, %81, %54, %64
  %566 = phi i32 [ 12, %64 ], [ 12, %54 ], [ 12, %81 ], [ 10, %135 ], [ 10, %439 ]
  %567 = phi i32 [ %60, %64 ], [ %51, %54 ], [ %77, %81 ], [ %77, %135 ], [ %77, %439 ]
  %568 = phi i64 [ %58, %64 ], [ %40, %54 ], [ %75, %81 ], [ %75, %135 ], [ %75, %439 ]
  %569 = phi i16* [ %59, %64 ], [ %49, %54 ], [ %76, %81 ], [ %76, %135 ], [ %76, %439 ]
  store i32 %566, i32* %1, align 4
  br label %570

570:                                              ; preds = %565, %57
  %571 = phi i32 [ %60, %57 ], [ %567, %565 ]
  %572 = phi i64 [ %58, %57 ], [ %568, %565 ]
  %573 = phi i16* [ %59, %57 ], [ %569, %565 ]
  store i32 %571, i32* %33, align 4
  br label %574

574:                                              ; preds = %570, %39
  %575 = phi i64 [ %40, %39 ], [ %572, %570 ]
  %576 = phi i16* [ %41, %39 ], [ %573, %570 ]
  %577 = load i32, i32* %1, align 4
  %578 = icmp sgt i32 %577, 0
  br i1 %578, label %640, label %579

579:                                              ; preds = %574
  %580 = getelementptr inbounds %struct.UConverterDataISO2022, %struct.UConverterDataISO2022* %31, i64 0, i32 4, i32 1
  %581 = load i8, i8* %580, align 1
  %582 = icmp eq i8 %581, 0
  br i1 %582, label %583, label %587

583:                                              ; preds = %579
  %584 = getelementptr inbounds %struct.ISO2022State, %struct.ISO2022State* %32, i64 0, i32 0, i64 0
  %585 = load i8, i8* %584, align 1
  %586 = icmp eq i8 %585, 0
  br i1 %586, label %640, label %587

587:                                              ; preds = %583, %579
  %588 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %0, i64 0, i32 1
  %589 = load i8, i8* %588, align 2
  %590 = icmp eq i8 %589, 0
  %591 = icmp ult i16* %576, %20
  %592 = or i1 %591, %590
  br i1 %592, label %640, label %593

593:                                              ; preds = %587
  %594 = load i32, i32* %33, align 4
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %640

596:                                              ; preds = %593
  br i1 %582, label %598, label %597

597:                                              ; preds = %596
  store i8 15, i8* %26, align 8
  store i8 0, i8* %580, align 1
  br label %598

598:                                              ; preds = %596, %597
  %599 = phi i32 [ 1, %597 ], [ 0, %596 ]
  %600 = getelementptr inbounds %struct.ISO2022State, %struct.ISO2022State* %32, i64 0, i32 0, i64 0
  %601 = load i8, i8* %600, align 1
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %607, label %603

603:                                              ; preds = %598
  %604 = zext i32 %599 to i64
  %605 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 %604
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %605, i8* align 16 getelementptr inbounds ([9 x [6 x i8]], [9 x [6 x i8]]* @_ZL11escSeqChars, i64 0, i64 0, i64 0), i64 3, i1 false)
  %606 = add nuw nsw i32 %599, 3
  store i8 0, i8* %600, align 1
  br label %607

607:                                              ; preds = %598, %603
  %608 = phi i32 [ %606, %603 ], [ %599, %598 ]
  %609 = load i16*, i16** %17, align 8
  %610 = ptrtoint i16* %576 to i64
  %611 = ptrtoint i16* %609 to i64
  %612 = sub i64 %610, %611
  %613 = lshr exact i64 %612, 1
  %614 = trunc i64 %613 to i32
  %615 = icmp sgt i32 %614, 0
  br i1 %615, label %616, label %635

616:                                              ; preds = %607
  %617 = add nsw i32 %614, -1
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds i16, i16* %609, i64 %618
  %620 = load i16, i16* %619, align 2
  %621 = and i16 %620, -1024
  %622 = icmp eq i16 %621, -9216
  br i1 %622, label %623, label %635

623:                                              ; preds = %616
  %624 = icmp eq i32 %617, 0
  br i1 %624, label %633, label %625

625:                                              ; preds = %623
  %626 = shl i64 %612, 31
  %627 = add i64 %626, -8589934592
  %628 = ashr exact i64 %627, 32
  %629 = getelementptr inbounds i16, i16* %609, i64 %628
  %630 = load i16, i16* %629, align 2
  %631 = and i16 %630, -1024
  %632 = icmp eq i16 %631, -10240
  br i1 %632, label %633, label %635

633:                                              ; preds = %625, %623
  %634 = add nsw i32 %614, -2
  br label %635

635:                                              ; preds = %607, %616, %625, %633
  %636 = phi i32 [ %634, %633 ], [ %617, %625 ], [ %617, %616 ], [ -1, %607 ]
  %637 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %637) #7
  %638 = bitcast i8** %4 to i64*
  store i64 %575, i64* %638, align 8
  call void @ucnv_fromUWriteBytes_69(%struct.UConverter* %11, i8* nonnull %26, i32 %608, i8** nonnull %4, i8* %16, i32** nonnull %5, i32 %636, i32* %1) #7
  %639 = load i64, i64* %638, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %637) #7
  br label %640

640:                                              ; preds = %564, %549, %587, %583, %574, %635, %593
  %641 = phi i16* [ %576, %574 ], [ %576, %583 ], [ %576, %587 ], [ %576, %635 ], [ %576, %593 ], [ %76, %549 ], [ %41, %564 ]
  %642 = phi i64 [ %575, %574 ], [ %575, %583 ], [ %575, %587 ], [ %639, %635 ], [ %575, %593 ], [ %561, %549 ], [ %40, %564 ]
  store i16* %641, i16** %17, align 8
  store i64 %642, i64* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  ret void

643:                                              ; preds = %129
  %644 = add nsw i32 %131, 1
  %645 = sext i32 %131 to i64
  %646 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %645
  store i8 3, i8* %646, align 1
  %647 = and i16 %132, -9
  %648 = zext i16 %647 to i32
  br label %649

649:                                              ; preds = %643, %129
  %650 = phi i32 [ %648, %643 ], [ %130, %129 ]
  %651 = phi i32 [ %644, %643 ], [ %131, %129 ]
  %652 = phi i16 [ %647, %643 ], [ %132, %129 ]
  %653 = and i32 %650, 2
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %661, label %655

655:                                              ; preds = %649
  %656 = add nsw i32 %651, 1
  %657 = sext i32 %651 to i64
  %658 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %657
  store i8 1, i8* %658, align 1
  %659 = and i16 %652, -3
  %660 = zext i16 %659 to i32
  br label %661

661:                                              ; preds = %655, %649
  %662 = phi i32 [ %660, %655 ], [ %650, %649 ]
  %663 = phi i32 [ %656, %655 ], [ %651, %649 ]
  %664 = phi i16 [ %659, %655 ], [ %652, %649 ]
  %665 = and i32 %662, 16
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %673, label %667

667:                                              ; preds = %661
  %668 = add nsw i32 %663, 1
  %669 = sext i32 %663 to i64
  %670 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %669
  store i8 4, i8* %670, align 1
  %671 = and i16 %664, -17
  %672 = zext i16 %671 to i32
  br label %673

673:                                              ; preds = %667, %661
  %674 = phi i32 [ %672, %667 ], [ %662, %661 ]
  %675 = phi i32 [ %668, %667 ], [ %663, %661 ]
  %676 = phi i16 [ %671, %667 ], [ %664, %661 ]
  %677 = and i32 %674, 4
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %685, label %679

679:                                              ; preds = %673
  %680 = add nsw i32 %675, 1
  %681 = sext i32 %675 to i64
  %682 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %681
  store i8 2, i8* %682, align 1
  %683 = and i16 %676, -5
  %684 = zext i16 %683 to i32
  br label %685

685:                                              ; preds = %679, %673
  %686 = phi i32 [ %684, %679 ], [ %674, %673 ]
  %687 = phi i32 [ %680, %679 ], [ %675, %673 ]
  %688 = phi i16 [ %683, %679 ], [ %676, %673 ]
  %689 = and i32 %686, 32
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %697, label %691

691:                                              ; preds = %685
  %692 = add nsw i32 %687, 1
  %693 = sext i32 %687 to i64
  %694 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %693
  store i8 5, i8* %694, align 1
  %695 = and i16 %688, -33
  %696 = zext i16 %695 to i32
  br label %697

697:                                              ; preds = %691, %685
  %698 = phi i32 [ %696, %691 ], [ %686, %685 ]
  %699 = phi i32 [ %692, %691 ], [ %687, %685 ]
  %700 = phi i16 [ %695, %691 ], [ %688, %685 ]
  %701 = and i32 %698, 64
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %709, label %703

703:                                              ; preds = %697
  %704 = add nsw i32 %699, 1
  %705 = sext i32 %699 to i64
  %706 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %705
  store i8 6, i8* %706, align 1
  %707 = and i16 %700, -65
  %708 = zext i16 %707 to i32
  br label %709

709:                                              ; preds = %703, %697
  %710 = phi i32 [ %708, %703 ], [ %698, %697 ]
  %711 = phi i32 [ %704, %703 ], [ %699, %697 ]
  %712 = phi i16 [ %707, %703 ], [ %700, %697 ]
  %713 = trunc i32 %710 to i8
  %714 = icmp sgt i8 %713, -1
  br i1 %714, label %721, label %715

715:                                              ; preds = %709
  %716 = add nsw i32 %711, 1
  %717 = sext i32 %711 to i64
  %718 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %717
  store i8 7, i8* %718, align 1
  %719 = and i16 %712, -129
  %720 = zext i16 %719 to i32
  br label %721

721:                                              ; preds = %715, %709
  %722 = phi i32 [ %720, %715 ], [ %710, %709 ]
  %723 = phi i32 [ %716, %715 ], [ %711, %709 ]
  %724 = and i32 %722, 256
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %135, label %726

726:                                              ; preds = %721
  %727 = add nsw i32 %723, 1
  %728 = sext i32 %723 to i64
  %729 = getelementptr inbounds [10 x i8], [10 x i8]* %8, i64 0, i64 %728
  store i8 8, i8* %729, align 1
  br label %135
}

declare i32 @ucnv_MBCSSimpleGetNextUChar_69(%struct.UConverterSharedData*, i8*, i32, i8 signext) local_unnamed_addr #5

declare i32 @ucnv_extSimpleMatchFromU_69(i32*, i32, i32*, i8 signext) local_unnamed_addr #5

declare void @ucnv_fromUWriteBytes_69(%struct.UConverter*, i8*, i32, i8**, i8*, i32**, i32, i32*) local_unnamed_addr #5

declare void @ucnv_unloadSharedDataIfReady_69(%struct.UConverterSharedData*) local_unnamed_addr #5

declare void @ucnv_close_69(%struct.UConverter*) local_unnamed_addr #5

declare void @uprv_free_69(i8*) local_unnamed_addr #5

declare void @ucnv_cbFromUWriteSub_69(%struct.UConverterFromUnicodeArgs*, i32, i32*) local_unnamed_addr #5

declare void @ucnv_cbFromUWriteBytes_69(%struct.UConverterFromUnicodeArgs*, i8*, i32, i32, i32*) local_unnamed_addr #5

declare %struct.UConverter* @ucnv_safeClone_69(%struct.UConverter*, i8*, i32*, i32*) local_unnamed_addr #5

declare void @ucnv_incrementRefCount_69(%struct.UConverterSharedData*) local_unnamed_addr #5

declare void @ucnv_MBCSGetFilteredUnicodeSetForUnicode_69(%struct.UConverterSharedData*, %struct.USetAdder*, i32, i32, i32*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
