; ModuleID = '../../components/media_router/browser/presentation/presentation_media_sinks_observer.cc'
source_filename = "../../components/media_router/browser/presentation/presentation_media_sinks_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media_router::PresentationMediaSinksObserver" = type <{ %"class.media_router::MediaSinksObserver.base", [7 x i8], %"class.content::PresentationScreenAvailabilityListener"*, i32, [4 x i8] }>
%"class.media_router::MediaSinksObserver.base" = type <{ i32 (...)**, %"class.absl::optional", %"class.url::Origin", %"class.media_router::MediaRouter"*, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.media_router::MediaSource" }
%"class.media_router::MediaSource" = type { %"class.std::__1::basic_string", %class.GURL }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.5" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.media_router::MediaRouter" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.content::PresentationScreenAvailabilityListener" = type { i32 (...)** }
%"class.media_router::MediaSinksObserver" = type <{ i32 (...)**, %"class.absl::optional", %"class.url::Origin", %"class.media_router::MediaRouter"*, i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.media_router::MediaSink"*, %"class.media_router::MediaSink"*, %"class.std::__1::__compressed_pair.17" }
%"class.media_router::MediaSink" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.absl::optional.12", %"class.absl::optional.12", i32, i32 }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.media_router::MediaSink"* }
%"class.std::__1::vector.22" = type opaque

@_ZTVN12media_router30PresentationMediaSinksObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media_router::PresentationMediaSinksObserver"*)* @_ZN12media_router30PresentationMediaSinksObserverD2Ev to i8*), i8* bitcast (void (%"class.media_router::PresentationMediaSinksObserver"*)* @_ZN12media_router30PresentationMediaSinksObserverD0Ev to i8*), i8* bitcast (void (%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"*, %"class.std::__1::vector.22"*)* @_ZN12media_router18MediaSinksObserver14OnSinksUpdatedERKNSt3__16vectorINS_9MediaSinkENS1_9allocatorIS3_EEEERKNS2_IN3url6OriginENS4_ISA_EEEE to i8*), i8* bitcast (void (%"class.media_router::PresentationMediaSinksObserver"*, %"class.std::__1::vector"*)* @_ZN12media_router30PresentationMediaSinksObserver15OnSinksReceivedERKNSt3__16vectorINS_9MediaSinkENS1_9allocatorIS3_EEEE to i8*)] }, align 8

@_ZN12media_router30PresentationMediaSinksObserverC1EPNS_11MediaRouterEPN7content38PresentationScreenAvailabilityListenerERKNS_11MediaSourceERKN3url6OriginE = hidden unnamed_addr alias void (%"class.media_router::PresentationMediaSinksObserver"*, %"class.media_router::MediaRouter"*, %"class.content::PresentationScreenAvailabilityListener"*, %"class.media_router::MediaSource"*, %"class.url::Origin"*), void (%"class.media_router::PresentationMediaSinksObserver"*, %"class.media_router::MediaRouter"*, %"class.content::PresentationScreenAvailabilityListener"*, %"class.media_router::MediaSource"*, %"class.url::Origin"*)* @_ZN12media_router30PresentationMediaSinksObserverC2EPNS_11MediaRouterEPN7content38PresentationScreenAvailabilityListenerERKNS_11MediaSourceERKN3url6OriginE
@_ZN12media_router30PresentationMediaSinksObserverD1Ev = hidden unnamed_addr alias void (%"class.media_router::PresentationMediaSinksObserver"*), void (%"class.media_router::PresentationMediaSinksObserver"*)* @_ZN12media_router30PresentationMediaSinksObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router30PresentationMediaSinksObserverC2EPNS_11MediaRouterEPN7content38PresentationScreenAvailabilityListenerERKNS_11MediaSourceERKN3url6OriginE(%"class.media_router::PresentationMediaSinksObserver"*, %"class.media_router::MediaRouter"*, %"class.content::PresentationScreenAvailabilityListener"*, %"class.media_router::MediaSource"* dereferenceable(144), %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.media_router::PresentationMediaSinksObserver"* %0 to %"class.media_router::MediaSinksObserver"*
  tail call void @_ZN12media_router18MediaSinksObserverC2EPNS_11MediaRouterERKNS_11MediaSourceERKN3url6OriginE(%"class.media_router::MediaSinksObserver"* %6, %"class.media_router::MediaRouter"* %1, %"class.media_router::MediaSource"* dereferenceable(144) %3, %"class.url::Origin"* dereferenceable(80) %4) #4
  %7 = getelementptr inbounds %"class.media_router::PresentationMediaSinksObserver", %"class.media_router::PresentationMediaSinksObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12media_router30PresentationMediaSinksObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.media_router::PresentationMediaSinksObserver", %"class.media_router::PresentationMediaSinksObserver"* %0, i64 0, i32 2
  store %"class.content::PresentationScreenAvailabilityListener"* %2, %"class.content::PresentationScreenAvailabilityListener"** %8, align 8
  %9 = getelementptr inbounds %"class.media_router::PresentationMediaSinksObserver", %"class.media_router::PresentationMediaSinksObserver"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 8
  ret void
}

declare void @_ZN12media_router18MediaSinksObserverC2EPNS_11MediaRouterERKNS_11MediaSourceERKN3url6OriginE(%"class.media_router::MediaSinksObserver"*, %"class.media_router::MediaRouter"*, %"class.media_router::MediaSource"* dereferenceable(144), %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12media_router18MediaSinksObserverD2Ev(%"class.media_router::MediaSinksObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router30PresentationMediaSinksObserverD2Ev(%"class.media_router::PresentationMediaSinksObserver"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media_router::PresentationMediaSinksObserver"* %0 to %"class.media_router::MediaSinksObserver"*
  tail call void @_ZN12media_router18MediaSinksObserverD2Ev(%"class.media_router::MediaSinksObserver"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router30PresentationMediaSinksObserverD0Ev(%"class.media_router::PresentationMediaSinksObserver"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media_router::PresentationMediaSinksObserver"* %0 to %"class.media_router::MediaSinksObserver"*
  tail call void @_ZN12media_router18MediaSinksObserverD2Ev(%"class.media_router::MediaSinksObserver"* %2) #4
  %3 = bitcast %"class.media_router::PresentationMediaSinksObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router30PresentationMediaSinksObserver15OnSinksReceivedERKNSt3__16vectorINS_9MediaSinkENS1_9allocatorIS3_EEEE(%"class.media_router::PresentationMediaSinksObserver"* nocapture, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.media_router::MediaSink"*, %"class.media_router::MediaSink"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.media_router::MediaSink"*, %"class.media_router::MediaSink"** %5, align 8
  %7 = icmp eq %"class.media_router::MediaSink"* %4, %6
  %8 = select i1 %7, i32 1, i32 4
  %9 = getelementptr inbounds %"class.media_router::PresentationMediaSinksObserver", %"class.media_router::PresentationMediaSinksObserver"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %8
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.media_router::PresentationMediaSinksObserver", %"class.media_router::PresentationMediaSinksObserver"* %0, i64 0, i32 2
  %14 = load %"class.content::PresentationScreenAvailabilityListener"*, %"class.content::PresentationScreenAvailabilityListener"** %13, align 8
  %15 = bitcast %"class.content::PresentationScreenAvailabilityListener"* %14 to void (%"class.content::PresentationScreenAvailabilityListener"*, i32)***
  %16 = load void (%"class.content::PresentationScreenAvailabilityListener"*, i32)**, void (%"class.content::PresentationScreenAvailabilityListener"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.content::PresentationScreenAvailabilityListener"*, i32)*, void (%"class.content::PresentationScreenAvailabilityListener"*, i32)** %16, i64 3
  %18 = load void (%"class.content::PresentationScreenAvailabilityListener"*, i32)*, void (%"class.content::PresentationScreenAvailabilityListener"*, i32)** %17, align 8
  tail call void %18(%"class.content::PresentationScreenAvailabilityListener"* %14, i32 %8) #4
  store i32 %8, i32* %9, align 8
  br label %19

19:                                               ; preds = %2, %12
  ret void
}

declare void @_ZN12media_router18MediaSinksObserver14OnSinksUpdatedERKNSt3__16vectorINS_9MediaSinkENS1_9allocatorIS3_EEEERKNS2_IN3url6OriginENS4_ISA_EEEE(%"class.media_router::MediaSinksObserver"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.22"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
