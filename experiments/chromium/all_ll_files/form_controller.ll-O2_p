; ModuleID = '../../third_party/blink/renderer/core/html/forms/form_controller.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/form_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StaticSingleton.683" = type { %"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.156", i32, [4 x i8], %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.292", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.298", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.334", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.272", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i64 }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::Worklist.203"* }
%"class.blink::Worklist.203" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::Worklist.210"* }
%"class.blink::Worklist.210" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.192" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.252", %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.266", [4 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { i64 }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { float }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.275", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.284" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.298" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.315" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.203"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.210"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.217"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.224"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.231"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.598" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.333 }
%class.scoped_refptr.333 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.334" = type { %"struct.std::__1::__atomic_base.335" }
%"struct.std::__1::__atomic_base.335" = type { %"struct.std::__1::__cxx_atomic_impl.336" }
%"struct.std::__1::__cxx_atomic_impl.336" = type { %"struct.std::__1::__cxx_atomic_base_impl.337" }
%"struct.std::__1::__cxx_atomic_base_impl.337" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.114" }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ControlKey" = type { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.60", %"class.blink::HeapVector.386", i8, [7 x i8] }>
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::Document"* }
%"class.blink::HeapVector.386" = type { %"class.WTF::Vector.389" }
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.40", [512 x i8] }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.41"*, i32, i32 }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.43", %"class.blink::Member.45", %"class.blink::Member.47", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.31", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.50", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.15" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.8", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.10" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.58", %"class.blink::Member.60", %"class.blink::Member.8", %"class.blink::Member.62", %"class.blink::Member.62", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.92", %"class.blink::HeapVector.94" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.66" }
%"class.blink::HeapHashMap.66" = type { %"class.WTF::HashMap.69" }
%"class.WTF::HashMap.69" = type { %"class.WTF::HashTable.70" }
%"class.WTF::HashTable.70" = type <{ %"struct.WTF::KeyValuePair.72"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.72" = type { %"class.WTF::AtomicString", %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.77", i32, %"class.blink::HeapVector.79" }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.79" = type { %"class.WTF::Vector.82" }
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.blink::Member.77"*, i32, i32 }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.94" = type { %"class.WTF::Vector.97" }
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99" }
%"class.WTF::VectorBufferBase.99" = type { %"class.blink::Member.100"*, i32, i32 }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.19", %"class.blink::Member.21", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.19" = type { %"class.WTF::SingleThreadedBitField.20" }
%"class.WTF::SingleThreadedBitField.20" = type { i32 }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.24", %"class.WTF::AtomicString", %"class.WTF::Vector.26" }
%"class.WTF::RefCounted.24" = type { %"class.base::RefCounted.25" }
%"class.base::RefCounted.25" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28", [32 x i8] }
%"class.WTF::VectorBufferBase.28" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.33" }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::HeapHashMap.35"* }
%"class.blink::HeapHashMap.35" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.blink::HeapVector.50" = type { %"class.WTF::Vector.53" }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.blink::Member.56"*, i32, i32 }
%"class.blink::Member.56" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.110", %"class.WTF::Vector.110", i8, i32, %"class.blink::Member.121", %"class.blink::Member.123", %"class.blink::Member.125", %"class.blink::Member.127", %"class.blink::Member.129", %"class.blink::Member.131", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.139", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.145", %"class.blink::Member.147", %"class.blink::Member.100", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.150", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.79", %"class.blink::Member.77", %"class.blink::Member.349", %"class.blink::Member.77", %"class.blink::Member.77", %"class.blink::Member.77", %"class.blink::UserActionElementSet", %"class.blink::Member.358", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.365", i16, i8, %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::Member.378", %"class.blink::TextLinkColors", %"class.blink::Member.414", i8, [7 x i8], %"class.blink::HeapHashMap.416", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.77", %"class.WTF::Vector.423", %"class.blink::Member.428", %"class.blink::Member.430", i8, %"class.blink::Member.77", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.432", %"class.blink::HeapVector.434", %"class.std::__1::unique_ptr.442", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.448", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.461", %"class.WTF::Vector.463", i8, i8, %"class.std::__1::unique_ptr.468", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.79", %"class.blink::HeapVector.474", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.482", i8, i32, %"class.blink::Member.484", %"class.blink::Member.486", %"class.blink::Member.488", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.490", %"class.WTF::HashMap.492", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.501", %"class.blink::Member.503", %"class.blink::Member.60", %"class.blink::Member.60", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.505", i8, i32, %"class.blink::Member.512", %"class.blink::Member.514", i32, %"class.blink::Member.516", %"class.blink::Member.518", %"class.blink::Member.520", %"class.std::__1::unique_ptr.522", i64, %"class.std::__1::unique_ptr.528", i32, i32, %"class.blink::Member.534", %"class.blink::Member.536", %"class.blink::Member.538", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.540", %"class.WTF::Vector.542", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.547", %"class.blink::Member.554", %"class.std::__1::unique_ptr.556", %"class.blink::Member.562", i8, i8, %"class.WTF::String", %"class.blink::Member.564", i8, [7 x i8], %"class.blink::HeapHashMap.566", %"class.blink::HeapObserverSet", %"class.blink::Member.580", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.582", i32, i8, i8, %"class.blink::WeakMember.584", %"class.blink::Member.585" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.103" }
%"class.blink::HeapHashMap.103" = type { %"class.WTF::HashMap.106" }
%"class.WTF::HashMap.106" = type { %"class.WTF::HashTable.107" }
%"class.WTF::HashTable.107" = type <{ %"struct.WTF::KeyValuePair.109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.109" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.114" }
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.133" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::KURL"* }
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.149 }
%class.scoped_refptr.149 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.150" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.153 }
%class.scoped_refptr.153 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.154", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.154" = type { %"class.base::RefCounted.155" }
%"class.base::RefCounted.155" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.351" }
%"class.blink::HeapHashMap.351" = type { %"class.WTF::HashMap.354" }
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"class.blink::WeakMember.364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.364" = type opaque
%"class.blink::HeapHashSet.365" = type { %"class.WTF::HashSet.368" }
%"class.WTF::HashSet.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ %"class.blink::WeakMember.371"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.371" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type <{ %"class.blink::Member.60", %"class.blink::Member.382", %"class.WTF::HashMap.393", %"class.blink::Member.398", i8, [7 x i8] }>
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::DocumentState"* }
%"class.WTF::HashMap.393" = type { %"class.WTF::HashTable.394" }
%"class.WTF::HashTable.394" = type <{ %"struct.WTF::KeyValuePair.397"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.397" = type { %"class.WTF::AtomicString", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::SavedFormState"* }
%"class.blink::SavedFormState" = type { %"class.WTF::HashMap", i32, [4 x i8] }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::ControlKey", %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::FormControlState, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::FormControlState, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { %"class.blink::FormControlState"*, i32, i32 }
%"class.blink::FormControlState" = type { i32, %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::FormKeyGenerator"* }
%"class.blink::FormKeyGenerator" = type { %"class.blink::HeapHashMap.402", %"class.WTF::HashMap.409" }
%"class.blink::HeapHashMap.402" = type { %"class.WTF::HashMap.405" }
%"class.WTF::HashMap.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"struct.WTF::KeyValuePair.408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.408" = type { %"class.blink::Member.45", %"class.WTF::AtomicString" }
%"class.WTF::HashMap.409" = type { %"class.WTF::HashTable.410" }
%"class.WTF::HashTable.410" = type <{ %"struct.WTF::KeyValuePair.413"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.413" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type opaque
%"class.WTF::Vector.423" = type { %"class.WTF::VectorBuffer.424" }
%"class.WTF::VectorBuffer.424" = type { %"class.WTF::VectorBufferBase.425" }
%"class.WTF::VectorBufferBase.425" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.434" = type { %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.blink::Member.440"*, i32, i32 }
%"class.blink::Member.440" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.448" = type { %"class.WTF::HashSet.451" }
%"class.WTF::HashSet.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"class.blink::WeakMember.454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.454" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.455", i32, [4 x i8] }>
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"struct.std::__1::pair.458"*, i32, i32 }
%"struct.std::__1::pair.458" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.474" = type { %"class.WTF::Vector.477" }
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.blink::Member.480"*, i32, i32 }
%"class.blink::Member.480" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.60" }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.340, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.340 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.341" }>
%"class.base::RefCountedThreadSafe.341" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.342 }
%class.scoped_refptr.342 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.343", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.343" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.344" }
%"struct.std::__1::atomic.344" = type { %"struct.std::__1::__atomic_base.345" }
%"struct.std::__1::__atomic_base.345" = type { %"struct.std::__1::__atomic_base.346" }
%"struct.std::__1::__atomic_base.346" = type { %"struct.std::__1::__cxx_atomic_impl.347" }
%"struct.std::__1::__cxx_atomic_impl.347" = type { %"struct.std::__1::__cxx_atomic_base_impl.348" }
%"struct.std::__1::__cxx_atomic_base_impl.348" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.61" }
%"class.blink::HeapHashSet.505" = type { %"class.WTF::HashSet.508" }
%"class.WTF::HashSet.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"class.blink::Member.511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.511" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.542" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.547" = type { %"class.WTF::HashMap.550" }
%"class.WTF::HashMap.550" = type { %"class.WTF::HashTable.551" }
%"class.WTF::HashTable.551" = type <{ %"struct.WTF::KeyValuePair.553"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.553" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.566" = type { %"class.WTF::HashMap.569" }
%"class.WTF::HashMap.569" = type { %"class.WTF::HashTable.570" }
%"class.WTF::HashTable.570" = type <{ %"struct.WTF::KeyValuePair.572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.572" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.573" }
%"class.blink::HeapHashSet.573" = type { %"class.WTF::HashSet.576" }
%"class.WTF::HashSet.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"class.blink::WeakMember.579"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.579" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.60", %"class.blink::HeapHashSet.589", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.596", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.589" = type { %"class.WTF::HashSet.592" }
%"class.WTF::HashSet.592" = type { %"class.WTF::HashTable.593" }
%"class.WTF::HashTable.593" = type <{ %"class.blink::Member.595"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.595" = type opaque
%"class.blink::HeapTaskRunnerTimer.596" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.597", { i64, i64 } }
%"class.blink::WeakMember.597" = type { %"class.blink::MemberBase.583" }
%"class.blink::WeakMember.584" = type { %"class.blink::MemberBase" }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::DequeConstIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque"*, i32 }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.646 }
%union.anon.646 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.603" }
%"class.WTF::Vector.603" = type { %"class.WTF::VectorBuffer.604" }
%"class.WTF::VectorBuffer.604" = type { %"class.WTF::VectorBufferBase.605", [16 x i8] }
%"class.WTF::VectorBufferBase.605" = type { i8*, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.21", %"class.WTF::Vector.691" }
%"class.WTF::Vector.691" = type { %"class.WTF::VectorBuffer.692" }
%"class.WTF::VectorBuffer.692" = type { %"class.WTF::VectorBufferBase.693", [64 x i8] }
%"class.WTF::VectorBufferBase.693" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.WTF::HashMap.393"* }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.43", %"class.blink::Member.45", %"class.blink::Member.47", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"struct.std::__1::default_delete.625" = type { i8 }
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ScopedEventQueue" = type <{ %"class.blink::Persistent.688", i32, [4 x i8] }>
%"class.blink::Persistent.688" = type { %"class.blink::PersistentBase.689" }
%"class.blink::PersistentBase.689" = type { %"class.blink::HeapVector.690"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.690" = type opaque
%"class.blink::Persistent.631" = type { %"class.blink::PersistentBase.632" }
%"class.blink::PersistentBase.632" = type { %"class.blink::FormController"*, %"class.blink::PersistentNodePtr" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.341", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.631" }
%"class.blink::HeapHashSet.633" = type { %"class.WTF::HashSet.636" }
%"class.WTF::HashSet.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"class.blink::Member.45"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610", [16 x i8] }
%"class.WTF::VectorBufferBase.610" = type { i16*, i32, i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.718", %"class.blink::FreeList", %"class.WTF::Vector.723" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720" }
%"class.WTF::VectorBufferBase.720" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725" }
%"class.WTF::VectorBufferBase.725" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.777" = type { i8 }

$_ZNK3WTF18DequeConstIteratorIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEdeEv = comdat any

$_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE9push_backIRKS2_EEvOT_ = comdat any

$_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE9TakeFirstEv = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb = comdat any

$_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_ = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPNS_10StringImplEEEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E4FindINS_22IdentityHashTranslatorISA_SF_S6_EES2_EENS_17HashTableIteratorIS2_S8_S9_SA_SF_SC_S6_EERKT0_ = comdat any

$_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FormControlStateEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E6insertINS_17HashMapTranslatorISF_SA_S6_EERS2_RS7_EENS_18HashTableAddResultISG_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E18ReinitializeBucketERS8_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E8RehashToEPS8_jSH_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E16InitializeBucketERS8_ = comdat any

$_ZN3WTF22KeyValuePairHashTraitsIN5blink20ControlKeyHashTraitsENS_10HashTraitsINS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINS2_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEES6_E9ConstructIJS8_EEEPS8_PvDpOT_ = comdat any

$_ZN3WTF12KeyValuePairIN5blink10ControlKeyENS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEC2IS2_S6_EEOT_OT0_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEES6_NS_18HashMapValueTraitsINS2_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEELb1EE4MoveEOS8_RS8_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E16LookupForWritingINS_22IdentityHashTranslatorISA_SF_S6_EES2_EENSt3__14pairIPS8_bEERKT0_ = comdat any

$_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF12VectorCopierILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE17UninitializedCopyIS2_EEvPKT_S8_PS2_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E5eraseEPKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E12DeleteBucketERKS8_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_iEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS1_12KeyValuePairIS5_NS1_12AtomicStringEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS3_12KeyValuePairIS7_NS3_12AtomicStringEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16FormKeyGeneratorEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16FormKeyGeneratorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16FormKeyGeneratorEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16FormKeyGeneratorEE7GetNameEPKv = comdat any

$_ZNKSt3__114default_deleteIN3WTF7HashMapINS1_12AtomicStringENS_10unique_ptrIN5blink14SavedFormStateENS0_IS6_EEEENS1_16AtomicStringHashENS1_10HashTraitsIS3_EENSA_IS8_EENS1_18PartitionAllocatorEEEEclEPSE_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_DnEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_INSt3__110unique_ptrIN5blink14SavedFormStateENS5_14default_deleteIS8_EEEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_SB_EERKS3_DnEEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8ReinsertEOSA_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13DocumentStateEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13DocumentStateEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13DocumentStateEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE5eraseEPKSA_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14FormControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_14FormControllerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14FormControllerEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink14FormControllerEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink14FormControllerEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16FormKeyGeneratorEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16FormKeyGeneratorEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13DocumentStateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13DocumentStateEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"file\00", align 1
@_ZN5blink10html_names11kActionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [3 x i8] c" #\00", align 1
@_ZN5blink10html_names13kReadonlyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"ScheduleRestore\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/core/html/forms/form_controller.cc\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.6 = private unnamed_addr constant [3 x i8] c" [\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink10html_names9kFormAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blinkL18FormStateSignatureEvE11s_signature = internal global %"class.WTF::StaticSingleton.683" zeroinitializer, align 8
@_ZGVZN5blinkL18FormStateSignatureEvE11s_signature = internal global i64 0, align 8
@.str.11 = private unnamed_addr constant [49 x i8] c"\0A\0D?% Blink serialized form state version 10 \0A\0D=&\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.13 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FormControlStateEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FormControlState]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [150 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::ControlKey, WTF::Deque<blink::FormControlState, 0, WTF::PartitionAllocator> >]\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"No owner\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEjEEEEPKcv = private unnamed_addr constant [92 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, unsigned int>]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.18 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.19 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS3_12KeyValuePairIS7_NS3_12AtomicStringEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS6_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [478 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::HTMLFormElement>, WTF::KeyValuePair<blink::Member<blink::HTMLFormElement>, WTF::AtomicString>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::HTMLFormElement>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::HTMLFormElement> >, WTF::HashTraits<WTF::AtomicString> >, WTF::HashTraits<blink::Member<blink::HTMLFormElement> >, blink::HeapAllocator> >]\00", align 1
@.str.23 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.24 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ListedElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ListedElement>, WTF::VectorTraits<blink::Member<blink::ListedElement> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FormKeyGeneratorEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FormKeyGenerator]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16FormKeyGeneratorEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16FormKeyGeneratorEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16FormKeyGeneratorEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16FormKeyGeneratorEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16FormKeyGeneratorEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringENSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEENS_16AtomicStringHashENS_10HashTraitsIS2_EENSB_IS9_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [371 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::AtomicString, std::__1::unique_ptr<blink::SavedFormState, std::__1::default_delete<blink::SavedFormState> >, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<std::__1::unique_ptr<blink::SavedFormState, std::__1::default_delete<blink::SavedFormState> > >, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [180 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, std::__1::unique_ptr<blink::SavedFormState, std::__1::default_delete<blink::SavedFormState> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13DocumentStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DocumentState]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13DocumentStateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13DocumentStateEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13DocumentStateEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13DocumentStateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_15HTMLFormElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [371 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::HTMLFormElement>, blink::Member<blink::HTMLFormElement>, WTF::IdentityExtractor, WTF::MemberHash<blink::HTMLFormElement>, WTF::HashTraits<blink::Member<blink::HTMLFormElement> >, WTF::HashTraits<blink::Member<blink::HTMLFormElement> >, blink::HeapAllocator> >]\00", align 1

@_ZN5blink10ControlKeyC1EPN3WTF10StringImplES3_ = hidden unnamed_addr alias void (%"class.blink::ControlKey"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*), void (%"class.blink::ControlKey"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*)* @_ZN5blink10ControlKeyC2EPN3WTF10StringImplES3_
@_ZN5blink10ControlKeyD1Ev = hidden unnamed_addr alias void (%"class.blink::ControlKey"*), void (%"class.blink::ControlKey"*)* @_ZN5blink10ControlKeyD2Ev
@_ZN5blink10ControlKeyC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::ControlKey"*, %"class.blink::ControlKey"*), void (%"class.blink::ControlKey"*, %"class.blink::ControlKey"*)* @_ZN5blink10ControlKeyC2ERKS0_
@_ZN5blink13DocumentStateC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::DocumentState"*, %"class.blink::Document"*), void (%"class.blink::DocumentState"*, %"class.blink::Document"*)* @_ZN5blink13DocumentStateC2ERNS_8DocumentE
@_ZN5blink14FormControllerC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::FormController"*, %"class.blink::Document"*), void (%"class.blink::FormController"*, %"class.blink::Document"*)* @_ZN5blink14FormControllerC2ERNS_8DocumentE
@_ZN5blink14FormControllerD1Ev = hidden unnamed_addr alias void (%"class.blink::FormController"*), void (%"class.blink::FormController"*)* @_ZN5blink14FormControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16FormControlState11SerializeToERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::FormControlState"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %10 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false) #15
  store i8* %9, i8** %10, align 8
  %13 = urem i32 %7, 10
  %14 = udiv i32 %7, 10
  %15 = trunc i32 %13 to i8
  %16 = or i8 %15, 48
  store i8 %16, i8* %9, align 1
  %17 = icmp ugt i32 %7, 9
  br i1 %17, label %18, label %33

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  store i8* %19, i8** %10, align 8
  %20 = urem i32 %14, 10
  %21 = trunc i32 %20 to i8
  %22 = or i8 %21, 48
  store i8 %22, i8* %19, align 2
  %23 = icmp ugt i32 %7, 99
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = udiv i32 %7, 100
  %26 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  store i8* %26, i8** %10, align 8
  %27 = urem i32 %25, 10
  %28 = trunc i32 %27 to i8
  %29 = or i8 %28, 48
  store i8 %29, i8* %26, align 1
  %30 = icmp ugt i32 %7, 999
  br i1 %30, label %35, label %44

31:                                               ; preds = %18
  %32 = ptrtoint i8* %19 to i64
  br label %47

33:                                               ; preds = %2
  %34 = ptrtoint i8* %9 to i64
  br label %47

35:                                               ; preds = %24, %35
  %36 = phi i32 [ %38, %35 ], [ %25, %24 ]
  %37 = load i8*, i8** %10, align 8
  %38 = udiv i32 %36, 10
  %39 = getelementptr inbounds i8, i8* %37, i64 -1
  store i8* %39, i8** %10, align 8
  %40 = urem i32 %38, 10
  %41 = trunc i32 %40 to i8
  %42 = or i8 %41, 48
  store i8 %42, i8* %39, align 1
  %43 = icmp ugt i32 %36, 99
  br i1 %43, label %35, label %44

44:                                               ; preds = %35, %24
  %45 = bitcast i8** %10 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %44, %31, %33
  %48 = phi i64 [ %34, %33 ], [ %46, %44 ], [ %32, %31 ]
  %49 = ptrtoint i8* %12 to i64
  %50 = sub i64 %49, %48
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* %11, align 8
  %52 = inttoptr i64 %48 to i8*
  %53 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %52, i32 %51) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #15
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %69, label %60, !prof !2

60:                                               ; preds = %47
  %61 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %62, align 8
  %64 = zext i32 %56 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %61, i64* %66, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  %67 = load i32, i32* %55, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %55, align 4
  br label %85

69:                                               ; preds = %47
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #15
  br label %85

85:                                               ; preds = %60, %69, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %86 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::String"*, %"class.WTF::String"** %86, align 8
  %88 = load i32, i32* %6, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 %89
  %91 = icmp eq i32 %88, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %85
  %93 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %94 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %96

95:                                               ; preds = %133, %85
  ret void

96:                                               ; preds = %92, %133
  %97 = phi %"class.WTF::String"* [ %87, %92 ], [ %134, %133 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  %101 = select i1 %100, %"class.WTF::String"* %93, %"class.WTF::String"* %97
  %102 = load i32, i32* %55, align 4
  %103 = load i32, i32* %57, align 8
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %132, label %105, !prof !2

105:                                              ; preds = %96
  %106 = load %"class.WTF::String"*, %"class.WTF::String"** %94, align 8
  %107 = zext i32 %102 to i64
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 %107, i32 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %110, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %111, label %129, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #15
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %117
  call void @llvm.trap() #15
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %129

129:                                              ; preds = %127, %112, %105
  %130 = load i32, i32* %55, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %55, align 4
  br label %133

132:                                              ; preds = %96
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector"* %1, %"class.WTF::String"* dereferenceable(8) %101) #15
  br label %133

133:                                              ; preds = %129, %132
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 1
  %135 = icmp eq %"class.WTF::String"* %134, %90
  br i1 %135, label %95, label %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FormControlState11DeserializeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERj(%"class.blink::FormControlState"* noalias nocapture sret, %"class.WTF::Vector"* dereferenceable(16), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FormControlState", align 8
  %5 = load i32, i32* %2, align 4
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %5, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %12 = bitcast %"class.WTF::Vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #15
  br label %182

13:                                               ; preds = %3
  %14 = add nuw i32 %5, 1
  store i32 %14, i32* %2, align 4
  %15 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %5) #15
  %16 = tail call i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"* %15, i8* null) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %21 = bitcast %"class.WTF::Vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #15
  br label %182

22:                                               ; preds = %13
  %23 = load i32, i32* %2, align 4
  %24 = add i32 %23, %16
  %25 = load i32, i32* %6, align 4
  %26 = icmp ugt i32 %24, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 2, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %30 = bitcast %"class.WTF::Vector"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #15
  br label %182

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::FormControlState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #15
  %33 = bitcast %"class.blink::FormControlState"* %4 to i64*
  store i64 -6148914691236517206, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 0
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1
  %36 = bitcast %"class.WTF::Vector"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #15
  %37 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %38 = zext i32 %16 to i64
  %39 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %38) #15
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast %"class.WTF::Vector"* %35 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = lshr i64 %39, 3
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %37, align 8
  %45 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %35, i64 0, i32 0, i32 0, i32 0
  br label %143

47:                                               ; preds = %179
  %48 = load i32, i32* %34, align 8
  %49 = load i32, i32* %37, align 8
  %50 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 %48, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %53, align 8
  %54 = icmp eq i32 %49, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %47
  %56 = zext i32 %49 to i64
  %57 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %56) #15
  %58 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %57, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %59 = ptrtoint i8* %58 to i64
  %60 = bitcast %"class.WTF::Vector"* %51 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = lshr i64 %57, 3
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %53, align 8
  %63 = bitcast i8* %58 to %"class.WTF::String"*
  br label %64

64:                                               ; preds = %55, %47
  %65 = phi %"class.WTF::String"* [ null, %47 ], [ %63, %55 ]
  %66 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::String"*, %"class.WTF::String"** %69, align 8
  %71 = zext i32 %67 to i64
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 %71
  %73 = icmp eq i32 %67, 0
  br i1 %73, label %105, label %74

74:                                               ; preds = %64, %98
  %75 = phi %"class.WTF::String"* [ %99, %98 ], [ %65, %64 ]
  %76 = phi %"class.WTF::String"* [ %100, %98 ], [ %70, %64 ]
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %79, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %80, label %98, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %98

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i33
  %90 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #15
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !2

95:                                               ; preds = %86
  call void @llvm.trap() #15
  unreachable

96:                                               ; preds = %86
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %87, align 4
  br label %98

98:                                               ; preds = %96, %81, %74
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 1
  %101 = icmp eq %"class.WTF::String"* %100, %72
  br i1 %101, label %102, label %74

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %35, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %103, align 8
  br label %105

105:                                              ; preds = %102, %64
  %106 = phi %"class.WTF::String"* [ %104, %102 ], [ %70, %64 ]
  %107 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %35, i64 0, i32 0, i32 0, i32 0
  %108 = icmp eq %"class.WTF::String"* %106, null
  br i1 %108, label %142, label %109, !prof !3

109:                                              ; preds = %105
  %110 = bitcast %"class.WTF::String"* %106 to i8*
  %111 = load i32, i32* %66, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %140, label %113, !prof !2

113:                                              ; preds = %109
  %114 = zext i32 %111 to i64
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 %114
  br label %116

116:                                              ; preds = %134, %113
  %117 = phi %"class.WTF::String"* [ %135, %134 ], [ %106, %113 ]
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #15
  br label %134

134:                                              ; preds = %133, %130, %116
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 1
  %136 = icmp eq %"class.WTF::String"* %135, %115
  br i1 %136, label %137, label %116

137:                                              ; preds = %134
  store i32 0, i32* %66, align 4
  %138 = bitcast %"class.WTF::Vector"* %35 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %140

140:                                              ; preds = %137, %109
  %141 = phi i8* [ %139, %137 ], [ %110, %109 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %141) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %107, align 8
  br label %142

142:                                              ; preds = %105, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #15
  br label %182

143:                                              ; preds = %179, %31
  %144 = phi i32 [ 0, %31 ], [ %180, %179 ]
  %145 = load i32, i32* %2, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %2, align 4
  %147 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %145) #15
  store i32 1, i32* %34, align 8
  %148 = load i32, i32* %45, align 4
  %149 = load i32, i32* %37, align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %178, label %151, !prof !2

151:                                              ; preds = %143
  %152 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %153 = zext i32 %148 to i64
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 %153, i32 0, i32 0
  store %"class.WTF::StringImpl"* %155, %"class.WTF::StringImpl"** %156, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %175

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i33
  %167 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #15
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !2

172:                                              ; preds = %163
  call void @llvm.trap() #15
  unreachable

173:                                              ; preds = %163
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %164, align 4
  br label %175

175:                                              ; preds = %173, %158, %151
  %176 = load i32, i32* %45, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %45, align 4
  br label %179

178:                                              ; preds = %143
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector"* %35, %"class.WTF::String"* dereferenceable(8) %147) #15
  br label %179

179:                                              ; preds = %175, %178
  %180 = add nuw i32 %144, 1
  %181 = icmp eq i32 %180, %16
  br i1 %181, label %47, label %143

182:                                              ; preds = %18, %27, %142, %9
  ret void
}

declare i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10ControlKeyC2EPN3WTF10StringImplES3_(%"class.blink::ControlKey"* nocapture, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 1
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  br label %25

25:                                               ; preds = %22, %7, %3
  %26 = phi %"class.WTF::StringImpl"* [ %2, %3 ], [ %2, %7 ], [ %24, %22 ]
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #15
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %33
  tail call void @llvm.trap() #15
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %25, %28, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10ControlKey3RefEv(%"class.blink::ControlKey"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #15
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #15
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %1
  %23 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 1
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #15
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #15
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %41, %26, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10ControlKeyD2Ev(%"class.blink::ControlKey"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %18

18:                                               ; preds = %17, %14, %1
  %19 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 1
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %18, %31, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10ControlKey5DerefEv(%"class.blink::ControlKey"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %18

18:                                               ; preds = %17, %14, %1
  %19 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 1
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %34, %31, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10ControlKeyC2ERKS0_(%"class.blink::ControlKey"* nocapture, %"class.blink::ControlKey"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 1
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #15
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #15
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %28

28:                                               ; preds = %25, %10, %2
  %29 = phi %"class.WTF::StringImpl"* [ %8, %2 ], [ %8, %10 ], [ %27, %25 ]
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #15
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #15
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %28, %31, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::ControlKey"* @_ZN5blink10ControlKeyaSERKS0_(%"class.blink::ControlKey"* returned, %"class.blink::ControlKey"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #15
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 1
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %23, %27, %42
  %45 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %61

61:                                               ; preds = %60, %57, %44
  %62 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 1
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #15
  br label %78

78:                                               ; preds = %61, %74, %77
  %79 = bitcast %"class.blink::ControlKey"* %1 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::ControlKey"* %0 to i64*
  store i64 %80, i64* %81, align 8
  %82 = bitcast %"class.WTF::StringImpl"** %24 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::StringImpl"** %62 to i64*
  store i64 %83, i64* %84, align 8
  ret %"class.blink::ControlKey"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink14ControlKeyHash7GetHashERKNS_10ControlKeyE(%"class.blink::ControlKey"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::ControlKey"* %0 to i8*
  %3 = bitcast %"class.blink::ControlKey"* %0 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = getelementptr inbounds i8, i8* %2, i64 2
  %6 = bitcast i8* %5 to i16*
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %4 to i32
  %9 = add nuw nsw i32 %8, -1640531527
  %10 = shl i32 %9, 16
  %11 = zext i16 %7 to i32
  %12 = shl nuw nsw i32 %11, 11
  %13 = xor i32 %12, %9
  %14 = xor i32 %13, %10
  %15 = lshr i32 %14, 11
  %16 = getelementptr inbounds i8, i8* %2, i64 4
  %17 = bitcast i8* %16 to i16*
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds i8, i8* %2, i64 6
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %18 to i32
  %23 = add i32 %14, %22
  %24 = add i32 %23, %15
  %25 = shl i32 %24, 16
  %26 = zext i16 %21 to i32
  %27 = shl nuw nsw i32 %26, 11
  %28 = xor i32 %24, %27
  %29 = xor i32 %28, %25
  %30 = lshr i32 %29, 11
  %31 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %0, i64 0, i32 1
  %32 = bitcast %"class.WTF::StringImpl"** %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = getelementptr inbounds i8, i8* %2, i64 10
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %33 to i32
  %38 = add i32 %29, %37
  %39 = add i32 %38, %30
  %40 = shl i32 %39, 16
  %41 = zext i16 %36 to i32
  %42 = shl nuw nsw i32 %41, 11
  %43 = xor i32 %39, %42
  %44 = xor i32 %43, %40
  %45 = lshr i32 %44, 11
  %46 = getelementptr inbounds i8, i8* %2, i64 12
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = getelementptr inbounds i8, i8* %2, i64 14
  %50 = bitcast i8* %49 to i16*
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %48 to i32
  %53 = add i32 %44, %52
  %54 = add i32 %53, %45
  %55 = shl i32 %54, 16
  %56 = zext i16 %51 to i32
  %57 = shl nuw nsw i32 %56, 11
  %58 = xor i32 %54, %57
  %59 = xor i32 %58, %55
  %60 = lshr i32 %59, 11
  %61 = add i32 %60, %59
  %62 = shl i32 %61, 3
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 5
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 2
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 15
  %69 = add i32 %68, %67
  %70 = shl i32 %69, 10
  %71 = xor i32 %70, %69
  %72 = and i32 %71, 16777215
  %73 = icmp eq i32 %72, 0
  %74 = select i1 %73, i32 8388608, i32 %72
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SavedFormState"* @_ZN5blink14SavedFormState11DeserializeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERj(%"class.WTF::Vector"* dereferenceable(16), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.blink::FormControlState", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = load i32, i32* %1, align 4
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %8, %10
  br i1 %11, label %12, label %362

12:                                               ; preds = %2
  %13 = add nuw i32 %8, 1
  store i32 %13, i32* %1, align 4
  %14 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %0, i32 %8) #15
  %15 = tail call i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"* %14, i8* null) #15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %362, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = tail call noalias i8* @malloc(i64 32) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #15
  %21 = getelementptr inbounds i8, i8* %20, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast %"class.blink::FormControlState"* %4 to i8*
  %25 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  %26 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %27 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %30 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %31 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %32 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %37 = bitcast %"class.WTF::Vector"* %34 to i8**
  br label %38

38:                                               ; preds = %17, %355
  %39 = phi i32 [ %15, %17 ], [ %40, %355 ]
  %40 = add i32 %39, -1
  %41 = load i32, i32* %1, align 4
  %42 = add i32 %41, 1
  %43 = load i32, i32* %9, align 4
  %44 = icmp ult i32 %42, %43
  br i1 %44, label %45, label %360

45:                                               ; preds = %38
  store i32 %42, i32* %1, align 4
  %46 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %0, i32 %41) #15
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #15
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  call void @llvm.trap() #15
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %45, %50, %65
  %68 = load i32, i32* %1, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %1, align 4
  %70 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %0, i32 %68) #15
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %147, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #15
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  call void @llvm.trap() #15
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZN5blink16FormControlState11DeserializeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERj(%"class.blink::FormControlState"* nonnull sret %4, %"class.WTF::Vector"* dereferenceable(16) %0, i32* dereferenceable(4) %1)
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %148, label %95

95:                                               ; preds = %91
  %96 = call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %72, i1 (i16)* nonnull @_ZN5blinkL29IsNotFormControlTypeCharacterEDs, i32 0) #15
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %130, label %98

98:                                               ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  %99 = load atomic i32, i32* %75 acquire, align 4
  %100 = and i32 %99, 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %98
  %103 = load atomic i32, i32* %75 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %120

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #15
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %106
  call void @llvm.trap() #15
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %120

118:                                              ; preds = %98
  %119 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %120

120:                                              ; preds = %102, %116, %118
  %121 = phi %"class.WTF::StringImpl"* [ %119, %118 ], [ %72, %102 ], [ %72, %116 ]
  %122 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  store i64 %122, i64* %26, align 8
  %123 = call zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, i1 zeroext true) #15
  %124 = load i32, i32* %27, align 8
  %125 = icmp eq i32 %124, 2
  %126 = xor i1 %123, true
  %127 = or i1 %125, %126
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %146, label %133

130:                                              ; preds = %95
  %131 = load i32, i32* %27, align 8
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %148, label %212

133:                                              ; preds = %120
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #15
  br label %146

146:                                              ; preds = %145, %142, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  br i1 %127, label %148, label %212

147:                                              ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZN5blink16FormControlState11DeserializeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERj(%"class.blink::FormControlState"* nonnull sret %4, %"class.WTF::Vector"* dereferenceable(16) %0, i32* dereferenceable(4) %1)
  br label %148

148:                                              ; preds = %91, %130, %146, %147
  %149 = phi i1 [ true, %147 ], [ false, %146 ], [ false, %130 ], [ false, %91 ]
  %150 = load %"class.WTF::String"*, %"class.WTF::String"** %35, align 8
  %151 = icmp eq %"class.WTF::String"* %150, null
  br i1 %151, label %184, label %152, !prof !3

152:                                              ; preds = %148
  %153 = bitcast %"class.WTF::String"* %150 to i8*
  %154 = load i32, i32* %36, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %182, label %156, !prof !2

156:                                              ; preds = %152
  %157 = zext i32 %154 to i64
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %150, i64 %157
  br label %159

159:                                              ; preds = %177, %156
  %160 = phi %"class.WTF::String"* [ %178, %177 ], [ %150, %156 ]
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #15
  br label %177

177:                                              ; preds = %176, %173, %159
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %160, i64 1
  %179 = icmp eq %"class.WTF::String"* %178, %158
  br i1 %179, label %180, label %159

180:                                              ; preds = %177
  store i32 0, i32* %36, align 4
  %181 = load i8*, i8** %37, align 8
  br label %182

182:                                              ; preds = %180, %152
  %183 = phi i8* [ %181, %180 ], [ %153, %152 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %183) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %35, align 8
  br label %184

184:                                              ; preds = %148, %182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #15
  br i1 %149, label %198, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %198

198:                                              ; preds = %184, %194, %197
  br i1 %49, label %360, label %199

199:                                              ; preds = %198
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %360

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %360

212:                                              ; preds = %130, %146
  %213 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  br i1 %49, label %237, label %214

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 acquire, align 4
  %217 = and i32 %216, 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %235, label %219

219:                                              ; preds = %214
  %220 = load atomic i32, i32* %215 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %237

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #15
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !2

232:                                              ; preds = %223
  call void @llvm.trap() #15
  unreachable

233:                                              ; preds = %223
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %224, align 4
  br label %237

235:                                              ; preds = %214
  %236 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %237

237:                                              ; preds = %235, %233, %219, %212
  %238 = phi %"class.WTF::StringImpl"* [ %236, %235 ], [ %48, %219 ], [ %48, %233 ], [ null, %212 ]
  %239 = ptrtoint %"class.WTF::StringImpl"* %238 to i64
  store i64 %239, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  %240 = load atomic i32, i32* %75 acquire, align 4
  %241 = and i32 %240, 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %259, label %243

243:                                              ; preds = %237
  %244 = load atomic i32, i32* %75 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %261

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = zext i32 %249 to i33
  %251 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %250, i33 1) #15
  %252 = extractvalue { i33, i1 } %251, 1
  %253 = extractvalue { i33, i1 } %251, 0
  %254 = icmp slt i33 %253, 0
  %255 = or i1 %252, %254
  br i1 %255, label %256, label %257, !prof !2

256:                                              ; preds = %247
  call void @llvm.trap() #15
  unreachable

257:                                              ; preds = %247
  %258 = trunc i33 %253 to i32
  store i32 %258, i32* %248, align 4
  br label %261

259:                                              ; preds = %237
  %260 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %261

261:                                              ; preds = %243, %257, %259
  %262 = phi %"class.WTF::StringImpl"* [ %260, %259 ], [ %72, %243 ], [ %72, %257 ]
  %263 = ptrtoint %"class.WTF::StringImpl"* %262 to i64
  store i64 %263, i64* %32, align 8
  call void @_ZN5blink14SavedFormState18AppendControlStateERKN3WTF12AtomicStringES4_RKNS_16FormControlStateE(%"class.blink::SavedFormState"* %213, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.blink::FormControlState"* nonnull dereferenceable(24) %4)
  %264 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #15
  br label %278

278:                                              ; preds = %261, %274, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #15
  br label %294

294:                                              ; preds = %278, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  %295 = load %"class.WTF::String"*, %"class.WTF::String"** %35, align 8
  %296 = icmp eq %"class.WTF::String"* %295, null
  br i1 %296, label %329, label %297, !prof !3

297:                                              ; preds = %294
  %298 = bitcast %"class.WTF::String"* %295 to i8*
  %299 = load i32, i32* %36, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %327, label %301, !prof !2

301:                                              ; preds = %297
  %302 = zext i32 %299 to i64
  %303 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %295, i64 %302
  br label %304

304:                                              ; preds = %322, %301
  %305 = phi %"class.WTF::String"* [ %323, %322 ], [ %295, %301 ]
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %305, i64 0, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #15
  br label %322

322:                                              ; preds = %321, %318, %304
  %323 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %305, i64 1
  %324 = icmp eq %"class.WTF::String"* %323, %303
  br i1 %324, label %325, label %304

325:                                              ; preds = %322
  store i32 0, i32* %36, align 4
  %326 = load i8*, i8** %37, align 8
  br label %327

327:                                              ; preds = %297, %325
  %328 = phi i8* [ %326, %325 ], [ %298, %297 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %328) #15
  br label %329

329:                                              ; preds = %294, %327
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #15
  %330 = load atomic i32, i32* %75 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %329
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %329
  %338 = phi i32 [ %336, %335 ], [ %334, %329 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %341

341:                                              ; preds = %337, %340
  br i1 %49, label %355, label %342

342:                                              ; preds = %341
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %355

355:                                              ; preds = %341, %351, %354
  %356 = icmp eq i32 %40, 0
  br i1 %356, label %357, label %38

357:                                              ; preds = %355
  %358 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %359 = load i64, i64* %358, align 8
  store %"class.blink::SavedFormState"* null, %"class.blink::SavedFormState"** %19, align 8
  br label %360

360:                                              ; preds = %38, %211, %208, %198, %357
  %361 = phi i64 [ %359, %357 ], [ 0, %198 ], [ 0, %208 ], [ 0, %211 ], [ 0, %38 ]
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* nonnull %3, %"class.blink::SavedFormState"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %362

362:                                              ; preds = %12, %2, %360
  %363 = phi i64 [ %361, %360 ], [ 0, %2 ], [ 0, %12 ]
  %364 = inttoptr i64 %363 to %"class.blink::SavedFormState"*
  ret %"class.blink::SavedFormState"* %364
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blinkL29IsNotFormControlTypeCharacterEDs(i16 zeroext) #4 {
  %2 = icmp ne i16 %0, 45
  %3 = add i16 %0, -97
  %4 = icmp ugt i16 %3, 25
  %5 = and i1 %2, %4
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SavedFormState18AppendControlStateERKN3WTF12AtomicStringES4_RKNS_16FormControlStateE(%"class.blink::SavedFormState"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::FormControlState"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ControlKey", align 8
  %6 = alloca %"class.WTF::Deque", align 8
  %7 = bitcast %"class.blink::ControlKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %5, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %5, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %8, align 8
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %9, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #15
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %33

33:                                               ; preds = %30, %15, %4
  %34 = phi %"class.WTF::StringImpl"* [ %13, %4 ], [ %13, %15 ], [ %32, %30 ]
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #15
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #15
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %33, %36, %51
  %54 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 0, i32 0
  %55 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E4FindINS_22IdentityHashTranslatorISA_SF_S6_EES2_EENS_17HashTableIteratorIS2_S8_S9_SA_SF_SC_S6_EERKT0_(%"class.WTF::HashTable"* %54, %"class.blink::ControlKey"* nonnull dereferenceable(16) %5) #15
  %56 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %55, 0
  %57 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %61
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %56, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 1
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE9push_backIRKS2_EEvOT_(%"class.WTF::Deque"* %65, %"class.blink::FormControlState"* dereferenceable(24) %3)
  br label %93

66:                                               ; preds = %53
  %67 = bitcast %"class.WTF::Deque"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #15
  %68 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %6, i64 0, i32 1
  %70 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %6, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #15
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE9push_backIRKS2_EEvOT_(%"class.WTF::Deque"* nonnull %6, %"class.blink::FormControlState"* dereferenceable(24) %3)
  %71 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E6insertINS_17HashMapTranslatorISF_SA_S6_EERS2_RS7_EENS_18HashTableAddResultISG_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %54, %"class.blink::ControlKey"* nonnull dereferenceable(16) %5, %"class.WTF::Deque"* nonnull dereferenceable(24) %6) #15
  %72 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %71, 1
  %73 = and i8 %72, 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %66
  %76 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %71, 0
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 1
  %78 = call dereferenceable(24) %"class.WTF::Deque"* @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Deque"* %77, %"class.WTF::Deque"* nonnull dereferenceable(24) %6) #15
  br label %79

79:                                               ; preds = %66, %75
  %80 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %68, align 8
  %81 = icmp eq %"class.blink::FormControlState"* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.blink::FormControlState"* %80 to i8*
  %84 = load i32, i32* %69, align 8
  %85 = load i32, i32* %70, align 4
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* nonnull %6) #15
  %88 = bitcast %"class.WTF::Deque"* %6 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %87, %82
  %91 = phi i8* [ %89, %87 ], [ %83, %82 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %68, align 8
  br label %92

92:                                               ; preds = %79, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #15
  br label %93

93:                                               ; preds = %92, %64
  %94 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 8
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #15
  br label %112

112:                                              ; preds = %111, %108, %93
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #15
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SavedFormState11SerializeToERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SavedFormState"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::DequeConstIterator", align 8
  %6 = alloca %"class.WTF::StringImpl"*, align 8
  %7 = alloca %"class.WTF::StringImpl"*, align 8
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #15
  store i8* %12, i8** %13, align 8
  %16 = urem i32 %10, 10
  %17 = udiv i32 %10, 10
  %18 = trunc i32 %16 to i8
  %19 = or i8 %18, 48
  store i8 %19, i8* %12, align 1
  %20 = icmp ugt i32 %10, 9
  br i1 %20, label %21, label %36

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  store i8* %22, i8** %13, align 8
  %23 = urem i32 %17, 10
  %24 = trunc i32 %23 to i8
  %25 = or i8 %24, 48
  store i8 %25, i8* %22, align 2
  %26 = icmp ugt i32 %10, 99
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = udiv i32 %10, 100
  %29 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  store i8* %29, i8** %13, align 8
  %30 = urem i32 %28, 10
  %31 = trunc i32 %30 to i8
  %32 = or i8 %31, 48
  store i8 %32, i8* %29, align 1
  %33 = icmp ugt i32 %10, 999
  br i1 %33, label %38, label %47

34:                                               ; preds = %21
  %35 = ptrtoint i8* %22 to i64
  br label %50

36:                                               ; preds = %2
  %37 = ptrtoint i8* %12 to i64
  br label %50

38:                                               ; preds = %27, %38
  %39 = phi i32 [ %41, %38 ], [ %28, %27 ]
  %40 = load i8*, i8** %13, align 8
  %41 = udiv i32 %39, 10
  %42 = getelementptr inbounds i8, i8* %40, i64 -1
  store i8* %42, i8** %13, align 8
  %43 = urem i32 %41, 10
  %44 = trunc i32 %43 to i8
  %45 = or i8 %44, 48
  store i8 %45, i8* %42, align 1
  %46 = icmp ugt i32 %39, 99
  br i1 %46, label %38, label %47

47:                                               ; preds = %38, %27
  %48 = bitcast i8** %13 to i64*
  %49 = load i64, i64* %48, align 8
  br label %50

50:                                               ; preds = %47, %34, %36
  %51 = phi i64 [ %37, %36 ], [ %49, %47 ], [ %35, %34 ]
  %52 = ptrtoint i8* %15 to i64
  %53 = sub i64 %52, %51
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %14, align 8
  %55 = inttoptr i64 %51 to i8*
  %56 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %55, i32 %54) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #15
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %72, label %63, !prof !2

63:                                               ; preds = %50
  %64 = ptrtoint %"class.WTF::StringImpl"* %56 to i64
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::String"*, %"class.WTF::String"** %65, align 8
  %67 = zext i32 %59 to i64
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 %67
  %69 = bitcast %"class.WTF::String"* %68 to i64*
  store i64 %64, i64* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  %70 = load i32, i32* %58, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %58, align 4
  br label %88

72:                                               ; preds = %50
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #15
  br label %88

88:                                               ; preds = %63, %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  %89 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 0, i32 0, i32 0
  %93 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %0, i64 0, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 %96
  br i1 %91, label %125, label %98

98:                                               ; preds = %88
  %99 = icmp eq i32 %95, 0
  br i1 %99, label %114, label %100

100:                                              ; preds = %98, %111
  %101 = phi %"struct.WTF::KeyValuePair"* [ %112, %111 ], [ %93, %98 ]
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0, i32 1
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  %108 = and i1 %104, %107
  %109 = icmp eq %"class.WTF::StringImpl"* %103, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %110 = or i1 %109, %108
  br i1 %110, label %111, label %114

111:                                              ; preds = %100
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 1
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, %97
  br i1 %113, label %125, label %100

114:                                              ; preds = %100, %98
  %115 = phi %"struct.WTF::KeyValuePair"* [ %93, %98 ], [ %101, %100 ]
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %115, %97
  br i1 %116, label %125, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.WTF::DequeConstIterator"* %5 to i8*
  %119 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %5, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %5, i64 0, i32 0, i32 1
  %121 = bitcast %"class.WTF::StringImpl"** %6 to i8*
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.WTF::StringImpl"** %7 to i8*
  %124 = bitcast %"class.WTF::DequeConstIterator"* %5 to i8*
  br label %126

125:                                              ; preds = %111, %137, %154, %151, %88, %114
  ret void

126:                                              ; preds = %117, %154
  %127 = phi %"struct.WTF::KeyValuePair"* [ %115, %117 ], [ %141, %154 ]
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 16, i1 false)
  %130 = load i32, i32* %129, align 8, !noalias !4
  store %"class.WTF::Deque"* %128, %"class.WTF::Deque"** %119, align 8, !alias.scope !4
  store i32 %130, i32* %120, align 8, !alias.scope !4
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 1, i32 2
  %132 = load i32, i32* %131, align 4, !noalias !7
  %133 = icmp eq i32 %130, %132
  br i1 %133, label %137, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 0, i32 0, i32 1
  br label %156

137:                                              ; preds = %220, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #15
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 1
  %139 = icmp eq %"struct.WTF::KeyValuePair"* %138, %97
  br i1 %139, label %125, label %140

140:                                              ; preds = %137, %151
  %141 = phi %"struct.WTF::KeyValuePair"* [ %152, %151 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %141, i64 0, i32 0, i32 1
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  %148 = and i1 %144, %147
  %149 = icmp eq %"class.WTF::StringImpl"* %143, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %150 = or i1 %149, %148
  br i1 %150, label %151, label %154

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %141, i64 1
  %153 = icmp eq %"struct.WTF::KeyValuePair"* %152, %97
  br i1 %153, label %125, label %140

154:                                              ; preds = %140
  %155 = icmp eq %"struct.WTF::KeyValuePair"* %141, %97
  br i1 %155, label %125, label %126

156:                                              ; preds = %134, %220
  %157 = call dereferenceable(24) %"class.blink::FormControlState"* @_ZNK3WTF18DequeConstIteratorIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeConstIterator"* nonnull %5)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #15
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %6, align 8
  %159 = load i32, i32* %58, align 4
  %160 = load i32, i32* %60, align 8
  %161 = icmp eq i32 %159, %160
  br i1 %161, label %187, label %162, !prof !2

162:                                              ; preds = %156
  %163 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %164 = zext i32 %159 to i64
  %165 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %163, i64 %164, i32 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %165, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %166, label %184, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i33
  %176 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #15
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !2

181:                                              ; preds = %172
  call void @llvm.trap() #15
  unreachable

182:                                              ; preds = %172
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %173, align 4
  br label %184

184:                                              ; preds = %182, %167, %162
  %185 = load i32, i32* %58, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %58, align 4
  br label %189

187:                                              ; preds = %156
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPNS_10StringImplEEEvOT_(%"class.WTF::Vector"* %1, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %6) #15
  %188 = load i32, i32* %58, align 4
  br label %189

189:                                              ; preds = %184, %187
  %190 = phi i32 [ %186, %184 ], [ %188, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #15
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %7, align 8
  %192 = load i32, i32* %60, align 8
  %193 = icmp eq i32 %190, %192
  br i1 %193, label %219, label %194, !prof !2

194:                                              ; preds = %189
  %195 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %196 = zext i32 %190 to i64
  %197 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %195, i64 %196, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %197, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %198, label %216, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i33
  %208 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %207, i33 1) #15
  %209 = extractvalue { i33, i1 } %208, 1
  %210 = extractvalue { i33, i1 } %208, 0
  %211 = icmp slt i33 %210, 0
  %212 = or i1 %209, %211
  br i1 %212, label %213, label %214, !prof !2

213:                                              ; preds = %204
  call void @llvm.trap() #15
  unreachable

214:                                              ; preds = %204
  %215 = trunc i33 %210 to i32
  store i32 %215, i32* %205, align 4
  br label %216

216:                                              ; preds = %214, %199, %194
  %217 = load i32, i32* %58, align 4
  %218 = add i32 %217, 1
  store i32 %218, i32* %58, align 4
  br label %220

219:                                              ; preds = %189
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPNS_10StringImplEEEvOT_(%"class.WTF::Vector"* %1, %"class.WTF::StringImpl"** nonnull dereferenceable(8) %7) #15
  br label %220

220:                                              ; preds = %216, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #15
  call void @_ZNK5blink16FormControlState11SerializeToERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::FormControlState"* %157, %"class.WTF::Vector"* dereferenceable(16) %1)
  %221 = load i32, i32* %120, align 8
  %222 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %119, align 8
  %223 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %222, i64 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i32, i32* %223, align 8
  %225 = add i32 %224, -1
  %226 = icmp eq i32 %221, %225
  %227 = add i32 %221, 1
  %228 = select i1 %226, i32 0, i32 %227
  store i32 %228, i32* %120, align 8
  %229 = icmp eq i32 %228, %132
  br i1 %229, label %137, label %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::FormControlState"* @_ZNK3WTF18DequeConstIteratorIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeConstIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %17, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %26 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %28, i64 %30
  ret %"class.blink::FormControlState"* %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE9push_backIRKS2_EEvOT_(%"class.WTF::Deque"*, %"class.blink::FormControlState"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  br i1 %5, label %11, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, 1
  %10 = icmp eq i32 %9, %4
  br i1 %10, label %20, label %22

11:                                               ; preds = %2
  %12 = icmp eq i32 %7, 0
  %13 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  br i1 %12, label %18, label %15

15:                                               ; preds = %11
  %16 = add i32 %14, -1
  %17 = icmp eq i32 %7, %16
  br i1 %17, label %20, label %22

18:                                               ; preds = %11
  %19 = icmp eq i32 %14, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %18, %15, %8
  tail call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %0) #15
  %21 = load i32, i32* %6, align 4
  br label %22

22:                                               ; preds = %8, %15, %18, %20
  %23 = phi i32 [ %7, %8 ], [ %7, %15 ], [ 0, %18 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %24, align 8
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, -1
  %30 = icmp eq i32 %23, %29
  %31 = add i32 %23, 1
  %32 = select i1 %30, i32 0, i32 %31
  store i32 %32, i32* %6, align 4
  %33 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %25, i64 %26, i32 0
  %34 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %25, i64 %26, i32 1
  %37 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %25, i64 %26, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %40, align 8
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %22
  %43 = zext i32 %38 to i64
  %44 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %43) #15
  %45 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %44, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %36 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = lshr i64 %44, 3
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %40, align 8
  %50 = bitcast i8* %45 to %"class.WTF::String"*
  br label %51

51:                                               ; preds = %42, %22
  %52 = phi %"class.WTF::String"* [ null, %22 ], [ %50, %42 ]
  %53 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %25, i64 %26, i32 1, i32 0, i32 0, i32 2
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::String"*, %"class.WTF::String"** %56, align 8
  %58 = load i32, i32* %53, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 %59
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %90, label %62

62:                                               ; preds = %51, %86
  %63 = phi %"class.WTF::String"* [ %87, %86 ], [ %52, %51 ]
  %64 = phi %"class.WTF::String"* [ %88, %86 ], [ %57, %51 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %67, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #15
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %74
  tail call void @llvm.trap() #15
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %84, %69, %62
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 1
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 1
  %89 = icmp eq %"class.WTF::String"* %88, %60
  br i1 %89, label %90, label %62

90:                                               ; preds = %86, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SavedFormState16TakeControlStateERKN3WTF12AtomicStringES4_(%"class.blink::FormControlState"* noalias nocapture sret, %"class.blink::SavedFormState"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ControlKey", align 8
  %6 = alloca %"class.blink::FormControlState", align 8
  %7 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::Vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  br label %225

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::ControlKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %5, i64 0, i32 1
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %22, label %41, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %41

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #15
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %28
  tail call void @llvm.trap() #15
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  br label %41

41:                                               ; preds = %38, %23, %14
  %42 = phi %"class.WTF::StringImpl"* [ %19, %14 ], [ %19, %23 ], [ %40, %38 ]
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #15
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %49
  tail call void @llvm.trap() #15
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %41, %44, %59
  %62 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 0, i32 0
  %63 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E4FindINS_22IdentityHashTranslatorISA_SF_S6_EES2_EENS_17HashTableIteratorIS2_S8_S9_SA_SF_SC_S6_EERKT0_(%"class.WTF::HashTable"* %62, %"class.blink::ControlKey"* nonnull dereferenceable(16) %5) #15
  %64 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %63, 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %79, %76, %61
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #15
  br label %96

96:                                               ; preds = %80, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  %97 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 0, i32 0, i32 0
  %98 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %101
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %64, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %107 = bitcast %"class.WTF::Vector"* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 16, i1 false) #15
  br label %225

108:                                              ; preds = %96
  %109 = bitcast %"class.blink::FormControlState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 24, i1 false)
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 1
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE9TakeFirstEv(%"class.blink::FormControlState"* nonnull sret %6, %"class.WTF::Deque"* %110)
  %111 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, -1
  store i32 %113, i32* %111, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 1, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 1, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %115, %117
  br i1 %118, label %119, label %126

119:                                              ; preds = %108
  %120 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %97, align 8
  %121 = load i32, i32* %99, align 8
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %120, i64 %122
  %124 = icmp eq %"struct.WTF::KeyValuePair"* %123, %64
  br i1 %124, label %126, label %125

125:                                              ; preds = %119
  call void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E5eraseEPKS8_(%"class.WTF::HashTable"* %62, %"struct.WTF::KeyValuePair"* %64) #15
  br label %126

126:                                              ; preds = %125, %119, %108
  %127 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  %128 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  store i32 %129, i32* %127, align 8
  %130 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %131 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %130, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %133, align 8
  %134 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %134, align 8
  %135 = icmp eq i32 %132, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %126
  %137 = zext i32 %132 to i64
  %138 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %137) #15
  %139 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %138, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %140 = ptrtoint i8* %139 to i64
  %141 = bitcast %"class.WTF::Vector"* %130 to i64*
  store atomic i64 %140, i64* %141 monotonic, align 8
  %142 = lshr i64 %138, 3
  %143 = trunc i64 %142 to i32
  store i32 %143, i32* %134, align 8
  %144 = bitcast i8* %139 to %"class.WTF::String"*
  br label %145

145:                                              ; preds = %136, %126
  %146 = phi %"class.WTF::String"* [ null, %126 ], [ %144, %136 ]
  %147 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %148, i32* %149, align 4
  %150 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::String"*, %"class.WTF::String"** %150, align 8
  %152 = zext i32 %148 to i64
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %151, i64 %152
  %154 = icmp eq i32 %148, 0
  br i1 %154, label %186, label %155

155:                                              ; preds = %145, %179
  %156 = phi %"class.WTF::String"* [ %180, %179 ], [ %146, %145 ]
  %157 = phi %"class.WTF::String"* [ %181, %179 ], [ %151, %145 ]
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %156, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %160, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %179

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i33
  %171 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #15
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !2

176:                                              ; preds = %167
  call void @llvm.trap() #15
  unreachable

177:                                              ; preds = %167
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %168, align 4
  br label %179

179:                                              ; preds = %177, %162, %155
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %156, i64 1
  %181 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 1
  %182 = icmp eq %"class.WTF::String"* %181, %153
  br i1 %182, label %183, label %155

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::String"*, %"class.WTF::String"** %184, align 8
  br label %186

186:                                              ; preds = %183, %145
  %187 = phi %"class.WTF::String"* [ %185, %183 ], [ %151, %145 ]
  %188 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1
  %189 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = icmp eq %"class.WTF::String"* %187, null
  br i1 %190, label %224, label %191, !prof !3

191:                                              ; preds = %186
  %192 = bitcast %"class.WTF::String"* %187 to i8*
  %193 = load i32, i32* %147, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %222, label %195, !prof !2

195:                                              ; preds = %191
  %196 = zext i32 %193 to i64
  %197 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %187, i64 %196
  br label %198

198:                                              ; preds = %216, %195
  %199 = phi %"class.WTF::String"* [ %217, %216 ], [ %187, %195 ]
  %200 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #15
  br label %216

216:                                              ; preds = %215, %212, %198
  %217 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 1
  %218 = icmp eq %"class.WTF::String"* %217, %197
  br i1 %218, label %219, label %198

219:                                              ; preds = %216
  store i32 0, i32* %147, align 4
  %220 = bitcast %"class.WTF::Vector"* %188 to i8**
  %221 = load i8*, i8** %220, align 8
  br label %222

222:                                              ; preds = %219, %191
  %223 = phi i8* [ %221, %219 ], [ %192, %191 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %223) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %189, align 8
  br label %224

224:                                              ; preds = %186, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #15
  br label %225

225:                                              ; preds = %104, %224, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE9TakeFirstEv(%"class.blink::FormControlState"* noalias sret, %"class.WTF::Deque"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::FormControlState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %8, i32 0
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %8, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %2
  %19 = zext i32 %14 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %19) #15
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector"* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  %26 = bitcast i8* %21 to %"class.WTF::String"*
  br label %27

27:                                               ; preds = %18, %2
  %28 = phi %"class.WTF::String"* [ null, %2 ], [ %26, %18 ]
  %29 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %8, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %8, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = zext i32 %30 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 %34
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %65, label %37

37:                                               ; preds = %27, %61
  %38 = phi %"class.WTF::String"* [ %62, %61 ], [ %28, %27 ]
  %39 = phi %"class.WTF::String"* [ %63, %61 ], [ %33, %27 ]
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #15
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %49
  tail call void @llvm.trap() #15
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %59, %44, %37
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 1
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 1
  %64 = icmp eq %"class.WTF::String"* %63, %35
  br i1 %64, label %65, label %37

65:                                               ; preds = %61, %27
  %66 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %4, align 8
  %67 = load i32, i32* %6, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %66, i64 %68
  %70 = add i32 %67, 1
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %66, i64 %71
  br label %73

73:                                               ; preds = %113, %65
  %74 = phi %"class.blink::FormControlState"* [ %114, %113 ], [ %69, %65 ]
  %75 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %74, i64 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %76, align 8
  %78 = icmp eq %"class.WTF::String"* %77, null
  br i1 %78, label %113, label %79, !prof !3

79:                                               ; preds = %73
  %80 = bitcast %"class.WTF::String"* %77 to i8*
  %81 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %74, i64 0, i32 1, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %111, label %84, !prof !2

84:                                               ; preds = %79
  %85 = zext i32 %82 to i64
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 %85
  br label %87

87:                                               ; preds = %105, %84
  %88 = phi %"class.WTF::String"* [ %106, %105 ], [ %77, %84 ]
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #15
  br label %105

105:                                              ; preds = %104, %101, %87
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 1
  %107 = icmp eq %"class.WTF::String"* %106, %86
  br i1 %107, label %108, label %87

108:                                              ; preds = %105
  store i32 0, i32* %81, align 4
  %109 = bitcast %"class.WTF::Vector"* %75 to i8**
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %108, %79
  %112 = phi i8* [ %110, %108 ], [ %80, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %112) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %76, align 8
  br label %113

113:                                              ; preds = %111, %73
  %114 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %74, i64 1
  %115 = icmp eq %"class.blink::FormControlState"* %114, %72
  br i1 %115, label %116, label %73

116:                                              ; preds = %113
  %117 = load i32, i32* %6, align 8
  %118 = add i32 %117, 1
  %119 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = add i32 %120, -1
  %122 = icmp eq i32 %117, %121
  %123 = select i1 %122, i32 0, i32 %118
  store i32 %123, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SavedFormState22GetReferencedFilePathsEv(%"class.WTF::Vector"* noalias sret, %"class.blink::SavedFormState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::DequeConstIterator", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #15
  %6 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  br i1 %8, label %43, label %15

15:                                               ; preds = %2
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15, %28
  %18 = phi %"struct.WTF::KeyValuePair"* [ %29, %28 ], [ %10, %15 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 1
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  %25 = and i1 %21, %24
  %26 = icmp eq %"class.WTF::StringImpl"* %20, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %27 = or i1 %26, %25
  br i1 %27, label %28, label %31

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %14
  br i1 %30, label %43, label %17

31:                                               ; preds = %17, %15
  %32 = phi %"struct.WTF::KeyValuePair"* [ %10, %15 ], [ %18, %17 ]
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, %14
  br i1 %33, label %43, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.WTF::DequeConstIterator"* %3 to i8*
  %36 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %3, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %3, i64 0, i32 0, i32 1
  %38 = bitcast %"class.WTF::Vector"* %4 to i8*
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector"* %4 to i8**
  %42 = bitcast %"class.WTF::DequeConstIterator"* %3 to i8*
  br label %44

43:                                               ; preds = %28, %105, %122, %119, %2, %31
  ret void

44:                                               ; preds = %34, %122
  %45 = phi %"struct.WTF::KeyValuePair"* [ %32, %34 ], [ %109, %122 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 1
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKhj(%"class.WTF::StringImpl"* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 4) #15
  br i1 %48, label %49, label %105

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #15
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  %52 = load i32, i32* %51, align 8, !noalias !10
  store %"class.WTF::Deque"* %50, %"class.WTF::Deque"** %36, align 8, !alias.scope !10
  store i32 %52, i32* %37, align 8, !alias.scope !10
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 2
  %54 = load i32, i32* %53, align 4, !noalias !13
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %95, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #15
  br label %105

57:                                               ; preds = %49, %95
  %58 = call dereferenceable(24) %"class.blink::FormControlState"* @_ZNK3WTF18DequeConstIteratorIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeConstIterator"* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #15
  call void @_ZN5blink16HTMLInputElement34FilesFromFileInputFormControlStateERKNS_16FormControlStateE(%"class.WTF::Vector"* nonnull sret %4, %"class.blink::FormControlState"* dereferenceable(24) %58) #15
  %59 = load %"class.WTF::String"*, %"class.WTF::String"** %39, align 8
  %60 = load i32, i32* %40, align 4
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector"* %0, %"class.WTF::String"* %59, i32 %60) #15
  %61 = load %"class.WTF::String"*, %"class.WTF::String"** %39, align 8
  %62 = icmp eq %"class.WTF::String"* %61, null
  br i1 %62, label %95, label %63, !prof !3

63:                                               ; preds = %57
  %64 = bitcast %"class.WTF::String"* %61 to i8*
  %65 = load i32, i32* %40, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %93, label %67, !prof !2

67:                                               ; preds = %63
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 %68
  br label %70

70:                                               ; preds = %88, %67
  %71 = phi %"class.WTF::String"* [ %89, %88 ], [ %61, %67 ]
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #15
  br label %88

88:                                               ; preds = %87, %84, %70
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 1
  %90 = icmp eq %"class.WTF::String"* %89, %69
  br i1 %90, label %91, label %70

91:                                               ; preds = %88
  store i32 0, i32* %40, align 4
  %92 = load i8*, i8** %41, align 8
  br label %93

93:                                               ; preds = %91, %63
  %94 = phi i8* [ %92, %91 ], [ %64, %63 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %39, align 8
  br label %95

95:                                               ; preds = %57, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #15
  %96 = load i32, i32* %37, align 8
  %97 = load %"class.WTF::Deque"*, %"class.WTF::Deque"** %36, align 8
  %98 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %97, i64 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, -1
  %101 = icmp eq i32 %96, %100
  %102 = add i32 %96, 1
  %103 = select i1 %101, i32 0, i32 %102
  store i32 %103, i32* %37, align 8
  %104 = icmp eq i32 %103, %54
  br i1 %104, label %56, label %57

105:                                              ; preds = %44, %56
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 1
  %107 = icmp eq %"struct.WTF::KeyValuePair"* %106, %14
  br i1 %107, label %43, label %108

108:                                              ; preds = %105, %119
  %109 = phi %"struct.WTF::KeyValuePair"* [ %120, %119 ], [ %106, %105 ]
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %109, i64 0, i32 0, i32 1
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  %116 = and i1 %112, %115
  %117 = icmp eq %"class.WTF::StringImpl"* %111, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %118 = or i1 %117, %116
  br i1 %118, label %119, label %122

119:                                              ; preds = %108
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %109, i64 1
  %121 = icmp eq %"struct.WTF::KeyValuePair"* %120, %14
  br i1 %121, label %43, label %108

122:                                              ; preds = %108
  %123 = icmp eq %"struct.WTF::KeyValuePair"* %109, %14
  br i1 %123, label %43, label %44
}

declare void @_ZN5blink16HTMLInputElement34FilesFromFileInputFormControlStateERKNS_16FormControlStateE(%"class.WTF::Vector"* sret, %"class.blink::FormControlState"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink13FormSignatureERKNS_15HTMLFormElementE(%"class.blink::HTMLFormElement"* dereferenceable(200)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 112, i1 false)
  %9 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kActionAttrE, align 8
  call void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::Element"* %9, %"class.blink::QualifiedName"* dereferenceable(8) %10) #15
  %11 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %4) #15
  br i1 %11, label %31, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  call void @_ZN5blink4KURL8SetQueryERKN3WTF6StringE(%"class.blink::KURL"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #15
  br label %30

30:                                               ; preds = %12, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  br label %31

31:                                               ; preds = %30, %1
  %32 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 48, i1 false)
  %33 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %35 = bitcast %union.anon* %34 to i8*
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %37, align 4
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %38, align 1
  %39 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %4) #15
  br i1 %39, label %59, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #15
  %42 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 4, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %48 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %47, i64* %48, align 8
  br label %56

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 1
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %55, align 8
  br label %56

56:                                               ; preds = %45, %49
  %57 = phi i32 [ %52, %49 ], [ 0, %45 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #15
  br label %59

59:                                               ; preds = %56, %31
  %60 = call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"* %0) #15
  %61 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #15
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %63 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 2, i32* %65, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #15
  %66 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %60, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %206, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %60, i64 0, i32 0
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = bitcast %"class.WTF::StringView"* %3 to i8*
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %78

78:                                               ; preds = %199, %69
  %79 = phi i32 [ 0, %69 ], [ %200, %199 ]
  %80 = phi i32 [ 0, %69 ], [ %201, %199 ]
  %81 = call dereferenceable(8) %"class.blink::Member.41"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.38"* %70, i32 %80) #15
  %82 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %82, align 8
  %84 = bitcast %"class.blink::ListedElement"* %83 to i1 (%"class.blink::ListedElement"*)***
  %85 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %85, i64 25
  %87 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %86, align 8
  %88 = call zeroext i1 %87(%"class.blink::ListedElement"* %83) #15
  br i1 %88, label %89, label %199

89:                                               ; preds = %78
  %90 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %84, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %90, i64 5
  %92 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %91, align 8
  %93 = call zeroext i1 %92(%"class.blink::ListedElement"* %83) #15
  br i1 %93, label %199, label %94

94:                                               ; preds = %89
  %95 = call dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* %83) #15
  %96 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %95, i64 0, i32 0, i32 3, i32 0, i32 0
  %97 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %96, align 8
  %98 = icmp eq %"class.blink::ElementData"* %97, null
  br i1 %98, label %148, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %97, i64 0, i32 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %111, label %104

104:                                              ; preds = %99
  %105 = bitcast %"class.blink::ElementData"* %97 to %"class.blink::UniqueElementData"*
  %106 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %97, i64 1, i32 1
  %107 = bitcast %"class.blink::Member.21"* %106 to %"class.blink::Attribute"**
  %108 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %105, i64 0, i32 2, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  br label %116

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %97, i64 1
  %113 = bitcast %"class.blink::ElementData"* %112 to %"class.blink::Attribute"*
  %114 = lshr i32 %101, 1
  %115 = and i32 %114, 268435455
  br label %116

116:                                              ; preds = %111, %104
  %117 = phi %"class.blink::Attribute"* [ %113, %111 ], [ %108, %104 ]
  %118 = phi i32 [ %115, %111 ], [ %110, %104 ]
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %117, i64 %119
  %121 = icmp eq i32 %118, 0
  br i1 %121, label %148, label %122

122:                                              ; preds = %116
  %123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 3, i32 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %123, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %126

126:                                              ; preds = %142, %122
  %127 = phi %"class.blink::Attribute"* [ %117, %122 ], [ %143, %142 ]
  %128 = phi i32 [ 0, %122 ], [ %144, %142 ]
  %129 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %127, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %129, align 8
  %131 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %130, %123
  br i1 %131, label %146, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %134, %135
  br i1 %136, label %137, label %142

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 4, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %139, %140
  br i1 %141, label %146, label %142

142:                                              ; preds = %137, %132
  %143 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %127, i64 1
  %144 = add i32 %128, 1
  %145 = icmp eq %"class.blink::Attribute"* %143, %120
  br i1 %145, label %148, label %126

146:                                              ; preds = %137, %126
  %147 = icmp eq i32 %128, -1
  br i1 %147, label %148, label %199

148:                                              ; preds = %142, %146, %116, %94
  %149 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %83, i64 0, i32 4, i32 0, i32 0
  %150 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %149, align 8
  %151 = icmp eq %"class.blink::HTMLFormElement"* %150, null
  br i1 %151, label %199, label %152

152:                                              ; preds = %148
  %153 = bitcast %"class.blink::ListedElement"* %83 to %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)***
  %154 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*** %153, align 8
  %155 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %154, i64 7
  %156 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %155, align 8
  %157 = call dereferenceable(8) %"class.WTF::AtomicString"* %156(%"class.blink::ListedElement"* %83) #15
  %158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %199, label %161

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %178

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i33
  %170 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #15
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !2

175:                                              ; preds = %166
  call void @llvm.trap() #15
  unreachable

176:                                              ; preds = %166
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %167, align 4
  br label %178

178:                                              ; preds = %176, %161
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %178
  %183 = add i32 %79, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #15
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %74, align 8
  %184 = load i32, i32* %179, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 1
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %76, align 8
  store i32 %184, i32* %77, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #15
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 32) #15
  br label %186

186:                                              ; preds = %182, %178
  %187 = phi i32 [ %79, %178 ], [ %183, %182 ]
  %188 = load atomic i32, i32* %162 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #15
  br label %199

199:                                              ; preds = %198, %195, %152, %148, %146, %89, %78
  %200 = phi i32 [ %79, %78 ], [ %79, %89 ], [ %79, %148 ], [ %187, %195 ], [ %187, %198 ], [ %79, %152 ], [ %79, %146 ]
  %201 = add nuw i32 %80, 1
  %202 = load i32, i32* %66, align 4
  %203 = icmp ult i32 %201, %202
  %204 = icmp ult i32 %200, 2
  %205 = and i1 %204, %203
  br i1 %205, label %78, label %206

206:                                              ; preds = %199, %59
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 93) #15
  %207 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #15
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #15
  br label %223

223:                                              ; preds = %206, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #15
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #15
  ret %"class.WTF::StringImpl"* %207
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink7Element15GetURLAttributeERKNS_13QualifiedNameE(%"class.blink::KURL"* sret, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL8SetQueryERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !16
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #15
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #15
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #15
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementE(%"class.blink::FormKeyGenerator"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.blink::HTMLFormElement"*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = bitcast %"class.blink::HTMLFormElement"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  store %"class.blink::HTMLFormElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLFormElement"*), %"class.blink::HTMLFormElement"** %4, align 8
  %12 = tail call dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* %1) #15
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %12, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %14, align 8
  %16 = icmp eq %"class.blink::ElementData"* %15, null
  br i1 %16, label %68, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::ElementData"* %15 to %"class.blink::UniqueElementData"*
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1, i32 1
  %25 = bitcast %"class.blink::Member.21"* %24 to %"class.blink::Attribute"**
  %26 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %23, i64 0, i32 2, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  br label %34

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1
  %31 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::Attribute"*
  %32 = lshr i32 %19, 1
  %33 = and i32 %32, 268435455
  br label %34

34:                                               ; preds = %29, %22
  %35 = phi %"class.blink::Attribute"* [ %31, %29 ], [ %26, %22 ]
  %36 = phi i32 [ %33, %29 ], [ %28, %22 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %61, %40
  %46 = phi %"class.blink::Attribute"* [ %35, %40 ], [ %62, %61 ]
  %47 = phi i32 [ 0, %40 ], [ %63, %61 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %42
  br i1 %50, label %65, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %58, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %56, %51
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 1
  %63 = add i32 %47, 1
  %64 = icmp eq %"class.blink::Attribute"* %62, %38
  br i1 %64, label %68, label %45

65:                                               ; preds = %56, %45
  %66 = icmp eq i32 %47, -1
  br i1 %66, label %68, label %67

67:                                               ; preds = %65
  store %"class.blink::HTMLFormElement"* null, %"class.blink::HTMLFormElement"** %4, align 8
  br label %72

68:                                               ; preds = %61, %2, %34, %65
  %69 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %1, i64 0, i32 4, i32 0, i32 0
  %70 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %69, align 8
  store %"class.blink::HTMLFormElement"* %70, %"class.blink::HTMLFormElement"** %4, align 8
  %71 = icmp eq %"class.blink::HTMLFormElement"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %67, %68
  %73 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner to i8*) acquire, align 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %231, !prof !17

75:                                               ; preds = %72
  %76 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner) #15
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %231, label %78

78:                                               ; preds = %75
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i64 8) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner) #15
  br label %231

79:                                               ; preds = %68
  %80 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = tail call { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.406"* %80, %"class.blink::HTMLFormElement"* nonnull %70) #15
  %82 = extractvalue { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } %81, 0
  %83 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %84, i64 %87
  %89 = icmp eq %"struct.WTF::KeyValuePair.408"* %82, %88
  br i1 %89, label %90, label %228

90:                                               ; preds = %79
  %91 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #15
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %93 = tail call %"class.WTF::StringImpl"* @_ZN5blink13FormSignatureERKNS_15HTMLFormElementE(%"class.blink::HTMLFormElement"* nonnull dereferenceable(200) %70)
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %92, align 8
  %94 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #15
  store i32 0, i32* %6, align 4
  %95 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %0, i64 0, i32 1, i32 0
  %96 = call { %"struct.WTF::KeyValuePair.413"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_iEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.410"* %95, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6) #15
  %97 = extractvalue { %"struct.WTF::KeyValuePair.413"*, i8 } %96, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #15
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 8
  %101 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %101) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 48, i1 false)
  %102 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8
  %103 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %104 = bitcast %union.anon* %103 to i8*
  store i8 0, i8* %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %106, align 4
  %107 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %107, align 1
  %108 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #15
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %111, label %115

111:                                              ; preds = %90
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %112, align 8
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %114 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %113, i64* %114, align 8
  br label %122

115:                                              ; preds = %90
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 1
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %121 = bitcast i8** %120 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %121, align 8
  br label %122

122:                                              ; preds = %111, %115
  %123 = phi i32 [ %118, %115 ], [ 0, %111 ]
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %123, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #15
  %125 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #15
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %127 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 2, i32* %129, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #15
  %130 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #15
  %131 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %132 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %133 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %134 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 32, i1 false) #15
  store i8* %131, i8** %132, align 8
  %135 = urem i32 %99, 10
  %136 = udiv i32 %99, 10
  %137 = trunc i32 %135 to i8
  %138 = or i8 %137, 48
  store i8 %138, i8* %131, align 1
  %139 = icmp ugt i32 %99, 9
  br i1 %139, label %140, label %155

140:                                              ; preds = %122
  %141 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  store i8* %141, i8** %132, align 8
  %142 = urem i32 %136, 10
  %143 = trunc i32 %142 to i8
  %144 = or i8 %143, 48
  store i8 %144, i8* %141, align 2
  %145 = icmp ugt i32 %99, 99
  br i1 %145, label %146, label %153

146:                                              ; preds = %140
  %147 = udiv i32 %99, 100
  %148 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  store i8* %148, i8** %132, align 8
  %149 = urem i32 %147, 10
  %150 = trunc i32 %149 to i8
  %151 = or i8 %150, 48
  store i8 %151, i8* %148, align 1
  %152 = icmp ugt i32 %99, 999
  br i1 %152, label %157, label %166

153:                                              ; preds = %140
  %154 = ptrtoint i8* %141 to i64
  br label %169

155:                                              ; preds = %122
  %156 = ptrtoint i8* %131 to i64
  br label %169

157:                                              ; preds = %146, %157
  %158 = phi i32 [ %160, %157 ], [ %147, %146 ]
  %159 = load i8*, i8** %132, align 8
  %160 = udiv i32 %158, 10
  %161 = getelementptr inbounds i8, i8* %159, i64 -1
  store i8* %161, i8** %132, align 8
  %162 = urem i32 %160, 10
  %163 = trunc i32 %162 to i8
  %164 = or i8 %163, 48
  store i8 %164, i8* %161, align 1
  %165 = icmp ugt i32 %158, 99
  br i1 %165, label %157, label %166

166:                                              ; preds = %157, %146
  %167 = bitcast i8** %132 to i64*
  %168 = load i64, i64* %167, align 8
  br label %169

169:                                              ; preds = %166, %153, %155
  %170 = phi i64 [ %156, %155 ], [ %168, %166 ], [ %154, %153 ]
  %171 = ptrtoint i8* %134 to i64
  %172 = sub i64 %171, %170
  %173 = trunc i64 %172 to i32
  store i32 %173, i32* %133, align 8
  %174 = inttoptr i64 %170 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* nonnull %7, i8* %174, i32 %173) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #15
  %175 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #15
  %176 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"* nonnull %7) #15
  %177 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %177, align 8
  %178 = call { %"struct.WTF::KeyValuePair.408"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.406"* %80, %"class.blink::HTMLFormElement"** nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #15
  %179 = extractvalue { %"struct.WTF::KeyValuePair.408"*, i8 } %178, 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %169
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #15
  br label %195

195:                                              ; preds = %169, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #15
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #15
  br label %211

211:                                              ; preds = %195, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %101) #15
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #15
  br label %227

227:                                              ; preds = %211, %223, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #15
  br label %228

228:                                              ; preds = %79, %227
  %229 = phi %"struct.WTF::KeyValuePair.408"* [ %179, %227 ], [ %82, %79 ]
  %230 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %229, i64 0, i32 1
  br label %231

231:                                              ; preds = %72, %78, %75, %228
  %232 = phi %"class.WTF::AtomicString"* [ %230, %228 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner to %"class.WTF::AtomicString"*), %75 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner to %"class.WTF::AtomicString"*), %78 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementEE23s_form_key_for_no_owner to %"class.WTF::AtomicString"*), %72 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  ret %"class.WTF::AtomicString"* %232
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FormKeyGenerator14WillDeleteFormEPNS_15HTMLFormElementE(%"class.blink::FormKeyGenerator"*, %"class.blink::HTMLFormElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.406"* %3, %"class.blink::HTMLFormElement"* %1) #15
  %5 = extractvalue { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } %4, 0
  %6 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %7, i64 %10
  %12 = icmp eq %"struct.WTF::KeyValuePair.408"* %11, %5
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.406"* %3, %"struct.WTF::KeyValuePair.408"* %5) #15
  br label %14

14:                                               ; preds = %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DocumentStateC2ERNS_8DocumentE(%"class.blink::DocumentState"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %6 = bitcast %"class.blink::HeapVector.386"* %4 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 64, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast i32* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 516, i1 false) #15
  %10 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 2
  store i8 1, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13DocumentState5TraceEPNS_7VisitorE(%"class.blink::DocumentState"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::DocumentState"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #15
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.389"* %13, %"class.blink::Visitor"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DocumentState21InvalidateControlListEv(%"class.blink::DocumentState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !16
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.blink::Member.41"** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = zext i32 %7 to i64
  %12 = shl nuw nsw i64 %11, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %10, i64 %12) #15
  store i32 0, i32* %6, align 4
  store i8 1, i8* %2, align 8
  br label %13

13:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(528) %"class.blink::HeapVector.386"* @_ZN5blink13DocumentState14GetControlListEv(%"class.blink::DocumentState"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ListedElement"*, align 8
  %3 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !16
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %114, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 0, i32 0
  %10 = icmp eq %"class.blink::Document"* %8, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %49, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to %"class.blink::Node"**
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = bitcast %"class.blink::Node"* %19 to %"class.blink::Element"*
  %21 = icmp eq %"class.blink::Node"* %19, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 12
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %39, label %32

27:                                               ; preds = %32
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %22, %27
  %33 = phi %"class.blink::Node"* [ %35, %27 ], [ %19, %22 ]
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 5, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %49, label %27

37:                                               ; preds = %27
  %38 = bitcast %"class.blink::Node"* %35 to %"class.blink::Element"*
  br label %39

39:                                               ; preds = %16, %22, %37
  %40 = phi %"class.blink::Element"* [ %20, %16 ], [ %20, %22 ], [ %38, %37 ]
  %41 = icmp eq %"class.blink::Element"* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::ListedElement"** %2 to i8*
  %44 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.blink::ListedElement"** %2 to i64*
  br label %50

49:                                               ; preds = %32, %83, %90, %109, %101, %11, %6, %39
  store i8 0, i8* %3, align 8
  br label %114

50:                                               ; preds = %112, %42
  %51 = phi %"class.blink::Element"* [ %40, %42 ], [ %113, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #15
  store %"class.blink::ListedElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::ListedElement"*), %"class.blink::ListedElement"** %2, align 8
  %52 = call %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %51) #15
  store %"class.blink::ListedElement"* %52, %"class.blink::ListedElement"** %2, align 8
  %53 = icmp eq %"class.blink::ListedElement"* %52, null
  br i1 %53, label %79, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::ListedElement"* %52 to i1 (%"class.blink::ListedElement"*)***
  %56 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %55, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %56, i64 25
  %58 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %57, align 8
  %59 = call zeroext i1 %58(%"class.blink::ListedElement"* nonnull %52) #15
  br i1 %59, label %60, label %79

60:                                               ; preds = %54
  %61 = load i32, i32* %45, align 4
  %62 = load i32, i32* %46, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %78, label %64, !prof !2

64:                                               ; preds = %60
  %65 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %47, align 8
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %65, i64 %66
  %68 = load i64, i64* %48, align 8
  %69 = bitcast %"class.blink::Member.41"* %67 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %64
  %73 = inttoptr i64 %68 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #15
  br label %75

75:                                               ; preds = %72, %64
  %76 = load i32, i32* %45, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %45, align 4
  br label %79

78:                                               ; preds = %60
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.389"* %44, %"class.blink::ListedElement"** nonnull dereferenceable(8) %2) #15
  br label %79

79:                                               ; preds = %78, %75, %50, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #15
  %80 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %51, i64 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %80, align 8
  %82 = icmp eq %"class.blink::Node"* %81, null
  br i1 %82, label %83, label %93

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %51, i64 0, i32 0, i32 0
  %85 = icmp eq %"class.blink::Node"* %84, %9
  br i1 %85, label %49, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %51, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  %91 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %84, %"class.blink::Node"* %9) #15
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %49, label %93

93:                                               ; preds = %90, %86, %79
  %94 = phi %"class.blink::Node"* [ %81, %79 ], [ %88, %86 ], [ %91, %90 ]
  br label %95

95:                                               ; preds = %93, %109
  %96 = phi %"class.blink::Node"* [ %110, %109 ], [ %94, %93 ]
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 12
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %112, label %101

101:                                              ; preds = %95
  %102 = icmp eq %"class.blink::Node"* %96, %9
  br i1 %102, label %49, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 5, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %96, %"class.blink::Node"* %9) #15
  br label %109

109:                                              ; preds = %107, %103
  %110 = phi %"class.blink::Node"* [ %108, %107 ], [ %105, %103 ]
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %49, label %95

112:                                              ; preds = %95
  %113 = bitcast %"class.blink::Node"* %96 to %"class.blink::Element"*
  br label %50

114:                                              ; preds = %1, %49
  %115 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %0, i64 0, i32 1
  ret %"class.blink::HeapVector.386"* %115
}

declare %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13DocumentState13ToStateVectorEv(%"class.WTF::Vector"* noalias sret, %"class.blink::DocumentState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.621", align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.blink::FormControlState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16FormKeyGeneratorEEEPhm(i64 48) #15
  %9 = bitcast i8* %8 to %"class.blink::FormKeyGenerator"*
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #15
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = bitcast %"class.std::__1::unique_ptr.621"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.621", %"class.std::__1::unique_ptr.621"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([371 x i8], [371 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_12AtomicStringENSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEENS_16AtomicStringHashENS_10HashTraitsIS2_EENSB_IS9_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #15
  %17 = bitcast %"class.std::__1::unique_ptr.621"* %3 to i8**
  store i8* %16, i8** %17, align 8
  %18 = tail call dereferenceable(528) %"class.blink::HeapVector.386"* @_ZN5blink13DocumentState14GetControlListEv(%"class.blink::DocumentState"* %1)
  %19 = getelementptr inbounds %"class.blink::HeapVector.386", %"class.blink::HeapVector.386"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HeapVector.386", %"class.blink::HeapVector.386"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %2
  %27 = bitcast i8** %4 to i8*
  %28 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.blink::FormControlState"* %6 to i8*
  %31 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %34 = bitcast %"class.WTF::Vector"* %31 to i8**
  br label %136

35:                                               ; preds = %234, %2
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %39 = bitcast %"class.WTF::Vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #15
  %40 = call dereferenceable(528) %"class.blink::HeapVector.386"* @_ZN5blink13DocumentState14GetControlListEv(%"class.blink::DocumentState"* %1)
  %41 = getelementptr inbounds %"class.blink::HeapVector.386", %"class.blink::HeapVector.386"* %40, i64 0, i32 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = shl i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %35
  %46 = zext i32 %43 to i64
  %47 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %46) #15
  %48 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %47, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %49 = ptrtoint i8* %48 to i64
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = lshr i64 %47, 3
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %37, align 8
  br label %53

53:                                               ; preds = %35, %45
  %54 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  %55 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18FormStateSignatureEvE11s_signature to i8*) acquire, align 8
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %61, !prof !17

57:                                               ; preds = %53
  %58 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18FormStateSignatureEvE11s_signature) #15
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton.683"* @_ZZN5blinkL18FormStateSignatureEvE11s_signature to %"class.WTF::String"*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11, i64 0, i64 0), i64 48) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18FormStateSignatureEvE11s_signature) #15
  br label %61

61:                                               ; preds = %60, %57, %53
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.683"* @_ZZN5blinkL18FormStateSignatureEvE11s_signature to %"class.WTF::StringImpl"**), align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #15
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  call void @llvm.trap() #15
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %61, %64, %79
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %82, align 8
  %83 = load i32, i32* %38, align 4
  %84 = load i32, i32* %37, align 8
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %94, label %86, !prof !2

86:                                               ; preds = %81
  %87 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %88 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %89 = zext i32 %83 to i64
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 %89
  %91 = bitcast %"class.WTF::String"* %90 to i64*
  store i64 %87, i64* %91, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %92 = load i32, i32* %38, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %38, align 4
  br label %110

94:                                               ; preds = %81
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #15
  br label %110

110:                                              ; preds = %86, %94, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  %111 = load %"class.WTF::HashMap.393"*, %"class.WTF::HashMap.393"** %15, align 8
  %112 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %111, i64 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %111, i64 0, i32 0, i32 0
  %116 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %115, align 8
  %117 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %111, i64 0, i32 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %116, i64 %119
  br i1 %114, label %130, label %121

121:                                              ; preds = %110
  %122 = icmp eq i32 %118, 0
  br i1 %122, label %132, label %123

123:                                              ; preds = %121, %127
  %124 = phi %"struct.WTF::KeyValuePair.397"* [ %128, %127 ], [ %116, %121 ]
  %125 = bitcast %"struct.WTF::KeyValuePair.397"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  switch i64 %126, label %132 [
    i64 -1, label %127
    i64 0, label %127
  ]

127:                                              ; preds = %123, %123
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %124, i64 1
  %129 = icmp eq %"struct.WTF::KeyValuePair.397"* %128, %120
  br i1 %129, label %130, label %123

130:                                              ; preds = %127, %110
  %131 = load i32, i32* %38, align 4
  br label %237

132:                                              ; preds = %123, %121
  %133 = phi %"struct.WTF::KeyValuePair.397"* [ %116, %121 ], [ %124, %123 ]
  %134 = icmp eq %"struct.WTF::KeyValuePair.397"* %133, %120
  %135 = load i32, i32* %38, align 4
  br i1 %134, label %237, label %243

136:                                              ; preds = %26, %234
  %137 = phi %"class.blink::Member.41"* [ %20, %26 ], [ %235, %234 ]
  %138 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %138, align 8
  %140 = bitcast %"class.blink::ListedElement"* %139 to i1 (%"class.blink::ListedElement"*)***
  %141 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %140, align 8
  %142 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %141, i64 26
  %143 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %142, align 8
  %144 = call zeroext i1 %143(%"class.blink::ListedElement"* %139) #15
  br i1 %144, label %145, label %234

145:                                              ; preds = %136
  %146 = load %"class.WTF::HashMap.393"*, %"class.WTF::HashMap.393"** %15, align 8
  %147 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %138, align 8
  %148 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementE(%"class.blink::FormKeyGenerator"* %9, %"class.blink::ListedElement"* dereferenceable(64) %147)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i8* null, i8** %4, align 8
  %149 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %146, i64 0, i32 0
  %150 = call { %"struct.WTF::KeyValuePair.397"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_DnEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.394"* %149, %"class.WTF::AtomicString"* dereferenceable(8) %148, i8** nonnull dereferenceable(8) %4) #15
  %151 = extractvalue { %"struct.WTF::KeyValuePair.397"*, i8 } %150, 0
  %152 = extractvalue { %"struct.WTF::KeyValuePair.397"*, i8 } %150, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  %153 = and i8 %152, 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %161, label %155

155:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %156 = call noalias i8* @malloc(i64 32) #15
  %157 = bitcast i8* %156 to %"class.blink::SavedFormState"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 20, i1 false) #15
  %158 = getelementptr inbounds i8, i8* %156, i64 24
  %159 = bitcast i8* %158 to i32*
  store i32 0, i32* %159, align 8
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %151, i64 0, i32 1
  store %"class.blink::SavedFormState"* null, %"class.blink::SavedFormState"** %29, align 8
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %160, %"class.blink::SavedFormState"* %157) #15
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* nonnull %5, %"class.blink::SavedFormState"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %161

161:                                              ; preds = %145, %155
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %151, i64 0, i32 1, i32 0, i32 0, i32 0
  %163 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %162, align 8
  %164 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %138, align 8
  %165 = bitcast %"class.blink::ListedElement"* %164 to %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)***
  %166 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*** %165, align 8
  %167 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %166, i64 7
  %168 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %167, align 8
  %169 = call dereferenceable(8) %"class.WTF::AtomicString"* %168(%"class.blink::ListedElement"* %164) #15
  %170 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %138, align 8
  %171 = bitcast %"class.blink::ListedElement"* %170 to i1 (%"class.blink::ListedElement"*)***
  %172 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %171, align 8
  %173 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %172, i64 3
  %174 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %173, align 8
  %175 = call zeroext i1 %174(%"class.blink::ListedElement"* %170) #15
  %176 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %170, i64 -2, i32 4
  br i1 %175, label %177, label %184

177:                                              ; preds = %161
  %178 = bitcast %"class.blink::Member.45"* %176 to %"class.blink::HTMLFormControlElement"*
  %179 = bitcast %"class.blink::Member.45"* %176 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %180 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %179, align 8
  %181 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %180, i64 171
  %182 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %181, align 8
  %183 = call dereferenceable(8) %"class.WTF::AtomicString"* %182(%"class.blink::HTMLFormControlElement"* nonnull %178) #15
  br label %192

184:                                              ; preds = %161
  %185 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %170, i64 -1, i32 7
  %186 = getelementptr inbounds i8, i8* %185, i64 80
  %187 = bitcast i8* %186 to %"class.blink::HTMLElement"**
  %188 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %188, i64 0, i32 0, i32 2, i32 0, i32 0
  %190 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %190, i64 0, i32 3
  br label %192

192:                                              ; preds = %177, %184
  %193 = phi %"class.WTF::AtomicString"* [ %191, %184 ], [ %183, %177 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  %194 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %138, align 8
  %195 = bitcast %"class.blink::ListedElement"* %194 to void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)***
  %196 = load void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)**, void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)*, void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)** %196, i64 27
  %198 = load void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)*, void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)** %197, align 8
  call void %198(%"class.blink::FormControlState"* nonnull sret %6, %"class.blink::ListedElement"* %194) #15
  call void @_ZN5blink14SavedFormState18AppendControlStateERKN3WTF12AtomicStringES4_RKNS_16FormControlStateE(%"class.blink::SavedFormState"* %163, %"class.WTF::AtomicString"* dereferenceable(8) %169, %"class.WTF::AtomicString"* dereferenceable(8) %193, %"class.blink::FormControlState"* nonnull dereferenceable(24) %6)
  %199 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %200 = icmp eq %"class.WTF::String"* %199, null
  br i1 %200, label %233, label %201, !prof !3

201:                                              ; preds = %192
  %202 = bitcast %"class.WTF::String"* %199 to i8*
  %203 = load i32, i32* %33, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %231, label %205, !prof !2

205:                                              ; preds = %201
  %206 = zext i32 %203 to i64
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 %206
  br label %208

208:                                              ; preds = %226, %205
  %209 = phi %"class.WTF::String"* [ %227, %226 ], [ %199, %205 ]
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #15
  br label %226

226:                                              ; preds = %225, %222, %208
  %227 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %209, i64 1
  %228 = icmp eq %"class.WTF::String"* %227, %207
  br i1 %228, label %229, label %208

229:                                              ; preds = %226
  store i32 0, i32* %33, align 4
  %230 = load i8*, i8** %34, align 8
  br label %231

231:                                              ; preds = %229, %201
  %232 = phi i8* [ %230, %229 ], [ %202, %201 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %232) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %32, align 8
  br label %233

233:                                              ; preds = %192, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  br label %234

234:                                              ; preds = %136, %233
  %235 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %137, i64 1
  %236 = icmp eq %"class.blink::Member.41"* %235, %24
  br i1 %236, label %35, label %136

237:                                              ; preds = %291, %289, %130, %132
  %238 = phi i32 [ %135, %132 ], [ %131, %130 ], [ %290, %289 ], [ %293, %291 ]
  %239 = icmp ne i32 %238, 1
  %240 = load i32, i32* %37, align 8
  %241 = icmp eq i32 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %316, label %294

243:                                              ; preds = %132, %291
  %244 = phi i32 [ %293, %291 ], [ %135, %132 ]
  %245 = phi %"struct.WTF::KeyValuePair.397"* [ %283, %291 ], [ %133, %132 ]
  %246 = load i32, i32* %37, align 8
  %247 = icmp eq i32 %244, %246
  br i1 %247, label %275, label %248, !prof !2

248:                                              ; preds = %243
  %249 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %250 = zext i32 %244 to i64
  %251 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %245, i64 0, i32 0, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %249, i64 %250, i32 0, i32 0
  store %"class.WTF::StringImpl"* %252, %"class.WTF::StringImpl"** %253, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %248
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #15
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %270, !prof !2

269:                                              ; preds = %260
  call void @llvm.trap() #15
  unreachable

270:                                              ; preds = %260
  %271 = trunc i33 %266 to i32
  store i32 %271, i32* %261, align 4
  br label %272

272:                                              ; preds = %270, %255, %248
  %273 = load i32, i32* %38, align 4
  %274 = add i32 %273, 1
  store i32 %274, i32* %38, align 4
  br label %277

275:                                              ; preds = %243
  %276 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %245, i64 0, i32 0
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_(%"class.WTF::Vector"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %276) #15
  br label %277

277:                                              ; preds = %272, %275
  %278 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %245, i64 0, i32 1, i32 0, i32 0, i32 0
  %279 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %278, align 8
  call void @_ZNK5blink14SavedFormState11SerializeToERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::SavedFormState"* %279, %"class.WTF::Vector"* dereferenceable(16) %0)
  %280 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %245, i64 1
  %281 = icmp eq %"struct.WTF::KeyValuePair.397"* %280, %120
  br i1 %281, label %289, label %282

282:                                              ; preds = %277, %286
  %283 = phi %"struct.WTF::KeyValuePair.397"* [ %287, %286 ], [ %280, %277 ]
  %284 = bitcast %"struct.WTF::KeyValuePair.397"* %283 to i64*
  %285 = load i64, i64* %284, align 8
  switch i64 %285, label %291 [
    i64 -1, label %286
    i64 0, label %286
  ]

286:                                              ; preds = %282, %282
  %287 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %283, i64 1
  %288 = icmp eq %"struct.WTF::KeyValuePair.397"* %287, %120
  br i1 %288, label %289, label %282

289:                                              ; preds = %277, %286
  %290 = load i32, i32* %38, align 4
  br label %237

291:                                              ; preds = %282
  %292 = icmp eq %"struct.WTF::KeyValuePair.397"* %283, %120
  %293 = load i32, i32* %38, align 4
  br i1 %292, label %237, label %243

294:                                              ; preds = %237
  %295 = load %"class.WTF::String"*, %"class.WTF::String"** %36, align 8
  %296 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %295, i64 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %294
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #15
  br label %312

312:                                              ; preds = %311, %308, %294
  store i32 0, i32* %38, align 4
  %313 = bitcast %"class.WTF::Vector"* %0 to i8**
  %314 = load i8*, i8** %313, align 8
  %315 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %315 monotonic, align 8
  store i32 0, i32* %37, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %314) #15
  br label %316

316:                                              ; preds = %237, %312
  %317 = load %"class.WTF::HashMap.393"*, %"class.WTF::HashMap.393"** %15, align 8
  store %"class.WTF::HashMap.393"* null, %"class.WTF::HashMap.393"** %15, align 8
  %318 = icmp eq %"class.WTF::HashMap.393"* %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %316
  %320 = bitcast %"class.std::__1::unique_ptr.621"* %3 to %"struct.std::__1::default_delete.625"*
  call void @_ZNKSt3__114default_deleteIN3WTF7HashMapINS1_12AtomicStringENS_10unique_ptrIN5blink14SavedFormStateENS0_IS6_EEEENS1_16AtomicStringHashENS1_10HashTraitsIS3_EENSA_IS8_EENS1_18PartitionAllocatorEEEEclEPSE_(%"struct.std::__1::default_delete.625"* nonnull %320, %"class.WTF::HashMap.393"* nonnull %317) #15
  br label %321

321:                                              ; preds = %316, %319
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormControllerC2ERNS_8DocumentE(%"class.blink::FormController"* nocapture, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13DocumentStateEEEPhm(i64 544) #15
  %5 = bitcast i8* %4 to %"class.blink::Document"**
  store %"class.blink::Document"* %1, %"class.blink::Document"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = getelementptr inbounds i8, i8* %4, i64 24
  %8 = bitcast i8* %6 to i8**
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to i32*
  store i32 64, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 516, i1 false) #15
  %12 = getelementptr inbounds i8, i8* %4, i64 536
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %4, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.blink::DocumentState"** %17 to i8**
  store i8* %4, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 2
  %20 = bitcast %"class.WTF::HashMap.393"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #15
  %21 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::FormKeyGenerator"* null, %"class.blink::FormKeyGenerator"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 4
  store i8 0, i8* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormControllerD2Ev(%"class.blink::FormController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.397"* %3, null
  br i1 %4, label %40, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %38, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %35, %9
  %12 = phi i64 [ 0, %9 ], [ %36, %35 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %3, i64 %12
  %14 = bitcast %"struct.WTF::KeyValuePair.397"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, inttoptr (i64 -1 to i8*)
  br i1 %16, label %35, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %3, i64 %12, i32 1
  tail call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %18, %"class.blink::SavedFormState"* null) #15
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %34, %31, %17, %11
  %36 = add nuw nsw i64 %12, 1
  %37 = icmp eq i64 %36, %10
  br i1 %37, label %38, label %11

38:                                               ; preds = %35, %5
  %39 = bitcast %"struct.WTF::KeyValuePair.397"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #15
  store %"struct.WTF::KeyValuePair.397"* null, %"struct.WTF::KeyValuePair.397"** %2, align 8
  br label %40

40:                                               ; preds = %1, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14FormController5TraceEPNS_7VisitorE(%"class.blink::FormController"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::FormController"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #15
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.382"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv) #15
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 3
  %25 = bitcast %"class.blink::Member.398"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16FormKeyGeneratorEE5TraceEPNS_7VisitorEPKv) #15
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DocumentState"* @_ZNK5blink14FormController13ControlStatesEv(%"class.blink::FormController"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::DocumentState"*, %"class.blink::DocumentState"** %2, align 8
  ret %"class.blink::DocumentState"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController22SetStateForNewControlsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::FormController"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 2
  tail call void @_ZN5blink14FormController28ControlStatesFromStateVectorERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERNS1_7HashMapINS1_12AtomicStringENSt3__110unique_ptrINS_14SavedFormStateENSA_14default_deleteISC_EEEENS1_16AtomicStringHashENS1_10HashTraitsIS9_EENSH_ISF_EES4_EE(%"class.WTF::Vector"* dereferenceable(16) %1, %"class.WTF::HashMap.393"* dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController28ControlStatesFromStateVectorERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERNS1_7HashMapINS1_12AtomicStringENSt3__110unique_ptrINS_14SavedFormStateENSA_14default_deleteISC_EEEENS1_16AtomicStringHashENS1_10HashTraitsIS9_EENSH_ISF_EES4_EE(%"class.WTF::Vector"* dereferenceable(16), %"class.WTF::HashMap.393"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.397"* %7, null
  br i1 %8, label %46, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %9
  %14 = zext i32 %11 to i64
  br label %15

15:                                               ; preds = %39, %13
  %16 = phi i64 [ 0, %13 ], [ %40, %39 ]
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %7, i64 %16
  %18 = bitcast %"struct.WTF::KeyValuePair.397"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, inttoptr (i64 -1 to i8*)
  br i1 %20, label %39, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %7, i64 %16, i32 1
  tail call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %22, %"class.blink::SavedFormState"* null) #15
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %38, %35, %21, %15
  %40 = add nuw nsw i64 %16, 1
  %41 = icmp eq i64 %40, %14
  br i1 %41, label %42, label %15

42:                                               ; preds = %39, %9
  %43 = bitcast %"struct.WTF::KeyValuePair.397"* %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #15
  %44 = bitcast %"class.WTF::HashMap.393"* %1 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %10, align 8
  %45 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0, i32 2
  store i32 0, i32* %45, align 4
  br label %46

46:                                               ; preds = %2, %42
  %47 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #15
  store i32 0, i32* %3, align 4
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %231, label %51

51:                                               ; preds = %46
  store i32 1, i32* %3, align 4
  %52 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %0, i32 0) #15
  %53 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL18FormStateSignatureEvE11s_signature to i8*) acquire, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59, !prof !17

55:                                               ; preds = %51
  %56 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL18FormStateSignatureEvE11s_signature) #15
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton.683"* @_ZZN5blinkL18FormStateSignatureEvE11s_signature to %"class.WTF::String"*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11, i64 0, i64 0), i64 48) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL18FormStateSignatureEvE11s_signature) #15
  br label %59

59:                                               ; preds = %58, %55, %51
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton.683"* @_ZZN5blinkL18FormStateSignatureEvE11s_signature to %"class.WTF::StringImpl"**), align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %83

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #15
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %67
  tail call void @llvm.trap() #15
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %83

79:                                               ; preds = %59
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"* %60) #15
  br i1 %82, label %100, label %231

83:                                               ; preds = %77, %62
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %85, %"class.WTF::StringImpl"* nonnull %60) #15
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %83
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %83
  %96 = phi i32 [ %94, %93 ], [ %92, %83 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #15
  br i1 %86, label %100, label %231

99:                                               ; preds = %95
  br i1 %86, label %100, label %231

100:                                              ; preds = %79, %99, %98
  %101 = load i32, i32* %3, align 4
  %102 = add i32 %101, 1
  %103 = load i32, i32* %48, align 4
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %105, label %187

105:                                              ; preds = %100
  %106 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %109 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0
  br label %112

112:                                              ; preds = %105, %182
  %113 = phi i32 [ %102, %105 ], [ %184, %182 ]
  %114 = phi i32 [ %101, %105 ], [ %183, %182 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #15
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %107, align 8
  store i32 %113, i32* %3, align 4
  %115 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %0, i32 %114) #15
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %142, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 acquire, align 4
  %122 = and i32 %121, 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %119
  %125 = load atomic i32, i32* %120 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %142

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #15
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !2

137:                                              ; preds = %128
  call void @llvm.trap() #15
  unreachable

138:                                              ; preds = %128
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %129, align 4
  br label %142

140:                                              ; preds = %119
  %141 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %117) #15
  br label %142

142:                                              ; preds = %112, %124, %138, %140
  %143 = phi %"class.WTF::StringImpl"* [ %141, %140 ], [ %117, %124 ], [ %117, %138 ], [ null, %112 ]
  %144 = ptrtoint %"class.WTF::StringImpl"* %143 to i64
  store i64 %144, i64* %108, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #15
  store %"class.blink::SavedFormState"* inttoptr (i64 -6148914691236517206 to %"class.blink::SavedFormState"*), %"class.blink::SavedFormState"** %110, align 8
  %145 = call %"class.blink::SavedFormState"* @_ZN5blink14SavedFormState11DeserializeERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERj(%"class.WTF::Vector"* dereferenceable(16) %0, i32* nonnull dereferenceable(4) %3)
  store %"class.blink::SavedFormState"* %145, %"class.blink::SavedFormState"** %110, align 8
  %146 = icmp eq %"class.blink::SavedFormState"* %145, null
  br i1 %146, label %147, label %165

147:                                              ; preds = %142
  store i32 0, i32* %3, align 4
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* nonnull %5, %"class.blink::SavedFormState"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #15
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #15
  br label %163

163:                                              ; preds = %147, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #15
  %164 = load i32, i32* %48, align 4
  br label %187

165:                                              ; preds = %142
  %166 = call { %"struct.WTF::KeyValuePair.397"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.394"* %111, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #15
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* nonnull %5, %"class.blink::SavedFormState"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #15
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #15
  br label %182

182:                                              ; preds = %165, %178, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #15
  %183 = load i32, i32* %3, align 4
  %184 = add i32 %183, 1
  %185 = load i32, i32* %48, align 4
  %186 = icmp ult i32 %184, %185
  br i1 %186, label %112, label %187

187:                                              ; preds = %182, %100, %163
  %188 = phi i32 [ %103, %100 ], [ %164, %163 ], [ %185, %182 ]
  %189 = phi i32 [ %101, %100 ], [ 0, %163 ], [ %183, %182 ]
  %190 = icmp eq i32 %189, %188
  br i1 %190, label %231, label %191

191:                                              ; preds = %187
  %192 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %6, align 8
  %193 = icmp eq %"struct.WTF::KeyValuePair.397"* %192, null
  br i1 %193, label %231, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %227, label %198

198:                                              ; preds = %194
  %199 = zext i32 %196 to i64
  br label %200

200:                                              ; preds = %224, %198
  %201 = phi i64 [ 0, %198 ], [ %225, %224 ]
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %192, i64 %201
  %203 = bitcast %"struct.WTF::KeyValuePair.397"* %202 to i8**
  %204 = load i8*, i8** %203, align 8
  %205 = icmp eq i8* %204, inttoptr (i64 -1 to i8*)
  br i1 %205, label %224, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %192, i64 %201, i32 1
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %207, %"class.blink::SavedFormState"* null) #15
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %202, i64 0, i32 0, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #15
  br label %224

224:                                              ; preds = %223, %220, %206, %200
  %225 = add nuw nsw i64 %201, 1
  %226 = icmp eq i64 %225, %199
  br i1 %226, label %227, label %200

227:                                              ; preds = %224, %194
  %228 = bitcast %"struct.WTF::KeyValuePair.397"* %192 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %228) #15
  %229 = bitcast %"class.WTF::HashMap.393"* %1 to i64*
  store atomic i64 0, i64* %229 monotonic, align 8
  store i32 0, i32* %195, align 8
  %230 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0, i32 2
  store i32 0, i32* %230, align 4
  br label %231

231:                                              ; preds = %79, %98, %99, %46, %227, %191, %187
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14FormController16HasControlStatesEv(%"class.blink::FormController"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 2, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController19TakeStateForControlERKNS_13ListedElementE(%"class.blink::FormControlState"* noalias nocapture sret, %"class.blink::FormController"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FormControlState", align 8
  %5 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %1, i64 0, i32 2, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %12 = bitcast %"class.WTF::Vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #15
  br label %238

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::Member.398", %"class.blink::Member.398"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::FormKeyGenerator"*, %"class.blink::FormKeyGenerator"** %15, align 8
  %17 = icmp eq %"class.blink::FormKeyGenerator"* %16, null
  br i1 %17, label %18, label %32

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16FormKeyGeneratorEEEPhm(i64 48) #15
  %20 = getelementptr inbounds i8, i8* %19, i64 -4
  %21 = bitcast i8* %20 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 48, i1 false) #15
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = ptrtoint i8* %19 to i64
  %25 = bitcast %"class.blink::Member.398"* %14 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast i8* %19 to %"class.blink::FormKeyGenerator"*
  br i1 %27, label %32, label %29

29:                                               ; preds = %18
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #15
  %31 = load %"class.blink::FormKeyGenerator"*, %"class.blink::FormKeyGenerator"** %15, align 8
  br label %32

32:                                               ; preds = %13, %29, %18
  %33 = phi %"class.blink::FormKeyGenerator"* [ %16, %13 ], [ %31, %29 ], [ %28, %18 ]
  %34 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink16FormKeyGenerator7FormKeyERKNS_13ListedElementE(%"class.blink::FormKeyGenerator"* %33, %"class.blink::ListedElement"* dereferenceable(64) %2)
  %35 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %5, i64 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %35, align 8
  %37 = icmp eq %"struct.WTF::KeyValuePair.397"* %36, null
  %38 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %1, i64 0, i32 2, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  br i1 %37, label %91, label %40

40:                                               ; preds = %32
  %41 = add i32 %39, -1
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = lshr i32 %46, 8
  %48 = and i32 %47, %41
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %36, i64 %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %91, label %54

54:                                               ; preds = %40
  %55 = xor i32 %47, -1
  %56 = lshr i32 %46, 31
  %57 = add nsw i32 %56, %55
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %68

68:                                               ; preds = %78, %54
  %69 = phi %"struct.WTF::KeyValuePair.397"* [ %50, %54 ], [ %83, %78 ]
  %70 = phi i64 [ %49, %54 ], [ %82, %78 ]
  %71 = phi i64 [ 0, %54 ], [ %80, %78 ]
  %72 = bitcast %"struct.WTF::KeyValuePair.397"* %69 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = icmp ne i8* %73, inttoptr (i64 -1 to i8*)
  %75 = bitcast i8* %73 to %"class.WTF::StringImpl"*
  %76 = icmp eq %"class.WTF::StringImpl"* %44, %75
  %77 = and i1 %74, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %68
  %79 = icmp eq i64 %71, 0
  %80 = select i1 %79, i64 %67, i64 %71
  %81 = add i64 %80, %70
  %82 = and i64 %81, %42
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %36, i64 %82
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %91, label %68

87:                                               ; preds = %68
  %88 = icmp eq %"struct.WTF::KeyValuePair.397"* %69, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = zext i32 %39 to i64
  br label %94

91:                                               ; preds = %78, %87, %40, %32
  %92 = zext i32 %39 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %36, i64 %92
  br label %94

94:                                               ; preds = %89, %91
  %95 = phi i64 [ %90, %89 ], [ %92, %91 ]
  %96 = phi %"struct.WTF::KeyValuePair.397"* [ %69, %89 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %36, i64 %95
  %98 = icmp eq %"struct.WTF::KeyValuePair.397"* %96, %97
  br i1 %98, label %99, label %103

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %100, align 8
  %101 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %102 = bitcast %"class.WTF::Vector"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #15
  br label %238

103:                                              ; preds = %94
  %104 = bitcast %"class.blink::FormControlState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 24, i1 false)
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %96, i64 0, i32 1, i32 0, i32 0, i32 0
  %106 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %105, align 8
  %107 = bitcast %"class.blink::ListedElement"* %2 to %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)***
  %108 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*** %107, align 8
  %109 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %108, i64 7
  %110 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %109, align 8
  %111 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %110(%"class.blink::ListedElement"* %2) #15
  %112 = bitcast %"class.blink::ListedElement"* %2 to i1 (%"class.blink::ListedElement"*)***
  %113 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %112, align 8
  %114 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %113, i64 3
  %115 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %114, align 8
  %116 = tail call zeroext i1 %115(%"class.blink::ListedElement"* %2) #15
  %117 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %2, i64 -2, i32 4
  br i1 %116, label %118, label %125

118:                                              ; preds = %103
  %119 = bitcast %"class.blink::Member.45"* %117 to %"class.blink::HTMLFormControlElement"*
  %120 = bitcast %"class.blink::Member.45"* %117 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %121 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %120, align 8
  %122 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %121, i64 171
  %123 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %122, align 8
  %124 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %123(%"class.blink::HTMLFormControlElement"* nonnull %119) #15
  br label %133

125:                                              ; preds = %103
  %126 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %2, i64 -1, i32 7
  %127 = getelementptr inbounds i8, i8* %126, i64 80
  %128 = bitcast i8* %127 to %"class.blink::HTMLElement"**
  %129 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %129, i64 0, i32 0, i32 2, i32 0, i32 0
  %131 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %131, i64 0, i32 3
  br label %133

133:                                              ; preds = %118, %125
  %134 = phi %"class.WTF::AtomicString"* [ %132, %125 ], [ %124, %118 ]
  call void @_ZN5blink14SavedFormState16TakeControlStateERKN3WTF12AtomicStringES4_(%"class.blink::FormControlState"* nonnull sret %4, %"class.blink::SavedFormState"* %106, %"class.WTF::AtomicString"* dereferenceable(8) %111, %"class.WTF::AtomicString"* dereferenceable(8) %134)
  %135 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %105, align 8
  %136 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %135, i64 0, i32 0, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %147

139:                                              ; preds = %133
  %140 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %35, align 8
  %141 = load i32, i32* %38, align 8
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %140, i64 %142
  %144 = icmp eq %"struct.WTF::KeyValuePair.397"* %143, %96
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable.394"* %146, %"struct.WTF::KeyValuePair.397"* %96) #15
  br label %147

147:                                              ; preds = %145, %139, %133
  %148 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  %149 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 0
  %150 = load i32, i32* %149, align 8
  store i32 %150, i32* %148, align 8
  %151 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %152 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %151, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %154, align 8
  %155 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %155, align 8
  %156 = icmp eq i32 %153, 0
  br i1 %156, label %166, label %157

157:                                              ; preds = %147
  %158 = zext i32 %153 to i64
  %159 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %158) #15
  %160 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %159, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %161 = ptrtoint i8* %160 to i64
  %162 = bitcast %"class.WTF::Vector"* %151 to i64*
  store atomic i64 %161, i64* %162 monotonic, align 8
  %163 = lshr i64 %159, 3
  %164 = trunc i64 %163 to i32
  store i32 %164, i32* %155, align 8
  %165 = bitcast i8* %160 to %"class.WTF::String"*
  br label %166

166:                                              ; preds = %157, %147
  %167 = phi %"class.WTF::String"* [ null, %147 ], [ %165, %157 ]
  %168 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %169, i32* %170, align 4
  %171 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %171, align 8
  %173 = zext i32 %169 to i64
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %172, i64 %173
  %175 = icmp eq i32 %169, 0
  %176 = bitcast %"class.WTF::String"* %172 to i8*
  br i1 %175, label %205, label %177

177:                                              ; preds = %166, %201
  %178 = phi %"class.WTF::String"* [ %202, %201 ], [ %167, %166 ]
  %179 = phi %"class.WTF::String"* [ %203, %201 ], [ %172, %166 ]
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %179, i64 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %181, %"class.WTF::StringImpl"** %182, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %183, label %201, label %184

184:                                              ; preds = %177
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %201

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i33
  %193 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %192, i33 1) #15
  %194 = extractvalue { i33, i1 } %193, 1
  %195 = extractvalue { i33, i1 } %193, 0
  %196 = icmp slt i33 %195, 0
  %197 = or i1 %194, %196
  br i1 %197, label %198, label %199, !prof !2

198:                                              ; preds = %189
  tail call void @llvm.trap() #15
  unreachable

199:                                              ; preds = %189
  %200 = trunc i33 %195 to i32
  store i32 %200, i32* %190, align 4
  br label %201

201:                                              ; preds = %199, %184, %177
  %202 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 1
  %203 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %179, i64 1
  %204 = icmp eq %"class.WTF::String"* %203, %174
  br i1 %204, label %205, label %177

205:                                              ; preds = %201, %166
  %206 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %207 = icmp eq %"class.WTF::String"* %172, null
  br i1 %207, label %237, label %208, !prof !3

208:                                              ; preds = %205
  %209 = load i32, i32* %168, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %236, label %211, !prof !2

211:                                              ; preds = %208
  %212 = zext i32 %209 to i64
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %172, i64 %212
  br label %214

214:                                              ; preds = %232, %211
  %215 = phi %"class.WTF::String"* [ %233, %232 ], [ %172, %211 ]
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %215, i64 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #15
  br label %232

232:                                              ; preds = %231, %228, %214
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %215, i64 1
  %234 = icmp eq %"class.WTF::String"* %233, %213
  br i1 %234, label %235, label %214

235:                                              ; preds = %232
  store i32 0, i32* %168, align 4
  br label %236

236:                                              ; preds = %235, %208
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %176) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %206, align 8
  br label %237

237:                                              ; preds = %205, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #15
  br label %238

238:                                              ; preds = %99, %237, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController14WillDeleteFormEPNS_15HTMLFormElementE(%"class.blink::FormController"* nocapture readonly, %"class.blink::HTMLFormElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::FormKeyGenerator"*, %"class.blink::FormKeyGenerator"** %3, align 8
  %5 = icmp eq %"class.blink::FormKeyGenerator"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.406"* %7, %"class.blink::HTMLFormElement"* %1) #15
  %9 = extractvalue { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } %8, 0
  %10 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::FormKeyGenerator", %"class.blink::FormKeyGenerator"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair.408"* %15, %9
  br i1 %16, label %18, label %17

17:                                               ; preds = %6
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.406"* %7, %"struct.WTF::KeyValuePair.408"* %9) #15
  br label %18

18:                                               ; preds = %2, %17, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController22RestoreControlStateForERNS_13ListedElementE(%"class.blink::FormController"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 68
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %69

8:                                                ; preds = %2
  %9 = tail call dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* %1) #15
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.21"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %58, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %59, %58 ]
  %44 = phi i32 [ 0, %37 ], [ %60, %58 ]
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %46, %39
  br i1 %47, label %62, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %53, %48
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %60 = add i32 %44, 1
  %61 = icmp eq %"class.blink::Attribute"* %59, %35
  br i1 %61, label %64, label %42

62:                                               ; preds = %53, %42
  %63 = icmp eq i32 %44, -1
  br i1 %63, label %64, label %68

64:                                               ; preds = %58, %8, %31, %62
  %65 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %1, i64 0, i32 4, i32 0, i32 0
  %66 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %65, align 8
  %67 = icmp eq %"class.blink::HTMLFormElement"* %66, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %62, %64
  tail call void @_ZN5blink14FormController27RestoreControlStateInternalERNS_13ListedElementE(%"class.blink::FormController"* %0, %"class.blink::ListedElement"* dereferenceable(64) %1)
  br label %69

69:                                               ; preds = %64, %2, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController27RestoreControlStateInternalERNS_13ListedElementE(%"class.blink::FormController"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FormControlState", align 8
  %4 = bitcast %"class.blink::ListedElement"* %1 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 26
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %1) #15
  br i1 %8, label %9, label %145

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::FormControlState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN5blink14FormController19TakeStateForControlERKNS_13ListedElementE(%"class.blink::FormControlState"* nonnull sret %3, %"class.blink::FormController"* %0, %"class.blink::ListedElement"* dereferenceable(64) %1)
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %106, label %14

14:                                               ; preds = %9
  %15 = tail call dereferenceable(104) %"class.blink::HTMLElement"* @_ZN5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* %1) #15
  %16 = bitcast %"class.blink::HTMLElement"* %15 to i1 (%"class.blink::HTMLElement"*)***
  %17 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %17, i64 138
  %19 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::HTMLElement"* %15) #15
  br i1 %20, label %106, label %21

21:                                               ; preds = %14
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kReadonlyAttrE, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %23, align 8
  %25 = icmp eq %"class.blink::ElementData"* %24, null
  br i1 %25, label %76, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::UniqueElementData"*
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 1, i32 1
  %34 = bitcast %"class.blink::Member.21"* %33 to %"class.blink::Attribute"**
  %35 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %32, i64 0, i32 2, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  br label %43

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 1
  %40 = bitcast %"class.blink::ElementData"* %39 to %"class.blink::Attribute"*
  %41 = lshr i32 %28, 1
  %42 = and i32 %41, 268435455
  br label %43

43:                                               ; preds = %38, %31
  %44 = phi %"class.blink::Attribute"* [ %40, %38 ], [ %35, %31 ]
  %45 = phi i32 [ %42, %38 ], [ %37, %31 ]
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %44, i64 %46
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %76, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %54

54:                                               ; preds = %70, %49
  %55 = phi %"class.blink::Attribute"* [ %44, %49 ], [ %71, %70 ]
  %56 = phi i32 [ 0, %49 ], [ %72, %70 ]
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %55, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %51
  br i1 %59, label %74, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %67, %68
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %60
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %55, i64 1
  %72 = add i32 %56, 1
  %73 = icmp eq %"class.blink::Attribute"* %71, %47
  br i1 %73, label %76, label %54

74:                                               ; preds = %54, %65
  %75 = icmp eq i32 %56, -1
  br i1 %75, label %76, label %106

76:                                               ; preds = %70, %74, %43, %21
  %77 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %77, i64 4
  %79 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::ListedElement"* %1) #15
  br i1 %80, label %81, label %87

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %1, i64 -2, i32 4
  %83 = bitcast %"class.blink::Member.45"* %82 to %"class.blink::HTMLFormControlElementWithState"*
  %84 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %83, i64 0, i32 1
  %85 = load i8, i8* %84, align 1, !range !16
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %101, label %106

87:                                               ; preds = %76
  %88 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %88, i64 5
  %90 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::ListedElement"* %1) #15
  br i1 %91, label %92, label %101

92:                                               ; preds = %87
  %93 = tail call dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* %1) #15
  %94 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %93, i64 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = trunc i32 %95 to i8
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %93, i64 0, i32 0, i32 0, i32 0
  %100 = tail call zeroext i1 @_ZNK5blink4Node33IsUserActionElementHasFocusWithinEv(%"class.blink::Node"* %99) #15
  br i1 %100, label %106, label %101

101:                                              ; preds = %81, %92, %87, %98
  %102 = bitcast %"class.blink::ListedElement"* %1 to void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)***
  %103 = load void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)**, void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)*, void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)** %103, i64 28
  %105 = load void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)*, void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)** %104, align 8
  call void %105(%"class.blink::ListedElement"* %1, %"class.blink::FormControlState"* nonnull dereferenceable(24) %3) #15
  br label %106

106:                                              ; preds = %74, %81, %101, %14, %98, %9
  %107 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %3, i64 0, i32 1
  %108 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %108, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %144, label %111, !prof !3

111:                                              ; preds = %106
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %11, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %142, label %115, !prof !2

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #15
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %11, align 4
  %140 = bitcast %"class.WTF::Vector"* %107 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %111
  %143 = phi i8* [ %141, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %143) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %108, align 8
  br label %144

144:                                              ; preds = %106, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  br label %145

145:                                              ; preds = %2, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController21RestoreControlStateInERNS_15HTMLFormElementE(%"class.blink::FormController"*, %"class.blink::HTMLFormElement"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 68
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %98

8:                                                ; preds = %2
  %9 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  tail call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %9) #15
  %10 = tail call dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"* %1) #15
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %8
  %19 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %19, i64 0, i32 0, i32 0
  br label %23

21:                                               ; preds = %95, %8
  %22 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  tail call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %22) #15
  br label %98

23:                                               ; preds = %18, %95
  %24 = phi %"class.blink::Member.41"* [ %12, %18 ], [ %96, %95 ]
  %25 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %25, align 8
  %27 = bitcast %"class.blink::ListedElement"* %26 to i1 (%"class.blink::ListedElement"*)***
  %28 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %28, i64 25
  %30 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::ListedElement"* %26) #15
  br i1 %31, label %32, label %95

32:                                               ; preds = %23
  %33 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %25, align 8
  %34 = tail call dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* %33) #15
  %35 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %34, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %35, align 8
  %37 = icmp eq %"class.blink::ElementData"* %36, null
  br i1 %37, label %87, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %36, i64 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::ElementData"* %36 to %"class.blink::UniqueElementData"*
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %36, i64 1, i32 1
  %46 = bitcast %"class.blink::Member.21"* %45 to %"class.blink::Attribute"**
  %47 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %44, i64 0, i32 2, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  br label %55

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %36, i64 1
  %52 = bitcast %"class.blink::ElementData"* %51 to %"class.blink::Attribute"*
  %53 = lshr i32 %40, 1
  %54 = and i32 %53, 268435455
  br label %55

55:                                               ; preds = %50, %43
  %56 = phi %"class.blink::Attribute"* [ %52, %50 ], [ %47, %43 ]
  %57 = phi i32 [ %54, %50 ], [ %49, %43 ]
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %56, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %87, label %61

61:                                               ; preds = %55
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %81, %61
  %66 = phi %"class.blink::Attribute"* [ %56, %61 ], [ %82, %81 ]
  %67 = phi i32 [ 0, %61 ], [ %83, %81 ]
  %68 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %69, %62
  br i1 %70, label %85, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %73, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %78, %79
  br i1 %80, label %85, label %81

81:                                               ; preds = %76, %71
  %82 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 1
  %83 = add i32 %67, 1
  %84 = icmp eq %"class.blink::Attribute"* %82, %59
  br i1 %84, label %87, label %65

85:                                               ; preds = %76, %65
  %86 = icmp eq i32 %67, -1
  br i1 %86, label %87, label %90

87:                                               ; preds = %81, %85, %55, %32
  %88 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %33, i64 0, i32 4, i32 0, i32 0
  %89 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %88, align 8
  br label %90

90:                                               ; preds = %85, %87
  %91 = phi %"class.blink::HTMLFormElement"* [ %89, %87 ], [ null, %85 ]
  %92 = icmp eq %"class.blink::HTMLFormElement"* %91, %1
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %25, align 8
  tail call void @_ZN5blink14FormController27RestoreControlStateInternalERNS_13ListedElementE(%"class.blink::FormController"* %0, %"class.blink::ListedElement"* dereferenceable(64) %94)
  br label %95

95:                                               ; preds = %90, %23, %93
  %96 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %24, i64 1
  %97 = icmp eq %"class.blink::Member.41"* %96, %16
  br i1 %97, label %21, label %23

98:                                               ; preds = %2, %21
  ret void
}

declare dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink15HTMLFormElement14ListedElementsEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::HTMLElement"* @_ZN5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController28RestoreControlStateOnUpgradeERNS_13ListedElementE(%"class.blink::FormController"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FormControlState", align 8
  %4 = bitcast %"class.blink::ListedElement"* %1 to i1 (%"class.blink::ListedElement"*)***
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 26
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* %1) #15
  br i1 %8, label %9, label %58

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::FormControlState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN5blink14FormController19TakeStateForControlERKNS_13ListedElementE(%"class.blink::FormControlState"* nonnull sret %3, %"class.blink::FormController"* %0, %"class.blink::ListedElement"* dereferenceable(64) %1)
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::ListedElement"* %1 to void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)***
  %16 = load void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)**, void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)*, void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)** %16, i64 28
  %18 = load void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)*, void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)** %17, align 8
  call void %18(%"class.blink::ListedElement"* %1, %"class.blink::FormControlState"* nonnull dereferenceable(24) %3) #15
  br label %19

19:                                               ; preds = %9, %14
  %20 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %23 = icmp eq %"class.WTF::String"* %22, null
  br i1 %23, label %57, label %24, !prof !3

24:                                               ; preds = %19
  %25 = bitcast %"class.WTF::String"* %22 to i8*
  %26 = load i32, i32* %11, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %55, label %28, !prof !2

28:                                               ; preds = %24
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 %29
  br label %31

31:                                               ; preds = %49, %28
  %32 = phi %"class.WTF::String"* [ %50, %49 ], [ %22, %28 ]
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #15
  br label %49

49:                                               ; preds = %48, %45, %31
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 1
  %51 = icmp eq %"class.WTF::String"* %50, %30
  br i1 %51, label %52, label %31

52:                                               ; preds = %49
  store i32 0, i32* %11, align 4
  %53 = bitcast %"class.WTF::Vector"* %20 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %24
  %56 = phi i8* [ %54, %52 ], [ %25, %24 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %57

57:                                               ; preds = %19, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  br label %58

58:                                               ; preds = %2, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController15ScheduleRestoreEv(%"class.blink::FormController"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { i64, i64 }*
  %6 = alloca %"class.blink::Persistent.631", align 8
  %7 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %8, i8 zeroext 24) #15
  %10 = bitcast %"class.base::SingleThreadTaskRunner"* %9 to %"class.base::TaskRunner"*
  %11 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 620) #15
  %12 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::FormController"*)* @_ZN5blink14FormController33RestoreAllControlsInDocumentOrderEv to i64), i64 0>, <2 x i64>* %4, align 16
  %13 = bitcast %"class.blink::Persistent.631"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.blink::Persistent.631", %"class.blink::Persistent.631"* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::Persistent.631", %"class.blink::Persistent.631"* %6, i64 0, i32 0, i32 0
  store %"class.blink::FormController"* %0, %"class.blink::FormController"** %15, align 8, !alias.scope !18
  %16 = getelementptr inbounds %"class.blink::Persistent.631", %"class.blink::Persistent.631"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %16, align 8, !alias.scope !18
  %17 = ptrtoint %"class.blink::FormController"* %0 to i64
  switch i64 %17, label %18 [
    i64 0, label %44
    i64 -1, label %44
  ]

18:                                               ; preds = %1
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !18
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #15, !noalias !18
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %18
  %24 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #15
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8, !noalias !18
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %29, align 8, !noalias !18
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8, !noalias !18
  %33 = icmp eq %"class.blink::PersistentNode"* %32, null
  br i1 %33, label %34, label %37, !prof !2

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %35) #15
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi %"class.blink::PersistentNode"* [ %36, %34 ], [ %32, %25 ]
  %39 = bitcast %"class.blink::PersistentNode"* %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !18
  %41 = bitcast %"class.blink::PersistentRegion"* %30 to i64*
  store i64 %40, i64* %41, align 8, !noalias !18
  %42 = bitcast %"class.blink::PersistentNode"* %38 to %"class.blink::PersistentBase.632"**
  store %"class.blink::PersistentBase.632"* %14, %"class.blink::PersistentBase.632"** %42, align 8, !noalias !18
  %43 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14FormControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %16, align 8, !alias.scope !18
  br label %44

44:                                               ; preds = %1, %1, %37
  %45 = call i8* @_Znwm(i64 64) #16, !noalias !21
  %46 = bitcast i8* %45 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink14FormControllerEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %46, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14FormControllerEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %5, %"class.blink::Persistent.631"* nonnull dereferenceable(16) %6) #15, !noalias !21
  %47 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %45, i8** %47, align 8, !alias.scope !21
  %48 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %10, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #15
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #15
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %16, align 8
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %71, label %52

52:                                               ; preds = %44
  %53 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %54 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %53, i64 0, i32 1
  %55 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %54) #15
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %59, !prof !2

57:                                               ; preds = %52
  %58 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %54, i8* %58) #15
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i8* [ %58, %57 ], [ %55, %52 ]
  %61 = bitcast i8* %60 to %"class.blink::ThreadState"**
  %62 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %63, align 8
  %65 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %16, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %64, i64 0, i32 0, i32 0
  %67 = bitcast %"class.blink::PersistentRegion"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::PersistentNode"* %65 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %65, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %70, align 8
  store %"class.blink::PersistentNode"* %65, %"class.blink::PersistentNode"** %66, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %16, align 8
  br label %71

71:                                               ; preds = %44, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #15
  %72 = icmp eq %"class.base::SingleThreadTaskRunner"* %9, null
  br i1 %72, label %81, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %9, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe.341", %"class.base::RefCountedThreadSafe.341"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe.341", %"class.base::RefCountedThreadSafe.341"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe.341"* %79 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %80) #15
  br label %81

81:                                               ; preds = %71, %73, %78
  ret void
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController33RestoreAllControlsInDocumentOrderEv(%"class.blink::FormController"*) #0 align 2 {
  %2 = alloca %"class.blink::HeapHashSet.633", align 8
  %3 = alloca %"class.blink::HTMLFormElement"*, align 8
  %4 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 5, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -2
  %9 = icmp ult i32 %8, 18
  br i1 %9, label %10, label %109

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %109

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::HeapHashSet.633"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = bitcast %"class.blink::HeapHashSet.633"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 20, i1 false) #15
  %17 = tail call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  tail call void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %17) #15
  %18 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::DocumentState"*, %"class.blink::DocumentState"** %18, align 8
  %20 = tail call dereferenceable(528) %"class.blink::HeapVector.386"* @_ZN5blink13DocumentState14GetControlListEv(%"class.blink::DocumentState"* %19)
  %21 = getelementptr inbounds %"class.blink::HeapVector.386", %"class.blink::HeapVector.386"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HeapVector.386", %"class.blink::HeapVector.386"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %14
  %29 = bitcast %"class.blink::HTMLFormElement"** %3 to i8*
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::HeapHashSet.633", %"class.blink::HeapHashSet.633"* %2, i64 0, i32 0, i32 0
  br label %35

33:                                               ; preds = %106, %14
  store i8 1, i8* %11, align 8
  %34 = call %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() #15
  call void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"* %34) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  br label %109

35:                                               ; preds = %28, %106
  %36 = phi %"class.blink::Member.41"* [ %22, %28 ], [ %107, %106 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  store %"class.blink::HTMLFormElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::HTMLFormElement"*), %"class.blink::HTMLFormElement"** %3, align 8
  %37 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %37, align 8
  %39 = call dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"* %38) #15
  %40 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %39, i64 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %40, align 8
  %42 = icmp eq %"class.blink::ElementData"* %41, null
  br i1 %42, label %93, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::ElementData"* %41 to %"class.blink::UniqueElementData"*
  %50 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 1, i32 1
  %51 = bitcast %"class.blink::Member.21"* %50 to %"class.blink::Attribute"**
  %52 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %49, i64 0, i32 2, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %60

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %41, i64 1
  %57 = bitcast %"class.blink::ElementData"* %56 to %"class.blink::Attribute"*
  %58 = lshr i32 %45, 1
  %59 = and i32 %58, 268435455
  br label %60

60:                                               ; preds = %55, %48
  %61 = phi %"class.blink::Attribute"* [ %57, %55 ], [ %52, %48 ]
  %62 = phi i32 [ %59, %55 ], [ %54, %48 ]
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %60
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %86, %66
  %71 = phi %"class.blink::Attribute"* [ %61, %66 ], [ %87, %86 ]
  %72 = phi i32 [ 0, %66 ], [ %88, %86 ]
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %67
  br i1 %75, label %90, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %78, %79
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %83, %84
  br i1 %85, label %90, label %86

86:                                               ; preds = %81, %76
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %71, i64 1
  %88 = add i32 %72, 1
  %89 = icmp eq %"class.blink::Attribute"* %87, %64
  br i1 %89, label %93, label %70

90:                                               ; preds = %81, %70
  %91 = icmp eq i32 %72, -1
  br i1 %91, label %93, label %92

92:                                               ; preds = %90
  store %"class.blink::HTMLFormElement"* null, %"class.blink::HTMLFormElement"** %3, align 8
  br label %97

93:                                               ; preds = %86, %35, %60, %90
  %94 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %38, i64 0, i32 4, i32 0, i32 0
  %95 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %94, align 8
  store %"class.blink::HTMLFormElement"* %95, %"class.blink::HTMLFormElement"** %3, align 8
  %96 = icmp eq %"class.blink::HTMLFormElement"* %95, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %92, %93
  %98 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %37, align 8
  call void @_ZN5blink14FormController22RestoreControlStateForERNS_13ListedElementE(%"class.blink::FormController"* %0, %"class.blink::ListedElement"* dereferenceable(64) %98)
  br label %106

99:                                               ; preds = %93
  %100 = call { %"class.blink::Member.45"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.637"* nonnull %32, %"class.blink::HTMLFormElement"** nonnull dereferenceable(8) %3, %"class.blink::HTMLFormElement"** nonnull dereferenceable(8) %3) #15
  %101 = extractvalue { %"class.blink::Member.45"*, i8 } %100, 1
  %102 = and i8 %101, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %3, align 8
  call void @_ZN5blink14FormController21RestoreControlStateInERNS_15HTMLFormElementE(%"class.blink::FormController"* %0, %"class.blink::HTMLFormElement"* dereferenceable(200) %105)
  br label %106

106:                                              ; preds = %99, %104, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  %107 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %36, i64 1
  %108 = icmp eq %"class.blink::Member.41"* %107, %26
  br i1 %108, label %33, label %35

109:                                              ; preds = %10, %1, %33
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController18RestoreImmediatelyEv(%"class.blink::FormController"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !16
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 2, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink14FormController33RestoreAllControlsInDocumentOrderEv(%"class.blink::FormController"* %0)
  br label %10

10:                                               ; preds = %5, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController22GetReferencedFilePathsERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector"* noalias sret, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashMap.393", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #15
  %6 = bitcast %"class.WTF::HashMap.393"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %3, i64 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::HashMap.393"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #15
  call void @_ZN5blink14FormController28ControlStatesFromStateVectorERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEERNS1_7HashMapINS1_12AtomicStringENSt3__110unique_ptrINS_14SavedFormStateENSA_14default_deleteISC_EEEENS1_16AtomicStringHashENS1_10HashTraitsIS9_EENSH_ISF_EES4_EE(%"class.WTF::Vector"* dereferenceable(16) %1, %"class.WTF::HashMap.393"* nonnull dereferenceable(24) %3)
  %11 = load i32, i32* %9, align 4
  %12 = icmp eq i32 %11, 0
  %13 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %7, align 8
  %14 = load i32, i32* %8, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %13, i64 %15
  br i1 %12, label %36, label %17

17:                                               ; preds = %2
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17, %23
  %20 = phi %"struct.WTF::KeyValuePair.397"* [ %24, %23 ], [ %13, %17 ]
  %21 = bitcast %"struct.WTF::KeyValuePair.397"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %26 [
    i64 -1, label %23
    i64 0, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %20, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair.397"* %24, %16
  br i1 %25, label %36, label %19

26:                                               ; preds = %19, %17
  %27 = phi %"struct.WTF::KeyValuePair.397"* [ %13, %17 ], [ %20, %19 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair.397"* %27, %16
  br i1 %28, label %36, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.WTF::Vector"* %4 to i8*
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %33 = bitcast %"class.WTF::Vector"* %4 to i8**
  br label %74

34:                                               ; preds = %114, %124, %121
  %35 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %7, align 8
  br label %36

36:                                               ; preds = %23, %2, %34, %26
  %37 = phi %"struct.WTF::KeyValuePair.397"* [ %35, %34 ], [ %13, %26 ], [ %13, %2 ], [ %13, %23 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.397"* %37, null
  br i1 %38, label %73, label %39, !prof !3

39:                                               ; preds = %36
  %40 = load i32, i32* %8, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %71, label %42

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %68, %42
  %45 = phi i64 [ 0, %42 ], [ %69, %68 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %37, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair.397"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %68, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %37, i64 %45, i32 1
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %51, %"class.blink::SavedFormState"* null) #15
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #15
  br label %68

68:                                               ; preds = %67, %64, %50, %44
  %69 = add nuw nsw i64 %45, 1
  %70 = icmp eq i64 %69, %43
  br i1 %70, label %71, label %44

71:                                               ; preds = %68, %39
  %72 = bitcast %"struct.WTF::KeyValuePair.397"* %37 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #15
  store %"struct.WTF::KeyValuePair.397"* null, %"struct.WTF::KeyValuePair.397"** %7, align 8
  br label %73

73:                                               ; preds = %36, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret void

74:                                               ; preds = %29, %124
  %75 = phi %"struct.WTF::KeyValuePair.397"* [ %27, %29 ], [ %118, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #15
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %75, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %76, align 8
  call void @_ZNK5blink14SavedFormState22GetReferencedFilePathsEv(%"class.WTF::Vector"* nonnull sret %4, %"class.blink::SavedFormState"* %77)
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %79 = load i32, i32* %32, align 4
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector"* %0, %"class.WTF::String"* %78, i32 %79) #15
  %80 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %81 = icmp eq %"class.WTF::String"* %80, null
  br i1 %81, label %114, label %82, !prof !3

82:                                               ; preds = %74
  %83 = bitcast %"class.WTF::String"* %80 to i8*
  %84 = load i32, i32* %32, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %112, label %86, !prof !2

86:                                               ; preds = %82
  %87 = zext i32 %84 to i64
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 %87
  br label %89

89:                                               ; preds = %107, %86
  %90 = phi %"class.WTF::String"* [ %108, %107 ], [ %80, %86 ]
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #15
  br label %107

107:                                              ; preds = %106, %103, %89
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 1
  %109 = icmp eq %"class.WTF::String"* %108, %88
  br i1 %109, label %110, label %89

110:                                              ; preds = %107
  store i32 0, i32* %32, align 4
  %111 = load i8*, i8** %33, align 8
  br label %112

112:                                              ; preds = %110, %82
  %113 = phi i8* [ %111, %110 ], [ %83, %82 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %113) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %31, align 8
  br label %114

114:                                              ; preds = %74, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #15
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %75, i64 1
  %116 = icmp eq %"struct.WTF::KeyValuePair.397"* %115, %16
  br i1 %116, label %34, label %117

117:                                              ; preds = %114, %121
  %118 = phi %"struct.WTF::KeyValuePair.397"* [ %122, %121 ], [ %115, %114 ]
  %119 = bitcast %"struct.WTF::KeyValuePair.397"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  switch i64 %120, label %124 [
    i64 -1, label %121
    i64 0, label %121
  ]

121:                                              ; preds = %117, %117
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %118, i64 1
  %123 = icmp eq %"struct.WTF::KeyValuePair.397"* %122, %16
  br i1 %123, label %34, label %117

124:                                              ; preds = %117
  %125 = icmp eq %"struct.WTF::KeyValuePair.397"* %118, %16
  br i1 %125, label %34, label %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormController33InvalidateStatefulFormControlListEv(%"class.blink::FormController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormController", %"class.blink::FormController"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::DocumentState"*, %"class.blink::DocumentState"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !16
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::DocumentState", %"class.blink::DocumentState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.blink::Member.41"** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = zext i32 %9 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #15
  store i32 0, i32* %8, align 4
  store i8 1, i8* %4, align 8
  br label %15

15:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"*, i1 (i16)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13CustomElement11IsValidNameERKN3WTF12AtomicStringEb(%"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  br i1 %1, label %3, label %30

3:                                                ; preds = %2
  %4 = tail call dereferenceable(16) %"class.WTF::Vector.650"* @_ZN5blink13CustomElement26EmbedderCustomElementNamesEv() #15
  %5 = getelementptr inbounds %"class.WTF::Vector.650", %"class.WTF::Vector.650"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.650", %"class.WTF::Vector.650"* %4, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  br label %15

15:                                               ; preds = %20, %12
  %16 = phi %"class.WTF::AtomicString"* [ %6, %12 ], [ %21, %20 ]
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 1
  %22 = icmp ult %"class.WTF::AtomicString"* %21, %10
  br i1 %22, label %15, label %30

23:                                               ; preds = %15
  %24 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  %25 = ptrtoint %"class.WTF::AtomicString"* %6 to i64
  %26 = sub i64 %24, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %163

30:                                               ; preds = %20, %23, %3, %2
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %163, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  br i1 %38, label %54, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp ugt i32 %42, 1
  br i1 %43, label %44, label %163

44:                                               ; preds = %40
  %45 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = add i32 %42, -1
  %48 = zext i32 %47 to i64
  %49 = tail call i8* @memchr(i8* %46, i32 45, i64 %48) #17
  %50 = icmp eq i8* %49, null
  %51 = ptrtoint i8* %49 to i64
  %52 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %53 = sub i64 %51, %52
  br i1 %50, label %163, label %68

54:                                               ; preds = %34
  %55 = bitcast %"class.WTF::StringImpl"* %39 to i16*
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %57, 1
  br i1 %58, label %59, label %163

59:                                               ; preds = %54, %64
  %60 = phi i64 [ %65, %64 ], [ 1, %54 ]
  %61 = getelementptr inbounds i16, i16* %55, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = icmp eq i16 %62, 45
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = add nuw nsw i64 %60, 1
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %57, %66
  br i1 %67, label %163, label %59

68:                                               ; preds = %59, %44
  %69 = phi i32 [ %42, %44 ], [ %57, %59 ]
  %70 = phi i64 [ %53, %44 ], [ %60, %59 ]
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, -1
  %73 = icmp eq i32 %69, 0
  %74 = or i1 %72, %73
  br i1 %74, label %163, label %75

75:                                               ; preds = %68
  %76 = load atomic i32, i32* %35 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  br label %86

83:                                               ; preds = %75
  %84 = bitcast %"class.WTF::StringImpl"* %39 to i16*
  %85 = load i16, i16* %84, align 2
  br label %86

86:                                               ; preds = %79, %83
  %87 = phi i16 [ %82, %79 ], [ %85, %83 ]
  %88 = add i16 %87, -97
  %89 = icmp ult i16 %88, 26
  br i1 %89, label %90, label %163

90:                                               ; preds = %86
  %91 = load atomic i32, i32* %35 monotonic, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %117, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  %96 = zext i32 %69 to i64
  %97 = icmp ugt i32 %69, 1
  br i1 %97, label %98, label %160

98:                                               ; preds = %94, %114
  %99 = phi i64 [ %115, %114 ], [ 1, %94 ]
  %100 = getelementptr inbounds i8, i8* %95, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = add i8 %101, -97
  %103 = icmp ult i8 %102, 26
  %104 = add i8 %101, -48
  %105 = icmp ult i8 %104, 10
  %106 = or i1 %103, %105
  br i1 %106, label %114, label %107

107:                                              ; preds = %98
  switch i8 %101, label %108 [
    i8 -73, label %114
    i8 95, label %114
    i8 46, label %114
    i8 45, label %114
  ]

108:                                              ; preds = %107
  %109 = icmp ult i8 %101, -64
  %110 = icmp eq i8 %101, -41
  %111 = or i1 %109, %110
  %112 = icmp ne i8 %101, -9
  %113 = xor i1 %112, %111
  br i1 %113, label %114, label %163

114:                                              ; preds = %98, %107, %107, %107, %107, %108
  %115 = add nuw nsw i64 %99, 1
  %116 = icmp ult i64 %115, %96
  br i1 %116, label %98, label %160

117:                                              ; preds = %90
  %118 = bitcast %"class.WTF::StringImpl"* %39 to i16*
  br label %119

119:                                              ; preds = %158, %117
  %120 = phi %"class.WTF::StringImpl"* [ %32, %117 ], [ %159, %158 ]
  %121 = phi i32 [ 1, %117 ], [ %155, %158 ]
  %122 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  br label %126

126:                                              ; preds = %119, %123
  %127 = phi i32 [ %125, %123 ], [ 0, %119 ]
  %128 = icmp ult i32 %121, %127
  br i1 %128, label %129, label %160

129:                                              ; preds = %126
  %130 = add nuw i32 %121, 1
  %131 = zext i32 %121 to i64
  %132 = getelementptr inbounds i16, i16* %118, i64 %131
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = and i32 %134, 64512
  %136 = icmp eq i32 %135, 55296
  br i1 %136, label %137, label %154

137:                                              ; preds = %129
  br i1 %122, label %142, label %138

138:                                              ; preds = %137
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %130, %140
  br i1 %141, label %154, label %142

142:                                              ; preds = %137, %138
  %143 = zext i32 %130 to i64
  %144 = getelementptr inbounds i16, i16* %118, i64 %143
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = and i32 %146, 64512
  %148 = icmp eq i32 %147, 56320
  br i1 %148, label %149, label %154

149:                                              ; preds = %142
  %150 = add i32 %121, 2
  %151 = shl nuw nsw i32 %134, 10
  %152 = add nsw i32 %151, -56613888
  %153 = add nsw i32 %152, %146
  br label %154

154:                                              ; preds = %142, %149, %138, %129
  %155 = phi i32 [ %130, %129 ], [ %150, %149 ], [ %130, %142 ], [ %130, %138 ]
  %156 = phi i32 [ %134, %129 ], [ %153, %149 ], [ %134, %142 ], [ %134, %138 ]
  %157 = tail call zeroext i1 @_ZN5blink9Character32IsPotentialCustomElementNameCharEi(i32 %156) #15
  br i1 %157, label %158, label %163

158:                                              ; preds = %154
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  br label %119

160:                                              ; preds = %114, %126, %94
  %161 = tail call zeroext i1 @_ZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %0) #15
  %162 = xor i1 %161, true
  br label %163

163:                                              ; preds = %64, %108, %154, %23, %68, %44, %54, %40, %30, %86, %160
  %164 = phi i1 [ %162, %160 ], [ true, %23 ], [ false, %68 ], [ false, %86 ], [ false, %30 ], [ false, %40 ], [ false, %54 ], [ false, %44 ], [ false, %154 ], [ false, %108 ], [ false, %64 ]
  ret i1 %164
}

declare dereferenceable(16) %"class.WTF::Vector.650"* @_ZN5blink13CustomElement26EmbedderCustomElementNamesEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink9Character32IsPotentialCustomElementNameCharEi(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13CustomElement27IsHyphenatedSpecElementNameERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %8, i64 %9
  br i1 %6, label %59, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %161, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %56
  %17 = phi %"class.blink::FormControlState"* [ %57, %56 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %17, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** %19, align 8
  %21 = icmp eq %"class.WTF::String"* %20, null
  br i1 %21, label %56, label %22, !prof !3

22:                                               ; preds = %16
  %23 = bitcast %"class.WTF::String"* %20 to i8*
  %24 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %17, i64 0, i32 1, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27, !prof !2

27:                                               ; preds = %22
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 %28
  br label %30

30:                                               ; preds = %48, %27
  %31 = phi %"class.WTF::String"* [ %49, %48 ], [ %20, %27 ]
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #15
  br label %48

48:                                               ; preds = %47, %44, %30
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 1
  %50 = icmp eq %"class.WTF::String"* %49, %29
  br i1 %50, label %51, label %30

51:                                               ; preds = %48
  store i32 0, i32* %24, align 4
  %52 = bitcast %"class.WTF::Vector"* %18 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %22
  %55 = phi i8* [ %53, %51 ], [ %23, %22 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %19, align 8
  br label %56

56:                                               ; preds = %54, %16
  %57 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %17, i64 1
  %58 = icmp eq %"class.blink::FormControlState"* %57, %10
  br i1 %58, label %161, label %16

59:                                               ; preds = %1
  %60 = icmp eq i32 %5, 0
  br i1 %60, label %107, label %61

61:                                               ; preds = %59, %101
  %62 = phi %"class.blink::FormControlState"* [ %102, %101 ], [ %8, %59 ]
  %63 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %62, i64 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::String"*, %"class.WTF::String"** %64, align 8
  %66 = icmp eq %"class.WTF::String"* %65, null
  br i1 %66, label %101, label %67, !prof !3

67:                                               ; preds = %61
  %68 = bitcast %"class.WTF::String"* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %62, i64 0, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !2

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %"class.WTF::String"* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #15
  br label %93

93:                                               ; preds = %92, %89, %75
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %76, i64 1
  %95 = icmp eq %"class.WTF::String"* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.WTF::Vector"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %64, align 8
  br label %101

101:                                              ; preds = %99, %61
  %102 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %62, i64 1
  %103 = icmp eq %"class.blink::FormControlState"* %102, %10
  br i1 %103, label %104, label %61

104:                                              ; preds = %101
  %105 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %7, align 8
  %106 = load i32, i32* %2, align 8
  br label %107

107:                                              ; preds = %104, %59
  %108 = phi i32 [ %106, %104 ], [ %3, %59 ]
  %109 = phi %"class.blink::FormControlState"* [ %105, %104 ], [ %8, %59 ]
  %110 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %109, i64 %112
  %114 = icmp eq i32 %108, %111
  br i1 %114, label %161, label %115

115:                                              ; preds = %107
  %116 = zext i32 %108 to i64
  %117 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %109, i64 %116
  br label %118

118:                                              ; preds = %115, %158
  %119 = phi %"class.blink::FormControlState"* [ %159, %158 ], [ %117, %115 ]
  %120 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %119, i64 0, i32 1
  %121 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::String"*, %"class.WTF::String"** %121, align 8
  %123 = icmp eq %"class.WTF::String"* %122, null
  br i1 %123, label %158, label %124, !prof !3

124:                                              ; preds = %118
  %125 = bitcast %"class.WTF::String"* %122 to i8*
  %126 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %119, i64 0, i32 1, i32 0, i32 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %156, label %129, !prof !2

129:                                              ; preds = %124
  %130 = zext i32 %127 to i64
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 %130
  br label %132

132:                                              ; preds = %150, %129
  %133 = phi %"class.WTF::String"* [ %151, %150 ], [ %122, %129 ]
  %134 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #15
  br label %150

150:                                              ; preds = %149, %146, %132
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %133, i64 1
  %152 = icmp eq %"class.WTF::String"* %151, %131
  br i1 %152, label %153, label %132

153:                                              ; preds = %150
  store i32 0, i32* %126, align 4
  %154 = bitcast %"class.WTF::Vector"* %120 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %124
  %157 = phi i8* [ %155, %153 ], [ %125, %124 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %157) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %121, align 8
  br label %158

158:                                              ; preds = %156, %118
  %159 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %119, i64 1
  %160 = icmp eq %"class.blink::FormControlState"* %159, %113
  br i1 %160, label %161, label %118

161:                                              ; preds = %56, %158, %107, %11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplEPKhj(%"class.WTF::StringImpl"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.41"* @_ZNK3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.38"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.38", %"class.WTF::Vector.38"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %24, i64 %25
  ret %"class.blink::Member.41"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !16
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #15
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.608"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.608"* %30, i16* nonnull dereferenceable(2) %3) #15
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !16
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #15
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.603"* %41, i8* nonnull dereferenceable(1) %4) #15
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.608"*, i16* dereferenceable(2)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.608"* %0, i32 %5) #15
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.608"* %0, i32 %5) #15
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.608"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.608"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.608"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.608"* %0, i32 %27) #15
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.608"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.608"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.608"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #15
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.609"* %19, i16* nonnull %6) #15
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #15
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #15
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #15
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.609"* %53, i16* %48) #15
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.608"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.608", %"class.WTF::Vector.608"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.609"*, i16*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.603"*, i8* dereferenceable(1)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.603"* %0, i32 %5) #15
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.603"* %0, i32 %5) #15
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.603"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.603"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.603"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.603"* %0, i32 %27) #15
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.603"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.603"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.603"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #15
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.604"* %18, i8* nonnull %6) #15
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #15
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.604"* %46, i8* %42) #15
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.603"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.603", %"class.WTF::Vector.603"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #15
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.604"*, i8*) local_unnamed_addr #12 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #15
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::ScopedEventQueue"* @_ZN5blink16ScopedEventQueue8InstanceEv() local_unnamed_addr #2

declare void @_ZN5blink16ScopedEventQueue21IncrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #2

declare void @_ZN5blink16ScopedEventQueue21DecrementScopingLevelEv(%"class.blink::ScopedEventQueue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node33IsUserActionElementHasFocusWithinEv(%"class.blink::Node"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector"* %0, i32 %5, %"class.WTF::String"* %1) #15
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #15
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp ugt %"class.WTF::String"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::String"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::String"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !3

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::String"* %2 to i64
  %55 = ptrtoint %"class.WTF::String"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !3

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::String"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %70) #15
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::String"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::String"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !3

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #15
  %86 = bitcast %"class.WTF::Vector"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #15
  %90 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::String"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::String"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::String"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::String"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"*, %"class.blink::SavedFormState"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %3, align 8
  store %"class.blink::SavedFormState"* %1, %"class.blink::SavedFormState"** %3, align 8
  %5 = icmp eq %"class.blink::SavedFormState"* %4, null
  br i1 %5, label %79, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %9, label %77, label %10, !prof !3

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SavedFormState", %"class.blink::SavedFormState"* %4, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %75, label %14

14:                                               ; preds = %10
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %72, %14
  %17 = phi i64 [ 0, %14 ], [ %73, %72 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  br i1 %20, label %72, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 1
  %23 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %23, align 8
  %25 = icmp eq %"class.blink::FormControlState"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::FormControlState"* %24 to i8*
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 1, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 1, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  tail call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %22) #15
  %34 = bitcast %"class.WTF::Deque"* %22 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %26
  %37 = phi i8* [ %35, %33 ], [ %27, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %37) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %23, align 8
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi %"class.WTF::StringImpl"* [ %38, %36 ], [ %19, %21 ]
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #15
  br label %55

55:                                               ; preds = %54, %51, %39
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 0, i32 1
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #15
  br label %72

72:                                               ; preds = %71, %68, %55, %16
  %73 = add nuw nsw i64 %17, 1
  %74 = icmp eq i64 %73, %15
  br i1 %74, label %75, label %16

75:                                               ; preds = %72, %10
  %76 = bitcast %"struct.WTF::KeyValuePair"* %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #15
  br label %77

77:                                               ; preds = %6, %75
  %78 = bitcast %"class.blink::SavedFormState"* %4 to i8*
  tail call void @free(i8* %78) #15
  br label %79

79:                                               ; preds = %2, %77
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPNS_10StringImplEEEvOT_(%"class.WTF::Vector"*, %"class.WTF::StringImpl"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !3

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !3

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #15
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #15
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1, align 8
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #15
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  tail call void @llvm.trap() #15
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %45, %52, %67
  %70 = load i32, i32* %3, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E4FindINS_22IdentityHashTranslatorISA_SF_S6_EES2_EENS_17HashTableIteratorIS2_S8_S9_SA_SF_SC_S6_EERKT0_(%"class.WTF::HashTable"*, %"class.blink::ControlKey"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %134, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::ControlKey"* %1 to i8*
  %12 = bitcast %"class.blink::ControlKey"* %1 to i16*
  %13 = load i16, i16* %12, align 2
  %14 = getelementptr inbounds i8, i8* %11, i64 2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %13 to i32
  %18 = add nuw nsw i32 %17, -1640531527
  %19 = shl i32 %18, 16
  %20 = zext i16 %16 to i32
  %21 = shl nuw nsw i32 %20, 11
  %22 = xor i32 %21, %18
  %23 = xor i32 %22, %19
  %24 = lshr i32 %23, 11
  %25 = getelementptr inbounds i8, i8* %11, i64 4
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %11, i64 6
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %27 to i32
  %32 = add i32 %23, %31
  %33 = add i32 %32, %24
  %34 = shl i32 %33, 16
  %35 = zext i16 %30 to i32
  %36 = shl nuw nsw i32 %35, 11
  %37 = xor i32 %33, %36
  %38 = xor i32 %37, %34
  %39 = lshr i32 %38, 11
  %40 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 1
  %41 = bitcast %"class.WTF::StringImpl"** %40 to i16*
  %42 = load i16, i16* %41, align 2
  %43 = getelementptr inbounds i8, i8* %11, i64 10
  %44 = bitcast i8* %43 to i16*
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %42 to i32
  %47 = add i32 %38, %46
  %48 = add i32 %47, %39
  %49 = shl i32 %48, 16
  %50 = zext i16 %45 to i32
  %51 = shl nuw nsw i32 %50, 11
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = getelementptr inbounds i8, i8* %11, i64 12
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %56, align 2
  %58 = getelementptr inbounds i8, i8* %11, i64 14
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %57 to i32
  %62 = add i32 %53, %61
  %63 = add i32 %62, %54
  %64 = shl i32 %63, 16
  %65 = zext i16 %60 to i32
  %66 = shl nuw nsw i32 %65, 11
  %67 = xor i32 %63, %66
  %68 = xor i32 %67, %64
  %69 = lshr i32 %68, 11
  %70 = add i32 %69, %68
  %71 = shl i32 %70, 3
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 5
  %74 = add i32 %73, %72
  %75 = shl i32 %74, 2
  %76 = xor i32 %75, %74
  %77 = lshr i32 %76, 15
  %78 = add i32 %77, %76
  %79 = shl i32 %78, 10
  %80 = xor i32 %79, %78
  %81 = and i32 %80, 16777215
  %82 = icmp eq i32 %81, 0
  %83 = select i1 %82, i32 8388608, i32 %81
  %84 = and i32 %83, %9
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %89 = xor i32 %83, -1
  %90 = lshr i32 %83, 23
  %91 = add nsw i32 %90, %89
  %92 = shl i32 %91, 12
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 7
  %95 = xor i32 %94, %93
  %96 = shl i32 %95, 2
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 20
  %99 = xor i32 %98, %97
  %100 = or i32 %99, 1
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %85
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %87
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %85, i32 0, i32 1
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, %88
  %109 = and i1 %105, %108
  br i1 %109, label %131, label %110

110:                                              ; preds = %6, %118
  %111 = phi %"class.WTF::StringImpl"* [ %128, %118 ], [ %107, %6 ]
  %112 = phi %"class.WTF::StringImpl"* [ %125, %118 ], [ %104, %6 ]
  %113 = phi i64 [ %122, %118 ], [ %85, %6 ]
  %114 = phi i64 [ %120, %118 ], [ 0, %6 ]
  %115 = icmp eq %"class.WTF::StringImpl"* %112, null
  %116 = icmp eq %"class.WTF::StringImpl"* %111, null
  %117 = and i1 %116, %115
  br i1 %117, label %134, label %118

118:                                              ; preds = %110
  %119 = icmp eq i64 %114, 0
  %120 = select i1 %119, i64 %101, i64 %114
  %121 = add i64 %120, %113
  %122 = and i64 %121, %10
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %122
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, %87
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %122, i32 0, i32 1
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, %88
  %130 = and i1 %126, %129
  br i1 %130, label %131, label %110

131:                                              ; preds = %118, %6
  %132 = phi %"struct.WTF::KeyValuePair"* [ %102, %6 ], [ %123, %118 ]
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %132, null
  br i1 %133, label %134, label %139

134:                                              ; preds = %110, %2, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %137
  br label %143

139:                                              ; preds = %131
  %140 = load i32, i32* %7, align 8
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %141
  br label %143

143:                                              ; preds = %139, %134
  %144 = phi %"struct.WTF::KeyValuePair"* [ %132, %139 ], [ %138, %134 ]
  %145 = phi %"struct.WTF::KeyValuePair"* [ %142, %139 ], [ %138, %134 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %144, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %146, %"struct.WTF::KeyValuePair"* %145, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FormControlStateEEEmm(i64 %11) #15
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FormControlStateEEEmm(i64 %11) #15
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FormControlStateEEEPKcv, i64 0, i64 0)) #15
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = udiv i64 %13, 24
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"class.blink::FormControlState"*
  br i1 %23, label %31, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %26
  %28 = zext i32 %22 to i64
  %29 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %28
  %30 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %24, i64 %26
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::FormControlState"* %27, %"class.blink::FormControlState"* %29, %"class.blink::FormControlState"* %30, i1 zeroext true) #15
  br label %45

31:                                               ; preds = %1
  %32 = zext i32 %22 to i64
  %33 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %32
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::FormControlState"* %5, %"class.blink::FormControlState"* %33, %"class.blink::FormControlState"* %24, i1 zeroext true) #15
  %34 = load i32, i32* %2, align 8
  %35 = load i32, i32* %19, align 8
  %36 = sub i32 %35, %3
  %37 = add i32 %36, %34
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %38
  %40 = zext i32 %3 to i64
  %41 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %5, i64 %40
  %42 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %4, align 8
  %43 = zext i32 %37 to i64
  %44 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %42, i64 %43
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::FormControlState"* %39, %"class.blink::FormControlState"* %41, %"class.blink::FormControlState"* %44, i1 zeroext true) #15
  store i32 %37, i32* %19, align 8
  br label %45

45:                                               ; preds = %25, %31
  %46 = bitcast %"class.blink::FormControlState"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FormControlStateEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::FormControlState"*, %"class.blink::FormControlState"*, %"class.blink::FormControlState"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::FormControlState"* %0, %1
  br i1 %5, label %111, label %6

6:                                                ; preds = %4, %107
  %7 = phi %"class.blink::FormControlState"* [ %109, %107 ], [ %0, %4 ]
  %8 = phi %"class.blink::FormControlState"* [ %108, %107 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %8, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %6
  %19 = zext i32 %14 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %19) #15
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector"* %12 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  %26 = bitcast i8* %21 to %"class.WTF::String"*
  br label %27

27:                                               ; preds = %18, %6
  %28 = phi %"class.WTF::String"* [ null, %6 ], [ %26, %18 ]
  %29 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %8, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = load i32, i32* %29, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %27, %62
  %39 = phi %"class.WTF::String"* [ %63, %62 ], [ %28, %27 ]
  %40 = phi %"class.WTF::String"* [ %64, %62 ], [ %33, %27 ]
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %44, label %62, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i33
  %54 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #15
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %50
  tail call void @llvm.trap() #15
  unreachable

60:                                               ; preds = %50
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %51, align 4
  br label %62

62:                                               ; preds = %60, %45, %38
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 1
  %65 = icmp eq %"class.WTF::String"* %64, %36
  br i1 %65, label %66, label %38

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::String"*, %"class.WTF::String"** %67, align 8
  br label %69

69:                                               ; preds = %66, %27
  %70 = phi %"class.WTF::String"* [ %68, %66 ], [ %33, %27 ]
  %71 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = icmp eq %"class.WTF::String"* %70, null
  br i1 %73, label %107, label %74, !prof !3

74:                                               ; preds = %69
  %75 = bitcast %"class.WTF::String"* %70 to i8*
  %76 = load i32, i32* %29, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %105, label %78, !prof !2

78:                                               ; preds = %74
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 %79
  br label %81

81:                                               ; preds = %99, %78
  %82 = phi %"class.WTF::String"* [ %100, %99 ], [ %70, %78 ]
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #15
  br label %99

99:                                               ; preds = %98, %95, %81
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 1
  %101 = icmp eq %"class.WTF::String"* %100, %80
  br i1 %101, label %102, label %81

102:                                              ; preds = %99
  store i32 0, i32* %29, align 4
  %103 = bitcast %"class.WTF::Vector"* %71 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %74
  %106 = phi i8* [ %104, %102 ], [ %75, %74 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %106) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %72, align 8
  br label %107

107:                                              ; preds = %69, %105
  %108 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %8, i64 1
  %109 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 1
  %110 = icmp eq %"class.blink::FormControlState"* %109, %1
  br i1 %110, label %111, label %6

111:                                              ; preds = %107, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E6insertINS_17HashMapTranslatorISF_SA_S6_EERS2_RS7_EENS_18HashTableAddResultISG_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::ControlKey"* dereferenceable(16), %"class.WTF::Deque"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ControlKey"* %1 to i8*
  %17 = bitcast %"class.blink::ControlKey"* %1 to i16*
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds i8, i8* %16, i64 2
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %18 to i32
  %23 = add nuw nsw i32 %22, -1640531527
  %24 = shl i32 %23, 16
  %25 = zext i16 %21 to i32
  %26 = shl nuw nsw i32 %25, 11
  %27 = xor i32 %26, %23
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = getelementptr inbounds i8, i8* %16, i64 4
  %31 = bitcast i8* %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = getelementptr inbounds i8, i8* %16, i64 6
  %34 = bitcast i8* %33 to i16*
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %32 to i32
  %37 = add i32 %28, %36
  %38 = add i32 %37, %29
  %39 = shl i32 %38, 16
  %40 = zext i16 %35 to i32
  %41 = shl nuw nsw i32 %40, 11
  %42 = xor i32 %38, %41
  %43 = xor i32 %42, %39
  %44 = lshr i32 %43, 11
  %45 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 1
  %46 = bitcast %"class.WTF::StringImpl"** %45 to i16*
  %47 = load i16, i16* %46, align 2
  %48 = getelementptr inbounds i8, i8* %16, i64 10
  %49 = bitcast i8* %48 to i16*
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %47 to i32
  %52 = add i32 %43, %51
  %53 = add i32 %52, %44
  %54 = shl i32 %53, 16
  %55 = zext i16 %50 to i32
  %56 = shl nuw nsw i32 %55, 11
  %57 = xor i32 %53, %56
  %58 = xor i32 %57, %54
  %59 = lshr i32 %58, 11
  %60 = getelementptr inbounds i8, i8* %16, i64 12
  %61 = bitcast i8* %60 to i16*
  %62 = load i16, i16* %61, align 2
  %63 = getelementptr inbounds i8, i8* %16, i64 14
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %62 to i32
  %67 = add i32 %58, %66
  %68 = add i32 %67, %59
  %69 = shl i32 %68, 16
  %70 = zext i16 %65 to i32
  %71 = shl nuw nsw i32 %70, 11
  %72 = xor i32 %68, %71
  %73 = xor i32 %72, %69
  %74 = lshr i32 %73, 11
  %75 = add i32 %74, %73
  %76 = shl i32 %75, 3
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 5
  %79 = add i32 %78, %77
  %80 = shl i32 %79, 2
  %81 = xor i32 %80, %79
  %82 = lshr i32 %81, 15
  %83 = add i32 %82, %81
  %84 = shl i32 %83, 10
  %85 = xor i32 %84, %83
  %86 = and i32 %85, 16777215
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i32 8388608, i32 %86
  %89 = and i32 %88, %14
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %90
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %90, i32 0, i32 1
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  %98 = and i1 %94, %97
  br i1 %98, label %150, label %99

99:                                               ; preds = %10
  %100 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %103 = xor i32 %88, -1
  %104 = lshr i32 %88, 23
  %105 = add nsw i32 %104, %103
  %106 = shl i32 %105, 12
  %107 = xor i32 %106, %105
  %108 = lshr i32 %107, 7
  %109 = xor i32 %108, %107
  %110 = shl i32 %109, 2
  %111 = xor i32 %110, %109
  %112 = lshr i32 %111, 20
  %113 = xor i32 %112, %111
  %114 = or i32 %113, 1
  %115 = zext i32 %114 to i64
  br label %116

116:                                              ; preds = %99, %126
  %117 = phi %"class.WTF::StringImpl"* [ %96, %99 ], [ %138, %126 ]
  %118 = phi %"class.WTF::StringImpl"* [ %93, %99 ], [ %135, %126 ]
  %119 = phi %"struct.WTF::KeyValuePair"* [ %91, %99 ], [ %133, %126 ]
  %120 = phi %"struct.WTF::KeyValuePair"* [ null, %99 ], [ %128, %126 ]
  %121 = phi i64 [ %90, %99 ], [ %132, %126 ]
  %122 = phi i64 [ 0, %99 ], [ %130, %126 ]
  %123 = icmp eq %"class.WTF::StringImpl"* %118, %101
  %124 = icmp eq %"class.WTF::StringImpl"* %117, %102
  %125 = and i1 %123, %124
  br i1 %125, label %167, label %126

126:                                              ; preds = %116
  %127 = icmp eq %"class.WTF::StringImpl"* %118, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %128 = select i1 %127, %"struct.WTF::KeyValuePair"* %119, %"struct.WTF::KeyValuePair"* %120
  %129 = icmp eq i64 %122, 0
  %130 = select i1 %129, i64 %115, i64 %122
  %131 = add i64 %130, %121
  %132 = and i64 %131, %15
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %132
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %132, i32 0, i32 1
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  %140 = and i1 %136, %139
  br i1 %140, label %141, label %116

141:                                              ; preds = %126
  %142 = icmp eq %"struct.WTF::KeyValuePair"* %128, null
  br i1 %142, label %150, label %143

143:                                              ; preds = %141
  tail call void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E18ReinitializeBucketERS8_(%"struct.WTF::KeyValuePair"* nonnull dereferenceable(40) %128)
  %144 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, 2147483647
  %147 = and i32 %146, 2147483647
  %148 = and i32 %145, -2147483648
  %149 = or i32 %147, %148
  store i32 %149, i32* %144, align 8
  br label %150

150:                                              ; preds = %10, %141, %143
  %151 = phi %"struct.WTF::KeyValuePair"* [ %128, %143 ], [ %133, %141 ], [ %91, %10 ]
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %151, i64 0, i32 0
  %153 = tail call dereferenceable(16) %"class.blink::ControlKey"* @_ZN5blink10ControlKeyaSERKS0_(%"class.blink::ControlKey"* %152, %"class.blink::ControlKey"* dereferenceable(16) %1) #15
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %151, i64 0, i32 1
  %155 = tail call dereferenceable(24) %"class.WTF::Deque"* @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Deque"* %154, %"class.WTF::Deque"* dereferenceable(24) %2) #15
  %156 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = add i32 %160, %158
  %162 = shl i32 %161, 1
  %163 = load i32, i32* %12, align 8
  %164 = icmp ult i32 %162, %163
  br i1 %164, label %167, label %165

165:                                              ; preds = %150
  %166 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %151)
  br label %167

167:                                              ; preds = %116, %150, %165
  %168 = phi i8 [ 1, %150 ], [ 1, %165 ], [ 0, %116 ]
  %169 = phi %"struct.WTF::KeyValuePair"* [ %151, %150 ], [ %166, %165 ], [ %119, %116 ]
  %170 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %169, 0
  %171 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %170, i8 %168, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E6ExpandEPS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 40
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %41, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39
  call void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E16InitializeBucketERS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %40) #15
  %41 = add nuw nsw i64 %39, 1
  %42 = icmp eq i64 %41, %33
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %31
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E8RehashToEPS8_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #15
  ret %"struct.WTF::KeyValuePair"* %44
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E18ReinitializeBucketERS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair", align 8
  %3 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  %4 = bitcast %"struct.WTF::KeyValuePair"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #15
  call void @_ZN3WTF22KeyValuePairHashTraitsIN5blink20ControlKeyHashTraitsENS_10HashTraitsINS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv(%"struct.WTF::KeyValuePair"* nonnull sret %2) #15
  %5 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINS2_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEES6_E9ConstructIJS8_EEEPS8_PvDpOT_(i8* %3, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(40) %2) #15
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %7, align 8
  %9 = icmp eq %"class.blink::FormControlState"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::FormControlState"* %8 to i8*
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %6) #15
  %18 = bitcast %"class.WTF::Deque"* %6 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %10
  %21 = phi i8* [ %19, %17 ], [ %11, %10 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %7, align 8
  br label %22

22:                                               ; preds = %20, %1
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %38, %35, %22
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 1
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E8RehashToEPS8_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %106

24:                                               ; preds = %133
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %134, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %137, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %135, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %102, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %100, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %97, %39
  %42 = phi i64 [ 0, %39 ], [ %98, %97 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  br i1 %45, label %97, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1
  %48 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %48, align 8
  %50 = icmp eq %"class.blink::FormControlState"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.blink::FormControlState"* %49 to i8*
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %47) #15
  %59 = bitcast %"class.WTF::Deque"* %47 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %51
  %62 = phi i8* [ %60, %58 ], [ %52, %51 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %48, align 8
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  br label %64

64:                                               ; preds = %61, %46
  %65 = phi %"class.WTF::StringImpl"* [ %63, %61 ], [ %44, %46 ]
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %79, %76, %64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0, i32 1
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #15
  br label %97

97:                                               ; preds = %96, %93, %80, %41
  %98 = add nuw nsw i64 %42, 1
  %99 = icmp eq i64 %98, %40
  br i1 %99, label %100, label %41

100:                                              ; preds = %97, %37
  %101 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %101) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %102

102:                                              ; preds = %28, %100
  %103 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, -2147483648
  store i32 %105, i32* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair"* %33

106:                                              ; preds = %21, %133
  %107 = phi i64 [ %134, %133 ], [ %23, %21 ]
  %108 = phi i32 [ %135, %133 ], [ %13, %21 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %136, %133 ], [ %22, %21 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %137, %133 ], [ null, %21 ]
  %111 = phi i32 [ %138, %133 ], [ 0, %21 ]
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %109, i64 %112
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %109, i64 %112, i32 0, i32 1
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  %120 = and i1 %116, %119
  %121 = icmp eq %"class.WTF::StringImpl"* %115, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %122 = or i1 %121, %120
  br i1 %122, label %133, label %123

123:                                              ; preds = %106
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %113, i64 0, i32 0
  %125 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E16LookupForWritingINS_22IdentityHashTranslatorISA_SF_S6_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::ControlKey"* dereferenceable(16) %124) #15
  %126 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %125, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEES6_NS_18HashMapValueTraitsINS2_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEELb1EE4MoveEOS8_RS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %113, %"struct.WTF::KeyValuePair"* dereferenceable(40) %126) #15
  %127 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %127, i64 %112
  %129 = icmp eq %"struct.WTF::KeyValuePair"* %128, %3
  %130 = select i1 %129, %"struct.WTF::KeyValuePair"* %126, %"struct.WTF::KeyValuePair"* %110
  %131 = load i32, i32* %12, align 8
  %132 = ptrtoint %"struct.WTF::KeyValuePair"* %127 to i64
  br label %133

133:                                              ; preds = %106, %123
  %134 = phi i64 [ %107, %106 ], [ %132, %123 ]
  %135 = phi i32 [ %108, %106 ], [ %131, %123 ]
  %136 = phi %"struct.WTF::KeyValuePair"* [ %109, %106 ], [ %127, %123 ]
  %137 = phi %"struct.WTF::KeyValuePair"* [ %110, %106 ], [ %130, %123 ]
  %138 = add i32 %111, 1
  %139 = icmp eq i32 %138, %135
  br i1 %139, label %24, label %106
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E16InitializeBucketERS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair", align 8
  %3 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  %4 = bitcast %"struct.WTF::KeyValuePair"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #15
  call void @_ZN3WTF22KeyValuePairHashTraitsIN5blink20ControlKeyHashTraitsENS_10HashTraitsINS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv(%"struct.WTF::KeyValuePair"* nonnull sret %2) #15
  %5 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINS2_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEES6_E9ConstructIJS8_EEEPS8_PvDpOT_(i8* %3, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(40) %2) #15
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %7, align 8
  %9 = icmp eq %"class.blink::FormControlState"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::FormControlState"* %8 to i8*
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %6) #15
  %18 = bitcast %"class.WTF::Deque"* %6 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %17, %10
  %21 = phi i8* [ %19, %17 ], [ %11, %10 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %7, align 8
  br label %22

22:                                               ; preds = %20, %1
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %38, %35, %22
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 1
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22KeyValuePairHashTraitsIN5blink20ControlKeyHashTraitsENS_10HashTraitsINS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv(%"struct.WTF::KeyValuePair"* noalias sret) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ControlKey", align 8
  %3 = alloca %"class.WTF::Deque", align 8
  %4 = bitcast %"class.blink::ControlKey"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #15, !alias.scope !28
  %5 = bitcast %"class.WTF::Deque"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #15, !alias.scope !31
  call void @_ZN3WTF12KeyValuePairIN5blink10ControlKeyENS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEC2IS2_S6_EEOT_OT0_(%"struct.WTF::KeyValuePair"* %0, %"class.blink::ControlKey"* nonnull dereferenceable(16) %2, %"class.WTF::Deque"* nonnull dereferenceable(24) %3)
  %6 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %6, align 8
  %8 = icmp eq %"class.blink::FormControlState"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::FormControlState"* %7 to i8*
  %11 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %19, label %16

16:                                               ; preds = %9
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* nonnull %3) #15
  %17 = bitcast %"class.WTF::Deque"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %9
  %20 = phi i8* [ %18, %16 ], [ %10, %9 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %20) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %6, align 8
  br label %21

21:                                               ; preds = %1, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  %22 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %2, i64 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %38

38:                                               ; preds = %37, %34, %21
  %39 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %2, i64 0, i32 1
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #15
  br label %55

55:                                               ; preds = %38, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_18HashMapValueTraitsINS2_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEES6_E9ConstructIJS8_EEEPS8_PvDpOT_(i8*, %"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %4 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %4, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"class.WTF::StringImpl"**
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #15
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #15
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  br label %30

30:                                               ; preds = %27, %12, %2
  %31 = phi %"class.WTF::StringImpl"* [ %10, %2 ], [ %10, %12 ], [ %29, %27 ]
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #15
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #15
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %30, %33, %48
  %51 = getelementptr inbounds i8, i8* %0, i64 16
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %53 = getelementptr inbounds i8, i8* %0, i64 32
  %54 = bitcast i8* %53 to i32*
  %55 = getelementptr inbounds i8, i8* %0, i64 36
  %56 = bitcast i8* %55 to i32*
  %57 = getelementptr inbounds i8, i8* %0, i64 28
  %58 = bitcast i8* %57 to i32*
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #15
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp ugt i32 %60, %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = select i1 %63, i32 %65, i32 %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %66, i32* %67, align 4
  %68 = bitcast %"class.WTF::Deque"* %52 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast i8* %51 to i64*
  %71 = load i64, i64* %70, align 8
  store atomic i64 %71, i64* %68 monotonic, align 8
  store atomic i64 %69, i64* %70 monotonic, align 8
  %72 = getelementptr inbounds i8, i8* %0, i64 24
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = load i32, i32* %64, align 4
  store i32 %75, i32* %73, align 4
  store i32 %74, i32* %64, align 4
  %76 = load i32, i32* %58, align 4
  %77 = load i32, i32* %67, align 4
  store i32 %77, i32* %58, align 4
  store i32 %76, i32* %67, align 4
  %78 = load i32, i32* %54, align 4
  %79 = load i32, i32* %59, align 4
  store i32 %79, i32* %54, align 4
  store i32 %78, i32* %59, align 4
  %80 = load i32, i32* %56, align 4
  %81 = load i32, i32* %61, align 4
  store i32 %81, i32* %56, align 4
  store i32 %80, i32* %61, align 4
  ret %"struct.WTF::KeyValuePair"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12KeyValuePairIN5blink10ControlKeyENS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEC2IS2_S6_EEOT_OT0_(%"struct.WTF::KeyValuePair"*, %"class.blink::ControlKey"* dereferenceable(16), %"class.WTF::Deque"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %4, align 8
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 1
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %7, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #15
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #15
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  br label %29

29:                                               ; preds = %26, %11, %3
  %30 = phi %"class.WTF::StringImpl"* [ %9, %3 ], [ %9, %11 ], [ %28, %26 ]
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %29, %32, %47
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 2
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %2, i64 0, i32 1
  %55 = bitcast %"class.WTF::Deque"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #15
  %56 = load i32, i32* %54, align 8
  %57 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %2, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp ugt i32 %56, %58
  %60 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = select i1 %59, i32 %61, i32 %58
  %63 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %62, i32* %63, align 4
  %64 = bitcast %"class.WTF::Deque"* %2 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.WTF::Deque"* %50 to i64*
  %67 = load i64, i64* %66, align 8
  store atomic i64 %67, i64* %64 monotonic, align 8
  store atomic i64 %65, i64* %66 monotonic, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* %60, align 4
  store i32 %70, i32* %68, align 4
  store i32 %69, i32* %60, align 4
  %71 = load i32, i32* %53, align 4
  %72 = load i32, i32* %63, align 4
  store i32 %72, i32* %53, align 4
  store i32 %71, i32* %63, align 4
  %73 = load i32, i32* %51, align 4
  %74 = load i32, i32* %54, align 4
  store i32 %74, i32* %51, align 4
  store i32 %73, i32* %54, align 4
  %75 = load i32, i32* %52, align 4
  %76 = load i32, i32* %57, align 4
  store i32 %76, i32* %52, align 4
  store i32 %75, i32* %57, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEES6_NS_18HashMapValueTraitsINS2_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEELb1EE4MoveEOS8_RS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40), %"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %4, align 8
  %6 = icmp eq %"class.blink::FormControlState"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::FormControlState"* %5 to i8*
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  tail call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %3) #15
  %15 = bitcast %"class.WTF::Deque"* %3 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %14, %7
  %18 = phi i8* [ %16, %14 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %18) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %4, align 8
  br label %19

19:                                               ; preds = %17, %2
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %36

36:                                               ; preds = %35, %32, %19
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 1
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %20, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 1
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %37, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %58, label %77, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %77

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i33
  %68 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #15
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !2

73:                                               ; preds = %64
  tail call void @llvm.trap() #15
  unreachable

74:                                               ; preds = %64
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %65, align 4
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  br label %77

77:                                               ; preds = %74, %59, %53
  %78 = phi %"class.WTF::StringImpl"* [ %57, %53 ], [ %57, %59 ], [ %76, %74 ]
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #15
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  tail call void @llvm.trap() #15
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %97

97:                                               ; preds = %77, %80, %95
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 1
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 2
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1
  %103 = bitcast %"class.WTF::Deque"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #15
  %104 = load i32, i32* %102, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = icmp ugt i32 %104, %106
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = select i1 %107, i32 %109, i32 %106
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %110, i32* %111, align 4
  %112 = bitcast %"class.WTF::Deque"* %98 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::Deque"* %3 to i64*
  %115 = load i64, i64* %114, align 8
  store atomic i64 %115, i64* %112 monotonic, align 8
  store atomic i64 %113, i64* %114 monotonic, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %108, align 4
  store i32 %118, i32* %116, align 4
  store i32 %117, i32* %108, align 4
  %119 = load i32, i32* %101, align 4
  %120 = load i32, i32* %111, align 4
  store i32 %120, i32* %101, align 4
  store i32 %119, i32* %111, align 4
  %121 = load i32, i32* %99, align 4
  %122 = load i32, i32* %102, align 4
  store i32 %122, i32* %99, align 4
  store i32 %121, i32* %102, align 4
  %123 = load i32, i32* %100, align 4
  %124 = load i32, i32* %105, align 4
  store i32 %124, i32* %100, align 4
  store i32 %123, i32* %105, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E16LookupForWritingINS_22IdentityHashTranslatorISA_SF_S6_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::ControlKey"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::ControlKey"* %1 to i8*
  %10 = bitcast %"class.blink::ControlKey"* %1 to i16*
  %11 = load i16, i16* %10, align 2
  %12 = getelementptr inbounds i8, i8* %9, i64 2
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %11 to i32
  %16 = add nuw nsw i32 %15, -1640531527
  %17 = shl i32 %16, 16
  %18 = zext i16 %14 to i32
  %19 = shl nuw nsw i32 %18, 11
  %20 = xor i32 %19, %16
  %21 = xor i32 %20, %17
  %22 = lshr i32 %21, 11
  %23 = getelementptr inbounds i8, i8* %9, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 2
  %26 = getelementptr inbounds i8, i8* %9, i64 6
  %27 = bitcast i8* %26 to i16*
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %25 to i32
  %30 = add i32 %21, %29
  %31 = add i32 %30, %22
  %32 = shl i32 %31, 16
  %33 = zext i16 %28 to i32
  %34 = shl nuw nsw i32 %33, 11
  %35 = xor i32 %31, %34
  %36 = xor i32 %35, %32
  %37 = lshr i32 %36, 11
  %38 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 1
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i16*
  %40 = load i16, i16* %39, align 2
  %41 = getelementptr inbounds i8, i8* %9, i64 10
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %40 to i32
  %45 = add i32 %36, %44
  %46 = add i32 %45, %37
  %47 = shl i32 %46, 16
  %48 = zext i16 %43 to i32
  %49 = shl nuw nsw i32 %48, 11
  %50 = xor i32 %46, %49
  %51 = xor i32 %50, %47
  %52 = lshr i32 %51, 11
  %53 = getelementptr inbounds i8, i8* %9, i64 12
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 2
  %56 = getelementptr inbounds i8, i8* %9, i64 14
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %55 to i32
  %60 = add i32 %51, %59
  %61 = add i32 %60, %52
  %62 = shl i32 %61, 16
  %63 = zext i16 %58 to i32
  %64 = shl nuw nsw i32 %63, 11
  %65 = xor i32 %61, %64
  %66 = xor i32 %65, %62
  %67 = lshr i32 %66, 11
  %68 = add i32 %67, %66
  %69 = shl i32 %68, 3
  %70 = xor i32 %69, %68
  %71 = lshr i32 %70, 5
  %72 = add i32 %71, %70
  %73 = shl i32 %72, 2
  %74 = xor i32 %73, %72
  %75 = lshr i32 %74, 15
  %76 = add i32 %75, %74
  %77 = shl i32 %76, 10
  %78 = xor i32 %77, %76
  %79 = and i32 %78, 16777215
  %80 = icmp eq i32 %79, 0
  %81 = select i1 %80, i32 8388608, i32 %79
  %82 = and i32 %81, %7
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %83
  %85 = ptrtoint %"struct.WTF::KeyValuePair"* %84 to i64
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %83, i32 0, i32 1
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  %92 = and i1 %88, %91
  br i1 %92, label %113, label %93

93:                                               ; preds = %2
  %94 = getelementptr inbounds %"class.blink::ControlKey", %"class.blink::ControlKey"* %1, i64 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %97 = xor i32 %81, -1
  %98 = lshr i32 %81, 23
  %99 = add nsw i32 %98, %97
  %100 = shl i32 %99, 12
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 7
  %103 = xor i32 %102, %101
  %104 = shl i32 %103, 2
  %105 = xor i32 %104, %103
  %106 = lshr i32 %105, 20
  %107 = xor i32 %106, %105
  %108 = or i32 %107, 1
  %109 = zext i32 %108 to i64
  br label %119

110:                                              ; preds = %131
  %111 = ptrtoint %"struct.WTF::KeyValuePair"* %138 to i64
  %112 = inttoptr i64 %133 to %"struct.WTF::KeyValuePair"*
  br label %113

113:                                              ; preds = %110, %2
  %114 = phi i64 [ %111, %110 ], [ %85, %2 ]
  %115 = phi %"struct.WTF::KeyValuePair"* [ %112, %110 ], [ null, %2 ]
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %115, null
  %117 = ptrtoint %"struct.WTF::KeyValuePair"* %115 to i64
  %118 = select i1 %116, i64 %114, i64 %117
  br label %147

119:                                              ; preds = %93, %131
  %120 = phi %"class.WTF::StringImpl"* [ %90, %93 ], [ %144, %131 ]
  %121 = phi i64 [ 0, %93 ], [ %133, %131 ]
  %122 = phi %"class.WTF::StringImpl"* [ %87, %93 ], [ %141, %131 ]
  %123 = phi i64 [ %85, %93 ], [ %139, %131 ]
  %124 = phi i64 [ %83, %93 ], [ %137, %131 ]
  %125 = phi i64 [ 0, %93 ], [ %135, %131 ]
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %124, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, %95
  %129 = icmp eq %"class.WTF::StringImpl"* %120, %96
  %130 = and i1 %128, %129
  br i1 %130, label %147, label %131

131:                                              ; preds = %119
  %132 = icmp eq %"class.WTF::StringImpl"* %122, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %133 = select i1 %132, i64 %123, i64 %121
  %134 = icmp eq i64 %125, 0
  %135 = select i1 %134, i64 %109, i64 %125
  %136 = add i64 %135, %124
  %137 = and i64 %136, %8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %137
  %139 = ptrtoint %"struct.WTF::KeyValuePair"* %138 to i64
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %138, i64 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %137, i32 0, i32 1
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  %146 = and i1 %142, %145
  br i1 %146, label %110, label %119

147:                                              ; preds = %119, %113
  %148 = phi i64 [ %118, %113 ], [ %123, %119 ]
  %149 = phi i8 [ 0, %113 ], [ 1, %119 ]
  %150 = inttoptr i64 %148 to %"struct.WTF::KeyValuePair"*
  %151 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %150, 0
  %152 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %151, i8 %149, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %152
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::Deque"* @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Deque"*, %"class.WTF::Deque"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.WTF::Deque", align 8
  %4 = bitcast %"class.WTF::Deque"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.WTF::Deque"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i32, i32* %10, align 8
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %5, align 8
  store i32 0, i32* %6, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %2
  %15 = zext i32 %12 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16FormControlStateEEEmm(i64 %15) #15
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FormControlStateEEEPKcv, i64 0, i64 0)) #15
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.WTF::Deque"* %3 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = udiv i64 %16, 24
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %6, align 8
  %22 = bitcast i8* %17 to %"class.blink::FormControlState"*
  %23 = bitcast i8* %17 to %"class.blink::FormControlState"*
  br label %24

24:                                               ; preds = %14, %2
  %25 = phi i64 [ 0, %2 ], [ %18, %14 ]
  %26 = phi %"class.blink::FormControlState"* [ null, %2 ], [ %23, %14 ]
  %27 = phi i32 [ 0, %2 ], [ %21, %14 ]
  %28 = phi %"class.blink::FormControlState"* [ null, %2 ], [ %22, %14 ]
  %29 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %8, align 8
  %31 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %9, align 4
  %33 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %33, align 8
  %35 = icmp ugt i32 %30, %32
  br i1 %35, label %39, label %36

36:                                               ; preds = %24
  %37 = zext i32 %30 to i64
  %38 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %28, i64 %37
  br label %44

39:                                               ; preds = %24
  %40 = zext i32 %32 to i64
  %41 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %34, i64 %40
  tail call void @_ZN3WTF12VectorCopierILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE17UninitializedCopyIS2_EEvPKT_S8_PS2_(%"class.blink::FormControlState"* %34, %"class.blink::FormControlState"* %41, %"class.blink::FormControlState"* %28) #15
  %42 = zext i32 %30 to i64
  %43 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %26, i64 %42
  br label %44

44:                                               ; preds = %36, %39
  %45 = phi %"class.blink::FormControlState"* [ %38, %36 ], [ %43, %39 ]
  %46 = phi i32 [ %32, %36 ], [ %27, %39 ]
  %47 = phi i64 [ %37, %36 ], [ %42, %39 ]
  %48 = zext i32 %46 to i64
  %49 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %34, i64 %47
  %50 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %34, i64 %48
  tail call void @_ZN3WTF12VectorCopierILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE17UninitializedCopyIS2_EEvPKT_S8_PS2_(%"class.blink::FormControlState"* %49, %"class.blink::FormControlState"* %50, %"class.blink::FormControlState"* %45) #15
  %51 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp ugt i32 %52, %54
  %56 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br i1 %55, label %59, label %57

57:                                               ; preds = %44
  %58 = load i32, i32* %56, align 4
  br label %61

59:                                               ; preds = %44
  %60 = load i32, i32* %56, align 8
  br label %61

61:                                               ; preds = %57, %59
  %62 = phi i32 [ %60, %59 ], [ %58, %57 ]
  %63 = phi i32 [ %60, %59 ], [ %54, %57 ]
  %64 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %65 = select i1 %35, i32 %27, i32 %32
  %66 = bitcast %"class.WTF::Deque"* %3 to i64*
  %67 = bitcast %"class.WTF::Deque"* %0 to i64*
  %68 = load i64, i64* %67, align 8
  store atomic i64 %68, i64* %66 monotonic, align 8
  store atomic i64 %25, i64* %67 monotonic, align 8
  %69 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %27, i32* %69, align 4
  store i32 %62, i32* %6, align 8
  store i32 %65, i32* %64, align 4
  store i32 %63, i32* %7, align 4
  store i32 %30, i32* %51, align 4
  store i32 %52, i32* %8, align 8
  store i32 %32, i32* %53, align 4
  store i32 %54, i32* %9, align 4
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %61
  %72 = inttoptr i64 %68 to i8*
  %73 = icmp eq i32 %52, %54
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* nonnull %3) #15
  %75 = bitcast %"class.WTF::Deque"* %3 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %71
  %78 = phi i8* [ %76, %74 ], [ %72, %71 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %5, align 8
  br label %79

79:                                               ; preds = %61, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret %"class.WTF::Deque"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorCopierILb0EN5blink16FormControlStateENS_18PartitionAllocatorEE17UninitializedCopyIS2_EEvPKT_S8_PS2_(%"class.blink::FormControlState"*, %"class.blink::FormControlState"*, %"class.blink::FormControlState"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.blink::FormControlState"* %0, %1
  br i1 %4, label %69, label %5

5:                                                ; preds = %3, %65
  %6 = phi %"class.blink::FormControlState"* [ %66, %65 ], [ %2, %3 ]
  %7 = phi %"class.blink::FormControlState"* [ %67, %65 ], [ %0, %3 ]
  %8 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  store i32 0, i32* %15, align 8
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  %18 = zext i32 %13 to i64
  %19 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %18) #15
  %20 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %19, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.WTF::Vector"* %11 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = lshr i64 %19, 3
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %15, align 8
  %25 = bitcast i8* %20 to %"class.WTF::String"*
  br label %26

26:                                               ; preds = %17, %5
  %27 = phi %"class.WTF::String"* [ null, %5 ], [ %25, %17 ]
  %28 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %31, align 8
  %33 = load i32, i32* %28, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %65, label %37

37:                                               ; preds = %26, %61
  %38 = phi %"class.WTF::String"* [ %62, %61 ], [ %27, %26 ]
  %39 = phi %"class.WTF::String"* [ %63, %61 ], [ %32, %26 ]
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #15
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %49
  tail call void @llvm.trap() #15
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %59, %44, %37
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 1
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 1
  %64 = icmp eq %"class.WTF::String"* %63, %35
  br i1 %64, label %65, label %37

65:                                               ; preds = %61, %26
  %66 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %6, i64 1
  %67 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %7, i64 1
  %68 = icmp eq %"class.blink::FormControlState"* %67, %1
  br i1 %68, label %69, label %5

69:                                               ; preds = %65, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E5eraseEPKS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E12DeleteBucketERKS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %1)
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  %6 = and i32 %5, 2147483647
  %7 = and i32 %4, -2147483648
  %8 = or i32 %6, %7
  store i32 %8, i32* %3, align 8
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -1
  store i32 %11, i32* %9, align 4
  %12 = mul i32 %11, 6
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ult i32 %12, %14
  %16 = icmp ugt i32 %14, 8
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %32

18:                                               ; preds = %2
  %19 = lshr i32 %14, 1
  %20 = zext i32 %19 to i64
  %21 = mul nuw nsw i64 %20, 40
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink10ControlKeyENS_5DequeINS2_16FormControlStateELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #15
  %23 = bitcast i8* %22 to %"struct.WTF::KeyValuePair"*
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %18, %25
  %26 = phi i64 [ %28, %25 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %26
  tail call void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E16InitializeBucketERS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40) %27) #15
  %28 = add nuw nsw i64 %26, 1
  %29 = icmp eq i64 %28, %20
  br i1 %29, label %30, label %25

30:                                               ; preds = %25, %18
  %31 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E8RehashToEPS8_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %23, i32 %19, %"struct.WTF::KeyValuePair"* null) #15
  br label %32

32:                                               ; preds = %30, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10ControlKeyENS_12KeyValuePairIS2_NS_5DequeINS1_16FormControlStateELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS1_14ControlKeyHashENS_18HashMapValueTraitsINS1_20ControlKeyHashTraitsENS_10HashTraitsIS7_EEEESC_S6_E12DeleteBucketERKS8_(%"struct.WTF::KeyValuePair"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FormControlState"*, %"class.blink::FormControlState"** %3, align 8
  %5 = icmp eq %"class.blink::FormControlState"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::FormControlState"* %4 to i8*
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  tail call void @_ZN3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %2) #15
  %14 = bitcast %"class.WTF::Deque"* %2 to i8**
  %15 = load i8*, i8** %14, align 8
  br label %16

16:                                               ; preds = %13, %6
  %17 = phi i8* [ %15, %13 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %17) #15
  store %"class.blink::FormControlState"* null, %"class.blink::FormControlState"** %3, align 8
  br label %18

18:                                               ; preds = %16, %1
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %34, %31, %18
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 1
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %35, %48, %51
  store %"class.WTF::StringImpl"* inttoptr (i64 -1 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE6AppendIS1_EEvPKT_j(%"class.WTF::Vector"*, %"class.WTF::String"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector"* %0, i32 %9, %"class.WTF::String"* %1) #15
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi %"class.WTF::String"* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %25, i8* %26) #15
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %34 = zext i32 %2 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 %34
  %36 = icmp eq i32 %2, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %40 = load i32, i32* %7, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 %41
  br label %43

43:                                               ; preds = %37, %67
  %44 = phi %"class.WTF::String"* [ %68, %67 ], [ %42, %37 ]
  %45 = phi %"class.WTF::String"* [ %69, %67 ], [ %18, %37 ]
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #15
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  call void @llvm.trap() #15
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %43
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 1
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 1
  %70 = icmp eq %"class.WTF::String"* %69, %35
  br i1 %70, label %71, label %43

71:                                               ; preds = %67, %33
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.406"*, %"class.blink::HTMLFormElement"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::HTMLFormElement"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.408"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %34, align 8
  %36 = icmp eq %"class.blink::HTMLFormElement"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %54, align 8
  %56 = icmp eq %"class.blink::HTMLFormElement"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %63, align 8
  %65 = icmp eq %"class.blink::HTMLFormElement"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.408"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.408"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.408"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.408"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } undef, %"struct.WTF::KeyValuePair.408"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } %78, %"struct.WTF::KeyValuePair.408"* %77, 1
  ret { %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.413"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_iEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.410"*, %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.413"*, %"struct.WTF::KeyValuePair.413"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.413"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.413"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.410"* %0, %"struct.WTF::KeyValuePair.413"* null)
  %9 = load %"struct.WTF::KeyValuePair.413"*, %"struct.WTF::KeyValuePair.413"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.413"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #15
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.413"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.413"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.413"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #15
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.413"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.413"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.413"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #15
  %72 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.413"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #15
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #15
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.413"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #15
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %79, i64 0, i32 1
  %120 = load i32, i32* %2, align 4
  store i32 %120, i32* %119, align 4
  %121 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.413"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.410"* %0, %"struct.WTF::KeyValuePair.413"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.413"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.413"*, i8 } undef, %"struct.WTF::KeyValuePair.413"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.413"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.413"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.413"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.410"*, %"struct.WTF::KeyValuePair.413"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEjEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.413"*
  %37 = call %"struct.WTF::KeyValuePair.413"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.410"* %0, %"struct.WTF::KeyValuePair.413"* %36, i32 %32, %"struct.WTF::KeyValuePair.413"* %1) #15
  ret %"struct.WTF::KeyValuePair.413"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.413"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.410"*, %"struct.WTF::KeyValuePair.413"*, i32, %"struct.WTF::KeyValuePair.413"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.410", align 8
  %6 = bitcast %"class.WTF::HashTable.410"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.410"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.413"* %1, %"struct.WTF::KeyValuePair.413"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.413"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.410"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.410"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.413"*, %"struct.WTF::KeyValuePair.413"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.413"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.410"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.410"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.413"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.413"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.413"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.413"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.413"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.413"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.413"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.413"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.410"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #15
  %85 = extractvalue { %"struct.WTF::KeyValuePair.413"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #15
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.413"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %74, i64 %77, i32 1
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.413"*, %"struct.WTF::KeyValuePair.413"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.413"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.413"* %85, %"struct.WTF::KeyValuePair.413"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.413"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.413"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.413"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.413"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_jEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IjEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.410"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.413"*, %"struct.WTF::KeyValuePair.413"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.410", %"class.WTF::HashTable.410"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #15
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.413"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.413"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.413"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.413"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.413"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.413"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.413"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.413"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #15
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.413"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.413"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.413"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.413"*, i8 } undef, %"struct.WTF::KeyValuePair.413"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.413"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.413"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.408"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERPS3_S6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.406"*, %"class.blink::HTMLFormElement"** dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.408"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.406"* %0, %"struct.WTF::KeyValuePair.408"* null)
  %9 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.408"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::HTMLFormElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %40, align 8
  %42 = icmp eq %"class.blink::HTMLFormElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::HTMLFormElement"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::HTMLFormElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.408"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.408"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::HTMLFormElement"* %59, %43
  br i1 %64, label %167, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::HTMLFormElement"* %59, inttoptr (i64 -1 to %"class.blink::HTMLFormElement"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.408"* %60, %"struct.WTF::KeyValuePair.408"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %73, align 8
  %75 = icmp eq %"class.blink::HTMLFormElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.408"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.408"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #15
  %80 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::HTMLFormElement"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.408"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::HTMLFormElement"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.408"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::HTMLFormElement"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #15
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %89, i64 0, i32 1
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %102 = bitcast %"class.WTF::AtomicString"* %98 to i64*
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #15
  br label %119

119:                                              ; preds = %97, %115, %118
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %155, label %122

122:                                              ; preds = %119
  %123 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %124 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %123, i64 0, i32 1
  %125 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %124) #15
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %129, !prof !2

127:                                              ; preds = %122
  %128 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %124, i8* %128) #15
  br label %129

129:                                              ; preds = %127, %122
  %130 = phi i8* [ %128, %127 ], [ %125, %122 ]
  %131 = bitcast i8* %130 to %"class.blink::ThreadState"**
  %132 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %132, i64 0, i32 9
  %134 = load i8, i8* %133, align 1, !range !16
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %155, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %132, i64 0, i32 13
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %137, align 8
  %140 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %132, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %140, align 8
  %142 = load atomic i64, i64* %91 monotonic, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %152, label %144

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %141, i64 0, i32 0, i32 0
  %146 = inttoptr i64 %142 to i8*
  %147 = bitcast %"class.blink::MarkingVisitor"* %141 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %148 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %148, i64 5
  %150 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, align 8
  tail call void %150(%"class.blink::Visitor"* %145, i8* nonnull %146, i8* %146, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #15
  %151 = load i64, i64* %137, align 8
  br label %152

152:                                              ; preds = %144, %136
  %153 = phi i64 [ %139, %136 ], [ %151, %144 ]
  %154 = add i64 %153, -1
  store i64 %154, i64* %137, align 8
  br label %155

155:                                              ; preds = %119, %129, %152
  %156 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = add i32 %160, %158
  %162 = shl i32 %161, 1
  %163 = load i32, i32* %12, align 8
  %164 = icmp ult i32 %162, %163
  br i1 %164, label %167, label %165

165:                                              ; preds = %155
  %166 = tail call %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.406"* %0, %"struct.WTF::KeyValuePair.408"* %89)
  br label %167

167:                                              ; preds = %58, %155, %165
  %168 = phi i8 [ 1, %155 ], [ 1, %165 ], [ 0, %58 ]
  %169 = phi %"struct.WTF::KeyValuePair.408"* [ %89, %155 ], [ %166, %165 ], [ %60, %58 ]
  %170 = insertvalue { %"struct.WTF::KeyValuePair.408"*, i8 } undef, %"struct.WTF::KeyValuePair.408"* %169, 0
  %171 = insertvalue { %"struct.WTF::KeyValuePair.408"*, i8 } %170, i8 %168, 1
  ret { %"struct.WTF::KeyValuePair.408"*, i8 } %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.406"*, %"struct.WTF::KeyValuePair.408"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #15
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %23, i8* %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #15
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.406"* %0, i32 %35, %"struct.WTF::KeyValuePair.408"* %1, i8* nonnull dereferenceable(1) %4) #15
  %37 = load i8, i8* %4, align 1, !range !16
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #15
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.408"*
  %44 = call %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.406"* %0, %"struct.WTF::KeyValuePair.408"* %43, i32 %40, %"struct.WTF::KeyValuePair.408"* %1) #15
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.408"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.408"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.406"*, i32, %"struct.WTF::KeyValuePair.408"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #15
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.408"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.408"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #15
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #15
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.408"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.408"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.406"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #15
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.408"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.406"* %0, %"struct.WTF::KeyValuePair.408"* %42, i32 %1, %"struct.WTF::KeyValuePair.408"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.408"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.408"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.408"* %64, %"struct.WTF::KeyValuePair.408"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.408"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.408"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %113

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %45, i64 %59, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %87

87:                                               ; preds = %70, %83, %86
  %88 = load i64, i64* %66, align 8
  %89 = bitcast %"struct.WTF::KeyValuePair.408"* %64 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %45, i64 %59, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %61, i64 %59, i32 1
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.WTF::AtomicString"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.WTF::AtomicString"* %90 to i64*
  store i64 %94, i64* %95, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %96 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %96, i64 %59, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #15
  br label %113

113:                                              ; preds = %112, %109, %87, %68
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.408"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.408"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.406"*, %"struct.WTF::KeyValuePair.408"*, i32, %"struct.WTF::KeyValuePair.408"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.406", align 8
  %6 = bitcast %"class.WTF::HashTable.406"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.406"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.408"* %1, %"struct.WTF::KeyValuePair.408"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.408"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.408"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %19, align 8
  br label %90

21:                                               ; preds = %133
  %22 = bitcast %"class.WTF::HashTable.406"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %134, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.408"* [ null, %15 ], [ %136, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.406"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #15
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.406"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.406"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #15
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.408"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %86, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %84, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %81, %54
  %57 = phi i64 [ 0, %54 ], [ %82, %81 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %50, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair.408"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %61 [
    i64 -1, label %81
    i64 0, label %81
  ]

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %50, i64 %57, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #15
  br label %78

78:                                               ; preds = %77, %74, %61
  store atomic i64 -1, i64* %59 monotonic, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %50, i64 %57, i32 1
  %80 = bitcast %"class.WTF::AtomicString"* %79 to i64*
  store i64 0, i64* %80, align 1
  br label %81

81:                                               ; preds = %78, %56, %56
  %82 = add nuw nsw i64 %57, 1
  %83 = icmp eq i64 %82, %55
  br i1 %83, label %84, label %56

84:                                               ; preds = %81, %52
  %85 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %85) #15
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %86

86:                                               ; preds = %49, %84
  %87 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, -2147483648
  store i32 %89, i32* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.408"* %29

90:                                               ; preds = %18, %133
  %91 = phi i32 [ %13, %18 ], [ %134, %133 ]
  %92 = phi %"struct.WTF::KeyValuePair.408"* [ %20, %18 ], [ %135, %133 ]
  %93 = phi %"struct.WTF::KeyValuePair.408"* [ null, %18 ], [ %136, %133 ]
  %94 = phi i32 [ 0, %18 ], [ %137, %133 ]
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %92, i64 %95
  %97 = bitcast %"struct.WTF::KeyValuePair.408"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  switch i64 %98, label %99 [
    i64 -1, label %133
    i64 0, label %133
  ]

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %96, i64 0, i32 0
  %101 = call { %"struct.WTF::KeyValuePair.408"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.406"* nonnull %5, %"class.blink::Member.45"* dereferenceable(8) %100) #15
  %102 = extractvalue { %"struct.WTF::KeyValuePair.408"*, i8 } %101, 0
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %102, i64 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #15
  br label %119

119:                                              ; preds = %99, %115, %118
  %120 = load i64, i64* %97, align 8
  %121 = bitcast %"struct.WTF::KeyValuePair.408"* %102 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %102, i64 0, i32 1
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %92, i64 %95, i32 1
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.WTF::AtomicString"* %123 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.WTF::AtomicString"* %122 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %124, align 8
  %128 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %19, align 8
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %128, i64 %95
  %130 = icmp eq %"struct.WTF::KeyValuePair.408"* %129, %3
  %131 = select i1 %130, %"struct.WTF::KeyValuePair.408"* %102, %"struct.WTF::KeyValuePair.408"* %93
  %132 = load i32, i32* %12, align 8
  br label %133

133:                                              ; preds = %90, %90, %119
  %134 = phi i32 [ %91, %90 ], [ %132, %119 ], [ %91, %90 ]
  %135 = phi %"struct.WTF::KeyValuePair.408"* [ %92, %90 ], [ %128, %119 ], [ %92, %90 ]
  %136 = phi %"struct.WTF::KeyValuePair.408"* [ %93, %90 ], [ %131, %119 ], [ %93, %90 ]
  %137 = add i32 %94, 1
  %138 = icmp eq i32 %137, %134
  br i1 %138, label %21, label %90
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.19, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS1_12KeyValuePairIS5_NS1_12AtomicStringEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS1_12KeyValuePairIS5_NS1_12AtomicStringEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSD_IS7_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([478 x i8], [478 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS6_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.408"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #15
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.408"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS3_12KeyValuePairIS7_NS3_12AtomicStringEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.408"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %18, %47
  %25 = phi i64 [ %49, %47 ], [ 0, %18 ]
  %26 = phi i32 [ %48, %47 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %22, i64 %25
  %28 = bitcast %"struct.WTF::KeyValuePair.408"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %30 [
    i64 -1, label %47
    i64 0, label %47
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %22, i64 %25, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #15
  br label %47

47:                                               ; preds = %46, %43, %30, %24, %24
  %48 = add i32 %26, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %21, %49
  br i1 %50, label %24, label %51

51:                                               ; preds = %47, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLFormElement"*
  tail call void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.408"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.406"*, %"class.blink::Member.45"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.408"*, %"struct.WTF::KeyValuePair.408"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.45"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.408"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %34, align 8
  %36 = icmp eq %"class.blink::HTMLFormElement"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::HTMLFormElement"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.408"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.408"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.408"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.408"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.408"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::HTMLFormElement"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %67, align 8
  %69 = icmp eq %"class.blink::HTMLFormElement"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::HTMLFormElement"* %63, inttoptr (i64 -1 to %"class.blink::HTMLFormElement"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.408"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %79, align 8
  %81 = icmp eq %"class.blink::HTMLFormElement"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.408"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.408"*, i8 } undef, %"struct.WTF::KeyValuePair.408"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.408"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.408"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.406"*, %"struct.WTF::KeyValuePair.408"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.408"* %1 to i64*
  store atomic i64 -1, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.408", %"struct.WTF::KeyValuePair.408"* %1, i64 0, i32 1
  %22 = bitcast %"class.WTF::AtomicString"* %21 to i64*
  store i64 0, i64* %22, align 1
  %23 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.406", %"class.WTF::HashTable.406"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #15
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #15
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !16
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #15
  %65 = bitcast %"class.blink::HeapHashTableBacking"* %64 to %"struct.WTF::KeyValuePair.408"*
  %66 = tail call %"struct.WTF::KeyValuePair.408"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEENS_12KeyValuePairIS4_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS1_13HeapAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.406"* %0, %"struct.WTF::KeyValuePair.408"* %65, i32 %62, %"struct.WTF::KeyValuePair.408"* null) #15
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.389"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.389"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast %"class.WTF::Vector.389"* %0 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #15
  br label %104

12:                                               ; preds = %2
  %13 = inttoptr i64 %4 to %"class.blink::Member.41"*
  %14 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 1, i64 0
  %15 = bitcast i8* %14 to %"class.blink::Member.41"*
  %16 = icmp eq %"class.blink::Member.41"* %15, %13
  %17 = bitcast %"class.WTF::Vector.389"* %0 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #15
  br i1 %16, label %28, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %4 to i8*
  %24 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %1, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #15
  br label %104

28:                                               ; preds = %12
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %30

30:                                               ; preds = %101, %28
  %31 = phi i64 [ 0, %28 ], [ %102, %101 ]
  %32 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %13, i64 %31
  %33 = bitcast %"class.blink::Member.41"* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %101, label %36

36:                                               ; preds = %30
  %37 = inttoptr i64 %34 to i8*
  %38 = and i64 %34, -131072
  %39 = inttoptr i64 %38 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 4138
  %41 = load i8, i8* %40, align 2
  %42 = icmp eq i8 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = getelementptr inbounds i8, i8* %39, i64 4160
  br label %83

45:                                               ; preds = %36
  %46 = getelementptr inbounds i8, i8* %39, i64 4096
  %47 = bitcast i8* %46 to %"class.blink::NormalPage"*
  %48 = getelementptr inbounds i8, i8* %39, i64 4400
  %49 = bitcast i8* %48 to i8**
  %50 = bitcast i8* %48 to i64*
  %51 = load i64, i64* %50, align 16
  %52 = sub i64 %34, %51
  %53 = lshr i64 %52, 3
  %54 = lshr i64 %52, 6
  %55 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %47, i64 0, i32 2, i32 0, i32 1, i64 %54
  %56 = load atomic i8, i8* %55 acquire, align 1
  %57 = trunc i64 %53 to i32
  %58 = and i32 %57, 7
  %59 = shl i32 2, %58
  %60 = trunc i32 %59 to i8
  %61 = add i8 %60, -1
  %62 = and i8 %61, %56
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %45, %64
  %65 = phi i64 [ %66, %64 ], [ %54, %45 ]
  %66 = add i64 %65, -1
  %67 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %47, i64 0, i32 2, i32 0, i32 1, i64 %66
  %68 = load atomic i8, i8* %67 acquire, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %64, label %70

70:                                               ; preds = %64, %45
  %71 = phi i64 [ %54, %45 ], [ %66, %64 ]
  %72 = phi i8 [ %62, %45 ], [ %68, %64 ]
  %73 = zext i8 %72 to i32
  %74 = tail call i32 @llvm.ctlz.i32(i32 %73, i1 true) #15, !range !34
  %75 = add nsw i32 %74, -24
  %76 = shl i64 %71, 3
  %77 = or i64 %76, 7
  %78 = sext i32 %75 to i64
  %79 = sub i64 %77, %78
  %80 = shl i64 %79, 3
  %81 = load i8*, i8** %49, align 16
  %82 = getelementptr inbounds i8, i8* %81, i64 %80
  br label %83

83:                                               ; preds = %70, %43
  %84 = phi i8* [ %44, %43 ], [ %82, %70 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 8
  %86 = getelementptr inbounds i8, i8* %84, i64 4
  %87 = bitcast i8* %86 to i16*
  %88 = load atomic i16, i16* %87 acquire, align 2
  %89 = lshr i16 %88, 2
  %90 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %91 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %90, i64 0, i32 0
  %92 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %91, align 8
  %93 = zext i16 %89 to i64
  %94 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %92, i64 %93
  %95 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %94, align 8
  %96 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %95, i64 0, i32 0
  %97 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %96, align 8
  %98 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %99 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %98, i64 5
  %100 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %99, align 8
  tail call void %100(%"class.blink::Visitor"* %1, i8* nonnull %37, i8* %85, void (%"class.blink::Visitor"*, i8*)* %97) #15
  br label %101

101:                                              ; preds = %83, %30
  %102 = add nuw nsw i64 %31, 1
  %103 = icmp eq i64 %102, 64
  br i1 %103, label %104, label %30

104:                                              ; preds = %101, %22, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.41"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %101, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %25, %98
  %28 = phi i64 [ %99, %98 ], [ 0, %25 ]
  %29 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.41"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %98, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = and i64 %31, -131072
  %36 = inttoptr i64 %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 4138
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %36, i64 4160
  br label %80

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %36, i64 4096
  %44 = bitcast i8* %43 to %"class.blink::NormalPage"*
  %45 = getelementptr inbounds i8, i8* %36, i64 4400
  %46 = bitcast i8* %45 to i8**
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = sub i64 %31, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %51
  %53 = load atomic i8, i8* %52 acquire, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 2, %55
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, -1
  %59 = and i8 %58, %53
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %42, %61
  %62 = phi i64 [ %63, %61 ], [ %51, %42 ]
  %63 = add i64 %62, -1
  %64 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %63
  %65 = load atomic i8, i8* %64 acquire, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %61, label %67

67:                                               ; preds = %61, %42
  %68 = phi i64 [ %51, %42 ], [ %63, %61 ]
  %69 = phi i8 [ %59, %42 ], [ %65, %61 ]
  %70 = zext i8 %69 to i32
  %71 = tail call i32 @llvm.ctlz.i32(i32 %70, i1 true) #15, !range !34
  %72 = add nsw i32 %71, -24
  %73 = shl i64 %68, 3
  %74 = or i64 %73, 7
  %75 = sext i32 %72 to i64
  %76 = sub i64 %74, %75
  %77 = shl i64 %76, 3
  %78 = load i8*, i8** %46, align 16
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  br label %80

80:                                               ; preds = %67, %40
  %81 = phi i8* [ %41, %40 ], [ %79, %67 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 acquire, align 2
  %86 = lshr i16 %85, 2
  %87 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %88 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %87, i64 0, i32 0
  %89 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %88, align 8
  %90 = zext i16 %86 to i64
  %91 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %89, i64 %90
  %92 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %92, i64 0, i32 0
  %94 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* %82, void (%"class.blink::Visitor"*, i8*)* %94) #15
  br label %98

98:                                               ; preds = %27, %80
  %99 = add nuw nsw i64 %28, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %27

101:                                              ; preds = %98, %20
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.389"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.389"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.389"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %8, align 8
  %10 = icmp eq %"class.blink::Member.41"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 64
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.389"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #15
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.389"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 64, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.41"*
  %33 = icmp eq %"class.blink::Member.41"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 65
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm(i64 %37) #15
  %39 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %8, align 8
  %40 = icmp eq %"class.blink::Member.41"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 512, %34 ]
  %43 = phi %"class.blink::Member.41"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.41"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #15
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #15
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #15
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !16
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #15
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.389"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.389"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 65
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %5, align 8
  %7 = icmp eq %"class.blink::Member.41"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.41"*
  %10 = icmp eq %"class.blink::Member.41"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.389"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.389"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.41"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #15
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.41"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.41"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #15
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #15
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.390"* %20, %"class.blink::Member.41"* %6) #15
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm(i64 %44) #15
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %46) #15
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.41"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !3

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.41"*
  %58 = icmp ne %"class.blink::Member.41"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.41"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #15
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.41"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.41"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.41"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #15
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.389"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #15
  %87 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.41"*
  %90 = icmp eq %"class.blink::Member.41"* %87, %89
  br i1 %90, label %93, label %91, !prof !3

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.390"* %92, %"class.blink::Member.41"* %87) #15
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.389"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #15
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.23, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.24, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ListedElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.390"*, %"class.blink::Member.41"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::Member.41"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.389"*, %"class.blink::ListedElement"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.389"* %0, i32 %5) #15
  %6 = getelementptr inbounds %"class.WTF::Vector.389", %"class.WTF::Vector.389"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.41", %"class.blink::Member.41"* %7, i64 %9
  %11 = bitcast %"class.blink::ListedElement"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member.41"* %10 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #15
  br label %19

19:                                               ; preds = %2, %16
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16FormKeyGeneratorEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16FormKeyGeneratorEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16FormKeyGeneratorEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16FormKeyGeneratorEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16FormKeyGeneratorEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16FormKeyGeneratorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #15
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEENS2_12KeyValuePairIS6_NS2_12AtomicStringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #15
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16FormKeyGeneratorEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 24
  %3 = bitcast i8* %2 to %"struct.WTF::KeyValuePair.413"**
  %4 = load %"struct.WTF::KeyValuePair.413"*, %"struct.WTF::KeyValuePair.413"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.413"* %4, null
  br i1 %5, label %39, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %0, i64 32
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  br label %13

13:                                               ; preds = %34, %11
  %14 = phi i64 [ 0, %11 ], [ %35, %34 ]
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.413", %"struct.WTF::KeyValuePair.413"* %4, i64 %14
  %16 = bitcast %"struct.WTF::KeyValuePair.413"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %"class.WTF::StringImpl"*
  %19 = ptrtoint i8* %17 to i64
  switch i64 %19, label %20 [
    i64 -1, label %34
    i64 0, label %34
  ]

20:                                               ; preds = %13
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %17 to i32*
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %20
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %20
  %31 = phi i32 [ %29, %28 ], [ %27, %20 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #15
  br label %34

34:                                               ; preds = %33, %30, %13, %13
  %35 = add nuw nsw i64 %14, 1
  %36 = icmp eq i64 %35, %12
  br i1 %36, label %37, label %13

37:                                               ; preds = %34, %6
  %38 = bitcast %"struct.WTF::KeyValuePair.413"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #15
  store %"struct.WTF::KeyValuePair.413"* null, %"struct.WTF::KeyValuePair.413"** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16FormKeyGeneratorEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN3WTF7HashMapINS1_12AtomicStringENS_10unique_ptrIN5blink14SavedFormStateENS0_IS6_EEEENS1_16AtomicStringHashENS1_10HashTraitsIS3_EENSA_IS8_EENS1_18PartitionAllocatorEEEEclEPSE_(%"struct.std::__1::default_delete.625"*, %"class.WTF::HashMap.393"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::HashMap.393"* %1, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.397"* %6, null
  br i1 %7, label %43, label %8, !prof !3

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::HashMap.393", %"class.WTF::HashMap.393"* %1, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %41, label %12

12:                                               ; preds = %8
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %38, %12
  %15 = phi i64 [ 0, %12 ], [ %39, %38 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %6, i64 %15
  %17 = bitcast %"struct.WTF::KeyValuePair.397"* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, inttoptr (i64 -1 to i8*)
  br i1 %19, label %38, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %6, i64 %15, i32 1
  tail call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %21, %"class.blink::SavedFormState"* null) #15
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %38

38:                                               ; preds = %37, %34, %20, %14
  %39 = add nuw nsw i64 %15, 1
  %40 = icmp eq i64 %39, %13
  br i1 %40, label %41, label %14

41:                                               ; preds = %38, %8
  %42 = bitcast %"struct.WTF::KeyValuePair.397"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #15
  store %"struct.WTF::KeyValuePair.397"* null, %"struct.WTF::KeyValuePair.397"** %5, align 8
  br label %43

43:                                               ; preds = %4, %41
  %44 = bitcast %"class.WTF::HashMap.393"* %1 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %44) #15
  br label %45

45:                                               ; preds = %43, %2
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.397"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS1_DnEENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.394"*, %"class.WTF::AtomicString"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.397"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.394"* %0, %"struct.WTF::KeyValuePair.397"* null)
  %9 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.397"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.397"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.397"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.397"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %85, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.397"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.397"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.397"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #15
  %66 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"struct.WTF::KeyValuePair.397"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_INSt3__110unique_ptrIN5blink14SavedFormStateENS5_14default_deleteIS8_EEEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_SB_EERKS3_DnEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.397"* dereferenceable(16) %73, %"class.WTF::AtomicString"* dereferenceable(8) %1, i8** dereferenceable(8) %2)
  %74 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, %76
  %80 = shl i32 %79, 1
  %81 = load i32, i32* %12, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %72
  %84 = tail call %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.394"* %0, %"struct.WTF::KeyValuePair.397"* %73)
  br label %85

85:                                               ; preds = %49, %72, %83
  %86 = phi i8 [ 1, %72 ], [ 1, %83 ], [ 0, %49 ]
  %87 = phi %"struct.WTF::KeyValuePair.397"* [ %73, %72 ], [ %84, %83 ], [ %42, %49 ]
  %88 = insertvalue { %"struct.WTF::KeyValuePair.397"*, i8 } undef, %"struct.WTF::KeyValuePair.397"* %87, 0
  %89 = insertvalue { %"struct.WTF::KeyValuePair.397"*, i8 } %88, i8 %86, 1
  ret { %"struct.WTF::KeyValuePair.397"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.394"*, %"struct.WTF::KeyValuePair.397"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([180 x i8], [180 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.397"*
  %37 = call %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.394"* %0, %"struct.WTF::KeyValuePair.397"* %36, i32 %32, %"struct.WTF::KeyValuePair.397"* %1) #15
  ret %"struct.WTF::KeyValuePair.397"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_INSt3__110unique_ptrIN5blink14SavedFormStateENS5_14default_deleteIS8_EEEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_SB_EERKS3_DnEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.397"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #15
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %27 = bitcast %"struct.WTF::KeyValuePair.397"* %0 to i64*
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 %26, i64* %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %44

44:                                               ; preds = %25, %40, %43
  %45 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #15
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::SavedFormState"* null, %"class.blink::SavedFormState"** %47, align 8
  tail call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %46, %"class.blink::SavedFormState"* null) #15
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* nonnull %4, %"class.blink::SavedFormState"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.394"*, %"struct.WTF::KeyValuePair.397"*, i32, %"struct.WTF::KeyValuePair.397"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.394", align 8
  %6 = bitcast %"class.WTF::HashTable.394"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.394"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.397"* %1, %"struct.WTF::KeyValuePair.397"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.397"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.394"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.394"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.397"* %22 to i64
  br label %74

24:                                               ; preds = %92
  %25 = bitcast %"class.WTF::HashTable.394"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.394"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %93, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.397"* [ null, %16 ], [ %96, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %94, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.397"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %70, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %65, %39
  %42 = phi i64 [ 0, %39 ], [ %66, %65 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.397"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %65, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %35, i64 %42, i32 1
  call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %48, %"class.blink::SavedFormState"* null) #15
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #15
  br label %65

65:                                               ; preds = %64, %61, %47, %41
  %66 = add nuw nsw i64 %42, 1
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %68, label %41

68:                                               ; preds = %65, %37
  %69 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %70

70:                                               ; preds = %28, %68
  %71 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, -2147483648
  store i32 %73, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.397"* %33

74:                                               ; preds = %21, %92
  %75 = phi i64 [ %93, %92 ], [ %23, %21 ]
  %76 = phi i32 [ %94, %92 ], [ %13, %21 ]
  %77 = phi %"struct.WTF::KeyValuePair.397"* [ %95, %92 ], [ %22, %21 ]
  %78 = phi %"struct.WTF::KeyValuePair.397"* [ %96, %92 ], [ null, %21 ]
  %79 = phi i32 [ %97, %92 ], [ 0, %21 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %77, i64 %80
  %82 = bitcast %"struct.WTF::KeyValuePair.397"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  switch i64 %83, label %84 [
    i64 -1, label %92
    i64 0, label %92
  ]

84:                                               ; preds = %74
  %85 = call %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8ReinsertEOSA_(%"class.WTF::HashTable.394"* nonnull %5, %"struct.WTF::KeyValuePair.397"* dereferenceable(16) %81)
  %86 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %15, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %86, i64 %80
  %88 = icmp eq %"struct.WTF::KeyValuePair.397"* %87, %3
  %89 = select i1 %88, %"struct.WTF::KeyValuePair.397"* %85, %"struct.WTF::KeyValuePair.397"* %78
  %90 = load i32, i32* %12, align 8
  %91 = ptrtoint %"struct.WTF::KeyValuePair.397"* %86 to i64
  br label %92

92:                                               ; preds = %74, %74, %84
  %93 = phi i64 [ %75, %74 ], [ %91, %84 ], [ %75, %74 ]
  %94 = phi i32 [ %76, %74 ], [ %90, %84 ], [ %76, %74 ]
  %95 = phi %"struct.WTF::KeyValuePair.397"* [ %77, %74 ], [ %86, %84 ], [ %77, %74 ]
  %96 = phi %"struct.WTF::KeyValuePair.397"* [ %78, %74 ], [ %89, %84 ], [ %78, %74 ]
  %97 = add i32 %79, 1
  %98 = icmp eq i32 %97, %94
  br i1 %98, label %24, label %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8ReinsertEOSA_(%"class.WTF::HashTable.394"*, %"struct.WTF::KeyValuePair.397"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, %7
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %4, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.397"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %2
  %22 = xor i32 %13, -1
  %23 = lshr i32 %12, 31
  %24 = add nsw i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %43

35:                                               ; preds = %55
  %36 = ptrtoint %"struct.WTF::KeyValuePair.397"* %61 to i64
  br label %37

37:                                               ; preds = %35, %2
  %38 = phi i64 [ %17, %2 ], [ %36, %35 ]
  %39 = phi %"struct.WTF::KeyValuePair.397"* [ null, %2 ], [ %56, %35 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair.397"* %39, null
  %41 = ptrtoint %"struct.WTF::KeyValuePair.397"* %39 to i64
  %42 = select i1 %40, i64 %38, i64 %41
  br label %66

43:                                               ; preds = %55, %21
  %44 = phi %"struct.WTF::KeyValuePair.397"* [ null, %21 ], [ %56, %55 ]
  %45 = phi i64 [ %17, %21 ], [ %62, %55 ]
  %46 = phi %"struct.WTF::KeyValuePair.397"* [ %16, %21 ], [ %61, %55 ]
  %47 = phi i64 [ %15, %21 ], [ %60, %55 ]
  %48 = phi i64 [ 0, %21 ], [ %58, %55 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.397"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = icmp eq %"class.WTF::StringImpl"* %10, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %52, %43
  %56 = phi %"struct.WTF::KeyValuePair.397"* [ %44, %52 ], [ %46, %43 ]
  %57 = icmp eq i64 %48, 0
  %58 = select i1 %57, i64 %34, i64 %48
  %59 = add i64 %58, %47
  %60 = and i64 %59, %8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %4, i64 %60
  %62 = ptrtoint %"struct.WTF::KeyValuePair.397"* %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %35, label %43

66:                                               ; preds = %52, %37
  %67 = phi i64 [ %42, %37 ], [ %45, %52 ]
  %68 = inttoptr i64 %67 to %"struct.WTF::KeyValuePair.397"*
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %68, i64 0, i32 1
  tail call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %69, %"class.blink::SavedFormState"* null) #15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #15
  br label %86

86:                                               ; preds = %66, %82, %85
  %87 = bitcast %"struct.WTF::KeyValuePair.397"* %1 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = inttoptr i64 %67 to i64*
  store i64 %88, i64* %89, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %1, i64 0, i32 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.blink::SavedFormState"* null, %"class.blink::SavedFormState"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr"* %69 to i64*
  store i64 %93, i64* %94, align 8
  ret %"struct.WTF::KeyValuePair.397"* %68
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_(%"class.WTF::Vector"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !3

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !3

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #15
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #15
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #15
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %58
  tail call void @llvm.trap() #15
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %45, %53, %68
  %71 = load i32, i32* %3, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13DocumentStateEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13DocumentStateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13DocumentStateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13DocumentStateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13DocumentStateEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #15
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to %"class.WTF::Vector.389"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.389"* %14, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13DocumentStateEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = getelementptr inbounds i8, i8* %0, i64 20
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = bitcast i8* %2 to %"class.blink::Member.41"**
  %8 = load %"class.blink::Member.41"*, %"class.blink::Member.41"** %7, align 8
  br i1 %6, label %16, label %9, !prof !2

9:                                                ; preds = %1
  %10 = icmp ne %"class.blink::Member.41"* %8, null
  %11 = getelementptr inbounds i8, i8* %0, i64 24
  %12 = bitcast i8* %11 to %"class.blink::Member.41"*
  %13 = icmp ne %"class.blink::Member.41"* %8, %12
  %14 = and i1 %10, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  store i32 0, i32* %4, align 4
  br label %16

16:                                               ; preds = %1, %15, %9
  %17 = getelementptr inbounds i8, i8* %0, i64 24
  %18 = bitcast i8* %17 to %"class.blink::Member.41"*
  %19 = icmp eq %"class.blink::Member.41"* %8, %18
  br i1 %19, label %22, label %20, !prof !3

20:                                               ; preds = %16
  %21 = bitcast i8* %2 to %"class.WTF::VectorBuffer.390"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13ListedElementEEELj64ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.390"* %21, %"class.blink::Member.41"* %8) #15
  br label %22

22:                                               ; preds = %16, %20
  store %"class.blink::Member.41"* null, %"class.blink::Member.41"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13DocumentStateEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE5eraseEPKSA_(%"class.WTF::HashTable.394"*, %"struct.WTF::KeyValuePair.397"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %1, i64 0, i32 1
  tail call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %3, %"class.blink::SavedFormState"* null) #15
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #15
  br label %20

20:                                               ; preds = %2, %16, %19
  %21 = bitcast %"struct.WTF::KeyValuePair.397"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, 1
  %25 = and i32 %24, 2147483647
  %26 = and i32 %23, -2147483648
  %27 = or i32 %25, %26
  store i32 %27, i32* %22, align 8
  %28 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, -1
  store i32 %30, i32* %28, align 4
  %31 = mul i32 %30, 6
  %32 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp ult i32 %31, %33
  %35 = icmp ugt i32 %33, 8
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %20
  %38 = lshr i32 %33, 1
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  %41 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %40, i8* getelementptr inbounds ([180 x i8], [180 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringENSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %40, i1 false) #15
  %42 = bitcast i8* %41 to %"struct.WTF::KeyValuePair.397"*
  %43 = tail call %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE8RehashToEPSA_jSK_(%"class.WTF::HashTable.394"* %0, %"struct.WTF::KeyValuePair.397"* %42, i32 %38, %"struct.WTF::KeyValuePair.397"* null) #15
  br label %44

44:                                               ; preds = %37, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.397"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERS1_S9_EENS_18HashTableAddResultISJ_SA_EEOT0_OT1_(%"class.WTF::HashTable.394"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.397"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.394"* %0, %"struct.WTF::KeyValuePair.397"* null)
  %9 = load %"struct.WTF::KeyValuePair.397"*, %"struct.WTF::KeyValuePair.397"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.397"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.397"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.397"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.397"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %128, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.397"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.397"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.397"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #15
  %66 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.397"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #15
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  tail call void @llvm.trap() #15
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.397"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #15
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.397", %"struct.WTF::KeyValuePair.397"* %75, i64 0, i32 1
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::SavedFormState"*, %"class.blink::SavedFormState"** %115, align 8
  store %"class.blink::SavedFormState"* null, %"class.blink::SavedFormState"** %115, align 8
  tail call void @_ZNSt3__110unique_ptrIN5blink14SavedFormStateENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr"* %114, %"class.blink::SavedFormState"* %116) #15
  %117 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %117, align 4
  %120 = getelementptr inbounds %"class.WTF::HashTable.394", %"class.WTF::HashTable.394"* %0, i64 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = add i32 %121, %119
  %123 = shl i32 %122, 1
  %124 = load i32, i32* %12, align 8
  %125 = icmp ult i32 %123, %124
  br i1 %125, label %128, label %126

126:                                              ; preds = %113
  %127 = tail call %"struct.WTF::KeyValuePair.397"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink14SavedFormStateENS3_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.394"* %0, %"struct.WTF::KeyValuePair.397"* %75)
  br label %128

128:                                              ; preds = %49, %113, %126
  %129 = phi i8 [ 1, %113 ], [ 1, %126 ], [ 0, %49 ]
  %130 = phi %"struct.WTF::KeyValuePair.397"* [ %75, %113 ], [ %127, %126 ], [ %42, %49 ]
  %131 = insertvalue { %"struct.WTF::KeyValuePair.397"*, i8 } undef, %"struct.WTF::KeyValuePair.397"* %130, 0
  %132 = insertvalue { %"struct.WTF::KeyValuePair.397"*, i8 } %131, i8 %129, 1
  ret { %"struct.WTF::KeyValuePair.397"*, i8 } %132
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14FormControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::FormController"**
  %5 = load %"class.blink::FormController"*, %"class.blink::FormController"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #15
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #15
  %7 = icmp eq %"class.blink::FormController"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::FormController"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14FormControllerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #15
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #15
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14FormControllerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #15
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DocumentStateEE5TraceEPNS_7VisitorEPKv) #15
  br label %23

23:                                               ; preds = %17, %12
  %24 = getelementptr inbounds i8, i8* %1, i64 40
  %25 = bitcast i8* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %0, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16FormKeyGeneratorEE5TraceEPNS_7VisitorEPKv) #15
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14FormControllerEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::FormController"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::FormController"*)**
  %21 = load void (%"class.blink::FormController"*)*, void (%"class.blink::FormController"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::FormController"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::FormController"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::FormController"* %12) #15
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink14FormControllerEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.631"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink14FormControllerEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #15
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.631"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #15
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #15
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #15
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.632"**
  store %"class.blink::PersistentBase.632"* %11, %"class.blink::PersistentBase.632"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14FormControllerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink14FormControllerEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #15
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #15
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.45"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.637"*, %"class.blink::HTMLFormElement"** dereferenceable(8), %"class.blink::HTMLFormElement"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %4, align 8
  %6 = icmp eq %"class.blink::Member.45"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.637"* %0, %"class.blink::Member.45"* null)
  %9 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.45"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::HTMLFormElement"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %40, align 8
  %42 = icmp eq %"class.blink::HTMLFormElement"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::HTMLFormElement"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::HTMLFormElement"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.45"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.45"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::HTMLFormElement"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::HTMLFormElement"* %59, inttoptr (i64 -1 to %"class.blink::HTMLFormElement"*)
  %67 = select i1 %66, %"class.blink::Member.45"* %60, %"class.blink::Member.45"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %73, align 8
  %75 = icmp eq %"class.blink::HTMLFormElement"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.45"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.45"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #15
  %80 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.45"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %2, align 8
  %89 = ptrtoint %"class.blink::HTMLFormElement"* %88 to i64
  %90 = bitcast %"class.blink::Member.45"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::HTMLFormElement"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #15
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.45"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #15
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.637"* %0, %"class.blink::Member.45"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.45"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.45"*, i8 } undef, %"class.blink::Member.45"* %117, 0
  %119 = insertvalue { %"class.blink::Member.45"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.45"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.637"*, %"class.blink::Member.45"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #15
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %23, i8* %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #15
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.637"* %0, i32 %35, %"class.blink::Member.45"* %1, i8* nonnull dereferenceable(1) %4) #15
  %37 = load i8, i8* %4, align 1, !range !16
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.777"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #15
  %43 = bitcast %"class.blink::HeapHashTableBacking.777"* %42 to %"class.blink::Member.45"*
  %44 = call %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.637"* %0, %"class.blink::Member.45"* %43, i32 %40, %"class.blink::Member.45"* %1) #15
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.45"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.45"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.637"*, i32, %"class.blink::Member.45"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #15
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !16
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %31, align 8
  %33 = icmp eq %"class.blink::Member.45"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.45"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #15
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.777"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #15
  %45 = bitcast %"class.blink::HeapHashTableBacking.777"* %44 to %"class.blink::Member.45"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.45"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.45"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.45"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.45"* %61, %"class.blink::Member.45"* %55
  %63 = bitcast %"class.blink::Member.45"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.45"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.45"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.637"* %0 to %"class.blink::HeapHashTableBacking.777"**
  store %"class.blink::HeapHashTableBacking.777"* %44, %"class.blink::HeapHashTableBacking.777"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.777", %"class.blink::HeapHashTableBacking.777"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #15
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.45"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.637"* %0, %"class.blink::Member.45"* %42, i32 %1, %"class.blink::Member.45"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.45"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.45"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.45"* %87, %"class.blink::Member.45"* %82
  %89 = bitcast %"class.blink::Member.45"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.45"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.45"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.45"* %99, %"class.blink::Member.45"* %88
  %101 = bitcast %"class.blink::Member.45"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.45"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.45"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.45"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.45"* @_ZN3WTF9HashTableIN5blink6MemberINS1_15HTMLFormElementEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.637"*, %"class.blink::Member.45"*, i32, %"class.blink::Member.45"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.45"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.45"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.45"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #15
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.637"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.45"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #15
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.45"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.45"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #15
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.637", %"class.WTF::HashTable.637"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.45"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.45"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.45"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.45"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.45"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %70, align 8
  %72 = icmp eq %"class.blink::HTMLFormElement"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::HTMLFormElement"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.45"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.45"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.45"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.45"* %93, null
  %95 = ptrtoint %"class.blink::Member.45"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::HTMLFormElement"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::HTMLFormElement"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::HTMLFormElement"* %99, inttoptr (i64 -1 to %"class.blink::HTMLFormElement"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.45"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %113, align 8
  %115 = icmp eq %"class.blink::HTMLFormElement"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.45"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.45"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.45"* %118, %"class.blink::Member.45"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.45"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.45"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.777"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.19, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([371 x i8], [371 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_15HTMLFormElementEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking.777"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking.777"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.45"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #15
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.45"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_15HTMLFormElementEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE3endEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!15 = distinct !{!15, !"_ZNK3WTF5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEE3endEv"}
!16 = !{i8 0, i8 2}
!17 = !{!"branch_weights", i32 1, i32 1048575}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink22WrapPersistentInternalINS_14FormControllerEEENS_10PersistentIT_EEPS3_: argument 0"}
!20 = distinct !{!20, !"_ZN5blink22WrapPersistentInternalINS_14FormControllerEEENS_10PersistentIT_EEPS3_"}
!21 = !{!22, !24, !26}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14FormControllerEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14FormControllerEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base8BindOnceIMN5blink14FormControllerEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8BindOnceIMN5blink14FormControllerEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!26 = distinct !{!26, !27, !"_ZN3WTF4BindIMN5blink14FormControllerEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF4BindIMN5blink14FormControllerEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTF17GenericHashTraitsIN5blink10ControlKeyEE10EmptyValueEv: argument 0"}
!30 = distinct !{!30, !"_ZN3WTF17GenericHashTraitsIN5blink10ControlKeyEE10EmptyValueEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN3WTF17GenericHashTraitsINS_5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEEE10EmptyValueEv: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF17GenericHashTraitsINS_5DequeIN5blink16FormControlStateELj0ENS_18PartitionAllocatorEEEE10EmptyValueEv"}
!34 = !{i32 24, i32 33}
